(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@T T@T) T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@186 (T@U T@U) Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 (T@T T@U T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@211 (Int) Int)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 (T@U T@U T@U) Bool)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@230 (T@T) T@U)
(declare-fun $generated@@231 (T@U) Int)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@253 (T@T) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@T T@T) T@U)
(declare-fun $generated@@260 (T@T T@T) T@T)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@T T@T) T@U)
(declare-fun $generated@@278 (T@T T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@294 (T@U T@U) Bool)
(declare-fun $generated@@303 (T@T T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@373 (T@U T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@T) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@421 () T@T)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@464 (T@U Int) T@U)
(declare-fun $generated@@473 (T@U) Int)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@518 (T@U T@U T@U) T@U)
(declare-fun $generated@@519 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@520 (T@T T@T) T@T)
(declare-fun $generated@@521 (T@T) T@T)
(declare-fun $generated@@522 (T@T) T@T)
(declare-fun $generated@@523 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@630 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@74 $generated@@81))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@63) $generated@@77)) (= (type $generated@@64) $generated@@73)) (= ($generated@@1 $generated@@78) 11)) (= (type $generated@@65) $generated@@78)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@79) 12)) (= (type $generated@@68) $generated@@79)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (= ($generated@@82 $generated@@60) 0))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@73)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@76)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@89 $generated@@98 $generated@@99)) 13)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@92 ($generated@@89 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@89 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@93 ($generated@@89 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@89 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@93 (type $generated@@104))))
(= (type ($generated@@94 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@94 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@95 $generated@@107 $generated@@108 $generated@@109)) ($generated@@89 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@95 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@93 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@94 ($generated@@95 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@94 ($generated@@95 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@94 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@94 $generated@@121 $generated@@123)))
 :weight 0
)))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@75 (type $generated@@125))))
(= (type ($generated@@96 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@96 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@91) 15)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@97 $generated@@127 $generated@@128 $generated@@129)) $generated@@91)
 :pattern ( ($generated@@97 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@75 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@96 ($generated@@97 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 ($generated@@97 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@96 $generated@@139 $generated@@141)))
 :weight 0
)))) (forall (($generated@@142 Int) ) (! (= (type ($generated@@88 $generated@@142)) $generated@@72)
 :pattern ( ($generated@@88 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
 :pattern ( ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@147) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@90) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (= (type $generated@@149) $generated@@72))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@150 $generated@@149 $generated@@151))
 :pattern ( ($generated@@87 $generated@@150 $generated@@149 $generated@@151))
)))
(assert  (and (= (type $generated@@152) $generated@@72) (= (type $generated@@153) $generated@@90)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@90) (= (type $generated@@155) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@154 $generated@@152 $generated@@155)  (or (= $generated@@154 $generated@@153) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@155 $generated@@154) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@154 $generated@@152 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= (type $generated@@157) $generated@@2) ($generated@@156 $generated@@157 ($generated@@88 0)))
 :pattern ( ($generated@@156 $generated@@157 ($generated@@88 0)))
)))
(assert  (and (= ($generated@@1 $generated@@160) 16) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@161 $generated@@162)) $generated@@72)
 :pattern ( ($generated@@159 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@72) (= (type $generated@@164) $generated@@72)) (= (type $generated@@165) $generated@@160)) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164))) ($generated@@158 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165) ($generated@@156 $generated@@165 ($generated@@159 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 17) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@160) (= (type $generated@@173) $generated@@160)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@72)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@89 $generated@@169 $generated@@2)) (= (type $generated@@178) $generated@@72)) ($generated@@156 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@156 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@72)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@90) (= ($generated@@156 $generated@@181 $generated@@152)  (or (= $generated@@181 $generated@@153) (= ($generated@@179 $generated@@181) $generated@@152))))
 :pattern ( ($generated@@156 $generated@@181 $generated@@152))
)))
(assert (= (type $generated@@182) $generated@@72))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (= (type $generated@@183) $generated@@90) (= (type $generated@@184) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@183 $generated@@182 $generated@@184) ($generated@@87 $generated@@183 $generated@@152 $generated@@184)))
 :pattern ( ($generated@@87 $generated@@183 $generated@@182 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@187 $generated@@188)) $generated@@160)
 :pattern ( ($generated@@185 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (and (= (type $generated@@189) $generated@@72) (= (type $generated@@190) $generated@@72)) (= (type $generated@@191) $generated@@169)) (= (type $generated@@192) $generated@@169)) (= ($generated@@156 ($generated@@185 $generated@@191 $generated@@192) ($generated@@159 $generated@@189 $generated@@190))  (and ($generated@@186 $generated@@191 $generated@@189) ($generated@@186 $generated@@192 $generated@@190))))
 :pattern ( ($generated@@156 ($generated@@185 $generated@@191 $generated@@192) ($generated@@159 $generated@@189 $generated@@190)))
)))
(assert (= (type $generated@@193) ($generated@@74 $generated@@2)))
(assert (= ($generated@@82 $generated@@193) 0))
(assert (forall (($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@74 $generated@@195))
 :pattern ( ($generated@@194 $generated@@195 $generated@@196 $generated@@197))
)))
(assert (= ($generated@@194 $generated@@2 $generated@@65 $generated@@71) $generated@@193))
(assert  (not ($generated@@198 $generated@@193)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) $generated@@160) (= (type $generated@@200) $generated@@160)) (= ($generated@@166 $generated@@199 $generated@@200) (= $generated@@199 $generated@@200)))
 :pattern ( ($generated@@166 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@201 $generated@@202)) $generated@@72)
 :pattern ( ($generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@203) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@204) $generated@@72)) (= ($generated@@156 $generated@@203 ($generated@@201 $generated@@204)) (forall (($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@205) $generated@@169) ($generated@@0 ($generated@@94 $generated@@203 $generated@@205))) ($generated@@186 $generated@@205 $generated@@204))
 :pattern ( ($generated@@94 $generated@@203 $generated@@205))
))))
 :pattern ( ($generated@@156 $generated@@203 ($generated@@201 $generated@@204)))
)))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@206 $generated@@207)) $generated@@72)
 :pattern ( ($generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@208) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@209) $generated@@72)) (= ($generated@@156 $generated@@208 ($generated@@206 $generated@@209)) (forall (($generated@@210 T@U) ) (!  (=> (and (= (type $generated@@210) $generated@@169) ($generated@@0 ($generated@@94 $generated@@208 $generated@@210))) ($generated@@186 $generated@@210 $generated@@209))
 :pattern ( ($generated@@94 $generated@@208 $generated@@210))
))))
 :pattern ( ($generated@@156 $generated@@208 ($generated@@206 $generated@@209)))
)))
(assert (forall (($generated@@212 Int) ) (! (= ($generated@@211 $generated@@212) $generated@@212)
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(= (type ($generated@@213 $generated@@214)) $generated@@215))
 :pattern ( ($generated@@213 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (= ($generated@@213 $generated@@216) $generated@@216)
 :pattern ( ($generated@@213 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@219) $generated@@72) (= (type $generated@@220) $generated@@72)) (= (type $generated@@221) $generated@@169)) (= (type $generated@@222) $generated@@169)) (= (type $generated@@223) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@217 $generated@@223)) (= ($generated@@87 ($generated@@185 $generated@@221 $generated@@222) ($generated@@159 $generated@@219 $generated@@220) $generated@@223)  (and ($generated@@218 $generated@@221 $generated@@219 $generated@@223) ($generated@@218 $generated@@222 $generated@@220 $generated@@223))))
 :pattern ( ($generated@@87 ($generated@@185 $generated@@221 $generated@@222) ($generated@@159 $generated@@219 $generated@@220) $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@224 $generated@@225)) $generated@@77)
 :pattern ( ($generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ) (!  (=> (= (type $generated@@226) $generated@@160) (= ($generated@@158 $generated@@226) (= ($generated@@224 $generated@@226) $generated@@63)))
 :pattern ( ($generated@@158 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@160) ($generated@@158 $generated@@227)) (exists (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (and (and (= (type $generated@@228) $generated@@169) (= (type $generated@@229) $generated@@169)) (= $generated@@227 ($generated@@185 $generated@@228 $generated@@229)))
 :no-pattern (type $generated@@228)
 :no-pattern (type $generated@@229)
 :no-pattern ($generated $generated@@228)
 :no-pattern ($generated@@0 $generated@@228)
 :no-pattern ($generated $generated@@229)
 :no-pattern ($generated@@0 $generated@@229)
)))
 :pattern ( ($generated@@158 $generated@@227))
)))
(assert  (and (and (forall (($generated@@234 T@T) ) (= ($generated@@1 ($generated@@232 $generated@@234)) 18)) (forall (($generated@@235 T@T) ) (! (= ($generated@@233 ($generated@@232 $generated@@235)) $generated@@235)
 :pattern ( ($generated@@232 $generated@@235))
))) (forall (($generated@@236 T@T) ) (! (= (type ($generated@@230 $generated@@236)) ($generated@@232 $generated@@236))
 :pattern ( ($generated@@230 $generated@@236))
))))
(assert (forall (($generated@@237 T@T) ) (! (= ($generated@@231 ($generated@@230 $generated@@237)) 0)
 :pattern ( ($generated@@230 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ) (!  (=> (= (type $generated@@238) $generated@@2) (= ($generated@@156 $generated@@238 $generated@@149) (<= ($generated@@211 0) ($generated $generated@@238))))
 :pattern ( ($generated@@156 $generated@@238 $generated@@149))
)))
(assert ($generated@@198 $generated@@60))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@169)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@72) (= (type $generated@@243) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@218 ($generated@@239 $generated@@241) $generated@@242 $generated@@243) ($generated@@87 $generated@@241 $generated@@242 $generated@@243)))
 :pattern ( ($generated@@218 ($generated@@239 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@245) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@246) $generated@@169)) (= (type $generated@@247) $generated@@72)) ($generated@@145 $generated@@244 $generated@@245)) ($generated@@218 $generated@@246 $generated@@247 $generated@@244)) ($generated@@218 $generated@@246 $generated@@247 $generated@@245))
 :pattern ( ($generated@@145 $generated@@244 $generated@@245) ($generated@@218 $generated@@246 $generated@@247 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@248) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@249) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@251) $generated@@72)) ($generated@@145 $generated@@248 $generated@@249)) ($generated@@87 $generated@@250 $generated@@251 $generated@@248)) ($generated@@87 $generated@@250 $generated@@251 $generated@@249))
 :pattern ( ($generated@@145 $generated@@248 $generated@@249) ($generated@@87 $generated@@250 $generated@@251 $generated@@248))
)))
(assert (forall (($generated@@254 T@T) ) (! (= (type ($generated@@253 $generated@@254)) ($generated@@89 $generated@@254 $generated@@2))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@92 (type $generated@@255))))
 (=> (= (type $generated@@255) ($generated@@89 $generated@@256 $generated@@2)) (and (= (= ($generated@@252 $generated@@255) 0) (= $generated@@255 ($generated@@253 $generated@@256))) (=> (not (= ($generated@@252 $generated@@255) 0)) (exists (($generated@@257 T@U) ) (!  (and (= (type $generated@@257) $generated@@256) (< 0 ($generated ($generated@@94 $generated@@255 $generated@@257))))
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
))))))
 :pattern ( ($generated@@252 $generated@@255))
)))
(assert  (and (and (and (and (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@263 $generated@@264)) 19)) (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@265 $generated@@266)) $generated@@265)
 :pattern ( ($generated@@260 $generated@@265 $generated@@266))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@260 $generated@@267 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@260 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@261 (type $generated@@269))))
(= (type ($generated@@258 $generated@@269)) ($generated@@89 $generated@@270 $generated@@4)))
 :pattern ( ($generated@@258 $generated@@269))
))) (forall (($generated@@271 T@T) ($generated@@272 T@T) ) (! (= (type ($generated@@259 $generated@@271 $generated@@272)) ($generated@@260 $generated@@271 $generated@@272))
 :pattern ( ($generated@@259 $generated@@271 $generated@@272))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@T) ) (! (let (($generated@@275 (type $generated@@273)))
 (not ($generated@@0 ($generated@@94 ($generated@@258 ($generated@@259 $generated@@275 $generated@@274)) $generated@@273))))
 :pattern ( (let (($generated@@275 (type $generated@@273)))
($generated@@94 ($generated@@258 ($generated@@259 $generated@@275 $generated@@274)) $generated@@273)))
)))
(assert  (and (and (and (and (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@281 $generated@@282)) 20)) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@278 $generated@@285 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@279 (type $generated@@287))))
(= (type ($generated@@276 $generated@@287)) ($generated@@89 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@276 $generated@@287))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= (type ($generated@@277 $generated@@289 $generated@@290)) ($generated@@278 $generated@@289 $generated@@290))
 :pattern ( ($generated@@277 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@T) ) (! (let (($generated@@293 (type $generated@@291)))
 (not ($generated@@0 ($generated@@94 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291))))
 :pattern ( (let (($generated@@293 (type $generated@@291)))
($generated@@94 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291)))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@296) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@294 $generated@@295 $generated@@296)) (and ($generated@@145 $generated@@295 $generated@@296) (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@75 (type $generated@@298))))
 (=> (and (and (= (type $generated@@297) $generated@@90) (= (type $generated@@298) ($generated@@74 $generated@@299))) (not ($generated@@198 $generated@@298))) (= ($generated@@96 ($generated@@94 $generated@@295 $generated@@297) $generated@@298) ($generated@@96 ($generated@@94 $generated@@296 $generated@@297) $generated@@298))))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@296 $generated@@297) $generated@@298))
))))
 :pattern ( ($generated@@294 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@92 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@89 $generated@@301 $generated@@2)) (= ($generated@@175 $generated@@300) (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@301) (and (<= 0 ($generated ($generated@@94 $generated@@300 $generated@@302))) (<= ($generated ($generated@@94 $generated@@300 $generated@@302)) ($generated@@252 $generated@@300))))
 :pattern ( ($generated@@94 $generated@@300 $generated@@302))
)))))
 :pattern ( ($generated@@175 $generated@@300))
)))
(assert (forall (($generated@@304 T@T) ($generated@@305 T@U) ) (! (= (type ($generated@@303 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@169) ($generated@@186 $generated@@306 $generated@@149)) (and (= ($generated@@239 ($generated@@303 $generated@@2 $generated@@306)) $generated@@306) ($generated@@156 ($generated@@303 $generated@@2 $generated@@306) $generated@@149)))
 :pattern ( ($generated@@186 $generated@@306 $generated@@149))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@169) ($generated@@186 $generated@@307 $generated@@152)) (and (= ($generated@@239 ($generated@@303 $generated@@90 $generated@@307)) $generated@@307) ($generated@@156 ($generated@@303 $generated@@90 $generated@@307) $generated@@152)))
 :pattern ( ($generated@@186 $generated@@307 $generated@@152))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@169) ($generated@@186 $generated@@308 $generated@@182)) (and (= ($generated@@239 ($generated@@303 $generated@@90 $generated@@308)) $generated@@308) ($generated@@156 ($generated@@303 $generated@@90 $generated@@308) $generated@@182)))
 :pattern ( ($generated@@186 $generated@@308 $generated@@182))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@90) (= ($generated@@156 $generated@@309 $generated@@182)  (and ($generated@@156 $generated@@309 $generated@@152) (not (= $generated@@309 $generated@@153)))))
 :pattern ( ($generated@@156 $generated@@309 $generated@@182))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@262 (type $generated@@310))))
(let (($generated@@312 ($generated@@261 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@260 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@259 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) ($generated@@0 ($generated@@94 ($generated@@258 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@258 $generated@@310))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@262 (type $generated@@315))))
(= (type ($generated@@314 $generated@@315)) ($generated@@89 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@262 (type $generated@@317))))
(let (($generated@@319 ($generated@@261 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@260 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@259 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@318) ($generated@@0 ($generated@@94 ($generated@@314 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@280 (type $generated@@321))))
(let (($generated@@323 ($generated@@279 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@278 $generated@@323 $generated@@322)) (or (= $generated@@321 ($generated@@277 $generated@@323 $generated@@322)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) ($generated@@0 ($generated@@94 ($generated@@276 $generated@@321) $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@276 $generated@@321))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@280 (type $generated@@326))))
(= (type ($generated@@325 $generated@@326)) ($generated@@89 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@280 (type $generated@@328))))
(let (($generated@@330 ($generated@@279 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@278 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@277 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@329) ($generated@@0 ($generated@@94 ($generated@@325 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@325 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) ($generated@@89 $generated@@169 $generated@@2)) (= (type $generated@@333) $generated@@72)) (= ($generated@@156 $generated@@332 ($generated@@174 $generated@@333)) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@169) (< 0 ($generated ($generated@@94 $generated@@332 $generated@@334)))) ($generated@@186 $generated@@334 $generated@@333))
 :pattern ( ($generated@@94 $generated@@332 $generated@@334))
))))
 :pattern ( ($generated@@156 $generated@@332 ($generated@@174 $generated@@333)))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@336) $generated@@90)) (=> (and (and ($generated@@217 $generated@@335) (and (not (= $generated@@336 $generated@@153)) (= ($generated@@179 $generated@@336) $generated@@152))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@335 $generated@@336) $generated@@60))) ($generated@@87 ($generated@@96 ($generated@@94 $generated@@335 $generated@@336) $generated@@193) $generated@@149 $generated@@335)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@335 $generated@@336) $generated@@193))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@338) $generated@@72)) (= (type $generated@@339) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@337 ($generated@@201 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@169) ($generated@@0 ($generated@@94 $generated@@337 $generated@@340))) ($generated@@218 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@94 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@87 $generated@@337 ($generated@@201 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@89 $generated@@169 $generated@@4)) (= (type $generated@@342) $generated@@72)) (= (type $generated@@343) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@341 ($generated@@206 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@169) ($generated@@0 ($generated@@94 $generated@@341 $generated@@344))) ($generated@@218 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@94 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@87 $generated@@341 ($generated@@206 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 (type $generated@@345)))
(= ($generated ($generated@@94 ($generated@@253 $generated@@346) $generated@@345)) 0))
 :pattern ( (let (($generated@@346 (type $generated@@345)))
($generated@@94 ($generated@@253 $generated@@346) $generated@@345)))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) ($generated@@89 $generated@@169 $generated@@4))
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@262 (type $generated@@350))))
(let (($generated@@352 ($generated@@261 (type $generated@@350))))
(= (type ($generated@@348 $generated@@350)) ($generated@@89 $generated@@352 $generated@@351))))
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@260 $generated@@169 $generated@@169)) (= (type $generated@@354) $generated@@169)) (= ($generated@@0 ($generated@@94 ($generated@@347 $generated@@353) $generated@@354))  (and ($generated@@0 ($generated@@94 ($generated@@258 $generated@@353) ($generated@@167 ($generated@@303 $generated@@160 $generated@@354)))) (= ($generated@@94 ($generated@@348 $generated@@353) ($generated@@167 ($generated@@303 $generated@@160 $generated@@354))) ($generated@@168 ($generated@@303 $generated@@160 $generated@@354))))))
 :pattern ( ($generated@@94 ($generated@@347 $generated@@353) $generated@@354))
)))
(assert  (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@357)) ($generated@@89 $generated@@169 $generated@@4))
 :pattern ( ($generated@@355 $generated@@357))
)) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@280 (type $generated@@358))))
(let (($generated@@360 ($generated@@279 (type $generated@@358))))
(= (type ($generated@@356 $generated@@358)) ($generated@@89 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@356 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@278 $generated@@169 $generated@@169)) (= (type $generated@@362) $generated@@169)) (= ($generated@@0 ($generated@@94 ($generated@@355 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@94 ($generated@@276 $generated@@361) ($generated@@167 ($generated@@303 $generated@@160 $generated@@362)))) (= ($generated@@94 ($generated@@356 $generated@@361) ($generated@@167 ($generated@@303 $generated@@160 $generated@@362))) ($generated@@168 ($generated@@303 $generated@@160 $generated@@362))))))
 :pattern ( ($generated@@94 ($generated@@355 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@261 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@260 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@94 ($generated@@314 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@94 ($generated@@258 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@94 ($generated@@348 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@94 ($generated@@258 $generated@@363) $generated@@367))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@94 ($generated@@314 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@279 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@278 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@94 ($generated@@325 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@94 ($generated@@276 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@94 ($generated@@356 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@94 ($generated@@276 $generated@@368) $generated@@372))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@94 ($generated@@325 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@72)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (and (= (type $generated@@376) ($generated@@260 $generated@@169 $generated@@169)) (= (type $generated@@377) $generated@@72)) (= (type $generated@@378) $generated@@72)) (= (type $generated@@379) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@258 $generated@@376) $generated@@380))) (and ($generated@@218 ($generated@@94 ($generated@@348 $generated@@376) $generated@@380) $generated@@378 $generated@@379) ($generated@@218 $generated@@380 $generated@@377 $generated@@379)))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@376) $generated@@380))
 :pattern ( ($generated@@94 ($generated@@258 $generated@@376) $generated@@380))
))))
 :pattern ( ($generated@@87 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@72)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@278 $generated@@169 $generated@@169)) (= (type $generated@@385) $generated@@72)) (= (type $generated@@386) $generated@@72)) (= (type $generated@@387) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@276 $generated@@384) $generated@@388))) (and ($generated@@218 ($generated@@94 ($generated@@356 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@218 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@384) $generated@@388))
 :pattern ( ($generated@@94 ($generated@@276 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@87 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@389) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@390) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@391) ($generated@@89 $generated@@90 $generated@@91))) (not (= $generated@@389 $generated@@391))) (and ($generated@@145 $generated@@389 $generated@@390) ($generated@@145 $generated@@390 $generated@@391))) ($generated@@145 $generated@@389 $generated@@391))
 :pattern ( ($generated@@145 $generated@@389 $generated@@390) ($generated@@145 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@T) ) (! (= (type ($generated@@392 $generated@@393)) ($generated@@89 $generated@@393 $generated@@4))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@280 (type $generated@@394))))
(let (($generated@@396 ($generated@@279 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@278 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@277 $generated@@396 $generated@@395)) (= ($generated@@276 $generated@@394) ($generated@@392 $generated@@396))))))
 :pattern ( ($generated@@276 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@280 (type $generated@@397))))
(let (($generated@@399 ($generated@@279 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@278 $generated@@399 $generated@@398)) (= (= $generated@@397 ($generated@@277 $generated@@399 $generated@@398)) (= ($generated@@325 $generated@@397) ($generated@@392 $generated@@398))))))
 :pattern ( ($generated@@325 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@280 (type $generated@@400))))
(let (($generated@@402 ($generated@@279 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@278 $generated@@402 $generated@@401)) (= (= $generated@@400 ($generated@@277 $generated@@402 $generated@@401)) (= ($generated@@355 $generated@@400) ($generated@@392 $generated@@169))))))
 :pattern ( ($generated@@355 $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@262 (type $generated@@403))))
(let (($generated@@405 ($generated@@261 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@260 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@259 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (and (and (= (type $generated@@406) $generated@@169) (= (type $generated@@407) $generated@@169)) ($generated@@0 ($generated@@94 ($generated@@347 $generated@@403) ($generated@@239 ($generated@@185 $generated@@406 $generated@@407)))))
 :no-pattern (type $generated@@406)
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@347 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@280 (type $generated@@408))))
(let (($generated@@410 ($generated@@279 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@278 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@277 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (and (and (= (type $generated@@411) $generated@@169) (= (type $generated@@412) $generated@@169)) ($generated@@0 ($generated@@94 ($generated@@355 $generated@@408) ($generated@@239 ($generated@@185 $generated@@411 $generated@@412)))))
 :no-pattern (type $generated@@411)
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@355 $generated@@408))
)))
(assert (forall (($generated@@414 T@U) ) (! (= (type ($generated@@413 $generated@@414)) $generated@@78)
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@T) ) (!  (=> (and (= (type $generated@@415) $generated@@78) (= (type $generated@@416) $generated@@76)) (and (= ($generated@@413 ($generated@@194 $generated@@417 $generated@@415 $generated@@416)) $generated@@415) (= ($generated@@85 ($generated@@194 $generated@@417 $generated@@415 $generated@@416)) $generated@@416)))
 :pattern ( ($generated@@194 $generated@@417 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@169) ($generated@@186 $generated@@418 $generated@@46)) (and (= ($generated@@239 ($generated@@303 $generated@@2 $generated@@418)) $generated@@418) ($generated@@156 ($generated@@303 $generated@@2 $generated@@418) $generated@@46)))
 :pattern ( ($generated@@186 $generated@@418 $generated@@46))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@169) ($generated@@186 $generated@@419 $generated@@47)) (and (= ($generated@@239 ($generated@@303 $generated@@3 $generated@@419)) $generated@@419) ($generated@@156 ($generated@@303 $generated@@3 $generated@@419) $generated@@47)))
 :pattern ( ($generated@@186 $generated@@419 $generated@@47))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@169) ($generated@@186 $generated@@420 $generated@@44)) (and (= ($generated@@239 ($generated@@303 $generated@@4 $generated@@420)) $generated@@420) ($generated@@156 ($generated@@303 $generated@@4 $generated@@420) $generated@@44)))
 :pattern ( ($generated@@186 $generated@@420 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@421) 21))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@169) ($generated@@186 $generated@@422 $generated@@45)) (and (= ($generated@@239 ($generated@@303 $generated@@421 $generated@@422)) $generated@@422) ($generated@@156 ($generated@@303 $generated@@421 $generated@@422) $generated@@45)))
 :pattern ( ($generated@@186 $generated@@422 $generated@@45))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@72) (= ($generated@@186 ($generated@@239 $generated@@423) $generated@@424) ($generated@@156 $generated@@423 $generated@@424)))
 :pattern ( ($generated@@186 ($generated@@239 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@92 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@89 $generated@@426 $generated@@2)) (<= 0 ($generated@@252 $generated@@425))))
 :pattern ( ($generated@@252 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@233 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@232 $generated@@428)) (<= 0 ($generated@@231 $generated@@427))))
 :pattern ( ($generated@@231 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (= (type ($generated@@429 $generated@@430)) $generated@@72)
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@72) (= (type $generated@@432) $generated@@72)) (= ($generated@@429 ($generated@@373 $generated@@431 $generated@@432)) $generated@@431))
 :pattern ( ($generated@@373 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@72)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@72) (= (type $generated@@436) $generated@@72)) (= ($generated@@433 ($generated@@373 $generated@@435 $generated@@436)) $generated@@436))
 :pattern ( ($generated@@373 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@72) (= (type $generated@@438) $generated@@72)) (= ($generated@@83 ($generated@@373 $generated@@437 $generated@@438)) $generated@@58))
 :pattern ( ($generated@@373 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@72)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@72) (= (type $generated@@442) $generated@@72)) (= ($generated@@439 ($generated@@381 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@381 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@72)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@72) (= (type $generated@@446) $generated@@72)) (= ($generated@@443 ($generated@@381 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@381 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@72) (= (type $generated@@448) $generated@@72)) (= ($generated@@83 ($generated@@381 $generated@@447 $generated@@448)) $generated@@59))
 :pattern ( ($generated@@381 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@169) (= (type $generated@@450) $generated@@169)) (= ($generated@@224 ($generated@@185 $generated@@449 $generated@@450)) $generated@@63))
 :pattern ( ($generated@@185 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@72)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@72) (= (type $generated@@454) $generated@@72)) (= ($generated@@451 ($generated@@159 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@159 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@72)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@72) (= (type $generated@@458) $generated@@72)) (= ($generated@@455 ($generated@@159 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@159 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@169) (= (type $generated@@460) $generated@@169)) (= ($generated@@167 ($generated@@185 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@185 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@169) (= (type $generated@@462) $generated@@169)) (= ($generated@@168 ($generated@@185 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@185 $generated@@461 $generated@@462))
)))
(assert  (and (forall (($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@465)) $generated@@72)
 :pattern ( ($generated@@463 $generated@@465))
)) (forall (($generated@@466 T@U) ($generated@@467 Int) ) (! (let (($generated@@468 ($generated@@233 (type $generated@@466))))
(= (type ($generated@@464 $generated@@466 $generated@@467)) $generated@@468))
 :pattern ( ($generated@@464 $generated@@466 $generated@@467))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@469) ($generated@@232 $generated@@169)) (= (type $generated@@470) $generated@@72)) (= (type $generated@@471) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@469 ($generated@@463 $generated@@470) $generated@@471) (forall (($generated@@472 Int) ) (!  (=> (and (<= 0 $generated@@472) (< $generated@@472 ($generated@@231 $generated@@469))) ($generated@@218 ($generated@@464 $generated@@469 $generated@@472) $generated@@470 $generated@@471))
 :pattern ( ($generated@@464 $generated@@469 $generated@@472))
))))
 :pattern ( ($generated@@87 $generated@@469 ($generated@@463 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@474 Int) ) (! (= ($generated@@473 ($generated@@88 $generated@@474)) $generated@@474)
 :pattern ( ($generated@@88 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@72)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@72) (= ($generated@@475 ($generated@@201 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@201 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@72) (= ($generated@@83 ($generated@@201 $generated@@478)) $generated@@54))
 :pattern ( ($generated@@201 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@72)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@72) (= ($generated@@479 ($generated@@206 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@206 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@72) (= ($generated@@83 ($generated@@206 $generated@@482)) $generated@@55))
 :pattern ( ($generated@@206 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@72)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@72) (= ($generated@@483 ($generated@@174 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@174 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@72) (= ($generated@@83 ($generated@@174 $generated@@486)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@72)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@72) (= ($generated@@487 ($generated@@463 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@463 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@72) (= ($generated@@83 ($generated@@463 $generated@@490)) $generated@@57))
 :pattern ( ($generated@@463 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 (type $generated@@491)))
(= ($generated@@303 $generated@@492 ($generated@@239 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@239 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@260 $generated@@169 $generated@@169)) (= (type $generated@@494) $generated@@72)) (= (type $generated@@495) $generated@@72)) (= ($generated@@156 $generated@@493 ($generated@@373 $generated@@494 $generated@@495)) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@258 $generated@@493) $generated@@496))) (and ($generated@@186 ($generated@@94 ($generated@@348 $generated@@493) $generated@@496) $generated@@495) ($generated@@186 $generated@@496 $generated@@494)))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@493) $generated@@496))
 :pattern ( ($generated@@94 ($generated@@258 $generated@@493) $generated@@496))
))))
 :pattern ( ($generated@@156 $generated@@493 ($generated@@373 $generated@@494 $generated@@495)))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@278 $generated@@169 $generated@@169)) (= (type $generated@@498) $generated@@72)) (= (type $generated@@499) $generated@@72)) (= ($generated@@156 $generated@@497 ($generated@@381 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@169) ($generated@@0 ($generated@@94 ($generated@@276 $generated@@497) $generated@@500))) (and ($generated@@186 ($generated@@94 ($generated@@356 $generated@@497) $generated@@500) $generated@@499) ($generated@@186 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@497) $generated@@500))
 :pattern ( ($generated@@94 ($generated@@276 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@156 $generated@@497 ($generated@@381 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@169) (= (type $generated@@504) $generated@@169)) (< ($generated@@501 $generated@@503) ($generated@@502 ($generated@@185 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@185 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@169) (= (type $generated@@506) $generated@@169)) (< ($generated@@501 $generated@@506) ($generated@@502 ($generated@@185 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@185 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) $generated@@169) (= (type $generated@@508) $generated@@72)) (= (type $generated@@509) $generated@@72)) ($generated@@186 $generated@@507 ($generated@@373 $generated@@508 $generated@@509))) (and (= ($generated@@239 ($generated@@303 ($generated@@260 $generated@@169 $generated@@169) $generated@@507)) $generated@@507) ($generated@@156 ($generated@@303 ($generated@@260 $generated@@169 $generated@@169) $generated@@507) ($generated@@373 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@186 $generated@@507 ($generated@@373 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@169) (= (type $generated@@511) $generated@@72)) (= (type $generated@@512) $generated@@72)) ($generated@@186 $generated@@510 ($generated@@381 $generated@@511 $generated@@512))) (and (= ($generated@@239 ($generated@@303 ($generated@@278 $generated@@169 $generated@@169) $generated@@510)) $generated@@510) ($generated@@156 ($generated@@303 ($generated@@278 $generated@@169 $generated@@169) $generated@@510) ($generated@@381 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@186 $generated@@510 ($generated@@381 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@72) (= (type $generated@@514) $generated@@72)) (= (type $generated@@515) $generated@@169)) ($generated@@186 $generated@@515 ($generated@@159 $generated@@513 $generated@@514))) (and (= ($generated@@239 ($generated@@303 $generated@@160 $generated@@515)) $generated@@515) ($generated@@156 ($generated@@303 $generated@@160 $generated@@515) ($generated@@159 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@186 $generated@@515 ($generated@@159 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
 (not ($generated@@0 ($generated@@94 ($generated@@392 $generated@@517) $generated@@516))))
 :pattern ( (let (($generated@@517 (type $generated@@516)))
($generated@@94 ($generated@@392 $generated@@517) $generated@@516)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@524 T@T) ($generated@@525 T@T) ) (= ($generated@@1 ($generated@@520 $generated@@524 $generated@@525)) 22)) (forall (($generated@@526 T@T) ($generated@@527 T@T) ) (! (= ($generated@@521 ($generated@@520 $generated@@526 $generated@@527)) $generated@@526)
 :pattern ( ($generated@@520 $generated@@526 $generated@@527))
))) (forall (($generated@@528 T@T) ($generated@@529 T@T) ) (! (= ($generated@@522 ($generated@@520 $generated@@528 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@520 $generated@@528 $generated@@529))
))) (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@522 (type $generated@@530))))
(= (type ($generated@@518 $generated@@530 $generated@@531 $generated@@532)) $generated@@533))
 :pattern ( ($generated@@518 $generated@@530 $generated@@531 $generated@@532))
))) (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
(let (($generated@@539 (type $generated@@535)))
(= (type ($generated@@523 $generated@@534 $generated@@535 $generated@@536 $generated@@537)) ($generated@@520 $generated@@539 $generated@@538))))
 :pattern ( ($generated@@523 $generated@@534 $generated@@535 $generated@@536 $generated@@537))
))) (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 ($generated@@522 (type $generated@@540))))
 (=> (= (type $generated@@543) $generated@@544) (= ($generated@@518 ($generated@@523 $generated@@540 $generated@@541 $generated@@542 $generated@@543) $generated@@541 $generated@@542) $generated@@543)))
 :weight 0
))) (and (and (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (or (= $generated@@547 $generated@@549) (= ($generated@@518 ($generated@@523 $generated@@546 $generated@@547 $generated@@548 $generated@@545) $generated@@549 $generated@@550) ($generated@@518 $generated@@546 $generated@@549 $generated@@550)))
 :weight 0
)) (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (or (= $generated@@554 $generated@@556) (= ($generated@@518 ($generated@@523 $generated@@552 $generated@@553 $generated@@554 $generated@@551) $generated@@555 $generated@@556) ($generated@@518 $generated@@552 $generated@@555 $generated@@556)))
 :weight 0
))) (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (or true (= ($generated@@518 ($generated@@523 $generated@@558 $generated@@559 $generated@@560 $generated@@557) $generated@@561 $generated@@562) ($generated@@518 $generated@@558 $generated@@561 $generated@@562)))
 :weight 0
)))) (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (= (type ($generated@@519 $generated@@563 $generated@@564 $generated@@565 $generated@@566)) ($generated@@520 $generated@@90 $generated@@4))
 :pattern ( ($generated@@519 $generated@@563 $generated@@564 $generated@@565 $generated@@566))
))))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@75 (type $generated@@572))))
 (=> (and (and (and (and (and (= (type $generated@@567) $generated@@90) (= (type $generated@@568) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@569) ($generated@@74 $generated@@4))) (= (type $generated@@570) $generated@@90)) (= (type $generated@@571) $generated@@90)) (= (type $generated@@572) ($generated@@74 $generated@@573))) (= ($generated@@0 ($generated@@518 ($generated@@519 $generated@@567 $generated@@568 $generated@@569 $generated@@570) $generated@@571 $generated@@572))  (=> (and (not (= $generated@@571 $generated@@567)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@568 $generated@@571) $generated@@569))) (= $generated@@571 $generated@@570)))))
 :pattern ( ($generated@@518 ($generated@@519 $generated@@567 $generated@@568 $generated@@569 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@575) $generated@@90)) (and ($generated@@217 $generated@@574) (and (not (= $generated@@575 $generated@@153)) (= ($generated@@179 $generated@@575) $generated@@152)))) ($generated@@156 ($generated@@96 ($generated@@94 $generated@@574 $generated@@575) $generated@@193) $generated@@149))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@574 $generated@@575) $generated@@193))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@79)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@72) (= (type $generated@@579) $generated@@72)) (and (= ($generated@@83 ($generated@@159 $generated@@578 $generated@@579)) $generated@@64) (= ($generated@@576 ($generated@@159 $generated@@578 $generated@@579)) $generated@@69)))
 :pattern ( ($generated@@159 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@160) (= ($generated@@501 ($generated@@239 $generated@@580)) ($generated@@502 $generated@@580)))
 :pattern ( ($generated@@501 ($generated@@239 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@169) ($generated@@186 $generated@@581 ($generated@@88 0))) (and (= ($generated@@239 ($generated@@303 $generated@@2 $generated@@581)) $generated@@581) ($generated@@156 ($generated@@303 ($generated@@89 $generated@@169 $generated@@4) $generated@@581) ($generated@@88 0))))
 :pattern ( ($generated@@186 $generated@@581 ($generated@@88 0)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@169) (= (type $generated@@583) $generated@@72)) ($generated@@186 $generated@@582 ($generated@@201 $generated@@583))) (and (= ($generated@@239 ($generated@@303 ($generated@@89 $generated@@169 $generated@@4) $generated@@582)) $generated@@582) ($generated@@156 ($generated@@303 ($generated@@89 $generated@@169 $generated@@4) $generated@@582) ($generated@@201 $generated@@583))))
 :pattern ( ($generated@@186 $generated@@582 ($generated@@201 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@169) (= (type $generated@@585) $generated@@72)) ($generated@@186 $generated@@584 ($generated@@206 $generated@@585))) (and (= ($generated@@239 ($generated@@303 ($generated@@89 $generated@@169 $generated@@4) $generated@@584)) $generated@@584) ($generated@@156 ($generated@@303 ($generated@@89 $generated@@169 $generated@@4) $generated@@584) ($generated@@206 $generated@@585))))
 :pattern ( ($generated@@186 $generated@@584 ($generated@@206 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@169) (= (type $generated@@587) $generated@@72)) ($generated@@186 $generated@@586 ($generated@@174 $generated@@587))) (and (= ($generated@@239 ($generated@@303 ($generated@@89 $generated@@169 $generated@@2) $generated@@586)) $generated@@586) ($generated@@156 ($generated@@303 ($generated@@89 $generated@@169 $generated@@2) $generated@@586) ($generated@@174 $generated@@587))))
 :pattern ( ($generated@@186 $generated@@586 ($generated@@174 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@169) (= (type $generated@@589) $generated@@72)) ($generated@@186 $generated@@588 ($generated@@463 $generated@@589))) (and (= ($generated@@239 ($generated@@303 ($generated@@232 $generated@@169) $generated@@588)) $generated@@588) ($generated@@156 ($generated@@303 ($generated@@232 $generated@@169) $generated@@588) ($generated@@463 $generated@@589))))
 :pattern ( ($generated@@186 $generated@@588 ($generated@@463 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (=> (and (and (and (= (type $generated@@590) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@591) $generated@@90)) (= (type $generated@@592) ($generated@@74 $generated@@594))) ($generated@@217 ($generated@@95 $generated@@590 $generated@@591 ($generated@@97 ($generated@@94 $generated@@590 $generated@@591) $generated@@592 $generated@@593)))) ($generated@@145 $generated@@590 ($generated@@95 $generated@@590 $generated@@591 ($generated@@97 ($generated@@94 $generated@@590 $generated@@591) $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@95 $generated@@590 $generated@@591 ($generated@@97 ($generated@@94 $generated@@590 $generated@@591) $generated@@592 $generated@@593)))
)))
(assert (= ($generated@@83 $generated@@149) $generated@@62))
(assert (= ($generated@@576 $generated@@149) $generated@@68))
(assert (= ($generated@@83 $generated@@152) $generated@@66))
(assert (= ($generated@@576 $generated@@152) $generated@@70))
(assert (= ($generated@@83 $generated@@182) $generated@@67))
(assert (= ($generated@@576 $generated@@182) $generated@@70))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@89 $generated@@169 $generated@@2)) (= (type $generated@@596) $generated@@72)) (= (type $generated@@597) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@595 ($generated@@174 $generated@@596) $generated@@597) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@169) (< 0 ($generated ($generated@@94 $generated@@595 $generated@@598)))) ($generated@@218 $generated@@598 $generated@@596 $generated@@597))
 :pattern ( ($generated@@94 $generated@@595 $generated@@598))
))))
 :pattern ( ($generated@@87 $generated@@595 ($generated@@174 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@160) (= (type $generated@@600) $generated@@72)) (= (type $generated@@601) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@217 $generated@@601) (and ($generated@@158 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@72) ($generated@@87 $generated@@599 ($generated@@159 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@87 $generated@@599 ($generated@@159 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@218 ($generated@@167 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@218 ($generated@@167 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@160) (= (type $generated@@604) $generated@@72)) (= (type $generated@@605) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@217 $generated@@605) (and ($generated@@158 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@72) ($generated@@87 $generated@@603 ($generated@@159 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@87 $generated@@603 ($generated@@159 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@218 ($generated@@168 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@218 ($generated@@168 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@169) (= (type $generated@@608) $generated@@169)) (= ($generated@@185 ($generated@@213 $generated@@607) ($generated@@213 $generated@@608)) ($generated@@213 ($generated@@185 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@185 ($generated@@213 $generated@@607) ($generated@@213 $generated@@608)))
)))
(assert (forall (($generated@@609 Int) ) (! (= ($generated@@239 ($generated@@8 ($generated@@211 $generated@@609))) ($generated@@213 ($generated@@239 ($generated@@8 $generated@@609))))
 :pattern ( ($generated@@239 ($generated@@8 ($generated@@211 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ) (! (= ($generated@@239 ($generated@@213 $generated@@610)) ($generated@@213 ($generated@@239 $generated@@610)))
 :pattern ( ($generated@@239 ($generated@@213 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 ($generated@@233 (type $generated@@611))))
 (=> (and (= (type $generated@@611) ($generated@@232 $generated@@612)) (= ($generated@@231 $generated@@611) 0)) (= $generated@@611 ($generated@@230 $generated@@612))))
 :pattern ( ($generated@@231 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (! (let (($generated@@616 (type $generated@@614)))
 (=> (and (and (= (type $generated@@613) ($generated@@89 $generated@@616 $generated@@2)) (= (type $generated@@615) $generated@@2)) (<= 0 ($generated $generated@@615))) (= ($generated@@252 ($generated@@95 $generated@@613 $generated@@614 $generated@@615)) (+ (- ($generated@@252 $generated@@613) ($generated ($generated@@94 $generated@@613 $generated@@614))) ($generated $generated@@615)))))
 :pattern ( ($generated@@252 ($generated@@95 $generated@@613 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@618) $generated@@2)) ($generated@@87 $generated@@618 $generated@@46 $generated@@617))
 :pattern ( ($generated@@87 $generated@@618 $generated@@46 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@620) $generated@@3)) ($generated@@87 $generated@@620 $generated@@47 $generated@@619))
 :pattern ( ($generated@@87 $generated@@620 $generated@@47 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@622) $generated@@4)) ($generated@@87 $generated@@622 $generated@@44 $generated@@621))
 :pattern ( ($generated@@87 $generated@@622 $generated@@44 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@624) $generated@@421)) ($generated@@87 $generated@@624 $generated@@45 $generated@@623))
 :pattern ( ($generated@@87 $generated@@624 $generated@@45 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@626) $generated@@169)) ($generated@@87 $generated@@626 $generated@@48 $generated@@625))
 :pattern ( ($generated@@87 $generated@@626 $generated@@48 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@232 $generated@@169)) (= (type $generated@@628) $generated@@72)) (= ($generated@@156 $generated@@627 ($generated@@463 $generated@@628)) (forall (($generated@@629 Int) ) (!  (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@231 $generated@@627))) ($generated@@186 ($generated@@464 $generated@@627 $generated@@629) $generated@@628))
 :pattern ( ($generated@@464 $generated@@627 $generated@@629))
))))
 :pattern ( ($generated@@156 $generated@@627 ($generated@@463 $generated@@628)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 Int) ) (!  (=> (= (type $generated@@631) ($generated@@232 $generated@@169)) (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@231 $generated@@631))) (< ($generated@@502 ($generated@@303 $generated@@160 ($generated@@464 $generated@@631 $generated@@632))) ($generated@@630 $generated@@631))))
 :pattern ( ($generated@@502 ($generated@@303 $generated@@160 ($generated@@464 $generated@@631 $generated@@632))))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@260 $generated@@169 $generated@@169)) (= (type $generated@@634) $generated@@72)) (= (type $generated@@635) $generated@@72)) ($generated@@156 $generated@@633 ($generated@@373 $generated@@634 $generated@@635))) (and (and ($generated@@156 ($generated@@258 $generated@@633) ($generated@@201 $generated@@634)) ($generated@@156 ($generated@@314 $generated@@633) ($generated@@201 $generated@@635))) ($generated@@156 ($generated@@347 $generated@@633) ($generated@@201 ($generated@@159 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@156 $generated@@633 ($generated@@373 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) ($generated@@278 $generated@@169 $generated@@169)) (= (type $generated@@637) $generated@@72)) (= (type $generated@@638) $generated@@72)) ($generated@@156 $generated@@636 ($generated@@381 $generated@@637 $generated@@638))) (and (and ($generated@@156 ($generated@@276 $generated@@636) ($generated@@206 $generated@@637)) ($generated@@156 ($generated@@325 $generated@@636) ($generated@@206 $generated@@638))) ($generated@@156 ($generated@@355 $generated@@636) ($generated@@206 ($generated@@159 $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@156 $generated@@636 ($generated@@381 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@2) ($generated@@156 $generated@@639 $generated@@46))
 :pattern ( ($generated@@156 $generated@@639 $generated@@46))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@3) ($generated@@156 $generated@@640 $generated@@47))
 :pattern ( ($generated@@156 $generated@@640 $generated@@47))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@4) ($generated@@156 $generated@@641 $generated@@44))
 :pattern ( ($generated@@156 $generated@@641 $generated@@44))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@421) ($generated@@156 $generated@@642 $generated@@45))
 :pattern ( ($generated@@156 $generated@@642 $generated@@45))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@169) ($generated@@156 $generated@@643 $generated@@48))
 :pattern ( ($generated@@156 $generated@@643 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Bool)
(declare-fun $generated@@659 (T@U) Bool)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@652) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@648) $generated@@90)) (= (type $generated@@649) ($generated@@520 $generated@@90 $generated@@4))) (= (type $generated@@654) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@657) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@647) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@651) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@661) ($generated@@89 $generated@@90 $generated@@91))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@665  (and (=> (= (ControlFlow 0 11) (- 0 13)) ($generated@@156 ($generated@@8 (- $generated@@644 1)) $generated@@149)) (=> ($generated@@156 ($generated@@8 (- $generated@@644 1)) $generated@@149) (=> (= $generated@@645 (- $generated@@644 1)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (<= 0 $generated@@646) (= (- $generated@@645 0) $generated@@646))) (=> (or (<= 0 $generated@@646) (= (- $generated@@645 0) $generated@@646)) (=> (= (ControlFlow 0 11) (- 0 10)) (< (- $generated@@645 0) $generated@@646)))))))))
(let (($generated@@666  (=> (and (<= ($generated ($generated@@96 ($generated@@94 $generated@@647 $generated@@648) $generated@@193)) 15) (= (ControlFlow 0 17) 11)) $generated@@665)))
(let (($generated@@667  (=> (< 15 ($generated ($generated@@96 ($generated@@94 $generated@@647 $generated@@648) $generated@@193))) (and (=> (= (ControlFlow 0 14) (- 0 16)) ($generated@@0 ($generated@@518 $generated@@649 $generated@@648 $generated@@193))) (=> ($generated@@0 ($generated@@518 $generated@@649 $generated@@648 $generated@@193)) (and (=> (= (ControlFlow 0 14) (- 0 15)) ($generated@@156 ($generated@@8 (- ($generated ($generated@@96 ($generated@@94 $generated@@647 $generated@@648) $generated@@193)) 12)) $generated@@149)) (=> ($generated@@156 ($generated@@8 (- ($generated ($generated@@96 ($generated@@94 $generated@@647 $generated@@648) $generated@@193)) 12)) $generated@@149) (=> (and (and (= $generated@@650 (- ($generated ($generated@@96 ($generated@@94 $generated@@647 $generated@@648) $generated@@193)) 12)) (= $generated@@651 ($generated@@95 $generated@@647 $generated@@648 ($generated@@97 ($generated@@94 $generated@@647 $generated@@648) $generated@@193 ($generated@@8 $generated@@650))))) (and ($generated@@217 $generated@@651) (= (ControlFlow 0 14) 11))) $generated@@665))))))))
(let (($generated@@668  (=> (and (< 0 $generated@@644) (= $generated@@646 (- $generated@@644 0))) (and (=> (= (ControlFlow 0 18) (- 0 20)) ($generated@@0 ($generated@@518 $generated@@649 $generated@@648 $generated@@193))) (=> ($generated@@0 ($generated@@518 $generated@@649 $generated@@648 $generated@@193)) (and (=> (= (ControlFlow 0 18) (- 0 19)) ($generated@@156 ($generated@@8 (+ ($generated ($generated@@96 ($generated@@94 $generated@@652 $generated@@648) $generated@@193)) 1)) $generated@@149)) (=> ($generated@@156 ($generated@@8 (+ ($generated ($generated@@96 ($generated@@94 $generated@@652 $generated@@648) $generated@@193)) 1)) $generated@@149) (=> (= $generated@@653 (+ ($generated ($generated@@96 ($generated@@94 $generated@@652 $generated@@648) $generated@@193)) 1)) (=> (and (= $generated@@647 ($generated@@95 $generated@@652 $generated@@648 ($generated@@97 ($generated@@94 $generated@@652 $generated@@648) $generated@@193 ($generated@@8 $generated@@653)))) ($generated@@217 $generated@@647)) (and (=> (= (ControlFlow 0 18) 14) $generated@@667) (=> (= (ControlFlow 0 18) 17) $generated@@666)))))))))))
(let (($generated@@669  (=> (<= $generated@@644 0) (and (=> (= (ControlFlow 0 4) (- 0 9)) (<= ($generated@@211 0) ($generated ($generated@@96 ($generated@@94 $generated@@652 $generated@@648) $generated@@193)))) (=> (<= ($generated@@211 0) ($generated ($generated@@96 ($generated@@94 $generated@@652 $generated@@648) $generated@@193))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@0 ($generated@@518 $generated@@649 $generated@@648 $generated@@193))) (=> ($generated@@0 ($generated@@518 $generated@@649 $generated@@648 $generated@@193)) (=> (and (= $generated@@654 ($generated@@95 $generated@@652 $generated@@648 ($generated@@97 ($generated@@94 $generated@@652 $generated@@648) $generated@@193 ($generated@@8 $generated@@655)))) ($generated@@217 $generated@@654)) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@0 ($generated@@518 $generated@@649 $generated@@648 $generated@@193))) (=> ($generated@@0 ($generated@@518 $generated@@649 $generated@@648 $generated@@193)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@156 ($generated@@8 (+ $generated@@655 3)) $generated@@149)) (=> ($generated@@156 ($generated@@8 (+ $generated@@655 3)) $generated@@149) (=> (= $generated@@656 (+ $generated@@655 3)) (=> (and (= $generated@@657 ($generated@@95 $generated@@654 $generated@@648 ($generated@@97 ($generated@@94 $generated@@654 $generated@@648) $generated@@193 ($generated@@8 $generated@@656)))) ($generated@@217 $generated@@657)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@0 ($generated@@518 $generated@@649 $generated@@648 $generated@@193))) (=> ($generated@@0 ($generated@@518 $generated@@649 $generated@@648 $generated@@193)) (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@156 ($generated@@8 (- $generated@@655 3)) $generated@@149))))))))))))))))))
(let (($generated@@670  (=> $generated@@658 (and (=> (= (ControlFlow 0 21) 4) $generated@@669) (=> (= (ControlFlow 0 21) 18) $generated@@668)))))
(let (($generated@@671 true))
(let (($generated@@672  (and (=> (= (ControlFlow 0 22) 2) $generated@@671) (=> (= (ControlFlow 0 22) 21) $generated@@670))))
(let (($generated@@673 true))
(let (($generated@@674  (=> (<= ($generated@@211 0) $generated@@644) (=> (and ($generated@@217 $generated@@652) ($generated@@659 $generated@@652)) (=> (and (and (and (and (not false) (<= 0 $generated@@644)) (<= 0 $generated@@660)) (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@90) (=> (and (not (= $generated@@675 $generated@@153)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@661 $generated@@675) $generated@@60))) (or (= ($generated@@94 $generated@@652 $generated@@675) ($generated@@94 $generated@@661 $generated@@675)) (= $generated@@675 $generated@@648))))
 :pattern ( ($generated@@94 $generated@@652 $generated@@675))
))) (and (and ($generated@@145 $generated@@661 $generated@@652) (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (! (let (($generated@@678 ($generated@@75 (type $generated@@677))))
 (=> (and (and (= (type $generated@@676) $generated@@90) (= (type $generated@@677) ($generated@@74 $generated@@678))) (and (not (= $generated@@676 $generated@@153)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@661 $generated@@676) $generated@@60)))) (or (= ($generated@@96 ($generated@@94 $generated@@652 $generated@@676) $generated@@677) ($generated@@96 ($generated@@94 $generated@@661 $generated@@676) $generated@@677)) ($generated@@0 ($generated@@518 $generated@@649 $generated@@676 $generated@@677)))))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@652 $generated@@676) $generated@@677))
))) (and (<= (- $generated@@644 0) $generated@@660) (=> (= (- $generated@@644 0) $generated@@660) true)))) (and (=> (= (ControlFlow 0 23) 1) $generated@@673) (=> (= (ControlFlow 0 23) 22) $generated@@672)))))))
(let (($generated@@679  (=> (= $generated@@649 ($generated@@519 $generated@@153 $generated@@661 $generated@@60 $generated@@648)) (and (=> (= (ControlFlow 0 24) (- 0 26)) ($generated@@156 ($generated@@8 $generated@@662) $generated@@149)) (=> ($generated@@156 ($generated@@8 $generated@@662) $generated@@149) (and (=> (= (ControlFlow 0 24) (- 0 25)) (<= ($generated@@211 0) ($generated ($generated@@96 ($generated@@94 $generated@@661 $generated@@648) $generated@@193)))) (=> (<= ($generated@@211 0) ($generated ($generated@@96 ($generated@@94 $generated@@661 $generated@@648) $generated@@193))) (=> (and (= $generated@@660 (- $generated@@662 0)) (= (ControlFlow 0 24) 23)) $generated@@674))))))))
(let (($generated@@680  (=> (and ($generated@@217 $generated@@661) ($generated@@659 $generated@@661)) (=> (and (and (not (= $generated@@648 $generated@@153)) (and ($generated@@156 $generated@@648 $generated@@182) ($generated@@87 $generated@@648 $generated@@182 $generated@@661))) (<= ($generated@@211 0) $generated@@655)) (=> (and (and (and (<= ($generated@@211 0) $generated@@663) true) (= 1 $generated@@664)) (and (<= ($generated@@211 0) $generated@@662) (= (ControlFlow 0 27) 24))) $generated@@679)))))
$generated@@680)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@T T@U T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@357 (T@U T@U) Bool)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@T T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@T) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 () T@T)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@523 (T@U Int) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@638 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@149) 16) (= (type $generated@@143) ($generated@@72 $generated@@149))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@144 $generated@@150)) $generated@@70)
 :pattern ( ($generated@@144 $generated@@150))
))) (= (type $generated@@146) $generated@@88)) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@147 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@147 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@70) (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@154) $generated@@88)) (and ($generated@@145 $generated@@153) (and (not (= $generated@@154 $generated@@146)) (= ($generated@@147 $generated@@154) ($generated@@144 $generated@@152))))) ($generated@@148 ($generated@@94 ($generated@@92 $generated@@153 $generated@@154) $generated@@143) $generated@@152))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@153 $generated@@154) $generated@@143) ($generated@@144 $generated@@152))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@155 $generated@@156 $generated@@157)) (forall (($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@156 $generated@@158) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@157 $generated@@158) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@157 $generated@@158) $generated@@60))
)))
 :pattern ( ($generated@@155 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@70) (= (type $generated@@160) $generated@@88)) (= (type $generated@@161) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@160 ($generated@@144 $generated@@159) $generated@@161)  (or (= $generated@@160 $generated@@146) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@161 $generated@@160) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@160 ($generated@@144 $generated@@159) $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> (= (type $generated@@163) $generated@@2) ($generated@@162 $generated@@163 ($generated@@86 0)))
 :pattern ( ($generated@@162 $generated@@163 ($generated@@86 0)))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@164 $generated@@165)) $generated@@70)
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@70) (= (type $generated@@167) $generated@@88)) (= (type $generated@@168) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@167 ($generated@@164 $generated@@166) $generated@@168) ($generated@@85 $generated@@167 ($generated@@144 $generated@@166) $generated@@168)))
 :pattern ( ($generated@@85 $generated@@167 ($generated@@164 $generated@@166) $generated@@168))
)))
(assert  (and (= ($generated@@1 $generated@@171) 17) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@70)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@70) (= (type $generated@@175) $generated@@70)) (= (type $generated@@176) $generated@@171)) ($generated@@162 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@162 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@149)
 :pattern ( ($generated@@178 $generated@@180))
)) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@149)
 :pattern ( ($generated@@179 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@171) (= (type $generated@@183) $generated@@171)) true) (= ($generated@@177 $generated@@182 $generated@@183)  (and (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)) (= ($generated@@179 $generated@@182) ($generated@@179 $generated@@183)))))
 :pattern ( ($generated@@177 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@70)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@87 $generated@@149 $generated@@2)) (= (type $generated@@188) $generated@@70)) ($generated@@162 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@162 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 18)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@88 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@73 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@88) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@240) ($generated@@72 $generated@@4))) (= (type $generated@@242) $generated@@88)) (= (type $generated@@243) ($generated@@72 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@246 $generated@@247)) $generated@@171)
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@70) (= (type $generated@@249) $generated@@70)) (= (type $generated@@250) $generated@@149)) (= (type $generated@@251) $generated@@149)) (= ($generated@@162 ($generated@@245 $generated@@250 $generated@@251) ($generated@@170 $generated@@248 $generated@@249))  (and ($generated@@148 $generated@@250 $generated@@248) ($generated@@148 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@162 ($generated@@245 $generated@@250 $generated@@251) ($generated@@170 $generated@@248 $generated@@249)))
)))
(assert (= ($generated@@80 $generated@@143) 0))
(assert (forall (($generated@@253 T@T) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@253 $generated@@254 $generated@@255)) ($generated@@72 $generated@@253))
 :pattern ( ($generated@@252 $generated@@253 $generated@@254 $generated@@255))
)))
(assert (= ($generated@@252 $generated@@149 $generated@@64 $generated@@69) $generated@@143))
(assert  (not ($generated@@256 $generated@@143)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@171) (= (type $generated@@258) $generated@@171)) (= ($generated@@177 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@177 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@87 $generated@@149 $generated@@4)) (= (type $generated@@262) $generated@@70)) (= ($generated@@162 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@149) ($generated@@0 ($generated@@92 $generated@@261 $generated@@263))) ($generated@@148 $generated@@263 $generated@@262))
 :pattern ( ($generated@@92 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@162 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@87 $generated@@149 $generated@@4)) (= (type $generated@@267) $generated@@70)) (= ($generated@@162 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@149) ($generated@@0 ($generated@@92 $generated@@266 $generated@@268))) ($generated@@148 $generated@@268 $generated@@267))
 :pattern ( ($generated@@92 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@162 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@70) (= (type $generated@@275) $generated@@70)) (= (type $generated@@276) $generated@@149)) (= (type $generated@@277) $generated@@149)) (= (type $generated@@278) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@145 $generated@@278)) (= ($generated@@85 ($generated@@245 $generated@@276 $generated@@277) ($generated@@170 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@85 ($generated@@245 $generated@@276 $generated@@277) ($generated@@170 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@75)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@171) (= ($generated@@169 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@62)))
 :pattern ( ($generated@@169 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@171) ($generated@@169 $generated@@282)) (exists (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (and (= (type $generated@@283) $generated@@149) (= (type $generated@@284) $generated@@149)) (= $generated@@282 ($generated@@245 $generated@@283 $generated@@284)))
 :no-pattern (type $generated@@283)
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
)))
 :pattern ( ($generated@@169 $generated@@282))
)))
(assert  (and (and (forall (($generated@@289 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@289)) 19)) (forall (($generated@@290 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@287 $generated@@290))
))) (forall (($generated@@291 T@T) ) (! (= (type ($generated@@285 $generated@@291)) ($generated@@287 $generated@@291))
 :pattern ( ($generated@@285 $generated@@291))
))))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@292)) 0)
 :pattern ( ($generated@@285 $generated@@292))
)))
(assert ($generated@@256 $generated@@60))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@295) $generated@@88)) (and (and ($generated@@145 $generated@@294) (and (not (= $generated@@295 $generated@@146)) (= ($generated@@147 $generated@@295) ($generated@@144 $generated@@293)))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@60)))) ($generated@@273 ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@143) $generated@@293 $generated@@294))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@294 $generated@@295) $generated@@143) ($generated@@144 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@70) (= (type $generated@@297) $generated@@88)) (= ($generated@@162 $generated@@297 ($generated@@164 $generated@@296))  (and ($generated@@162 $generated@@297 ($generated@@144 $generated@@296)) (not (= $generated@@297 $generated@@146)))))
 :pattern ( ($generated@@162 $generated@@297 ($generated@@164 $generated@@296)))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@149)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@70) (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@273 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@85 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@273 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@304) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@305) $generated@@149)) (= (type $generated@@306) $generated@@70)) ($generated@@155 $generated@@303 $generated@@304)) ($generated@@273 $generated@@305 $generated@@306 $generated@@303)) ($generated@@273 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@155 $generated@@303 $generated@@304) ($generated@@273 $generated@@305 $generated@@306 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@307) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@308) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@310) $generated@@70)) ($generated@@155 $generated@@307 $generated@@308)) ($generated@@85 $generated@@309 $generated@@310 $generated@@307)) ($generated@@85 $generated@@309 $generated@@310 $generated@@308))
 :pattern ( ($generated@@155 $generated@@307 $generated@@308) ($generated@@85 $generated@@309 $generated@@310 $generated@@307))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@87 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@90 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@87 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@92 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@77)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@70) (and (= ($generated@@81 ($generated@@144 $generated@@319)) $generated@@65) (= ($generated@@317 ($generated@@144 $generated@@319)) $generated@@68)))
 :pattern ( ($generated@@144 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@70) (and (= ($generated@@81 ($generated@@164 $generated@@320)) $generated@@66) (= ($generated@@317 ($generated@@164 $generated@@320)) $generated@@68)))
 :pattern ( ($generated@@164 $generated@@320))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 20)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@87 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@92 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@92 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 21)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@87 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@92 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@92 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@359) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@357 $generated@@358 $generated@@359)) (and ($generated@@155 $generated@@358 $generated@@359) (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@73 (type $generated@@361))))
 (=> (and (and (= (type $generated@@360) $generated@@88) (= (type $generated@@361) ($generated@@72 $generated@@362))) (not ($generated@@256 $generated@@361))) (= ($generated@@94 ($generated@@92 $generated@@358 $generated@@360) $generated@@361) ($generated@@94 ($generated@@92 $generated@@359 $generated@@360) $generated@@361))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@359 $generated@@360) $generated@@361))
))))
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@90 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@87 $generated@@364 $generated@@2)) (= ($generated@@185 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@92 $generated@@363 $generated@@365))) (<= ($generated ($generated@@92 $generated@@363 $generated@@365)) ($generated@@311 $generated@@363))))
 :pattern ( ($generated@@92 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@185 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@70) (= (type $generated@@367) $generated@@88)) (= ($generated@@162 $generated@@367 ($generated@@144 $generated@@366))  (or (= $generated@@367 $generated@@146) (= ($generated@@147 $generated@@367) ($generated@@144 $generated@@366)))))
 :pattern ( ($generated@@162 $generated@@367 ($generated@@144 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@325 (type $generated@@368))))
(let (($generated@@370 ($generated@@324 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@323 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@322 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@92 ($generated@@321 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@321 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@325 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@325 (type $generated@@375))))
(let (($generated@@377 ($generated@@324 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@323 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@322 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@92 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@343 (type $generated@@379))))
(let (($generated@@381 ($generated@@342 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@341 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@340 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@92 ($generated@@339 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@339 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@343 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@87 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@343 (type $generated@@386))))
(let (($generated@@388 ($generated@@342 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@341 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@340 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@92 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@87 $generated@@149 $generated@@2)) (= (type $generated@@391) $generated@@70)) (= ($generated@@162 $generated@@390 ($generated@@184 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@149) (< 0 ($generated ($generated@@92 $generated@@390 $generated@@392)))) ($generated@@148 $generated@@392 $generated@@391))
 :pattern ( ($generated@@92 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@162 $generated@@390 ($generated@@184 $generated@@391)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@87 $generated@@149 $generated@@4)) (= (type $generated@@394) $generated@@70)) (= (type $generated@@395) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@393 ($generated@@259 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@149) ($generated@@0 ($generated@@92 $generated@@393 $generated@@396))) ($generated@@273 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@92 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@85 $generated@@393 ($generated@@259 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@87 $generated@@149 $generated@@4)) (= (type $generated@@398) $generated@@70)) (= (type $generated@@399) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@397 ($generated@@264 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@149) ($generated@@0 ($generated@@92 $generated@@397 $generated@@400))) ($generated@@273 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@92 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@85 $generated@@397 ($generated@@264 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@92 ($generated@@312 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@92 ($generated@@312 $generated@@402) $generated@@401)))
)))
(assert  (and (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@403 $generated@@406)) ($generated@@87 $generated@@149 $generated@@4))
 :pattern ( ($generated@@403 $generated@@406))
)) (forall (($generated@@407 T@T) ($generated@@408 T@U) ) (! (= (type ($generated@@404 $generated@@407 $generated@@408)) $generated@@407)
 :pattern ( ($generated@@404 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@325 (type $generated@@409))))
(let (($generated@@411 ($generated@@324 (type $generated@@409))))
(= (type ($generated@@405 $generated@@409)) ($generated@@87 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@405 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@413) $generated@@149)) (= ($generated@@0 ($generated@@92 ($generated@@403 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@92 ($generated@@321 $generated@@412) ($generated@@178 ($generated@@404 $generated@@171 $generated@@413)))) (= ($generated@@92 ($generated@@405 $generated@@412) ($generated@@178 ($generated@@404 $generated@@171 $generated@@413))) ($generated@@179 ($generated@@404 $generated@@171 $generated@@413))))))
 :pattern ( ($generated@@92 ($generated@@403 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@87 $generated@@149 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@343 (type $generated@@417))))
(let (($generated@@419 ($generated@@342 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@87 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@341 $generated@@149 $generated@@149)) (= (type $generated@@421) $generated@@149)) (= ($generated@@0 ($generated@@92 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@92 ($generated@@339 $generated@@420) ($generated@@178 ($generated@@404 $generated@@171 $generated@@421)))) (= ($generated@@92 ($generated@@415 $generated@@420) ($generated@@178 ($generated@@404 $generated@@171 $generated@@421))) ($generated@@179 ($generated@@404 $generated@@171 $generated@@421))))))
 :pattern ( ($generated@@92 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@324 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@323 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@92 ($generated@@372 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@92 ($generated@@321 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@92 ($generated@@405 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@92 ($generated@@321 $generated@@422) $generated@@426))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@92 ($generated@@372 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@342 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@341 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@92 ($generated@@383 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@92 ($generated@@339 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@92 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@92 ($generated@@339 $generated@@427) $generated@@431))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@92 ($generated@@383 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) $generated@@70)) (= (type $generated@@438) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@149) ($generated@@0 ($generated@@92 ($generated@@321 $generated@@435) $generated@@439))) (and ($generated@@273 ($generated@@92 ($generated@@405 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@273 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@435) $generated@@439))
 :pattern ( ($generated@@92 ($generated@@321 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@85 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@70)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@341 $generated@@149 $generated@@149)) (= (type $generated@@444) $generated@@70)) (= (type $generated@@445) $generated@@70)) (= (type $generated@@446) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@149) ($generated@@0 ($generated@@92 ($generated@@339 $generated@@443) $generated@@447))) (and ($generated@@273 ($generated@@92 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@273 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@92 ($generated@@339 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@85 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@448) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@449) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@450) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@448 $generated@@450))) (and ($generated@@155 $generated@@448 $generated@@449) ($generated@@155 $generated@@449 $generated@@450))) ($generated@@155 $generated@@448 $generated@@450))
 :pattern ( ($generated@@155 $generated@@448 $generated@@449) ($generated@@155 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@T) ) (! (= (type ($generated@@451 $generated@@452)) ($generated@@87 $generated@@452 $generated@@4))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@343 (type $generated@@453))))
(let (($generated@@455 ($generated@@342 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@341 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@340 $generated@@455 $generated@@454)) (= ($generated@@339 $generated@@453) ($generated@@451 $generated@@455))))))
 :pattern ( ($generated@@339 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@343 (type $generated@@456))))
(let (($generated@@458 ($generated@@342 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@341 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@340 $generated@@458 $generated@@457)) (= ($generated@@383 $generated@@456) ($generated@@451 $generated@@457))))))
 :pattern ( ($generated@@383 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@343 (type $generated@@459))))
(let (($generated@@461 ($generated@@342 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@341 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@340 $generated@@461 $generated@@460)) (= ($generated@@414 $generated@@459) ($generated@@451 $generated@@149))))))
 :pattern ( ($generated@@414 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@325 (type $generated@@462))))
(let (($generated@@464 ($generated@@324 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@323 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@322 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@149) (= (type $generated@@466) $generated@@149)) ($generated@@0 ($generated@@92 ($generated@@403 $generated@@462) ($generated@@298 ($generated@@245 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@403 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@343 (type $generated@@467))))
(let (($generated@@469 ($generated@@342 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@341 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@340 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@149) (= (type $generated@@471) $generated@@149)) ($generated@@0 ($generated@@92 ($generated@@414 $generated@@467) ($generated@@298 ($generated@@245 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@414 $generated@@467))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@76)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@T) ) (!  (=> (and (= (type $generated@@474) $generated@@76) (= (type $generated@@475) $generated@@74)) (and (= ($generated@@472 ($generated@@252 $generated@@476 $generated@@474 $generated@@475)) $generated@@474) (= ($generated@@83 ($generated@@252 $generated@@476 $generated@@474 $generated@@475)) $generated@@475)))
 :pattern ( ($generated@@252 $generated@@476 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@149) ($generated@@148 $generated@@477 $generated@@46)) (and (= ($generated@@298 ($generated@@404 $generated@@2 $generated@@477)) $generated@@477) ($generated@@162 ($generated@@404 $generated@@2 $generated@@477) $generated@@46)))
 :pattern ( ($generated@@148 $generated@@477 $generated@@46))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@149) ($generated@@148 $generated@@478 $generated@@47)) (and (= ($generated@@298 ($generated@@404 $generated@@3 $generated@@478)) $generated@@478) ($generated@@162 ($generated@@404 $generated@@3 $generated@@478) $generated@@47)))
 :pattern ( ($generated@@148 $generated@@478 $generated@@47))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@149) ($generated@@148 $generated@@479 $generated@@44)) (and (= ($generated@@298 ($generated@@404 $generated@@4 $generated@@479)) $generated@@479) ($generated@@162 ($generated@@404 $generated@@4 $generated@@479) $generated@@44)))
 :pattern ( ($generated@@148 $generated@@479 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@480) 22))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@149) ($generated@@148 $generated@@481 $generated@@45)) (and (= ($generated@@298 ($generated@@404 $generated@@480 $generated@@481)) $generated@@481) ($generated@@162 ($generated@@404 $generated@@480 $generated@@481) $generated@@45)))
 :pattern ( ($generated@@148 $generated@@481 $generated@@45))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@70) (= ($generated@@148 ($generated@@298 $generated@@482) $generated@@483) ($generated@@162 $generated@@482 $generated@@483)))
 :pattern ( ($generated@@148 ($generated@@298 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@90 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@87 $generated@@485 $generated@@2)) (<= 0 ($generated@@311 $generated@@484))))
 :pattern ( ($generated@@311 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@288 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@287 $generated@@487)) (<= 0 ($generated@@286 $generated@@486))))
 :pattern ( ($generated@@286 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@432 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@432 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@432 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@432 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@81 ($generated@@432 $generated@@496 $generated@@497)) $generated@@58))
 :pattern ( ($generated@@432 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@70) (= (type $generated@@501) $generated@@70)) (= ($generated@@498 ($generated@@440 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@440 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@70)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@70) (= (type $generated@@505) $generated@@70)) (= ($generated@@502 ($generated@@440 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@440 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@81 ($generated@@440 $generated@@506 $generated@@507)) $generated@@59))
 :pattern ( ($generated@@440 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@149) (= (type $generated@@509) $generated@@149)) (= ($generated@@279 ($generated@@245 $generated@@508 $generated@@509)) $generated@@62))
 :pattern ( ($generated@@245 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@70) (= (type $generated@@513) $generated@@70)) (= ($generated@@510 ($generated@@170 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@170 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@70)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@70) (= (type $generated@@517) $generated@@70)) (= ($generated@@514 ($generated@@170 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@170 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@149) (= (type $generated@@519) $generated@@149)) (= ($generated@@178 ($generated@@245 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@245 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@149) (= (type $generated@@521) $generated@@149)) (= ($generated@@179 ($generated@@245 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@245 $generated@@520 $generated@@521))
)))
(assert  (and (forall (($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@522 $generated@@524))
)) (forall (($generated@@525 T@U) ($generated@@526 Int) ) (! (let (($generated@@527 ($generated@@288 (type $generated@@525))))
(= (type ($generated@@523 $generated@@525 $generated@@526)) $generated@@527))
 :pattern ( ($generated@@523 $generated@@525 $generated@@526))
))))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@287 $generated@@149)) (= (type $generated@@529) $generated@@70)) (= (type $generated@@530) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@528 ($generated@@522 $generated@@529) $generated@@530) (forall (($generated@@531 Int) ) (!  (=> (and (<= 0 $generated@@531) (< $generated@@531 ($generated@@286 $generated@@528))) ($generated@@273 ($generated@@523 $generated@@528 $generated@@531) $generated@@529 $generated@@530))
 :pattern ( ($generated@@523 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@85 $generated@@528 ($generated@@522 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@532 ($generated@@86 $generated@@533)) $generated@@533)
 :pattern ( ($generated@@86 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@534 ($generated@@259 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@259 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@81 ($generated@@259 $generated@@537)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@70)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@538 ($generated@@264 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@264 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@81 ($generated@@264 $generated@@541)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@70)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@70) (= ($generated@@542 ($generated@@184 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@184 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@81 ($generated@@184 $generated@@545)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@70)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@70) (= ($generated@@546 ($generated@@522 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@522 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@70) (= ($generated@@81 ($generated@@522 $generated@@549)) $generated@@57))
 :pattern ( ($generated@@522 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@70)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@70) (= ($generated@@550 ($generated@@144 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@144 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@70)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@70) (= ($generated@@553 ($generated@@164 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@164 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(= ($generated@@404 $generated@@557 ($generated@@298 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@298 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@70)) (= ($generated@@162 $generated@@558 ($generated@@432 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@149) ($generated@@0 ($generated@@92 ($generated@@321 $generated@@558) $generated@@561))) (and ($generated@@148 ($generated@@92 ($generated@@405 $generated@@558) $generated@@561) $generated@@560) ($generated@@148 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@558) $generated@@561))
 :pattern ( ($generated@@92 ($generated@@321 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@162 $generated@@558 ($generated@@432 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@341 $generated@@149 $generated@@149)) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) $generated@@70)) (= ($generated@@162 $generated@@562 ($generated@@440 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@149) ($generated@@0 ($generated@@92 ($generated@@339 $generated@@562) $generated@@565))) (and ($generated@@148 ($generated@@92 ($generated@@415 $generated@@562) $generated@@565) $generated@@564) ($generated@@148 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@562) $generated@@565))
 :pattern ( ($generated@@92 ($generated@@339 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@162 $generated@@562 ($generated@@440 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@149) (= (type $generated@@569) $generated@@149)) (< ($generated@@566 $generated@@568) ($generated@@567 ($generated@@245 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@245 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@149) (= (type $generated@@571) $generated@@149)) (< ($generated@@566 $generated@@571) ($generated@@567 ($generated@@245 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@245 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@149) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) $generated@@70)) ($generated@@148 $generated@@572 ($generated@@432 $generated@@573 $generated@@574))) (and (= ($generated@@298 ($generated@@404 ($generated@@323 $generated@@149 $generated@@149) $generated@@572)) $generated@@572) ($generated@@162 ($generated@@404 ($generated@@323 $generated@@149 $generated@@149) $generated@@572) ($generated@@432 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@148 $generated@@572 ($generated@@432 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) $generated@@70)) ($generated@@148 $generated@@575 ($generated@@440 $generated@@576 $generated@@577))) (and (= ($generated@@298 ($generated@@404 ($generated@@341 $generated@@149 $generated@@149) $generated@@575)) $generated@@575) ($generated@@162 ($generated@@404 ($generated@@341 $generated@@149 $generated@@149) $generated@@575) ($generated@@440 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@148 $generated@@575 ($generated@@440 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@70) (= (type $generated@@579) $generated@@70)) (= (type $generated@@580) $generated@@149)) ($generated@@148 $generated@@580 ($generated@@170 $generated@@578 $generated@@579))) (and (= ($generated@@298 ($generated@@404 $generated@@171 $generated@@580)) $generated@@580) ($generated@@162 ($generated@@404 $generated@@171 $generated@@580) ($generated@@170 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@148 $generated@@580 ($generated@@170 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
 (not ($generated@@0 ($generated@@92 ($generated@@451 $generated@@582) $generated@@581))))
 :pattern ( (let (($generated@@582 (type $generated@@581)))
($generated@@92 ($generated@@451 $generated@@582) $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@70) (= (type $generated@@584) $generated@@70)) (and (= ($generated@@81 ($generated@@170 $generated@@583 $generated@@584)) $generated@@63) (= ($generated@@317 ($generated@@170 $generated@@583 $generated@@584)) $generated@@67)))
 :pattern ( ($generated@@170 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@171) (= ($generated@@566 ($generated@@298 $generated@@585)) ($generated@@567 $generated@@585)))
 :pattern ( ($generated@@566 ($generated@@298 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@149) ($generated@@148 $generated@@586 ($generated@@86 0))) (and (= ($generated@@298 ($generated@@404 $generated@@2 $generated@@586)) $generated@@586) ($generated@@162 ($generated@@404 ($generated@@87 $generated@@149 $generated@@4) $generated@@586) ($generated@@86 0))))
 :pattern ( ($generated@@148 $generated@@586 ($generated@@86 0)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@149) (= (type $generated@@588) $generated@@70)) ($generated@@148 $generated@@587 ($generated@@259 $generated@@588))) (and (= ($generated@@298 ($generated@@404 ($generated@@87 $generated@@149 $generated@@4) $generated@@587)) $generated@@587) ($generated@@162 ($generated@@404 ($generated@@87 $generated@@149 $generated@@4) $generated@@587) ($generated@@259 $generated@@588))))
 :pattern ( ($generated@@148 $generated@@587 ($generated@@259 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@149) (= (type $generated@@590) $generated@@70)) ($generated@@148 $generated@@589 ($generated@@264 $generated@@590))) (and (= ($generated@@298 ($generated@@404 ($generated@@87 $generated@@149 $generated@@4) $generated@@589)) $generated@@589) ($generated@@162 ($generated@@404 ($generated@@87 $generated@@149 $generated@@4) $generated@@589) ($generated@@264 $generated@@590))))
 :pattern ( ($generated@@148 $generated@@589 ($generated@@264 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@149) (= (type $generated@@592) $generated@@70)) ($generated@@148 $generated@@591 ($generated@@184 $generated@@592))) (and (= ($generated@@298 ($generated@@404 ($generated@@87 $generated@@149 $generated@@2) $generated@@591)) $generated@@591) ($generated@@162 ($generated@@404 ($generated@@87 $generated@@149 $generated@@2) $generated@@591) ($generated@@184 $generated@@592))))
 :pattern ( ($generated@@148 $generated@@591 ($generated@@184 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@149) (= (type $generated@@594) $generated@@70)) ($generated@@148 $generated@@593 ($generated@@522 $generated@@594))) (and (= ($generated@@298 ($generated@@404 ($generated@@287 $generated@@149) $generated@@593)) $generated@@593) ($generated@@162 ($generated@@404 ($generated@@287 $generated@@149) $generated@@593) ($generated@@522 $generated@@594))))
 :pattern ( ($generated@@148 $generated@@593 ($generated@@522 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@70) (= (type $generated@@596) $generated@@149)) ($generated@@148 $generated@@596 ($generated@@144 $generated@@595))) (and (= ($generated@@298 ($generated@@404 $generated@@88 $generated@@596)) $generated@@596) ($generated@@162 ($generated@@404 $generated@@88 $generated@@596) ($generated@@144 $generated@@595))))
 :pattern ( ($generated@@148 $generated@@596 ($generated@@144 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@70) (= (type $generated@@598) $generated@@149)) ($generated@@148 $generated@@598 ($generated@@164 $generated@@597))) (and (= ($generated@@298 ($generated@@404 $generated@@88 $generated@@598)) $generated@@598) ($generated@@162 ($generated@@404 $generated@@88 $generated@@598) ($generated@@164 $generated@@597))))
 :pattern ( ($generated@@148 $generated@@598 ($generated@@164 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
 (=> (and (and (and (= (type $generated@@599) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@600) $generated@@88)) (= (type $generated@@601) ($generated@@72 $generated@@603))) ($generated@@145 ($generated@@93 $generated@@599 $generated@@600 ($generated@@95 ($generated@@92 $generated@@599 $generated@@600) $generated@@601 $generated@@602)))) ($generated@@155 $generated@@599 ($generated@@93 $generated@@599 $generated@@600 ($generated@@95 ($generated@@92 $generated@@599 $generated@@600) $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@93 $generated@@599 $generated@@600 ($generated@@95 ($generated@@92 $generated@@599 $generated@@600) $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@604) ($generated@@87 $generated@@149 $generated@@2)) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@604 ($generated@@184 $generated@@605) $generated@@606) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@149) (< 0 ($generated ($generated@@92 $generated@@604 $generated@@607)))) ($generated@@273 $generated@@607 $generated@@605 $generated@@606))
 :pattern ( ($generated@@92 $generated@@604 $generated@@607))
))))
 :pattern ( ($generated@@85 $generated@@604 ($generated@@184 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@171) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@145 $generated@@610) (and ($generated@@169 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@70) ($generated@@85 $generated@@608 ($generated@@170 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@85 $generated@@608 ($generated@@170 $generated@@609 $generated@@611) $generated@@610))
))))) ($generated@@273 ($generated@@178 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@273 ($generated@@178 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@171) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@145 $generated@@614) (and ($generated@@169 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@70) ($generated@@85 $generated@@612 ($generated@@170 $generated@@615 $generated@@613) $generated@@614))
 :pattern ( ($generated@@85 $generated@@612 ($generated@@170 $generated@@615 $generated@@613) $generated@@614))
))))) ($generated@@273 ($generated@@179 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@273 ($generated@@179 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@149) (= (type $generated@@617) $generated@@149)) (= ($generated@@245 ($generated@@269 $generated@@616) ($generated@@269 $generated@@617)) ($generated@@269 ($generated@@245 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@245 ($generated@@269 $generated@@616) ($generated@@269 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@298 ($generated@@269 $generated@@618)) ($generated@@269 ($generated@@298 $generated@@618)))
 :pattern ( ($generated@@298 ($generated@@269 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@288 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@287 $generated@@620)) (= ($generated@@286 $generated@@619) 0)) (= $generated@@619 ($generated@@285 $generated@@620))))
 :pattern ( ($generated@@286 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@87 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@311 ($generated@@93 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@311 $generated@@621) ($generated ($generated@@92 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@311 ($generated@@93 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@626) $generated@@2)) ($generated@@85 $generated@@626 $generated@@46 $generated@@625))
 :pattern ( ($generated@@85 $generated@@626 $generated@@46 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@628) $generated@@3)) ($generated@@85 $generated@@628 $generated@@47 $generated@@627))
 :pattern ( ($generated@@85 $generated@@628 $generated@@47 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@630) $generated@@4)) ($generated@@85 $generated@@630 $generated@@44 $generated@@629))
 :pattern ( ($generated@@85 $generated@@630 $generated@@44 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@632) $generated@@480)) ($generated@@85 $generated@@632 $generated@@45 $generated@@631))
 :pattern ( ($generated@@85 $generated@@632 $generated@@45 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@634) $generated@@149)) ($generated@@85 $generated@@634 $generated@@48 $generated@@633))
 :pattern ( ($generated@@85 $generated@@634 $generated@@48 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@287 $generated@@149)) (= (type $generated@@636) $generated@@70)) (= ($generated@@162 $generated@@635 ($generated@@522 $generated@@636)) (forall (($generated@@637 Int) ) (!  (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@286 $generated@@635))) ($generated@@148 ($generated@@523 $generated@@635 $generated@@637) $generated@@636))
 :pattern ( ($generated@@523 $generated@@635 $generated@@637))
))))
 :pattern ( ($generated@@162 $generated@@635 ($generated@@522 $generated@@636)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 Int) ) (!  (=> (= (type $generated@@639) ($generated@@287 $generated@@149)) (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@286 $generated@@639))) (< ($generated@@567 ($generated@@404 $generated@@171 ($generated@@523 $generated@@639 $generated@@640))) ($generated@@638 $generated@@639))))
 :pattern ( ($generated@@567 ($generated@@404 $generated@@171 ($generated@@523 $generated@@639 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@642) $generated@@70)) (= (type $generated@@643) $generated@@70)) ($generated@@162 $generated@@641 ($generated@@432 $generated@@642 $generated@@643))) (and (and ($generated@@162 ($generated@@321 $generated@@641) ($generated@@259 $generated@@642)) ($generated@@162 ($generated@@372 $generated@@641) ($generated@@259 $generated@@643))) ($generated@@162 ($generated@@403 $generated@@641) ($generated@@259 ($generated@@170 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@162 $generated@@641 ($generated@@432 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@341 $generated@@149 $generated@@149)) (= (type $generated@@645) $generated@@70)) (= (type $generated@@646) $generated@@70)) ($generated@@162 $generated@@644 ($generated@@440 $generated@@645 $generated@@646))) (and (and ($generated@@162 ($generated@@339 $generated@@644) ($generated@@264 $generated@@645)) ($generated@@162 ($generated@@383 $generated@@644) ($generated@@264 $generated@@646))) ($generated@@162 ($generated@@414 $generated@@644) ($generated@@264 ($generated@@170 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@162 $generated@@644 ($generated@@440 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@2) ($generated@@162 $generated@@647 $generated@@46))
 :pattern ( ($generated@@162 $generated@@647 $generated@@46))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@3) ($generated@@162 $generated@@648 $generated@@47))
 :pattern ( ($generated@@162 $generated@@648 $generated@@47))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@4) ($generated@@162 $generated@@649 $generated@@44))
 :pattern ( ($generated@@162 $generated@@649 $generated@@44))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@480) ($generated@@162 $generated@@650 $generated@@45))
 :pattern ( ($generated@@162 $generated@@650 $generated@@45))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@149) ($generated@@162 $generated@@651 $generated@@48))
 :pattern ( ($generated@@162 $generated@@651 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 (T@U) Bool)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(assert  (and (and (and (and (= (type $generated@@652) ($generated@@191 $generated@@88 $generated@@4)) (= (type $generated@@653) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@655) $generated@@149)) (= (type $generated@@656) $generated@@70)) (= (type $generated@@657) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@659  (=> (and (= $generated@@652 ($generated@@190 $generated@@146 $generated@@653 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@660  (=> (and (and (and ($generated@@145 $generated@@653) ($generated@@654 $generated@@653)) (and ($generated@@148 $generated@@655 $generated@@656) ($generated@@273 $generated@@655 $generated@@656 $generated@@653))) (and (and (not (= $generated@@657 $generated@@146)) ($generated@@162 $generated@@657 ($generated@@164 $generated@@656))) (and (= 0 $generated@@658) (= (ControlFlow 0 3) 2)))) $generated@@659)))
$generated@@660)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (and (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (= (ControlFlow 0 2) (- 0 1))) (<= ($generated@@157 0) $generated@@177))))
(let (($generated@@182  (=> (and (and (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (<= ($generated@@157 0) $generated@@177)) (and (= 1 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@531 $generated@@138) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 (T@U) Bool)
(declare-fun $generated@@600 () Int)
(assert  (and (and (and (= (type $generated@@594) ($generated@@166 $generated@@79 $generated@@4)) (= (type $generated@@595) $generated@@79)) (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@598) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@601  (=> (= $generated@@594 ($generated@@165 $generated@@595 $generated@@596 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@141 ($generated@@8 ($generated@@240 25)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 25)) $generated@@138) (=> (= $generated@@597 ($generated@@240 25)) (=> (and (and (and ($generated@@246 $generated@@598) ($generated@@599 $generated@@598)) (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@79) (=> (and (not (= $generated@@602 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@596 $generated@@602) $generated@@60))) (= ($generated@@83 $generated@@598 $generated@@602) ($generated@@83 $generated@@596 $generated@@602))))
 :pattern ( ($generated@@83 $generated@@598 $generated@@602))
))) (and ($generated@@134 $generated@@596 $generated@@598) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@141 ($generated@@8 ($generated@@240 (- 0 25))) $generated@@138))))))))
(let (($generated@@603  (=> (and (and ($generated@@246 $generated@@596) ($generated@@599 $generated@@596)) (and (= 2 $generated@@600) (= (ControlFlow 0 4) 2))) $generated@@601)))
$generated@@603)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@531 $generated@@138) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Bool)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@629) $generated@@154) (= (type $generated@@630) $generated@@66)) (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@631) $generated@@66)) (= (type $generated@@632) $generated@@154)) (= (type $generated@@633) $generated@@154)) (= (type $generated@@634) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@635) $generated@@154)) (= (type $generated@@606) $generated@@79)) (= (type $generated@@619) $generated@@154)) (= (type $generated@@620) $generated@@66)) (= (type $generated@@621) $generated@@66)) (= (type $generated@@622) $generated@@154)) (= (type $generated@@623) $generated@@154)) (= (type $generated@@624) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@625) $generated@@154)) (= (type $generated@@610) $generated@@154)) (= (type $generated@@611) $generated@@66)) (= (type $generated@@612) $generated@@154)) (= (type $generated@@613) $generated@@154)) (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@615) $generated@@154)) (= (type $generated@@597) $generated@@154)) (= (type $generated@@598) $generated@@66)) (= (type $generated@@600) $generated@@154)) (= (type $generated@@602) $generated@@154)) (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@605) $generated@@154)) (= (type $generated@@637) ($generated@@166 $generated@@79 $generated@@4))) (= (type $generated@@638) $generated@@154)) (= (type $generated@@639) $generated@@66)) (= (type $generated@@640) $generated@@154)) (= (type $generated@@642) $generated@@154)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@647  (=> (and (and (and (and (not ($generated@@0 ($generated@@242 ($generated@@11 true)))) (not ($generated@@0 ($generated@@242 ($generated@@11 true))))) (not ($generated@@0 ($generated@@242 ($generated@@11 true))))) (not ($generated@@0 ($generated@@242 ($generated@@11 true))))) (= (ControlFlow 0 23) (- 0 22))) false)))
(let (($generated@@648  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@649  (=> ($generated@@0 ($generated@@242 ($generated@@11 true))) (=> (and (= $generated@@594 (- $generated@@595 1)) (= $generated@@596 ($generated@@240 (- 0 4)))) (and (=> (= (ControlFlow 0 18) (- 0 21)) (or (<= 0 $generated@@595) (= $generated@@594 $generated@@595))) (=> (or (<= 0 $generated@@595) (= $generated@@594 $generated@@595)) (and (=> (= (ControlFlow 0 18) (- 0 20)) (< $generated@@594 $generated@@595)) (=> (< $generated@@594 $generated@@595) (=> (and ($generated@@221 $generated@@597 $generated@@598) ($generated@@247 $generated@@597 $generated@@598 $generated@@599)) (=> (and (and (= $generated@@600 ($generated@@268 ($generated@@8 $generated@@601))) (= $generated@@602 ($generated@@268 ($generated@@8 $generated@@596)))) (and ($generated@@246 $generated@@603) ($generated@@604 $generated@@603))) (=> (and (and (and ($generated@@221 $generated@@605 $generated@@46) ($generated@@247 $generated@@605 $generated@@46 $generated@@603)) (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@79) (=> (and (not (= $generated@@650 $generated@@606)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@599 $generated@@650) $generated@@60))) (= ($generated@@83 $generated@@603 $generated@@650) ($generated@@83 $generated@@599 $generated@@650))))
 :pattern ( ($generated@@83 $generated@@603 $generated@@650))
))) (and ($generated@@134 $generated@@599 $generated@@603) (= $generated@@607 ($generated ($generated@@326 $generated@@2 $generated@@605))))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (<= ($generated@@240 0) $generated@@607)) (=> (<= ($generated@@240 0) $generated@@607) (=> (= (ControlFlow 0 18) 2) $generated@@648))))))))))))))
(let (($generated@@651  (=> ($generated@@0 ($generated@@242 ($generated@@11 true))) (=> (and (= $generated@@608 (- $generated@@595 1)) (= $generated@@609 ($generated@@240 (- 0 4)))) (and (=> (= (ControlFlow 0 14) (- 0 17)) (or (<= 0 $generated@@595) (= $generated@@608 $generated@@595))) (=> (or (<= 0 $generated@@595) (= $generated@@608 $generated@@595)) (and (=> (= (ControlFlow 0 14) (- 0 16)) (< $generated@@608 $generated@@595)) (=> (< $generated@@608 $generated@@595) (=> (and ($generated@@221 $generated@@610 $generated@@611) ($generated@@247 $generated@@610 $generated@@611 $generated@@599)) (=> (and (and (= $generated@@612 ($generated@@268 ($generated@@8 $generated@@601))) (= $generated@@613 ($generated@@268 ($generated@@8 $generated@@609)))) (and ($generated@@246 $generated@@614) ($generated@@604 $generated@@614))) (=> (and (and (and ($generated@@221 $generated@@615 $generated@@46) ($generated@@247 $generated@@615 $generated@@46 $generated@@614)) (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@79) (=> (and (not (= $generated@@652 $generated@@606)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@599 $generated@@652) $generated@@60))) (= ($generated@@83 $generated@@614 $generated@@652) ($generated@@83 $generated@@599 $generated@@652))))
 :pattern ( ($generated@@83 $generated@@614 $generated@@652))
))) (and ($generated@@134 $generated@@599 $generated@@614) (= $generated@@616 ($generated ($generated@@326 $generated@@2 $generated@@615))))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (<= ($generated@@240 0) $generated@@616)) (=> (<= ($generated@@240 0) $generated@@616) (=> (= (ControlFlow 0 14) 2) $generated@@648))))))))))))))
(let (($generated@@653  (=> (and ($generated@@0 ($generated@@242 ($generated@@11 true))) (= $generated@@617 (- $generated@@595 1))) (and (=> (= (ControlFlow 0 9) (- 0 13)) ($generated@@141 ($generated@@8 ($generated@@240 4)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 4)) $generated@@138) (=> (= $generated@@618 ($generated@@240 4)) (and (=> (= (ControlFlow 0 9) (- 0 12)) (or (<= 0 $generated@@595) (= $generated@@617 $generated@@595))) (=> (or (<= 0 $generated@@595) (= $generated@@617 $generated@@595)) (and (=> (= (ControlFlow 0 9) (- 0 11)) (< $generated@@617 $generated@@595)) (=> (< $generated@@617 $generated@@595) (=> (and (and (and (and ($generated@@221 $generated@@619 $generated@@620) ($generated@@247 $generated@@619 $generated@@620 $generated@@599)) (= $generated@@621 $generated@@138)) (and (and (= $generated@@622 ($generated@@268 ($generated@@8 $generated@@601))) (= $generated@@623 ($generated@@268 ($generated@@8 $generated@@618)))) (and ($generated@@246 $generated@@624) ($generated@@604 $generated@@624)))) (and (and (and ($generated@@221 $generated@@625 $generated@@621) ($generated@@247 $generated@@625 $generated@@621 $generated@@624)) (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@79) (=> (and (not (= $generated@@654 $generated@@606)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@599 $generated@@654) $generated@@60))) (= ($generated@@83 $generated@@624 $generated@@654) ($generated@@83 $generated@@599 $generated@@654))))
 :pattern ( ($generated@@83 $generated@@624 $generated@@654))
))) (and ($generated@@134 $generated@@599 $generated@@624) (= $generated@@626 ($generated ($generated@@326 $generated@@2 $generated@@625)))))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (<= ($generated@@240 0) $generated@@626)) (=> (<= ($generated@@240 0) $generated@@626) (=> (= (ControlFlow 0 9) 2) $generated@@648))))))))))))))
(let (($generated@@655  (=> (and ($generated@@0 ($generated@@242 ($generated@@11 true))) (= $generated@@627 (- $generated@@595 1))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@141 ($generated@@8 ($generated@@240 (- 0 4))) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 (- 0 4))) $generated@@138) (=> (= $generated@@628 ($generated@@240 (- 0 4))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@595) (= $generated@@627 $generated@@595))) (=> (or (<= 0 $generated@@595) (= $generated@@627 $generated@@595)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< $generated@@627 $generated@@595)) (=> (< $generated@@627 $generated@@595) (=> (and (and (and (and ($generated@@221 $generated@@629 $generated@@630) ($generated@@247 $generated@@629 $generated@@630 $generated@@599)) (= $generated@@631 $generated@@138)) (and (and (= $generated@@632 ($generated@@268 ($generated@@8 $generated@@601))) (= $generated@@633 ($generated@@268 ($generated@@8 $generated@@628)))) (and ($generated@@246 $generated@@634) ($generated@@604 $generated@@634)))) (and (and (and ($generated@@221 $generated@@635 $generated@@631) ($generated@@247 $generated@@635 $generated@@631 $generated@@634)) (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@79) (=> (and (not (= $generated@@656 $generated@@606)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@599 $generated@@656) $generated@@60))) (= ($generated@@83 $generated@@634 $generated@@656) ($generated@@83 $generated@@599 $generated@@656))))
 :pattern ( ($generated@@83 $generated@@634 $generated@@656))
))) (and ($generated@@134 $generated@@599 $generated@@634) (= $generated@@636 ($generated ($generated@@326 $generated@@2 $generated@@635)))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@240 0) $generated@@636)) (=> (<= ($generated@@240 0) $generated@@636) (=> (= (ControlFlow 0 4) 2) $generated@@648))))))))))))))
(let (($generated@@657  (=> (< 0 $generated@@595) (and (=> (= (ControlFlow 0 24) (- 0 25)) ($generated@@141 ($generated@@8 ($generated@@240 5)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 5)) $generated@@138) (=> (= $generated@@601 ($generated@@240 5)) (and (and (and (and (=> (= (ControlFlow 0 24) 4) $generated@@655) (=> (= (ControlFlow 0 24) 9) $generated@@653)) (=> (= (ControlFlow 0 24) 14) $generated@@651)) (=> (= (ControlFlow 0 24) 18) $generated@@649)) (=> (= (ControlFlow 0 24) 23) $generated@@647))))))))
(let (($generated@@658  (=> (and (<= $generated@@595 0) (= (ControlFlow 0 3) 2)) $generated@@648)))
(let (($generated@@659  (=> (= $generated@@637 ($generated@@165 $generated@@606 $generated@@599 $generated@@60 false)) (and (=> (= (ControlFlow 0 26) 24) $generated@@657) (=> (= (ControlFlow 0 26) 3) $generated@@658)))))
(let (($generated@@660  (=> (and (and (and (and ($generated@@246 $generated@@599) ($generated@@604 $generated@@599)) (and ($generated@@221 $generated@@638 $generated@@639) ($generated@@247 $generated@@638 $generated@@639 $generated@@599))) (and (and ($generated@@221 $generated@@640 $generated@@639) ($generated@@247 $generated@@640 $generated@@639 $generated@@599)) (=> $generated@@641 (and ($generated@@221 $generated@@642 $generated@@639) ($generated@@247 $generated@@642 $generated@@639 $generated@@599))))) (and (and (and (<= ($generated@@240 0) $generated@@643) true) (and (<= ($generated@@240 0) $generated@@644) true)) (and (and (<= ($generated@@240 0) $generated@@645) true) (and (= 1 $generated@@646) (= (ControlFlow 0 27) 26))))) $generated@@659)))
$generated@@660)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 8))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 14) (- 15))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 18) (- 19))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 (T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U) Bool)
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@285 (T@T T@T) T@U)
(declare-fun $generated@@286 (T@T T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@431 () T@T)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@474 (T@U Int) T@U)
(declare-fun $generated@@483 (T@U) Int)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert  (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@217 $generated@@221 $generated@@222 $generated@@223)) $generated@@150)
 :pattern ( ($generated@@217 $generated@@221 $generated@@222 $generated@@223))
)) (forall (($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(= (type ($generated@@218 $generated@@224)) $generated@@225))
 :pattern ( ($generated@@218 $generated@@224))
))))
(assert  (=> (<= 0 $generated@@216) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@226) $generated@@66) (= (type $generated@@227) $generated@@150)) (= (type $generated@@228) $generated@@150)) (or ($generated@@219 $generated@@226 ($generated@@218 $generated@@227) ($generated@@218 $generated@@228)) (and (not (= 0 $generated@@216)) (and ($generated@@220 $generated@@227 $generated@@226) ($generated@@220 $generated@@228 $generated@@226))))) (= ($generated@@217 $generated@@226 ($generated@@218 $generated@@227) ($generated@@218 $generated@@228)) ($generated@@218 $generated@@228)))
 :weight 3
 :pattern ( ($generated@@217 $generated@@226 ($generated@@218 $generated@@227) ($generated@@218 $generated@@228)))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@229 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@220 $generated@@234 $generated@@232) ($generated@@220 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@229 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@141) (= (type $generated@@237) $generated@@141)) (= ($generated@@147 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@147 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@66)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@241) $generated@@66)) (= ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@150) ($generated@@0 ($generated@@83 $generated@@240 $generated@@242))) ($generated@@220 $generated@@242 $generated@@241))
 :pattern ( ($generated@@83 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@220 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@218 $generated@@250) $generated@@250)
 :pattern ( ($generated@@218 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@253) $generated@@66) (= (type $generated@@254) $generated@@66)) (= (type $generated@@255) $generated@@150)) (= (type $generated@@256) $generated@@150)) (= (type $generated@@257) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@251 $generated@@257)) (= ($generated@@76 ($generated@@229 $generated@@255 $generated@@256) ($generated@@140 $generated@@253 $generated@@254) $generated@@257)  (and ($generated@@252 $generated@@255 $generated@@253 $generated@@257) ($generated@@252 $generated@@256 $generated@@254 $generated@@257))))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@255 $generated@@256) ($generated@@140 $generated@@253 $generated@@254) $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@70)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@141) (= ($generated@@139 $generated@@260) (= ($generated@@258 $generated@@260) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@141) ($generated@@139 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@150) (= (type $generated@@263) $generated@@150)) (= $generated@@261 ($generated@@229 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@139 $generated@@261))
)))
(assert  (and (and (forall (($generated@@268 T@T) ) (= ($generated@@1 ($generated@@266 $generated@@268)) 17)) (forall (($generated@@269 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
))) (forall (($generated@@270 T@T) ) (! (= (type ($generated@@264 $generated@@270)) ($generated@@266 $generated@@270))
 :pattern ( ($generated@@264 $generated@@270))
))))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@271)) 0)
 :pattern ( ($generated@@264 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@2) (= ($generated@@137 $generated@@272 $generated@@134) (<= ($generated@@248 0) ($generated $generated@@272))))
 :pattern ( ($generated@@137 $generated@@272 $generated@@134))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@150)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@66) (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@252 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@76 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@252 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@280 T@T) ) (! (= (type ($generated@@279 $generated@@280)) ($generated@@78 $generated@@280 $generated@@2))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@81 (type $generated@@281))))
 (=> (= (type $generated@@281) ($generated@@78 $generated@@282 $generated@@2)) (and (= (= ($generated@@278 $generated@@281) 0) (= $generated@@281 ($generated@@279 $generated@@282))) (=> (not (= ($generated@@278 $generated@@281) 0)) (exists (($generated@@283 T@U) ) (!  (and (= (type $generated@@283) $generated@@282) (< 0 ($generated ($generated@@83 $generated@@281 $generated@@283))))
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
))))))
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert  (and (and (and (and (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@289 $generated@@290)) 18)) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@286 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@286 $generated@@293 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@286 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@287 (type $generated@@295))))
(= (type ($generated@@284 $generated@@295)) ($generated@@78 $generated@@296 $generated@@4)))
 :pattern ( ($generated@@284 $generated@@295))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= (type ($generated@@285 $generated@@297 $generated@@298)) ($generated@@286 $generated@@297 $generated@@298))
 :pattern ( ($generated@@285 $generated@@297 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@T) ) (! (let (($generated@@301 (type $generated@@299)))
 (not ($generated@@0 ($generated@@83 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299))))
 :pattern ( (let (($generated@@301 (type $generated@@299)))
($generated@@83 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299)))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 19)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@78 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@83 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@83 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (=> (<= 0 $generated@@216) (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (= (type $generated@@320) $generated@@66) (= (type $generated@@321) $generated@@150)) (= (type $generated@@322) $generated@@150)) (or ($generated@@219 $generated@@320 $generated@@321 $generated@@322) (and (not (= 0 $generated@@216)) (and ($generated@@220 $generated@@321 $generated@@320) ($generated@@220 $generated@@322 $generated@@320))))) (= ($generated@@217 $generated@@320 $generated@@321 $generated@@322) $generated@@322))
 :pattern ( ($generated@@217 $generated@@320 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@156 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@278 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@156 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@150) ($generated@@220 $generated@@329 $generated@@134)) (and (= ($generated@@273 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@137 ($generated@@326 $generated@@2 $generated@@329) $generated@@134)))
 :pattern ( ($generated@@220 $generated@@329 $generated@@134))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@288 (type $generated@@330))))
(let (($generated@@332 ($generated@@287 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@286 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@285 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@284 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@284 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@288 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@288 (type $generated@@337))))
(let (($generated@@339 ($generated@@287 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@286 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@285 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@306 (type $generated@@341))))
(let (($generated@@343 ($generated@@305 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@304 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@303 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@302 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@302 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@306 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@306 (type $generated@@348))))
(let (($generated@@350 ($generated@@305 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@304 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@303 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@137 $generated@@352 ($generated@@155 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@220 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@137 $generated@@352 ($generated@@155 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@238 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@150) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@252 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@238 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@243 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@150) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@252 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@243 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@279 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@279 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@288 (type $generated@@368))))
(let (($generated@@370 ($generated@@287 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@286 $generated@@150 $generated@@150)) (= (type $generated@@372) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@284 $generated@@371) ($generated@@148 ($generated@@326 $generated@@141 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@148 ($generated@@326 $generated@@141 $generated@@372))) ($generated@@149 ($generated@@326 $generated@@141 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@306 (type $generated@@376))))
(let (($generated@@378 ($generated@@305 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@304 $generated@@150 $generated@@150)) (= (type $generated@@380) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@302 $generated@@379) ($generated@@148 ($generated@@326 $generated@@141 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@148 ($generated@@326 $generated@@141 $generated@@380))) ($generated@@149 ($generated@@326 $generated@@141 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@287 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@286 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@284 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@284 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@305 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@304 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@302 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@302 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@286 $generated@@150 $generated@@150)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@284 $generated@@394) $generated@@398))) (and ($generated@@252 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@252 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@284 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@304 $generated@@150 $generated@@150)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@302 $generated@@402) $generated@@406))) (and ($generated@@252 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@252 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@302 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@78 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@306 (type $generated@@409))))
(let (($generated@@411 ($generated@@305 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@304 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@303 $generated@@411 $generated@@410)) (= ($generated@@302 $generated@@409) ($generated@@407 $generated@@411))))))
 :pattern ( ($generated@@302 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@306 (type $generated@@412))))
(let (($generated@@414 ($generated@@305 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@304 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@303 $generated@@414 $generated@@413)) (= ($generated@@345 $generated@@412) ($generated@@407 $generated@@413))))))
 :pattern ( ($generated@@345 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@306 (type $generated@@415))))
(let (($generated@@417 ($generated@@305 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@304 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@303 $generated@@417 $generated@@416)) (= ($generated@@373 $generated@@415) ($generated@@407 $generated@@150))))))
 :pattern ( ($generated@@373 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@288 (type $generated@@418))))
(let (($generated@@420 ($generated@@287 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@286 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@285 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@150) (= (type $generated@@422) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@418) ($generated@@273 ($generated@@229 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@365 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@306 (type $generated@@423))))
(let (($generated@@425 ($generated@@305 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@304 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@303 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@150) (= (type $generated@@427) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@423) ($generated@@273 ($generated@@229 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@373 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@220 $generated@@428 $generated@@46)) (and (= ($generated@@273 ($generated@@326 $generated@@2 $generated@@428)) $generated@@428) ($generated@@137 ($generated@@326 $generated@@2 $generated@@428) $generated@@46)))
 :pattern ( ($generated@@220 $generated@@428 $generated@@46))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@150) ($generated@@220 $generated@@429 $generated@@47)) (and (= ($generated@@273 ($generated@@326 $generated@@3 $generated@@429)) $generated@@429) ($generated@@137 ($generated@@326 $generated@@3 $generated@@429) $generated@@47)))
 :pattern ( ($generated@@220 $generated@@429 $generated@@47))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@220 $generated@@430 $generated@@44)) (and (= ($generated@@273 ($generated@@326 $generated@@4 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@326 $generated@@4 $generated@@430) $generated@@44)))
 :pattern ( ($generated@@220 $generated@@430 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@431) 20))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@150) ($generated@@220 $generated@@432 $generated@@45)) (and (= ($generated@@273 ($generated@@326 $generated@@431 $generated@@432)) $generated@@432) ($generated@@137 ($generated@@326 $generated@@431 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@220 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@66) (= ($generated@@220 ($generated@@273 $generated@@433) $generated@@434) ($generated@@137 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@220 ($generated@@273 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@81 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@78 $generated@@436 $generated@@2)) (<= 0 ($generated@@278 $generated@@435))))
 :pattern ( ($generated@@278 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@267 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@266 $generated@@438)) (<= 0 ($generated@@265 $generated@@437))))
 :pattern ( ($generated@@265 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@66)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@66) (= (type $generated@@442) $generated@@66)) (= ($generated@@439 ($generated@@391 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@391 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@66)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@443 ($generated@@391 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@391 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@447 $generated@@448)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@66)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@66) (= (type $generated@@452) $generated@@66)) (= ($generated@@449 ($generated@@399 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@399 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@453 ($generated@@399 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@457 $generated@@458)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@150) (= (type $generated@@460) $generated@@150)) (= ($generated@@258 ($generated@@229 $generated@@459 $generated@@460)) $generated@@62))
 :pattern ( ($generated@@229 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@140 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@140 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@140 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@140 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@150) (= (type $generated@@470) $generated@@150)) (= ($generated@@148 ($generated@@229 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@229 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@150) (= (type $generated@@472) $generated@@150)) (= ($generated@@149 ($generated@@229 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@229 $generated@@471 $generated@@472))
)))
(assert  (and (forall (($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@475))
)) (forall (($generated@@476 T@U) ($generated@@477 Int) ) (! (let (($generated@@478 ($generated@@267 (type $generated@@476))))
(= (type ($generated@@474 $generated@@476 $generated@@477)) $generated@@478))
 :pattern ( ($generated@@474 $generated@@476 $generated@@477))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@266 $generated@@150)) (= (type $generated@@480) $generated@@66)) (= (type $generated@@481) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@479 ($generated@@473 $generated@@480) $generated@@481) (forall (($generated@@482 Int) ) (!  (=> (and (<= 0 $generated@@482) (< $generated@@482 ($generated@@265 $generated@@479))) ($generated@@252 ($generated@@474 $generated@@479 $generated@@482) $generated@@480 $generated@@481))
 :pattern ( ($generated@@474 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@76 $generated@@479 ($generated@@473 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 Int) ) (! (= ($generated@@483 ($generated@@77 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@77 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@66) (= ($generated@@485 ($generated@@238 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@238 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@74 ($generated@@238 $generated@@488)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@489 ($generated@@243 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@243 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@492)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@493 ($generated@@155 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@155 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@496)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@497 ($generated@@473 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@473 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@74 ($generated@@473 $generated@@500)) $generated@@57))
 :pattern ( ($generated@@473 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(= ($generated@@326 $generated@@502 ($generated@@273 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@273 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@286 $generated@@150 $generated@@150)) (= (type $generated@@504) $generated@@66)) (= (type $generated@@505) $generated@@66)) (= ($generated@@137 $generated@@503 ($generated@@391 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@284 $generated@@503) $generated@@506))) (and ($generated@@220 ($generated@@83 ($generated@@366 $generated@@503) $generated@@506) $generated@@505) ($generated@@220 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@503) $generated@@506))
 :pattern ( ($generated@@83 ($generated@@284 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@137 $generated@@503 ($generated@@391 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@304 $generated@@150 $generated@@150)) (= (type $generated@@508) $generated@@66)) (= (type $generated@@509) $generated@@66)) (= ($generated@@137 $generated@@507 ($generated@@399 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@302 $generated@@507) $generated@@510))) (and ($generated@@220 ($generated@@83 ($generated@@374 $generated@@507) $generated@@510) $generated@@509) ($generated@@220 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@507) $generated@@510))
 :pattern ( ($generated@@83 ($generated@@302 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@137 $generated@@507 ($generated@@399 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@150) (= (type $generated@@514) $generated@@150)) (< ($generated@@511 $generated@@513) ($generated@@512 ($generated@@229 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@229 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) (= (type $generated@@516) $generated@@150)) (< ($generated@@511 $generated@@516) ($generated@@512 ($generated@@229 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@229 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@150) (= (type $generated@@518) $generated@@66)) (= (type $generated@@519) $generated@@66)) ($generated@@220 $generated@@517 ($generated@@391 $generated@@518 $generated@@519))) (and (= ($generated@@273 ($generated@@326 ($generated@@286 $generated@@150 $generated@@150) $generated@@517)) $generated@@517) ($generated@@137 ($generated@@326 ($generated@@286 $generated@@150 $generated@@150) $generated@@517) ($generated@@391 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@517 ($generated@@391 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@150) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@220 $generated@@520 ($generated@@399 $generated@@521 $generated@@522))) (and (= ($generated@@273 ($generated@@326 ($generated@@304 $generated@@150 $generated@@150) $generated@@520)) $generated@@520) ($generated@@137 ($generated@@326 ($generated@@304 $generated@@150 $generated@@150) $generated@@520) ($generated@@399 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@220 $generated@@520 ($generated@@399 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@66) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@150)) ($generated@@220 $generated@@525 ($generated@@140 $generated@@523 $generated@@524))) (and (= ($generated@@273 ($generated@@326 $generated@@141 $generated@@525)) $generated@@525) ($generated@@137 ($generated@@326 $generated@@141 $generated@@525) ($generated@@140 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@220 $generated@@525 ($generated@@140 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
 (not ($generated@@0 ($generated@@83 ($generated@@407 $generated@@527) $generated@@526))))
 :pattern ( (let (($generated@@527 (type $generated@@526)))
($generated@@83 ($generated@@407 $generated@@527) $generated@@526)))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@71)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@66) (= (type $generated@@531) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@530 $generated@@531)) $generated@@63) (= ($generated@@528 ($generated@@140 $generated@@530 $generated@@531)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@141) (= ($generated@@511 ($generated@@273 $generated@@532)) ($generated@@512 $generated@@532)))
 :pattern ( ($generated@@511 ($generated@@273 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@150) ($generated@@220 $generated@@533 ($generated@@77 0))) (and (= ($generated@@273 ($generated@@326 $generated@@2 $generated@@533)) $generated@@533) ($generated@@137 ($generated@@326 ($generated@@78 $generated@@150 $generated@@4) $generated@@533) ($generated@@77 0))))
 :pattern ( ($generated@@220 $generated@@533 ($generated@@77 0)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@150) (= (type $generated@@535) $generated@@66)) ($generated@@220 $generated@@534 ($generated@@238 $generated@@535))) (and (= ($generated@@273 ($generated@@326 ($generated@@78 $generated@@150 $generated@@4) $generated@@534)) $generated@@534) ($generated@@137 ($generated@@326 ($generated@@78 $generated@@150 $generated@@4) $generated@@534) ($generated@@238 $generated@@535))))
 :pattern ( ($generated@@220 $generated@@534 ($generated@@238 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) ($generated@@220 $generated@@536 ($generated@@243 $generated@@537))) (and (= ($generated@@273 ($generated@@326 ($generated@@78 $generated@@150 $generated@@4) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@326 ($generated@@78 $generated@@150 $generated@@4) $generated@@536) ($generated@@243 $generated@@537))))
 :pattern ( ($generated@@220 $generated@@536 ($generated@@243 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@66)) ($generated@@220 $generated@@538 ($generated@@155 $generated@@539))) (and (= ($generated@@273 ($generated@@326 ($generated@@78 $generated@@150 $generated@@2) $generated@@538)) $generated@@538) ($generated@@137 ($generated@@326 ($generated@@78 $generated@@150 $generated@@2) $generated@@538) ($generated@@155 $generated@@539))))
 :pattern ( ($generated@@220 $generated@@538 ($generated@@155 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@66)) ($generated@@220 $generated@@540 ($generated@@473 $generated@@541))) (and (= ($generated@@273 ($generated@@326 ($generated@@266 $generated@@150) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@326 ($generated@@266 $generated@@150) $generated@@540) ($generated@@473 $generated@@541))))
 :pattern ( ($generated@@220 $generated@@540 ($generated@@473 $generated@@541)))
)))
(assert  (=> (<= 0 $generated@@216) (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@66) (= (type $generated@@543) $generated@@150)) (= (type $generated@@544) $generated@@150)) (or ($generated@@219 $generated@@542 $generated@@543 $generated@@544) (and (not (= 0 $generated@@216)) (and ($generated@@220 $generated@@543 $generated@@542) ($generated@@220 $generated@@544 $generated@@542))))) ($generated@@220 ($generated@@217 $generated@@542 $generated@@543 $generated@@544) $generated@@542))
 :pattern ( ($generated@@217 $generated@@542 $generated@@543 $generated@@544))
))))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@528 $generated@@134) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@155 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@252 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@155 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@141) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@251 $generated@@551) (and ($generated@@139 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@140 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@140 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@252 ($generated@@148 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@252 ($generated@@148 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@141) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@251 $generated@@555) (and ($generated@@139 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@140 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@140 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@252 ($generated@@149 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@252 ($generated@@149 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@150) (= (type $generated@@558) $generated@@150)) (= ($generated@@229 ($generated@@218 $generated@@557) ($generated@@218 $generated@@558)) ($generated@@218 ($generated@@229 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@229 ($generated@@218 $generated@@557) ($generated@@218 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@273 ($generated@@8 ($generated@@248 $generated@@559))) ($generated@@218 ($generated@@273 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@273 ($generated@@8 ($generated@@248 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@273 ($generated@@218 $generated@@560)) ($generated@@218 ($generated@@273 $generated@@560)))
 :pattern ( ($generated@@273 ($generated@@218 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@267 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@266 $generated@@562)) (= ($generated@@265 $generated@@561) 0)) (= $generated@@561 ($generated@@264 $generated@@562))))
 :pattern ( ($generated@@265 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@278 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@278 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@278 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@431)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@150)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@266 $generated@@150)) (= (type $generated@@578) $generated@@66)) (= ($generated@@137 $generated@@577 ($generated@@473 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@265 $generated@@577))) ($generated@@220 ($generated@@474 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@474 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@137 $generated@@577 ($generated@@473 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@266 $generated@@150)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@265 $generated@@581))) (< ($generated@@512 ($generated@@326 $generated@@141 ($generated@@474 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@512 ($generated@@326 $generated@@141 ($generated@@474 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@286 $generated@@150 $generated@@150)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@137 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@137 ($generated@@284 $generated@@583) ($generated@@238 $generated@@584)) ($generated@@137 ($generated@@334 $generated@@583) ($generated@@238 $generated@@585))) ($generated@@137 ($generated@@365 $generated@@583) ($generated@@238 ($generated@@140 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@137 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@304 $generated@@150 $generated@@150)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@137 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@137 ($generated@@302 $generated@@586) ($generated@@243 $generated@@587)) ($generated@@137 ($generated@@345 $generated@@586) ($generated@@243 $generated@@588))) ($generated@@137 ($generated@@373 $generated@@586) ($generated@@243 ($generated@@140 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@137 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@137 $generated@@589 $generated@@46))
 :pattern ( ($generated@@137 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@137 $generated@@590 $generated@@47))
 :pattern ( ($generated@@137 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@137 $generated@@591 $generated@@44))
 :pattern ( ($generated@@137 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@431) ($generated@@137 $generated@@592 $generated@@45))
 :pattern ( ($generated@@137 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@150) ($generated@@137 $generated@@593 $generated@@48))
 :pattern ( ($generated@@137 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 (T@U) Bool)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () Bool)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@605) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@606) $generated@@79)) (= (type $generated@@608) $generated@@150)) (= (type $generated@@609) $generated@@66)) (= (type $generated@@610) $generated@@150)) (= (type $generated@@612) $generated@@150)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@616  (=> (and (and (and (and (not ($generated@@0 ($generated@@218 ($generated@@11 true)))) (not ($generated@@0 ($generated@@218 ($generated@@11 true))))) (not ($generated@@0 ($generated@@218 ($generated@@11 true))))) (not ($generated@@0 ($generated@@218 ($generated@@11 true))))) (= (ControlFlow 0 15) (- 0 14))) false)))
(let (($generated@@617  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@618  (=> ($generated@@0 ($generated@@218 ($generated@@11 true))) (=> (and ($generated@@76 ($generated@@8 $generated@@594) $generated@@46 $generated@@595) (= $generated@@596 ($generated@@248 (- 0 4)))) (=> (and (and ($generated@@76 ($generated@@8 $generated@@596) $generated@@46 $generated@@595) ($generated@@219 $generated@@46 ($generated@@273 ($generated@@8 $generated@@594)) ($generated@@273 ($generated@@8 ($generated@@248 (- 0 4)))))) (and ($generated@@219 $generated@@46 ($generated@@273 ($generated@@8 $generated@@594)) ($generated@@273 ($generated@@8 ($generated@@248 (- 0 4))))) (= $generated@@597 ($generated ($generated@@326 $generated@@2 ($generated@@217 $generated@@46 ($generated@@273 ($generated@@8 $generated@@594)) ($generated@@273 ($generated@@8 ($generated@@248 (- 0 4)))))))))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (<= ($generated@@248 0) $generated@@597)) (=> (<= ($generated@@248 0) $generated@@597) (=> (= (ControlFlow 0 12) 2) $generated@@617))))))))
(let (($generated@@619  (=> ($generated@@0 ($generated@@218 ($generated@@11 true))) (=> (and ($generated@@76 ($generated@@8 $generated@@594) $generated@@46 $generated@@595) (= $generated@@598 ($generated@@248 (- 0 4)))) (=> (and (and ($generated@@76 ($generated@@8 $generated@@598) $generated@@46 $generated@@595) ($generated@@219 $generated@@46 ($generated@@273 ($generated@@8 $generated@@594)) ($generated@@273 ($generated@@8 ($generated@@248 (- 0 4)))))) (and ($generated@@219 $generated@@46 ($generated@@273 ($generated@@8 $generated@@594)) ($generated@@273 ($generated@@8 ($generated@@248 (- 0 4))))) (= $generated@@599 ($generated ($generated@@326 $generated@@2 ($generated@@217 $generated@@46 ($generated@@273 ($generated@@8 $generated@@594)) ($generated@@273 ($generated@@8 ($generated@@248 (- 0 4)))))))))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (<= ($generated@@248 0) $generated@@599)) (=> (<= ($generated@@248 0) $generated@@599) (=> (= (ControlFlow 0 10) 2) $generated@@617))))))))
(let (($generated@@620  (=> (and ($generated@@0 ($generated@@218 ($generated@@11 true))) ($generated@@76 ($generated@@8 $generated@@594) $generated@@134 $generated@@595)) (and (=> (= (ControlFlow 0 7) (- 0 9)) ($generated@@137 ($generated@@8 ($generated@@248 4)) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@248 4)) $generated@@134) (=> (= $generated@@600 ($generated@@248 4)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@600) $generated@@134 $generated@@595) ($generated@@219 $generated@@134 ($generated@@273 ($generated@@8 $generated@@594)) ($generated@@273 ($generated@@8 ($generated@@248 4))))) (and ($generated@@219 $generated@@134 ($generated@@273 ($generated@@8 $generated@@594)) ($generated@@273 ($generated@@8 ($generated@@248 4)))) (= $generated@@601 ($generated ($generated@@326 $generated@@2 ($generated@@217 $generated@@134 ($generated@@273 ($generated@@8 $generated@@594)) ($generated@@273 ($generated@@8 ($generated@@248 4))))))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (<= ($generated@@248 0) $generated@@601)) (=> (<= ($generated@@248 0) $generated@@601) (=> (= (ControlFlow 0 7) 2) $generated@@617))))))))))
(let (($generated@@621  (=> (and ($generated@@0 ($generated@@218 ($generated@@11 true))) ($generated@@76 ($generated@@8 $generated@@594) $generated@@134 $generated@@595)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@137 ($generated@@8 ($generated@@248 (- 0 4))) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@248 (- 0 4))) $generated@@134) (=> (= $generated@@602 ($generated@@248 (- 0 4))) (=> (and (and ($generated@@76 ($generated@@8 $generated@@602) $generated@@134 $generated@@595) ($generated@@219 $generated@@134 ($generated@@273 ($generated@@8 $generated@@594)) ($generated@@273 ($generated@@8 ($generated@@248 (- 0 4)))))) (and ($generated@@219 $generated@@134 ($generated@@273 ($generated@@8 $generated@@594)) ($generated@@273 ($generated@@8 ($generated@@248 (- 0 4))))) (= $generated@@603 ($generated ($generated@@326 $generated@@2 ($generated@@217 $generated@@134 ($generated@@273 ($generated@@8 $generated@@594)) ($generated@@273 ($generated@@8 ($generated@@248 (- 0 4)))))))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@248 0) $generated@@603)) (=> (<= ($generated@@248 0) $generated@@603) (=> (= (ControlFlow 0 4) 2) $generated@@617))))))))))
(let (($generated@@622  (=> (< 0 $generated@@604) (and (=> (= (ControlFlow 0 16) (- 0 17)) ($generated@@137 ($generated@@8 ($generated@@248 5)) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@248 5)) $generated@@134) (=> (= $generated@@594 ($generated@@248 5)) (and (and (and (and (=> (= (ControlFlow 0 16) 4) $generated@@621) (=> (= (ControlFlow 0 16) 7) $generated@@620)) (=> (= (ControlFlow 0 16) 10) $generated@@619)) (=> (= (ControlFlow 0 16) 12) $generated@@618)) (=> (= (ControlFlow 0 16) 15) $generated@@616))))))))
(let (($generated@@623  (=> (and (<= $generated@@604 0) (= (ControlFlow 0 3) 2)) $generated@@617)))
(let (($generated@@624  (=> (= $generated@@605 ($generated@@161 $generated@@606 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 18) 16) $generated@@622) (=> (= (ControlFlow 0 18) 3) $generated@@623)))))
(let (($generated@@625  (=> (and (and (and (and ($generated@@251 $generated@@595) ($generated@@607 $generated@@595)) (and ($generated@@220 $generated@@608 $generated@@609) ($generated@@252 $generated@@608 $generated@@609 $generated@@595))) (and (and ($generated@@220 $generated@@610 $generated@@609) ($generated@@252 $generated@@610 $generated@@609 $generated@@595)) (=> $generated@@611 (and ($generated@@220 $generated@@612 $generated@@609) ($generated@@252 $generated@@612 $generated@@609 $generated@@595))))) (and (and (and (<= ($generated@@248 0) $generated@@613) true) (and (<= ($generated@@248 0) $generated@@614) true)) (and (and (<= ($generated@@248 0) $generated@@615) true) (and (= 1 $generated@@216) (= (ControlFlow 0 19) 18))))) $generated@@624)))
$generated@@625)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 6))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 10) (- 11))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 12) (- 13))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@T T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@613 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@78 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@67)) (= (type $generated@@144) $generated@@139)) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@148)
 :pattern ( ($generated@@154 $generated@@156))
)) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@148)
 :pattern ( ($generated@@155 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@139) (= (type $generated@@159) $generated@@139)) true) (= ($generated@@153 $generated@@158 $generated@@159)  (and (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)) (= ($generated@@155 $generated@@158) ($generated@@155 $generated@@159)))))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@164) $generated@@67)) ($generated@@135 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@135 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@67) (= (type $generated@@169) $generated@@139)) ($generated@@135 $generated@@169 ($generated@@166 $generated@@168))) ($generated@@165 $generated@@169))
 :pattern ( ($generated@@165 $generated@@169) ($generated@@135 $generated@@169 ($generated@@166 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@80 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@70 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@221) ($generated@@69 $generated@@4))) (= (type $generated@@223) $generated@@80)) (= (type $generated@@224) ($generated@@69 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= (type ($generated@@226 $generated@@228 $generated@@229)) $generated@@139)
 :pattern ( ($generated@@226 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (and (= (type $generated@@230) $generated@@67) (= (type $generated@@231) $generated@@67)) (= (type $generated@@232) $generated@@148)) (= (type $generated@@233) $generated@@148)) (= ($generated@@135 ($generated@@226 $generated@@232 $generated@@233) ($generated@@138 $generated@@230 $generated@@231))  (and ($generated@@227 $generated@@232 $generated@@230) ($generated@@227 $generated@@233 $generated@@231))))
 :pattern ( ($generated@@135 ($generated@@226 $generated@@232 $generated@@233) ($generated@@138 $generated@@230 $generated@@231)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@234 $generated@@235 $generated@@236)) $generated@@139)
 :pattern ( ($generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (= (type $generated@@237) $generated@@67) (= (type $generated@@238) $generated@@148)) (= (type $generated@@239) $generated@@148)) (= ($generated@@135 ($generated@@234 $generated@@238 $generated@@239) ($generated@@166 $generated@@237))  (and ($generated@@227 $generated@@238 $generated@@237) ($generated@@227 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@135 ($generated@@234 $generated@@238 $generated@@239) ($generated@@166 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@139) (= (type $generated@@241) $generated@@139)) (= ($generated@@145 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@145 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@139) (= (type $generated@@243) $generated@@139)) (= ($generated@@153 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@153 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@67)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@247) $generated@@67)) (= ($generated@@135 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@148) ($generated@@0 ($generated@@84 $generated@@246 $generated@@248))) ($generated@@227 $generated@@248 $generated@@247))
 :pattern ( ($generated@@84 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@135 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@67)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@252) $generated@@67)) (= ($generated@@135 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@148) ($generated@@0 ($generated@@84 $generated@@251 $generated@@253))) ($generated@@227 $generated@@253 $generated@@252))
 :pattern ( ($generated@@84 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@135 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@254 $generated@@255) $generated@@255)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) $generated@@67) (= (type $generated@@263) $generated@@67)) (= (type $generated@@264) $generated@@148)) (= (type $generated@@265) $generated@@148)) (= (type $generated@@266) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@260 $generated@@266)) (= ($generated@@77 ($generated@@226 $generated@@264 $generated@@265) ($generated@@138 $generated@@262 $generated@@263) $generated@@266)  (and ($generated@@261 $generated@@264 $generated@@262 $generated@@266) ($generated@@261 $generated@@265 $generated@@263 $generated@@266))))
 :pattern ( ($generated@@77 ($generated@@226 $generated@@264 $generated@@265) ($generated@@138 $generated@@262 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@71)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@139) (= ($generated@@137 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@139) (= ($generated@@165 $generated@@270) (= ($generated@@267 $generated@@270) $generated@@63)))
 :pattern ( ($generated@@165 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@139) ($generated@@137 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@148) (= (type $generated@@273) $generated@@148)) (= $generated@@271 ($generated@@226 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@137 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@139) ($generated@@165 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@148) (= (type $generated@@276) $generated@@148)) (= $generated@@274 ($generated@@234 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@165 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@148)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@67) (= (type $generated@@289) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@261 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@77 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@261 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@79 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@82 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@79 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@84 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@72)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@67) (and (= ($generated@@75 ($generated@@166 $generated@@298)) $generated@@64) (= ($generated@@296 ($generated@@166 $generated@@298)) $generated@@66)))
 :pattern ( ($generated@@166 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 18)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@79 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@84 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@84 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 19)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@79 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@84 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@84 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@82 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@79 $generated@@336 $generated@@2)) (= ($generated@@161 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (and (<= 0 ($generated ($generated@@84 $generated@@335 $generated@@337))) (<= ($generated ($generated@@84 $generated@@335 $generated@@337)) ($generated@@290 $generated@@335))))
 :pattern ( ($generated@@84 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@161 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@299 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@299 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@303 (type $generated@@345))))
(let (($generated@@347 ($generated@@302 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@301 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@300 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@321 (type $generated@@349))))
(let (($generated@@351 ($generated@@320 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@319 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@318 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@84 ($generated@@317 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@317 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@321 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@79 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@321 (type $generated@@356))))
(let (($generated@@358 ($generated@@320 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@319 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@318 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@84 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@361) $generated@@67)) (= ($generated@@135 $generated@@360 ($generated@@160 $generated@@361)) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@360 $generated@@362)))) ($generated@@227 $generated@@362 $generated@@361))
 :pattern ( ($generated@@84 $generated@@360 $generated@@362))
))))
 :pattern ( ($generated@@135 $generated@@360 ($generated@@160 $generated@@361)))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@364) $generated@@67)) (= (type $generated@@365) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@363 ($generated@@244 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@148) ($generated@@0 ($generated@@84 $generated@@363 $generated@@366))) ($generated@@261 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@84 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@77 $generated@@363 ($generated@@244 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@368) $generated@@67)) (= (type $generated@@369) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@367 ($generated@@249 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@148) ($generated@@0 ($generated@@84 $generated@@367 $generated@@370))) ($generated@@261 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@84 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@77 $generated@@367 ($generated@@249 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(= ($generated ($generated@@84 ($generated@@291 $generated@@372) $generated@@371)) 0))
 :pattern ( (let (($generated@@372 (type $generated@@371)))
($generated@@84 ($generated@@291 $generated@@372) $generated@@371)))
)))
(assert  (and (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@373 $generated@@376)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@373 $generated@@376))
)) (forall (($generated@@377 T@T) ($generated@@378 T@U) ) (! (= (type ($generated@@374 $generated@@377 $generated@@378)) $generated@@377)
 :pattern ( ($generated@@374 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@303 (type $generated@@379))))
(let (($generated@@381 ($generated@@302 (type $generated@@379))))
(= (type ($generated@@375 $generated@@379)) ($generated@@79 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@375 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@301 $generated@@148 $generated@@148)) (= (type $generated@@383) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@373 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@84 ($generated@@299 $generated@@382) ($generated@@146 ($generated@@374 $generated@@139 $generated@@383)))) (= ($generated@@84 ($generated@@375 $generated@@382) ($generated@@146 ($generated@@374 $generated@@139 $generated@@383))) ($generated@@147 ($generated@@374 $generated@@139 $generated@@383))))))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@382) $generated@@383))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@321 (type $generated@@387))))
(let (($generated@@389 ($generated@@320 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@79 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@319 $generated@@148 $generated@@148)) (= (type $generated@@391) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@84 ($generated@@317 $generated@@390) ($generated@@146 ($generated@@374 $generated@@139 $generated@@391)))) (= ($generated@@84 ($generated@@385 $generated@@390) ($generated@@146 ($generated@@374 $generated@@139 $generated@@391))) ($generated@@147 ($generated@@374 $generated@@139 $generated@@391))))))
 :pattern ( ($generated@@84 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@302 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@301 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@84 ($generated@@299 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@84 ($generated@@375 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@84 ($generated@@299 $generated@@392) $generated@@396))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@320 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@319 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@84 ($generated@@353 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@84 ($generated@@317 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@84 ($generated@@385 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@84 ($generated@@317 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@84 ($generated@@353 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@67)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@301 $generated@@148 $generated@@148)) (= (type $generated@@406) $generated@@67)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@299 $generated@@405) $generated@@409))) (and ($generated@@261 ($generated@@84 ($generated@@375 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@261 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@299 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@77 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@67)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@319 $generated@@148 $generated@@148)) (= (type $generated@@414) $generated@@67)) (= (type $generated@@415) $generated@@67)) (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@317 $generated@@413) $generated@@417))) (and ($generated@@261 ($generated@@84 ($generated@@385 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@261 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@413) $generated@@417))
 :pattern ( ($generated@@84 ($generated@@317 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@77 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@79 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@321 (type $generated@@420))))
(let (($generated@@422 ($generated@@320 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@319 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@318 $generated@@422 $generated@@421)) (= ($generated@@317 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@317 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@321 (type $generated@@423))))
(let (($generated@@425 ($generated@@320 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@319 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@318 $generated@@425 $generated@@424)) (= ($generated@@353 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@353 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@321 (type $generated@@426))))
(let (($generated@@428 ($generated@@320 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@319 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@318 $generated@@428 $generated@@427)) (= ($generated@@384 $generated@@426) ($generated@@418 $generated@@148))))))
 :pattern ( ($generated@@384 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@303 (type $generated@@429))))
(let (($generated@@431 ($generated@@302 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@301 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@300 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@148) (= (type $generated@@433) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@373 $generated@@429) ($generated@@285 ($generated@@226 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@373 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@321 (type $generated@@434))))
(let (($generated@@436 ($generated@@320 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@319 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@318 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@148) (= (type $generated@@438) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@384 $generated@@434) ($generated@@285 ($generated@@226 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@384 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@148) ($generated@@227 $generated@@439 $generated@@46)) (and (= ($generated@@285 ($generated@@374 $generated@@2 $generated@@439)) $generated@@439) ($generated@@135 ($generated@@374 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@227 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@148) ($generated@@227 $generated@@440 $generated@@47)) (and (= ($generated@@285 ($generated@@374 $generated@@3 $generated@@440)) $generated@@440) ($generated@@135 ($generated@@374 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@227 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@148) ($generated@@227 $generated@@441 $generated@@44)) (and (= ($generated@@285 ($generated@@374 $generated@@4 $generated@@441)) $generated@@441) ($generated@@135 ($generated@@374 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@227 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 20))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@148) ($generated@@227 $generated@@443 $generated@@45)) (and (= ($generated@@285 ($generated@@374 $generated@@442 $generated@@443)) $generated@@443) ($generated@@135 ($generated@@374 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@227 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@67) (= ($generated@@227 ($generated@@285 $generated@@444) $generated@@445) ($generated@@135 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@227 ($generated@@285 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@82 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@79 $generated@@447 $generated@@2)) (<= 0 ($generated@@290 $generated@@446))))
 :pattern ( ($generated@@290 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@280 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@279 $generated@@449)) (<= 0 ($generated@@278 $generated@@448))))
 :pattern ( ($generated@@278 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@402 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@402 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@454 ($generated@@402 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@402 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@75 ($generated@@402 $generated@@458 $generated@@459)) $generated@@58))
 :pattern ( ($generated@@402 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@67)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= ($generated@@460 ($generated@@410 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@410 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@410 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@410 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@75 ($generated@@410 $generated@@468 $generated@@469)) $generated@@59))
 :pattern ( ($generated@@410 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@148) (= (type $generated@@471) $generated@@148)) (= ($generated@@267 ($generated@@226 $generated@@470 $generated@@471)) $generated@@61))
 :pattern ( ($generated@@226 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@472 ($generated@@138 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@138 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@138 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@138 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@148) (= (type $generated@@481) $generated@@148)) (= ($generated@@146 ($generated@@226 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@226 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@148) (= (type $generated@@483) $generated@@148)) (= ($generated@@147 ($generated@@226 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@226 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@148) (= (type $generated@@485) $generated@@148)) (= ($generated@@267 ($generated@@234 $generated@@484 $generated@@485)) $generated@@63))
 :pattern ( ($generated@@234 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@148) (= (type $generated@@487) $generated@@148)) (= ($generated@@154 ($generated@@234 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@234 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@148) (= (type $generated@@489) $generated@@148)) (= ($generated@@155 ($generated@@234 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@234 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@280 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@279 $generated@@148)) (= (type $generated@@497) $generated@@67)) (= (type $generated@@498) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@278 $generated@@496))) ($generated@@261 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@77 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@78 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@78 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@502 ($generated@@244 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@244 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@75 ($generated@@244 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@506 ($generated@@249 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@249 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@75 ($generated@@249 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@510 ($generated@@160 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@160 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@75 ($generated@@160 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@75 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@518 ($generated@@166 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@166 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@374 $generated@@522 ($generated@@285 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@285 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@301 $generated@@148 $generated@@148)) (= (type $generated@@524) $generated@@67)) (= (type $generated@@525) $generated@@67)) (= ($generated@@135 $generated@@523 ($generated@@402 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@299 $generated@@523) $generated@@526))) (and ($generated@@227 ($generated@@84 ($generated@@375 $generated@@523) $generated@@526) $generated@@525) ($generated@@227 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@523) $generated@@526))
 :pattern ( ($generated@@84 ($generated@@299 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@135 $generated@@523 ($generated@@402 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@319 $generated@@148 $generated@@148)) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@67)) (= ($generated@@135 $generated@@527 ($generated@@410 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@317 $generated@@527) $generated@@530))) (and ($generated@@227 ($generated@@84 ($generated@@385 $generated@@527) $generated@@530) $generated@@529) ($generated@@227 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@527) $generated@@530))
 :pattern ( ($generated@@84 ($generated@@317 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@135 $generated@@527 ($generated@@410 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@148) (= (type $generated@@534) $generated@@148)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@226 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@226 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@148) (= (type $generated@@536) $generated@@148)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@226 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@226 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@148) (= (type $generated@@538) $generated@@148)) (< ($generated@@531 $generated@@537) ($generated@@532 ($generated@@234 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@234 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@148) (= (type $generated@@540) $generated@@148)) (< ($generated@@531 $generated@@540) ($generated@@532 ($generated@@234 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@234 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@148) (= (type $generated@@542) $generated@@67)) (= (type $generated@@543) $generated@@67)) ($generated@@227 $generated@@541 ($generated@@402 $generated@@542 $generated@@543))) (and (= ($generated@@285 ($generated@@374 ($generated@@301 $generated@@148 $generated@@148) $generated@@541)) $generated@@541) ($generated@@135 ($generated@@374 ($generated@@301 $generated@@148 $generated@@148) $generated@@541) ($generated@@402 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@227 $generated@@541 ($generated@@402 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@148) (= (type $generated@@545) $generated@@67)) (= (type $generated@@546) $generated@@67)) ($generated@@227 $generated@@544 ($generated@@410 $generated@@545 $generated@@546))) (and (= ($generated@@285 ($generated@@374 ($generated@@319 $generated@@148 $generated@@148) $generated@@544)) $generated@@544) ($generated@@135 ($generated@@374 ($generated@@319 $generated@@148 $generated@@148) $generated@@544) ($generated@@410 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@227 $generated@@544 ($generated@@410 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@67) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) $generated@@148)) ($generated@@227 $generated@@549 ($generated@@138 $generated@@547 $generated@@548))) (and (= ($generated@@285 ($generated@@374 $generated@@139 $generated@@549)) $generated@@549) ($generated@@135 ($generated@@374 $generated@@139 $generated@@549) ($generated@@138 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@227 $generated@@549 ($generated@@138 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@139) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@260 $generated@@552) (and ($generated@@165 $generated@@550) ($generated@@77 $generated@@550 ($generated@@166 $generated@@551) $generated@@552)))) ($generated@@261 ($generated@@154 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@261 ($generated@@154 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@139) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@260 $generated@@555) (and ($generated@@165 $generated@@553) ($generated@@77 $generated@@553 ($generated@@166 $generated@@554) $generated@@555)))) ($generated@@261 ($generated@@155 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@261 ($generated@@155 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (not ($generated@@0 ($generated@@84 ($generated@@418 $generated@@557) $generated@@556))))
 :pattern ( (let (($generated@@557 (type $generated@@556)))
($generated@@84 ($generated@@418 $generated@@557) $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@67) (= (type $generated@@559) $generated@@67)) (and (= ($generated@@75 ($generated@@138 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@296 ($generated@@138 $generated@@558 $generated@@559)) $generated@@65)))
 :pattern ( ($generated@@138 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@139) (= ($generated@@531 ($generated@@285 $generated@@560)) ($generated@@532 $generated@@560)))
 :pattern ( ($generated@@531 ($generated@@285 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@148) ($generated@@227 $generated@@561 ($generated@@78 0))) (and (= ($generated@@285 ($generated@@374 $generated@@2 $generated@@561)) $generated@@561) ($generated@@135 ($generated@@374 ($generated@@79 $generated@@148 $generated@@4) $generated@@561) ($generated@@78 0))))
 :pattern ( ($generated@@227 $generated@@561 ($generated@@78 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@148) (= (type $generated@@563) $generated@@67)) ($generated@@227 $generated@@562 ($generated@@244 $generated@@563))) (and (= ($generated@@285 ($generated@@374 ($generated@@79 $generated@@148 $generated@@4) $generated@@562)) $generated@@562) ($generated@@135 ($generated@@374 ($generated@@79 $generated@@148 $generated@@4) $generated@@562) ($generated@@244 $generated@@563))))
 :pattern ( ($generated@@227 $generated@@562 ($generated@@244 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@148) (= (type $generated@@565) $generated@@67)) ($generated@@227 $generated@@564 ($generated@@249 $generated@@565))) (and (= ($generated@@285 ($generated@@374 ($generated@@79 $generated@@148 $generated@@4) $generated@@564)) $generated@@564) ($generated@@135 ($generated@@374 ($generated@@79 $generated@@148 $generated@@4) $generated@@564) ($generated@@249 $generated@@565))))
 :pattern ( ($generated@@227 $generated@@564 ($generated@@249 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@148) (= (type $generated@@567) $generated@@67)) ($generated@@227 $generated@@566 ($generated@@160 $generated@@567))) (and (= ($generated@@285 ($generated@@374 ($generated@@79 $generated@@148 $generated@@2) $generated@@566)) $generated@@566) ($generated@@135 ($generated@@374 ($generated@@79 $generated@@148 $generated@@2) $generated@@566) ($generated@@160 $generated@@567))))
 :pattern ( ($generated@@227 $generated@@566 ($generated@@160 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@148) (= (type $generated@@569) $generated@@67)) ($generated@@227 $generated@@568 ($generated@@490 $generated@@569))) (and (= ($generated@@285 ($generated@@374 ($generated@@279 $generated@@148) $generated@@568)) $generated@@568) ($generated@@135 ($generated@@374 ($generated@@279 $generated@@148) $generated@@568) ($generated@@490 $generated@@569))))
 :pattern ( ($generated@@227 $generated@@568 ($generated@@490 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@148)) ($generated@@227 $generated@@571 ($generated@@166 $generated@@570))) (and (= ($generated@@285 ($generated@@374 $generated@@139 $generated@@571)) $generated@@571) ($generated@@135 ($generated@@374 $generated@@139 $generated@@571) ($generated@@166 $generated@@570))))
 :pattern ( ($generated@@227 $generated@@571 ($generated@@166 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@573) $generated@@67)) (= (type $generated@@574) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@572 ($generated@@160 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@572 $generated@@575)))) ($generated@@261 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@84 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@77 $generated@@572 ($generated@@160 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@139) (= (type $generated@@577) $generated@@67)) (= (type $generated@@578) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@260 $generated@@578) (and ($generated@@137 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@67) ($generated@@77 $generated@@576 ($generated@@138 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@77 $generated@@576 ($generated@@138 $generated@@577 $generated@@579) $generated@@578))
))))) ($generated@@261 ($generated@@146 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@261 ($generated@@146 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@139) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@260 $generated@@582) (and ($generated@@137 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@67) ($generated@@77 $generated@@580 ($generated@@138 $generated@@583 $generated@@581) $generated@@582))
 :pattern ( ($generated@@77 $generated@@580 ($generated@@138 $generated@@583 $generated@@581) $generated@@582))
))))) ($generated@@261 ($generated@@147 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@261 ($generated@@147 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@584) $generated@@67) (= (type $generated@@585) $generated@@148)) (= (type $generated@@586) $generated@@148)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@260 $generated@@587)) (= ($generated@@77 ($generated@@234 $generated@@585 $generated@@586) ($generated@@166 $generated@@584) $generated@@587)  (and ($generated@@261 $generated@@585 $generated@@584 $generated@@587) ($generated@@261 $generated@@586 $generated@@584 $generated@@587))))
 :pattern ( ($generated@@77 ($generated@@234 $generated@@585 $generated@@586) ($generated@@166 $generated@@584) $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@148) (= (type $generated@@589) $generated@@148)) (= ($generated@@226 ($generated@@256 $generated@@588) ($generated@@256 $generated@@589)) ($generated@@256 ($generated@@226 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@226 ($generated@@256 $generated@@588) ($generated@@256 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@148) (= (type $generated@@591) $generated@@148)) (= ($generated@@234 ($generated@@256 $generated@@590) ($generated@@256 $generated@@591)) ($generated@@256 ($generated@@234 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@234 ($generated@@256 $generated@@590) ($generated@@256 $generated@@591)))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@254 $generated@@592))) ($generated@@256 ($generated@@285 ($generated@@8 $generated@@592))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@254 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ) (! (= ($generated@@285 ($generated@@256 $generated@@593)) ($generated@@256 ($generated@@285 $generated@@593)))
 :pattern ( ($generated@@285 ($generated@@256 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@280 (type $generated@@594))))
 (=> (and (= (type $generated@@594) ($generated@@279 $generated@@595)) (= ($generated@@278 $generated@@594) 0)) (= $generated@@594 ($generated@@277 $generated@@595))))
 :pattern ( ($generated@@278 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@597)))
 (=> (and (and (= (type $generated@@596) ($generated@@79 $generated@@599 $generated@@2)) (= (type $generated@@598) $generated@@2)) (<= 0 ($generated $generated@@598))) (= ($generated@@290 ($generated@@85 $generated@@596 $generated@@597 $generated@@598)) (+ (- ($generated@@290 $generated@@596) ($generated ($generated@@84 $generated@@596 $generated@@597))) ($generated $generated@@598)))))
 :pattern ( ($generated@@290 ($generated@@85 $generated@@596 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@601) $generated@@2)) ($generated@@77 $generated@@601 $generated@@46 $generated@@600))
 :pattern ( ($generated@@77 $generated@@601 $generated@@46 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@603) $generated@@3)) ($generated@@77 $generated@@603 $generated@@47 $generated@@602))
 :pattern ( ($generated@@77 $generated@@603 $generated@@47 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@4)) ($generated@@77 $generated@@605 $generated@@44 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@44 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@607) $generated@@442)) ($generated@@77 $generated@@607 $generated@@45 $generated@@606))
 :pattern ( ($generated@@77 $generated@@607 $generated@@45 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@609) $generated@@148)) ($generated@@77 $generated@@609 $generated@@48 $generated@@608))
 :pattern ( ($generated@@77 $generated@@609 $generated@@48 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@279 $generated@@148)) (= (type $generated@@611) $generated@@67)) (= ($generated@@135 $generated@@610 ($generated@@490 $generated@@611)) (forall (($generated@@612 Int) ) (!  (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@278 $generated@@610))) ($generated@@227 ($generated@@491 $generated@@610 $generated@@612) $generated@@611))
 :pattern ( ($generated@@491 $generated@@610 $generated@@612))
))))
 :pattern ( ($generated@@135 $generated@@610 ($generated@@490 $generated@@611)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 Int) ) (!  (=> (= (type $generated@@614) ($generated@@279 $generated@@148)) (=> (and (<= 0 $generated@@615) (< $generated@@615 ($generated@@278 $generated@@614))) (< ($generated@@532 ($generated@@374 $generated@@139 ($generated@@491 $generated@@614 $generated@@615))) ($generated@@613 $generated@@614))))
 :pattern ( ($generated@@532 ($generated@@374 $generated@@139 ($generated@@491 $generated@@614 $generated@@615))))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@301 $generated@@148 $generated@@148)) (= (type $generated@@617) $generated@@67)) (= (type $generated@@618) $generated@@67)) ($generated@@135 $generated@@616 ($generated@@402 $generated@@617 $generated@@618))) (and (and ($generated@@135 ($generated@@299 $generated@@616) ($generated@@244 $generated@@617)) ($generated@@135 ($generated@@342 $generated@@616) ($generated@@244 $generated@@618))) ($generated@@135 ($generated@@373 $generated@@616) ($generated@@244 ($generated@@138 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@135 $generated@@616 ($generated@@402 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) ($generated@@319 $generated@@148 $generated@@148)) (= (type $generated@@620) $generated@@67)) (= (type $generated@@621) $generated@@67)) ($generated@@135 $generated@@619 ($generated@@410 $generated@@620 $generated@@621))) (and (and ($generated@@135 ($generated@@317 $generated@@619) ($generated@@249 $generated@@620)) ($generated@@135 ($generated@@353 $generated@@619) ($generated@@249 $generated@@621))) ($generated@@135 ($generated@@384 $generated@@619) ($generated@@249 ($generated@@138 $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@135 $generated@@619 ($generated@@410 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@2) ($generated@@135 $generated@@622 $generated@@46))
 :pattern ( ($generated@@135 $generated@@622 $generated@@46))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@3) ($generated@@135 $generated@@623 $generated@@47))
 :pattern ( ($generated@@135 $generated@@623 $generated@@47))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@4) ($generated@@135 $generated@@624 $generated@@44))
 :pattern ( ($generated@@135 $generated@@624 $generated@@44))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@442) ($generated@@135 $generated@@625 $generated@@45))
 :pattern ( ($generated@@135 $generated@@625 $generated@@45))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@148) ($generated@@135 $generated@@626 $generated@@48))
 :pattern ( ($generated@@135 $generated@@626 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 (T@U) Bool)
(declare-fun $generated@@639 () Int)
(assert  (and (and (= (type $generated@@635) ($generated@@172 $generated@@80 $generated@@4)) (= (type $generated@@636) $generated@@80)) (= (type $generated@@637) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@640 true))
(let (($generated@@641  (=> (= ($generated@@234 ($generated@@285 ($generated@@8 $generated@@627)) ($generated@@285 ($generated@@8 $generated@@628))) ($generated@@234 ($generated@@285 ($generated@@8 $generated@@629)) ($generated@@285 ($generated@@8 $generated@@630)))) (=> (and (= $generated@@631 $generated@@630) ($generated@@135 ($generated@@8 $generated@@631) $generated@@46)) (=> (and (and (= $generated@@632 $generated@@631) (= $generated@@633 $generated@@629)) (and ($generated@@135 ($generated@@8 $generated@@633) $generated@@46) (= $generated@@634 $generated@@633))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= $generated@@634 $generated@@627)) (=> (= $generated@@634 $generated@@627) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@254 0) $generated@@634)) (=> (<= ($generated@@254 0) $generated@@634) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@254 0) $generated@@632)))))))))))
(let (($generated@@642  (=> (= $generated@@635 ($generated@@171 $generated@@636 $generated@@637 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@641) (=> (= (ControlFlow 0 6) 5) $generated@@640)))))
(let (($generated@@643  (=> (and (and (and ($generated@@260 $generated@@637) ($generated@@638 $generated@@637)) (<= ($generated@@254 0) $generated@@627)) (and (= 1 $generated@@639) (= (ControlFlow 0 7) 6))) $generated@@642)))
$generated@@643)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@152 (Int T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U) T@U)
(declare-fun $generated@@186 (T@U T@U) Bool)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@199 (T@U T@U T@U) T@U)
(declare-fun $generated@@200 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@201 (T@T T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@272 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (Int) Int)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Bool)
(declare-fun $generated@@309 (T@U) Bool)
(declare-fun $generated@@319 () Int)
(declare-fun $generated@@320 (T@U T@U) Int)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 () T@T)
(declare-fun $generated@@323 (T@U) Bool)
(declare-fun $generated@@324 (T@T T@U) T@U)
(declare-fun $generated@@336 (T@T) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@359 (T@U) Int)
(declare-fun $generated@@360 (T@T) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@436 (T@U) Bool)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@474 (T@U T@U) T@U)
(declare-fun $generated@@482 (T@U T@U) T@U)
(declare-fun $generated@@498 (T@T) T@U)
(declare-fun $generated@@522 () T@T)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@565 () T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@571 (T@U Int) T@U)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(declare-fun $generated@@612 (T@U) Int)
(declare-fun $generated@@703 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@77)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@141 $generated@@142 $generated@@143)) (forall (($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@86) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@142 $generated@@144) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60))
)))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143))
)))
(assert (= (type $generated@@145) $generated@@73))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@146 $generated@@145 $generated@@147))
 :pattern ( ($generated@@83 $generated@@146 $generated@@145 $generated@@147))
)))
(assert  (and (= (type $generated@@148) $generated@@73) (= (type $generated@@149) $generated@@86)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@86) (= (type $generated@@151) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@150 $generated@@148 $generated@@151)  (or (= $generated@@150 $generated@@149) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@150 $generated@@148 $generated@@151))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@153) 14) (= ($generated@@1 $generated@@154) 15)) (forall (($generated@@156 Int) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= (type ($generated@@152 $generated@@156 $generated@@157 $generated@@158)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@156 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@155 $generated@@159)) $generated@@77)
 :pattern ( ($generated@@155 $generated@@159))
))))
(assert (forall (($generated@@160 Int) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@153) (= (type $generated@@162) $generated@@154)) (= ($generated@@155 ($generated@@152 $generated@@160 $generated@@161 $generated@@162)) $generated@@68))
 :pattern ( ($generated@@152 $generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@153) (= (type $generated@@166) $generated@@154)) (= ($generated@@163 ($generated@@152 $generated@@164 $generated@@165 $generated@@166)) $generated@@164))
 :pattern ( ($generated@@152 $generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@167 $generated@@168)) $generated@@153)
 :pattern ( ($generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 Int) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@170) $generated@@153) (= (type $generated@@171) $generated@@154)) (= ($generated@@167 ($generated@@152 $generated@@169 $generated@@170 $generated@@171)) $generated@@170))
 :pattern ( ($generated@@152 $generated@@169 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@172 $generated@@173)) $generated@@154)
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@175) $generated@@153) (= (type $generated@@176) $generated@@154)) (= ($generated@@172 ($generated@@152 $generated@@174 $generated@@175 $generated@@176)) $generated@@176))
 :pattern ( ($generated@@152 $generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@2) ($generated@@177 $generated@@178 ($generated@@84 0)))
 :pattern ( ($generated@@177 $generated@@178 ($generated@@84 0)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@181 $generated@@182)) $generated@@73)
 :pattern ( ($generated@@180 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (and (= (type $generated@@183) $generated@@73) (= (type $generated@@184) $generated@@73)) (= (type $generated@@185) $generated@@154)) ($generated@@177 $generated@@185 ($generated@@180 $generated@@183 $generated@@184))) ($generated@@179 $generated@@185))
 :pattern ( ($generated@@179 $generated@@185) ($generated@@177 $generated@@185 ($generated@@180 $generated@@183 $generated@@184)))
)))
(assert  (and (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@153)
 :pattern ( ($generated@@187 $generated@@189))
)) (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@153)
 :pattern ( ($generated@@188 $generated@@190))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) $generated@@154) (= (type $generated@@192) $generated@@154)) true) (= ($generated@@186 $generated@@191 $generated@@192)  (and (= ($generated@@187 $generated@@191) ($generated@@187 $generated@@192)) (= ($generated@@188 $generated@@191) ($generated@@188 $generated@@192)))))
 :pattern ( ($generated@@186 $generated@@191 $generated@@192))
)))
(assert (= (type $generated@@193) $generated@@154))
(assert (= ($generated@@155 $generated@@193) $generated@@66))
(assert (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@73)
 :pattern ( ($generated@@194 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) ($generated@@85 $generated@@153 $generated@@2)) (= (type $generated@@198) $generated@@73)) ($generated@@177 $generated@@197 ($generated@@194 $generated@@198))) ($generated@@195 $generated@@197))
 :pattern ( ($generated@@177 $generated@@197 ($generated@@194 $generated@@198)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@205 $generated@@206)) 16)) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@207 $generated@@208)) $generated@@207)
 :pattern ( ($generated@@201 $generated@@207 $generated@@208))
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@203 ($generated@@201 $generated@@209 $generated@@210)) $generated@@210)
 :pattern ( ($generated@@201 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@203 (type $generated@@211))))
(= (type ($generated@@199 $generated@@211 $generated@@212 $generated@@213)) $generated@@214))
 :pattern ( ($generated@@199 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 (type $generated@@218)))
(let (($generated@@220 (type $generated@@216)))
(= (type ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@201 $generated@@220 $generated@@219))))
 :pattern ( ($generated@@204 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@203 (type $generated@@221))))
 (=> (= (type $generated@@224) $generated@@225) (= ($generated@@199 ($generated@@204 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@222 $generated@@223) $generated@@224)))
 :weight 0
))) (and (and (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@199 ($generated@@204 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@199 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@199 ($generated@@204 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@199 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or true (= ($generated@@199 ($generated@@204 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@199 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
)))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ) (! (= (type ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247)) ($generated@@201 $generated@@86 $generated@@4))
 :pattern ( ($generated@@200 $generated@@244 $generated@@245 $generated@@246 $generated@@247))
))))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@76 (type $generated@@253))))
 (=> (and (and (and (and (= (type $generated@@248) $generated@@86) (= (type $generated@@249) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@250) ($generated@@75 $generated@@4))) (= (type $generated@@252) $generated@@86)) (= (type $generated@@253) ($generated@@75 $generated@@254))) (= ($generated@@0 ($generated@@199 ($generated@@200 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))  (=> (and (not (= $generated@@252 $generated@@248)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@249 $generated@@252) $generated@@250))) $generated@@251))))
 :pattern ( ($generated@@199 ($generated@@200 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))
)))
(assert (= (type $generated@@255) $generated@@73))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@86) (= (type $generated@@257) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@256 $generated@@255 $generated@@257) ($generated@@83 $generated@@256 $generated@@148 $generated@@257)))
 :pattern ( ($generated@@83 $generated@@256 $generated@@255 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@258 $generated@@260)) $generated@@73)
 :pattern ( ($generated@@258 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@73) (= (type $generated@@262) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@259 $generated@@262)) ($generated@@83 $generated@@193 ($generated@@258 $generated@@261) $generated@@262))
 :pattern ( ($generated@@83 $generated@@193 ($generated@@258 $generated@@261) $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (= (type ($generated@@263 $generated@@265 $generated@@266)) $generated@@154)
 :pattern ( ($generated@@263 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) $generated@@73) (= (type $generated@@268) $generated@@73)) (= (type $generated@@269) $generated@@153)) (= (type $generated@@270) $generated@@153)) (= ($generated@@177 ($generated@@263 $generated@@269 $generated@@270) ($generated@@180 $generated@@267 $generated@@268))  (and ($generated@@264 $generated@@269 $generated@@267) ($generated@@264 $generated@@270 $generated@@268))))
 :pattern ( ($generated@@177 ($generated@@263 $generated@@269 $generated@@270) ($generated@@180 $generated@@267 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@73) ($generated@@177 $generated@@193 ($generated@@258 $generated@@271)))
 :pattern ( ($generated@@177 $generated@@193 ($generated@@258 $generated@@271)))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 Int) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@273) $generated@@73) (= (type $generated@@275) $generated@@153)) (= (type $generated@@276) $generated@@154)) (= (type $generated@@277) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@259 $generated@@277)) (= ($generated@@83 ($generated@@152 $generated@@274 $generated@@275 $generated@@276) ($generated@@258 $generated@@273) $generated@@277)  (and (and ($generated@@83 ($generated@@8 $generated@@274) $generated@@145 $generated@@277) ($generated@@272 $generated@@275 $generated@@273 $generated@@277)) ($generated@@83 $generated@@276 ($generated@@258 $generated@@273) $generated@@277))))
 :pattern ( ($generated@@83 ($generated@@152 $generated@@274 $generated@@275 $generated@@276) ($generated@@258 $generated@@273) $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@154) (= (type $generated@@279) $generated@@154)) (= ($generated@@186 $generated@@278 $generated@@279) (= $generated@@278 $generated@@279)))
 :pattern ( ($generated@@186 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@154) (= (type $generated@@282) $generated@@154)) (= ($generated@@280 $generated@@281 $generated@@282) (= $generated@@281 $generated@@282)))
 :pattern ( ($generated@@280 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@73)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) ($generated@@85 $generated@@153 $generated@@4)) (= (type $generated@@286) $generated@@73)) (= ($generated@@177 $generated@@285 ($generated@@283 $generated@@286)) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@153) ($generated@@0 ($generated@@90 $generated@@285 $generated@@287))) ($generated@@264 $generated@@287 $generated@@286))
 :pattern ( ($generated@@90 $generated@@285 $generated@@287))
))))
 :pattern ( ($generated@@177 $generated@@285 ($generated@@283 $generated@@286)))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@73)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@85 $generated@@153 $generated@@4)) (= (type $generated@@291) $generated@@73)) (= ($generated@@177 $generated@@290 ($generated@@288 $generated@@291)) (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@153) ($generated@@0 ($generated@@90 $generated@@290 $generated@@292))) ($generated@@264 $generated@@292 $generated@@291))
 :pattern ( ($generated@@90 $generated@@290 $generated@@292))
))))
 :pattern ( ($generated@@177 $generated@@290 ($generated@@288 $generated@@291)))
)))
(assert (forall (($generated@@294 Int) ) (! (= ($generated@@293 $generated@@294) $generated@@294)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 (type $generated@@296)))
(= (type ($generated@@295 $generated@@296)) $generated@@297))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= ($generated@@295 $generated@@298) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@300) $generated@@154) (= (type $generated@@301) $generated@@154)) (and ($generated@@299 $generated@@300) ($generated@@299 $generated@@301))) (= ($generated@@280 $generated@@300 $generated@@301) true))
 :pattern ( ($generated@@280 $generated@@300 $generated@@301) ($generated@@299 $generated@@300))
 :pattern ( ($generated@@280 $generated@@300 $generated@@301) ($generated@@299 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@302) $generated@@73) (= (type $generated@@303) $generated@@73)) (= (type $generated@@304) $generated@@153)) (= (type $generated@@305) $generated@@153)) (= (type $generated@@306) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@259 $generated@@306)) (= ($generated@@83 ($generated@@263 $generated@@304 $generated@@305) ($generated@@180 $generated@@302 $generated@@303) $generated@@306)  (and ($generated@@272 $generated@@304 $generated@@302 $generated@@306) ($generated@@272 $generated@@305 $generated@@303 $generated@@306))))
 :pattern ( ($generated@@83 ($generated@@263 $generated@@304 $generated@@305) ($generated@@180 $generated@@302 $generated@@303) $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@154) (= ($generated@@179 $generated@@307) (= ($generated@@155 $generated@@307) $generated@@64)))
 :pattern ( ($generated@@179 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@154) (= ($generated@@299 $generated@@308) (= ($generated@@155 $generated@@308) $generated@@66)))
 :pattern ( ($generated@@299 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@154) (= ($generated@@309 $generated@@310) (= ($generated@@155 $generated@@310) $generated@@68)))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@154) ($generated@@309 $generated@@311)) (exists (($generated@@312 Int) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (and (and (= (type $generated@@313) $generated@@153) (= (type $generated@@314) $generated@@154)) (= $generated@@311 ($generated@@152 $generated@@312 $generated@@313 $generated@@314)))
 :no-pattern (type $generated@@313)
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
)))
 :pattern ( ($generated@@309 $generated@@311))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 Int) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (= (type $generated@@315) $generated@@73) (= (type $generated@@317) $generated@@153)) (= (type $generated@@318) $generated@@154)) (= ($generated@@177 ($generated@@152 $generated@@316 $generated@@317 $generated@@318) ($generated@@258 $generated@@315))  (and (and ($generated@@177 ($generated@@8 $generated@@316) $generated@@145) ($generated@@264 $generated@@317 $generated@@315)) ($generated@@177 $generated@@318 ($generated@@258 $generated@@315)))))
 :pattern ( ($generated@@177 ($generated@@152 $generated@@316 $generated@@317 $generated@@318) ($generated@@258 $generated@@315)))
)))
(assert  (and (and (= ($generated@@1 $generated@@322) 17) (forall (($generated@@325 T@U) ) (! (= (type ($generated@@321 $generated@@325)) $generated@@322)
 :pattern ( ($generated@@321 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@U) ) (! (= (type ($generated@@324 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@324 $generated@@326 $generated@@327))
))))
(assert  (=> (<= 2 $generated@@319) (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (= (type $generated@@328) $generated@@322) (= (type $generated@@329) $generated@@154)) (or ($generated@@323 ($generated@@295 $generated@@329)) (and (not (= 2 $generated@@319)) ($generated@@177 $generated@@329 ($generated@@258 $generated@@255))))) (and (=> (not ($generated@@0 ($generated@@295 ($generated@@11 ($generated@@299 ($generated@@295 $generated@@329)))))) (let (($generated@@330 ($generated@@295 ($generated@@172 ($generated@@295 $generated@@329)))))
($generated@@323 $generated@@330))) (= ($generated@@320 ($generated@@321 $generated@@328) ($generated@@295 $generated@@329)) (ite ($generated@@299 ($generated@@295 $generated@@329)) 0 (let (($generated@@331 ($generated@@295 ($generated@@172 ($generated@@295 $generated@@329)))))
(let (($generated@@332 ($generated@@293 ($generated@@163 ($generated@@295 $generated@@329)))))
($generated@@293 (+ $generated@@332 ($generated@@320 ($generated@@321 $generated@@328) $generated@@331)))))))))
 :weight 3
 :pattern ( ($generated@@320 ($generated@@321 $generated@@328) ($generated@@295 $generated@@329)))
))))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@154) ($generated@@179 $generated@@333)) (exists (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (and (and (= (type $generated@@334) $generated@@153) (= (type $generated@@335) $generated@@153)) (= $generated@@333 ($generated@@263 $generated@@334 $generated@@335)))
 :no-pattern (type $generated@@334)
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
)))
 :pattern ( ($generated@@179 $generated@@333))
)))
(assert  (and (and (forall (($generated@@340 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@340)) 18)) (forall (($generated@@341 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@338 $generated@@341))
))) (forall (($generated@@342 T@T) ) (! (= (type ($generated@@336 $generated@@342)) ($generated@@338 $generated@@342))
 :pattern ( ($generated@@336 $generated@@342))
))))
(assert (forall (($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@343)) 0)
 :pattern ( ($generated@@336 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@154) ($generated@@299 $generated@@344)) (= $generated@@344 $generated@@193))
 :pattern ( ($generated@@299 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@2) (= ($generated@@177 $generated@@345 $generated@@145) (<= ($generated@@293 0) ($generated $generated@@345))))
 :pattern ( ($generated@@177 $generated@@345 $generated@@145))
)))
(assert (forall (($generated@@347 T@U) ) (! (= (type ($generated@@346 $generated@@347)) $generated@@153)
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@73) (= (type $generated@@350) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@272 ($generated@@346 $generated@@348) $generated@@349 $generated@@350) ($generated@@83 $generated@@348 $generated@@349 $generated@@350)))
 :pattern ( ($generated@@272 ($generated@@346 $generated@@348) $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@351) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@352) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@353) $generated@@153)) (= (type $generated@@354) $generated@@73)) ($generated@@141 $generated@@351 $generated@@352)) ($generated@@272 $generated@@353 $generated@@354 $generated@@351)) ($generated@@272 $generated@@353 $generated@@354 $generated@@352))
 :pattern ( ($generated@@141 $generated@@351 $generated@@352) ($generated@@272 $generated@@353 $generated@@354 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@355) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@356) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@358) $generated@@73)) ($generated@@141 $generated@@355 $generated@@356)) ($generated@@83 $generated@@357 $generated@@358 $generated@@355)) ($generated@@83 $generated@@357 $generated@@358 $generated@@356))
 :pattern ( ($generated@@141 $generated@@355 $generated@@356) ($generated@@83 $generated@@357 $generated@@358 $generated@@355))
)))
(assert (forall (($generated@@361 T@T) ) (! (= (type ($generated@@360 $generated@@361)) ($generated@@85 $generated@@361 $generated@@2))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@88 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@85 $generated@@363 $generated@@2)) (and (= (= ($generated@@359 $generated@@362) 0) (= $generated@@362 ($generated@@360 $generated@@363))) (=> (not (= ($generated@@359 $generated@@362) 0)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (< 0 ($generated ($generated@@90 $generated@@362 $generated@@364))))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ) (! (= (type ($generated@@365 $generated@@366)) $generated@@78)
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@73) (and (= ($generated@@81 ($generated@@258 $generated@@367)) $generated@@67) (= ($generated@@365 ($generated@@258 $generated@@367)) $generated@@72)))
 :pattern ( ($generated@@258 $generated@@367))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 19)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@85 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@90 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@90 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 20)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@85 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@90 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@90 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@88 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@85 $generated@@405 $generated@@2)) (= ($generated@@195 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (and (<= 0 ($generated ($generated@@90 $generated@@404 $generated@@406))) (<= ($generated ($generated@@90 $generated@@404 $generated@@406)) ($generated@@359 $generated@@404))))
 :pattern ( ($generated@@90 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@195 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@153) ($generated@@264 $generated@@407 $generated@@145)) (and (= ($generated@@346 ($generated@@324 $generated@@2 $generated@@407)) $generated@@407) ($generated@@177 ($generated@@324 $generated@@2 $generated@@407) $generated@@145)))
 :pattern ( ($generated@@264 $generated@@407 $generated@@145))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@153) ($generated@@264 $generated@@408 $generated@@148)) (and (= ($generated@@346 ($generated@@324 $generated@@86 $generated@@408)) $generated@@408) ($generated@@177 ($generated@@324 $generated@@86 $generated@@408) $generated@@148)))
 :pattern ( ($generated@@264 $generated@@408 $generated@@148))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@153) ($generated@@264 $generated@@409 $generated@@255)) (and (= ($generated@@346 ($generated@@324 $generated@@86 $generated@@409)) $generated@@409) ($generated@@177 ($generated@@324 $generated@@86 $generated@@409) $generated@@255)))
 :pattern ( ($generated@@264 $generated@@409 $generated@@255))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (= (type $generated@@410) $generated@@86) (= ($generated@@177 $generated@@410 $generated@@255)  (and ($generated@@177 $generated@@410 $generated@@148) (not (= $generated@@410 $generated@@149)))))
 :pattern ( ($generated@@177 $generated@@410 $generated@@255))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@372 (type $generated@@411))))
(let (($generated@@413 ($generated@@371 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@370 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@369 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) ($generated@@0 ($generated@@90 ($generated@@368 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@368 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@372 (type $generated@@416))))
(= (type ($generated@@415 $generated@@416)) ($generated@@85 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@372 (type $generated@@418))))
(let (($generated@@420 ($generated@@371 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@370 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@369 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@419) ($generated@@0 ($generated@@90 ($generated@@415 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@415 $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@390 (type $generated@@422))))
(let (($generated@@424 ($generated@@389 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@388 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@387 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) ($generated@@0 ($generated@@90 ($generated@@386 $generated@@422) $generated@@425)))
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@386 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@390 (type $generated@@427))))
(= (type ($generated@@426 $generated@@427)) ($generated@@85 $generated@@428 $generated@@4)))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@390 (type $generated@@429))))
(let (($generated@@431 ($generated@@389 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@388 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@387 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@430) ($generated@@0 ($generated@@90 ($generated@@426 $generated@@429) $generated@@432)))
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@426 $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@85 $generated@@153 $generated@@2)) (= (type $generated@@434) $generated@@73)) (= ($generated@@177 $generated@@433 ($generated@@194 $generated@@434)) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@153) (< 0 ($generated ($generated@@90 $generated@@433 $generated@@435)))) ($generated@@264 $generated@@435 $generated@@434))
 :pattern ( ($generated@@90 $generated@@433 $generated@@435))
))))
 :pattern ( ($generated@@177 $generated@@433 ($generated@@194 $generated@@434)))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@154) ($generated@@436 $generated@@437)) (or ($generated@@299 $generated@@437) ($generated@@309 $generated@@437)))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (= (type $generated@@438) ($generated@@85 $generated@@153 $generated@@4)) (= (type $generated@@439) $generated@@73)) (= (type $generated@@440) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@438 ($generated@@283 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@153) ($generated@@0 ($generated@@90 $generated@@438 $generated@@441))) ($generated@@272 $generated@@441 $generated@@439 $generated@@440))
 :pattern ( ($generated@@90 $generated@@438 $generated@@441))
))))
 :pattern ( ($generated@@83 $generated@@438 ($generated@@283 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@442) ($generated@@85 $generated@@153 $generated@@4)) (= (type $generated@@443) $generated@@73)) (= (type $generated@@444) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@442 ($generated@@288 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@153) ($generated@@0 ($generated@@90 $generated@@442 $generated@@445))) ($generated@@272 $generated@@445 $generated@@443 $generated@@444))
 :pattern ( ($generated@@90 $generated@@442 $generated@@445))
))))
 :pattern ( ($generated@@83 $generated@@442 ($generated@@288 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(= ($generated ($generated@@90 ($generated@@360 $generated@@447) $generated@@446)) 0))
 :pattern ( (let (($generated@@447 (type $generated@@446)))
($generated@@90 ($generated@@360 $generated@@447) $generated@@446)))
)))
(assert  (and (forall (($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@450)) ($generated@@85 $generated@@153 $generated@@4))
 :pattern ( ($generated@@448 $generated@@450))
)) (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@372 (type $generated@@451))))
(let (($generated@@453 ($generated@@371 (type $generated@@451))))
(= (type ($generated@@449 $generated@@451)) ($generated@@85 $generated@@453 $generated@@452))))
 :pattern ( ($generated@@449 $generated@@451))
))))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) ($generated@@370 $generated@@153 $generated@@153)) (= (type $generated@@455) $generated@@153)) (= ($generated@@0 ($generated@@90 ($generated@@448 $generated@@454) $generated@@455))  (and ($generated@@0 ($generated@@90 ($generated@@368 $generated@@454) ($generated@@187 ($generated@@324 $generated@@154 $generated@@455)))) (= ($generated@@90 ($generated@@449 $generated@@454) ($generated@@187 ($generated@@324 $generated@@154 $generated@@455))) ($generated@@188 ($generated@@324 $generated@@154 $generated@@455))))))
 :pattern ( ($generated@@90 ($generated@@448 $generated@@454) $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) ($generated@@85 $generated@@153 $generated@@4))
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@390 (type $generated@@459))))
(let (($generated@@461 ($generated@@389 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459)) ($generated@@85 $generated@@461 $generated@@460))))
 :pattern ( ($generated@@457 $generated@@459))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) ($generated@@388 $generated@@153 $generated@@153)) (= (type $generated@@463) $generated@@153)) (= ($generated@@0 ($generated@@90 ($generated@@456 $generated@@462) $generated@@463))  (and ($generated@@0 ($generated@@90 ($generated@@386 $generated@@462) ($generated@@187 ($generated@@324 $generated@@154 $generated@@463)))) (= ($generated@@90 ($generated@@457 $generated@@462) ($generated@@187 ($generated@@324 $generated@@154 $generated@@463))) ($generated@@188 ($generated@@324 $generated@@154 $generated@@463))))))
 :pattern ( ($generated@@90 ($generated@@456 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
(let (($generated@@467 ($generated@@371 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@370 $generated@@467 $generated@@466)) (= ($generated@@0 ($generated@@90 ($generated@@415 $generated@@464) $generated@@465)) (exists (($generated@@468 T@U) ) (!  (and (= (type $generated@@468) $generated@@467) (and ($generated@@0 ($generated@@90 ($generated@@368 $generated@@464) $generated@@468)) (= $generated@@465 ($generated@@90 ($generated@@449 $generated@@464) $generated@@468))))
 :pattern ( ($generated@@90 ($generated@@368 $generated@@464) $generated@@468))
 :pattern ( ($generated@@90 ($generated@@449 $generated@@464) $generated@@468))
))))))
 :pattern ( ($generated@@90 ($generated@@415 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 (type $generated@@470)))
(let (($generated@@472 ($generated@@389 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@388 $generated@@472 $generated@@471)) (= ($generated@@0 ($generated@@90 ($generated@@426 $generated@@469) $generated@@470)) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@472) (and ($generated@@0 ($generated@@90 ($generated@@386 $generated@@469) $generated@@473)) (= $generated@@470 ($generated@@90 ($generated@@457 $generated@@469) $generated@@473))))
 :pattern ( ($generated@@90 ($generated@@386 $generated@@469) $generated@@473))
 :pattern ( ($generated@@90 ($generated@@457 $generated@@469) $generated@@473))
))))))
 :pattern ( ($generated@@90 ($generated@@426 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@475 $generated@@476)) $generated@@73)
 :pattern ( ($generated@@474 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (and (= (type $generated@@477) ($generated@@370 $generated@@153 $generated@@153)) (= (type $generated@@478) $generated@@73)) (= (type $generated@@479) $generated@@73)) (= (type $generated@@480) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@477 ($generated@@474 $generated@@478 $generated@@479) $generated@@480) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@153) ($generated@@0 ($generated@@90 ($generated@@368 $generated@@477) $generated@@481))) (and ($generated@@272 ($generated@@90 ($generated@@449 $generated@@477) $generated@@481) $generated@@479 $generated@@480) ($generated@@272 $generated@@481 $generated@@478 $generated@@480)))
 :pattern ( ($generated@@90 ($generated@@449 $generated@@477) $generated@@481))
 :pattern ( ($generated@@90 ($generated@@368 $generated@@477) $generated@@481))
))))
 :pattern ( ($generated@@83 $generated@@477 ($generated@@474 $generated@@478 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@483 $generated@@484)) $generated@@73)
 :pattern ( ($generated@@482 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (and (= (type $generated@@485) ($generated@@388 $generated@@153 $generated@@153)) (= (type $generated@@486) $generated@@73)) (= (type $generated@@487) $generated@@73)) (= (type $generated@@488) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@485 ($generated@@482 $generated@@486 $generated@@487) $generated@@488) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@153) ($generated@@0 ($generated@@90 ($generated@@386 $generated@@485) $generated@@489))) (and ($generated@@272 ($generated@@90 ($generated@@457 $generated@@485) $generated@@489) $generated@@487 $generated@@488) ($generated@@272 $generated@@489 $generated@@486 $generated@@488)))
 :pattern ( ($generated@@90 ($generated@@457 $generated@@485) $generated@@489))
 :pattern ( ($generated@@90 ($generated@@386 $generated@@485) $generated@@489))
))))
 :pattern ( ($generated@@83 $generated@@485 ($generated@@482 $generated@@486 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@490) $generated@@73) (= (type $generated@@491) $generated@@154)) ($generated@@177 $generated@@491 ($generated@@258 $generated@@490))) (or ($generated@@299 $generated@@491) ($generated@@309 $generated@@491)))
 :pattern ( ($generated@@309 $generated@@491) ($generated@@177 $generated@@491 ($generated@@258 $generated@@490)))
 :pattern ( ($generated@@299 $generated@@491) ($generated@@177 $generated@@491 ($generated@@258 $generated@@490)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@492) $generated@@154) (= (type $generated@@493) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@259 $generated@@493) (and ($generated@@309 $generated@@492) (exists (($generated@@494 T@U) ) (!  (and (= (type $generated@@494) $generated@@73) ($generated@@83 $generated@@492 ($generated@@258 $generated@@494) $generated@@493))
 :pattern ( ($generated@@83 $generated@@492 ($generated@@258 $generated@@494) $generated@@493))
))))) ($generated@@83 ($generated@@8 ($generated@@163 $generated@@492)) $generated@@145 $generated@@493))
 :pattern ( ($generated@@83 ($generated@@8 ($generated@@163 $generated@@492)) $generated@@145 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@495) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@496) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@497) ($generated@@85 $generated@@86 $generated@@87))) (not (= $generated@@495 $generated@@497))) (and ($generated@@141 $generated@@495 $generated@@496) ($generated@@141 $generated@@496 $generated@@497))) ($generated@@141 $generated@@495 $generated@@497))
 :pattern ( ($generated@@141 $generated@@495 $generated@@496) ($generated@@141 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@T) ) (! (= (type ($generated@@498 $generated@@499)) ($generated@@85 $generated@@499 $generated@@4))
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@390 (type $generated@@500))))
(let (($generated@@502 ($generated@@389 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@388 $generated@@502 $generated@@501)) (= (= $generated@@500 ($generated@@387 $generated@@502 $generated@@501)) (= ($generated@@386 $generated@@500) ($generated@@498 $generated@@502))))))
 :pattern ( ($generated@@386 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@390 (type $generated@@503))))
(let (($generated@@505 ($generated@@389 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@388 $generated@@505 $generated@@504)) (= (= $generated@@503 ($generated@@387 $generated@@505 $generated@@504)) (= ($generated@@426 $generated@@503) ($generated@@498 $generated@@504))))))
 :pattern ( ($generated@@426 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@390 (type $generated@@506))))
(let (($generated@@508 ($generated@@389 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@388 $generated@@508 $generated@@507)) (= (= $generated@@506 ($generated@@387 $generated@@508 $generated@@507)) (= ($generated@@456 $generated@@506) ($generated@@498 $generated@@153))))))
 :pattern ( ($generated@@456 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@372 (type $generated@@509))))
(let (($generated@@511 ($generated@@371 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@370 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@369 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@153) (= (type $generated@@513) $generated@@153)) ($generated@@0 ($generated@@90 ($generated@@448 $generated@@509) ($generated@@346 ($generated@@263 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@448 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@390 (type $generated@@514))))
(let (($generated@@516 ($generated@@389 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@388 $generated@@516 $generated@@515)) (or (= $generated@@514 ($generated@@387 $generated@@516 $generated@@515)) (exists (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (and (and (= (type $generated@@517) $generated@@153) (= (type $generated@@518) $generated@@153)) ($generated@@0 ($generated@@90 ($generated@@456 $generated@@514) ($generated@@346 ($generated@@263 $generated@@517 $generated@@518)))))
 :no-pattern (type $generated@@517)
 :no-pattern (type $generated@@518)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
))))))
 :pattern ( ($generated@@456 $generated@@514))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@153) ($generated@@264 $generated@@519 $generated@@46)) (and (= ($generated@@346 ($generated@@324 $generated@@2 $generated@@519)) $generated@@519) ($generated@@177 ($generated@@324 $generated@@2 $generated@@519) $generated@@46)))
 :pattern ( ($generated@@264 $generated@@519 $generated@@46))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@153) ($generated@@264 $generated@@520 $generated@@47)) (and (= ($generated@@346 ($generated@@324 $generated@@3 $generated@@520)) $generated@@520) ($generated@@177 ($generated@@324 $generated@@3 $generated@@520) $generated@@47)))
 :pattern ( ($generated@@264 $generated@@520 $generated@@47))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@153) ($generated@@264 $generated@@521 $generated@@44)) (and (= ($generated@@346 ($generated@@324 $generated@@4 $generated@@521)) $generated@@521) ($generated@@177 ($generated@@324 $generated@@4 $generated@@521) $generated@@44)))
 :pattern ( ($generated@@264 $generated@@521 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@522) 21))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@153) ($generated@@264 $generated@@523 $generated@@45)) (and (= ($generated@@346 ($generated@@324 $generated@@522 $generated@@523)) $generated@@523) ($generated@@177 ($generated@@324 $generated@@522 $generated@@523) $generated@@45)))
 :pattern ( ($generated@@264 $generated@@523 $generated@@45))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@73) (= ($generated@@264 ($generated@@346 $generated@@524) $generated@@525) ($generated@@177 $generated@@524 $generated@@525)))
 :pattern ( ($generated@@264 ($generated@@346 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@88 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@85 $generated@@527 $generated@@2)) (<= 0 ($generated@@359 $generated@@526))))
 :pattern ( ($generated@@359 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@339 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@338 $generated@@529)) (<= 0 ($generated@@337 $generated@@528))))
 :pattern ( ($generated@@337 $generated@@528))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@73)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@73) (= (type $generated@@533) $generated@@73)) (= ($generated@@530 ($generated@@474 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@474 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@73)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@73) (= (type $generated@@537) $generated@@73)) (= ($generated@@534 ($generated@@474 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@474 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@73) (= (type $generated@@539) $generated@@73)) (= ($generated@@81 ($generated@@474 $generated@@538 $generated@@539)) $generated@@58))
 :pattern ( ($generated@@474 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@73)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@73) (= (type $generated@@543) $generated@@73)) (= ($generated@@540 ($generated@@482 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@482 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@73)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@73) (= (type $generated@@547) $generated@@73)) (= ($generated@@544 ($generated@@482 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@482 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@73) (= (type $generated@@549) $generated@@73)) (= ($generated@@81 ($generated@@482 $generated@@548 $generated@@549)) $generated@@59))
 :pattern ( ($generated@@482 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@153) (= (type $generated@@551) $generated@@153)) (= ($generated@@155 ($generated@@263 $generated@@550 $generated@@551)) $generated@@64))
 :pattern ( ($generated@@263 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@73)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@73) (= (type $generated@@555) $generated@@73)) (= ($generated@@552 ($generated@@180 $generated@@554 $generated@@555)) $generated@@554))
 :pattern ( ($generated@@180 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@73)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@73) (= (type $generated@@559) $generated@@73)) (= ($generated@@556 ($generated@@180 $generated@@558 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@180 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@153) (= (type $generated@@561) $generated@@153)) (= ($generated@@187 ($generated@@263 $generated@@560 $generated@@561)) $generated@@560))
 :pattern ( ($generated@@263 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@153) (= (type $generated@@563) $generated@@153)) (= ($generated@@188 ($generated@@263 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@263 $generated@@562 $generated@@563))
)))
(assert  (and (forall (($generated@@566 T@U) ) (! (= (type ($generated@@564 $generated@@566)) $generated@@322)
 :pattern ( ($generated@@564 $generated@@566))
)) (= (type $generated@@565) $generated@@322)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@322) (= (type $generated@@568) $generated@@154)) (= ($generated@@320 $generated@@567 $generated@@568) ($generated@@320 $generated@@565 $generated@@568)))
 :pattern ( ($generated@@320 ($generated@@564 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@86) ($generated@@177 $generated@@569 $generated@@148))
 :pattern ( ($generated@@177 $generated@@569 $generated@@148))
)))
(assert  (and (forall (($generated@@572 T@U) ) (! (= (type ($generated@@570 $generated@@572)) $generated@@73)
 :pattern ( ($generated@@570 $generated@@572))
)) (forall (($generated@@573 T@U) ($generated@@574 Int) ) (! (let (($generated@@575 ($generated@@339 (type $generated@@573))))
(= (type ($generated@@571 $generated@@573 $generated@@574)) $generated@@575))
 :pattern ( ($generated@@571 $generated@@573 $generated@@574))
))))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@338 $generated@@153)) (= (type $generated@@577) $generated@@73)) (= (type $generated@@578) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@576 ($generated@@570 $generated@@577) $generated@@578) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@337 $generated@@576))) ($generated@@272 ($generated@@571 $generated@@576 $generated@@579) $generated@@577 $generated@@578))
 :pattern ( ($generated@@571 $generated@@576 $generated@@579))
))))
 :pattern ( ($generated@@83 $generated@@576 ($generated@@570 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@580 Int) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@153) (= (type $generated@@582) $generated@@154)) (= ($generated@@152 ($generated@@293 $generated@@580) ($generated@@295 $generated@@581) ($generated@@295 $generated@@582)) ($generated@@295 ($generated@@152 $generated@@580 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@152 ($generated@@293 $generated@@580) ($generated@@295 $generated@@581) ($generated@@295 $generated@@582)))
)))
(assert (forall (($generated@@584 Int) ) (! (= ($generated@@583 ($generated@@84 $generated@@584)) $generated@@584)
 :pattern ( ($generated@@84 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@73)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@73) (= ($generated@@585 ($generated@@283 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@283 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@73) (= ($generated@@81 ($generated@@283 $generated@@588)) $generated@@54))
 :pattern ( ($generated@@283 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@73)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@73) (= ($generated@@589 ($generated@@288 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@288 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@73) (= ($generated@@81 ($generated@@288 $generated@@592)) $generated@@55))
 :pattern ( ($generated@@288 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@73)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@73) (= ($generated@@593 ($generated@@194 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@194 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@73) (= ($generated@@81 ($generated@@194 $generated@@596)) $generated@@56))
 :pattern ( ($generated@@194 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@73)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@73) (= ($generated@@597 ($generated@@570 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@570 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@73) (= ($generated@@81 ($generated@@570 $generated@@600)) $generated@@57))
 :pattern ( ($generated@@570 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@73)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@73) (= ($generated@@601 ($generated@@258 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@258 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@604)))
(= ($generated@@324 $generated@@605 ($generated@@346 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@346 $generated@@604))
)))
(assert  (=> (<= 2 $generated@@319) (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@322) (= (type $generated@@607) $generated@@154)) (or ($generated@@323 $generated@@607) (and (not (= 2 $generated@@319)) ($generated@@177 $generated@@607 ($generated@@258 $generated@@255))))) (and (=> (not ($generated@@299 $generated@@607)) (let (($generated@@608 ($generated@@172 $generated@@607)))
($generated@@323 $generated@@608))) (= ($generated@@320 ($generated@@321 $generated@@606) $generated@@607) (ite ($generated@@299 $generated@@607) 0 (let (($generated@@609 ($generated@@172 $generated@@607)))
(let (($generated@@610 ($generated@@163 $generated@@607)))
(+ $generated@@610 ($generated@@320 $generated@@606 $generated@@609))))))))
 :pattern ( ($generated@@320 ($generated@@321 $generated@@606) $generated@@607))
))))
(assert (forall (($generated@@613 Int) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@153) (= (type $generated@@615) $generated@@154)) (< ($generated@@611 $generated@@614) ($generated@@612 ($generated@@152 $generated@@613 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@152 $generated@@613 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 Int) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@153) (= (type $generated@@618) $generated@@154)) (< ($generated@@612 $generated@@618) ($generated@@612 ($generated@@152 $generated@@616 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@152 $generated@@616 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@619) ($generated@@370 $generated@@153 $generated@@153)) (= (type $generated@@620) $generated@@73)) (= (type $generated@@621) $generated@@73)) (= ($generated@@177 $generated@@619 ($generated@@474 $generated@@620 $generated@@621)) (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@153) ($generated@@0 ($generated@@90 ($generated@@368 $generated@@619) $generated@@622))) (and ($generated@@264 ($generated@@90 ($generated@@449 $generated@@619) $generated@@622) $generated@@621) ($generated@@264 $generated@@622 $generated@@620)))
 :pattern ( ($generated@@90 ($generated@@449 $generated@@619) $generated@@622))
 :pattern ( ($generated@@90 ($generated@@368 $generated@@619) $generated@@622))
))))
 :pattern ( ($generated@@177 $generated@@619 ($generated@@474 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@388 $generated@@153 $generated@@153)) (= (type $generated@@624) $generated@@73)) (= (type $generated@@625) $generated@@73)) (= ($generated@@177 $generated@@623 ($generated@@482 $generated@@624 $generated@@625)) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@153) ($generated@@0 ($generated@@90 ($generated@@386 $generated@@623) $generated@@626))) (and ($generated@@264 ($generated@@90 ($generated@@457 $generated@@623) $generated@@626) $generated@@625) ($generated@@264 $generated@@626 $generated@@624)))
 :pattern ( ($generated@@90 ($generated@@457 $generated@@623) $generated@@626))
 :pattern ( ($generated@@90 ($generated@@386 $generated@@623) $generated@@626))
))))
 :pattern ( ($generated@@177 $generated@@623 ($generated@@482 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@153) (= (type $generated@@628) $generated@@153)) (< ($generated@@611 $generated@@627) ($generated@@612 ($generated@@263 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@263 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@153) (= (type $generated@@630) $generated@@153)) (< ($generated@@611 $generated@@630) ($generated@@612 ($generated@@263 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@263 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@322) (= (type $generated@@632) $generated@@154)) (= ($generated@@320 ($generated@@321 $generated@@631) $generated@@632) ($generated@@320 $generated@@631 $generated@@632)))
 :pattern ( ($generated@@320 ($generated@@321 $generated@@631) $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@153) (= (type $generated@@634) $generated@@73)) (= (type $generated@@635) $generated@@73)) ($generated@@264 $generated@@633 ($generated@@474 $generated@@634 $generated@@635))) (and (= ($generated@@346 ($generated@@324 ($generated@@370 $generated@@153 $generated@@153) $generated@@633)) $generated@@633) ($generated@@177 ($generated@@324 ($generated@@370 $generated@@153 $generated@@153) $generated@@633) ($generated@@474 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@264 $generated@@633 ($generated@@474 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@153) (= (type $generated@@637) $generated@@73)) (= (type $generated@@638) $generated@@73)) ($generated@@264 $generated@@636 ($generated@@482 $generated@@637 $generated@@638))) (and (= ($generated@@346 ($generated@@324 ($generated@@388 $generated@@153 $generated@@153) $generated@@636)) $generated@@636) ($generated@@177 ($generated@@324 ($generated@@388 $generated@@153 $generated@@153) $generated@@636) ($generated@@482 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@264 $generated@@636 ($generated@@482 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@73) (= (type $generated@@640) $generated@@73)) (= (type $generated@@641) $generated@@153)) ($generated@@264 $generated@@641 ($generated@@180 $generated@@639 $generated@@640))) (and (= ($generated@@346 ($generated@@324 $generated@@154 $generated@@641)) $generated@@641) ($generated@@177 ($generated@@324 $generated@@154 $generated@@641) ($generated@@180 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@264 $generated@@641 ($generated@@180 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) $generated@@154) (= (type $generated@@643) $generated@@73)) (= (type $generated@@644) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@259 $generated@@644) (and ($generated@@309 $generated@@642) ($generated@@83 $generated@@642 ($generated@@258 $generated@@643) $generated@@644)))) ($generated@@272 ($generated@@167 $generated@@642) $generated@@643 $generated@@644))
 :pattern ( ($generated@@272 ($generated@@167 $generated@@642) $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (! (let (($generated@@646 (type $generated@@645)))
 (not ($generated@@0 ($generated@@90 ($generated@@498 $generated@@646) $generated@@645))))
 :pattern ( (let (($generated@@646 (type $generated@@645)))
($generated@@90 ($generated@@498 $generated@@646) $generated@@645)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@73) (= (type $generated@@648) $generated@@73)) (and (= ($generated@@81 ($generated@@180 $generated@@647 $generated@@648)) $generated@@65) (= ($generated@@365 ($generated@@180 $generated@@647 $generated@@648)) $generated@@71)))
 :pattern ( ($generated@@180 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@154) (= ($generated@@611 ($generated@@346 $generated@@649)) ($generated@@612 $generated@@649)))
 :pattern ( ($generated@@611 ($generated@@346 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@153) ($generated@@264 $generated@@650 ($generated@@84 0))) (and (= ($generated@@346 ($generated@@324 $generated@@2 $generated@@650)) $generated@@650) ($generated@@177 ($generated@@324 ($generated@@85 $generated@@153 $generated@@4) $generated@@650) ($generated@@84 0))))
 :pattern ( ($generated@@264 $generated@@650 ($generated@@84 0)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@153) (= (type $generated@@652) $generated@@73)) ($generated@@264 $generated@@651 ($generated@@283 $generated@@652))) (and (= ($generated@@346 ($generated@@324 ($generated@@85 $generated@@153 $generated@@4) $generated@@651)) $generated@@651) ($generated@@177 ($generated@@324 ($generated@@85 $generated@@153 $generated@@4) $generated@@651) ($generated@@283 $generated@@652))))
 :pattern ( ($generated@@264 $generated@@651 ($generated@@283 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@153) (= (type $generated@@654) $generated@@73)) ($generated@@264 $generated@@653 ($generated@@288 $generated@@654))) (and (= ($generated@@346 ($generated@@324 ($generated@@85 $generated@@153 $generated@@4) $generated@@653)) $generated@@653) ($generated@@177 ($generated@@324 ($generated@@85 $generated@@153 $generated@@4) $generated@@653) ($generated@@288 $generated@@654))))
 :pattern ( ($generated@@264 $generated@@653 ($generated@@288 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@655) $generated@@153) (= (type $generated@@656) $generated@@73)) ($generated@@264 $generated@@655 ($generated@@194 $generated@@656))) (and (= ($generated@@346 ($generated@@324 ($generated@@85 $generated@@153 $generated@@2) $generated@@655)) $generated@@655) ($generated@@177 ($generated@@324 ($generated@@85 $generated@@153 $generated@@2) $generated@@655) ($generated@@194 $generated@@656))))
 :pattern ( ($generated@@264 $generated@@655 ($generated@@194 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@153) (= (type $generated@@658) $generated@@73)) ($generated@@264 $generated@@657 ($generated@@570 $generated@@658))) (and (= ($generated@@346 ($generated@@324 ($generated@@338 $generated@@153) $generated@@657)) $generated@@657) ($generated@@177 ($generated@@324 ($generated@@338 $generated@@153) $generated@@657) ($generated@@570 $generated@@658))))
 :pattern ( ($generated@@264 $generated@@657 ($generated@@570 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (= (type $generated@@659) $generated@@73) (= (type $generated@@660) $generated@@153)) ($generated@@264 $generated@@660 ($generated@@258 $generated@@659))) (and (= ($generated@@346 ($generated@@324 $generated@@154 $generated@@660)) $generated@@660) ($generated@@177 ($generated@@324 $generated@@154 $generated@@660) ($generated@@258 $generated@@659))))
 :pattern ( ($generated@@264 $generated@@660 ($generated@@258 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) $generated@@154) (= (type $generated@@662) $generated@@73)) (= (type $generated@@663) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@259 $generated@@663) (and ($generated@@309 $generated@@661) ($generated@@83 $generated@@661 ($generated@@258 $generated@@662) $generated@@663)))) ($generated@@83 ($generated@@172 $generated@@661) ($generated@@258 $generated@@662) $generated@@663))
 :pattern ( ($generated@@83 ($generated@@172 $generated@@661) ($generated@@258 $generated@@662) $generated@@663))
)))
(assert (= ($generated@@81 $generated@@145) $generated@@61))
(assert (= ($generated@@365 $generated@@145) $generated@@69))
(assert (= ($generated@@81 $generated@@148) $generated@@62))
(assert (= ($generated@@365 $generated@@148) $generated@@70))
(assert (= ($generated@@81 $generated@@255) $generated@@63))
(assert (= ($generated@@365 $generated@@255) $generated@@70))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@664) ($generated@@85 $generated@@153 $generated@@2)) (= (type $generated@@665) $generated@@73)) (= (type $generated@@666) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@664 ($generated@@194 $generated@@665) $generated@@666) (forall (($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@153) (< 0 ($generated ($generated@@90 $generated@@664 $generated@@667)))) ($generated@@272 $generated@@667 $generated@@665 $generated@@666))
 :pattern ( ($generated@@90 $generated@@664 $generated@@667))
))))
 :pattern ( ($generated@@83 $generated@@664 ($generated@@194 $generated@@665) $generated@@666))
)))
(assert (= $generated@@193 ($generated@@295 $generated@@193)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (and (= (type $generated@@668) $generated@@154) (= (type $generated@@669) $generated@@73)) (= (type $generated@@670) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@259 $generated@@670) (and ($generated@@179 $generated@@668) (exists (($generated@@671 T@U) ) (!  (and (= (type $generated@@671) $generated@@73) ($generated@@83 $generated@@668 ($generated@@180 $generated@@669 $generated@@671) $generated@@670))
 :pattern ( ($generated@@83 $generated@@668 ($generated@@180 $generated@@669 $generated@@671) $generated@@670))
))))) ($generated@@272 ($generated@@187 $generated@@668) $generated@@669 $generated@@670))
 :pattern ( ($generated@@272 ($generated@@187 $generated@@668) $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) $generated@@154) (= (type $generated@@673) $generated@@73)) (= (type $generated@@674) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@259 $generated@@674) (and ($generated@@179 $generated@@672) (exists (($generated@@675 T@U) ) (!  (and (= (type $generated@@675) $generated@@73) ($generated@@83 $generated@@672 ($generated@@180 $generated@@675 $generated@@673) $generated@@674))
 :pattern ( ($generated@@83 $generated@@672 ($generated@@180 $generated@@675 $generated@@673) $generated@@674))
))))) ($generated@@272 ($generated@@188 $generated@@672) $generated@@673 $generated@@674))
 :pattern ( ($generated@@272 ($generated@@188 $generated@@672) $generated@@673 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) $generated@@153) (= (type $generated@@677) $generated@@153)) (= ($generated@@263 ($generated@@295 $generated@@676) ($generated@@295 $generated@@677)) ($generated@@295 ($generated@@263 $generated@@676 $generated@@677))))
 :pattern ( ($generated@@263 ($generated@@295 $generated@@676) ($generated@@295 $generated@@677)))
)))
(assert (forall (($generated@@678 Int) ) (! (= ($generated@@346 ($generated@@8 ($generated@@293 $generated@@678))) ($generated@@295 ($generated@@346 ($generated@@8 $generated@@678))))
 :pattern ( ($generated@@346 ($generated@@8 ($generated@@293 $generated@@678))))
)))
(assert (forall (($generated@@679 T@U) ) (! (= ($generated@@346 ($generated@@295 $generated@@679)) ($generated@@295 ($generated@@346 $generated@@679)))
 :pattern ( ($generated@@346 ($generated@@295 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (! (let (($generated@@681 ($generated@@339 (type $generated@@680))))
 (=> (and (= (type $generated@@680) ($generated@@338 $generated@@681)) (= ($generated@@337 $generated@@680) 0)) (= $generated@@680 ($generated@@336 $generated@@681))))
 :pattern ( ($generated@@337 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (! (let (($generated@@685 (type $generated@@683)))
 (=> (and (and (= (type $generated@@682) ($generated@@85 $generated@@685 $generated@@2)) (= (type $generated@@684) $generated@@2)) (<= 0 ($generated $generated@@684))) (= ($generated@@359 ($generated@@91 $generated@@682 $generated@@683 $generated@@684)) (+ (- ($generated@@359 $generated@@682) ($generated ($generated@@90 $generated@@682 $generated@@683))) ($generated $generated@@684)))))
 :pattern ( ($generated@@359 ($generated@@91 $generated@@682 $generated@@683 $generated@@684)))
)))
(assert  (=> (<= 2 $generated@@319) (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (= (type $generated@@686) $generated@@322) (= (type $generated@@687) $generated@@154)) (or ($generated@@323 $generated@@687) (and (not (= 2 $generated@@319)) ($generated@@177 $generated@@687 ($generated@@258 $generated@@255))))) (<= ($generated@@293 0) ($generated@@320 $generated@@686 $generated@@687)))
 :pattern ( ($generated@@320 $generated@@686 $generated@@687))
))))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@689) $generated@@2)) ($generated@@83 $generated@@689 $generated@@46 $generated@@688))
 :pattern ( ($generated@@83 $generated@@689 $generated@@46 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@691) $generated@@3)) ($generated@@83 $generated@@691 $generated@@47 $generated@@690))
 :pattern ( ($generated@@83 $generated@@691 $generated@@47 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@693) $generated@@4)) ($generated@@83 $generated@@693 $generated@@44 $generated@@692))
 :pattern ( ($generated@@83 $generated@@693 $generated@@44 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@695) $generated@@522)) ($generated@@83 $generated@@695 $generated@@45 $generated@@694))
 :pattern ( ($generated@@83 $generated@@695 $generated@@45 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@697) $generated@@153)) ($generated@@83 $generated@@697 $generated@@48 $generated@@696))
 :pattern ( ($generated@@83 $generated@@697 $generated@@48 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) ($generated@@338 $generated@@153)) (= (type $generated@@699) $generated@@73)) (= ($generated@@177 $generated@@698 ($generated@@570 $generated@@699)) (forall (($generated@@700 Int) ) (!  (=> (and (<= 0 $generated@@700) (< $generated@@700 ($generated@@337 $generated@@698))) ($generated@@264 ($generated@@571 $generated@@698 $generated@@700) $generated@@699))
 :pattern ( ($generated@@571 $generated@@698 $generated@@700))
))))
 :pattern ( ($generated@@177 $generated@@698 ($generated@@570 $generated@@699)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@701) $generated@@154) (= (type $generated@@702) $generated@@154)) (and ($generated@@309 $generated@@701) ($generated@@309 $generated@@702))) (= ($generated@@280 $generated@@701 $generated@@702)  (and (and (= ($generated@@163 $generated@@701) ($generated@@163 $generated@@702)) (= ($generated@@167 $generated@@701) ($generated@@167 $generated@@702))) ($generated@@280 ($generated@@172 $generated@@701) ($generated@@172 $generated@@702)))))
 :pattern ( ($generated@@280 $generated@@701 $generated@@702) ($generated@@309 $generated@@701))
 :pattern ( ($generated@@280 $generated@@701 $generated@@702) ($generated@@309 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 Int) ) (!  (=> (= (type $generated@@704) ($generated@@338 $generated@@153)) (=> (and (<= 0 $generated@@705) (< $generated@@705 ($generated@@337 $generated@@704))) (< ($generated@@612 ($generated@@324 $generated@@154 ($generated@@571 $generated@@704 $generated@@705))) ($generated@@703 $generated@@704))))
 :pattern ( ($generated@@612 ($generated@@324 $generated@@154 ($generated@@571 $generated@@704 $generated@@705))))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (and (= (type $generated@@706) ($generated@@370 $generated@@153 $generated@@153)) (= (type $generated@@707) $generated@@73)) (= (type $generated@@708) $generated@@73)) ($generated@@177 $generated@@706 ($generated@@474 $generated@@707 $generated@@708))) (and (and ($generated@@177 ($generated@@368 $generated@@706) ($generated@@283 $generated@@707)) ($generated@@177 ($generated@@415 $generated@@706) ($generated@@283 $generated@@708))) ($generated@@177 ($generated@@448 $generated@@706) ($generated@@283 ($generated@@180 $generated@@707 $generated@@708)))))
 :pattern ( ($generated@@177 $generated@@706 ($generated@@474 $generated@@707 $generated@@708)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (and (= (type $generated@@709) ($generated@@388 $generated@@153 $generated@@153)) (= (type $generated@@710) $generated@@73)) (= (type $generated@@711) $generated@@73)) ($generated@@177 $generated@@709 ($generated@@482 $generated@@710 $generated@@711))) (and (and ($generated@@177 ($generated@@386 $generated@@709) ($generated@@288 $generated@@710)) ($generated@@177 ($generated@@426 $generated@@709) ($generated@@288 $generated@@711))) ($generated@@177 ($generated@@456 $generated@@709) ($generated@@288 ($generated@@180 $generated@@710 $generated@@711)))))
 :pattern ( ($generated@@177 $generated@@709 ($generated@@482 $generated@@710 $generated@@711)))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@2) ($generated@@177 $generated@@712 $generated@@46))
 :pattern ( ($generated@@177 $generated@@712 $generated@@46))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@3) ($generated@@177 $generated@@713 $generated@@47))
 :pattern ( ($generated@@177 $generated@@713 $generated@@47))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@4) ($generated@@177 $generated@@714 $generated@@44))
 :pattern ( ($generated@@177 $generated@@714 $generated@@44))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@522) ($generated@@177 $generated@@715 $generated@@45))
 :pattern ( ($generated@@177 $generated@@715 $generated@@45))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@153) ($generated@@177 $generated@@716 $generated@@48))
 :pattern ( ($generated@@177 $generated@@716 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () Int)
(declare-fun $generated@@720 () Int)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () T@U)
(declare-fun $generated@@726 () T@U)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () Int)
(declare-fun $generated@@729 () Int)
(declare-fun $generated@@730 () Int)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 (T@U) Bool)
(declare-fun $generated@@733 () Int)
(declare-fun $generated@@734 () T@U)
(declare-fun $generated@@735 () Int)
(declare-fun $generated@@736 () Int)
(declare-fun $generated@@737 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@717) $generated@@154) (= (type $generated@@718) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@723) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@721) $generated@@86)) (= (type $generated@@722) $generated@@154)) (= (type $generated@@724) $generated@@154)) (= (type $generated@@725) $generated@@154)) (= (type $generated@@726) $generated@@86)) (= (type $generated@@727) $generated@@86)) (= (type $generated@@731) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@734) ($generated@@201 $generated@@86 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@738  (=> ($generated@@83 $generated@@717 ($generated@@258 $generated@@255) $generated@@718) (=> (and (and ($generated@@323 $generated@@717) ($generated@@323 $generated@@717)) (and (= $generated@@719 ($generated@@320 ($generated@@321 $generated@@565) $generated@@717)) (= (ControlFlow 0 3) (- 0 2)))) (<= ($generated@@293 0) $generated@@719)))))
(let (($generated@@739  (=> (and (= $generated@@717 ($generated@@152 $generated@@720 ($generated@@346 $generated@@721) $generated@@722)) (<= ($generated@@293 0) $generated@@720)) (=> (and (and ($generated@@177 $generated@@721 $generated@@255) ($generated@@83 $generated@@721 $generated@@255 $generated@@723)) (and ($generated@@177 $generated@@722 ($generated@@258 $generated@@255)) ($generated@@83 $generated@@722 ($generated@@258 $generated@@255) $generated@@723))) (=> (and (and (and ($generated@@177 $generated@@724 ($generated@@258 $generated@@255)) ($generated@@83 $generated@@724 ($generated@@258 $generated@@255) $generated@@723)) (= $generated@@725 $generated@@722)) (and ($generated@@177 $generated@@725 ($generated@@258 $generated@@255)) (= $generated@@724 $generated@@725))) (=> (and (and (and (and ($generated@@177 $generated@@726 $generated@@255) ($generated@@83 $generated@@726 $generated@@255 $generated@@723)) (= $generated@@727 $generated@@721)) (and ($generated@@177 $generated@@727 $generated@@255) (= $generated@@726 $generated@@727))) (and (and (<= ($generated@@293 0) $generated@@728) (= $generated@@729 $generated@@720)) (and ($generated@@177 ($generated@@8 $generated@@729) $generated@@145) (= $generated@@728 $generated@@729)))) (and (=> (= (ControlFlow 0 5) (- 0 9)) (< ($generated@@612 $generated@@724) ($generated@@612 $generated@@717))) (=> (< ($generated@@612 $generated@@724) ($generated@@612 $generated@@717)) (=> (<= ($generated@@293 0) $generated@@730) (=> (and (and (and ($generated@@259 $generated@@731) ($generated@@732 $generated@@731)) (<= ($generated@@293 0) $generated@@733)) (and (forall (($generated@@740 T@U) ) (!  (=> (= (type $generated@@740) $generated@@86) (=> (and (not (= $generated@@740 $generated@@149)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@723 $generated@@740) $generated@@60))) (= ($generated@@90 $generated@@731 $generated@@740) ($generated@@90 $generated@@723 $generated@@740))))
 :pattern ( ($generated@@90 $generated@@731 $generated@@740))
)) ($generated@@141 $generated@@723 $generated@@731))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (<= ($generated@@293 0) $generated@@733)) (=> (<= ($generated@@293 0) $generated@@733) (and (=> (= (ControlFlow 0 5) (- 0 7)) (<= ($generated@@293 0) $generated@@728)) (=> (<= ($generated@@293 0) $generated@@728) (and (=> (= (ControlFlow 0 5) (- 0 6)) (<= ($generated@@293 0) (- $generated@@728 10))) (=> (<= ($generated@@293 0) (- $generated@@728 10)) (=> (and (= $generated@@718 $generated@@731) (= (ControlFlow 0 5) 3)) $generated@@738)))))))))))))))))
(let (($generated@@741  (=> (= $generated@@717 $generated@@193) (=> (and (= $generated@@718 $generated@@723) (= (ControlFlow 0 4) 3)) $generated@@738))))
(let (($generated@@742 true))
(let (($generated@@743  (=> (not (= $generated@@717 $generated@@193)) (and (=> (= (ControlFlow 0 10) 5) $generated@@739) (=> (= (ControlFlow 0 10) 1) $generated@@742)))))
(let (($generated@@744  (=> (= $generated@@734 ($generated@@200 $generated@@149 $generated@@723 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 4) $generated@@741) (=> (= (ControlFlow 0 11) 10) $generated@@743)))))
(let (($generated@@745  (=> (and ($generated@@259 $generated@@723) ($generated@@732 $generated@@723)) (=> (and (and (and (and (and ($generated@@177 $generated@@717 ($generated@@258 $generated@@255)) ($generated@@83 $generated@@717 ($generated@@258 $generated@@255) $generated@@723)) ($generated@@436 $generated@@717)) (<= ($generated@@293 0) $generated@@735)) (and (<= ($generated@@293 0) $generated@@736) true)) (and (and (<= ($generated@@293 0) $generated@@737) true) (and (= 3 $generated@@319) (= (ControlFlow 0 12) 11)))) $generated@@744))))
$generated@@745))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@251 () Int)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@T T@U T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (Int) Int)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@363 (T@U T@U) Bool)
(declare-fun $generated@@374 (T@T T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@460 (T@T) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 () T@T)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@532 (T@U Int) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@638 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= (type $generated@@62) $generated@@72)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@65) $generated@@77)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@150) 16) (= (type $generated@@144) ($generated@@73 $generated@@150))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@151)) $generated@@71)
 :pattern ( ($generated@@145 $generated@@151))
))) (= (type $generated@@147) $generated@@89)) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@148 $generated@@152)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@71) (= (type $generated@@154) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@155) $generated@@89)) (and ($generated@@146 $generated@@154) (and (not (= $generated@@155 $generated@@147)) (= ($generated@@148 $generated@@155) ($generated@@145 $generated@@153))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) $generated@@153))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) ($generated@@145 $generated@@153))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@158) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@156 $generated@@157 $generated@@158)) (forall (($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@157 $generated@@159) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@60))
)))
 :pattern ( ($generated@@156 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@71) (= (type $generated@@161) $generated@@89)) (= (type $generated@@162) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@161 ($generated@@145 $generated@@160) $generated@@162)  (or (= $generated@@161 $generated@@147) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@162 $generated@@161) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@161 ($generated@@145 $generated@@160) $generated@@162))
)))
(assert (= (type $generated@@163) $generated@@71))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@2) (= (type $generated@@165) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@164 $generated@@163 $generated@@165))
 :pattern ( ($generated@@86 $generated@@164 $generated@@163 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@166 $generated@@167 ($generated@@87 0)))
 :pattern ( ($generated@@166 $generated@@167 ($generated@@87 0)))
)))
(assert  (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@71)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@71) (= (type $generated@@174) $generated@@71)) (= (type $generated@@175) $generated@@170)) ($generated@@166 $generated@@175 ($generated@@169 $generated@@173 $generated@@174))) ($generated@@168 $generated@@175))
 :pattern ( ($generated@@168 $generated@@175) ($generated@@166 $generated@@175 ($generated@@169 $generated@@173 $generated@@174)))
)))
(assert  (and (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@150)
 :pattern ( ($generated@@177 $generated@@179))
)) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@150)
 :pattern ( ($generated@@178 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@170) (= (type $generated@@182) $generated@@170)) true) (= ($generated@@176 $generated@@181 $generated@@182)  (and (= ($generated@@177 $generated@@181) ($generated@@177 $generated@@182)) (= ($generated@@178 $generated@@181) ($generated@@178 $generated@@182)))))
 :pattern ( ($generated@@176 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@71)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@187) $generated@@71)) ($generated@@166 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@166 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 18)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@89 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@74 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@89) (= (type $generated@@238) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@239) ($generated@@73 $generated@@4))) (= (type $generated@@241) $generated@@89)) (= (type $generated@@242) ($generated@@73 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@244 $generated@@245 $generated@@246)) $generated@@170)
 :pattern ( ($generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@71) (= (type $generated@@248) $generated@@71)) (= (type $generated@@249) $generated@@150)) (= (type $generated@@250) $generated@@150)) (= ($generated@@166 ($generated@@244 $generated@@249 $generated@@250) ($generated@@169 $generated@@247 $generated@@248))  (and ($generated@@149 $generated@@249 $generated@@247) ($generated@@149 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@166 ($generated@@244 $generated@@249 $generated@@250) ($generated@@169 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert  (=> (<= 0 $generated@@251) (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@71) (= (type $generated@@258) $generated@@89)) (or ($generated@@253 $generated@@257 $generated@@258) (and (not (= 0 $generated@@251)) ($generated@@166 $generated@@258 ($generated@@145 $generated@@257))))) (= ($generated@@252 $generated@@257 $generated@@258) ($generated@@0 ($generated@@254 ($generated@@11 true)))))
 :pattern ( ($generated@@252 $generated@@257 $generated@@258))
))))
(assert (= ($generated@@81 $generated@@144) 0))
(assert (forall (($generated@@260 T@T) ($generated@@261 T@U) ($generated@@262 T@U) ) (! (= (type ($generated@@259 $generated@@260 $generated@@261 $generated@@262)) ($generated@@73 $generated@@260))
 :pattern ( ($generated@@259 $generated@@260 $generated@@261 $generated@@262))
)))
(assert (= ($generated@@259 $generated@@150 $generated@@65 $generated@@70) $generated@@144))
(assert  (not ($generated@@263 $generated@@144)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@170) (= (type $generated@@265) $generated@@170)) (= ($generated@@176 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@176 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@71)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@269) $generated@@71)) (= ($generated@@166 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@150) ($generated@@0 ($generated@@93 $generated@@268 $generated@@270))) ($generated@@149 $generated@@270 $generated@@269))
 :pattern ( ($generated@@93 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@166 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@71)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@274) $generated@@71)) (= ($generated@@166 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@150) ($generated@@0 ($generated@@93 $generated@@273 $generated@@275))) ($generated@@149 $generated@@275 $generated@@274))
 :pattern ( ($generated@@93 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@166 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 Int) ) (! (= ($generated@@276 $generated@@277) $generated@@277)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@254 $generated@@278) $generated@@278)
 :pattern ( ($generated@@254 $generated@@278))
)))
(assert  (=> (<= 0 $generated@@251) (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@71) (= (type $generated@@280) $generated@@89)) (or ($generated@@253 $generated@@279 ($generated@@254 $generated@@280)) (and (not (= 0 $generated@@251)) ($generated@@166 $generated@@280 ($generated@@145 $generated@@279))))) (= ($generated@@252 $generated@@279 ($generated@@254 $generated@@280)) ($generated@@0 ($generated@@254 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@252 $generated@@279 ($generated@@254 $generated@@280)))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) $generated@@71) (= (type $generated@@283) $generated@@71)) (= (type $generated@@284) $generated@@150)) (= (type $generated@@285) $generated@@150)) (= (type $generated@@286) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@146 $generated@@286)) (= ($generated@@86 ($generated@@244 $generated@@284 $generated@@285) ($generated@@169 $generated@@282 $generated@@283) $generated@@286)  (and ($generated@@281 $generated@@284 $generated@@282 $generated@@286) ($generated@@281 $generated@@285 $generated@@283 $generated@@286))))
 :pattern ( ($generated@@86 ($generated@@244 $generated@@284 $generated@@285) ($generated@@169 $generated@@282 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@76)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@170) (= ($generated@@168 $generated@@289) (= ($generated@@287 $generated@@289) $generated@@63)))
 :pattern ( ($generated@@168 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@170) ($generated@@168 $generated@@290)) (exists (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (and (and (= (type $generated@@291) $generated@@150) (= (type $generated@@292) $generated@@150)) (= $generated@@290 ($generated@@244 $generated@@291 $generated@@292)))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))
 :pattern ( ($generated@@168 $generated@@290))
)))
(assert  (and (and (forall (($generated@@297 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@297)) 19)) (forall (($generated@@298 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
))) (forall (($generated@@299 T@T) ) (! (= (type ($generated@@293 $generated@@299)) ($generated@@295 $generated@@299))
 :pattern ( ($generated@@293 $generated@@299))
))))
(assert (forall (($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@300)) 0)
 :pattern ( ($generated@@293 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@2) (= ($generated@@166 $generated@@301 $generated@@163) (<= ($generated@@276 0) ($generated $generated@@301))))
 :pattern ( ($generated@@166 $generated@@301 $generated@@163))
)))
(assert ($generated@@263 $generated@@60))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (= (type $generated@@302) $generated@@71) (= (type $generated@@303) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@304) $generated@@89)) (and (and ($generated@@146 $generated@@303) (and (not (= $generated@@304 $generated@@147)) (= ($generated@@148 $generated@@304) ($generated@@145 $generated@@302)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@303 $generated@@304) $generated@@60)))) ($generated@@281 ($generated@@95 ($generated@@93 $generated@@303 $generated@@304) $generated@@144) $generated@@302 $generated@@303))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@303 $generated@@304) $generated@@144) ($generated@@145 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@150)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@71) (= (type $generated@@309) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@281 ($generated@@305 $generated@@307) $generated@@308 $generated@@309) ($generated@@86 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@281 ($generated@@305 $generated@@307) $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@311) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@312) $generated@@150)) (= (type $generated@@313) $generated@@71)) ($generated@@156 $generated@@310 $generated@@311)) ($generated@@281 $generated@@312 $generated@@313 $generated@@310)) ($generated@@281 $generated@@312 $generated@@313 $generated@@311))
 :pattern ( ($generated@@156 $generated@@310 $generated@@311) ($generated@@281 $generated@@312 $generated@@313 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@314) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@315) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@317) $generated@@71)) ($generated@@156 $generated@@314 $generated@@315)) ($generated@@86 $generated@@316 $generated@@317 $generated@@314)) ($generated@@86 $generated@@316 $generated@@317 $generated@@315))
 :pattern ( ($generated@@156 $generated@@314 $generated@@315) ($generated@@86 $generated@@316 $generated@@317 $generated@@314))
)))
(assert (forall (($generated@@320 T@T) ) (! (= (type ($generated@@319 $generated@@320)) ($generated@@88 $generated@@320 $generated@@2))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@91 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@88 $generated@@322 $generated@@2)) (and (= (= ($generated@@318 $generated@@321) 0) (= $generated@@321 ($generated@@319 $generated@@322))) (=> (not (= ($generated@@318 $generated@@321) 0)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) (< 0 ($generated ($generated@@93 $generated@@321 $generated@@323))))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@78)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@71) (and (= ($generated@@82 ($generated@@145 $generated@@326)) $generated@@66) (= ($generated@@324 ($generated@@145 $generated@@326)) $generated@@69)))
 :pattern ( ($generated@@145 $generated@@326))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 20)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@88 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@93 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@93 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 21)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@88 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@93 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@93 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@365) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@363 $generated@@364 $generated@@365)) (and ($generated@@156 $generated@@364 $generated@@365) (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@74 (type $generated@@367))))
 (=> (and (and (= (type $generated@@366) $generated@@89) (= (type $generated@@367) ($generated@@73 $generated@@368))) (not ($generated@@263 $generated@@367))) (= ($generated@@95 ($generated@@93 $generated@@364 $generated@@366) $generated@@367) ($generated@@95 ($generated@@93 $generated@@365 $generated@@366) $generated@@367))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@365 $generated@@366) $generated@@367))
))))
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert  (=> (<= 0 $generated@@251) (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@369) $generated@@71) (= (type $generated@@370) $generated@@89)) (or ($generated@@253 $generated@@369 $generated@@370) (and (not (= 0 $generated@@251)) ($generated@@166 $generated@@370 ($generated@@145 $generated@@369))))) true)
 :pattern ( ($generated@@252 $generated@@369 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@91 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@88 $generated@@372 $generated@@2)) (= ($generated@@184 $generated@@371) (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@372) (and (<= 0 ($generated ($generated@@93 $generated@@371 $generated@@373))) (<= ($generated ($generated@@93 $generated@@371 $generated@@373)) ($generated@@318 $generated@@371))))
 :pattern ( ($generated@@93 $generated@@371 $generated@@373))
)))))
 :pattern ( ($generated@@184 $generated@@371))
)))
(assert (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@150) ($generated@@149 $generated@@377 $generated@@163)) (and (= ($generated@@305 ($generated@@374 $generated@@2 $generated@@377)) $generated@@377) ($generated@@166 ($generated@@374 $generated@@2 $generated@@377) $generated@@163)))
 :pattern ( ($generated@@149 $generated@@377 $generated@@163))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@71) (= (type $generated@@379) $generated@@89)) (= ($generated@@166 $generated@@379 ($generated@@145 $generated@@378))  (or (= $generated@@379 $generated@@147) (= ($generated@@148 $generated@@379) ($generated@@145 $generated@@378)))))
 :pattern ( ($generated@@166 $generated@@379 ($generated@@145 $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@331 (type $generated@@380))))
(let (($generated@@382 ($generated@@330 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@329 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@328 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) ($generated@@0 ($generated@@93 ($generated@@327 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@327 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@331 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385)) ($generated@@88 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@331 (type $generated@@387))))
(let (($generated@@389 ($generated@@330 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@329 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@328 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@388) ($generated@@0 ($generated@@93 ($generated@@384 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@349 (type $generated@@391))))
(let (($generated@@393 ($generated@@348 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@347 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@346 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) ($generated@@0 ($generated@@93 ($generated@@345 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@345 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@349 (type $generated@@396))))
(= (type ($generated@@395 $generated@@396)) ($generated@@88 $generated@@397 $generated@@4)))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@349 (type $generated@@398))))
(let (($generated@@400 ($generated@@348 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@347 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@346 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@399) ($generated@@0 ($generated@@93 ($generated@@395 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@395 $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@403) $generated@@71)) (= ($generated@@166 $generated@@402 ($generated@@183 $generated@@403)) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@402 $generated@@404)))) ($generated@@149 $generated@@404 $generated@@403))
 :pattern ( ($generated@@93 $generated@@402 $generated@@404))
))))
 :pattern ( ($generated@@166 $generated@@402 ($generated@@183 $generated@@403)))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (= (type $generated@@405) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@406) $generated@@71)) (= (type $generated@@407) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@405 ($generated@@266 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@150) ($generated@@0 ($generated@@93 $generated@@405 $generated@@408))) ($generated@@281 $generated@@408 $generated@@406 $generated@@407))
 :pattern ( ($generated@@93 $generated@@405 $generated@@408))
))))
 :pattern ( ($generated@@86 $generated@@405 ($generated@@266 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (= (type $generated@@409) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@410) $generated@@71)) (= (type $generated@@411) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@409 ($generated@@271 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@150) ($generated@@0 ($generated@@93 $generated@@409 $generated@@412))) ($generated@@281 $generated@@412 $generated@@410 $generated@@411))
 :pattern ( ($generated@@93 $generated@@409 $generated@@412))
))))
 :pattern ( ($generated@@86 $generated@@409 ($generated@@271 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(= ($generated ($generated@@93 ($generated@@319 $generated@@414) $generated@@413)) 0))
 :pattern ( (let (($generated@@414 (type $generated@@413)))
($generated@@93 ($generated@@319 $generated@@414) $generated@@413)))
)))
(assert  (and (forall (($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@417)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@415 $generated@@417))
)) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@331 (type $generated@@418))))
(let (($generated@@420 ($generated@@330 (type $generated@@418))))
(= (type ($generated@@416 $generated@@418)) ($generated@@88 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@416 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@329 $generated@@150 $generated@@150)) (= (type $generated@@422) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@415 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@93 ($generated@@327 $generated@@421) ($generated@@177 ($generated@@374 $generated@@170 $generated@@422)))) (= ($generated@@93 ($generated@@416 $generated@@421) ($generated@@177 ($generated@@374 $generated@@170 $generated@@422))) ($generated@@178 ($generated@@374 $generated@@170 $generated@@422))))))
 :pattern ( ($generated@@93 ($generated@@415 $generated@@421) $generated@@422))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@349 (type $generated@@426))))
(let (($generated@@428 ($generated@@348 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@88 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@347 $generated@@150 $generated@@150)) (= (type $generated@@430) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@93 ($generated@@345 $generated@@429) ($generated@@177 ($generated@@374 $generated@@170 $generated@@430)))) (= ($generated@@93 ($generated@@424 $generated@@429) ($generated@@177 ($generated@@374 $generated@@170 $generated@@430))) ($generated@@178 ($generated@@374 $generated@@170 $generated@@430))))))
 :pattern ( ($generated@@93 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@330 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@329 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@93 ($generated@@384 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@93 ($generated@@327 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@93 ($generated@@416 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@93 ($generated@@327 $generated@@431) $generated@@435))
 :pattern ( ($generated@@93 ($generated@@416 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@93 ($generated@@384 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@348 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@347 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@93 ($generated@@395 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@93 ($generated@@345 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@93 ($generated@@424 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@93 ($generated@@345 $generated@@436) $generated@@440))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@93 ($generated@@395 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@71)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@329 $generated@@150 $generated@@150)) (= (type $generated@@445) $generated@@71)) (= (type $generated@@446) $generated@@71)) (= (type $generated@@447) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@327 $generated@@444) $generated@@448))) (and ($generated@@281 ($generated@@93 ($generated@@416 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@281 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@93 ($generated@@416 $generated@@444) $generated@@448))
 :pattern ( ($generated@@93 ($generated@@327 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@86 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@71)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@347 $generated@@150 $generated@@150)) (= (type $generated@@453) $generated@@71)) (= (type $generated@@454) $generated@@71)) (= (type $generated@@455) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@345 $generated@@452) $generated@@456))) (and ($generated@@281 ($generated@@93 ($generated@@424 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@281 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@452) $generated@@456))
 :pattern ( ($generated@@93 ($generated@@345 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@86 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@457) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@458) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@459) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@457 $generated@@459))) (and ($generated@@156 $generated@@457 $generated@@458) ($generated@@156 $generated@@458 $generated@@459))) ($generated@@156 $generated@@457 $generated@@459))
 :pattern ( ($generated@@156 $generated@@457 $generated@@458) ($generated@@156 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@T) ) (! (= (type ($generated@@460 $generated@@461)) ($generated@@88 $generated@@461 $generated@@4))
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@349 (type $generated@@462))))
(let (($generated@@464 ($generated@@348 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@347 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@346 $generated@@464 $generated@@463)) (= ($generated@@345 $generated@@462) ($generated@@460 $generated@@464))))))
 :pattern ( ($generated@@345 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@349 (type $generated@@465))))
(let (($generated@@467 ($generated@@348 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@347 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@346 $generated@@467 $generated@@466)) (= ($generated@@395 $generated@@465) ($generated@@460 $generated@@466))))))
 :pattern ( ($generated@@395 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@349 (type $generated@@468))))
(let (($generated@@470 ($generated@@348 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@347 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@346 $generated@@470 $generated@@469)) (= ($generated@@423 $generated@@468) ($generated@@460 $generated@@150))))))
 :pattern ( ($generated@@423 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@331 (type $generated@@471))))
(let (($generated@@473 ($generated@@330 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@329 $generated@@473 $generated@@472)) (or (= $generated@@471 ($generated@@328 $generated@@473 $generated@@472)) (exists (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (and (and (= (type $generated@@474) $generated@@150) (= (type $generated@@475) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@415 $generated@@471) ($generated@@305 ($generated@@244 $generated@@474 $generated@@475)))))
 :no-pattern (type $generated@@474)
 :no-pattern (type $generated@@475)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
))))))
 :pattern ( ($generated@@415 $generated@@471))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@349 (type $generated@@476))))
(let (($generated@@478 ($generated@@348 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@347 $generated@@478 $generated@@477)) (or (= $generated@@476 ($generated@@346 $generated@@478 $generated@@477)) (exists (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (and (and (= (type $generated@@479) $generated@@150) (= (type $generated@@480) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@423 $generated@@476) ($generated@@305 ($generated@@244 $generated@@479 $generated@@480)))))
 :no-pattern (type $generated@@479)
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
))))))
 :pattern ( ($generated@@423 $generated@@476))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@77)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@T) ) (!  (=> (and (= (type $generated@@483) $generated@@77) (= (type $generated@@484) $generated@@75)) (and (= ($generated@@481 ($generated@@259 $generated@@485 $generated@@483 $generated@@484)) $generated@@483) (= ($generated@@84 ($generated@@259 $generated@@485 $generated@@483 $generated@@484)) $generated@@484)))
 :pattern ( ($generated@@259 $generated@@485 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@150) ($generated@@149 $generated@@486 $generated@@46)) (and (= ($generated@@305 ($generated@@374 $generated@@2 $generated@@486)) $generated@@486) ($generated@@166 ($generated@@374 $generated@@2 $generated@@486) $generated@@46)))
 :pattern ( ($generated@@149 $generated@@486 $generated@@46))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@150) ($generated@@149 $generated@@487 $generated@@47)) (and (= ($generated@@305 ($generated@@374 $generated@@3 $generated@@487)) $generated@@487) ($generated@@166 ($generated@@374 $generated@@3 $generated@@487) $generated@@47)))
 :pattern ( ($generated@@149 $generated@@487 $generated@@47))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@150) ($generated@@149 $generated@@488 $generated@@44)) (and (= ($generated@@305 ($generated@@374 $generated@@4 $generated@@488)) $generated@@488) ($generated@@166 ($generated@@374 $generated@@4 $generated@@488) $generated@@44)))
 :pattern ( ($generated@@149 $generated@@488 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@489) 22))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@150) ($generated@@149 $generated@@490 $generated@@45)) (and (= ($generated@@305 ($generated@@374 $generated@@489 $generated@@490)) $generated@@490) ($generated@@166 ($generated@@374 $generated@@489 $generated@@490) $generated@@45)))
 :pattern ( ($generated@@149 $generated@@490 $generated@@45))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@71) (= ($generated@@149 ($generated@@305 $generated@@491) $generated@@492) ($generated@@166 $generated@@491 $generated@@492)))
 :pattern ( ($generated@@149 ($generated@@305 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@91 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@88 $generated@@494 $generated@@2)) (<= 0 ($generated@@318 $generated@@493))))
 :pattern ( ($generated@@318 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@296 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@295 $generated@@496)) (<= 0 ($generated@@294 $generated@@495))))
 :pattern ( ($generated@@294 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@71)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@71) (= (type $generated@@500) $generated@@71)) (= ($generated@@497 ($generated@@441 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@441 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@71)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@71) (= (type $generated@@504) $generated@@71)) (= ($generated@@501 ($generated@@441 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@441 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@71) (= (type $generated@@506) $generated@@71)) (= ($generated@@82 ($generated@@441 $generated@@505 $generated@@506)) $generated@@58))
 :pattern ( ($generated@@441 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@71)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@71) (= (type $generated@@510) $generated@@71)) (= ($generated@@507 ($generated@@449 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@449 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@71)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@71) (= (type $generated@@514) $generated@@71)) (= ($generated@@511 ($generated@@449 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@449 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@71) (= (type $generated@@516) $generated@@71)) (= ($generated@@82 ($generated@@449 $generated@@515 $generated@@516)) $generated@@59))
 :pattern ( ($generated@@449 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@150) (= (type $generated@@518) $generated@@150)) (= ($generated@@287 ($generated@@244 $generated@@517 $generated@@518)) $generated@@63))
 :pattern ( ($generated@@244 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@71)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@71) (= (type $generated@@522) $generated@@71)) (= ($generated@@519 ($generated@@169 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@169 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@71)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@71) (= (type $generated@@526) $generated@@71)) (= ($generated@@523 ($generated@@169 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@169 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@150)) (= ($generated@@177 ($generated@@244 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@244 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) (= (type $generated@@530) $generated@@150)) (= ($generated@@178 ($generated@@244 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@244 $generated@@529 $generated@@530))
)))
(assert  (and (forall (($generated@@533 T@U) ) (! (= (type ($generated@@531 $generated@@533)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@533))
)) (forall (($generated@@534 T@U) ($generated@@535 Int) ) (! (let (($generated@@536 ($generated@@296 (type $generated@@534))))
(= (type ($generated@@532 $generated@@534 $generated@@535)) $generated@@536))
 :pattern ( ($generated@@532 $generated@@534 $generated@@535))
))))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@295 $generated@@150)) (= (type $generated@@538) $generated@@71)) (= (type $generated@@539) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@537 ($generated@@531 $generated@@538) $generated@@539) (forall (($generated@@540 Int) ) (!  (=> (and (<= 0 $generated@@540) (< $generated@@540 ($generated@@294 $generated@@537))) ($generated@@281 ($generated@@532 $generated@@537 $generated@@540) $generated@@538 $generated@@539))
 :pattern ( ($generated@@532 $generated@@537 $generated@@540))
))))
 :pattern ( ($generated@@86 $generated@@537 ($generated@@531 $generated@@538) $generated@@539))
)))
(assert (forall (($generated@@542 Int) ) (! (= ($generated@@541 ($generated@@87 $generated@@542)) $generated@@542)
 :pattern ( ($generated@@87 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@71)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@71) (= ($generated@@543 ($generated@@266 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@266 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@71) (= ($generated@@82 ($generated@@266 $generated@@546)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@71)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@71) (= ($generated@@547 ($generated@@271 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@271 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@71) (= ($generated@@82 ($generated@@271 $generated@@550)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@71)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@71) (= ($generated@@551 ($generated@@183 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@183 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@71) (= ($generated@@82 ($generated@@183 $generated@@554)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@71)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@71) (= ($generated@@555 ($generated@@531 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@531 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@71) (= ($generated@@82 ($generated@@531 $generated@@558)) $generated@@57))
 :pattern ( ($generated@@531 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@71)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@71) (= ($generated@@559 ($generated@@145 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@145 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
(= ($generated@@374 $generated@@563 ($generated@@305 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@305 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@329 $generated@@150 $generated@@150)) (= (type $generated@@565) $generated@@71)) (= (type $generated@@566) $generated@@71)) (= ($generated@@166 $generated@@564 ($generated@@441 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@327 $generated@@564) $generated@@567))) (and ($generated@@149 ($generated@@93 ($generated@@416 $generated@@564) $generated@@567) $generated@@566) ($generated@@149 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@93 ($generated@@416 $generated@@564) $generated@@567))
 :pattern ( ($generated@@93 ($generated@@327 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@166 $generated@@564 ($generated@@441 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@347 $generated@@150 $generated@@150)) (= (type $generated@@569) $generated@@71)) (= (type $generated@@570) $generated@@71)) (= ($generated@@166 $generated@@568 ($generated@@449 $generated@@569 $generated@@570)) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@345 $generated@@568) $generated@@571))) (and ($generated@@149 ($generated@@93 ($generated@@424 $generated@@568) $generated@@571) $generated@@570) ($generated@@149 $generated@@571 $generated@@569)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@568) $generated@@571))
 :pattern ( ($generated@@93 ($generated@@345 $generated@@568) $generated@@571))
))))
 :pattern ( ($generated@@166 $generated@@568 ($generated@@449 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@150) (= (type $generated@@575) $generated@@150)) (< ($generated@@572 $generated@@574) ($generated@@573 ($generated@@244 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@244 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@150) (= (type $generated@@577) $generated@@150)) (< ($generated@@572 $generated@@577) ($generated@@573 ($generated@@244 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@244 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@150) (= (type $generated@@579) $generated@@71)) (= (type $generated@@580) $generated@@71)) ($generated@@149 $generated@@578 ($generated@@441 $generated@@579 $generated@@580))) (and (= ($generated@@305 ($generated@@374 ($generated@@329 $generated@@150 $generated@@150) $generated@@578)) $generated@@578) ($generated@@166 ($generated@@374 ($generated@@329 $generated@@150 $generated@@150) $generated@@578) ($generated@@441 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@149 $generated@@578 ($generated@@441 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@71)) (= (type $generated@@583) $generated@@71)) ($generated@@149 $generated@@581 ($generated@@449 $generated@@582 $generated@@583))) (and (= ($generated@@305 ($generated@@374 ($generated@@347 $generated@@150 $generated@@150) $generated@@581)) $generated@@581) ($generated@@166 ($generated@@374 ($generated@@347 $generated@@150 $generated@@150) $generated@@581) ($generated@@449 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@149 $generated@@581 ($generated@@449 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@71) (= (type $generated@@585) $generated@@71)) (= (type $generated@@586) $generated@@150)) ($generated@@149 $generated@@586 ($generated@@169 $generated@@584 $generated@@585))) (and (= ($generated@@305 ($generated@@374 $generated@@170 $generated@@586)) $generated@@586) ($generated@@166 ($generated@@374 $generated@@170 $generated@@586) ($generated@@169 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@149 $generated@@586 ($generated@@169 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@587)))
 (not ($generated@@0 ($generated@@93 ($generated@@460 $generated@@588) $generated@@587))))
 :pattern ( (let (($generated@@588 (type $generated@@587)))
($generated@@93 ($generated@@460 $generated@@588) $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@71) (= (type $generated@@590) $generated@@71)) (and (= ($generated@@82 ($generated@@169 $generated@@589 $generated@@590)) $generated@@64) (= ($generated@@324 ($generated@@169 $generated@@589 $generated@@590)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@170) (= ($generated@@572 ($generated@@305 $generated@@591)) ($generated@@573 $generated@@591)))
 :pattern ( ($generated@@572 ($generated@@305 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@150) ($generated@@149 $generated@@592 ($generated@@87 0))) (and (= ($generated@@305 ($generated@@374 $generated@@2 $generated@@592)) $generated@@592) ($generated@@166 ($generated@@374 ($generated@@88 $generated@@150 $generated@@4) $generated@@592) ($generated@@87 0))))
 :pattern ( ($generated@@149 $generated@@592 ($generated@@87 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@71)) ($generated@@149 $generated@@593 ($generated@@266 $generated@@594))) (and (= ($generated@@305 ($generated@@374 ($generated@@88 $generated@@150 $generated@@4) $generated@@593)) $generated@@593) ($generated@@166 ($generated@@374 ($generated@@88 $generated@@150 $generated@@4) $generated@@593) ($generated@@266 $generated@@594))))
 :pattern ( ($generated@@149 $generated@@593 ($generated@@266 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@150) (= (type $generated@@596) $generated@@71)) ($generated@@149 $generated@@595 ($generated@@271 $generated@@596))) (and (= ($generated@@305 ($generated@@374 ($generated@@88 $generated@@150 $generated@@4) $generated@@595)) $generated@@595) ($generated@@166 ($generated@@374 ($generated@@88 $generated@@150 $generated@@4) $generated@@595) ($generated@@271 $generated@@596))))
 :pattern ( ($generated@@149 $generated@@595 ($generated@@271 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@150) (= (type $generated@@598) $generated@@71)) ($generated@@149 $generated@@597 ($generated@@183 $generated@@598))) (and (= ($generated@@305 ($generated@@374 ($generated@@88 $generated@@150 $generated@@2) $generated@@597)) $generated@@597) ($generated@@166 ($generated@@374 ($generated@@88 $generated@@150 $generated@@2) $generated@@597) ($generated@@183 $generated@@598))))
 :pattern ( ($generated@@149 $generated@@597 ($generated@@183 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@150) (= (type $generated@@600) $generated@@71)) ($generated@@149 $generated@@599 ($generated@@531 $generated@@600))) (and (= ($generated@@305 ($generated@@374 ($generated@@295 $generated@@150) $generated@@599)) $generated@@599) ($generated@@166 ($generated@@374 ($generated@@295 $generated@@150) $generated@@599) ($generated@@531 $generated@@600))))
 :pattern ( ($generated@@149 $generated@@599 ($generated@@531 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@71) (= (type $generated@@602) $generated@@150)) ($generated@@149 $generated@@602 ($generated@@145 $generated@@601))) (and (= ($generated@@305 ($generated@@374 $generated@@89 $generated@@602)) $generated@@602) ($generated@@166 ($generated@@374 $generated@@89 $generated@@602) ($generated@@145 $generated@@601))))
 :pattern ( ($generated@@149 $generated@@602 ($generated@@145 $generated@@601)))
)))
(assert (= ($generated@@82 $generated@@163) $generated@@62))
(assert (= ($generated@@324 $generated@@163) $generated@@67))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@604) $generated@@71)) (= (type $generated@@605) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@603 ($generated@@183 $generated@@604) $generated@@605) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@603 $generated@@606)))) ($generated@@281 $generated@@606 $generated@@604 $generated@@605))
 :pattern ( ($generated@@93 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@86 $generated@@603 ($generated@@183 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@170) (= (type $generated@@608) $generated@@71)) (= (type $generated@@609) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@609) (and ($generated@@168 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@71) ($generated@@86 $generated@@607 ($generated@@169 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@86 $generated@@607 ($generated@@169 $generated@@608 $generated@@610) $generated@@609))
))))) ($generated@@281 ($generated@@177 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@281 ($generated@@177 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@170) (= (type $generated@@612) $generated@@71)) (= (type $generated@@613) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@613) (and ($generated@@168 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@71) ($generated@@86 $generated@@611 ($generated@@169 $generated@@614 $generated@@612) $generated@@613))
 :pattern ( ($generated@@86 $generated@@611 ($generated@@169 $generated@@614 $generated@@612) $generated@@613))
))))) ($generated@@281 ($generated@@178 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@281 ($generated@@178 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@150) (= (type $generated@@616) $generated@@150)) (= ($generated@@244 ($generated@@254 $generated@@615) ($generated@@254 $generated@@616)) ($generated@@254 ($generated@@244 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@244 ($generated@@254 $generated@@615) ($generated@@254 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@305 ($generated@@8 ($generated@@276 $generated@@617))) ($generated@@254 ($generated@@305 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@305 ($generated@@8 ($generated@@276 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@305 ($generated@@254 $generated@@618)) ($generated@@254 ($generated@@305 $generated@@618)))
 :pattern ( ($generated@@305 ($generated@@254 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@296 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@295 $generated@@620)) (= ($generated@@294 $generated@@619) 0)) (= $generated@@619 ($generated@@293 $generated@@620))))
 :pattern ( ($generated@@294 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@88 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@318 ($generated@@94 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@318 $generated@@621) ($generated ($generated@@93 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@318 ($generated@@94 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@626) $generated@@2)) ($generated@@86 $generated@@626 $generated@@46 $generated@@625))
 :pattern ( ($generated@@86 $generated@@626 $generated@@46 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@628) $generated@@3)) ($generated@@86 $generated@@628 $generated@@47 $generated@@627))
 :pattern ( ($generated@@86 $generated@@628 $generated@@47 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@630) $generated@@4)) ($generated@@86 $generated@@630 $generated@@44 $generated@@629))
 :pattern ( ($generated@@86 $generated@@630 $generated@@44 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@632) $generated@@489)) ($generated@@86 $generated@@632 $generated@@45 $generated@@631))
 :pattern ( ($generated@@86 $generated@@632 $generated@@45 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@634) $generated@@150)) ($generated@@86 $generated@@634 $generated@@48 $generated@@633))
 :pattern ( ($generated@@86 $generated@@634 $generated@@48 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@295 $generated@@150)) (= (type $generated@@636) $generated@@71)) (= ($generated@@166 $generated@@635 ($generated@@531 $generated@@636)) (forall (($generated@@637 Int) ) (!  (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@294 $generated@@635))) ($generated@@149 ($generated@@532 $generated@@635 $generated@@637) $generated@@636))
 :pattern ( ($generated@@532 $generated@@635 $generated@@637))
))))
 :pattern ( ($generated@@166 $generated@@635 ($generated@@531 $generated@@636)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 Int) ) (!  (=> (= (type $generated@@639) ($generated@@295 $generated@@150)) (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@294 $generated@@639))) (< ($generated@@573 ($generated@@374 $generated@@170 ($generated@@532 $generated@@639 $generated@@640))) ($generated@@638 $generated@@639))))
 :pattern ( ($generated@@573 ($generated@@374 $generated@@170 ($generated@@532 $generated@@639 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@329 $generated@@150 $generated@@150)) (= (type $generated@@642) $generated@@71)) (= (type $generated@@643) $generated@@71)) ($generated@@166 $generated@@641 ($generated@@441 $generated@@642 $generated@@643))) (and (and ($generated@@166 ($generated@@327 $generated@@641) ($generated@@266 $generated@@642)) ($generated@@166 ($generated@@384 $generated@@641) ($generated@@266 $generated@@643))) ($generated@@166 ($generated@@415 $generated@@641) ($generated@@266 ($generated@@169 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@166 $generated@@641 ($generated@@441 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@347 $generated@@150 $generated@@150)) (= (type $generated@@645) $generated@@71)) (= (type $generated@@646) $generated@@71)) ($generated@@166 $generated@@644 ($generated@@449 $generated@@645 $generated@@646))) (and (and ($generated@@166 ($generated@@345 $generated@@644) ($generated@@271 $generated@@645)) ($generated@@166 ($generated@@395 $generated@@644) ($generated@@271 $generated@@646))) ($generated@@166 ($generated@@423 $generated@@644) ($generated@@271 ($generated@@169 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@166 $generated@@644 ($generated@@449 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@2) ($generated@@166 $generated@@647 $generated@@46))
 :pattern ( ($generated@@166 $generated@@647 $generated@@46))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@3) ($generated@@166 $generated@@648 $generated@@47))
 :pattern ( ($generated@@166 $generated@@648 $generated@@47))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@4) ($generated@@166 $generated@@649 $generated@@44))
 :pattern ( ($generated@@166 $generated@@649 $generated@@44))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@489) ($generated@@166 $generated@@650 $generated@@45))
 :pattern ( ($generated@@166 $generated@@650 $generated@@45))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@150) ($generated@@166 $generated@@651 $generated@@48))
 :pattern ( ($generated@@166 $generated@@651 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Bool)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 (T@U) Bool)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(assert  (and (and (and (= (type $generated@@652) $generated@@89) (= (type $generated@@653) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@655) ($generated@@190 $generated@@89 $generated@@4))) (= (type $generated@@657) $generated@@89)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@659 true))
(let (($generated@@660  (=> (and (not (= $generated@@652 $generated@@147)) ($generated@@86 $generated@@652 ($generated@@145 $generated@@163) $generated@@653)) (=> (and (and ($generated@@253 $generated@@163 $generated@@652) ($generated@@253 $generated@@163 $generated@@652)) (and (= $generated@@654 ($generated@@252 $generated@@163 $generated@@652)) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@652 $generated@@147))))))
(let (($generated@@661  (=> (= $generated@@655 ($generated@@189 $generated@@147 $generated@@653 $generated@@60 false)) (=> (and ($generated@@166 $generated@@652 ($generated@@145 $generated@@163)) ($generated@@86 $generated@@652 ($generated@@145 $generated@@163) $generated@@653)) (and (=> (= (ControlFlow 0 4) 2) $generated@@660) (=> (= (ControlFlow 0 4) 3) $generated@@659))))))
(let (($generated@@662  (=> (and ($generated@@146 $generated@@653) ($generated@@656 $generated@@653)) (=> (and (and (and ($generated@@166 $generated@@657 ($generated@@145 $generated@@163)) ($generated@@86 $generated@@657 ($generated@@145 $generated@@163) $generated@@653)) true) (and (and (<= ($generated@@276 0) $generated@@658) true) (and (= 1 $generated@@251) (= (ControlFlow 0 5) 4)))) $generated@@661))))
$generated@@662)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@148 (Int T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) Bool)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U T@U) Bool)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (Int) Int)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) Bool)
(declare-fun $generated@@317 (T@U) Bool)
(declare-fun $generated@@327 () Int)
(declare-fun $generated@@328 (T@U T@U) Int)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 () T@T)
(declare-fun $generated@@331 (T@U) Bool)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@T) T@U)
(declare-fun $generated@@345 (T@U) Int)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@359 (T@U) Int)
(declare-fun $generated@@360 (T@T) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@472 (T@U T@U) T@U)
(declare-fun $generated@@480 (T@U T@U) T@U)
(declare-fun $generated@@493 (T@T) T@U)
(declare-fun $generated@@517 () T@T)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@560 () T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@566 (T@U Int) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@698 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@77)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (= (type $generated@@141) $generated@@73))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@142 $generated@@141 $generated@@143))
 :pattern ( ($generated@@83 $generated@@142 $generated@@141 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@73) (= (type $generated@@145) $generated@@86)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@86) (= (type $generated@@147) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@146 $generated@@144 $generated@@147))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@149) 14) (= ($generated@@1 $generated@@150) 15)) (forall (($generated@@152 Int) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@148 $generated@@152 $generated@@153 $generated@@154)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@152 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@151 $generated@@155)) $generated@@77)
 :pattern ( ($generated@@151 $generated@@155))
))))
(assert (forall (($generated@@156 Int) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@149) (= (type $generated@@158) $generated@@150)) (= ($generated@@151 ($generated@@148 $generated@@156 $generated@@157 $generated@@158)) $generated@@68))
 :pattern ( ($generated@@148 $generated@@156 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 Int) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@150)) (= ($generated@@159 ($generated@@148 $generated@@160 $generated@@161 $generated@@162)) $generated@@160))
 :pattern ( ($generated@@148 $generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@149)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 Int) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@149) (= (type $generated@@167) $generated@@150)) (= ($generated@@163 ($generated@@148 $generated@@165 $generated@@166 $generated@@167)) $generated@@166))
 :pattern ( ($generated@@148 $generated@@165 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@168 $generated@@169)) $generated@@150)
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 Int) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@149) (= (type $generated@@172) $generated@@150)) (= ($generated@@168 ($generated@@148 $generated@@170 $generated@@171 $generated@@172)) $generated@@172))
 :pattern ( ($generated@@148 $generated@@170 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@173 $generated@@174 ($generated@@84 0)))
 :pattern ( ($generated@@173 $generated@@174 ($generated@@84 0)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@177 $generated@@178)) $generated@@73)
 :pattern ( ($generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@73) (= (type $generated@@180) $generated@@73)) (= (type $generated@@181) $generated@@150)) ($generated@@173 $generated@@181 ($generated@@176 $generated@@179 $generated@@180))) ($generated@@175 $generated@@181))
 :pattern ( ($generated@@175 $generated@@181) ($generated@@173 $generated@@181 ($generated@@176 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@149)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@149)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@150) (= (type $generated@@188) $generated@@150)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (= (type $generated@@189) $generated@@150))
(assert (= ($generated@@151 $generated@@189) $generated@@66))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@73)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@85 $generated@@149 $generated@@2)) (= (type $generated@@194) $generated@@73)) ($generated@@173 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@173 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 16)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@86 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@76 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@86) (= (type $generated@@245) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@246) ($generated@@75 $generated@@4))) (= (type $generated@@248) $generated@@86)) (= (type $generated@@249) ($generated@@75 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ) (! (= (type ($generated@@251 $generated@@252 $generated@@253 $generated@@254 $generated@@255)) ($generated@@197 $generated@@86 $generated@@4))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 Bool) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@76 (type $generated@@261))))
 (=> (and (and (and (and (= (type $generated@@256) $generated@@86) (= (type $generated@@257) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@258) ($generated@@75 $generated@@4))) (= (type $generated@@260) $generated@@86)) (= (type $generated@@261) ($generated@@75 $generated@@262))) (= ($generated@@0 ($generated@@195 ($generated@@251 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))  (=> (and (not (= $generated@@260 $generated@@256)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@257 $generated@@260) $generated@@258))) $generated@@259))))
 :pattern ( ($generated@@195 ($generated@@251 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))
)))
(assert (= (type $generated@@263) $generated@@73))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@86) (= (type $generated@@265) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@264 $generated@@263 $generated@@265) ($generated@@83 $generated@@264 $generated@@144 $generated@@265)))
 :pattern ( ($generated@@83 $generated@@264 $generated@@263 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@266 $generated@@268)) $generated@@73)
 :pattern ( ($generated@@266 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@269) $generated@@73) (= (type $generated@@270) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@267 $generated@@270)) ($generated@@83 $generated@@189 ($generated@@266 $generated@@269) $generated@@270))
 :pattern ( ($generated@@83 $generated@@189 ($generated@@266 $generated@@269) $generated@@270))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@271 $generated@@273 $generated@@274)) $generated@@150)
 :pattern ( ($generated@@271 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (= (type $generated@@275) $generated@@73) (= (type $generated@@276) $generated@@73)) (= (type $generated@@277) $generated@@149)) (= (type $generated@@278) $generated@@149)) (= ($generated@@173 ($generated@@271 $generated@@277 $generated@@278) ($generated@@176 $generated@@275 $generated@@276))  (and ($generated@@272 $generated@@277 $generated@@275) ($generated@@272 $generated@@278 $generated@@276))))
 :pattern ( ($generated@@173 ($generated@@271 $generated@@277 $generated@@278) ($generated@@176 $generated@@275 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@73) ($generated@@173 $generated@@189 ($generated@@266 $generated@@279)))
 :pattern ( ($generated@@173 $generated@@189 ($generated@@266 $generated@@279)))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 Int) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@281) $generated@@73) (= (type $generated@@283) $generated@@149)) (= (type $generated@@284) $generated@@150)) (= (type $generated@@285) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@267 $generated@@285)) (= ($generated@@83 ($generated@@148 $generated@@282 $generated@@283 $generated@@284) ($generated@@266 $generated@@281) $generated@@285)  (and (and ($generated@@83 ($generated@@8 $generated@@282) $generated@@141 $generated@@285) ($generated@@280 $generated@@283 $generated@@281 $generated@@285)) ($generated@@83 $generated@@284 ($generated@@266 $generated@@281) $generated@@285))))
 :pattern ( ($generated@@83 ($generated@@148 $generated@@282 $generated@@283 $generated@@284) ($generated@@266 $generated@@281) $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@150) (= (type $generated@@287) $generated@@150)) (= ($generated@@182 $generated@@286 $generated@@287) (= $generated@@286 $generated@@287)))
 :pattern ( ($generated@@182 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@150) (= (type $generated@@290) $generated@@150)) (= ($generated@@288 $generated@@289 $generated@@290) (= $generated@@289 $generated@@290)))
 :pattern ( ($generated@@288 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@73)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) ($generated@@85 $generated@@149 $generated@@4)) (= (type $generated@@294) $generated@@73)) (= ($generated@@173 $generated@@293 ($generated@@291 $generated@@294)) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@149) ($generated@@0 ($generated@@90 $generated@@293 $generated@@295))) ($generated@@272 $generated@@295 $generated@@294))
 :pattern ( ($generated@@90 $generated@@293 $generated@@295))
))))
 :pattern ( ($generated@@173 $generated@@293 ($generated@@291 $generated@@294)))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@73)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@85 $generated@@149 $generated@@4)) (= (type $generated@@299) $generated@@73)) (= ($generated@@173 $generated@@298 ($generated@@296 $generated@@299)) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@149) ($generated@@0 ($generated@@90 $generated@@298 $generated@@300))) ($generated@@272 $generated@@300 $generated@@299))
 :pattern ( ($generated@@90 $generated@@298 $generated@@300))
))))
 :pattern ( ($generated@@173 $generated@@298 ($generated@@296 $generated@@299)))
)))
(assert (forall (($generated@@302 Int) ) (! (= ($generated@@301 $generated@@302) $generated@@302)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 (type $generated@@304)))
(= (type ($generated@@303 $generated@@304)) $generated@@305))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= ($generated@@303 $generated@@306) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (= (type $generated@@308) $generated@@150) (= (type $generated@@309) $generated@@150)) (and ($generated@@307 $generated@@308) ($generated@@307 $generated@@309))) (= ($generated@@288 $generated@@308 $generated@@309) true))
 :pattern ( ($generated@@288 $generated@@308 $generated@@309) ($generated@@307 $generated@@308))
 :pattern ( ($generated@@288 $generated@@308 $generated@@309) ($generated@@307 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) $generated@@73) (= (type $generated@@311) $generated@@73)) (= (type $generated@@312) $generated@@149)) (= (type $generated@@313) $generated@@149)) (= (type $generated@@314) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@267 $generated@@314)) (= ($generated@@83 ($generated@@271 $generated@@312 $generated@@313) ($generated@@176 $generated@@310 $generated@@311) $generated@@314)  (and ($generated@@280 $generated@@312 $generated@@310 $generated@@314) ($generated@@280 $generated@@313 $generated@@311 $generated@@314))))
 :pattern ( ($generated@@83 ($generated@@271 $generated@@312 $generated@@313) ($generated@@176 $generated@@310 $generated@@311) $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@150) (= ($generated@@175 $generated@@315) (= ($generated@@151 $generated@@315) $generated@@64)))
 :pattern ( ($generated@@175 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@150) (= ($generated@@307 $generated@@316) (= ($generated@@151 $generated@@316) $generated@@66)))
 :pattern ( ($generated@@307 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@150) (= ($generated@@317 $generated@@318) (= ($generated@@151 $generated@@318) $generated@@68)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@150) ($generated@@317 $generated@@319)) (exists (($generated@@320 Int) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (and (and (= (type $generated@@321) $generated@@149) (= (type $generated@@322) $generated@@150)) (= $generated@@319 ($generated@@148 $generated@@320 $generated@@321 $generated@@322)))
 :no-pattern (type $generated@@321)
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))
 :pattern ( ($generated@@317 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 Int) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@323) $generated@@73) (= (type $generated@@325) $generated@@149)) (= (type $generated@@326) $generated@@150)) (= ($generated@@173 ($generated@@148 $generated@@324 $generated@@325 $generated@@326) ($generated@@266 $generated@@323))  (and (and ($generated@@173 ($generated@@8 $generated@@324) $generated@@141) ($generated@@272 $generated@@325 $generated@@323)) ($generated@@173 $generated@@326 ($generated@@266 $generated@@323)))))
 :pattern ( ($generated@@173 ($generated@@148 $generated@@324 $generated@@325 $generated@@326) ($generated@@266 $generated@@323)))
)))
(assert  (and (and (= ($generated@@1 $generated@@330) 17) (forall (($generated@@333 T@U) ) (! (= (type ($generated@@329 $generated@@333)) $generated@@330)
 :pattern ( ($generated@@329 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@332 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@332 $generated@@334 $generated@@335))
))))
(assert  (=> (<= 2 $generated@@327) (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@336) $generated@@330) (= (type $generated@@337) $generated@@150)) (or ($generated@@331 ($generated@@303 $generated@@337)) (and (not (= 2 $generated@@327)) ($generated@@173 $generated@@337 ($generated@@266 $generated@@263))))) (and (=> (not ($generated@@0 ($generated@@303 ($generated@@11 ($generated@@307 ($generated@@303 $generated@@337)))))) (let (($generated@@338 ($generated@@303 ($generated@@168 ($generated@@303 $generated@@337)))))
($generated@@331 $generated@@338))) (= ($generated@@328 ($generated@@329 $generated@@336) ($generated@@303 $generated@@337)) (ite ($generated@@307 ($generated@@303 $generated@@337)) 0 (let (($generated@@339 ($generated@@303 ($generated@@168 ($generated@@303 $generated@@337)))))
(let (($generated@@340 ($generated@@301 ($generated@@159 ($generated@@303 $generated@@337)))))
($generated@@301 (+ $generated@@340 ($generated@@328 ($generated@@329 $generated@@336) $generated@@339)))))))))
 :weight 3
 :pattern ( ($generated@@328 ($generated@@329 $generated@@336) ($generated@@303 $generated@@337)))
))))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@150) ($generated@@175 $generated@@341)) (exists (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (and (and (= (type $generated@@342) $generated@@149) (= (type $generated@@343) $generated@@149)) (= $generated@@341 ($generated@@271 $generated@@342 $generated@@343)))
 :no-pattern (type $generated@@342)
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
)))
 :pattern ( ($generated@@175 $generated@@341))
)))
(assert  (and (and (forall (($generated@@348 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@348)) 18)) (forall (($generated@@349 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@346 $generated@@349))
))) (forall (($generated@@350 T@T) ) (! (= (type ($generated@@344 $generated@@350)) ($generated@@346 $generated@@350))
 :pattern ( ($generated@@344 $generated@@350))
))))
(assert (forall (($generated@@351 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@351)) 0)
 :pattern ( ($generated@@344 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@150) ($generated@@307 $generated@@352)) (= $generated@@352 $generated@@189))
 :pattern ( ($generated@@307 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@2) (= ($generated@@173 $generated@@353 $generated@@141) (<= ($generated@@301 0) ($generated $generated@@353))))
 :pattern ( ($generated@@173 $generated@@353 $generated@@141))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@149)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@73) (= (type $generated@@358) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@280 ($generated@@354 $generated@@356) $generated@@357 $generated@@358) ($generated@@83 $generated@@356 $generated@@357 $generated@@358)))
 :pattern ( ($generated@@280 ($generated@@354 $generated@@356) $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@361 T@T) ) (! (= (type ($generated@@360 $generated@@361)) ($generated@@85 $generated@@361 $generated@@2))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@88 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@85 $generated@@363 $generated@@2)) (and (= (= ($generated@@359 $generated@@362) 0) (= $generated@@362 ($generated@@360 $generated@@363))) (=> (not (= ($generated@@359 $generated@@362) 0)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (< 0 ($generated ($generated@@90 $generated@@362 $generated@@364))))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ) (! (= (type ($generated@@365 $generated@@366)) $generated@@78)
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@73) (and (= ($generated@@81 ($generated@@266 $generated@@367)) $generated@@67) (= ($generated@@365 ($generated@@266 $generated@@367)) $generated@@72)))
 :pattern ( ($generated@@266 $generated@@367))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 19)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@85 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@90 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@90 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 20)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@85 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@90 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@90 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@88 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@85 $generated@@405 $generated@@2)) (= ($generated@@191 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (and (<= 0 ($generated ($generated@@90 $generated@@404 $generated@@406))) (<= ($generated ($generated@@90 $generated@@404 $generated@@406)) ($generated@@359 $generated@@404))))
 :pattern ( ($generated@@90 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@191 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@149) ($generated@@272 $generated@@407 $generated@@141)) (and (= ($generated@@354 ($generated@@332 $generated@@2 $generated@@407)) $generated@@407) ($generated@@173 ($generated@@332 $generated@@2 $generated@@407) $generated@@141)))
 :pattern ( ($generated@@272 $generated@@407 $generated@@141))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@149) ($generated@@272 $generated@@408 $generated@@144)) (and (= ($generated@@354 ($generated@@332 $generated@@86 $generated@@408)) $generated@@408) ($generated@@173 ($generated@@332 $generated@@86 $generated@@408) $generated@@144)))
 :pattern ( ($generated@@272 $generated@@408 $generated@@144))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@149) ($generated@@272 $generated@@409 $generated@@263)) (and (= ($generated@@354 ($generated@@332 $generated@@86 $generated@@409)) $generated@@409) ($generated@@173 ($generated@@332 $generated@@86 $generated@@409) $generated@@263)))
 :pattern ( ($generated@@272 $generated@@409 $generated@@263))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (= (type $generated@@410) $generated@@86) (= ($generated@@173 $generated@@410 $generated@@263)  (and ($generated@@173 $generated@@410 $generated@@144) (not (= $generated@@410 $generated@@145)))))
 :pattern ( ($generated@@173 $generated@@410 $generated@@263))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@372 (type $generated@@411))))
(let (($generated@@413 ($generated@@371 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@370 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@369 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) ($generated@@0 ($generated@@90 ($generated@@368 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@368 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@372 (type $generated@@416))))
(= (type ($generated@@415 $generated@@416)) ($generated@@85 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@372 (type $generated@@418))))
(let (($generated@@420 ($generated@@371 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@370 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@369 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@419) ($generated@@0 ($generated@@90 ($generated@@415 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@415 $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@390 (type $generated@@422))))
(let (($generated@@424 ($generated@@389 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@388 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@387 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) ($generated@@0 ($generated@@90 ($generated@@386 $generated@@422) $generated@@425)))
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@386 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@390 (type $generated@@427))))
(= (type ($generated@@426 $generated@@427)) ($generated@@85 $generated@@428 $generated@@4)))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@390 (type $generated@@429))))
(let (($generated@@431 ($generated@@389 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@388 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@387 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@430) ($generated@@0 ($generated@@90 ($generated@@426 $generated@@429) $generated@@432)))
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@426 $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@85 $generated@@149 $generated@@2)) (= (type $generated@@434) $generated@@73)) (= ($generated@@173 $generated@@433 ($generated@@190 $generated@@434)) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@149) (< 0 ($generated ($generated@@90 $generated@@433 $generated@@435)))) ($generated@@272 $generated@@435 $generated@@434))
 :pattern ( ($generated@@90 $generated@@433 $generated@@435))
))))
 :pattern ( ($generated@@173 $generated@@433 ($generated@@190 $generated@@434)))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@85 $generated@@149 $generated@@4)) (= (type $generated@@437) $generated@@73)) (= (type $generated@@438) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@436 ($generated@@291 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@149) ($generated@@0 ($generated@@90 $generated@@436 $generated@@439))) ($generated@@280 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@90 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@83 $generated@@436 ($generated@@291 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (= (type $generated@@440) ($generated@@85 $generated@@149 $generated@@4)) (= (type $generated@@441) $generated@@73)) (= (type $generated@@442) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@440 ($generated@@296 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@149) ($generated@@0 ($generated@@90 $generated@@440 $generated@@443))) ($generated@@280 $generated@@443 $generated@@441 $generated@@442))
 :pattern ( ($generated@@90 $generated@@440 $generated@@443))
))))
 :pattern ( ($generated@@83 $generated@@440 ($generated@@296 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 (type $generated@@444)))
(= ($generated ($generated@@90 ($generated@@360 $generated@@445) $generated@@444)) 0))
 :pattern ( (let (($generated@@445 (type $generated@@444)))
($generated@@90 ($generated@@360 $generated@@445) $generated@@444)))
)))
(assert  (and (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) ($generated@@85 $generated@@149 $generated@@4))
 :pattern ( ($generated@@446 $generated@@448))
)) (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@372 (type $generated@@449))))
(let (($generated@@451 ($generated@@371 (type $generated@@449))))
(= (type ($generated@@447 $generated@@449)) ($generated@@85 $generated@@451 $generated@@450))))
 :pattern ( ($generated@@447 $generated@@449))
))))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) ($generated@@370 $generated@@149 $generated@@149)) (= (type $generated@@453) $generated@@149)) (= ($generated@@0 ($generated@@90 ($generated@@446 $generated@@452) $generated@@453))  (and ($generated@@0 ($generated@@90 ($generated@@368 $generated@@452) ($generated@@183 ($generated@@332 $generated@@150 $generated@@453)))) (= ($generated@@90 ($generated@@447 $generated@@452) ($generated@@183 ($generated@@332 $generated@@150 $generated@@453))) ($generated@@184 ($generated@@332 $generated@@150 $generated@@453))))))
 :pattern ( ($generated@@90 ($generated@@446 $generated@@452) $generated@@453))
)))
(assert  (and (forall (($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@456)) ($generated@@85 $generated@@149 $generated@@4))
 :pattern ( ($generated@@454 $generated@@456))
)) (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@390 (type $generated@@457))))
(let (($generated@@459 ($generated@@389 (type $generated@@457))))
(= (type ($generated@@455 $generated@@457)) ($generated@@85 $generated@@459 $generated@@458))))
 :pattern ( ($generated@@455 $generated@@457))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) ($generated@@388 $generated@@149 $generated@@149)) (= (type $generated@@461) $generated@@149)) (= ($generated@@0 ($generated@@90 ($generated@@454 $generated@@460) $generated@@461))  (and ($generated@@0 ($generated@@90 ($generated@@386 $generated@@460) ($generated@@183 ($generated@@332 $generated@@150 $generated@@461)))) (= ($generated@@90 ($generated@@455 $generated@@460) ($generated@@183 ($generated@@332 $generated@@150 $generated@@461))) ($generated@@184 ($generated@@332 $generated@@150 $generated@@461))))))
 :pattern ( ($generated@@90 ($generated@@454 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(let (($generated@@465 ($generated@@371 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@370 $generated@@465 $generated@@464)) (= ($generated@@0 ($generated@@90 ($generated@@415 $generated@@462) $generated@@463)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@465) (and ($generated@@0 ($generated@@90 ($generated@@368 $generated@@462) $generated@@466)) (= $generated@@463 ($generated@@90 ($generated@@447 $generated@@462) $generated@@466))))
 :pattern ( ($generated@@90 ($generated@@368 $generated@@462) $generated@@466))
 :pattern ( ($generated@@90 ($generated@@447 $generated@@462) $generated@@466))
))))))
 :pattern ( ($generated@@90 ($generated@@415 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (let (($generated@@469 (type $generated@@468)))
(let (($generated@@470 ($generated@@389 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@388 $generated@@470 $generated@@469)) (= ($generated@@0 ($generated@@90 ($generated@@426 $generated@@467) $generated@@468)) (exists (($generated@@471 T@U) ) (!  (and (= (type $generated@@471) $generated@@470) (and ($generated@@0 ($generated@@90 ($generated@@386 $generated@@467) $generated@@471)) (= $generated@@468 ($generated@@90 ($generated@@455 $generated@@467) $generated@@471))))
 :pattern ( ($generated@@90 ($generated@@386 $generated@@467) $generated@@471))
 :pattern ( ($generated@@90 ($generated@@455 $generated@@467) $generated@@471))
))))))
 :pattern ( ($generated@@90 ($generated@@426 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@473 $generated@@474)) $generated@@73)
 :pattern ( ($generated@@472 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) ($generated@@370 $generated@@149 $generated@@149)) (= (type $generated@@476) $generated@@73)) (= (type $generated@@477) $generated@@73)) (= (type $generated@@478) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@149) ($generated@@0 ($generated@@90 ($generated@@368 $generated@@475) $generated@@479))) (and ($generated@@280 ($generated@@90 ($generated@@447 $generated@@475) $generated@@479) $generated@@477 $generated@@478) ($generated@@280 $generated@@479 $generated@@476 $generated@@478)))
 :pattern ( ($generated@@90 ($generated@@447 $generated@@475) $generated@@479))
 :pattern ( ($generated@@90 ($generated@@368 $generated@@475) $generated@@479))
))))
 :pattern ( ($generated@@83 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@481 $generated@@482)) $generated@@73)
 :pattern ( ($generated@@480 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (and (= (type $generated@@483) ($generated@@388 $generated@@149 $generated@@149)) (= (type $generated@@484) $generated@@73)) (= (type $generated@@485) $generated@@73)) (= (type $generated@@486) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@483 ($generated@@480 $generated@@484 $generated@@485) $generated@@486) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@149) ($generated@@0 ($generated@@90 ($generated@@386 $generated@@483) $generated@@487))) (and ($generated@@280 ($generated@@90 ($generated@@455 $generated@@483) $generated@@487) $generated@@485 $generated@@486) ($generated@@280 $generated@@487 $generated@@484 $generated@@486)))
 :pattern ( ($generated@@90 ($generated@@455 $generated@@483) $generated@@487))
 :pattern ( ($generated@@90 ($generated@@386 $generated@@483) $generated@@487))
))))
 :pattern ( ($generated@@83 $generated@@483 ($generated@@480 $generated@@484 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@488) $generated@@73) (= (type $generated@@489) $generated@@150)) ($generated@@173 $generated@@489 ($generated@@266 $generated@@488))) (or ($generated@@307 $generated@@489) ($generated@@317 $generated@@489)))
 :pattern ( ($generated@@317 $generated@@489) ($generated@@173 $generated@@489 ($generated@@266 $generated@@488)))
 :pattern ( ($generated@@307 $generated@@489) ($generated@@173 $generated@@489 ($generated@@266 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@490) $generated@@150) (= (type $generated@@491) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@267 $generated@@491) (and ($generated@@317 $generated@@490) (exists (($generated@@492 T@U) ) (!  (and (= (type $generated@@492) $generated@@73) ($generated@@83 $generated@@490 ($generated@@266 $generated@@492) $generated@@491))
 :pattern ( ($generated@@83 $generated@@490 ($generated@@266 $generated@@492) $generated@@491))
))))) ($generated@@83 ($generated@@8 ($generated@@159 $generated@@490)) $generated@@141 $generated@@491))
 :pattern ( ($generated@@83 ($generated@@8 ($generated@@159 $generated@@490)) $generated@@141 $generated@@491))
)))
(assert (forall (($generated@@494 T@T) ) (! (= (type ($generated@@493 $generated@@494)) ($generated@@85 $generated@@494 $generated@@4))
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@390 (type $generated@@495))))
(let (($generated@@497 ($generated@@389 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@388 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@387 $generated@@497 $generated@@496)) (= ($generated@@386 $generated@@495) ($generated@@493 $generated@@497))))))
 :pattern ( ($generated@@386 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@390 (type $generated@@498))))
(let (($generated@@500 ($generated@@389 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@388 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@387 $generated@@500 $generated@@499)) (= ($generated@@426 $generated@@498) ($generated@@493 $generated@@499))))))
 :pattern ( ($generated@@426 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@390 (type $generated@@501))))
(let (($generated@@503 ($generated@@389 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@388 $generated@@503 $generated@@502)) (= (= $generated@@501 ($generated@@387 $generated@@503 $generated@@502)) (= ($generated@@454 $generated@@501) ($generated@@493 $generated@@149))))))
 :pattern ( ($generated@@454 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@372 (type $generated@@504))))
(let (($generated@@506 ($generated@@371 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@370 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@369 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@149) (= (type $generated@@508) $generated@@149)) ($generated@@0 ($generated@@90 ($generated@@446 $generated@@504) ($generated@@354 ($generated@@271 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@446 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@390 (type $generated@@509))))
(let (($generated@@511 ($generated@@389 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@388 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@387 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@149) (= (type $generated@@513) $generated@@149)) ($generated@@0 ($generated@@90 ($generated@@454 $generated@@509) ($generated@@354 ($generated@@271 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@454 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@149) ($generated@@272 $generated@@514 $generated@@46)) (and (= ($generated@@354 ($generated@@332 $generated@@2 $generated@@514)) $generated@@514) ($generated@@173 ($generated@@332 $generated@@2 $generated@@514) $generated@@46)))
 :pattern ( ($generated@@272 $generated@@514 $generated@@46))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@149) ($generated@@272 $generated@@515 $generated@@47)) (and (= ($generated@@354 ($generated@@332 $generated@@3 $generated@@515)) $generated@@515) ($generated@@173 ($generated@@332 $generated@@3 $generated@@515) $generated@@47)))
 :pattern ( ($generated@@272 $generated@@515 $generated@@47))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@149) ($generated@@272 $generated@@516 $generated@@44)) (and (= ($generated@@354 ($generated@@332 $generated@@4 $generated@@516)) $generated@@516) ($generated@@173 ($generated@@332 $generated@@4 $generated@@516) $generated@@44)))
 :pattern ( ($generated@@272 $generated@@516 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@517) 21))
(assert (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@149) ($generated@@272 $generated@@518 $generated@@45)) (and (= ($generated@@354 ($generated@@332 $generated@@517 $generated@@518)) $generated@@518) ($generated@@173 ($generated@@332 $generated@@517 $generated@@518) $generated@@45)))
 :pattern ( ($generated@@272 $generated@@518 $generated@@45))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@73) (= ($generated@@272 ($generated@@354 $generated@@519) $generated@@520) ($generated@@173 $generated@@519 $generated@@520)))
 :pattern ( ($generated@@272 ($generated@@354 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@88 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@85 $generated@@522 $generated@@2)) (<= 0 ($generated@@359 $generated@@521))))
 :pattern ( ($generated@@359 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@347 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@346 $generated@@524)) (<= 0 ($generated@@345 $generated@@523))))
 :pattern ( ($generated@@345 $generated@@523))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@73)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@73) (= (type $generated@@528) $generated@@73)) (= ($generated@@525 ($generated@@472 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@472 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@73)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@73) (= (type $generated@@532) $generated@@73)) (= ($generated@@529 ($generated@@472 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@472 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@73) (= (type $generated@@534) $generated@@73)) (= ($generated@@81 ($generated@@472 $generated@@533 $generated@@534)) $generated@@58))
 :pattern ( ($generated@@472 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@73)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@73) (= (type $generated@@538) $generated@@73)) (= ($generated@@535 ($generated@@480 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@480 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@73)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@73) (= (type $generated@@542) $generated@@73)) (= ($generated@@539 ($generated@@480 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@480 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@73) (= (type $generated@@544) $generated@@73)) (= ($generated@@81 ($generated@@480 $generated@@543 $generated@@544)) $generated@@59))
 :pattern ( ($generated@@480 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@149)) (= ($generated@@151 ($generated@@271 $generated@@545 $generated@@546)) $generated@@64))
 :pattern ( ($generated@@271 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@73)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@73) (= (type $generated@@550) $generated@@73)) (= ($generated@@547 ($generated@@176 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@176 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@73)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@73) (= (type $generated@@554) $generated@@73)) (= ($generated@@551 ($generated@@176 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@176 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@149) (= (type $generated@@556) $generated@@149)) (= ($generated@@183 ($generated@@271 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@271 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@149) (= (type $generated@@558) $generated@@149)) (= ($generated@@184 ($generated@@271 $generated@@557 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@271 $generated@@557 $generated@@558))
)))
(assert  (and (forall (($generated@@561 T@U) ) (! (= (type ($generated@@559 $generated@@561)) $generated@@330)
 :pattern ( ($generated@@559 $generated@@561))
)) (= (type $generated@@560) $generated@@330)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@330) (= (type $generated@@563) $generated@@150)) (= ($generated@@328 $generated@@562 $generated@@563) ($generated@@328 $generated@@560 $generated@@563)))
 :pattern ( ($generated@@328 ($generated@@559 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@86) ($generated@@173 $generated@@564 $generated@@144))
 :pattern ( ($generated@@173 $generated@@564 $generated@@144))
)))
(assert  (and (forall (($generated@@567 T@U) ) (! (= (type ($generated@@565 $generated@@567)) $generated@@73)
 :pattern ( ($generated@@565 $generated@@567))
)) (forall (($generated@@568 T@U) ($generated@@569 Int) ) (! (let (($generated@@570 ($generated@@347 (type $generated@@568))))
(= (type ($generated@@566 $generated@@568 $generated@@569)) $generated@@570))
 :pattern ( ($generated@@566 $generated@@568 $generated@@569))
))))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@346 $generated@@149)) (= (type $generated@@572) $generated@@73)) (= (type $generated@@573) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@571 ($generated@@565 $generated@@572) $generated@@573) (forall (($generated@@574 Int) ) (!  (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@345 $generated@@571))) ($generated@@280 ($generated@@566 $generated@@571 $generated@@574) $generated@@572 $generated@@573))
 :pattern ( ($generated@@566 $generated@@571 $generated@@574))
))))
 :pattern ( ($generated@@83 $generated@@571 ($generated@@565 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@575 Int) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@149) (= (type $generated@@577) $generated@@150)) (= ($generated@@148 ($generated@@301 $generated@@575) ($generated@@303 $generated@@576) ($generated@@303 $generated@@577)) ($generated@@303 ($generated@@148 $generated@@575 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@148 ($generated@@301 $generated@@575) ($generated@@303 $generated@@576) ($generated@@303 $generated@@577)))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@578 ($generated@@84 $generated@@579)) $generated@@579)
 :pattern ( ($generated@@84 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@73)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@73) (= ($generated@@580 ($generated@@291 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@291 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@73) (= ($generated@@81 ($generated@@291 $generated@@583)) $generated@@54))
 :pattern ( ($generated@@291 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@73)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@73) (= ($generated@@584 ($generated@@296 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@296 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@73) (= ($generated@@81 ($generated@@296 $generated@@587)) $generated@@55))
 :pattern ( ($generated@@296 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@73)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@73) (= ($generated@@588 ($generated@@190 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@190 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@73) (= ($generated@@81 ($generated@@190 $generated@@591)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@73)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@73) (= ($generated@@592 ($generated@@565 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@565 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@73) (= ($generated@@81 ($generated@@565 $generated@@595)) $generated@@57))
 :pattern ( ($generated@@565 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@73)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@73) (= ($generated@@596 ($generated@@266 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@266 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
(= ($generated@@332 $generated@@600 ($generated@@354 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@354 $generated@@599))
)))
(assert  (=> (<= 2 $generated@@327) (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@330) (= (type $generated@@602) $generated@@150)) (or ($generated@@331 $generated@@602) (and (not (= 2 $generated@@327)) ($generated@@173 $generated@@602 ($generated@@266 $generated@@263))))) (and (=> (not ($generated@@307 $generated@@602)) (let (($generated@@603 ($generated@@168 $generated@@602)))
($generated@@331 $generated@@603))) (= ($generated@@328 ($generated@@329 $generated@@601) $generated@@602) (ite ($generated@@307 $generated@@602) 0 (let (($generated@@604 ($generated@@168 $generated@@602)))
(let (($generated@@605 ($generated@@159 $generated@@602)))
(+ $generated@@605 ($generated@@328 $generated@@601 $generated@@604))))))))
 :pattern ( ($generated@@328 ($generated@@329 $generated@@601) $generated@@602))
))))
(assert (forall (($generated@@608 Int) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@149) (= (type $generated@@610) $generated@@150)) (< ($generated@@606 $generated@@609) ($generated@@607 ($generated@@148 $generated@@608 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@148 $generated@@608 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 Int) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@149) (= (type $generated@@613) $generated@@150)) (< ($generated@@607 $generated@@613) ($generated@@607 ($generated@@148 $generated@@611 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@148 $generated@@611 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@614) ($generated@@370 $generated@@149 $generated@@149)) (= (type $generated@@615) $generated@@73)) (= (type $generated@@616) $generated@@73)) (= ($generated@@173 $generated@@614 ($generated@@472 $generated@@615 $generated@@616)) (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@149) ($generated@@0 ($generated@@90 ($generated@@368 $generated@@614) $generated@@617))) (and ($generated@@272 ($generated@@90 ($generated@@447 $generated@@614) $generated@@617) $generated@@616) ($generated@@272 $generated@@617 $generated@@615)))
 :pattern ( ($generated@@90 ($generated@@447 $generated@@614) $generated@@617))
 :pattern ( ($generated@@90 ($generated@@368 $generated@@614) $generated@@617))
))))
 :pattern ( ($generated@@173 $generated@@614 ($generated@@472 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@618) ($generated@@388 $generated@@149 $generated@@149)) (= (type $generated@@619) $generated@@73)) (= (type $generated@@620) $generated@@73)) (= ($generated@@173 $generated@@618 ($generated@@480 $generated@@619 $generated@@620)) (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@149) ($generated@@0 ($generated@@90 ($generated@@386 $generated@@618) $generated@@621))) (and ($generated@@272 ($generated@@90 ($generated@@455 $generated@@618) $generated@@621) $generated@@620) ($generated@@272 $generated@@621 $generated@@619)))
 :pattern ( ($generated@@90 ($generated@@455 $generated@@618) $generated@@621))
 :pattern ( ($generated@@90 ($generated@@386 $generated@@618) $generated@@621))
))))
 :pattern ( ($generated@@173 $generated@@618 ($generated@@480 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@149) (= (type $generated@@623) $generated@@149)) (< ($generated@@606 $generated@@622) ($generated@@607 ($generated@@271 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@271 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@149) (= (type $generated@@625) $generated@@149)) (< ($generated@@606 $generated@@625) ($generated@@607 ($generated@@271 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@271 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@330) (= (type $generated@@627) $generated@@150)) (= ($generated@@328 ($generated@@329 $generated@@626) $generated@@627) ($generated@@328 $generated@@626 $generated@@627)))
 :pattern ( ($generated@@328 ($generated@@329 $generated@@626) $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@149) (= (type $generated@@629) $generated@@73)) (= (type $generated@@630) $generated@@73)) ($generated@@272 $generated@@628 ($generated@@472 $generated@@629 $generated@@630))) (and (= ($generated@@354 ($generated@@332 ($generated@@370 $generated@@149 $generated@@149) $generated@@628)) $generated@@628) ($generated@@173 ($generated@@332 ($generated@@370 $generated@@149 $generated@@149) $generated@@628) ($generated@@472 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@272 $generated@@628 ($generated@@472 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@149) (= (type $generated@@632) $generated@@73)) (= (type $generated@@633) $generated@@73)) ($generated@@272 $generated@@631 ($generated@@480 $generated@@632 $generated@@633))) (and (= ($generated@@354 ($generated@@332 ($generated@@388 $generated@@149 $generated@@149) $generated@@631)) $generated@@631) ($generated@@173 ($generated@@332 ($generated@@388 $generated@@149 $generated@@149) $generated@@631) ($generated@@480 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@272 $generated@@631 ($generated@@480 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@73) (= (type $generated@@635) $generated@@73)) (= (type $generated@@636) $generated@@149)) ($generated@@272 $generated@@636 ($generated@@176 $generated@@634 $generated@@635))) (and (= ($generated@@354 ($generated@@332 $generated@@150 $generated@@636)) $generated@@636) ($generated@@173 ($generated@@332 $generated@@150 $generated@@636) ($generated@@176 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@272 $generated@@636 ($generated@@176 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@150) (= (type $generated@@638) $generated@@73)) (= (type $generated@@639) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@267 $generated@@639) (and ($generated@@317 $generated@@637) ($generated@@83 $generated@@637 ($generated@@266 $generated@@638) $generated@@639)))) ($generated@@280 ($generated@@163 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@280 ($generated@@163 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@640)))
 (not ($generated@@0 ($generated@@90 ($generated@@493 $generated@@641) $generated@@640))))
 :pattern ( (let (($generated@@641 (type $generated@@640)))
($generated@@90 ($generated@@493 $generated@@641) $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@73) (= (type $generated@@643) $generated@@73)) (and (= ($generated@@81 ($generated@@176 $generated@@642 $generated@@643)) $generated@@65) (= ($generated@@365 ($generated@@176 $generated@@642 $generated@@643)) $generated@@71)))
 :pattern ( ($generated@@176 $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@150) (= ($generated@@606 ($generated@@354 $generated@@644)) ($generated@@607 $generated@@644)))
 :pattern ( ($generated@@606 ($generated@@354 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@149) ($generated@@272 $generated@@645 ($generated@@84 0))) (and (= ($generated@@354 ($generated@@332 $generated@@2 $generated@@645)) $generated@@645) ($generated@@173 ($generated@@332 ($generated@@85 $generated@@149 $generated@@4) $generated@@645) ($generated@@84 0))))
 :pattern ( ($generated@@272 $generated@@645 ($generated@@84 0)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@149) (= (type $generated@@647) $generated@@73)) ($generated@@272 $generated@@646 ($generated@@291 $generated@@647))) (and (= ($generated@@354 ($generated@@332 ($generated@@85 $generated@@149 $generated@@4) $generated@@646)) $generated@@646) ($generated@@173 ($generated@@332 ($generated@@85 $generated@@149 $generated@@4) $generated@@646) ($generated@@291 $generated@@647))))
 :pattern ( ($generated@@272 $generated@@646 ($generated@@291 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) $generated@@149) (= (type $generated@@649) $generated@@73)) ($generated@@272 $generated@@648 ($generated@@296 $generated@@649))) (and (= ($generated@@354 ($generated@@332 ($generated@@85 $generated@@149 $generated@@4) $generated@@648)) $generated@@648) ($generated@@173 ($generated@@332 ($generated@@85 $generated@@149 $generated@@4) $generated@@648) ($generated@@296 $generated@@649))))
 :pattern ( ($generated@@272 $generated@@648 ($generated@@296 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@650) $generated@@149) (= (type $generated@@651) $generated@@73)) ($generated@@272 $generated@@650 ($generated@@190 $generated@@651))) (and (= ($generated@@354 ($generated@@332 ($generated@@85 $generated@@149 $generated@@2) $generated@@650)) $generated@@650) ($generated@@173 ($generated@@332 ($generated@@85 $generated@@149 $generated@@2) $generated@@650) ($generated@@190 $generated@@651))))
 :pattern ( ($generated@@272 $generated@@650 ($generated@@190 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (= (type $generated@@652) $generated@@149) (= (type $generated@@653) $generated@@73)) ($generated@@272 $generated@@652 ($generated@@565 $generated@@653))) (and (= ($generated@@354 ($generated@@332 ($generated@@346 $generated@@149) $generated@@652)) $generated@@652) ($generated@@173 ($generated@@332 ($generated@@346 $generated@@149) $generated@@652) ($generated@@565 $generated@@653))))
 :pattern ( ($generated@@272 $generated@@652 ($generated@@565 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@73) (= (type $generated@@655) $generated@@149)) ($generated@@272 $generated@@655 ($generated@@266 $generated@@654))) (and (= ($generated@@354 ($generated@@332 $generated@@150 $generated@@655)) $generated@@655) ($generated@@173 ($generated@@332 $generated@@150 $generated@@655) ($generated@@266 $generated@@654))))
 :pattern ( ($generated@@272 $generated@@655 ($generated@@266 $generated@@654)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@150) (= (type $generated@@657) $generated@@73)) (= (type $generated@@658) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@267 $generated@@658) (and ($generated@@317 $generated@@656) ($generated@@83 $generated@@656 ($generated@@266 $generated@@657) $generated@@658)))) ($generated@@83 ($generated@@168 $generated@@656) ($generated@@266 $generated@@657) $generated@@658))
 :pattern ( ($generated@@83 ($generated@@168 $generated@@656) ($generated@@266 $generated@@657) $generated@@658))
)))
(assert (= ($generated@@81 $generated@@141) $generated@@61))
(assert (= ($generated@@365 $generated@@141) $generated@@69))
(assert (= ($generated@@81 $generated@@144) $generated@@62))
(assert (= ($generated@@365 $generated@@144) $generated@@70))
(assert (= ($generated@@81 $generated@@263) $generated@@63))
(assert (= ($generated@@365 $generated@@263) $generated@@70))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@659) ($generated@@85 $generated@@149 $generated@@2)) (= (type $generated@@660) $generated@@73)) (= (type $generated@@661) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@659 ($generated@@190 $generated@@660) $generated@@661) (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@149) (< 0 ($generated ($generated@@90 $generated@@659 $generated@@662)))) ($generated@@280 $generated@@662 $generated@@660 $generated@@661))
 :pattern ( ($generated@@90 $generated@@659 $generated@@662))
))))
 :pattern ( ($generated@@83 $generated@@659 ($generated@@190 $generated@@660) $generated@@661))
)))
(assert (= $generated@@189 ($generated@@303 $generated@@189)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) $generated@@150) (= (type $generated@@664) $generated@@73)) (= (type $generated@@665) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@267 $generated@@665) (and ($generated@@175 $generated@@663) (exists (($generated@@666 T@U) ) (!  (and (= (type $generated@@666) $generated@@73) ($generated@@83 $generated@@663 ($generated@@176 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@83 $generated@@663 ($generated@@176 $generated@@664 $generated@@666) $generated@@665))
))))) ($generated@@280 ($generated@@183 $generated@@663) $generated@@664 $generated@@665))
 :pattern ( ($generated@@280 ($generated@@183 $generated@@663) $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@150) (= (type $generated@@668) $generated@@73)) (= (type $generated@@669) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@267 $generated@@669) (and ($generated@@175 $generated@@667) (exists (($generated@@670 T@U) ) (!  (and (= (type $generated@@670) $generated@@73) ($generated@@83 $generated@@667 ($generated@@176 $generated@@670 $generated@@668) $generated@@669))
 :pattern ( ($generated@@83 $generated@@667 ($generated@@176 $generated@@670 $generated@@668) $generated@@669))
))))) ($generated@@280 ($generated@@184 $generated@@667) $generated@@668 $generated@@669))
 :pattern ( ($generated@@280 ($generated@@184 $generated@@667) $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@149) (= (type $generated@@672) $generated@@149)) (= ($generated@@271 ($generated@@303 $generated@@671) ($generated@@303 $generated@@672)) ($generated@@303 ($generated@@271 $generated@@671 $generated@@672))))
 :pattern ( ($generated@@271 ($generated@@303 $generated@@671) ($generated@@303 $generated@@672)))
)))
(assert (forall (($generated@@673 Int) ) (! (= ($generated@@354 ($generated@@8 ($generated@@301 $generated@@673))) ($generated@@303 ($generated@@354 ($generated@@8 $generated@@673))))
 :pattern ( ($generated@@354 ($generated@@8 ($generated@@301 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ) (! (= ($generated@@354 ($generated@@303 $generated@@674)) ($generated@@303 ($generated@@354 $generated@@674)))
 :pattern ( ($generated@@354 ($generated@@303 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ) (! (let (($generated@@676 ($generated@@347 (type $generated@@675))))
 (=> (and (= (type $generated@@675) ($generated@@346 $generated@@676)) (= ($generated@@345 $generated@@675) 0)) (= $generated@@675 ($generated@@344 $generated@@676))))
 :pattern ( ($generated@@345 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (! (let (($generated@@680 (type $generated@@678)))
 (=> (and (and (= (type $generated@@677) ($generated@@85 $generated@@680 $generated@@2)) (= (type $generated@@679) $generated@@2)) (<= 0 ($generated $generated@@679))) (= ($generated@@359 ($generated@@91 $generated@@677 $generated@@678 $generated@@679)) (+ (- ($generated@@359 $generated@@677) ($generated ($generated@@90 $generated@@677 $generated@@678))) ($generated $generated@@679)))))
 :pattern ( ($generated@@359 ($generated@@91 $generated@@677 $generated@@678 $generated@@679)))
)))
(assert  (=> (<= 2 $generated@@327) (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@330) (= (type $generated@@682) $generated@@150)) (or ($generated@@331 $generated@@682) (and (not (= 2 $generated@@327)) ($generated@@173 $generated@@682 ($generated@@266 $generated@@263))))) (<= ($generated@@301 0) ($generated@@328 $generated@@681 $generated@@682)))
 :pattern ( ($generated@@328 $generated@@681 $generated@@682))
))))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@684) $generated@@2)) ($generated@@83 $generated@@684 $generated@@46 $generated@@683))
 :pattern ( ($generated@@83 $generated@@684 $generated@@46 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@686) $generated@@3)) ($generated@@83 $generated@@686 $generated@@47 $generated@@685))
 :pattern ( ($generated@@83 $generated@@686 $generated@@47 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@688) $generated@@4)) ($generated@@83 $generated@@688 $generated@@44 $generated@@687))
 :pattern ( ($generated@@83 $generated@@688 $generated@@44 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@690) $generated@@517)) ($generated@@83 $generated@@690 $generated@@45 $generated@@689))
 :pattern ( ($generated@@83 $generated@@690 $generated@@45 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@692) $generated@@149)) ($generated@@83 $generated@@692 $generated@@48 $generated@@691))
 :pattern ( ($generated@@83 $generated@@692 $generated@@48 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) ($generated@@346 $generated@@149)) (= (type $generated@@694) $generated@@73)) (= ($generated@@173 $generated@@693 ($generated@@565 $generated@@694)) (forall (($generated@@695 Int) ) (!  (=> (and (<= 0 $generated@@695) (< $generated@@695 ($generated@@345 $generated@@693))) ($generated@@272 ($generated@@566 $generated@@693 $generated@@695) $generated@@694))
 :pattern ( ($generated@@566 $generated@@693 $generated@@695))
))))
 :pattern ( ($generated@@173 $generated@@693 ($generated@@565 $generated@@694)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@696) $generated@@150) (= (type $generated@@697) $generated@@150)) (and ($generated@@317 $generated@@696) ($generated@@317 $generated@@697))) (= ($generated@@288 $generated@@696 $generated@@697)  (and (and (= ($generated@@159 $generated@@696) ($generated@@159 $generated@@697)) (= ($generated@@163 $generated@@696) ($generated@@163 $generated@@697))) ($generated@@288 ($generated@@168 $generated@@696) ($generated@@168 $generated@@697)))))
 :pattern ( ($generated@@288 $generated@@696 $generated@@697) ($generated@@317 $generated@@696))
 :pattern ( ($generated@@288 $generated@@696 $generated@@697) ($generated@@317 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 Int) ) (!  (=> (= (type $generated@@699) ($generated@@346 $generated@@149)) (=> (and (<= 0 $generated@@700) (< $generated@@700 ($generated@@345 $generated@@699))) (< ($generated@@607 ($generated@@332 $generated@@150 ($generated@@566 $generated@@699 $generated@@700))) ($generated@@698 $generated@@699))))
 :pattern ( ($generated@@607 ($generated@@332 $generated@@150 ($generated@@566 $generated@@699 $generated@@700))))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) ($generated@@370 $generated@@149 $generated@@149)) (= (type $generated@@702) $generated@@73)) (= (type $generated@@703) $generated@@73)) ($generated@@173 $generated@@701 ($generated@@472 $generated@@702 $generated@@703))) (and (and ($generated@@173 ($generated@@368 $generated@@701) ($generated@@291 $generated@@702)) ($generated@@173 ($generated@@415 $generated@@701) ($generated@@291 $generated@@703))) ($generated@@173 ($generated@@446 $generated@@701) ($generated@@291 ($generated@@176 $generated@@702 $generated@@703)))))
 :pattern ( ($generated@@173 $generated@@701 ($generated@@472 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) ($generated@@388 $generated@@149 $generated@@149)) (= (type $generated@@705) $generated@@73)) (= (type $generated@@706) $generated@@73)) ($generated@@173 $generated@@704 ($generated@@480 $generated@@705 $generated@@706))) (and (and ($generated@@173 ($generated@@386 $generated@@704) ($generated@@296 $generated@@705)) ($generated@@173 ($generated@@426 $generated@@704) ($generated@@296 $generated@@706))) ($generated@@173 ($generated@@454 $generated@@704) ($generated@@296 ($generated@@176 $generated@@705 $generated@@706)))))
 :pattern ( ($generated@@173 $generated@@704 ($generated@@480 $generated@@705 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@2) ($generated@@173 $generated@@707 $generated@@46))
 :pattern ( ($generated@@173 $generated@@707 $generated@@46))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@3) ($generated@@173 $generated@@708 $generated@@47))
 :pattern ( ($generated@@173 $generated@@708 $generated@@47))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@4) ($generated@@173 $generated@@709 $generated@@44))
 :pattern ( ($generated@@173 $generated@@709 $generated@@44))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@517) ($generated@@173 $generated@@710 $generated@@45))
 :pattern ( ($generated@@173 $generated@@710 $generated@@45))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@149) ($generated@@173 $generated@@711 $generated@@48))
 :pattern ( ($generated@@173 $generated@@711 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () Int)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () Int)
(declare-fun $generated@@722 () Int)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@712) $generated@@150) (= (type $generated@@714) $generated@@86)) (= (type $generated@@715) $generated@@150)) (= (type $generated@@716) $generated@@150)) (= (type $generated@@717) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@718) $generated@@150)) (= (type $generated@@719) $generated@@86)) (= (type $generated@@720) $generated@@86)) (= (type $generated@@723) ($generated@@197 $generated@@86 $generated@@4))) (= (type $generated@@724) ($generated@@197 $generated@@86 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@726 true))
(let (($generated@@727  (=> (and (and (= $generated@@712 ($generated@@148 $generated@@713 ($generated@@354 $generated@@714) $generated@@715)) (<= ($generated@@301 0) $generated@@713)) (and ($generated@@173 $generated@@714 $generated@@263) ($generated@@173 $generated@@715 ($generated@@266 $generated@@263)))) (=> (and (and (and (and ($generated@@173 $generated@@716 ($generated@@266 $generated@@263)) ($generated@@83 $generated@@716 ($generated@@266 $generated@@263) $generated@@717)) (= $generated@@718 $generated@@715)) (and (and ($generated@@173 $generated@@718 ($generated@@266 $generated@@263)) (= $generated@@716 $generated@@718)) (and ($generated@@173 $generated@@719 $generated@@263) ($generated@@83 $generated@@719 $generated@@263 $generated@@717)))) (and (and (and (= $generated@@720 $generated@@714) ($generated@@173 $generated@@720 $generated@@263)) (and (= $generated@@719 $generated@@720) (<= ($generated@@301 0) $generated@@721))) (and (and (= $generated@@722 $generated@@713) ($generated@@173 ($generated@@8 $generated@@722) $generated@@141)) (and (= $generated@@721 $generated@@722) ($generated@@83 $generated@@716 ($generated@@266 $generated@@263) $generated@@717))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@607 $generated@@716) ($generated@@607 $generated@@712))) (=> (< ($generated@@607 $generated@@716) ($generated@@607 $generated@@712)) (=> (and ($generated@@331 $generated@@716) (= (ControlFlow 0 5) (- 0 4))) ($generated@@173 ($generated@@8 (+ $generated@@721 ($generated@@328 ($generated@@329 $generated@@560) $generated@@716))) $generated@@141))))))))
(let (($generated@@728  (=> (not (= $generated@@712 $generated@@189)) (and (=> (= (ControlFlow 0 8) 5) $generated@@727) (=> (= (ControlFlow 0 8) 7) $generated@@726)))))
(let (($generated@@729  (=> (and (= $generated@@712 $generated@@189) (= (ControlFlow 0 3) (- 0 2))) ($generated@@173 ($generated@@8 ($generated@@301 0)) $generated@@141))))
(let (($generated@@730  (=> (= $generated@@723 ($generated@@251 $generated@@145 $generated@@717 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 3) $generated@@729) (=> (= (ControlFlow 0 9) 8) $generated@@728)))))
(let (($generated@@731 true))
(let (($generated@@732  (=> (= $generated@@724 ($generated@@196 $generated@@145 $generated@@717 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@731) (=> (= (ControlFlow 0 10) 9) $generated@@730)))))
(let (($generated@@733  (=> (and (and (and ($generated@@267 $generated@@717) ($generated@@725 $generated@@717)) ($generated@@173 $generated@@712 ($generated@@266 $generated@@263))) (and (= 2 $generated@@327) (= (ControlFlow 0 11) 10))) $generated@@732)))
$generated@@733)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@148 (Int T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) Bool)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U T@U) Bool)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (Int) Int)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) Bool)
(declare-fun $generated@@317 (T@U) Bool)
(declare-fun $generated@@330 (T@T) T@U)
(declare-fun $generated@@331 (T@U) Int)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@338 () Int)
(declare-fun $generated@@339 (T@U T@U) Int)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 () T@T)
(declare-fun $generated@@342 (T@U) Bool)
(declare-fun $generated@@343 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@359 (T@U) Int)
(declare-fun $generated@@360 (T@T) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@T) T@U)
(declare-fun $generated@@370 (T@T T@T) T@T)
(declare-fun $generated@@371 (T@T) T@T)
(declare-fun $generated@@372 (T@T) T@T)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@477 (T@U T@U) T@U)
(declare-fun $generated@@485 (T@U T@U) T@U)
(declare-fun $generated@@498 (T@T) T@U)
(declare-fun $generated@@522 () T@T)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@565 () T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@571 (T@U Int) T@U)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@698 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@77)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (= (type $generated@@141) $generated@@73))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@142 $generated@@141 $generated@@143))
 :pattern ( ($generated@@83 $generated@@142 $generated@@141 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@73) (= (type $generated@@145) $generated@@86)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@86) (= (type $generated@@147) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@146 $generated@@144 $generated@@147))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@149) 14) (= ($generated@@1 $generated@@150) 15)) (forall (($generated@@152 Int) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= (type ($generated@@148 $generated@@152 $generated@@153 $generated@@154)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@152 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@151 $generated@@155)) $generated@@77)
 :pattern ( ($generated@@151 $generated@@155))
))))
(assert (forall (($generated@@156 Int) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@149) (= (type $generated@@158) $generated@@150)) (= ($generated@@151 ($generated@@148 $generated@@156 $generated@@157 $generated@@158)) $generated@@68))
 :pattern ( ($generated@@148 $generated@@156 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 Int) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@150)) (= ($generated@@159 ($generated@@148 $generated@@160 $generated@@161 $generated@@162)) $generated@@160))
 :pattern ( ($generated@@148 $generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@149)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 Int) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@149) (= (type $generated@@167) $generated@@150)) (= ($generated@@163 ($generated@@148 $generated@@165 $generated@@166 $generated@@167)) $generated@@166))
 :pattern ( ($generated@@148 $generated@@165 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@168 $generated@@169)) $generated@@150)
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 Int) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@149) (= (type $generated@@172) $generated@@150)) (= ($generated@@168 ($generated@@148 $generated@@170 $generated@@171 $generated@@172)) $generated@@172))
 :pattern ( ($generated@@148 $generated@@170 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@173 $generated@@174 ($generated@@84 0)))
 :pattern ( ($generated@@173 $generated@@174 ($generated@@84 0)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@177 $generated@@178)) $generated@@73)
 :pattern ( ($generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@73) (= (type $generated@@180) $generated@@73)) (= (type $generated@@181) $generated@@150)) ($generated@@173 $generated@@181 ($generated@@176 $generated@@179 $generated@@180))) ($generated@@175 $generated@@181))
 :pattern ( ($generated@@175 $generated@@181) ($generated@@173 $generated@@181 ($generated@@176 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@149)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@149)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@150) (= (type $generated@@188) $generated@@150)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (= (type $generated@@189) $generated@@150))
(assert (= ($generated@@151 $generated@@189) $generated@@66))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@73)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@85 $generated@@149 $generated@@2)) (= (type $generated@@194) $generated@@73)) ($generated@@173 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@173 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 16)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@86 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@76 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@86) (= (type $generated@@245) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@246) ($generated@@75 $generated@@4))) (= (type $generated@@248) $generated@@86)) (= (type $generated@@249) ($generated@@75 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ) (! (= (type ($generated@@251 $generated@@252 $generated@@253 $generated@@254 $generated@@255)) ($generated@@197 $generated@@86 $generated@@4))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 Bool) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@76 (type $generated@@261))))
 (=> (and (and (and (and (= (type $generated@@256) $generated@@86) (= (type $generated@@257) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@258) ($generated@@75 $generated@@4))) (= (type $generated@@260) $generated@@86)) (= (type $generated@@261) ($generated@@75 $generated@@262))) (= ($generated@@0 ($generated@@195 ($generated@@251 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))  (=> (and (not (= $generated@@260 $generated@@256)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@257 $generated@@260) $generated@@258))) $generated@@259))))
 :pattern ( ($generated@@195 ($generated@@251 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))
)))
(assert (= (type $generated@@263) $generated@@73))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@86) (= (type $generated@@265) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@264 $generated@@263 $generated@@265) ($generated@@83 $generated@@264 $generated@@144 $generated@@265)))
 :pattern ( ($generated@@83 $generated@@264 $generated@@263 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@266 $generated@@268)) $generated@@73)
 :pattern ( ($generated@@266 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@269) $generated@@73) (= (type $generated@@270) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@267 $generated@@270)) ($generated@@83 $generated@@189 ($generated@@266 $generated@@269) $generated@@270))
 :pattern ( ($generated@@83 $generated@@189 ($generated@@266 $generated@@269) $generated@@270))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@271 $generated@@273 $generated@@274)) $generated@@150)
 :pattern ( ($generated@@271 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (= (type $generated@@275) $generated@@73) (= (type $generated@@276) $generated@@73)) (= (type $generated@@277) $generated@@149)) (= (type $generated@@278) $generated@@149)) (= ($generated@@173 ($generated@@271 $generated@@277 $generated@@278) ($generated@@176 $generated@@275 $generated@@276))  (and ($generated@@272 $generated@@277 $generated@@275) ($generated@@272 $generated@@278 $generated@@276))))
 :pattern ( ($generated@@173 ($generated@@271 $generated@@277 $generated@@278) ($generated@@176 $generated@@275 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@73) ($generated@@173 $generated@@189 ($generated@@266 $generated@@279)))
 :pattern ( ($generated@@173 $generated@@189 ($generated@@266 $generated@@279)))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 Int) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@281) $generated@@73) (= (type $generated@@283) $generated@@149)) (= (type $generated@@284) $generated@@150)) (= (type $generated@@285) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@267 $generated@@285)) (= ($generated@@83 ($generated@@148 $generated@@282 $generated@@283 $generated@@284) ($generated@@266 $generated@@281) $generated@@285)  (and (and ($generated@@83 ($generated@@8 $generated@@282) $generated@@141 $generated@@285) ($generated@@280 $generated@@283 $generated@@281 $generated@@285)) ($generated@@83 $generated@@284 ($generated@@266 $generated@@281) $generated@@285))))
 :pattern ( ($generated@@83 ($generated@@148 $generated@@282 $generated@@283 $generated@@284) ($generated@@266 $generated@@281) $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@150) (= (type $generated@@287) $generated@@150)) (= ($generated@@182 $generated@@286 $generated@@287) (= $generated@@286 $generated@@287)))
 :pattern ( ($generated@@182 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@150) (= (type $generated@@290) $generated@@150)) (= ($generated@@288 $generated@@289 $generated@@290) (= $generated@@289 $generated@@290)))
 :pattern ( ($generated@@288 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@73)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) ($generated@@85 $generated@@149 $generated@@4)) (= (type $generated@@294) $generated@@73)) (= ($generated@@173 $generated@@293 ($generated@@291 $generated@@294)) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@149) ($generated@@0 ($generated@@90 $generated@@293 $generated@@295))) ($generated@@272 $generated@@295 $generated@@294))
 :pattern ( ($generated@@90 $generated@@293 $generated@@295))
))))
 :pattern ( ($generated@@173 $generated@@293 ($generated@@291 $generated@@294)))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@73)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@85 $generated@@149 $generated@@4)) (= (type $generated@@299) $generated@@73)) (= ($generated@@173 $generated@@298 ($generated@@296 $generated@@299)) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@149) ($generated@@0 ($generated@@90 $generated@@298 $generated@@300))) ($generated@@272 $generated@@300 $generated@@299))
 :pattern ( ($generated@@90 $generated@@298 $generated@@300))
))))
 :pattern ( ($generated@@173 $generated@@298 ($generated@@296 $generated@@299)))
)))
(assert (forall (($generated@@302 Int) ) (! (= ($generated@@301 $generated@@302) $generated@@302)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 (type $generated@@304)))
(= (type ($generated@@303 $generated@@304)) $generated@@305))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= ($generated@@303 $generated@@306) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (= (type $generated@@308) $generated@@150) (= (type $generated@@309) $generated@@150)) (and ($generated@@307 $generated@@308) ($generated@@307 $generated@@309))) (= ($generated@@288 $generated@@308 $generated@@309) true))
 :pattern ( ($generated@@288 $generated@@308 $generated@@309) ($generated@@307 $generated@@308))
 :pattern ( ($generated@@288 $generated@@308 $generated@@309) ($generated@@307 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) $generated@@73) (= (type $generated@@311) $generated@@73)) (= (type $generated@@312) $generated@@149)) (= (type $generated@@313) $generated@@149)) (= (type $generated@@314) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@267 $generated@@314)) (= ($generated@@83 ($generated@@271 $generated@@312 $generated@@313) ($generated@@176 $generated@@310 $generated@@311) $generated@@314)  (and ($generated@@280 $generated@@312 $generated@@310 $generated@@314) ($generated@@280 $generated@@313 $generated@@311 $generated@@314))))
 :pattern ( ($generated@@83 ($generated@@271 $generated@@312 $generated@@313) ($generated@@176 $generated@@310 $generated@@311) $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@150) (= ($generated@@175 $generated@@315) (= ($generated@@151 $generated@@315) $generated@@64)))
 :pattern ( ($generated@@175 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@150) (= ($generated@@307 $generated@@316) (= ($generated@@151 $generated@@316) $generated@@66)))
 :pattern ( ($generated@@307 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@150) (= ($generated@@317 $generated@@318) (= ($generated@@151 $generated@@318) $generated@@68)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@150) ($generated@@317 $generated@@319)) (exists (($generated@@320 Int) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (and (and (= (type $generated@@321) $generated@@149) (= (type $generated@@322) $generated@@150)) (= $generated@@319 ($generated@@148 $generated@@320 $generated@@321 $generated@@322)))
 :no-pattern (type $generated@@321)
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))
 :pattern ( ($generated@@317 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 Int) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@323) $generated@@73) (= (type $generated@@325) $generated@@149)) (= (type $generated@@326) $generated@@150)) (= ($generated@@173 ($generated@@148 $generated@@324 $generated@@325 $generated@@326) ($generated@@266 $generated@@323))  (and (and ($generated@@173 ($generated@@8 $generated@@324) $generated@@141) ($generated@@272 $generated@@325 $generated@@323)) ($generated@@173 $generated@@326 ($generated@@266 $generated@@323)))))
 :pattern ( ($generated@@173 ($generated@@148 $generated@@324 $generated@@325 $generated@@326) ($generated@@266 $generated@@323)))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@150) ($generated@@175 $generated@@327)) (exists (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (and (and (= (type $generated@@328) $generated@@149) (= (type $generated@@329) $generated@@149)) (= $generated@@327 ($generated@@271 $generated@@328 $generated@@329)))
 :no-pattern (type $generated@@328)
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
)))
 :pattern ( ($generated@@175 $generated@@327))
)))
(assert  (and (and (forall (($generated@@334 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@334)) 17)) (forall (($generated@@335 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@332 $generated@@335))
))) (forall (($generated@@336 T@T) ) (! (= (type ($generated@@330 $generated@@336)) ($generated@@332 $generated@@336))
 :pattern ( ($generated@@330 $generated@@336))
))))
(assert (forall (($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@337)) 0)
 :pattern ( ($generated@@330 $generated@@337))
)))
(assert  (and (and (= ($generated@@1 $generated@@341) 18) (forall (($generated@@344 T@U) ) (! (= (type ($generated@@340 $generated@@344)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@343 $generated@@345 $generated@@346))
))))
(assert  (=> (<= 2 $generated@@338) (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) $generated@@341) (= (type $generated@@348) $generated@@150)) (or ($generated@@342 ($generated@@303 $generated@@348)) (and (not (= 2 $generated@@338)) ($generated@@173 $generated@@348 ($generated@@266 $generated@@263))))) (and (=> (not ($generated@@0 ($generated@@303 ($generated@@11 ($generated@@307 ($generated@@303 $generated@@348)))))) (let (($generated@@349 ($generated@@303 ($generated@@168 ($generated@@303 $generated@@348)))))
($generated@@342 $generated@@349))) (= ($generated@@339 ($generated@@340 $generated@@347) ($generated@@303 $generated@@348)) (ite ($generated@@307 ($generated@@303 $generated@@348)) 0 (let (($generated@@350 ($generated@@303 ($generated@@168 ($generated@@303 $generated@@348)))))
(let (($generated@@351 ($generated@@301 ($generated@@159 ($generated@@303 $generated@@348)))))
($generated@@301 (- (+ $generated@@351 ($generated@@339 ($generated@@340 $generated@@347) $generated@@350)) 30))))))))
 :weight 3
 :pattern ( ($generated@@339 ($generated@@340 $generated@@347) ($generated@@303 $generated@@348)))
))))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@150) ($generated@@307 $generated@@352)) (= $generated@@352 $generated@@189))
 :pattern ( ($generated@@307 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@2) (= ($generated@@173 $generated@@353 $generated@@141) (<= ($generated@@301 0) ($generated $generated@@353))))
 :pattern ( ($generated@@173 $generated@@353 $generated@@141))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@149)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@73) (= (type $generated@@358) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@280 ($generated@@354 $generated@@356) $generated@@357 $generated@@358) ($generated@@83 $generated@@356 $generated@@357 $generated@@358)))
 :pattern ( ($generated@@280 ($generated@@354 $generated@@356) $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@361 T@T) ) (! (= (type ($generated@@360 $generated@@361)) ($generated@@85 $generated@@361 $generated@@2))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@88 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@85 $generated@@363 $generated@@2)) (and (= (= ($generated@@359 $generated@@362) 0) (= $generated@@362 ($generated@@360 $generated@@363))) (=> (not (= ($generated@@359 $generated@@362) 0)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (< 0 ($generated ($generated@@90 $generated@@362 $generated@@364))))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ) (! (= (type ($generated@@365 $generated@@366)) $generated@@78)
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@73) (and (= ($generated@@81 ($generated@@266 $generated@@367)) $generated@@67) (= ($generated@@365 ($generated@@266 $generated@@367)) $generated@@72)))
 :pattern ( ($generated@@266 $generated@@367))
)))
(assert  (and (and (and (and (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (= ($generated@@1 ($generated@@370 $generated@@373 $generated@@374)) 19)) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@371 ($generated@@370 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@370 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@372 ($generated@@370 $generated@@377 $generated@@378)) $generated@@378)
 :pattern ( ($generated@@370 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@371 (type $generated@@379))))
(= (type ($generated@@368 $generated@@379)) ($generated@@85 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@379))
))) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= (type ($generated@@369 $generated@@381 $generated@@382)) ($generated@@370 $generated@@381 $generated@@382))
 :pattern ( ($generated@@369 $generated@@381 $generated@@382))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@T) ) (! (let (($generated@@385 (type $generated@@383)))
 (not ($generated@@0 ($generated@@90 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383))))
 :pattern ( (let (($generated@@385 (type $generated@@383)))
($generated@@90 ($generated@@368 ($generated@@369 $generated@@385 $generated@@384)) $generated@@383)))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 20)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@85 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@90 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@90 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@88 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@85 $generated@@405 $generated@@2)) (= ($generated@@191 $generated@@404) (forall (($generated@@406 T@U) ) (!  (=> (= (type $generated@@406) $generated@@405) (and (<= 0 ($generated ($generated@@90 $generated@@404 $generated@@406))) (<= ($generated ($generated@@90 $generated@@404 $generated@@406)) ($generated@@359 $generated@@404))))
 :pattern ( ($generated@@90 $generated@@404 $generated@@406))
)))))
 :pattern ( ($generated@@191 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@149) ($generated@@272 $generated@@407 $generated@@141)) (and (= ($generated@@354 ($generated@@343 $generated@@2 $generated@@407)) $generated@@407) ($generated@@173 ($generated@@343 $generated@@2 $generated@@407) $generated@@141)))
 :pattern ( ($generated@@272 $generated@@407 $generated@@141))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@149) ($generated@@272 $generated@@408 $generated@@144)) (and (= ($generated@@354 ($generated@@343 $generated@@86 $generated@@408)) $generated@@408) ($generated@@173 ($generated@@343 $generated@@86 $generated@@408) $generated@@144)))
 :pattern ( ($generated@@272 $generated@@408 $generated@@144))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@149) ($generated@@272 $generated@@409 $generated@@263)) (and (= ($generated@@354 ($generated@@343 $generated@@86 $generated@@409)) $generated@@409) ($generated@@173 ($generated@@343 $generated@@86 $generated@@409) $generated@@263)))
 :pattern ( ($generated@@272 $generated@@409 $generated@@263))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (= (type $generated@@410) $generated@@86) (= ($generated@@173 $generated@@410 $generated@@263)  (and ($generated@@173 $generated@@410 $generated@@144) (not (= $generated@@410 $generated@@145)))))
 :pattern ( ($generated@@173 $generated@@410 $generated@@263))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@372 (type $generated@@411))))
(let (($generated@@413 ($generated@@371 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@370 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@369 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) ($generated@@0 ($generated@@90 ($generated@@368 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@368 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@372 (type $generated@@416))))
(= (type ($generated@@415 $generated@@416)) ($generated@@85 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@372 (type $generated@@418))))
(let (($generated@@420 ($generated@@371 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@370 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@369 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@419) ($generated@@0 ($generated@@90 ($generated@@415 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@415 $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@390 (type $generated@@422))))
(let (($generated@@424 ($generated@@389 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@388 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@387 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) ($generated@@0 ($generated@@90 ($generated@@386 $generated@@422) $generated@@425)))
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@386 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@390 (type $generated@@427))))
(= (type ($generated@@426 $generated@@427)) ($generated@@85 $generated@@428 $generated@@4)))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@390 (type $generated@@429))))
(let (($generated@@431 ($generated@@389 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@388 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@387 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@430) ($generated@@0 ($generated@@90 ($generated@@426 $generated@@429) $generated@@432)))
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@426 $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@85 $generated@@149 $generated@@2)) (= (type $generated@@434) $generated@@73)) (= ($generated@@173 $generated@@433 ($generated@@190 $generated@@434)) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@149) (< 0 ($generated ($generated@@90 $generated@@433 $generated@@435)))) ($generated@@272 $generated@@435 $generated@@434))
 :pattern ( ($generated@@90 $generated@@433 $generated@@435))
))))
 :pattern ( ($generated@@173 $generated@@433 ($generated@@190 $generated@@434)))
)))
(assert  (=> (<= 2 $generated@@338) (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (= (type $generated@@436) $generated@@341) (= (type $generated@@437) $generated@@150)) (or ($generated@@342 $generated@@437) (and (not (= 2 $generated@@338)) ($generated@@173 $generated@@437 ($generated@@266 $generated@@263))))) (and (=> (not ($generated@@307 $generated@@437)) (let (($generated@@438 ($generated@@168 $generated@@437)))
($generated@@342 $generated@@438))) (= ($generated@@339 ($generated@@340 $generated@@436) $generated@@437) (ite ($generated@@307 $generated@@437) 0 (let (($generated@@439 ($generated@@168 $generated@@437)))
(let (($generated@@440 ($generated@@159 $generated@@437)))
(- (+ $generated@@440 ($generated@@339 $generated@@436 $generated@@439)) 30)))))))
 :pattern ( ($generated@@339 ($generated@@340 $generated@@436) $generated@@437))
))))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (= (type $generated@@441) ($generated@@85 $generated@@149 $generated@@4)) (= (type $generated@@442) $generated@@73)) (= (type $generated@@443) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@441 ($generated@@291 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@149) ($generated@@0 ($generated@@90 $generated@@441 $generated@@444))) ($generated@@280 $generated@@444 $generated@@442 $generated@@443))
 :pattern ( ($generated@@90 $generated@@441 $generated@@444))
))))
 :pattern ( ($generated@@83 $generated@@441 ($generated@@291 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@445) ($generated@@85 $generated@@149 $generated@@4)) (= (type $generated@@446) $generated@@73)) (= (type $generated@@447) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@445 ($generated@@296 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@149) ($generated@@0 ($generated@@90 $generated@@445 $generated@@448))) ($generated@@280 $generated@@448 $generated@@446 $generated@@447))
 :pattern ( ($generated@@90 $generated@@445 $generated@@448))
))))
 :pattern ( ($generated@@83 $generated@@445 ($generated@@296 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 (type $generated@@449)))
(= ($generated ($generated@@90 ($generated@@360 $generated@@450) $generated@@449)) 0))
 :pattern ( (let (($generated@@450 (type $generated@@449)))
($generated@@90 ($generated@@360 $generated@@450) $generated@@449)))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) ($generated@@85 $generated@@149 $generated@@4))
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@372 (type $generated@@454))))
(let (($generated@@456 ($generated@@371 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454)) ($generated@@85 $generated@@456 $generated@@455))))
 :pattern ( ($generated@@452 $generated@@454))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@370 $generated@@149 $generated@@149)) (= (type $generated@@458) $generated@@149)) (= ($generated@@0 ($generated@@90 ($generated@@451 $generated@@457) $generated@@458))  (and ($generated@@0 ($generated@@90 ($generated@@368 $generated@@457) ($generated@@183 ($generated@@343 $generated@@150 $generated@@458)))) (= ($generated@@90 ($generated@@452 $generated@@457) ($generated@@183 ($generated@@343 $generated@@150 $generated@@458))) ($generated@@184 ($generated@@343 $generated@@150 $generated@@458))))))
 :pattern ( ($generated@@90 ($generated@@451 $generated@@457) $generated@@458))
)))
(assert  (and (forall (($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@461)) ($generated@@85 $generated@@149 $generated@@4))
 :pattern ( ($generated@@459 $generated@@461))
)) (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@390 (type $generated@@462))))
(let (($generated@@464 ($generated@@389 (type $generated@@462))))
(= (type ($generated@@460 $generated@@462)) ($generated@@85 $generated@@464 $generated@@463))))
 :pattern ( ($generated@@460 $generated@@462))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@388 $generated@@149 $generated@@149)) (= (type $generated@@466) $generated@@149)) (= ($generated@@0 ($generated@@90 ($generated@@459 $generated@@465) $generated@@466))  (and ($generated@@0 ($generated@@90 ($generated@@386 $generated@@465) ($generated@@183 ($generated@@343 $generated@@150 $generated@@466)))) (= ($generated@@90 ($generated@@460 $generated@@465) ($generated@@183 ($generated@@343 $generated@@150 $generated@@466))) ($generated@@184 ($generated@@343 $generated@@150 $generated@@466))))))
 :pattern ( ($generated@@90 ($generated@@459 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (let (($generated@@469 (type $generated@@468)))
(let (($generated@@470 ($generated@@371 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@370 $generated@@470 $generated@@469)) (= ($generated@@0 ($generated@@90 ($generated@@415 $generated@@467) $generated@@468)) (exists (($generated@@471 T@U) ) (!  (and (= (type $generated@@471) $generated@@470) (and ($generated@@0 ($generated@@90 ($generated@@368 $generated@@467) $generated@@471)) (= $generated@@468 ($generated@@90 ($generated@@452 $generated@@467) $generated@@471))))
 :pattern ( ($generated@@90 ($generated@@368 $generated@@467) $generated@@471))
 :pattern ( ($generated@@90 ($generated@@452 $generated@@467) $generated@@471))
))))))
 :pattern ( ($generated@@90 ($generated@@415 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 (type $generated@@473)))
(let (($generated@@475 ($generated@@389 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@388 $generated@@475 $generated@@474)) (= ($generated@@0 ($generated@@90 ($generated@@426 $generated@@472) $generated@@473)) (exists (($generated@@476 T@U) ) (!  (and (= (type $generated@@476) $generated@@475) (and ($generated@@0 ($generated@@90 ($generated@@386 $generated@@472) $generated@@476)) (= $generated@@473 ($generated@@90 ($generated@@460 $generated@@472) $generated@@476))))
 :pattern ( ($generated@@90 ($generated@@386 $generated@@472) $generated@@476))
 :pattern ( ($generated@@90 ($generated@@460 $generated@@472) $generated@@476))
))))))
 :pattern ( ($generated@@90 ($generated@@426 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@478 $generated@@479)) $generated@@73)
 :pattern ( ($generated@@477 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (and (= (type $generated@@480) ($generated@@370 $generated@@149 $generated@@149)) (= (type $generated@@481) $generated@@73)) (= (type $generated@@482) $generated@@73)) (= (type $generated@@483) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@149) ($generated@@0 ($generated@@90 ($generated@@368 $generated@@480) $generated@@484))) (and ($generated@@280 ($generated@@90 ($generated@@452 $generated@@480) $generated@@484) $generated@@482 $generated@@483) ($generated@@280 $generated@@484 $generated@@481 $generated@@483)))
 :pattern ( ($generated@@90 ($generated@@452 $generated@@480) $generated@@484))
 :pattern ( ($generated@@90 ($generated@@368 $generated@@480) $generated@@484))
))))
 :pattern ( ($generated@@83 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@486 $generated@@487)) $generated@@73)
 :pattern ( ($generated@@485 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (and (= (type $generated@@488) ($generated@@388 $generated@@149 $generated@@149)) (= (type $generated@@489) $generated@@73)) (= (type $generated@@490) $generated@@73)) (= (type $generated@@491) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@149) ($generated@@0 ($generated@@90 ($generated@@386 $generated@@488) $generated@@492))) (and ($generated@@280 ($generated@@90 ($generated@@460 $generated@@488) $generated@@492) $generated@@490 $generated@@491) ($generated@@280 $generated@@492 $generated@@489 $generated@@491)))
 :pattern ( ($generated@@90 ($generated@@460 $generated@@488) $generated@@492))
 :pattern ( ($generated@@90 ($generated@@386 $generated@@488) $generated@@492))
))))
 :pattern ( ($generated@@83 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@493) $generated@@73) (= (type $generated@@494) $generated@@150)) ($generated@@173 $generated@@494 ($generated@@266 $generated@@493))) (or ($generated@@307 $generated@@494) ($generated@@317 $generated@@494)))
 :pattern ( ($generated@@317 $generated@@494) ($generated@@173 $generated@@494 ($generated@@266 $generated@@493)))
 :pattern ( ($generated@@307 $generated@@494) ($generated@@173 $generated@@494 ($generated@@266 $generated@@493)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@495) $generated@@150) (= (type $generated@@496) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@267 $generated@@496) (and ($generated@@317 $generated@@495) (exists (($generated@@497 T@U) ) (!  (and (= (type $generated@@497) $generated@@73) ($generated@@83 $generated@@495 ($generated@@266 $generated@@497) $generated@@496))
 :pattern ( ($generated@@83 $generated@@495 ($generated@@266 $generated@@497) $generated@@496))
))))) ($generated@@83 ($generated@@8 ($generated@@159 $generated@@495)) $generated@@141 $generated@@496))
 :pattern ( ($generated@@83 ($generated@@8 ($generated@@159 $generated@@495)) $generated@@141 $generated@@496))
)))
(assert (forall (($generated@@499 T@T) ) (! (= (type ($generated@@498 $generated@@499)) ($generated@@85 $generated@@499 $generated@@4))
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@390 (type $generated@@500))))
(let (($generated@@502 ($generated@@389 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@388 $generated@@502 $generated@@501)) (= (= $generated@@500 ($generated@@387 $generated@@502 $generated@@501)) (= ($generated@@386 $generated@@500) ($generated@@498 $generated@@502))))))
 :pattern ( ($generated@@386 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@390 (type $generated@@503))))
(let (($generated@@505 ($generated@@389 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@388 $generated@@505 $generated@@504)) (= (= $generated@@503 ($generated@@387 $generated@@505 $generated@@504)) (= ($generated@@426 $generated@@503) ($generated@@498 $generated@@504))))))
 :pattern ( ($generated@@426 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@390 (type $generated@@506))))
(let (($generated@@508 ($generated@@389 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@388 $generated@@508 $generated@@507)) (= (= $generated@@506 ($generated@@387 $generated@@508 $generated@@507)) (= ($generated@@459 $generated@@506) ($generated@@498 $generated@@149))))))
 :pattern ( ($generated@@459 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@372 (type $generated@@509))))
(let (($generated@@511 ($generated@@371 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@370 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@369 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@149) (= (type $generated@@513) $generated@@149)) ($generated@@0 ($generated@@90 ($generated@@451 $generated@@509) ($generated@@354 ($generated@@271 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@451 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@390 (type $generated@@514))))
(let (($generated@@516 ($generated@@389 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@388 $generated@@516 $generated@@515)) (or (= $generated@@514 ($generated@@387 $generated@@516 $generated@@515)) (exists (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (and (and (= (type $generated@@517) $generated@@149) (= (type $generated@@518) $generated@@149)) ($generated@@0 ($generated@@90 ($generated@@459 $generated@@514) ($generated@@354 ($generated@@271 $generated@@517 $generated@@518)))))
 :no-pattern (type $generated@@517)
 :no-pattern (type $generated@@518)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
))))))
 :pattern ( ($generated@@459 $generated@@514))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@149) ($generated@@272 $generated@@519 $generated@@46)) (and (= ($generated@@354 ($generated@@343 $generated@@2 $generated@@519)) $generated@@519) ($generated@@173 ($generated@@343 $generated@@2 $generated@@519) $generated@@46)))
 :pattern ( ($generated@@272 $generated@@519 $generated@@46))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@149) ($generated@@272 $generated@@520 $generated@@47)) (and (= ($generated@@354 ($generated@@343 $generated@@3 $generated@@520)) $generated@@520) ($generated@@173 ($generated@@343 $generated@@3 $generated@@520) $generated@@47)))
 :pattern ( ($generated@@272 $generated@@520 $generated@@47))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@149) ($generated@@272 $generated@@521 $generated@@44)) (and (= ($generated@@354 ($generated@@343 $generated@@4 $generated@@521)) $generated@@521) ($generated@@173 ($generated@@343 $generated@@4 $generated@@521) $generated@@44)))
 :pattern ( ($generated@@272 $generated@@521 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@522) 21))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@149) ($generated@@272 $generated@@523 $generated@@45)) (and (= ($generated@@354 ($generated@@343 $generated@@522 $generated@@523)) $generated@@523) ($generated@@173 ($generated@@343 $generated@@522 $generated@@523) $generated@@45)))
 :pattern ( ($generated@@272 $generated@@523 $generated@@45))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@73) (= ($generated@@272 ($generated@@354 $generated@@524) $generated@@525) ($generated@@173 $generated@@524 $generated@@525)))
 :pattern ( ($generated@@272 ($generated@@354 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@88 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@85 $generated@@527 $generated@@2)) (<= 0 ($generated@@359 $generated@@526))))
 :pattern ( ($generated@@359 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@333 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@332 $generated@@529)) (<= 0 ($generated@@331 $generated@@528))))
 :pattern ( ($generated@@331 $generated@@528))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@73)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@73) (= (type $generated@@533) $generated@@73)) (= ($generated@@530 ($generated@@477 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@477 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@73)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@73) (= (type $generated@@537) $generated@@73)) (= ($generated@@534 ($generated@@477 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@477 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@73) (= (type $generated@@539) $generated@@73)) (= ($generated@@81 ($generated@@477 $generated@@538 $generated@@539)) $generated@@58))
 :pattern ( ($generated@@477 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@73)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@73) (= (type $generated@@543) $generated@@73)) (= ($generated@@540 ($generated@@485 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@485 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@73)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@73) (= (type $generated@@547) $generated@@73)) (= ($generated@@544 ($generated@@485 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@485 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@73) (= (type $generated@@549) $generated@@73)) (= ($generated@@81 ($generated@@485 $generated@@548 $generated@@549)) $generated@@59))
 :pattern ( ($generated@@485 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@149) (= (type $generated@@551) $generated@@149)) (= ($generated@@151 ($generated@@271 $generated@@550 $generated@@551)) $generated@@64))
 :pattern ( ($generated@@271 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@73)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@73) (= (type $generated@@555) $generated@@73)) (= ($generated@@552 ($generated@@176 $generated@@554 $generated@@555)) $generated@@554))
 :pattern ( ($generated@@176 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@73)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@73) (= (type $generated@@559) $generated@@73)) (= ($generated@@556 ($generated@@176 $generated@@558 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@176 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@149) (= (type $generated@@561) $generated@@149)) (= ($generated@@183 ($generated@@271 $generated@@560 $generated@@561)) $generated@@560))
 :pattern ( ($generated@@271 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@149) (= (type $generated@@563) $generated@@149)) (= ($generated@@184 ($generated@@271 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@271 $generated@@562 $generated@@563))
)))
(assert  (and (forall (($generated@@566 T@U) ) (! (= (type ($generated@@564 $generated@@566)) $generated@@341)
 :pattern ( ($generated@@564 $generated@@566))
)) (= (type $generated@@565) $generated@@341)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@341) (= (type $generated@@568) $generated@@150)) (= ($generated@@339 $generated@@567 $generated@@568) ($generated@@339 $generated@@565 $generated@@568)))
 :pattern ( ($generated@@339 ($generated@@564 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@86) ($generated@@173 $generated@@569 $generated@@144))
 :pattern ( ($generated@@173 $generated@@569 $generated@@144))
)))
(assert  (and (forall (($generated@@572 T@U) ) (! (= (type ($generated@@570 $generated@@572)) $generated@@73)
 :pattern ( ($generated@@570 $generated@@572))
)) (forall (($generated@@573 T@U) ($generated@@574 Int) ) (! (let (($generated@@575 ($generated@@333 (type $generated@@573))))
(= (type ($generated@@571 $generated@@573 $generated@@574)) $generated@@575))
 :pattern ( ($generated@@571 $generated@@573 $generated@@574))
))))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@332 $generated@@149)) (= (type $generated@@577) $generated@@73)) (= (type $generated@@578) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@576 ($generated@@570 $generated@@577) $generated@@578) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@331 $generated@@576))) ($generated@@280 ($generated@@571 $generated@@576 $generated@@579) $generated@@577 $generated@@578))
 :pattern ( ($generated@@571 $generated@@576 $generated@@579))
))))
 :pattern ( ($generated@@83 $generated@@576 ($generated@@570 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@580 Int) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@149) (= (type $generated@@582) $generated@@150)) (= ($generated@@148 ($generated@@301 $generated@@580) ($generated@@303 $generated@@581) ($generated@@303 $generated@@582)) ($generated@@303 ($generated@@148 $generated@@580 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@148 ($generated@@301 $generated@@580) ($generated@@303 $generated@@581) ($generated@@303 $generated@@582)))
)))
(assert (forall (($generated@@584 Int) ) (! (= ($generated@@583 ($generated@@84 $generated@@584)) $generated@@584)
 :pattern ( ($generated@@84 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@73)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@73) (= ($generated@@585 ($generated@@291 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@291 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@73) (= ($generated@@81 ($generated@@291 $generated@@588)) $generated@@54))
 :pattern ( ($generated@@291 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@73)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@73) (= ($generated@@589 ($generated@@296 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@296 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@73) (= ($generated@@81 ($generated@@296 $generated@@592)) $generated@@55))
 :pattern ( ($generated@@296 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@73)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@73) (= ($generated@@593 ($generated@@190 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@190 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@73) (= ($generated@@81 ($generated@@190 $generated@@596)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@73)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@73) (= ($generated@@597 ($generated@@570 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@570 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@73) (= ($generated@@81 ($generated@@570 $generated@@600)) $generated@@57))
 :pattern ( ($generated@@570 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@73)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@73) (= ($generated@@601 ($generated@@266 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@266 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@604)))
(= ($generated@@343 $generated@@605 ($generated@@354 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@354 $generated@@604))
)))
(assert (forall (($generated@@608 Int) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@149) (= (type $generated@@610) $generated@@150)) (< ($generated@@606 $generated@@609) ($generated@@607 ($generated@@148 $generated@@608 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@148 $generated@@608 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 Int) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@149) (= (type $generated@@613) $generated@@150)) (< ($generated@@607 $generated@@613) ($generated@@607 ($generated@@148 $generated@@611 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@148 $generated@@611 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@614) ($generated@@370 $generated@@149 $generated@@149)) (= (type $generated@@615) $generated@@73)) (= (type $generated@@616) $generated@@73)) (= ($generated@@173 $generated@@614 ($generated@@477 $generated@@615 $generated@@616)) (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@149) ($generated@@0 ($generated@@90 ($generated@@368 $generated@@614) $generated@@617))) (and ($generated@@272 ($generated@@90 ($generated@@452 $generated@@614) $generated@@617) $generated@@616) ($generated@@272 $generated@@617 $generated@@615)))
 :pattern ( ($generated@@90 ($generated@@452 $generated@@614) $generated@@617))
 :pattern ( ($generated@@90 ($generated@@368 $generated@@614) $generated@@617))
))))
 :pattern ( ($generated@@173 $generated@@614 ($generated@@477 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@618) ($generated@@388 $generated@@149 $generated@@149)) (= (type $generated@@619) $generated@@73)) (= (type $generated@@620) $generated@@73)) (= ($generated@@173 $generated@@618 ($generated@@485 $generated@@619 $generated@@620)) (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@149) ($generated@@0 ($generated@@90 ($generated@@386 $generated@@618) $generated@@621))) (and ($generated@@272 ($generated@@90 ($generated@@460 $generated@@618) $generated@@621) $generated@@620) ($generated@@272 $generated@@621 $generated@@619)))
 :pattern ( ($generated@@90 ($generated@@460 $generated@@618) $generated@@621))
 :pattern ( ($generated@@90 ($generated@@386 $generated@@618) $generated@@621))
))))
 :pattern ( ($generated@@173 $generated@@618 ($generated@@485 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@149) (= (type $generated@@623) $generated@@149)) (< ($generated@@606 $generated@@622) ($generated@@607 ($generated@@271 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@271 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@149) (= (type $generated@@625) $generated@@149)) (< ($generated@@606 $generated@@625) ($generated@@607 ($generated@@271 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@271 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@341) (= (type $generated@@627) $generated@@150)) (= ($generated@@339 ($generated@@340 $generated@@626) $generated@@627) ($generated@@339 $generated@@626 $generated@@627)))
 :pattern ( ($generated@@339 ($generated@@340 $generated@@626) $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@149) (= (type $generated@@629) $generated@@73)) (= (type $generated@@630) $generated@@73)) ($generated@@272 $generated@@628 ($generated@@477 $generated@@629 $generated@@630))) (and (= ($generated@@354 ($generated@@343 ($generated@@370 $generated@@149 $generated@@149) $generated@@628)) $generated@@628) ($generated@@173 ($generated@@343 ($generated@@370 $generated@@149 $generated@@149) $generated@@628) ($generated@@477 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@272 $generated@@628 ($generated@@477 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@149) (= (type $generated@@632) $generated@@73)) (= (type $generated@@633) $generated@@73)) ($generated@@272 $generated@@631 ($generated@@485 $generated@@632 $generated@@633))) (and (= ($generated@@354 ($generated@@343 ($generated@@388 $generated@@149 $generated@@149) $generated@@631)) $generated@@631) ($generated@@173 ($generated@@343 ($generated@@388 $generated@@149 $generated@@149) $generated@@631) ($generated@@485 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@272 $generated@@631 ($generated@@485 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@73) (= (type $generated@@635) $generated@@73)) (= (type $generated@@636) $generated@@149)) ($generated@@272 $generated@@636 ($generated@@176 $generated@@634 $generated@@635))) (and (= ($generated@@354 ($generated@@343 $generated@@150 $generated@@636)) $generated@@636) ($generated@@173 ($generated@@343 $generated@@150 $generated@@636) ($generated@@176 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@272 $generated@@636 ($generated@@176 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@150) (= (type $generated@@638) $generated@@73)) (= (type $generated@@639) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@267 $generated@@639) (and ($generated@@317 $generated@@637) ($generated@@83 $generated@@637 ($generated@@266 $generated@@638) $generated@@639)))) ($generated@@280 ($generated@@163 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@280 ($generated@@163 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@640)))
 (not ($generated@@0 ($generated@@90 ($generated@@498 $generated@@641) $generated@@640))))
 :pattern ( (let (($generated@@641 (type $generated@@640)))
($generated@@90 ($generated@@498 $generated@@641) $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@73) (= (type $generated@@643) $generated@@73)) (and (= ($generated@@81 ($generated@@176 $generated@@642 $generated@@643)) $generated@@65) (= ($generated@@365 ($generated@@176 $generated@@642 $generated@@643)) $generated@@71)))
 :pattern ( ($generated@@176 $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@150) (= ($generated@@606 ($generated@@354 $generated@@644)) ($generated@@607 $generated@@644)))
 :pattern ( ($generated@@606 ($generated@@354 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@149) ($generated@@272 $generated@@645 ($generated@@84 0))) (and (= ($generated@@354 ($generated@@343 $generated@@2 $generated@@645)) $generated@@645) ($generated@@173 ($generated@@343 ($generated@@85 $generated@@149 $generated@@4) $generated@@645) ($generated@@84 0))))
 :pattern ( ($generated@@272 $generated@@645 ($generated@@84 0)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@149) (= (type $generated@@647) $generated@@73)) ($generated@@272 $generated@@646 ($generated@@291 $generated@@647))) (and (= ($generated@@354 ($generated@@343 ($generated@@85 $generated@@149 $generated@@4) $generated@@646)) $generated@@646) ($generated@@173 ($generated@@343 ($generated@@85 $generated@@149 $generated@@4) $generated@@646) ($generated@@291 $generated@@647))))
 :pattern ( ($generated@@272 $generated@@646 ($generated@@291 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) $generated@@149) (= (type $generated@@649) $generated@@73)) ($generated@@272 $generated@@648 ($generated@@296 $generated@@649))) (and (= ($generated@@354 ($generated@@343 ($generated@@85 $generated@@149 $generated@@4) $generated@@648)) $generated@@648) ($generated@@173 ($generated@@343 ($generated@@85 $generated@@149 $generated@@4) $generated@@648) ($generated@@296 $generated@@649))))
 :pattern ( ($generated@@272 $generated@@648 ($generated@@296 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@650) $generated@@149) (= (type $generated@@651) $generated@@73)) ($generated@@272 $generated@@650 ($generated@@190 $generated@@651))) (and (= ($generated@@354 ($generated@@343 ($generated@@85 $generated@@149 $generated@@2) $generated@@650)) $generated@@650) ($generated@@173 ($generated@@343 ($generated@@85 $generated@@149 $generated@@2) $generated@@650) ($generated@@190 $generated@@651))))
 :pattern ( ($generated@@272 $generated@@650 ($generated@@190 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (= (type $generated@@652) $generated@@149) (= (type $generated@@653) $generated@@73)) ($generated@@272 $generated@@652 ($generated@@570 $generated@@653))) (and (= ($generated@@354 ($generated@@343 ($generated@@332 $generated@@149) $generated@@652)) $generated@@652) ($generated@@173 ($generated@@343 ($generated@@332 $generated@@149) $generated@@652) ($generated@@570 $generated@@653))))
 :pattern ( ($generated@@272 $generated@@652 ($generated@@570 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@73) (= (type $generated@@655) $generated@@149)) ($generated@@272 $generated@@655 ($generated@@266 $generated@@654))) (and (= ($generated@@354 ($generated@@343 $generated@@150 $generated@@655)) $generated@@655) ($generated@@173 ($generated@@343 $generated@@150 $generated@@655) ($generated@@266 $generated@@654))))
 :pattern ( ($generated@@272 $generated@@655 ($generated@@266 $generated@@654)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@150) (= (type $generated@@657) $generated@@73)) (= (type $generated@@658) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@267 $generated@@658) (and ($generated@@317 $generated@@656) ($generated@@83 $generated@@656 ($generated@@266 $generated@@657) $generated@@658)))) ($generated@@83 ($generated@@168 $generated@@656) ($generated@@266 $generated@@657) $generated@@658))
 :pattern ( ($generated@@83 ($generated@@168 $generated@@656) ($generated@@266 $generated@@657) $generated@@658))
)))
(assert (= ($generated@@81 $generated@@141) $generated@@61))
(assert (= ($generated@@365 $generated@@141) $generated@@69))
(assert (= ($generated@@81 $generated@@144) $generated@@62))
(assert (= ($generated@@365 $generated@@144) $generated@@70))
(assert (= ($generated@@81 $generated@@263) $generated@@63))
(assert (= ($generated@@365 $generated@@263) $generated@@70))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@659) ($generated@@85 $generated@@149 $generated@@2)) (= (type $generated@@660) $generated@@73)) (= (type $generated@@661) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@659 ($generated@@190 $generated@@660) $generated@@661) (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@149) (< 0 ($generated ($generated@@90 $generated@@659 $generated@@662)))) ($generated@@280 $generated@@662 $generated@@660 $generated@@661))
 :pattern ( ($generated@@90 $generated@@659 $generated@@662))
))))
 :pattern ( ($generated@@83 $generated@@659 ($generated@@190 $generated@@660) $generated@@661))
)))
(assert (= $generated@@189 ($generated@@303 $generated@@189)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) $generated@@150) (= (type $generated@@664) $generated@@73)) (= (type $generated@@665) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@267 $generated@@665) (and ($generated@@175 $generated@@663) (exists (($generated@@666 T@U) ) (!  (and (= (type $generated@@666) $generated@@73) ($generated@@83 $generated@@663 ($generated@@176 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@83 $generated@@663 ($generated@@176 $generated@@664 $generated@@666) $generated@@665))
))))) ($generated@@280 ($generated@@183 $generated@@663) $generated@@664 $generated@@665))
 :pattern ( ($generated@@280 ($generated@@183 $generated@@663) $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@150) (= (type $generated@@668) $generated@@73)) (= (type $generated@@669) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@267 $generated@@669) (and ($generated@@175 $generated@@667) (exists (($generated@@670 T@U) ) (!  (and (= (type $generated@@670) $generated@@73) ($generated@@83 $generated@@667 ($generated@@176 $generated@@670 $generated@@668) $generated@@669))
 :pattern ( ($generated@@83 $generated@@667 ($generated@@176 $generated@@670 $generated@@668) $generated@@669))
))))) ($generated@@280 ($generated@@184 $generated@@667) $generated@@668 $generated@@669))
 :pattern ( ($generated@@280 ($generated@@184 $generated@@667) $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@149) (= (type $generated@@672) $generated@@149)) (= ($generated@@271 ($generated@@303 $generated@@671) ($generated@@303 $generated@@672)) ($generated@@303 ($generated@@271 $generated@@671 $generated@@672))))
 :pattern ( ($generated@@271 ($generated@@303 $generated@@671) ($generated@@303 $generated@@672)))
)))
(assert (forall (($generated@@673 Int) ) (! (= ($generated@@354 ($generated@@8 ($generated@@301 $generated@@673))) ($generated@@303 ($generated@@354 ($generated@@8 $generated@@673))))
 :pattern ( ($generated@@354 ($generated@@8 ($generated@@301 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ) (! (= ($generated@@354 ($generated@@303 $generated@@674)) ($generated@@303 ($generated@@354 $generated@@674)))
 :pattern ( ($generated@@354 ($generated@@303 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ) (! (let (($generated@@676 ($generated@@333 (type $generated@@675))))
 (=> (and (= (type $generated@@675) ($generated@@332 $generated@@676)) (= ($generated@@331 $generated@@675) 0)) (= $generated@@675 ($generated@@330 $generated@@676))))
 :pattern ( ($generated@@331 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (! (let (($generated@@680 (type $generated@@678)))
 (=> (and (and (= (type $generated@@677) ($generated@@85 $generated@@680 $generated@@2)) (= (type $generated@@679) $generated@@2)) (<= 0 ($generated $generated@@679))) (= ($generated@@359 ($generated@@91 $generated@@677 $generated@@678 $generated@@679)) (+ (- ($generated@@359 $generated@@677) ($generated ($generated@@90 $generated@@677 $generated@@678))) ($generated $generated@@679)))))
 :pattern ( ($generated@@359 ($generated@@91 $generated@@677 $generated@@678 $generated@@679)))
)))
(assert  (=> (<= 2 $generated@@338) (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@341) (= (type $generated@@682) $generated@@150)) (or ($generated@@342 $generated@@682) (and (not (= 2 $generated@@338)) ($generated@@173 $generated@@682 ($generated@@266 $generated@@263))))) (<= ($generated@@301 0) ($generated@@339 $generated@@681 $generated@@682)))
 :pattern ( ($generated@@339 $generated@@681 $generated@@682))
))))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@684) $generated@@2)) ($generated@@83 $generated@@684 $generated@@46 $generated@@683))
 :pattern ( ($generated@@83 $generated@@684 $generated@@46 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@686) $generated@@3)) ($generated@@83 $generated@@686 $generated@@47 $generated@@685))
 :pattern ( ($generated@@83 $generated@@686 $generated@@47 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@688) $generated@@4)) ($generated@@83 $generated@@688 $generated@@44 $generated@@687))
 :pattern ( ($generated@@83 $generated@@688 $generated@@44 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@690) $generated@@522)) ($generated@@83 $generated@@690 $generated@@45 $generated@@689))
 :pattern ( ($generated@@83 $generated@@690 $generated@@45 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@692) $generated@@149)) ($generated@@83 $generated@@692 $generated@@48 $generated@@691))
 :pattern ( ($generated@@83 $generated@@692 $generated@@48 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) ($generated@@332 $generated@@149)) (= (type $generated@@694) $generated@@73)) (= ($generated@@173 $generated@@693 ($generated@@570 $generated@@694)) (forall (($generated@@695 Int) ) (!  (=> (and (<= 0 $generated@@695) (< $generated@@695 ($generated@@331 $generated@@693))) ($generated@@272 ($generated@@571 $generated@@693 $generated@@695) $generated@@694))
 :pattern ( ($generated@@571 $generated@@693 $generated@@695))
))))
 :pattern ( ($generated@@173 $generated@@693 ($generated@@570 $generated@@694)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@696) $generated@@150) (= (type $generated@@697) $generated@@150)) (and ($generated@@317 $generated@@696) ($generated@@317 $generated@@697))) (= ($generated@@288 $generated@@696 $generated@@697)  (and (and (= ($generated@@159 $generated@@696) ($generated@@159 $generated@@697)) (= ($generated@@163 $generated@@696) ($generated@@163 $generated@@697))) ($generated@@288 ($generated@@168 $generated@@696) ($generated@@168 $generated@@697)))))
 :pattern ( ($generated@@288 $generated@@696 $generated@@697) ($generated@@317 $generated@@696))
 :pattern ( ($generated@@288 $generated@@696 $generated@@697) ($generated@@317 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 Int) ) (!  (=> (= (type $generated@@699) ($generated@@332 $generated@@149)) (=> (and (<= 0 $generated@@700) (< $generated@@700 ($generated@@331 $generated@@699))) (< ($generated@@607 ($generated@@343 $generated@@150 ($generated@@571 $generated@@699 $generated@@700))) ($generated@@698 $generated@@699))))
 :pattern ( ($generated@@607 ($generated@@343 $generated@@150 ($generated@@571 $generated@@699 $generated@@700))))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) ($generated@@370 $generated@@149 $generated@@149)) (= (type $generated@@702) $generated@@73)) (= (type $generated@@703) $generated@@73)) ($generated@@173 $generated@@701 ($generated@@477 $generated@@702 $generated@@703))) (and (and ($generated@@173 ($generated@@368 $generated@@701) ($generated@@291 $generated@@702)) ($generated@@173 ($generated@@415 $generated@@701) ($generated@@291 $generated@@703))) ($generated@@173 ($generated@@451 $generated@@701) ($generated@@291 ($generated@@176 $generated@@702 $generated@@703)))))
 :pattern ( ($generated@@173 $generated@@701 ($generated@@477 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (and (= (type $generated@@704) ($generated@@388 $generated@@149 $generated@@149)) (= (type $generated@@705) $generated@@73)) (= (type $generated@@706) $generated@@73)) ($generated@@173 $generated@@704 ($generated@@485 $generated@@705 $generated@@706))) (and (and ($generated@@173 ($generated@@386 $generated@@704) ($generated@@296 $generated@@705)) ($generated@@173 ($generated@@426 $generated@@704) ($generated@@296 $generated@@706))) ($generated@@173 ($generated@@459 $generated@@704) ($generated@@296 ($generated@@176 $generated@@705 $generated@@706)))))
 :pattern ( ($generated@@173 $generated@@704 ($generated@@485 $generated@@705 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@2) ($generated@@173 $generated@@707 $generated@@46))
 :pattern ( ($generated@@173 $generated@@707 $generated@@46))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@3) ($generated@@173 $generated@@708 $generated@@47))
 :pattern ( ($generated@@173 $generated@@708 $generated@@47))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@4) ($generated@@173 $generated@@709 $generated@@44))
 :pattern ( ($generated@@173 $generated@@709 $generated@@44))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) $generated@@522) ($generated@@173 $generated@@710 $generated@@45))
 :pattern ( ($generated@@173 $generated@@710 $generated@@45))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@149) ($generated@@173 $generated@@711 $generated@@48))
 :pattern ( ($generated@@173 $generated@@711 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () Int)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () Int)
(declare-fun $generated@@722 () Int)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@712) $generated@@150) (= (type $generated@@714) $generated@@86)) (= (type $generated@@715) $generated@@150)) (= (type $generated@@716) $generated@@150)) (= (type $generated@@717) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@718) $generated@@150)) (= (type $generated@@719) $generated@@86)) (= (type $generated@@720) $generated@@86)) (= (type $generated@@723) ($generated@@197 $generated@@86 $generated@@4))) (= (type $generated@@724) ($generated@@197 $generated@@86 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@726 true))
(let (($generated@@727  (=> (and (and (= $generated@@712 ($generated@@148 $generated@@713 ($generated@@354 $generated@@714) $generated@@715)) (<= ($generated@@301 0) $generated@@713)) (and ($generated@@173 $generated@@714 $generated@@263) ($generated@@173 $generated@@715 ($generated@@266 $generated@@263)))) (=> (and (and (and (and ($generated@@173 $generated@@716 ($generated@@266 $generated@@263)) ($generated@@83 $generated@@716 ($generated@@266 $generated@@263) $generated@@717)) (= $generated@@718 $generated@@715)) (and (and ($generated@@173 $generated@@718 ($generated@@266 $generated@@263)) (= $generated@@716 $generated@@718)) (and ($generated@@173 $generated@@719 $generated@@263) ($generated@@83 $generated@@719 $generated@@263 $generated@@717)))) (and (and (and (= $generated@@720 $generated@@714) ($generated@@173 $generated@@720 $generated@@263)) (and (= $generated@@719 $generated@@720) (<= ($generated@@301 0) $generated@@721))) (and (and (= $generated@@722 $generated@@713) ($generated@@173 ($generated@@8 $generated@@722) $generated@@141)) (and (= $generated@@721 $generated@@722) ($generated@@83 $generated@@716 ($generated@@266 $generated@@263) $generated@@717))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@607 $generated@@716) ($generated@@607 $generated@@712))) (=> (< ($generated@@607 $generated@@716) ($generated@@607 $generated@@712)) (=> (and ($generated@@342 $generated@@716) (= (ControlFlow 0 5) (- 0 4))) ($generated@@173 ($generated@@8 (- (+ $generated@@721 ($generated@@339 ($generated@@340 $generated@@565) $generated@@716)) 30)) $generated@@141))))))))
(let (($generated@@728  (=> (not (= $generated@@712 $generated@@189)) (and (=> (= (ControlFlow 0 8) 5) $generated@@727) (=> (= (ControlFlow 0 8) 7) $generated@@726)))))
(let (($generated@@729  (=> (and (= $generated@@712 $generated@@189) (= (ControlFlow 0 3) (- 0 2))) ($generated@@173 ($generated@@8 ($generated@@301 0)) $generated@@141))))
(let (($generated@@730  (=> (= $generated@@723 ($generated@@251 $generated@@145 $generated@@717 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 3) $generated@@729) (=> (= (ControlFlow 0 9) 8) $generated@@728)))))
(let (($generated@@731 true))
(let (($generated@@732  (=> (= $generated@@724 ($generated@@196 $generated@@145 $generated@@717 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@731) (=> (= (ControlFlow 0 10) 9) $generated@@730)))))
(let (($generated@@733  (=> (and (and (and ($generated@@267 $generated@@717) ($generated@@725 $generated@@717)) ($generated@@173 $generated@@712 ($generated@@266 $generated@@263))) (and (= 2 $generated@@338) (= (ControlFlow 0 11) 10))) $generated@@732)))
$generated@@733)))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 (Int) Int)
(declare-fun $generated@@141 (Int) Bool)
(declare-fun $generated@@142 (Int) Int)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 (T@U Int) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@143 Int) ) (!  (=> (or ($generated@@141 $generated@@143) (not (= 1 $generated@@139))) (<= ($generated@@142 0) ($generated@@140 $generated@@143)))
 :pattern ( ($generated@@140 $generated@@143))
))))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@66)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@66) (= (type $generated@@150) $generated@@66)) (= (type $generated@@151) $generated@@146)) ($generated@@137 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@137 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@146) (= (type $generated@@159) $generated@@146)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@66)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@78 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@66)) ($generated@@137 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@137 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@79 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@69 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@79) (= (type $generated@@215) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@216) ($generated@@68 $generated@@4))) (= (type $generated@@218) $generated@@79)) (= (type $generated@@219) ($generated@@68 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@79 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@69 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@79) (= (type $generated@@227) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@228) ($generated@@68 $generated@@4))) (= (type $generated@@230) $generated@@79)) (= (type $generated@@231) ($generated@@68 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@233 Int) ) (!  (=> (or ($generated@@141 $generated@@233) (not (= 1 $generated@@139))) (= ($generated@@140 $generated@@233) (ite (<= ($generated@@142 0) $generated@@233) $generated@@233 (- 0 $generated@@233))))
 :pattern ( ($generated@@140 $generated@@233))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@146)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@66) (= (type $generated@@239) $generated@@66)) (= (type $generated@@240) $generated@@155)) (= (type $generated@@241) $generated@@155)) (= ($generated@@137 ($generated@@234 $generated@@240 $generated@@241) ($generated@@145 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@137 ($generated@@234 $generated@@240 $generated@@241) ($generated@@145 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@146) (= (type $generated@@243) $generated@@146)) (= ($generated@@152 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@152 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@66)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@78 $generated@@155 $generated@@4)) (= (type $generated@@247) $generated@@66)) (= ($generated@@137 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@155) ($generated@@0 ($generated@@83 $generated@@246 $generated@@248))) ($generated@@235 $generated@@248 $generated@@247))
 :pattern ( ($generated@@83 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@137 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@66)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@78 $generated@@155 $generated@@4)) (= (type $generated@@252) $generated@@66)) (= ($generated@@137 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@155) ($generated@@0 ($generated@@83 $generated@@251 $generated@@253))) ($generated@@235 $generated@@253 $generated@@252))
 :pattern ( ($generated@@83 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@137 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@142 $generated@@254) $generated@@254)
 :pattern ( ($generated@@142 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@66) (= (type $generated@@262) $generated@@66)) (= (type $generated@@263) $generated@@155)) (= (type $generated@@264) $generated@@155)) (= (type $generated@@265) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@259 $generated@@265)) (= ($generated@@76 ($generated@@234 $generated@@263 $generated@@264) ($generated@@145 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@76 ($generated@@234 $generated@@263 $generated@@264) ($generated@@145 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@146) (= ($generated@@144 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@62)))
 :pattern ( ($generated@@144 $generated@@268))
)))
(assert  (=> (<= 1 $generated@@139) (forall (($generated@@269 Int) ) (!  (=> (or ($generated@@141 ($generated@@142 $generated@@269)) (not (= 1 $generated@@139))) (= ($generated@@140 ($generated@@142 $generated@@269)) (ite (<= ($generated@@142 0) ($generated@@142 $generated@@269)) $generated@@269 (- 0 $generated@@269))))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@142 $generated@@269)))
))))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@146) ($generated@@144 $generated@@270)) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (and (and (= (type $generated@@271) $generated@@155) (= (type $generated@@272) $generated@@155)) (= $generated@@270 ($generated@@234 $generated@@271 $generated@@272)))
 :no-pattern (type $generated@@271)
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
)))
 :pattern ( ($generated@@144 $generated@@270))
)))
(assert  (and (and (forall (($generated@@277 T@T) ) (= ($generated@@1 ($generated@@275 $generated@@277)) 17)) (forall (($generated@@278 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@278)) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
))) (forall (($generated@@279 T@T) ) (! (= (type ($generated@@273 $generated@@279)) ($generated@@275 $generated@@279))
 :pattern ( ($generated@@273 $generated@@279))
))))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@280)) 0)
 :pattern ( ($generated@@273 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@2) (= ($generated@@137 $generated@@281 $generated@@134) (<= ($generated@@142 0) ($generated $generated@@281))))
 :pattern ( ($generated@@137 $generated@@281 $generated@@134))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@155)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@66) (= (type $generated@@286) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@260 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@76 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@260 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@78 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@81 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@78 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@83 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@78 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@78 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@83 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@83 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@81 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@78 $generated@@330 $generated@@2)) (= ($generated@@161 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@83 $generated@@329 $generated@@331))) (<= ($generated ($generated@@83 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@83 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@161 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@155) ($generated@@235 $generated@@335 $generated@@134)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@335)) $generated@@335) ($generated@@137 ($generated@@332 $generated@@2 $generated@@335) $generated@@134)))
 :pattern ( ($generated@@235 $generated@@335 $generated@@134))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@297 (type $generated@@336))))
(let (($generated@@338 ($generated@@296 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@295 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@294 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@293 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@297 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@78 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@297 (type $generated@@343))))
(let (($generated@@345 ($generated@@296 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@295 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@294 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@83 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@315 (type $generated@@347))))
(let (($generated@@349 ($generated@@314 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@313 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@312 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@311 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@315 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@78 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@315 (type $generated@@354))))
(let (($generated@@356 ($generated@@314 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@313 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@312 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@83 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@78 $generated@@155 $generated@@2)) (= (type $generated@@359) $generated@@66)) (= ($generated@@137 $generated@@358 ($generated@@160 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@155) (< 0 ($generated ($generated@@83 $generated@@358 $generated@@360)))) ($generated@@235 $generated@@360 $generated@@359))
 :pattern ( ($generated@@83 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@137 $generated@@358 ($generated@@160 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@155 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@244 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@155) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@260 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@244 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@78 $generated@@155 $generated@@4)) (= (type $generated@@366) $generated@@66)) (= (type $generated@@367) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@365 ($generated@@249 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@155) ($generated@@0 ($generated@@83 $generated@@365 $generated@@368))) ($generated@@260 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@83 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@76 $generated@@365 ($generated@@249 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@83 ($generated@@288 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@83 ($generated@@288 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@78 $generated@@155 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@297 (type $generated@@374))))
(let (($generated@@376 ($generated@@296 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@295 $generated@@155 $generated@@155)) (= (type $generated@@378) $generated@@155)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@377) ($generated@@153 ($generated@@332 $generated@@146 $generated@@378)))) (= ($generated@@83 ($generated@@372 $generated@@377) ($generated@@153 ($generated@@332 $generated@@146 $generated@@378))) ($generated@@154 ($generated@@332 $generated@@146 $generated@@378))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@78 $generated@@155 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@315 (type $generated@@382))))
(let (($generated@@384 ($generated@@314 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@313 $generated@@155 $generated@@155)) (= (type $generated@@386) $generated@@155)) (= ($generated@@0 ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@83 ($generated@@311 $generated@@385) ($generated@@153 ($generated@@332 $generated@@146 $generated@@386)))) (= ($generated@@83 ($generated@@380 $generated@@385) ($generated@@153 ($generated@@332 $generated@@146 $generated@@386))) ($generated@@154 ($generated@@332 $generated@@146 $generated@@386))))))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@296 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@295 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@83 ($generated@@340 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@83 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@387) $generated@@391))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@83 ($generated@@340 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@314 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@313 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@83 ($generated@@351 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@83 ($generated@@311 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@83 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@392) $generated@@396))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@83 ($generated@@351 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@66)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@295 $generated@@155 $generated@@155)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@155) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@400) $generated@@404))) (and ($generated@@260 ($generated@@83 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@260 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@66)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@313 $generated@@155 $generated@@155)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@155) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@408) $generated@@412))) (and ($generated@@260 ($generated@@83 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@260 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@78 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@315 (type $generated@@415))))
(let (($generated@@417 ($generated@@314 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@313 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@312 $generated@@417 $generated@@416)) (= ($generated@@311 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@311 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@315 (type $generated@@418))))
(let (($generated@@420 ($generated@@314 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@313 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@312 $generated@@420 $generated@@419)) (= ($generated@@351 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@351 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@315 (type $generated@@421))))
(let (($generated@@423 ($generated@@314 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@313 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@312 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@155))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@297 (type $generated@@424))))
(let (($generated@@426 ($generated@@296 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@295 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@294 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@155) (= (type $generated@@428) $generated@@155)) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@424) ($generated@@282 ($generated@@234 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@371 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@315 (type $generated@@429))))
(let (($generated@@431 ($generated@@314 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@313 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@312 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@155) (= (type $generated@@433) $generated@@155)) ($generated@@0 ($generated@@83 ($generated@@379 $generated@@429) ($generated@@282 ($generated@@234 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@155) ($generated@@235 $generated@@434 $generated@@46)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@434)) $generated@@434) ($generated@@137 ($generated@@332 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@155) ($generated@@235 $generated@@435 $generated@@47)) (and (= ($generated@@282 ($generated@@332 $generated@@3 $generated@@435)) $generated@@435) ($generated@@137 ($generated@@332 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@155) ($generated@@235 $generated@@436 $generated@@44)) (and (= ($generated@@282 ($generated@@332 $generated@@4 $generated@@436)) $generated@@436) ($generated@@137 ($generated@@332 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@155) ($generated@@235 $generated@@438 $generated@@45)) (and (= ($generated@@282 ($generated@@332 $generated@@437 $generated@@438)) $generated@@438) ($generated@@137 ($generated@@332 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@66) (= ($generated@@235 ($generated@@282 $generated@@439) $generated@@440) ($generated@@137 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@235 ($generated@@282 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@81 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@78 $generated@@442 $generated@@2)) (<= 0 ($generated@@287 $generated@@441))))
 :pattern ( ($generated@@287 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@276 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@275 $generated@@444)) (<= 0 ($generated@@274 $generated@@443))))
 :pattern ( ($generated@@274 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@66)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@66) (= (type $generated@@452) $generated@@66)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@74 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@74 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@155) (= (type $generated@@466) $generated@@155)) (= ($generated@@266 ($generated@@234 $generated@@465 $generated@@466)) $generated@@62))
 :pattern ( ($generated@@234 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@145 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@145 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@471 ($generated@@145 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@145 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@155) (= (type $generated@@476) $generated@@155)) (= ($generated@@153 ($generated@@234 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@234 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@155) (= (type $generated@@478) $generated@@155)) (= ($generated@@154 ($generated@@234 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@234 $generated@@477 $generated@@478))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@481))
)) (forall (($generated@@482 T@U) ($generated@@483 Int) ) (! (let (($generated@@484 ($generated@@276 (type $generated@@482))))
(= (type ($generated@@480 $generated@@482 $generated@@483)) $generated@@484))
 :pattern ( ($generated@@480 $generated@@482 $generated@@483))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@275 $generated@@155)) (= (type $generated@@486) $generated@@66)) (= (type $generated@@487) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@485 ($generated@@479 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@274 $generated@@485))) ($generated@@260 ($generated@@480 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@480 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@76 $generated@@485 ($generated@@479 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@77 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@77 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@244 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@244 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@244 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@249 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@249 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@249 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@160 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@160 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@160 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@503 ($generated@@479 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@479 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@74 ($generated@@479 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@479 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@332 $generated@@508 ($generated@@282 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@282 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@295 $generated@@155 $generated@@155)) (= (type $generated@@510) $generated@@66)) (= (type $generated@@511) $generated@@66)) (= ($generated@@137 $generated@@509 ($generated@@397 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@155) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@509) $generated@@512))) (and ($generated@@235 ($generated@@83 ($generated@@372 $generated@@509) $generated@@512) $generated@@511) ($generated@@235 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@509) $generated@@512))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@137 $generated@@509 ($generated@@397 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@313 $generated@@155 $generated@@155)) (= (type $generated@@514) $generated@@66)) (= (type $generated@@515) $generated@@66)) (= ($generated@@137 $generated@@513 ($generated@@405 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@155) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@513) $generated@@516))) (and ($generated@@235 ($generated@@83 ($generated@@380 $generated@@513) $generated@@516) $generated@@515) ($generated@@235 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@513) $generated@@516))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@137 $generated@@513 ($generated@@405 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@155) (= (type $generated@@520) $generated@@155)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@234 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@234 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@155) (= (type $generated@@522) $generated@@155)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@234 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@234 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@155) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@235 $generated@@523 ($generated@@397 $generated@@524 $generated@@525))) (and (= ($generated@@282 ($generated@@332 ($generated@@295 $generated@@155 $generated@@155) $generated@@523)) $generated@@523) ($generated@@137 ($generated@@332 ($generated@@295 $generated@@155 $generated@@155) $generated@@523) ($generated@@397 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@235 $generated@@523 ($generated@@397 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@155) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@66)) ($generated@@235 $generated@@526 ($generated@@405 $generated@@527 $generated@@528))) (and (= ($generated@@282 ($generated@@332 ($generated@@313 $generated@@155 $generated@@155) $generated@@526)) $generated@@526) ($generated@@137 ($generated@@332 ($generated@@313 $generated@@155 $generated@@155) $generated@@526) ($generated@@405 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@235 $generated@@526 ($generated@@405 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@66) (= (type $generated@@530) $generated@@66)) (= (type $generated@@531) $generated@@155)) ($generated@@235 $generated@@531 ($generated@@145 $generated@@529 $generated@@530))) (and (= ($generated@@282 ($generated@@332 $generated@@146 $generated@@531)) $generated@@531) ($generated@@137 ($generated@@332 $generated@@146 $generated@@531) ($generated@@145 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@235 $generated@@531 ($generated@@145 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@83 ($generated@@413 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@83 ($generated@@413 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@71)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@66) (= (type $generated@@537) $generated@@66)) (and (= ($generated@@74 ($generated@@145 $generated@@536 $generated@@537)) $generated@@63) (= ($generated@@534 ($generated@@145 $generated@@536 $generated@@537)) $generated@@65)))
 :pattern ( ($generated@@145 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@146) (= ($generated@@517 ($generated@@282 $generated@@538)) ($generated@@518 $generated@@538)))
 :pattern ( ($generated@@517 ($generated@@282 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@155) ($generated@@235 $generated@@539 ($generated@@77 0))) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@539)) $generated@@539) ($generated@@137 ($generated@@332 ($generated@@78 $generated@@155 $generated@@4) $generated@@539) ($generated@@77 0))))
 :pattern ( ($generated@@235 $generated@@539 ($generated@@77 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@155) (= (type $generated@@541) $generated@@66)) ($generated@@235 $generated@@540 ($generated@@244 $generated@@541))) (and (= ($generated@@282 ($generated@@332 ($generated@@78 $generated@@155 $generated@@4) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@332 ($generated@@78 $generated@@155 $generated@@4) $generated@@540) ($generated@@244 $generated@@541))))
 :pattern ( ($generated@@235 $generated@@540 ($generated@@244 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@155) (= (type $generated@@543) $generated@@66)) ($generated@@235 $generated@@542 ($generated@@249 $generated@@543))) (and (= ($generated@@282 ($generated@@332 ($generated@@78 $generated@@155 $generated@@4) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@332 ($generated@@78 $generated@@155 $generated@@4) $generated@@542) ($generated@@249 $generated@@543))))
 :pattern ( ($generated@@235 $generated@@542 ($generated@@249 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@155) (= (type $generated@@545) $generated@@66)) ($generated@@235 $generated@@544 ($generated@@160 $generated@@545))) (and (= ($generated@@282 ($generated@@332 ($generated@@78 $generated@@155 $generated@@2) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@332 ($generated@@78 $generated@@155 $generated@@2) $generated@@544) ($generated@@160 $generated@@545))))
 :pattern ( ($generated@@235 $generated@@544 ($generated@@160 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@155) (= (type $generated@@547) $generated@@66)) ($generated@@235 $generated@@546 ($generated@@479 $generated@@547))) (and (= ($generated@@282 ($generated@@332 ($generated@@275 $generated@@155) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@332 ($generated@@275 $generated@@155) $generated@@546) ($generated@@479 $generated@@547))))
 :pattern ( ($generated@@235 $generated@@546 ($generated@@479 $generated@@547)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@534 $generated@@134) $generated@@64))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@78 $generated@@155 $generated@@2)) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@548 ($generated@@160 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@155) (< 0 ($generated ($generated@@83 $generated@@548 $generated@@551)))) ($generated@@260 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@83 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@160 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@146) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@259 $generated@@554) (and ($generated@@144 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@145 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@145 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@260 ($generated@@153 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@260 ($generated@@153 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@146) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@259 $generated@@558) (and ($generated@@144 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@66) ($generated@@76 $generated@@556 ($generated@@145 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@145 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@260 ($generated@@154 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@260 ($generated@@154 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@155) (= (type $generated@@561) $generated@@155)) (= ($generated@@234 ($generated@@255 $generated@@560) ($generated@@255 $generated@@561)) ($generated@@255 ($generated@@234 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@234 ($generated@@255 $generated@@560) ($generated@@255 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@142 $generated@@562))) ($generated@@255 ($generated@@282 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@142 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@282 ($generated@@255 $generated@@563)) ($generated@@255 ($generated@@282 $generated@@563)))
 :pattern ( ($generated@@282 ($generated@@255 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@276 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@275 $generated@@565)) (= ($generated@@274 $generated@@564) 0)) (= $generated@@564 ($generated@@273 $generated@@565))))
 :pattern ( ($generated@@274 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@78 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@287 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@287 $generated@@566) ($generated ($generated@@83 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@287 ($generated@@84 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@2)) ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@3)) ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@4)) ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@437)) ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@155)) ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@275 $generated@@155)) (= (type $generated@@581) $generated@@66)) (= ($generated@@137 $generated@@580 ($generated@@479 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@274 $generated@@580))) ($generated@@235 ($generated@@480 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@480 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@137 $generated@@580 ($generated@@479 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@275 $generated@@155)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@274 $generated@@584))) (< ($generated@@518 ($generated@@332 $generated@@146 ($generated@@480 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@518 ($generated@@332 $generated@@146 ($generated@@480 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@295 $generated@@155 $generated@@155)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@137 $generated@@586 ($generated@@397 $generated@@587 $generated@@588))) (and (and ($generated@@137 ($generated@@293 $generated@@586) ($generated@@244 $generated@@587)) ($generated@@137 ($generated@@340 $generated@@586) ($generated@@244 $generated@@588))) ($generated@@137 ($generated@@371 $generated@@586) ($generated@@244 ($generated@@145 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@137 $generated@@586 ($generated@@397 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@313 $generated@@155 $generated@@155)) (= (type $generated@@590) $generated@@66)) (= (type $generated@@591) $generated@@66)) ($generated@@137 $generated@@589 ($generated@@405 $generated@@590 $generated@@591))) (and (and ($generated@@137 ($generated@@311 $generated@@589) ($generated@@249 $generated@@590)) ($generated@@137 ($generated@@351 $generated@@589) ($generated@@249 $generated@@591))) ($generated@@137 ($generated@@379 $generated@@589) ($generated@@249 ($generated@@145 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@137 $generated@@589 ($generated@@405 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@137 $generated@@592 $generated@@46))
 :pattern ( ($generated@@137 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@137 $generated@@593 $generated@@47))
 :pattern ( ($generated@@137 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@137 $generated@@594 $generated@@44))
 :pattern ( ($generated@@137 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@437) ($generated@@137 $generated@@595 $generated@@45))
 :pattern ( ($generated@@137 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@155) ($generated@@137 $generated@@596 $generated@@48))
 :pattern ( ($generated@@137 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@598) ($generated@@167 $generated@@79 $generated@@4)) (= (type $generated@@599) $generated@@79)) (= (type $generated@@600) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@601) ($generated@@167 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@603  (=> (and (< $generated@@597 ($generated@@142 0)) (= (ControlFlow 0 5) (- 0 4))) ($generated@@137 ($generated@@8 (- 0 $generated@@597)) $generated@@134))))
(let (($generated@@604  (=> (and (<= ($generated@@142 0) $generated@@597) (= (ControlFlow 0 3) (- 0 2))) ($generated@@137 ($generated@@8 $generated@@597) $generated@@134))))
(let (($generated@@605  (=> (= $generated@@598 ($generated@@221 $generated@@599 $generated@@600 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@604) (=> (= (ControlFlow 0 6) 5) $generated@@603)))))
(let (($generated@@606 true))
(let (($generated@@607  (=> (= $generated@@601 ($generated@@166 $generated@@599 $generated@@600 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@606) (=> (= (ControlFlow 0 7) 6) $generated@@605)))))
(let (($generated@@608  (=> (and (and ($generated@@259 $generated@@600) ($generated@@602 $generated@@600)) (and (= 1 $generated@@139) (= (ControlFlow 0 8) 7))) $generated@@607)))
$generated@@608)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 (Int) Bool)
(declare-fun $generated@@136 (Int) Int)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@280 () Bool)
(declare-fun $generated@@281 () Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@481 (T@U Int) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@138 $generated@@139)) $generated@@140))
 :pattern ( ($generated@@138 $generated@@139))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@141 Int) ) (!  (=> (or ($generated@@137 ($generated@@136 $generated@@141)) (and (not (= 1 $generated@@134)) (<= ($generated@@136 0) $generated@@141))) (= ($generated@@135 ($generated@@136 $generated@@141)) ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@141 29))))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@136 $generated@@141)))
))))
(assert (= (type $generated@@142) $generated@@66))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
 :pattern ( ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@77 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 14) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@66)) ($generated@@145 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@145 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@69 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@79) (= (type $generated@@218) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@219) ($generated@@68 $generated@@4))) (= (type $generated@@221) $generated@@79)) (= (type $generated@@222) ($generated@@68 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@69 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@79) (= (type $generated@@230) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@231) ($generated@@68 $generated@@4))) (= (type $generated@@233) $generated@@79)) (= (type $generated@@234) ($generated@@68 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@149)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@66) (= (type $generated@@241) $generated@@66)) (= (type $generated@@242) $generated@@158)) (= (type $generated@@243) $generated@@158)) (= ($generated@@145 ($generated@@236 $generated@@242 $generated@@243) ($generated@@148 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@145 ($generated@@236 $generated@@242 $generated@@243) ($generated@@148 $generated@@240 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@149) (= (type $generated@@245) $generated@@149)) (= ($generated@@155 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@155 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@66)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@249) $generated@@66)) (= ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@158) ($generated@@0 ($generated@@83 $generated@@248 $generated@@250))) ($generated@@237 $generated@@250 $generated@@249))
 :pattern ( ($generated@@83 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@66)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@254) $generated@@66)) (= ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@158) ($generated@@0 ($generated@@83 $generated@@253 $generated@@255))) ($generated@@237 $generated@@255 $generated@@254))
 :pattern ( ($generated@@83 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@136 $generated@@256) $generated@@256)
 :pattern ( ($generated@@136 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@138 $generated@@257) $generated@@257)
 :pattern ( ($generated@@138 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@66) (= (type $generated@@261) $generated@@66)) (= (type $generated@@262) $generated@@158)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@258 $generated@@264)) (= ($generated@@76 ($generated@@236 $generated@@262 $generated@@263) ($generated@@148 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@262 $generated@@263) ($generated@@148 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@70)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@149) (= ($generated@@147 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@149) ($generated@@147 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@158) (= (type $generated@@270) $generated@@158)) (= $generated@@268 ($generated@@236 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@2) (= ($generated@@145 $generated@@279 $generated@@142) (<= ($generated@@136 0) ($generated $generated@@279))))
 :pattern ( ($generated@@145 $generated@@279 $generated@@142))
)))
(assert  (=> (<= 2 $generated@@134) (=> (or $generated@@280 (not (= 2 $generated@@134))) (and ($generated@@0 ($generated@@138 ($generated@@11 ($generated@@135 ($generated@@136 $generated@@281))))) (<= ($generated@@136 0) $generated@@281)))))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@158)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@66) (= (type $generated@@286) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@259 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@76 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@259 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@78 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@81 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@78 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@83 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@78 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@78 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@83 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@83 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@81 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@78 $generated@@330 $generated@@2)) (= ($generated@@164 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@83 $generated@@329 $generated@@331))) (<= ($generated ($generated@@83 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@83 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@164 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@158) ($generated@@237 $generated@@335 $generated@@142)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@335)) $generated@@335) ($generated@@145 ($generated@@332 $generated@@2 $generated@@335) $generated@@142)))
 :pattern ( ($generated@@237 $generated@@335 $generated@@142))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@297 (type $generated@@336))))
(let (($generated@@338 ($generated@@296 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@295 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@294 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@293 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@297 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@78 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@297 (type $generated@@343))))
(let (($generated@@345 ($generated@@296 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@295 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@294 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@83 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@315 (type $generated@@347))))
(let (($generated@@349 ($generated@@314 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@313 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@312 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@311 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@315 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@78 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@315 (type $generated@@354))))
(let (($generated@@356 ($generated@@314 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@313 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@312 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@83 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@359) $generated@@66)) (= ($generated@@145 $generated@@358 ($generated@@163 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@358 $generated@@360)))) ($generated@@237 $generated@@360 $generated@@359))
 :pattern ( ($generated@@83 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@145 $generated@@358 ($generated@@163 $generated@@359)))
)))
(assert  (=> (<= 2 $generated@@134) (=> (or $generated@@280 (not (= 2 $generated@@134))) (= $generated@@281 ($generated@@136 17)))))
(assert  (=> (<= 2 $generated@@134) (=> (or $generated@@280 (not (= 2 $generated@@134))) (= $generated@@281 ($generated@@136 17)))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@246 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@158) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@259 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@246 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@366) $generated@@66)) (= (type $generated@@367) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@365 ($generated@@251 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@158) ($generated@@0 ($generated@@83 $generated@@365 $generated@@368))) ($generated@@259 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@83 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@76 $generated@@365 ($generated@@251 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@83 ($generated@@288 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@83 ($generated@@288 $generated@@370) $generated@@369)))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@371 Int) ) (!  (=> (or ($generated@@137 $generated@@371) (and (not (= 1 $generated@@134)) (<= ($generated@@136 0) $generated@@371))) true)
 :pattern ( ($generated@@135 $generated@@371))
))))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@297 (type $generated@@375))))
(let (($generated@@377 ($generated@@296 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@295 $generated@@158 $generated@@158)) (= (type $generated@@379) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@378) ($generated@@156 ($generated@@332 $generated@@149 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@156 ($generated@@332 $generated@@149 $generated@@379))) ($generated@@157 ($generated@@332 $generated@@149 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@315 (type $generated@@383))))
(let (($generated@@385 ($generated@@314 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@313 $generated@@158 $generated@@158)) (= (type $generated@@387) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@83 ($generated@@311 $generated@@386) ($generated@@156 ($generated@@332 $generated@@149 $generated@@387)))) (= ($generated@@83 ($generated@@381 $generated@@386) ($generated@@156 ($generated@@332 $generated@@149 $generated@@387))) ($generated@@157 ($generated@@332 $generated@@149 $generated@@387))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@296 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@295 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@340 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@340 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@314 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@313 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@83 ($generated@@351 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@83 ($generated@@311 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@83 ($generated@@351 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@66)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@295 $generated@@158 $generated@@158)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@401) $generated@@405))) (and ($generated@@259 ($generated@@83 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@259 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@66)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@313 $generated@@158 $generated@@158)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@409) $generated@@413))) (and ($generated@@259 ($generated@@83 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@259 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@78 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@315 (type $generated@@416))))
(let (($generated@@418 ($generated@@314 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@313 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@312 $generated@@418 $generated@@417)) (= ($generated@@311 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@311 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@315 (type $generated@@419))))
(let (($generated@@421 ($generated@@314 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@313 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@312 $generated@@421 $generated@@420)) (= ($generated@@351 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@351 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@315 (type $generated@@422))))
(let (($generated@@424 ($generated@@314 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@313 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@312 $generated@@424 $generated@@423)) (= ($generated@@380 $generated@@422) ($generated@@414 $generated@@158))))))
 :pattern ( ($generated@@380 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@297 (type $generated@@425))))
(let (($generated@@427 ($generated@@296 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@295 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@294 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@158) (= (type $generated@@429) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@425) ($generated@@282 ($generated@@236 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@372 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@315 (type $generated@@430))))
(let (($generated@@432 ($generated@@314 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@313 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@312 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@380 $generated@@430) ($generated@@282 ($generated@@236 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@380 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@158) ($generated@@237 $generated@@435 $generated@@46)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@435)) $generated@@435) ($generated@@145 ($generated@@332 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@158) ($generated@@237 $generated@@436 $generated@@47)) (and (= ($generated@@282 ($generated@@332 $generated@@3 $generated@@436)) $generated@@436) ($generated@@145 ($generated@@332 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@158) ($generated@@237 $generated@@437 $generated@@44)) (and (= ($generated@@282 ($generated@@332 $generated@@4 $generated@@437)) $generated@@437) ($generated@@145 ($generated@@332 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 20))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@158) ($generated@@237 $generated@@439 $generated@@45)) (and (= ($generated@@282 ($generated@@332 $generated@@438 $generated@@439)) $generated@@439) ($generated@@145 ($generated@@332 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@66) (= ($generated@@237 ($generated@@282 $generated@@440) $generated@@441) ($generated@@145 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@237 ($generated@@282 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@81 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@78 $generated@@443 $generated@@2)) (<= 0 ($generated@@287 $generated@@442))))
 :pattern ( ($generated@@287 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@274 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@273 $generated@@445)) (<= 0 ($generated@@272 $generated@@444))))
 :pattern ( ($generated@@272 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@398 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@398 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@66) (= (type $generated@@453) $generated@@66)) (= ($generated@@450 ($generated@@398 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@74 ($generated@@398 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@406 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@406 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@406 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@74 ($generated@@406 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@158) (= (type $generated@@467) $generated@@158)) (= ($generated@@265 ($generated@@236 $generated@@466 $generated@@467)) $generated@@62))
 :pattern ( ($generated@@236 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@148 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@148 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@472 ($generated@@148 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@148 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@158) (= (type $generated@@477) $generated@@158)) (= ($generated@@156 ($generated@@236 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@236 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@158) (= (type $generated@@479) $generated@@158)) (= ($generated@@157 ($generated@@236 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@236 $generated@@478 $generated@@479))
)))
(assert  (and (forall (($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@482))
)) (forall (($generated@@483 T@U) ($generated@@484 Int) ) (! (let (($generated@@485 ($generated@@274 (type $generated@@483))))
(= (type ($generated@@481 $generated@@483 $generated@@484)) $generated@@485))
 :pattern ( ($generated@@481 $generated@@483 $generated@@484))
))))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@273 $generated@@158)) (= (type $generated@@487) $generated@@66)) (= (type $generated@@488) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@486 ($generated@@480 $generated@@487) $generated@@488) (forall (($generated@@489 Int) ) (!  (=> (and (<= 0 $generated@@489) (< $generated@@489 ($generated@@272 $generated@@486))) ($generated@@259 ($generated@@481 $generated@@486 $generated@@489) $generated@@487 $generated@@488))
 :pattern ( ($generated@@481 $generated@@486 $generated@@489))
))))
 :pattern ( ($generated@@76 $generated@@486 ($generated@@480 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@491 Int) ) (! (= ($generated@@490 ($generated@@77 $generated@@491)) $generated@@491)
 :pattern ( ($generated@@77 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@246 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@246 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@246 $generated@@495)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@251 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@251 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@251 $generated@@499)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@163 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@163 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@163 $generated@@503)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@480 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@480 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@480 $generated@@507)) $generated@@57))
 :pattern ( ($generated@@480 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(= ($generated@@332 $generated@@509 ($generated@@282 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@282 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@295 $generated@@158 $generated@@158)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@145 $generated@@510 ($generated@@398 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@510) $generated@@513))) (and ($generated@@237 ($generated@@83 ($generated@@373 $generated@@510) $generated@@513) $generated@@512) ($generated@@237 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@145 $generated@@510 ($generated@@398 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@313 $generated@@158 $generated@@158)) (= (type $generated@@515) $generated@@66)) (= (type $generated@@516) $generated@@66)) (= ($generated@@145 $generated@@514 ($generated@@406 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@514) $generated@@517))) (and ($generated@@237 ($generated@@83 ($generated@@381 $generated@@514) $generated@@517) $generated@@516) ($generated@@237 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@514) $generated@@517))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@145 $generated@@514 ($generated@@406 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@158) (= (type $generated@@521) $generated@@158)) (< ($generated@@518 $generated@@520) ($generated@@519 ($generated@@236 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@236 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@158) (= (type $generated@@523) $generated@@158)) (< ($generated@@518 $generated@@523) ($generated@@519 ($generated@@236 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@236 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@158) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) ($generated@@237 $generated@@524 ($generated@@398 $generated@@525 $generated@@526))) (and (= ($generated@@282 ($generated@@332 ($generated@@295 $generated@@158 $generated@@158) $generated@@524)) $generated@@524) ($generated@@145 ($generated@@332 ($generated@@295 $generated@@158 $generated@@158) $generated@@524) ($generated@@398 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@237 $generated@@524 ($generated@@398 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@158) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) $generated@@66)) ($generated@@237 $generated@@527 ($generated@@406 $generated@@528 $generated@@529))) (and (= ($generated@@282 ($generated@@332 ($generated@@313 $generated@@158 $generated@@158) $generated@@527)) $generated@@527) ($generated@@145 ($generated@@332 ($generated@@313 $generated@@158 $generated@@158) $generated@@527) ($generated@@406 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@237 $generated@@527 ($generated@@406 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@66) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) $generated@@158)) ($generated@@237 $generated@@532 ($generated@@148 $generated@@530 $generated@@531))) (and (= ($generated@@282 ($generated@@332 $generated@@149 $generated@@532)) $generated@@532) ($generated@@145 ($generated@@332 $generated@@149 $generated@@532) ($generated@@148 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@237 $generated@@532 ($generated@@148 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
 (not ($generated@@0 ($generated@@83 ($generated@@414 $generated@@534) $generated@@533))))
 :pattern ( (let (($generated@@534 (type $generated@@533)))
($generated@@83 ($generated@@414 $generated@@534) $generated@@533)))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@71)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@66) (= (type $generated@@538) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@537 $generated@@538)) $generated@@63) (= ($generated@@535 ($generated@@148 $generated@@537 $generated@@538)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@149) (= ($generated@@518 ($generated@@282 $generated@@539)) ($generated@@519 $generated@@539)))
 :pattern ( ($generated@@518 ($generated@@282 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@158) ($generated@@237 $generated@@540 ($generated@@77 0))) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@540)) $generated@@540) ($generated@@145 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@540) ($generated@@77 0))))
 :pattern ( ($generated@@237 $generated@@540 ($generated@@77 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@158) (= (type $generated@@542) $generated@@66)) ($generated@@237 $generated@@541 ($generated@@246 $generated@@542))) (and (= ($generated@@282 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@541)) $generated@@541) ($generated@@145 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@541) ($generated@@246 $generated@@542))))
 :pattern ( ($generated@@237 $generated@@541 ($generated@@246 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@158) (= (type $generated@@544) $generated@@66)) ($generated@@237 $generated@@543 ($generated@@251 $generated@@544))) (and (= ($generated@@282 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@543)) $generated@@543) ($generated@@145 ($generated@@332 ($generated@@78 $generated@@158 $generated@@4) $generated@@543) ($generated@@251 $generated@@544))))
 :pattern ( ($generated@@237 $generated@@543 ($generated@@251 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@158) (= (type $generated@@546) $generated@@66)) ($generated@@237 $generated@@545 ($generated@@163 $generated@@546))) (and (= ($generated@@282 ($generated@@332 ($generated@@78 $generated@@158 $generated@@2) $generated@@545)) $generated@@545) ($generated@@145 ($generated@@332 ($generated@@78 $generated@@158 $generated@@2) $generated@@545) ($generated@@163 $generated@@546))))
 :pattern ( ($generated@@237 $generated@@545 ($generated@@163 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@158) (= (type $generated@@548) $generated@@66)) ($generated@@237 $generated@@547 ($generated@@480 $generated@@548))) (and (= ($generated@@282 ($generated@@332 ($generated@@273 $generated@@158) $generated@@547)) $generated@@547) ($generated@@145 ($generated@@332 ($generated@@273 $generated@@158) $generated@@547) ($generated@@480 $generated@@548))))
 :pattern ( ($generated@@237 $generated@@547 ($generated@@480 $generated@@548)))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@549 Int) ) (!  (=> (or ($generated@@137 $generated@@549) (and (not (= 1 $generated@@134)) (<= ($generated@@136 0) $generated@@549))) (= ($generated@@135 $generated@@549) (< $generated@@549 29)))
 :pattern ( ($generated@@135 $generated@@549))
))))
(assert (= ($generated@@74 $generated@@142) $generated@@61))
(assert (= ($generated@@535 $generated@@142) $generated@@64))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@550 ($generated@@163 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@550 $generated@@553)))) ($generated@@259 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@83 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@163 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@149) (= (type $generated@@555) $generated@@66)) (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@556) (and ($generated@@147 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@66) ($generated@@76 $generated@@554 ($generated@@148 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@76 $generated@@554 ($generated@@148 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@259 ($generated@@156 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@259 ($generated@@156 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@149) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@560) (and ($generated@@147 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@66) ($generated@@76 $generated@@558 ($generated@@148 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@76 $generated@@558 ($generated@@148 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@259 ($generated@@157 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@259 ($generated@@157 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@158) (= (type $generated@@563) $generated@@158)) (= ($generated@@236 ($generated@@138 $generated@@562) ($generated@@138 $generated@@563)) ($generated@@138 ($generated@@236 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@236 ($generated@@138 $generated@@562) ($generated@@138 $generated@@563)))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@136 $generated@@564))) ($generated@@138 ($generated@@282 ($generated@@8 $generated@@564))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@136 $generated@@564))))
)))
(assert (forall (($generated@@565 T@U) ) (! (= ($generated@@282 ($generated@@138 $generated@@565)) ($generated@@138 ($generated@@282 $generated@@565)))
 :pattern ( ($generated@@282 ($generated@@138 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@274 (type $generated@@566))))
 (=> (and (= (type $generated@@566) ($generated@@273 $generated@@567)) (= ($generated@@272 $generated@@566) 0)) (= $generated@@566 ($generated@@271 $generated@@567))))
 :pattern ( ($generated@@272 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@569)))
 (=> (and (and (= (type $generated@@568) ($generated@@78 $generated@@571 $generated@@2)) (= (type $generated@@570) $generated@@2)) (<= 0 ($generated $generated@@570))) (= ($generated@@287 ($generated@@84 $generated@@568 $generated@@569 $generated@@570)) (+ (- ($generated@@287 $generated@@568) ($generated ($generated@@83 $generated@@568 $generated@@569))) ($generated $generated@@570)))))
 :pattern ( ($generated@@287 ($generated@@84 $generated@@568 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@2)) ($generated@@76 $generated@@573 $generated@@46 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@46 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@3)) ($generated@@76 $generated@@575 $generated@@47 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@47 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@4)) ($generated@@76 $generated@@577 $generated@@44 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@44 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@438)) ($generated@@76 $generated@@579 $generated@@45 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@45 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@581) $generated@@158)) ($generated@@76 $generated@@581 $generated@@48 $generated@@580))
 :pattern ( ($generated@@76 $generated@@581 $generated@@48 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@273 $generated@@158)) (= (type $generated@@583) $generated@@66)) (= ($generated@@145 $generated@@582 ($generated@@480 $generated@@583)) (forall (($generated@@584 Int) ) (!  (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@272 $generated@@582))) ($generated@@237 ($generated@@481 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@481 $generated@@582 $generated@@584))
))))
 :pattern ( ($generated@@145 $generated@@582 ($generated@@480 $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 Int) ) (!  (=> (= (type $generated@@586) ($generated@@273 $generated@@158)) (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@272 $generated@@586))) (< ($generated@@519 ($generated@@332 $generated@@149 ($generated@@481 $generated@@586 $generated@@587))) ($generated@@585 $generated@@586))))
 :pattern ( ($generated@@519 ($generated@@332 $generated@@149 ($generated@@481 $generated@@586 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@295 $generated@@158 $generated@@158)) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@66)) ($generated@@145 $generated@@588 ($generated@@398 $generated@@589 $generated@@590))) (and (and ($generated@@145 ($generated@@293 $generated@@588) ($generated@@246 $generated@@589)) ($generated@@145 ($generated@@340 $generated@@588) ($generated@@246 $generated@@590))) ($generated@@145 ($generated@@372 $generated@@588) ($generated@@246 ($generated@@148 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@145 $generated@@588 ($generated@@398 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@313 $generated@@158 $generated@@158)) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) $generated@@66)) ($generated@@145 $generated@@591 ($generated@@406 $generated@@592 $generated@@593))) (and (and ($generated@@145 ($generated@@311 $generated@@591) ($generated@@251 $generated@@592)) ($generated@@145 ($generated@@351 $generated@@591) ($generated@@251 $generated@@593))) ($generated@@145 ($generated@@380 $generated@@591) ($generated@@251 ($generated@@148 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@145 $generated@@591 ($generated@@406 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@2) ($generated@@145 $generated@@594 $generated@@46))
 :pattern ( ($generated@@145 $generated@@594 $generated@@46))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@3) ($generated@@145 $generated@@595 $generated@@47))
 :pattern ( ($generated@@145 $generated@@595 $generated@@47))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@4) ($generated@@145 $generated@@596 $generated@@44))
 :pattern ( ($generated@@145 $generated@@596 $generated@@44))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@438) ($generated@@145 $generated@@597 $generated@@45))
 :pattern ( ($generated@@145 $generated@@597 $generated@@45))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@158) ($generated@@145 $generated@@598 $generated@@48))
 :pattern ( ($generated@@145 $generated@@598 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@599) ($generated@@170 $generated@@79 $generated@@4)) (= (type $generated@@600) $generated@@79)) (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@602) ($generated@@170 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@604  (=> (= (ControlFlow 0 4) (- 0 3)) (=> ($generated@@137 ($generated@@136 $generated@@281)) (or ($generated@@0 ($generated@@138 ($generated@@11 ($generated@@135 ($generated@@136 $generated@@281))))) ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@281 29)))))))))
(let (($generated@@605  (=> (= $generated@@599 ($generated@@224 $generated@@600 $generated@@601 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@145 ($generated@@8 ($generated@@136 17)) $generated@@142)) (=> ($generated@@145 ($generated@@8 ($generated@@136 17)) $generated@@142) (=> (= $generated@@281 ($generated@@136 17)) (=> (and ($generated@@145 ($generated@@8 $generated@@281) $generated@@142) (= (ControlFlow 0 5) 4)) $generated@@604)))))))
(let (($generated@@606  (=> (and (<= ($generated@@136 0) $generated@@281) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@607  (=> (= $generated@@602 ($generated@@169 $generated@@600 $generated@@601 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@606) (=> (= (ControlFlow 0 7) 5) $generated@@605)))))
(let (($generated@@608  (=> (and (and ($generated@@258 $generated@@601) ($generated@@603 $generated@@601)) (and (= 2 $generated@@134) (= (ControlFlow 0 8) 7))) $generated@@607)))
$generated@@608))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 (Int) Bool)
(declare-fun $generated@@136 (Int) Int)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@330 (T@T T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@359 () Bool)
(declare-fun $generated@@360 () Int)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@481 (T@U Int) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@138 $generated@@139)) $generated@@140))
 :pattern ( ($generated@@138 $generated@@139))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@141 Int) ) (!  (=> (or ($generated@@137 ($generated@@136 $generated@@141)) (and (not (= 1 $generated@@134)) (<= ($generated@@136 0) $generated@@141))) (= ($generated@@135 ($generated@@136 $generated@@141)) ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@141 29))))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@136 $generated@@141)))
))))
(assert (= (type $generated@@142) $generated@@66))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
 :pattern ( ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@77 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 14) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@66)) ($generated@@145 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@145 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@69 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@79) (= (type $generated@@218) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@219) ($generated@@68 $generated@@4))) (= (type $generated@@221) $generated@@79)) (= (type $generated@@222) ($generated@@68 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@69 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@79) (= (type $generated@@230) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@231) ($generated@@68 $generated@@4))) (= (type $generated@@233) $generated@@79)) (= (type $generated@@234) ($generated@@68 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@149)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@66) (= (type $generated@@241) $generated@@66)) (= (type $generated@@242) $generated@@158)) (= (type $generated@@243) $generated@@158)) (= ($generated@@145 ($generated@@236 $generated@@242 $generated@@243) ($generated@@148 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@145 ($generated@@236 $generated@@242 $generated@@243) ($generated@@148 $generated@@240 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@149) (= (type $generated@@245) $generated@@149)) (= ($generated@@155 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@155 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@66)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@249) $generated@@66)) (= ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@158) ($generated@@0 ($generated@@83 $generated@@248 $generated@@250))) ($generated@@237 $generated@@250 $generated@@249))
 :pattern ( ($generated@@83 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@66)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@254) $generated@@66)) (= ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@158) ($generated@@0 ($generated@@83 $generated@@253 $generated@@255))) ($generated@@237 $generated@@255 $generated@@254))
 :pattern ( ($generated@@83 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@136 $generated@@256) $generated@@256)
 :pattern ( ($generated@@136 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@138 $generated@@257) $generated@@257)
 :pattern ( ($generated@@138 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@66) (= (type $generated@@261) $generated@@66)) (= (type $generated@@262) $generated@@158)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@258 $generated@@264)) (= ($generated@@76 ($generated@@236 $generated@@262 $generated@@263) ($generated@@148 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@262 $generated@@263) ($generated@@148 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@70)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@149) (= ($generated@@147 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@149) ($generated@@147 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@158) (= (type $generated@@270) $generated@@158)) (= $generated@@268 ($generated@@236 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@2) (= ($generated@@145 $generated@@279 $generated@@142) (<= ($generated@@136 0) ($generated $generated@@279))))
 :pattern ( ($generated@@145 $generated@@279 $generated@@142))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@158)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@66) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@76 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@78 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@81 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@78 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@83 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@78 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@78 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@81 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@78 $generated@@328 $generated@@2)) (= ($generated@@164 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@83 $generated@@327 $generated@@329))) (<= ($generated ($generated@@83 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@83 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@164 $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@158) ($generated@@237 $generated@@333 $generated@@142)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@333)) $generated@@333) ($generated@@145 ($generated@@330 $generated@@2 $generated@@333) $generated@@142)))
 :pattern ( ($generated@@237 $generated@@333 $generated@@142))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@295 (type $generated@@334))))
(let (($generated@@336 ($generated@@294 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@293 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@292 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@291 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@78 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@295 (type $generated@@341))))
(let (($generated@@343 ($generated@@294 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@293 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@292 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@313 (type $generated@@345))))
(let (($generated@@347 ($generated@@312 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@311 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@310 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@309 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@78 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@313 (type $generated@@352))))
(let (($generated@@354 ($generated@@312 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@311 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@310 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@83 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@357) $generated@@66)) (= ($generated@@145 $generated@@356 ($generated@@163 $generated@@357)) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@356 $generated@@358)))) ($generated@@237 $generated@@358 $generated@@357))
 :pattern ( ($generated@@83 $generated@@356 $generated@@358))
))))
 :pattern ( ($generated@@145 $generated@@356 ($generated@@163 $generated@@357)))
)))
(assert  (=> (<= 2 $generated@@134) (=> (or $generated@@359 (not (= 2 $generated@@134))) (= $generated@@360 ($generated@@136 17)))))
(assert  (=> (<= 2 $generated@@134) (=> (or $generated@@359 (not (= 2 $generated@@134))) (= $generated@@360 ($generated@@136 17)))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@246 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@158) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@259 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@246 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@366) $generated@@66)) (= (type $generated@@367) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@365 ($generated@@251 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@158) ($generated@@0 ($generated@@83 $generated@@365 $generated@@368))) ($generated@@259 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@83 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@76 $generated@@365 ($generated@@251 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@83 ($generated@@286 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@83 ($generated@@286 $generated@@370) $generated@@369)))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@371 Int) ) (!  (=> (or ($generated@@137 $generated@@371) (and (not (= 1 $generated@@134)) (<= ($generated@@136 0) $generated@@371))) true)
 :pattern ( ($generated@@135 $generated@@371))
))))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@295 (type $generated@@375))))
(let (($generated@@377 ($generated@@294 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@293 $generated@@158 $generated@@158)) (= (type $generated@@379) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@378) ($generated@@156 ($generated@@330 $generated@@149 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@156 ($generated@@330 $generated@@149 $generated@@379))) ($generated@@157 ($generated@@330 $generated@@149 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@313 (type $generated@@383))))
(let (($generated@@385 ($generated@@312 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@311 $generated@@158 $generated@@158)) (= (type $generated@@387) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@386) ($generated@@156 ($generated@@330 $generated@@149 $generated@@387)))) (= ($generated@@83 ($generated@@381 $generated@@386) ($generated@@156 ($generated@@330 $generated@@149 $generated@@387))) ($generated@@157 ($generated@@330 $generated@@149 $generated@@387))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@294 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@293 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@338 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@338 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@312 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@311 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@83 ($generated@@349 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@66)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@293 $generated@@158 $generated@@158)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@401) $generated@@405))) (and ($generated@@259 ($generated@@83 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@259 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@66)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@311 $generated@@158 $generated@@158)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@409) $generated@@413))) (and ($generated@@259 ($generated@@83 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@259 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@78 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@313 (type $generated@@416))))
(let (($generated@@418 ($generated@@312 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@311 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@310 $generated@@418 $generated@@417)) (= ($generated@@309 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@309 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@313 (type $generated@@419))))
(let (($generated@@421 ($generated@@312 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@311 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@310 $generated@@421 $generated@@420)) (= ($generated@@349 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@349 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@313 (type $generated@@422))))
(let (($generated@@424 ($generated@@312 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@311 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@310 $generated@@424 $generated@@423)) (= ($generated@@380 $generated@@422) ($generated@@414 $generated@@158))))))
 :pattern ( ($generated@@380 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@295 (type $generated@@425))))
(let (($generated@@427 ($generated@@294 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@293 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@292 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@158) (= (type $generated@@429) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@425) ($generated@@280 ($generated@@236 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@372 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@313 (type $generated@@430))))
(let (($generated@@432 ($generated@@312 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@311 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@310 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@380 $generated@@430) ($generated@@280 ($generated@@236 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@380 $generated@@430))
)))
(assert  (=> (<= 2 $generated@@134) (=> (or $generated@@359 (not (= 2 $generated@@134))) ($generated@@0 ($generated@@138 ($generated@@11 ($generated@@135 ($generated@@136 $generated@@360))))))))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@158) ($generated@@237 $generated@@435 $generated@@46)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@435)) $generated@@435) ($generated@@145 ($generated@@330 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@158) ($generated@@237 $generated@@436 $generated@@47)) (and (= ($generated@@280 ($generated@@330 $generated@@3 $generated@@436)) $generated@@436) ($generated@@145 ($generated@@330 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@158) ($generated@@237 $generated@@437 $generated@@44)) (and (= ($generated@@280 ($generated@@330 $generated@@4 $generated@@437)) $generated@@437) ($generated@@145 ($generated@@330 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 20))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@158) ($generated@@237 $generated@@439 $generated@@45)) (and (= ($generated@@280 ($generated@@330 $generated@@438 $generated@@439)) $generated@@439) ($generated@@145 ($generated@@330 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@66) (= ($generated@@237 ($generated@@280 $generated@@440) $generated@@441) ($generated@@145 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@237 ($generated@@280 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@81 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@78 $generated@@443 $generated@@2)) (<= 0 ($generated@@285 $generated@@442))))
 :pattern ( ($generated@@285 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@274 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@273 $generated@@445)) (<= 0 ($generated@@272 $generated@@444))))
 :pattern ( ($generated@@272 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@398 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@398 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@66) (= (type $generated@@453) $generated@@66)) (= ($generated@@450 ($generated@@398 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@74 ($generated@@398 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@406 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@406 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@406 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@74 ($generated@@406 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@158) (= (type $generated@@467) $generated@@158)) (= ($generated@@265 ($generated@@236 $generated@@466 $generated@@467)) $generated@@62))
 :pattern ( ($generated@@236 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@148 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@148 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@472 ($generated@@148 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@148 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@158) (= (type $generated@@477) $generated@@158)) (= ($generated@@156 ($generated@@236 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@236 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@158) (= (type $generated@@479) $generated@@158)) (= ($generated@@157 ($generated@@236 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@236 $generated@@478 $generated@@479))
)))
(assert  (and (forall (($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@482))
)) (forall (($generated@@483 T@U) ($generated@@484 Int) ) (! (let (($generated@@485 ($generated@@274 (type $generated@@483))))
(= (type ($generated@@481 $generated@@483 $generated@@484)) $generated@@485))
 :pattern ( ($generated@@481 $generated@@483 $generated@@484))
))))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@273 $generated@@158)) (= (type $generated@@487) $generated@@66)) (= (type $generated@@488) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@486 ($generated@@480 $generated@@487) $generated@@488) (forall (($generated@@489 Int) ) (!  (=> (and (<= 0 $generated@@489) (< $generated@@489 ($generated@@272 $generated@@486))) ($generated@@259 ($generated@@481 $generated@@486 $generated@@489) $generated@@487 $generated@@488))
 :pattern ( ($generated@@481 $generated@@486 $generated@@489))
))))
 :pattern ( ($generated@@76 $generated@@486 ($generated@@480 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@491 Int) ) (! (= ($generated@@490 ($generated@@77 $generated@@491)) $generated@@491)
 :pattern ( ($generated@@77 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@246 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@246 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@246 $generated@@495)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@251 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@251 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@251 $generated@@499)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@163 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@163 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@163 $generated@@503)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@480 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@480 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@480 $generated@@507)) $generated@@57))
 :pattern ( ($generated@@480 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(= ($generated@@330 $generated@@509 ($generated@@280 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@280 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@293 $generated@@158 $generated@@158)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@145 $generated@@510 ($generated@@398 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@510) $generated@@513))) (and ($generated@@237 ($generated@@83 ($generated@@373 $generated@@510) $generated@@513) $generated@@512) ($generated@@237 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@145 $generated@@510 ($generated@@398 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@311 $generated@@158 $generated@@158)) (= (type $generated@@515) $generated@@66)) (= (type $generated@@516) $generated@@66)) (= ($generated@@145 $generated@@514 ($generated@@406 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@514) $generated@@517))) (and ($generated@@237 ($generated@@83 ($generated@@381 $generated@@514) $generated@@517) $generated@@516) ($generated@@237 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@514) $generated@@517))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@145 $generated@@514 ($generated@@406 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@158) (= (type $generated@@521) $generated@@158)) (< ($generated@@518 $generated@@520) ($generated@@519 ($generated@@236 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@236 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@158) (= (type $generated@@523) $generated@@158)) (< ($generated@@518 $generated@@523) ($generated@@519 ($generated@@236 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@236 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@158) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) ($generated@@237 $generated@@524 ($generated@@398 $generated@@525 $generated@@526))) (and (= ($generated@@280 ($generated@@330 ($generated@@293 $generated@@158 $generated@@158) $generated@@524)) $generated@@524) ($generated@@145 ($generated@@330 ($generated@@293 $generated@@158 $generated@@158) $generated@@524) ($generated@@398 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@237 $generated@@524 ($generated@@398 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@158) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) $generated@@66)) ($generated@@237 $generated@@527 ($generated@@406 $generated@@528 $generated@@529))) (and (= ($generated@@280 ($generated@@330 ($generated@@311 $generated@@158 $generated@@158) $generated@@527)) $generated@@527) ($generated@@145 ($generated@@330 ($generated@@311 $generated@@158 $generated@@158) $generated@@527) ($generated@@406 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@237 $generated@@527 ($generated@@406 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@66) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) $generated@@158)) ($generated@@237 $generated@@532 ($generated@@148 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@330 $generated@@149 $generated@@532)) $generated@@532) ($generated@@145 ($generated@@330 $generated@@149 $generated@@532) ($generated@@148 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@237 $generated@@532 ($generated@@148 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
 (not ($generated@@0 ($generated@@83 ($generated@@414 $generated@@534) $generated@@533))))
 :pattern ( (let (($generated@@534 (type $generated@@533)))
($generated@@83 ($generated@@414 $generated@@534) $generated@@533)))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@71)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@66) (= (type $generated@@538) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@537 $generated@@538)) $generated@@63) (= ($generated@@535 ($generated@@148 $generated@@537 $generated@@538)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@149) (= ($generated@@518 ($generated@@280 $generated@@539)) ($generated@@519 $generated@@539)))
 :pattern ( ($generated@@518 ($generated@@280 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@158) ($generated@@237 $generated@@540 ($generated@@77 0))) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@540)) $generated@@540) ($generated@@145 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@540) ($generated@@77 0))))
 :pattern ( ($generated@@237 $generated@@540 ($generated@@77 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@158) (= (type $generated@@542) $generated@@66)) ($generated@@237 $generated@@541 ($generated@@246 $generated@@542))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@541)) $generated@@541) ($generated@@145 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@541) ($generated@@246 $generated@@542))))
 :pattern ( ($generated@@237 $generated@@541 ($generated@@246 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@158) (= (type $generated@@544) $generated@@66)) ($generated@@237 $generated@@543 ($generated@@251 $generated@@544))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@543)) $generated@@543) ($generated@@145 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@543) ($generated@@251 $generated@@544))))
 :pattern ( ($generated@@237 $generated@@543 ($generated@@251 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@158) (= (type $generated@@546) $generated@@66)) ($generated@@237 $generated@@545 ($generated@@163 $generated@@546))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@158 $generated@@2) $generated@@545)) $generated@@545) ($generated@@145 ($generated@@330 ($generated@@78 $generated@@158 $generated@@2) $generated@@545) ($generated@@163 $generated@@546))))
 :pattern ( ($generated@@237 $generated@@545 ($generated@@163 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@158) (= (type $generated@@548) $generated@@66)) ($generated@@237 $generated@@547 ($generated@@480 $generated@@548))) (and (= ($generated@@280 ($generated@@330 ($generated@@273 $generated@@158) $generated@@547)) $generated@@547) ($generated@@145 ($generated@@330 ($generated@@273 $generated@@158) $generated@@547) ($generated@@480 $generated@@548))))
 :pattern ( ($generated@@237 $generated@@547 ($generated@@480 $generated@@548)))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@549 Int) ) (!  (=> (or ($generated@@137 $generated@@549) (and (not (= 1 $generated@@134)) (<= ($generated@@136 0) $generated@@549))) (= ($generated@@135 $generated@@549) (< $generated@@549 29)))
 :pattern ( ($generated@@135 $generated@@549))
))))
(assert (= ($generated@@74 $generated@@142) $generated@@61))
(assert (= ($generated@@535 $generated@@142) $generated@@64))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@550 ($generated@@163 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@550 $generated@@553)))) ($generated@@259 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@83 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@163 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@149) (= (type $generated@@555) $generated@@66)) (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@556) (and ($generated@@147 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@66) ($generated@@76 $generated@@554 ($generated@@148 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@76 $generated@@554 ($generated@@148 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@259 ($generated@@156 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@259 ($generated@@156 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@149) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@560) (and ($generated@@147 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@66) ($generated@@76 $generated@@558 ($generated@@148 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@76 $generated@@558 ($generated@@148 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@259 ($generated@@157 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@259 ($generated@@157 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@158) (= (type $generated@@563) $generated@@158)) (= ($generated@@236 ($generated@@138 $generated@@562) ($generated@@138 $generated@@563)) ($generated@@138 ($generated@@236 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@236 ($generated@@138 $generated@@562) ($generated@@138 $generated@@563)))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@136 $generated@@564))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@564))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@136 $generated@@564))))
)))
(assert (forall (($generated@@565 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@565)) ($generated@@138 ($generated@@280 $generated@@565)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@274 (type $generated@@566))))
 (=> (and (= (type $generated@@566) ($generated@@273 $generated@@567)) (= ($generated@@272 $generated@@566) 0)) (= $generated@@566 ($generated@@271 $generated@@567))))
 :pattern ( ($generated@@272 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@569)))
 (=> (and (and (= (type $generated@@568) ($generated@@78 $generated@@571 $generated@@2)) (= (type $generated@@570) $generated@@2)) (<= 0 ($generated $generated@@570))) (= ($generated@@285 ($generated@@84 $generated@@568 $generated@@569 $generated@@570)) (+ (- ($generated@@285 $generated@@568) ($generated ($generated@@83 $generated@@568 $generated@@569))) ($generated $generated@@570)))))
 :pattern ( ($generated@@285 ($generated@@84 $generated@@568 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@2)) ($generated@@76 $generated@@573 $generated@@46 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@46 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@3)) ($generated@@76 $generated@@575 $generated@@47 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@47 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@4)) ($generated@@76 $generated@@577 $generated@@44 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@44 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@438)) ($generated@@76 $generated@@579 $generated@@45 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@45 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@581) $generated@@158)) ($generated@@76 $generated@@581 $generated@@48 $generated@@580))
 :pattern ( ($generated@@76 $generated@@581 $generated@@48 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@273 $generated@@158)) (= (type $generated@@583) $generated@@66)) (= ($generated@@145 $generated@@582 ($generated@@480 $generated@@583)) (forall (($generated@@584 Int) ) (!  (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@272 $generated@@582))) ($generated@@237 ($generated@@481 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@481 $generated@@582 $generated@@584))
))))
 :pattern ( ($generated@@145 $generated@@582 ($generated@@480 $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 Int) ) (!  (=> (= (type $generated@@586) ($generated@@273 $generated@@158)) (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@272 $generated@@586))) (< ($generated@@519 ($generated@@330 $generated@@149 ($generated@@481 $generated@@586 $generated@@587))) ($generated@@585 $generated@@586))))
 :pattern ( ($generated@@519 ($generated@@330 $generated@@149 ($generated@@481 $generated@@586 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@293 $generated@@158 $generated@@158)) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@66)) ($generated@@145 $generated@@588 ($generated@@398 $generated@@589 $generated@@590))) (and (and ($generated@@145 ($generated@@291 $generated@@588) ($generated@@246 $generated@@589)) ($generated@@145 ($generated@@338 $generated@@588) ($generated@@246 $generated@@590))) ($generated@@145 ($generated@@372 $generated@@588) ($generated@@246 ($generated@@148 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@145 $generated@@588 ($generated@@398 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@311 $generated@@158 $generated@@158)) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) $generated@@66)) ($generated@@145 $generated@@591 ($generated@@406 $generated@@592 $generated@@593))) (and (and ($generated@@145 ($generated@@309 $generated@@591) ($generated@@251 $generated@@592)) ($generated@@145 ($generated@@349 $generated@@591) ($generated@@251 $generated@@593))) ($generated@@145 ($generated@@380 $generated@@591) ($generated@@251 ($generated@@148 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@145 $generated@@591 ($generated@@406 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@2) ($generated@@145 $generated@@594 $generated@@46))
 :pattern ( ($generated@@145 $generated@@594 $generated@@46))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@3) ($generated@@145 $generated@@595 $generated@@47))
 :pattern ( ($generated@@145 $generated@@595 $generated@@47))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@4) ($generated@@145 $generated@@596 $generated@@44))
 :pattern ( ($generated@@145 $generated@@596 $generated@@44))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@438) ($generated@@145 $generated@@597 $generated@@45))
 :pattern ( ($generated@@145 $generated@@597 $generated@@45))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@158) ($generated@@145 $generated@@598 $generated@@48))
 :pattern ( ($generated@@145 $generated@@598 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@599) ($generated@@170 $generated@@79 $generated@@4)) (= (type $generated@@600) $generated@@79)) (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@602) ($generated@@170 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@604  (=> (= (ControlFlow 0 5) (- 0 4)) (=> ($generated@@137 ($generated@@136 $generated@@360)) (or ($generated@@0 ($generated@@138 ($generated@@11 ($generated@@135 ($generated@@136 $generated@@360))))) ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@360 29)))))))))
(let (($generated@@605  (=> (and (and (= $generated@@599 ($generated@@224 $generated@@600 $generated@@601 $generated@@60 false)) (= $generated@@360 ($generated@@136 17))) (and ($generated@@145 ($generated@@8 $generated@@360) $generated@@46) (= (ControlFlow 0 6) 5))) $generated@@604)))
(let (($generated@@606  (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@145 ($generated@@8 ($generated@@136 $generated@@360)) $generated@@142)))))
(let (($generated@@607  (=> (= $generated@@602 ($generated@@169 $generated@@600 $generated@@601 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@606) (=> (= (ControlFlow 0 7) 6) $generated@@605)))))
(let (($generated@@608  (=> (and (and ($generated@@258 $generated@@601) ($generated@@603 $generated@@601)) (and (= 2 $generated@@134) (= (ControlFlow 0 8) 7))) $generated@@607)))
$generated@@608))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 (Int) Bool)
(declare-fun $generated@@136 (Int) Int)
(declare-fun $generated@@137 (Int) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@330 (T@T T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@356 () Bool)
(declare-fun $generated@@357 () Int)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@481 (T@U Int) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@139 T@U) ) (! (let (($generated@@140 (type $generated@@139)))
(= (type ($generated@@138 $generated@@139)) $generated@@140))
 :pattern ( ($generated@@138 $generated@@139))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@141 Int) ) (!  (=> (or ($generated@@137 ($generated@@136 $generated@@141)) (and (not (= 1 $generated@@134)) (<= ($generated@@136 0) $generated@@141))) (= ($generated@@135 ($generated@@136 $generated@@141)) ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@141 29))))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@136 $generated@@141)))
))))
(assert (= (type $generated@@142) $generated@@66))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
 :pattern ( ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@77 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 14) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@66)) ($generated@@145 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@145 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@69 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@79) (= (type $generated@@218) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@219) ($generated@@68 $generated@@4))) (= (type $generated@@221) $generated@@79)) (= (type $generated@@222) ($generated@@68 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@69 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@79) (= (type $generated@@230) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@231) ($generated@@68 $generated@@4))) (= (type $generated@@233) $generated@@79)) (= (type $generated@@234) ($generated@@68 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@149)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@66) (= (type $generated@@241) $generated@@66)) (= (type $generated@@242) $generated@@158)) (= (type $generated@@243) $generated@@158)) (= ($generated@@145 ($generated@@236 $generated@@242 $generated@@243) ($generated@@148 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@145 ($generated@@236 $generated@@242 $generated@@243) ($generated@@148 $generated@@240 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@149) (= (type $generated@@245) $generated@@149)) (= ($generated@@155 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@155 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@66)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@249) $generated@@66)) (= ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@158) ($generated@@0 ($generated@@83 $generated@@248 $generated@@250))) ($generated@@237 $generated@@250 $generated@@249))
 :pattern ( ($generated@@83 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@66)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@254) $generated@@66)) (= ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@158) ($generated@@0 ($generated@@83 $generated@@253 $generated@@255))) ($generated@@237 $generated@@255 $generated@@254))
 :pattern ( ($generated@@83 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@136 $generated@@256) $generated@@256)
 :pattern ( ($generated@@136 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@138 $generated@@257) $generated@@257)
 :pattern ( ($generated@@138 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@66) (= (type $generated@@261) $generated@@66)) (= (type $generated@@262) $generated@@158)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@258 $generated@@264)) (= ($generated@@76 ($generated@@236 $generated@@262 $generated@@263) ($generated@@148 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@262 $generated@@263) ($generated@@148 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@70)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@149) (= ($generated@@147 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@149) ($generated@@147 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@158) (= (type $generated@@270) $generated@@158)) (= $generated@@268 ($generated@@236 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@147 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@2) (= ($generated@@145 $generated@@279 $generated@@142) (<= ($generated@@136 0) ($generated $generated@@279))))
 :pattern ( ($generated@@145 $generated@@279 $generated@@142))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@158)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@66) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@76 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@78 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@81 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@78 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@83 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@78 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@78 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@81 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@78 $generated@@328 $generated@@2)) (= ($generated@@164 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@83 $generated@@327 $generated@@329))) (<= ($generated ($generated@@83 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@83 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@164 $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@158) ($generated@@237 $generated@@333 $generated@@142)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@333)) $generated@@333) ($generated@@145 ($generated@@330 $generated@@2 $generated@@333) $generated@@142)))
 :pattern ( ($generated@@237 $generated@@333 $generated@@142))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@295 (type $generated@@334))))
(let (($generated@@336 ($generated@@294 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@293 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@292 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@291 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@78 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@295 (type $generated@@341))))
(let (($generated@@343 ($generated@@294 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@293 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@292 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@313 (type $generated@@345))))
(let (($generated@@347 ($generated@@312 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@311 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@310 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@309 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@78 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@313 (type $generated@@352))))
(let (($generated@@354 ($generated@@312 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@311 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@310 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@83 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert  (=> (<= 2 $generated@@134) (=> (or $generated@@356 (not (= 2 $generated@@134))) (and (<= ($generated@@136 0) ($generated@@136 $generated@@357)) ($generated@@0 ($generated@@138 ($generated@@11 ($generated@@135 ($generated@@136 $generated@@357)))))))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@359) $generated@@66)) (= ($generated@@145 $generated@@358 ($generated@@163 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@358 $generated@@360)))) ($generated@@237 $generated@@360 $generated@@359))
 :pattern ( ($generated@@83 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@145 $generated@@358 ($generated@@163 $generated@@359)))
)))
(assert  (=> (<= 2 $generated@@134) (=> (or $generated@@356 (not (= 2 $generated@@134))) (= $generated@@357 ($generated@@136 17)))))
(assert  (=> (<= 2 $generated@@134) (=> (or $generated@@356 (not (= 2 $generated@@134))) (= $generated@@357 ($generated@@136 17)))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@246 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@158) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@259 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@246 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@366) $generated@@66)) (= (type $generated@@367) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@365 ($generated@@251 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@158) ($generated@@0 ($generated@@83 $generated@@365 $generated@@368))) ($generated@@259 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@83 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@76 $generated@@365 ($generated@@251 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@83 ($generated@@286 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@83 ($generated@@286 $generated@@370) $generated@@369)))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@371 Int) ) (!  (=> (or ($generated@@137 $generated@@371) (and (not (= 1 $generated@@134)) (<= ($generated@@136 0) $generated@@371))) true)
 :pattern ( ($generated@@135 $generated@@371))
))))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@295 (type $generated@@375))))
(let (($generated@@377 ($generated@@294 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@293 $generated@@158 $generated@@158)) (= (type $generated@@379) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@378) ($generated@@156 ($generated@@330 $generated@@149 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@156 ($generated@@330 $generated@@149 $generated@@379))) ($generated@@157 ($generated@@330 $generated@@149 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@313 (type $generated@@383))))
(let (($generated@@385 ($generated@@312 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@311 $generated@@158 $generated@@158)) (= (type $generated@@387) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@386) ($generated@@156 ($generated@@330 $generated@@149 $generated@@387)))) (= ($generated@@83 ($generated@@381 $generated@@386) ($generated@@156 ($generated@@330 $generated@@149 $generated@@387))) ($generated@@157 ($generated@@330 $generated@@149 $generated@@387))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@294 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@293 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@338 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@338 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@312 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@311 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@83 ($generated@@349 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@66)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@293 $generated@@158 $generated@@158)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@401) $generated@@405))) (and ($generated@@259 ($generated@@83 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@259 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@66)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@311 $generated@@158 $generated@@158)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@409) $generated@@413))) (and ($generated@@259 ($generated@@83 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@259 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@78 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@313 (type $generated@@416))))
(let (($generated@@418 ($generated@@312 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@311 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@310 $generated@@418 $generated@@417)) (= ($generated@@309 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@309 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@313 (type $generated@@419))))
(let (($generated@@421 ($generated@@312 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@311 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@310 $generated@@421 $generated@@420)) (= ($generated@@349 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@349 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@313 (type $generated@@422))))
(let (($generated@@424 ($generated@@312 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@311 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@310 $generated@@424 $generated@@423)) (= ($generated@@380 $generated@@422) ($generated@@414 $generated@@158))))))
 :pattern ( ($generated@@380 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@295 (type $generated@@425))))
(let (($generated@@427 ($generated@@294 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@293 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@292 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@158) (= (type $generated@@429) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@425) ($generated@@280 ($generated@@236 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@372 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@313 (type $generated@@430))))
(let (($generated@@432 ($generated@@312 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@311 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@310 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@380 $generated@@430) ($generated@@280 ($generated@@236 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@380 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@158) ($generated@@237 $generated@@435 $generated@@46)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@435)) $generated@@435) ($generated@@145 ($generated@@330 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@158) ($generated@@237 $generated@@436 $generated@@47)) (and (= ($generated@@280 ($generated@@330 $generated@@3 $generated@@436)) $generated@@436) ($generated@@145 ($generated@@330 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@158) ($generated@@237 $generated@@437 $generated@@44)) (and (= ($generated@@280 ($generated@@330 $generated@@4 $generated@@437)) $generated@@437) ($generated@@145 ($generated@@330 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 20))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@158) ($generated@@237 $generated@@439 $generated@@45)) (and (= ($generated@@280 ($generated@@330 $generated@@438 $generated@@439)) $generated@@439) ($generated@@145 ($generated@@330 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@66) (= ($generated@@237 ($generated@@280 $generated@@440) $generated@@441) ($generated@@145 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@237 ($generated@@280 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@81 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@78 $generated@@443 $generated@@2)) (<= 0 ($generated@@285 $generated@@442))))
 :pattern ( ($generated@@285 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@274 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@273 $generated@@445)) (<= 0 ($generated@@272 $generated@@444))))
 :pattern ( ($generated@@272 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@398 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@398 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@66) (= (type $generated@@453) $generated@@66)) (= ($generated@@450 ($generated@@398 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@74 ($generated@@398 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@406 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@406 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@406 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@74 ($generated@@406 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@158) (= (type $generated@@467) $generated@@158)) (= ($generated@@265 ($generated@@236 $generated@@466 $generated@@467)) $generated@@62))
 :pattern ( ($generated@@236 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@148 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@148 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@472 ($generated@@148 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@148 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@158) (= (type $generated@@477) $generated@@158)) (= ($generated@@156 ($generated@@236 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@236 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@158) (= (type $generated@@479) $generated@@158)) (= ($generated@@157 ($generated@@236 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@236 $generated@@478 $generated@@479))
)))
(assert  (and (forall (($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@482))
)) (forall (($generated@@483 T@U) ($generated@@484 Int) ) (! (let (($generated@@485 ($generated@@274 (type $generated@@483))))
(= (type ($generated@@481 $generated@@483 $generated@@484)) $generated@@485))
 :pattern ( ($generated@@481 $generated@@483 $generated@@484))
))))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@273 $generated@@158)) (= (type $generated@@487) $generated@@66)) (= (type $generated@@488) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@486 ($generated@@480 $generated@@487) $generated@@488) (forall (($generated@@489 Int) ) (!  (=> (and (<= 0 $generated@@489) (< $generated@@489 ($generated@@272 $generated@@486))) ($generated@@259 ($generated@@481 $generated@@486 $generated@@489) $generated@@487 $generated@@488))
 :pattern ( ($generated@@481 $generated@@486 $generated@@489))
))))
 :pattern ( ($generated@@76 $generated@@486 ($generated@@480 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@491 Int) ) (! (= ($generated@@490 ($generated@@77 $generated@@491)) $generated@@491)
 :pattern ( ($generated@@77 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@246 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@246 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@246 $generated@@495)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@251 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@251 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@251 $generated@@499)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@163 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@163 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@163 $generated@@503)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@480 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@480 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@480 $generated@@507)) $generated@@57))
 :pattern ( ($generated@@480 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(= ($generated@@330 $generated@@509 ($generated@@280 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@280 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@293 $generated@@158 $generated@@158)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@145 $generated@@510 ($generated@@398 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@510) $generated@@513))) (and ($generated@@237 ($generated@@83 ($generated@@373 $generated@@510) $generated@@513) $generated@@512) ($generated@@237 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@145 $generated@@510 ($generated@@398 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@311 $generated@@158 $generated@@158)) (= (type $generated@@515) $generated@@66)) (= (type $generated@@516) $generated@@66)) (= ($generated@@145 $generated@@514 ($generated@@406 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@514) $generated@@517))) (and ($generated@@237 ($generated@@83 ($generated@@381 $generated@@514) $generated@@517) $generated@@516) ($generated@@237 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@514) $generated@@517))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@145 $generated@@514 ($generated@@406 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@158) (= (type $generated@@521) $generated@@158)) (< ($generated@@518 $generated@@520) ($generated@@519 ($generated@@236 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@236 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@158) (= (type $generated@@523) $generated@@158)) (< ($generated@@518 $generated@@523) ($generated@@519 ($generated@@236 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@236 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@158) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) ($generated@@237 $generated@@524 ($generated@@398 $generated@@525 $generated@@526))) (and (= ($generated@@280 ($generated@@330 ($generated@@293 $generated@@158 $generated@@158) $generated@@524)) $generated@@524) ($generated@@145 ($generated@@330 ($generated@@293 $generated@@158 $generated@@158) $generated@@524) ($generated@@398 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@237 $generated@@524 ($generated@@398 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@158) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) $generated@@66)) ($generated@@237 $generated@@527 ($generated@@406 $generated@@528 $generated@@529))) (and (= ($generated@@280 ($generated@@330 ($generated@@311 $generated@@158 $generated@@158) $generated@@527)) $generated@@527) ($generated@@145 ($generated@@330 ($generated@@311 $generated@@158 $generated@@158) $generated@@527) ($generated@@406 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@237 $generated@@527 ($generated@@406 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@66) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) $generated@@158)) ($generated@@237 $generated@@532 ($generated@@148 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@330 $generated@@149 $generated@@532)) $generated@@532) ($generated@@145 ($generated@@330 $generated@@149 $generated@@532) ($generated@@148 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@237 $generated@@532 ($generated@@148 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
 (not ($generated@@0 ($generated@@83 ($generated@@414 $generated@@534) $generated@@533))))
 :pattern ( (let (($generated@@534 (type $generated@@533)))
($generated@@83 ($generated@@414 $generated@@534) $generated@@533)))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@71)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@66) (= (type $generated@@538) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@537 $generated@@538)) $generated@@63) (= ($generated@@535 ($generated@@148 $generated@@537 $generated@@538)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@149) (= ($generated@@518 ($generated@@280 $generated@@539)) ($generated@@519 $generated@@539)))
 :pattern ( ($generated@@518 ($generated@@280 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@158) ($generated@@237 $generated@@540 ($generated@@77 0))) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@540)) $generated@@540) ($generated@@145 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@540) ($generated@@77 0))))
 :pattern ( ($generated@@237 $generated@@540 ($generated@@77 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@158) (= (type $generated@@542) $generated@@66)) ($generated@@237 $generated@@541 ($generated@@246 $generated@@542))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@541)) $generated@@541) ($generated@@145 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@541) ($generated@@246 $generated@@542))))
 :pattern ( ($generated@@237 $generated@@541 ($generated@@246 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@158) (= (type $generated@@544) $generated@@66)) ($generated@@237 $generated@@543 ($generated@@251 $generated@@544))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@543)) $generated@@543) ($generated@@145 ($generated@@330 ($generated@@78 $generated@@158 $generated@@4) $generated@@543) ($generated@@251 $generated@@544))))
 :pattern ( ($generated@@237 $generated@@543 ($generated@@251 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@158) (= (type $generated@@546) $generated@@66)) ($generated@@237 $generated@@545 ($generated@@163 $generated@@546))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@158 $generated@@2) $generated@@545)) $generated@@545) ($generated@@145 ($generated@@330 ($generated@@78 $generated@@158 $generated@@2) $generated@@545) ($generated@@163 $generated@@546))))
 :pattern ( ($generated@@237 $generated@@545 ($generated@@163 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@158) (= (type $generated@@548) $generated@@66)) ($generated@@237 $generated@@547 ($generated@@480 $generated@@548))) (and (= ($generated@@280 ($generated@@330 ($generated@@273 $generated@@158) $generated@@547)) $generated@@547) ($generated@@145 ($generated@@330 ($generated@@273 $generated@@158) $generated@@547) ($generated@@480 $generated@@548))))
 :pattern ( ($generated@@237 $generated@@547 ($generated@@480 $generated@@548)))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@549 Int) ) (!  (=> (or ($generated@@137 $generated@@549) (and (not (= 1 $generated@@134)) (<= ($generated@@136 0) $generated@@549))) (= ($generated@@135 $generated@@549) (< $generated@@549 29)))
 :pattern ( ($generated@@135 $generated@@549))
))))
(assert (= ($generated@@74 $generated@@142) $generated@@61))
(assert (= ($generated@@535 $generated@@142) $generated@@64))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@550 ($generated@@163 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@550 $generated@@553)))) ($generated@@259 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@83 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@163 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@149) (= (type $generated@@555) $generated@@66)) (= (type $generated@@556) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@556) (and ($generated@@147 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@66) ($generated@@76 $generated@@554 ($generated@@148 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@76 $generated@@554 ($generated@@148 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@259 ($generated@@156 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@259 ($generated@@156 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@149) (= (type $generated@@559) $generated@@66)) (= (type $generated@@560) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@560) (and ($generated@@147 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@66) ($generated@@76 $generated@@558 ($generated@@148 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@76 $generated@@558 ($generated@@148 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@259 ($generated@@157 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@259 ($generated@@157 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@158) (= (type $generated@@563) $generated@@158)) (= ($generated@@236 ($generated@@138 $generated@@562) ($generated@@138 $generated@@563)) ($generated@@138 ($generated@@236 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@236 ($generated@@138 $generated@@562) ($generated@@138 $generated@@563)))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@136 $generated@@564))) ($generated@@138 ($generated@@280 ($generated@@8 $generated@@564))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@136 $generated@@564))))
)))
(assert (forall (($generated@@565 T@U) ) (! (= ($generated@@280 ($generated@@138 $generated@@565)) ($generated@@138 ($generated@@280 $generated@@565)))
 :pattern ( ($generated@@280 ($generated@@138 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@274 (type $generated@@566))))
 (=> (and (= (type $generated@@566) ($generated@@273 $generated@@567)) (= ($generated@@272 $generated@@566) 0)) (= $generated@@566 ($generated@@271 $generated@@567))))
 :pattern ( ($generated@@272 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@569)))
 (=> (and (and (= (type $generated@@568) ($generated@@78 $generated@@571 $generated@@2)) (= (type $generated@@570) $generated@@2)) (<= 0 ($generated $generated@@570))) (= ($generated@@285 ($generated@@84 $generated@@568 $generated@@569 $generated@@570)) (+ (- ($generated@@285 $generated@@568) ($generated ($generated@@83 $generated@@568 $generated@@569))) ($generated $generated@@570)))))
 :pattern ( ($generated@@285 ($generated@@84 $generated@@568 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@2)) ($generated@@76 $generated@@573 $generated@@46 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@46 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@3)) ($generated@@76 $generated@@575 $generated@@47 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@47 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@4)) ($generated@@76 $generated@@577 $generated@@44 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@44 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@438)) ($generated@@76 $generated@@579 $generated@@45 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@45 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@581) $generated@@158)) ($generated@@76 $generated@@581 $generated@@48 $generated@@580))
 :pattern ( ($generated@@76 $generated@@581 $generated@@48 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@273 $generated@@158)) (= (type $generated@@583) $generated@@66)) (= ($generated@@145 $generated@@582 ($generated@@480 $generated@@583)) (forall (($generated@@584 Int) ) (!  (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@272 $generated@@582))) ($generated@@237 ($generated@@481 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@481 $generated@@582 $generated@@584))
))))
 :pattern ( ($generated@@145 $generated@@582 ($generated@@480 $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 Int) ) (!  (=> (= (type $generated@@586) ($generated@@273 $generated@@158)) (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@272 $generated@@586))) (< ($generated@@519 ($generated@@330 $generated@@149 ($generated@@481 $generated@@586 $generated@@587))) ($generated@@585 $generated@@586))))
 :pattern ( ($generated@@519 ($generated@@330 $generated@@149 ($generated@@481 $generated@@586 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@293 $generated@@158 $generated@@158)) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@66)) ($generated@@145 $generated@@588 ($generated@@398 $generated@@589 $generated@@590))) (and (and ($generated@@145 ($generated@@291 $generated@@588) ($generated@@246 $generated@@589)) ($generated@@145 ($generated@@338 $generated@@588) ($generated@@246 $generated@@590))) ($generated@@145 ($generated@@372 $generated@@588) ($generated@@246 ($generated@@148 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@145 $generated@@588 ($generated@@398 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@311 $generated@@158 $generated@@158)) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) $generated@@66)) ($generated@@145 $generated@@591 ($generated@@406 $generated@@592 $generated@@593))) (and (and ($generated@@145 ($generated@@309 $generated@@591) ($generated@@251 $generated@@592)) ($generated@@145 ($generated@@349 $generated@@591) ($generated@@251 $generated@@593))) ($generated@@145 ($generated@@380 $generated@@591) ($generated@@251 ($generated@@148 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@145 $generated@@591 ($generated@@406 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@2) ($generated@@145 $generated@@594 $generated@@46))
 :pattern ( ($generated@@145 $generated@@594 $generated@@46))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@3) ($generated@@145 $generated@@595 $generated@@47))
 :pattern ( ($generated@@145 $generated@@595 $generated@@47))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@4) ($generated@@145 $generated@@596 $generated@@44))
 :pattern ( ($generated@@145 $generated@@596 $generated@@44))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@438) ($generated@@145 $generated@@597 $generated@@45))
 :pattern ( ($generated@@145 $generated@@597 $generated@@45))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@158) ($generated@@145 $generated@@598 $generated@@48))
 :pattern ( ($generated@@145 $generated@@598 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@599) ($generated@@170 $generated@@79 $generated@@4)) (= (type $generated@@600) $generated@@79)) (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@602) ($generated@@170 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@604  (and (=> (= (ControlFlow 0 6) (- 0 7)) (<= ($generated@@136 0) ($generated@@136 $generated@@357))) (=> (<= ($generated@@136 0) ($generated@@136 $generated@@357)) (=> (= (ControlFlow 0 6) (- 0 5)) (=> ($generated@@137 ($generated@@136 $generated@@357)) (or ($generated@@0 ($generated@@138 ($generated@@11 ($generated@@135 ($generated@@136 $generated@@357))))) ($generated@@0 ($generated@@138 ($generated@@11 (< $generated@@357 29)))))))))))
(let (($generated@@605  (=> (and (and (= $generated@@599 ($generated@@224 $generated@@600 $generated@@601 $generated@@60 false)) (= $generated@@357 ($generated@@136 17))) (and ($generated@@145 ($generated@@8 $generated@@357) $generated@@46) (= (ControlFlow 0 8) 6))) $generated@@604)))
(let (($generated@@606  (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> (<= ($generated@@136 0) ($generated@@136 $generated@@357)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@145 ($generated@@8 ($generated@@136 $generated@@357)) $generated@@142)))))))
(let (($generated@@607  (=> (= $generated@@602 ($generated@@169 $generated@@600 $generated@@601 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 2) $generated@@606) (=> (= (ControlFlow 0 9) 8) $generated@@605)))))
(let (($generated@@608  (=> (and (and ($generated@@258 $generated@@601) ($generated@@603 $generated@@601)) (and (= 2 $generated@@134) (= (ControlFlow 0 10) 9))) $generated@@607)))
$generated@@608))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@U) Bool)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@352 (T@T T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@381 (T@U) Bool)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@81 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@70)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@70) (= (type $generated@@149) $generated@@70)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@74)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@145)))
(assert (= ($generated@@159 $generated@@160) $generated@@64))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@166) $generated@@70)) ($generated@@141 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@141 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@83 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@73 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@83) (= (type $generated@@217) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@218) ($generated@@72 $generated@@4))) (= (type $generated@@220) $generated@@83)) (= (type $generated@@221) ($generated@@72 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@70)
 :pattern ( ($generated@@223 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (= (type $generated@@226) $generated@@70) (= (type $generated@@227) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@227)) ($generated@@80 $generated@@160 ($generated@@223 $generated@@226) $generated@@227))
 :pattern ( ($generated@@80 $generated@@160 ($generated@@223 $generated@@226) $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@145)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@70) (= (type $generated@@233) $generated@@70)) (= (type $generated@@234) $generated@@154)) (= (type $generated@@235) $generated@@154)) (= ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@141 ($generated@@228 $generated@@234 $generated@@235) ($generated@@144 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> (= (type $generated@@236) $generated@@70) ($generated@@141 $generated@@160 ($generated@@223 $generated@@236)))
 :pattern ( ($generated@@141 $generated@@160 ($generated@@223 $generated@@236)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) (= (type $generated@@238) $generated@@145)) (= ($generated@@151 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@151 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@145) (= (type $generated@@241) $generated@@145)) (= ($generated@@239 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert  (and (forall (($generated@@245 T@U) ) (! (= (type ($generated@@243 $generated@@245)) $generated@@154)
 :pattern ( ($generated@@243 $generated@@245))
)) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@244 $generated@@246)) $generated@@145)
 :pattern ( ($generated@@244 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@145) (= (type $generated@@248) $generated@@145)) (and ($generated@@242 $generated@@247) ($generated@@242 $generated@@248))) (= ($generated@@239 $generated@@247 $generated@@248)  (and (= ($generated@@243 $generated@@247) ($generated@@243 $generated@@248)) ($generated@@239 ($generated@@244 $generated@@247) ($generated@@244 $generated@@248)))))
 :pattern ( ($generated@@239 $generated@@247 $generated@@248) ($generated@@242 $generated@@247))
 :pattern ( ($generated@@239 $generated@@247 $generated@@248) ($generated@@242 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@252) $generated@@70)) (= ($generated@@141 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@154) ($generated@@0 ($generated@@87 $generated@@251 $generated@@253))) ($generated@@229 $generated@@253 $generated@@252))
 :pattern ( ($generated@@87 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@141 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@70)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@257) $generated@@70)) (= ($generated@@141 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@154) ($generated@@0 ($generated@@87 $generated@@256 $generated@@258))) ($generated@@229 $generated@@258 $generated@@257))
 :pattern ( ($generated@@87 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@141 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@239 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@239 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@268 $generated@@269 $generated@@270)) $generated@@145)
 :pattern ( ($generated@@268 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@70) (= (type $generated@@272) $generated@@154)) (= (type $generated@@273) $generated@@145)) (= ($generated@@141 ($generated@@268 $generated@@272 $generated@@273) ($generated@@223 $generated@@271))  (and ($generated@@229 $generated@@272 $generated@@271) ($generated@@141 $generated@@273 ($generated@@223 $generated@@271)))))
 :pattern ( ($generated@@141 ($generated@@268 $generated@@272 $generated@@273) ($generated@@223 $generated@@271)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@70) (= (type $generated@@276) $generated@@70)) (= (type $generated@@277) $generated@@154)) (= (type $generated@@278) $generated@@154)) (= (type $generated@@279) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@279)) (= ($generated@@80 ($generated@@228 $generated@@277 $generated@@278) ($generated@@144 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@80 ($generated@@228 $generated@@277 $generated@@278) ($generated@@144 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@145) (= ($generated@@143 $generated@@280) (= ($generated@@159 $generated@@280) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@145) (= ($generated@@265 $generated@@281) (= ($generated@@159 $generated@@281) $generated@@64)))
 :pattern ( ($generated@@265 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@145) (= ($generated@@242 $generated@@282) (= ($generated@@159 $generated@@282) $generated@@66)))
 :pattern ( ($generated@@242 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@145) ($generated@@143 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@154) (= (type $generated@@285) $generated@@154)) (= $generated@@283 ($generated@@228 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@143 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@145) ($generated@@242 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@154) (= (type $generated@@288) $generated@@145)) (= $generated@@286 ($generated@@268 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@242 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@145) ($generated@@265 $generated@@297)) (= $generated@@297 $generated@@160))
 :pattern ( ($generated@@265 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@2) (= ($generated@@141 $generated@@298 $generated@@138) (<= ($generated@@259 0) ($generated $generated@@298))))
 :pattern ( ($generated@@141 $generated@@298 $generated@@138))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@154)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@70) (= (type $generated@@303) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@274 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@80 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@274 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@82 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@85 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@82 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@87 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@75)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@70) (and (= ($generated@@78 ($generated@@223 $generated@@312)) $generated@@65) (= ($generated@@310 ($generated@@223 $generated@@312)) $generated@@69)))
 :pattern ( ($generated@@223 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@82 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@82 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@87 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@87 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@85 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@82 $generated@@350 $generated@@2)) (= ($generated@@163 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@87 $generated@@349 $generated@@351))) (<= ($generated ($generated@@87 $generated@@349 $generated@@351)) ($generated@@304 $generated@@349))))
 :pattern ( ($generated@@87 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@163 $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@154) ($generated@@229 $generated@@355 $generated@@138)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@355)) $generated@@355) ($generated@@141 ($generated@@352 $generated@@2 $generated@@355) $generated@@138)))
 :pattern ( ($generated@@229 $generated@@355 $generated@@138))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@317 (type $generated@@356))))
(let (($generated@@358 ($generated@@316 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@315 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@314 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@313 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@82 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@317 (type $generated@@363))))
(let (($generated@@365 ($generated@@316 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@315 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@314 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@335 (type $generated@@367))))
(let (($generated@@369 ($generated@@334 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@333 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@332 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@331 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@335 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@82 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@335 (type $generated@@374))))
(let (($generated@@376 ($generated@@334 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@333 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@332 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@379) $generated@@70)) (= ($generated@@141 $generated@@378 ($generated@@162 $generated@@379)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@378 $generated@@380)))) ($generated@@229 $generated@@380 $generated@@379))
 :pattern ( ($generated@@87 $generated@@378 $generated@@380))
))))
 :pattern ( ($generated@@141 $generated@@378 ($generated@@162 $generated@@379)))
)))
(assert (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@381 $generated@@382)) (or ($generated@@265 $generated@@382) ($generated@@242 $generated@@382)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@154) ($generated@@0 ($generated@@87 $generated@@383 $generated@@386))) ($generated@@274 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@87 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@80 $generated@@383 ($generated@@249 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@154 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@154) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@274 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@254 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= ($generated ($generated@@87 ($generated@@305 $generated@@392) $generated@@391)) 0))
 :pattern ( (let (($generated@@392 (type $generated@@391)))
($generated@@87 ($generated@@305 $generated@@392) $generated@@391)))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@317 (type $generated@@396))))
(let (($generated@@398 ($generated@@316 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@400) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@399) ($generated@@152 ($generated@@352 $generated@@145 $generated@@400)))) (= ($generated@@87 ($generated@@394 $generated@@399) ($generated@@152 ($generated@@352 $generated@@145 $generated@@400))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@400))))))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@82 $generated@@154 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@335 (type $generated@@404))))
(let (($generated@@406 ($generated@@334 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@82 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@408) $generated@@154)) (= ($generated@@0 ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@87 ($generated@@331 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408)))) (= ($generated@@87 ($generated@@402 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@408))))))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@316 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@315 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@87 ($generated@@360 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@87 ($generated@@360 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@334 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@333 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@87 ($generated@@371 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@87 ($generated@@331 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@414) $generated@@418))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@87 ($generated@@371 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@70)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@422) $generated@@426))) (and ($generated@@274 ($generated@@87 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@274 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@80 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@430) $generated@@434))) (and ($generated@@274 ($generated@@87 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@274 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@80 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@435) $generated@@70) (= (type $generated@@436) $generated@@145)) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435))) (or ($generated@@265 $generated@@436) ($generated@@242 $generated@@436)))
 :pattern ( ($generated@@242 $generated@@436) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435)))
 :pattern ( ($generated@@265 $generated@@436) ($generated@@141 $generated@@436 ($generated@@223 $generated@@435)))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@82 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@335 (type $generated@@439))))
(let (($generated@@441 ($generated@@334 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@333 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@332 $generated@@441 $generated@@440)) (= ($generated@@331 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@331 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@335 (type $generated@@442))))
(let (($generated@@444 ($generated@@334 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@333 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@332 $generated@@444 $generated@@443)) (= ($generated@@371 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@371 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@335 (type $generated@@445))))
(let (($generated@@447 ($generated@@334 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@333 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@332 $generated@@447 $generated@@446)) (= ($generated@@401 $generated@@445) ($generated@@437 $generated@@154))))))
 :pattern ( ($generated@@401 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@317 (type $generated@@448))))
(let (($generated@@450 ($generated@@316 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@315 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@314 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@154) (= (type $generated@@452) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@393 $generated@@448) ($generated@@299 ($generated@@228 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@393 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@335 (type $generated@@453))))
(let (($generated@@455 ($generated@@334 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@333 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@332 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@154) (= (type $generated@@457) $generated@@154)) ($generated@@0 ($generated@@87 ($generated@@401 $generated@@453) ($generated@@299 ($generated@@228 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@401 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@154) ($generated@@229 $generated@@458 $generated@@46)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@458)) $generated@@458) ($generated@@141 ($generated@@352 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@229 $generated@@459 $generated@@47)) (and (= ($generated@@299 ($generated@@352 $generated@@3 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@352 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@154) ($generated@@229 $generated@@460 $generated@@44)) (and (= ($generated@@299 ($generated@@352 $generated@@4 $generated@@460)) $generated@@460) ($generated@@141 ($generated@@352 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) ($generated@@229 $generated@@462 $generated@@45)) (and (= ($generated@@299 ($generated@@352 $generated@@461 $generated@@462)) $generated@@462) ($generated@@141 ($generated@@352 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@70) (= ($generated@@229 ($generated@@299 $generated@@463) $generated@@464) ($generated@@141 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@229 ($generated@@299 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@85 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@82 $generated@@466 $generated@@2)) (<= 0 ($generated@@304 $generated@@465))))
 :pattern ( ($generated@@304 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@292 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@291 $generated@@468)) (<= 0 ($generated@@290 $generated@@467))))
 :pattern ( ($generated@@290 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@419 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@419 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@419 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@419 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@78 ($generated@@419 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@427 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@427 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@427 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@427 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@78 ($generated@@427 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@427 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@154) (= (type $generated@@490) $generated@@154)) (= ($generated@@159 ($generated@@228 $generated@@489 $generated@@490)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@144 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@144 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@144 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@144 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@154) (= (type $generated@@500) $generated@@154)) (= ($generated@@152 ($generated@@228 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@228 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@154) (= (type $generated@@502) $generated@@154)) (= ($generated@@153 ($generated@@228 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@228 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@154) (= (type $generated@@504) $generated@@145)) (= ($generated@@159 ($generated@@268 $generated@@503 $generated@@504)) $generated@@66))
 :pattern ( ($generated@@268 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@154) (= (type $generated@@506) $generated@@145)) (= ($generated@@243 ($generated@@268 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@268 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@154) (= (type $generated@@508) $generated@@145)) (= ($generated@@244 ($generated@@268 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@268 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@292 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@291 $generated@@154)) (= (type $generated@@516) $generated@@70)) (= (type $generated@@517) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@290 $generated@@515))) ($generated@@274 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@80 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@81 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@81 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@521 ($generated@@249 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@249 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@78 ($generated@@249 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@525 ($generated@@254 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@254 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@78 ($generated@@254 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@529 ($generated@@162 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@162 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@78 ($generated@@162 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@78 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@537 ($generated@@223 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@223 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@352 $generated@@541 ($generated@@299 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@299 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) $generated@@70)) (= ($generated@@141 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@542) $generated@@545))) (and ($generated@@229 ($generated@@87 ($generated@@394 $generated@@542) $generated@@545) $generated@@544) ($generated@@229 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@542) $generated@@545))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@141 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@141 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) ($generated@@0 ($generated@@87 ($generated@@331 $generated@@546) $generated@@549))) (and ($generated@@229 ($generated@@87 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@229 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@87 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@87 ($generated@@331 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@141 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@154) (= (type $generated@@553) $generated@@154)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@228 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@228 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) (= (type $generated@@555) $generated@@154)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@228 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@228 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@154) (= (type $generated@@557) $generated@@145)) (< ($generated@@550 $generated@@556) ($generated@@551 ($generated@@268 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@268 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@154) (= (type $generated@@559) $generated@@145)) (< ($generated@@551 $generated@@559) ($generated@@551 ($generated@@268 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@268 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@154) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@70)) ($generated@@229 $generated@@560 ($generated@@419 $generated@@561 $generated@@562))) (and (= ($generated@@299 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@560)) $generated@@560) ($generated@@141 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@560) ($generated@@419 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@419 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) ($generated@@229 $generated@@563 ($generated@@427 $generated@@564 $generated@@565))) (and (= ($generated@@299 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@563)) $generated@@563) ($generated@@141 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@563) ($generated@@427 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@563 ($generated@@427 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@70) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) $generated@@154)) ($generated@@229 $generated@@568 ($generated@@144 $generated@@566 $generated@@567))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@568)) $generated@@568) ($generated@@141 ($generated@@352 $generated@@145 $generated@@568) ($generated@@144 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@568 ($generated@@144 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@145) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@571) (and ($generated@@242 $generated@@569) ($generated@@80 $generated@@569 ($generated@@223 $generated@@570) $generated@@571)))) ($generated@@274 ($generated@@243 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@274 ($generated@@243 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@87 ($generated@@437 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@87 ($generated@@437 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@70) (= (type $generated@@575) $generated@@70)) (and (= ($generated@@78 ($generated@@144 $generated@@574 $generated@@575)) $generated@@63) (= ($generated@@310 ($generated@@144 $generated@@574 $generated@@575)) $generated@@68)))
 :pattern ( ($generated@@144 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@145) (= ($generated@@550 ($generated@@299 $generated@@576)) ($generated@@551 $generated@@576)))
 :pattern ( ($generated@@550 ($generated@@299 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@154) ($generated@@229 $generated@@577 ($generated@@81 0))) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@577)) $generated@@577) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@577) ($generated@@81 0))))
 :pattern ( ($generated@@229 $generated@@577 ($generated@@81 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@154) (= (type $generated@@579) $generated@@70)) ($generated@@229 $generated@@578 ($generated@@249 $generated@@579))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@578)) $generated@@578) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@578) ($generated@@249 $generated@@579))))
 :pattern ( ($generated@@229 $generated@@578 ($generated@@249 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@154) (= (type $generated@@581) $generated@@70)) ($generated@@229 $generated@@580 ($generated@@254 $generated@@581))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@580)) $generated@@580) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@4) $generated@@580) ($generated@@254 $generated@@581))))
 :pattern ( ($generated@@229 $generated@@580 ($generated@@254 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@154) (= (type $generated@@583) $generated@@70)) ($generated@@229 $generated@@582 ($generated@@162 $generated@@583))) (and (= ($generated@@299 ($generated@@352 ($generated@@82 $generated@@154 $generated@@2) $generated@@582)) $generated@@582) ($generated@@141 ($generated@@352 ($generated@@82 $generated@@154 $generated@@2) $generated@@582) ($generated@@162 $generated@@583))))
 :pattern ( ($generated@@229 $generated@@582 ($generated@@162 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@70)) ($generated@@229 $generated@@584 ($generated@@509 $generated@@585))) (and (= ($generated@@299 ($generated@@352 ($generated@@291 $generated@@154) $generated@@584)) $generated@@584) ($generated@@141 ($generated@@352 ($generated@@291 $generated@@154) $generated@@584) ($generated@@509 $generated@@585))))
 :pattern ( ($generated@@229 $generated@@584 ($generated@@509 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@70) (= (type $generated@@587) $generated@@154)) ($generated@@229 $generated@@587 ($generated@@223 $generated@@586))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@587)) $generated@@587) ($generated@@141 ($generated@@352 $generated@@145 $generated@@587) ($generated@@223 $generated@@586))))
 :pattern ( ($generated@@229 $generated@@587 ($generated@@223 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@145) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@590) (and ($generated@@242 $generated@@588) ($generated@@80 $generated@@588 ($generated@@223 $generated@@589) $generated@@590)))) ($generated@@80 ($generated@@244 $generated@@588) ($generated@@223 $generated@@589) $generated@@590))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@588) ($generated@@223 $generated@@589) $generated@@590))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@310 $generated@@138) $generated@@67))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@154 $generated@@2)) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@591 ($generated@@162 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@154) (< 0 ($generated ($generated@@87 $generated@@591 $generated@@594)))) ($generated@@274 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@87 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@80 $generated@@591 ($generated@@162 $generated@@592) $generated@@593))
)))
(assert (= $generated@@160 ($generated@@261 $generated@@160)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@145) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@597) (and ($generated@@143 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@70) ($generated@@80 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@80 $generated@@595 ($generated@@144 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@274 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@274 ($generated@@152 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@145) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@224 $generated@@601) (and ($generated@@143 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@70) ($generated@@80 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@80 $generated@@599 ($generated@@144 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@274 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@274 ($generated@@153 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@154) (= (type $generated@@604) $generated@@154)) (= ($generated@@228 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)) ($generated@@261 ($generated@@228 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@228 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@154) (= (type $generated@@606) $generated@@145)) (= ($generated@@268 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)) ($generated@@261 ($generated@@268 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@268 ($generated@@261 $generated@@605) ($generated@@261 $generated@@606)))
)))
(assert (forall (($generated@@607 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@259 $generated@@607))) ($generated@@261 ($generated@@299 ($generated@@8 $generated@@607))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@259 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@299 ($generated@@261 $generated@@608)) ($generated@@261 ($generated@@299 $generated@@608)))
 :pattern ( ($generated@@299 ($generated@@261 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@292 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@291 $generated@@610)) (= ($generated@@290 $generated@@609) 0)) (= $generated@@609 ($generated@@289 $generated@@610))))
 :pattern ( ($generated@@290 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@82 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@304 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@304 $generated@@611) ($generated ($generated@@87 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@304 ($generated@@88 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@616) $generated@@2)) ($generated@@80 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@80 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@618) $generated@@3)) ($generated@@80 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@80 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@620) $generated@@4)) ($generated@@80 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@80 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@622) $generated@@461)) ($generated@@80 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@80 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@624) $generated@@154)) ($generated@@80 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@80 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@625) $generated@@70) (= (type $generated@@626) $generated@@154)) (= (type $generated@@627) $generated@@145)) (= (type $generated@@628) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@224 $generated@@628)) (= ($generated@@80 ($generated@@268 $generated@@626 $generated@@627) ($generated@@223 $generated@@625) $generated@@628)  (and ($generated@@274 $generated@@626 $generated@@625 $generated@@628) ($generated@@80 $generated@@627 ($generated@@223 $generated@@625) $generated@@628))))
 :pattern ( ($generated@@80 ($generated@@268 $generated@@626 $generated@@627) ($generated@@223 $generated@@625) $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@291 $generated@@154)) (= (type $generated@@630) $generated@@70)) (= ($generated@@141 $generated@@629 ($generated@@509 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@290 $generated@@629))) ($generated@@229 ($generated@@510 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@510 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@141 $generated@@629 ($generated@@509 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@291 $generated@@154)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@290 $generated@@633))) (< ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@636) $generated@@70)) (= (type $generated@@637) $generated@@70)) ($generated@@141 $generated@@635 ($generated@@419 $generated@@636 $generated@@637))) (and (and ($generated@@141 ($generated@@313 $generated@@635) ($generated@@249 $generated@@636)) ($generated@@141 ($generated@@360 $generated@@635) ($generated@@249 $generated@@637))) ($generated@@141 ($generated@@393 $generated@@635) ($generated@@249 ($generated@@144 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@141 $generated@@635 ($generated@@419 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@639) $generated@@70)) (= (type $generated@@640) $generated@@70)) ($generated@@141 $generated@@638 ($generated@@427 $generated@@639 $generated@@640))) (and (and ($generated@@141 ($generated@@331 $generated@@638) ($generated@@254 $generated@@639)) ($generated@@141 ($generated@@371 $generated@@638) ($generated@@254 $generated@@640))) ($generated@@141 ($generated@@401 $generated@@638) ($generated@@254 ($generated@@144 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@141 $generated@@638 ($generated@@427 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@141 $generated@@641 $generated@@46))
 :pattern ( ($generated@@141 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@141 $generated@@642 $generated@@47))
 :pattern ( ($generated@@141 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@141 $generated@@643 $generated@@44))
 :pattern ( ($generated@@141 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@461) ($generated@@141 $generated@@644 $generated@@45))
 :pattern ( ($generated@@141 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@154) ($generated@@141 $generated@@645 $generated@@48))
 :pattern ( ($generated@@141 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 (T@U) Bool)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () Int)
(assert  (and (and (and (and (= (type $generated@@647) ($generated@@169 $generated@@83 $generated@@4)) (= (type $generated@@648) $generated@@83)) (= (type $generated@@649) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@651) $generated@@145)) (= (type $generated@@652) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@654  (=> (and (< $generated@@646 ($generated@@259 100)) (= (ControlFlow 0 4) (- 0 3))) ($generated@@141 ($generated@@8 $generated@@646) $generated@@138))))
(let (($generated@@655  (=> (and (<= ($generated@@259 100) $generated@@646) (= (ControlFlow 0 2) (- 0 1))) ($generated@@141 ($generated@@8 $generated@@646) $generated@@138))))
(let (($generated@@656  (=> (= $generated@@647 ($generated@@168 $generated@@648 $generated@@649 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@655) (=> (= (ControlFlow 0 5) 4) $generated@@654)))))
(let (($generated@@657  (=> (and ($generated@@224 $generated@@649) ($generated@@650 $generated@@649)) (=> (and (and (and ($generated@@141 $generated@@651 ($generated@@223 $generated@@138)) ($generated@@80 $generated@@651 ($generated@@223 $generated@@138) $generated@@649)) ($generated@@381 $generated@@651)) (and (and ($generated@@141 $generated@@652 ($generated@@223 $generated@@138)) ($generated@@80 $generated@@652 ($generated@@223 $generated@@138) $generated@@649)) (and (= 1 $generated@@653) (= (ControlFlow 0 6) 5)))) $generated@@656))))
$generated@@657)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
