(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@T T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U T@U) Bool)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U Int) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@663 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@150) 16) (= (type $generated@@144) ($generated@@73 $generated@@150))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@151)) $generated@@71)
 :pattern ( ($generated@@145 $generated@@151))
))) (= (type $generated@@147) $generated@@89)) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@148 $generated@@152)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@71) (= (type $generated@@154) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@155) $generated@@89)) (and ($generated@@146 $generated@@154) (and (not (= $generated@@155 $generated@@147)) (= ($generated@@148 $generated@@155) ($generated@@145 $generated@@153))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) $generated@@153))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) ($generated@@145 $generated@@153))
)))
(assert (= (type $generated@@156) ($generated@@73 $generated@@150)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@71) (= (type $generated@@158) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@159) $generated@@89)) (and ($generated@@146 $generated@@158) (and (not (= $generated@@159 $generated@@147)) (= ($generated@@148 $generated@@159) ($generated@@145 $generated@@157))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) $generated@@157))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) ($generated@@145 $generated@@157))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@162) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@160 $generated@@161 $generated@@162)) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@161 $generated@@163) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60))
)))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@71) (= (type $generated@@165) $generated@@89)) (= (type $generated@@166) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166)  (or (= $generated@@165 $generated@@147) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@87 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@87 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@71)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@71) (= (type $generated@@172) $generated@@89)) (= (type $generated@@173) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@86 $generated@@172 ($generated@@145 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert  (and (= ($generated@@1 $generated@@176) 17) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@71)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@71) (= (type $generated@@180) $generated@@71)) (= (type $generated@@181) $generated@@176)) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@150)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@150)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@176) (= (type $generated@@188) $generated@@176)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@71)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@193) $generated@@71)) ($generated@@167 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@167 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 18)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@89 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@74 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@89) (= (type $generated@@244) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@245) ($generated@@73 $generated@@4))) (= (type $generated@@247) $generated@@89)) (= (type $generated@@248) ($generated@@73 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (= ($generated@@81 $generated@@156) 0))
(assert (forall (($generated@@251 T@T) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@73 $generated@@251))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@70) $generated@@156))
(assert ($generated@@254 $generated@@156))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@256 $generated@@257)) $generated@@176)
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@71) (= (type $generated@@259) $generated@@71)) (= (type $generated@@260) $generated@@150)) (= (type $generated@@261) $generated@@150)) (= ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259))  (and ($generated@@149 $generated@@260 $generated@@258) ($generated@@149 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259)))
)))
(assert (= ($generated@@81 $generated@@144) 0))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@69) $generated@@144))
(assert  (not ($generated@@254 $generated@@144)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@176) (= (type $generated@@263) $generated@@176)) (= ($generated@@182 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@182 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@71)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@267) $generated@@71)) (= ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@150) ($generated@@0 ($generated@@93 $generated@@266 $generated@@268))) ($generated@@149 $generated@@268 $generated@@267))
 :pattern ( ($generated@@93 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@71)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@272) $generated@@71)) (= ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@150) ($generated@@0 ($generated@@93 $generated@@271 $generated@@273))) ($generated@@149 $generated@@273 $generated@@272))
 :pattern ( ($generated@@93 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
(= (type ($generated@@274 $generated@@275)) $generated@@276))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@274 $generated@@277) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@71) (= (type $generated@@280) $generated@@71)) (= (type $generated@@281) $generated@@150)) (= (type $generated@@282) $generated@@150)) (= (type $generated@@283) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@146 $generated@@283)) (= ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287)) $generated@@150)
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@71) (= (type $generated@@289) $generated@@89)) ($generated@@149 ($generated@@285 $generated@@288 $generated@@289) $generated@@288))
 :pattern ( ($generated@@285 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@291 $generated@@292)) $generated@@150)
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@71) (= (type $generated@@294) $generated@@89)) ($generated@@149 ($generated@@290 $generated@@293 $generated@@294) $generated@@293))
 :pattern ( ($generated@@290 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@76)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@176) (= ($generated@@174 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@62)))
 :pattern ( ($generated@@174 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@176) ($generated@@174 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@150) (= (type $generated@@300) $generated@@150)) (= $generated@@298 ($generated@@255 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@174 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 19)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert ($generated@@254 $generated@@60))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@309) $generated@@71) (= (type $generated@@310) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@311) $generated@@89)) (and (and ($generated@@146 $generated@@310) (and (not (= $generated@@311 $generated@@147)) (= ($generated@@148 $generated@@311) ($generated@@145 $generated@@309)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) $generated@@309 $generated@@310))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) ($generated@@145 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@312) $generated@@71) (= (type $generated@@313) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@314) $generated@@89)) (and (and ($generated@@146 $generated@@313) (and (not (= $generated@@314 $generated@@147)) (= ($generated@@148 $generated@@314) ($generated@@145 $generated@@312)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) $generated@@312 $generated@@313))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) ($generated@@145 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@71) (= (type $generated@@316) $generated@@89)) (= ($generated@@167 $generated@@316 ($generated@@169 $generated@@315))  (and ($generated@@167 $generated@@316 ($generated@@145 $generated@@315)) (not (= $generated@@316 $generated@@147)))))
 :pattern ( ($generated@@167 $generated@@316 ($generated@@169 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@150)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@71) (= (type $generated@@321) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@86 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@322) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@323) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@324) $generated@@150)) (= (type $generated@@325) $generated@@71)) ($generated@@160 $generated@@322 $generated@@323)) ($generated@@278 $generated@@324 $generated@@325 $generated@@322)) ($generated@@278 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@160 $generated@@322 $generated@@323) ($generated@@278 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@326) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@327) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@329) $generated@@71)) ($generated@@160 $generated@@326 $generated@@327)) ($generated@@86 $generated@@328 $generated@@329 $generated@@326)) ($generated@@86 $generated@@328 $generated@@329 $generated@@327))
 :pattern ( ($generated@@160 $generated@@326 $generated@@327) ($generated@@86 $generated@@328 $generated@@329 $generated@@326))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@88 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@91 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@88 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@93 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@78)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@71) (and (= ($generated@@82 ($generated@@145 $generated@@338)) $generated@@65) (= ($generated@@336 ($generated@@145 $generated@@338)) $generated@@68)))
 :pattern ( ($generated@@145 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@71) (and (= ($generated@@82 ($generated@@169 $generated@@339)) $generated@@66) (= ($generated@@336 ($generated@@169 $generated@@339)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 20)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@88 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 21)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@88 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@378) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@376 $generated@@377 $generated@@378)) (and ($generated@@160 $generated@@377 $generated@@378) (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@74 (type $generated@@380))))
 (=> (and (and (= (type $generated@@379) $generated@@89) (= (type $generated@@380) ($generated@@73 $generated@@381))) (not ($generated@@254 $generated@@380))) (= ($generated@@95 ($generated@@93 $generated@@377 $generated@@379) $generated@@380) ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))
))))
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@91 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@88 $generated@@383 $generated@@2)) (= ($generated@@190 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (and (<= 0 ($generated ($generated@@93 $generated@@382 $generated@@384))) (<= ($generated ($generated@@93 $generated@@382 $generated@@384)) ($generated@@330 $generated@@382))))
 :pattern ( ($generated@@93 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@190 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@71) (= (type $generated@@386) $generated@@89)) (= ($generated@@167 $generated@@386 ($generated@@145 $generated@@385))  (or (= $generated@@386 $generated@@147) (= ($generated@@148 $generated@@386) ($generated@@145 $generated@@385)))))
 :pattern ( ($generated@@167 $generated@@386 ($generated@@145 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@344 (type $generated@@387))))
(let (($generated@@389 ($generated@@343 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@342 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@341 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@340 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@344 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@88 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@344 (type $generated@@394))))
(let (($generated@@396 ($generated@@343 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@342 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@341 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@93 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@362 (type $generated@@398))))
(let (($generated@@400 ($generated@@361 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@360 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@359 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@358 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@362 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@88 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@362 (type $generated@@405))))
(let (($generated@@407 ($generated@@361 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@360 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@359 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@93 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@410) $generated@@71)) (= ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@409 $generated@@411)))) ($generated@@149 $generated@@411 $generated@@410))
 :pattern ( ($generated@@93 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@413) $generated@@71)) (= (type $generated@@414) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@150) ($generated@@0 ($generated@@93 $generated@@412 $generated@@415))) ($generated@@278 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@93 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@417) $generated@@71)) (= (type $generated@@418) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@0 ($generated@@93 $generated@@416 $generated@@419))) ($generated@@278 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@93 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@93 ($generated@@331 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@93 ($generated@@331 $generated@@421) $generated@@420)))
)))
(assert  (and (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@422 $generated@@425)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@422 $generated@@425))
)) (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@423 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@423 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@344 (type $generated@@428))))
(let (($generated@@430 ($generated@@343 (type $generated@@428))))
(= (type ($generated@@424 $generated@@428)) ($generated@@88 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@424 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@432) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432)))) (= ($generated@@93 ($generated@@424 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@432))))))
 :pattern ( ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@362 (type $generated@@436))))
(let (($generated@@438 ($generated@@361 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@88 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@440) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440)))) (= ($generated@@93 ($generated@@434 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@440))))))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@343 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@342 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@93 ($generated@@391 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@441) $generated@@445))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@361 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@360 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@93 ($generated@@402 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@446) $generated@@450))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@93 ($generated@@402 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@71)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@455) $generated@@71)) (= (type $generated@@456) $generated@@71)) (= (type $generated@@457) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))) (and ($generated@@278 ($generated@@93 ($generated@@424 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@278 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@454) $generated@@458))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@71)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@463) $generated@@71)) (= (type $generated@@464) $generated@@71)) (= (type $generated@@465) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))) (and ($generated@@278 ($generated@@93 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@278 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@467) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@468) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@469) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@467 $generated@@469))) (and ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))) ($generated@@160 $generated@@467 $generated@@469))
 :pattern ( ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@88 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@362 (type $generated@@472))))
(let (($generated@@474 ($generated@@361 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@360 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@359 $generated@@474 $generated@@473)) (= ($generated@@358 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@358 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@362 (type $generated@@475))))
(let (($generated@@477 ($generated@@361 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@360 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@359 $generated@@477 $generated@@476)) (= ($generated@@402 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@402 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@362 (type $generated@@478))))
(let (($generated@@480 ($generated@@361 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@360 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@359 $generated@@480 $generated@@479)) (= ($generated@@433 $generated@@478) ($generated@@470 $generated@@150))))))
 :pattern ( ($generated@@433 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@344 (type $generated@@481))))
(let (($generated@@483 ($generated@@343 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@342 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@341 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@150) (= (type $generated@@485) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@422 $generated@@481) ($generated@@317 ($generated@@255 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@422 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@362 (type $generated@@486))))
(let (($generated@@488 ($generated@@361 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@360 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@359 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@150) (= (type $generated@@490) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@433 $generated@@486) ($generated@@317 ($generated@@255 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@433 $generated@@486))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@77)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@T) ) (!  (=> (and (= (type $generated@@493) $generated@@77) (= (type $generated@@494) $generated@@75)) (and (= ($generated@@491 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@493) (= ($generated@@84 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@494)))
 :pattern ( ($generated@@250 $generated@@495 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@150) ($generated@@149 $generated@@496 $generated@@46)) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@496)) $generated@@496) ($generated@@167 ($generated@@423 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@149 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@150) ($generated@@149 $generated@@497 $generated@@47)) (and (= ($generated@@317 ($generated@@423 $generated@@3 $generated@@497)) $generated@@497) ($generated@@167 ($generated@@423 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@149 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@150) ($generated@@149 $generated@@498 $generated@@44)) (and (= ($generated@@317 ($generated@@423 $generated@@4 $generated@@498)) $generated@@498) ($generated@@167 ($generated@@423 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@149 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 22))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) ($generated@@149 $generated@@500 $generated@@45)) (and (= ($generated@@317 ($generated@@423 $generated@@499 $generated@@500)) $generated@@500) ($generated@@167 ($generated@@423 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@149 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@71) (= ($generated@@149 ($generated@@317 $generated@@501) $generated@@502) ($generated@@167 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@149 ($generated@@317 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@91 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@88 $generated@@504 $generated@@2)) (<= 0 ($generated@@330 $generated@@503))))
 :pattern ( ($generated@@330 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@304 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@303 $generated@@506)) (<= 0 ($generated@@302 $generated@@505))))
 :pattern ( ($generated@@302 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@71)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@71) (= (type $generated@@510) $generated@@71)) (= ($generated@@507 ($generated@@451 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@451 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@71)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@71) (= (type $generated@@514) $generated@@71)) (= ($generated@@511 ($generated@@451 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@451 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@71) (= (type $generated@@516) $generated@@71)) (= ($generated@@82 ($generated@@451 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@71)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@71) (= (type $generated@@520) $generated@@71)) (= ($generated@@517 ($generated@@459 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@459 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@71)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@71) (= (type $generated@@524) $generated@@71)) (= ($generated@@521 ($generated@@459 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@71) (= (type $generated@@526) $generated@@71)) (= ($generated@@82 ($generated@@459 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@150)) (= ($generated@@295 ($generated@@255 $generated@@527 $generated@@528)) $generated@@62))
 :pattern ( ($generated@@255 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@71)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@71) (= (type $generated@@532) $generated@@71)) (= ($generated@@529 ($generated@@175 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@175 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@71) (= (type $generated@@536) $generated@@71)) (= ($generated@@533 ($generated@@175 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@175 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@150)) (= ($generated@@183 ($generated@@255 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@255 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@150)) (= ($generated@@184 ($generated@@255 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@255 $generated@@539 $generated@@540))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@543))
)) (forall (($generated@@544 T@U) ($generated@@545 Int) ) (! (let (($generated@@546 ($generated@@304 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544 $generated@@545)) $generated@@546))
 :pattern ( ($generated@@542 $generated@@544 $generated@@545))
))))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@303 $generated@@150)) (= (type $generated@@548) $generated@@71)) (= (type $generated@@549) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549) (forall (($generated@@550 Int) ) (!  (=> (and (<= 0 $generated@@550) (< $generated@@550 ($generated@@302 $generated@@547))) ($generated@@278 ($generated@@542 $generated@@547 $generated@@550) $generated@@548 $generated@@549))
 :pattern ( ($generated@@542 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@551 ($generated@@87 $generated@@552)) $generated@@552)
 :pattern ( ($generated@@87 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@71) (= ($generated@@553 ($generated@@264 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@264 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@71) (= ($generated@@82 ($generated@@264 $generated@@556)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@71)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@71) (= ($generated@@557 ($generated@@269 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@269 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@71) (= ($generated@@82 ($generated@@269 $generated@@560)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@71)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@71) (= ($generated@@561 ($generated@@189 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@189 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@71) (= ($generated@@82 ($generated@@189 $generated@@564)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@71)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@71) (= ($generated@@565 ($generated@@541 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@541 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@71) (= ($generated@@82 ($generated@@541 $generated@@568)) $generated@@57))
 :pattern ( ($generated@@541 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@71)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@71) (= ($generated@@569 ($generated@@145 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@145 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@71)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@71) (= ($generated@@572 ($generated@@169 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@169 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@423 $generated@@576 ($generated@@317 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@317 $generated@@575))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@71) (= (type $generated@@578) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@579) $generated@@89)) (and ($generated@@146 $generated@@578) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60)))) ($generated@@278 ($generated@@285 $generated@@577 $generated@@579) $generated@@577 $generated@@578))
 :pattern ( ($generated@@285 $generated@@577 $generated@@579) ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60))
))))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@71) (= (type $generated@@581) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@582) $generated@@89)) (and ($generated@@146 $generated@@581) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60)))) ($generated@@278 ($generated@@290 $generated@@580 $generated@@582) $generated@@580 $generated@@581))
 :pattern ( ($generated@@290 $generated@@580 $generated@@582) ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60))
))))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@584) $generated@@71)) (= (type $generated@@585) $generated@@71)) (= ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))) (and ($generated@@149 ($generated@@93 ($generated@@424 $generated@@583) $generated@@586) $generated@@585) ($generated@@149 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@583) $generated@@586))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@71)) (= (type $generated@@589) $generated@@71)) (= ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))) (and ($generated@@149 ($generated@@93 ($generated@@434 $generated@@587) $generated@@590) $generated@@589) ($generated@@149 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@587) $generated@@590))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@150)) (< ($generated@@591 $generated@@593) ($generated@@592 ($generated@@255 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@255 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@150) (= (type $generated@@596) $generated@@150)) (< ($generated@@591 $generated@@596) ($generated@@592 ($generated@@255 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@255 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@150) (= (type $generated@@598) $generated@@71)) (= (type $generated@@599) $generated@@71)) ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599))) (and (= ($generated@@317 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597)) $generated@@597) ($generated@@167 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597) ($generated@@451 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@150) (= (type $generated@@601) $generated@@71)) (= (type $generated@@602) $generated@@71)) ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602))) (and (= ($generated@@317 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600)) $generated@@600) ($generated@@167 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600) ($generated@@459 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@71) (= (type $generated@@604) $generated@@71)) (= (type $generated@@605) $generated@@150)) ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604))) (and (= ($generated@@317 ($generated@@423 $generated@@176 $generated@@605)) $generated@@605) ($generated@@167 ($generated@@423 $generated@@176 $generated@@605) ($generated@@175 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@93 ($generated@@470 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@93 ($generated@@470 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@71) (= (type $generated@@609) $generated@@71)) (and (= ($generated@@82 ($generated@@175 $generated@@608 $generated@@609)) $generated@@63) (= ($generated@@336 ($generated@@175 $generated@@608 $generated@@609)) $generated@@67)))
 :pattern ( ($generated@@175 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@176) (= ($generated@@591 ($generated@@317 $generated@@610)) ($generated@@592 $generated@@610)))
 :pattern ( ($generated@@591 ($generated@@317 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@150) ($generated@@149 $generated@@611 ($generated@@87 0))) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@611)) $generated@@611) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@611) ($generated@@87 0))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@87 0)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@150) (= (type $generated@@613) $generated@@71)) ($generated@@149 $generated@@612 ($generated@@264 $generated@@613))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612)) $generated@@612) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612) ($generated@@264 $generated@@613))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@264 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@150) (= (type $generated@@615) $generated@@71)) ($generated@@149 $generated@@614 ($generated@@269 $generated@@615))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614)) $generated@@614) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614) ($generated@@269 $generated@@615))))
 :pattern ( ($generated@@149 $generated@@614 ($generated@@269 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@150) (= (type $generated@@617) $generated@@71)) ($generated@@149 $generated@@616 ($generated@@189 $generated@@617))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616)) $generated@@616) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616) ($generated@@189 $generated@@617))))
 :pattern ( ($generated@@149 $generated@@616 ($generated@@189 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@150) (= (type $generated@@619) $generated@@71)) ($generated@@149 $generated@@618 ($generated@@541 $generated@@619))) (and (= ($generated@@317 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618)) $generated@@618) ($generated@@167 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618) ($generated@@541 $generated@@619))))
 :pattern ( ($generated@@149 $generated@@618 ($generated@@541 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@71) (= (type $generated@@621) $generated@@150)) ($generated@@149 $generated@@621 ($generated@@145 $generated@@620))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@621)) $generated@@621) ($generated@@167 ($generated@@423 $generated@@89 $generated@@621) ($generated@@145 $generated@@620))))
 :pattern ( ($generated@@149 $generated@@621 ($generated@@145 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@71) (= (type $generated@@623) $generated@@150)) ($generated@@149 $generated@@623 ($generated@@169 $generated@@622))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@623)) $generated@@623) ($generated@@167 ($generated@@423 $generated@@89 $generated@@623) ($generated@@169 $generated@@622))))
 :pattern ( ($generated@@149 $generated@@623 ($generated@@169 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (=> (and (and (and (= (type $generated@@624) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@625) $generated@@89)) (= (type $generated@@626) ($generated@@73 $generated@@628))) ($generated@@146 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))) ($generated@@160 $generated@@624 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@630) $generated@@71)) (= (type $generated@@631) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@629 $generated@@632)))) ($generated@@278 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@93 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@176) (= (type $generated@@634) $generated@@71)) (= (type $generated@@635) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@635) (and ($generated@@174 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@71) ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@176) (= (type $generated@@638) $generated@@71)) (= (type $generated@@639) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@639) (and ($generated@@174 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@71) ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@150) (= (type $generated@@642) $generated@@150)) (= ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)) ($generated@@274 ($generated@@255 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@317 ($generated@@274 $generated@@643)) ($generated@@274 ($generated@@317 $generated@@643)))
 :pattern ( ($generated@@317 ($generated@@274 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@304 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@303 $generated@@645)) (= ($generated@@302 $generated@@644) 0)) (= $generated@@644 ($generated@@301 $generated@@645))))
 :pattern ( ($generated@@302 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@88 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@330 $generated@@646) ($generated ($generated@@93 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@651) $generated@@2)) ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@653) $generated@@3)) ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@655) $generated@@4)) ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@657) $generated@@499)) ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@659) $generated@@150)) ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@303 $generated@@150)) (= (type $generated@@661) $generated@@71)) (= ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)) (forall (($generated@@662 Int) ) (!  (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@302 $generated@@660))) ($generated@@149 ($generated@@542 $generated@@660 $generated@@662) $generated@@661))
 :pattern ( ($generated@@542 $generated@@660 $generated@@662))
))))
 :pattern ( ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 Int) ) (!  (=> (= (type $generated@@664) ($generated@@303 $generated@@150)) (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@302 $generated@@664))) (< ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))) ($generated@@663 $generated@@664))))
 :pattern ( ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@667) $generated@@71)) (= (type $generated@@668) $generated@@71)) ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668))) (and (and ($generated@@167 ($generated@@340 $generated@@666) ($generated@@264 $generated@@667)) ($generated@@167 ($generated@@391 $generated@@666) ($generated@@264 $generated@@668))) ($generated@@167 ($generated@@422 $generated@@666) ($generated@@264 ($generated@@175 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@670) $generated@@71)) (= (type $generated@@671) $generated@@71)) ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671))) (and (and ($generated@@167 ($generated@@358 $generated@@669) ($generated@@269 $generated@@670)) ($generated@@167 ($generated@@402 $generated@@669) ($generated@@269 $generated@@671))) ($generated@@167 ($generated@@433 $generated@@669) ($generated@@269 ($generated@@175 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@2) ($generated@@167 $generated@@672 $generated@@46))
 :pattern ( ($generated@@167 $generated@@672 $generated@@46))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@3) ($generated@@167 $generated@@673 $generated@@47))
 :pattern ( ($generated@@167 $generated@@673 $generated@@47))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@4) ($generated@@167 $generated@@674 $generated@@44))
 :pattern ( ($generated@@167 $generated@@674 $generated@@44))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@499) ($generated@@167 $generated@@675 $generated@@45))
 :pattern ( ($generated@@167 $generated@@675 $generated@@45))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@150) ($generated@@167 $generated@@676 $generated@@48))
 :pattern ( ($generated@@167 $generated@@676 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Bool)
(declare-fun $generated@@680 (T@U) Bool)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(assert  (and (and (and (= (type $generated@@677) ($generated@@196 $generated@@89 $generated@@4)) (= (type $generated@@678) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@681) $generated@@89)) (= (type $generated@@682) $generated@@71)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@683  (=> (= $generated@@677 ($generated@@195 $generated@@147 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) $generated@@679) (=> $generated@@679 (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))))))
(let (($generated@@684  (=> (and ($generated@@146 $generated@@678) ($generated@@680 $generated@@678)) (=> (and (and (not (= $generated@@681 $generated@@147)) ($generated@@167 $generated@@681 ($generated@@169 $generated@@682))) (and (= 1 $generated@@284) (= (ControlFlow 0 6) 2))) $generated@@683))))
$generated@@684)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 () Bool)
(declare-fun $generated@@385 () T@U)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 () Int)
(declare-fun $generated@@404 () Bool)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@429 () T@T)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 (T@U Int) T@U)
(declare-fun $generated@@481 (T@U) Int)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@556 () Int)
(declare-fun $generated@@578 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@151 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@151 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@224 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@132 $generated@@342 ($generated@@150 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@233 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@145) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@250 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@233 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@238 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@250 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@238 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@365) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@143 ($generated@@356 $generated@@136 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@143 ($generated@@356 $generated@@136 $generated@@365))) ($generated@@144 ($generated@@356 $generated@@136 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@373) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@143 ($generated@@356 $generated@@136 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@143 ($generated@@356 $generated@@136 $generated@@373))) ($generated@@144 ($generated@@356 $generated@@136 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert  (and (= (type $generated@@385) $generated@@145) (= (type $generated@@386) $generated@@64)))
(assert  (=> $generated@@384 (and ($generated@@224 $generated@@385 $generated@@386) ($generated@@0 ($generated@@245 ($generated@@11 true))))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@388 $generated@@389)) $generated@@64)
 :pattern ( ($generated@@387 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@390) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@390) $generated@@394))) (and ($generated@@250 ($generated@@81 ($generated@@357 $generated@@390) $generated@@394) $generated@@392 $generated@@393) ($generated@@250 $generated@@394 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@390) $generated@@394))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@387 $generated@@391 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@64)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@398) $generated@@402))) (and ($generated@@250 ($generated@@81 ($generated@@367 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@250 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@74 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert  (=> (<= 0 $generated@@403) (=> (or $generated@@404 (not (= 0 $generated@@403))) true)))
(assert (forall (($generated@@406 T@T) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@76 $generated@@406 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@303 (type $generated@@407))))
(let (($generated@@409 ($generated@@302 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@301 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@300 $generated@@409 $generated@@408)) (= ($generated@@299 $generated@@407) ($generated@@405 $generated@@409))))))
 :pattern ( ($generated@@299 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@303 (type $generated@@410))))
(let (($generated@@412 ($generated@@302 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@301 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@300 $generated@@412 $generated@@411)) (= ($generated@@335 $generated@@410) ($generated@@405 $generated@@411))))))
 :pattern ( ($generated@@335 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@303 (type $generated@@413))))
(let (($generated@@415 ($generated@@302 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@301 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@300 $generated@@415 $generated@@414)) (= ($generated@@366 $generated@@413) ($generated@@405 $generated@@145))))))
 :pattern ( ($generated@@366 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@285 (type $generated@@416))))
(let (($generated@@418 ($generated@@284 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@283 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@282 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@145) (= (type $generated@@420) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@416) ($generated@@270 ($generated@@223 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@355 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@303 (type $generated@@421))))
(let (($generated@@423 ($generated@@302 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@301 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@300 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@145) (= (type $generated@@425) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@421) ($generated@@270 ($generated@@223 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@366 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@224 $generated@@426 $generated@@46)) (and (= ($generated@@270 ($generated@@356 $generated@@2 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@356 $generated@@2 $generated@@426) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@426 $generated@@46))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@145) ($generated@@224 $generated@@427 $generated@@47)) (and (= ($generated@@270 ($generated@@356 $generated@@3 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@356 $generated@@3 $generated@@427) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@427 $generated@@47))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@224 $generated@@428 $generated@@44)) (and (= ($generated@@270 ($generated@@356 $generated@@4 $generated@@428)) $generated@@428) ($generated@@132 ($generated@@356 $generated@@4 $generated@@428) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@428 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@429) 20))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@224 $generated@@430 $generated@@45)) (and (= ($generated@@270 ($generated@@356 $generated@@429 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@356 $generated@@429 $generated@@430) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@430 $generated@@45))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@64) (= ($generated@@224 ($generated@@270 $generated@@431) $generated@@432) ($generated@@132 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@224 ($generated@@270 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@79 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@76 $generated@@434 $generated@@2)) (<= 0 ($generated@@275 $generated@@433))))
 :pattern ( ($generated@@275 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@265 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@264 $generated@@436)) (<= 0 ($generated@@263 $generated@@435))))
 :pattern ( ($generated@@263 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@64)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@437 ($generated@@387 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@387 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@387 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@387 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@72 ($generated@@387 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@387 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@395 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@395 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@395 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@395 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@72 ($generated@@395 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@395 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@145) (= (type $generated@@458) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@457 $generated@@458)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@135 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@135 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@135 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@135 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) (= (type $generated@@468) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@223 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@145) (= (type $generated@@470) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@223 $generated@@469 $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@473))
)) (forall (($generated@@474 T@U) ($generated@@475 Int) ) (! (let (($generated@@476 ($generated@@265 (type $generated@@474))))
(= (type ($generated@@472 $generated@@474 $generated@@475)) $generated@@476))
 :pattern ( ($generated@@472 $generated@@474 $generated@@475))
))))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@477) ($generated@@264 $generated@@145)) (= (type $generated@@478) $generated@@64)) (= (type $generated@@479) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@477 ($generated@@471 $generated@@478) $generated@@479) (forall (($generated@@480 Int) ) (!  (=> (and (<= 0 $generated@@480) (< $generated@@480 ($generated@@263 $generated@@477))) ($generated@@250 ($generated@@472 $generated@@477 $generated@@480) $generated@@478 $generated@@479))
 :pattern ( ($generated@@472 $generated@@477 $generated@@480))
))))
 :pattern ( ($generated@@74 $generated@@477 ($generated@@471 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 Int) ) (! (= ($generated@@481 ($generated@@75 $generated@@482)) $generated@@482)
 :pattern ( ($generated@@75 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@483 ($generated@@233 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@233 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@486)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@238 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@238 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@490)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@150 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@150 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@494)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@471 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@471 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@471 $generated@@498)) $generated@@57))
 :pattern ( ($generated@@471 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 (type $generated@@499)))
(= ($generated@@356 $generated@@500 ($generated@@270 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@270 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) (= ($generated@@132 $generated@@501 ($generated@@387 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@501) $generated@@504))) (and ($generated@@224 ($generated@@81 ($generated@@357 $generated@@501) $generated@@504) $generated@@503) ($generated@@224 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@501) $generated@@504))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@132 $generated@@501 ($generated@@387 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) (= ($generated@@132 $generated@@505 ($generated@@395 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@505) $generated@@508))) (and ($generated@@224 ($generated@@81 ($generated@@367 $generated@@505) $generated@@508) $generated@@507) ($generated@@224 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@505) $generated@@508))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@132 $generated@@505 ($generated@@395 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@145) (= (type $generated@@512) $generated@@145)) (< ($generated@@509 $generated@@511) ($generated@@510 ($generated@@223 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@223 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@145)) (< ($generated@@509 $generated@@514) ($generated@@510 ($generated@@223 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@223 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) ($generated@@224 $generated@@515 ($generated@@387 $generated@@516 $generated@@517))) (and (= ($generated@@270 ($generated@@356 ($generated@@283 $generated@@145 $generated@@145) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@356 ($generated@@283 $generated@@145 $generated@@145) $generated@@515) ($generated@@387 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@224 $generated@@515 ($generated@@387 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) ($generated@@224 $generated@@518 ($generated@@395 $generated@@519 $generated@@520))) (and (= ($generated@@270 ($generated@@356 ($generated@@301 $generated@@145 $generated@@145) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@356 ($generated@@301 $generated@@145 $generated@@145) $generated@@518) ($generated@@395 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@224 $generated@@518 ($generated@@395 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@64) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@145)) ($generated@@224 $generated@@523 ($generated@@135 $generated@@521 $generated@@522))) (and (= ($generated@@270 ($generated@@356 $generated@@136 $generated@@523)) $generated@@523) ($generated@@132 ($generated@@356 $generated@@136 $generated@@523) ($generated@@135 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@224 $generated@@523 ($generated@@135 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
 (not ($generated@@0 ($generated@@81 ($generated@@405 $generated@@525) $generated@@524))))
 :pattern ( (let (($generated@@525 (type $generated@@524)))
($generated@@81 ($generated@@405 $generated@@525) $generated@@524)))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@528 $generated@@529)) $generated@@62) (= ($generated@@526 ($generated@@135 $generated@@528 $generated@@529)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@136) (= ($generated@@509 ($generated@@270 $generated@@530)) ($generated@@510 $generated@@530)))
 :pattern ( ($generated@@509 ($generated@@270 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@145) ($generated@@224 $generated@@531 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@356 $generated@@2 $generated@@531)) $generated@@531) ($generated@@132 ($generated@@356 ($generated@@76 $generated@@145 $generated@@4) $generated@@531) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@531 ($generated@@75 0)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@64)) ($generated@@224 $generated@@532 ($generated@@233 $generated@@533))) (and (= ($generated@@270 ($generated@@356 ($generated@@76 $generated@@145 $generated@@4) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@356 ($generated@@76 $generated@@145 $generated@@4) $generated@@532) ($generated@@233 $generated@@533))))
 :pattern ( ($generated@@224 $generated@@532 ($generated@@233 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) ($generated@@224 $generated@@534 ($generated@@238 $generated@@535))) (and (= ($generated@@270 ($generated@@356 ($generated@@76 $generated@@145 $generated@@4) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@356 ($generated@@76 $generated@@145 $generated@@4) $generated@@534) ($generated@@238 $generated@@535))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@238 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) ($generated@@224 $generated@@536 ($generated@@150 $generated@@537))) (and (= ($generated@@270 ($generated@@356 ($generated@@76 $generated@@145 $generated@@2) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@356 ($generated@@76 $generated@@145 $generated@@2) $generated@@536) ($generated@@150 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@536 ($generated@@150 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@224 $generated@@538 ($generated@@471 $generated@@539))) (and (= ($generated@@270 ($generated@@356 ($generated@@264 $generated@@145) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@356 ($generated@@264 $generated@@145) $generated@@538) ($generated@@471 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@471 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@540 ($generated@@150 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@540 $generated@@543)))) ($generated@@250 $generated@@543 $generated@@541 $generated@@542))
 :pattern ( ($generated@@81 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@74 $generated@@540 ($generated@@150 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@136) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@546) (and ($generated@@134 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@64) ($generated@@74 $generated@@544 ($generated@@135 $generated@@545 $generated@@547) $generated@@546))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@135 $generated@@545 $generated@@547) $generated@@546))
))))) ($generated@@250 ($generated@@143 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@136) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@550) (and ($generated@@134 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@64) ($generated@@74 $generated@@548 ($generated@@135 $generated@@551 $generated@@549) $generated@@550))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@135 $generated@@551 $generated@@549) $generated@@550))
))))) ($generated@@250 ($generated@@144 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@552) ($generated@@245 $generated@@553)) ($generated@@245 ($generated@@223 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@552) ($generated@@245 $generated@@553)))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@243 $generated@@554))) ($generated@@245 ($generated@@270 ($generated@@8 $generated@@554))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@243 $generated@@554))))
)))
(assert (forall (($generated@@555 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@555)) ($generated@@245 ($generated@@270 $generated@@555)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@555)))
)))
(assert  (=> (<= 0 $generated@@403) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (or $generated@@404 (and (not (= 0 $generated@@403)) ($generated@@249 $generated@@557)))) (and $generated@@384 (= $generated@@556 ($generated@@243 5))))
 :pattern ( $generated@@556 ($generated@@249 $generated@@557))
))))
(assert  (=> (<= 0 $generated@@403) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (or $generated@@404 (and (not (= 0 $generated@@403)) ($generated@@249 $generated@@558)))) (and $generated@@384 (= $generated@@556 ($generated@@243 5))))
 :weight 3
 :pattern ( $generated@@556 ($generated@@249 $generated@@558))
))))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@265 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@264 $generated@@560)) (= ($generated@@263 $generated@@559) 0)) (= $generated@@559 ($generated@@262 $generated@@560))))
 :pattern ( ($generated@@263 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@275 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@275 $generated@@561) ($generated ($generated@@81 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@2)) ($generated@@74 $generated@@566 $generated@@46 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@46 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@3)) ($generated@@74 $generated@@568 $generated@@47 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@47 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@4)) ($generated@@74 $generated@@570 $generated@@44 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@44 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@429)) ($generated@@74 $generated@@572 $generated@@45 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@45 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@145)) ($generated@@74 $generated@@574 $generated@@48 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@48 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@264 $generated@@145)) (= (type $generated@@576) $generated@@64)) (= ($generated@@132 $generated@@575 ($generated@@471 $generated@@576)) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@263 $generated@@575))) ($generated@@224 ($generated@@472 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@472 $generated@@575 $generated@@577))
))))
 :pattern ( ($generated@@132 $generated@@575 ($generated@@471 $generated@@576)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (!  (=> (= (type $generated@@579) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@263 $generated@@579))) (< ($generated@@510 ($generated@@356 $generated@@136 ($generated@@472 $generated@@579 $generated@@580))) ($generated@@578 $generated@@579))))
 :pattern ( ($generated@@510 ($generated@@356 $generated@@136 ($generated@@472 $generated@@579 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@64)) ($generated@@132 $generated@@581 ($generated@@387 $generated@@582 $generated@@583))) (and (and ($generated@@132 ($generated@@281 $generated@@581) ($generated@@233 $generated@@582)) ($generated@@132 ($generated@@324 $generated@@581) ($generated@@233 $generated@@583))) ($generated@@132 ($generated@@355 $generated@@581) ($generated@@233 ($generated@@135 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@132 $generated@@581 ($generated@@387 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@132 $generated@@584 ($generated@@395 $generated@@585 $generated@@586))) (and (and ($generated@@132 ($generated@@299 $generated@@584) ($generated@@238 $generated@@585)) ($generated@@132 ($generated@@335 $generated@@584) ($generated@@238 $generated@@586))) ($generated@@132 ($generated@@366 $generated@@584) ($generated@@238 ($generated@@135 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@395 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@2) ($generated@@132 $generated@@587 $generated@@46))
 :pattern ( ($generated@@132 $generated@@587 $generated@@46))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@3) ($generated@@132 $generated@@588 $generated@@47))
 :pattern ( ($generated@@132 $generated@@588 $generated@@47))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@4) ($generated@@132 $generated@@589 $generated@@44))
 :pattern ( ($generated@@132 $generated@@589 $generated@@44))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@429) ($generated@@132 $generated@@590 $generated@@45))
 :pattern ( ($generated@@132 $generated@@590 $generated@@45))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@145) ($generated@@132 $generated@@591 $generated@@48))
 :pattern ( ($generated@@132 $generated@@591 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@592) $generated@@145) (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@594) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@595) $generated@@77)) (= (type $generated@@596) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@598  (=> (= (ControlFlow 0 3) (- 0 2)) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@145) (and ($generated@@224 $generated@@599 $generated@@386) ($generated@@0 ($generated@@245 ($generated@@11 true)))))
 :no-pattern (type $generated@@599)
 :no-pattern ($generated $generated@@599)
 :no-pattern ($generated@@0 $generated@@599)
)))))
(let (($generated@@600  (=> (and (not (and ($generated@@224 $generated@@592 $generated@@386) ($generated@@250 $generated@@592 $generated@@386 $generated@@593))) (= (ControlFlow 0 5) 3)) $generated@@598)))
(let (($generated@@601  (=> (and (and ($generated@@224 $generated@@592 $generated@@386) ($generated@@250 $generated@@592 $generated@@386 $generated@@593)) (= (ControlFlow 0 4) 3)) $generated@@598)))
(let (($generated@@602  (=> (= $generated@@594 ($generated@@211 $generated@@595 $generated@@593 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 4) $generated@@601) (=> (= (ControlFlow 0 6) 5) $generated@@600)))))
(let (($generated@@603 true))
(let (($generated@@604  (=> (= $generated@@596 ($generated@@156 $generated@@595 $generated@@593 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@603) (=> (= (ControlFlow 0 7) 6) $generated@@602)))))
(let (($generated@@605  (=> (and (and ($generated@@249 $generated@@593) ($generated@@597 $generated@@593)) (and (= 0 $generated@@403) (= (ControlFlow 0 8) 7))) $generated@@604)))
$generated@@605))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Bool)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 (T@U T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 () Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@157) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@158) $generated@@47)) (= (type $generated@@159) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@160) ($generated@@50 $generated@@4))) (= ($generated@@1 $generated@@172) 11)) (= (type $generated@@163) $generated@@172)) (= ($generated@@1 $generated@@173) 12)) (= (type $generated@@164) $generated@@173)) (= (type $generated@@169) $generated@@172)) (= (type $generated@@170) $generated@@172)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@174  (=> (and (= $generated@@157 ($generated@@45 $generated@@158 $generated@@159 $generated@@160 false)) (=> $generated@@161 (and ($generated@@162 $generated@@163 $generated@@164) ($generated@@165 $generated@@163 $generated@@164 $generated@@159)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@161) (=> $generated@@161 (=> (= (ControlFlow 0 2) (- 0 1)) true))))))
(let (($generated@@175  (=> (and (and (and ($generated@@166 $generated@@159) ($generated@@167 $generated@@159)) (=> $generated@@168 (and ($generated@@162 $generated@@169 $generated@@164) ($generated@@165 $generated@@169 $generated@@164 $generated@@159)))) (and (and (=> $generated@@161 (and ($generated@@162 $generated@@170 $generated@@164) ($generated@@165 $generated@@170 $generated@@164 $generated@@159))) true) (and (= 0 $generated@@171) (= (ControlFlow 0 4) 2)))) $generated@@174)))
$generated@@175)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@255 () Int)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@321 (T@T T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Bool)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@577 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) $generated@@152)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@245 $generated@@251)) (= ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@71)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@143) (= ($generated@@141 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert  (=> (< 0 $generated@@255) (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@80) ($generated@@139 ($generated@@8 ($generated@@256 $generated@@257)) $generated@@46))
 :pattern ( ($generated@@256 $generated@@257))
))))
(assert  (=> (< 0 $generated@@255) (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@259) $generated@@80)) (and ($generated@@245 $generated@@258) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@258 $generated@@259) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@256 $generated@@259)) $generated@@46 $generated@@258))
 :pattern ( ($generated@@256 $generated@@259) ($generated@@86 ($generated@@84 $generated@@258 $generated@@259) $generated@@60))
))))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@143) ($generated@@141 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@152) (= (type $generated@@262) $generated@@152)) (= $generated@@260 ($generated@@221 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@141 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 17)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@152)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@67) (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@246 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@77 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@246 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@79 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@82 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@79 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@84 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 18)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@79 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@79 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@82 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@79 $generated@@319 $generated@@2)) (= ($generated@@158 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (and (<= 0 ($generated ($generated@@84 $generated@@318 $generated@@320))) (<= ($generated ($generated@@84 $generated@@318 $generated@@320)) ($generated@@276 $generated@@318))))
 :pattern ( ($generated@@84 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@158 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ($generated@@323 T@U) ) (! (= (type ($generated@@321 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@152) ($generated@@222 $generated@@324 $generated@@135)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@324)) $generated@@324) ($generated@@139 ($generated@@321 $generated@@80 $generated@@324) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@324 $generated@@135))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@152) ($generated@@222 $generated@@325 $generated@@218)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@325)) $generated@@325) ($generated@@139 ($generated@@321 $generated@@80 $generated@@325) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@325 $generated@@218))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@80) (= ($generated@@139 $generated@@326 $generated@@218)  (and ($generated@@139 $generated@@326 $generated@@135) (not (= $generated@@326 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@326 $generated@@218))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@286 (type $generated@@327))))
(let (($generated@@329 ($generated@@285 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@284 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@283 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@282 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@286 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@79 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@286 (type $generated@@334))))
(let (($generated@@336 ($generated@@285 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@284 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@283 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@304 (type $generated@@338))))
(let (($generated@@340 ($generated@@303 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@302 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@301 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@300 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@304 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@304 (type $generated@@345))))
(let (($generated@@347 ($generated@@303 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@302 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@301 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@350) $generated@@67)) (= ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@349 $generated@@351)))) ($generated@@222 $generated@@351 $generated@@350))
 :pattern ( ($generated@@84 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@353) $generated@@67)) (= (type $generated@@354) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@352 ($generated@@231 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@152) ($generated@@0 ($generated@@84 $generated@@352 $generated@@355))) ($generated@@246 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@84 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@77 $generated@@352 ($generated@@231 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@236 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@152) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@246 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@236 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@84 ($generated@@277 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@84 ($generated@@277 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@286 (type $generated@@365))))
(let (($generated@@367 ($generated@@285 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@369) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369)))) (= ($generated@@84 ($generated@@363 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@369))))))
 :pattern ( ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@304 (type $generated@@373))))
(let (($generated@@375 ($generated@@303 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@377) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377)))) (= ($generated@@84 ($generated@@371 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@285 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@284 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@331 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@303 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@302 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@383) $generated@@387))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@67)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))) (and ($generated@@246 ($generated@@84 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@246 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))) (and ($generated@@246 ($generated@@84 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@246 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@79 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@304 (type $generated@@406))))
(let (($generated@@408 ($generated@@303 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@302 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@301 $generated@@408 $generated@@407)) (= ($generated@@300 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@300 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@304 (type $generated@@409))))
(let (($generated@@411 ($generated@@303 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@302 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@301 $generated@@411 $generated@@410)) (= ($generated@@342 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@342 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@304 (type $generated@@412))))
(let (($generated@@414 ($generated@@303 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@302 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@301 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@152))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@286 (type $generated@@415))))
(let (($generated@@417 ($generated@@285 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@284 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@283 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@362 $generated@@415) ($generated@@271 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@304 (type $generated@@420))))
(let (($generated@@422 ($generated@@303 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@302 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@301 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@152) (= (type $generated@@424) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@420) ($generated@@271 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@321 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@271 ($generated@@321 $generated@@3 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@321 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@271 ($generated@@321 $generated@@4 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@321 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@271 ($generated@@321 $generated@@428 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@321 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@222 ($generated@@271 $generated@@430) $generated@@431) ($generated@@139 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@271 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@82 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@79 $generated@@433 $generated@@2)) (<= 0 ($generated@@276 $generated@@432))))
 :pattern ( ($generated@@276 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@266 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@265 $generated@@435)) (<= 0 ($generated@@264 $generated@@434))))
 :pattern ( ($generated@@264 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@75 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@152) (= (type $generated@@457) $generated@@152)) (= ($generated@@252 ($generated@@221 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@142 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@142 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@142 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@266 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@265 $generated@@152)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@264 $generated@@476))) ($generated@@246 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@78 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@78 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@157 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@157 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@321 $generated@@499 ($generated@@271 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@271 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@67)) (= ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@84 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) (= ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@84 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@221 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@221 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@271 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@271 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@152)) ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521))) (and (= ($generated@@271 ($generated@@321 $generated@@143 $generated@@522)) $generated@@522) ($generated@@139 ($generated@@321 $generated@@143 $generated@@522) ($generated@@142 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@84 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@84 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@142 $generated@@527 $generated@@528)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@143) (= ($generated@@508 ($generated@@271 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@271 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@152) ($generated@@222 $generated@@530 ($generated@@78 0))) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@530)) $generated@@530) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@530) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@78 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@67)) ($generated@@222 $generated@@531 ($generated@@231 $generated@@532))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@531)) $generated@@531) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@231 $generated@@532))))
 :pattern ( ($generated@@222 $generated@@531 ($generated@@231 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@222 $generated@@533 ($generated@@236 $generated@@534))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533) ($generated@@236 $generated@@534))))
 :pattern ( ($generated@@222 $generated@@533 ($generated@@236 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@222 $generated@@535 ($generated@@157 $generated@@536))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@535) ($generated@@157 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@157 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@222 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@271 ($generated@@321 ($generated@@265 $generated@@152) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@321 ($generated@@265 $generated@@152) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@525 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@525 $generated@@218) $generated@@66))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@539 $generated@@542)))) ($generated@@246 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@84 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@80) (= ($generated@@139 $generated@@546 $generated@@135)  (or (= $generated@@546 $generated@@136) ($generated@@543 ($generated@@544 $generated@@546)))))
 :pattern ( ($generated@@139 $generated@@546 $generated@@135))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@143) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@549) (and ($generated@@141 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@67) ($generated@@77 $generated@@547 ($generated@@142 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@77 $generated@@547 ($generated@@142 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@246 ($generated@@150 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@246 ($generated@@150 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@143) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@553) (and ($generated@@141 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@67) ($generated@@77 $generated@@551 ($generated@@142 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@77 $generated@@551 ($generated@@142 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@246 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@246 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@152) (= (type $generated@@556) $generated@@152)) (= ($generated@@221 ($generated@@241 $generated@@555) ($generated@@241 $generated@@556)) ($generated@@241 ($generated@@221 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@555) ($generated@@241 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= ($generated@@271 ($generated@@241 $generated@@557)) ($generated@@241 ($generated@@271 $generated@@557)))
 :pattern ( ($generated@@271 ($generated@@241 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@266 (type $generated@@558))))
 (=> (and (= (type $generated@@558) ($generated@@265 $generated@@559)) (= ($generated@@264 $generated@@558) 0)) (= $generated@@558 ($generated@@263 $generated@@559))))
 :pattern ( ($generated@@264 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@561)))
 (=> (and (and (= (type $generated@@560) ($generated@@79 $generated@@563 $generated@@2)) (= (type $generated@@562) $generated@@2)) (<= 0 ($generated $generated@@562))) (= ($generated@@276 ($generated@@85 $generated@@560 $generated@@561 $generated@@562)) (+ (- ($generated@@276 $generated@@560) ($generated ($generated@@84 $generated@@560 $generated@@561))) ($generated $generated@@562)))))
 :pattern ( ($generated@@276 ($generated@@85 $generated@@560 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@565) $generated@@2)) ($generated@@77 $generated@@565 $generated@@46 $generated@@564))
 :pattern ( ($generated@@77 $generated@@565 $generated@@46 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@567) $generated@@3)) ($generated@@77 $generated@@567 $generated@@47 $generated@@566))
 :pattern ( ($generated@@77 $generated@@567 $generated@@47 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@569) $generated@@4)) ($generated@@77 $generated@@569 $generated@@44 $generated@@568))
 :pattern ( ($generated@@77 $generated@@569 $generated@@44 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@571) $generated@@428)) ($generated@@77 $generated@@571 $generated@@45 $generated@@570))
 :pattern ( ($generated@@77 $generated@@571 $generated@@45 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@573) $generated@@152)) ($generated@@77 $generated@@573 $generated@@48 $generated@@572))
 :pattern ( ($generated@@77 $generated@@573 $generated@@48 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@265 $generated@@152)) (= (type $generated@@575) $generated@@67)) (= ($generated@@139 $generated@@574 ($generated@@470 $generated@@575)) (forall (($generated@@576 Int) ) (!  (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@264 $generated@@574))) ($generated@@222 ($generated@@471 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@471 $generated@@574 $generated@@576))
))))
 :pattern ( ($generated@@139 $generated@@574 ($generated@@470 $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 Int) ) (!  (=> (= (type $generated@@578) ($generated@@265 $generated@@152)) (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@264 $generated@@578))) (< ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@578 $generated@@579))) ($generated@@577 $generated@@578))))
 :pattern ( ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@578 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@139 $generated@@580 ($generated@@388 $generated@@581 $generated@@582))) (and (and ($generated@@139 ($generated@@282 $generated@@580) ($generated@@231 $generated@@581)) ($generated@@139 ($generated@@331 $generated@@580) ($generated@@231 $generated@@582))) ($generated@@139 ($generated@@362 $generated@@580) ($generated@@231 ($generated@@142 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@139 $generated@@580 ($generated@@388 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@67)) ($generated@@139 $generated@@583 ($generated@@396 $generated@@584 $generated@@585))) (and (and ($generated@@139 ($generated@@300 $generated@@583) ($generated@@236 $generated@@584)) ($generated@@139 ($generated@@342 $generated@@583) ($generated@@236 $generated@@585))) ($generated@@139 ($generated@@370 $generated@@583) ($generated@@236 ($generated@@142 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@139 $generated@@583 ($generated@@396 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@2) ($generated@@139 $generated@@586 $generated@@46))
 :pattern ( ($generated@@139 $generated@@586 $generated@@46))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@3) ($generated@@139 $generated@@587 $generated@@47))
 :pattern ( ($generated@@139 $generated@@587 $generated@@47))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@4) ($generated@@139 $generated@@588 $generated@@44))
 :pattern ( ($generated@@139 $generated@@588 $generated@@44))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@428) ($generated@@139 $generated@@589 $generated@@45))
 :pattern ( ($generated@@139 $generated@@589 $generated@@45))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@152) ($generated@@139 $generated@@590 $generated@@48))
 :pattern ( ($generated@@139 $generated@@590 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 (T@U) Bool)
(declare-fun $generated@@595 () Bool)
(declare-fun $generated@@596 () T@U)
(assert  (and (and (and (= (type $generated@@591) $generated@@80) (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@593) ($generated@@164 $generated@@80 $generated@@4))) (= (type $generated@@596) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@597  (=> (= (ControlFlow 0 2) (- 0 1)) (or (and ($generated@@139 $generated@@136 $generated@@218) (= ($generated@@256 $generated@@136) ($generated@@256 $generated@@136))) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@80) (and ($generated@@139 $generated@@598 $generated@@218) (= ($generated@@256 $generated@@598) ($generated@@256 $generated@@598))))
 :no-pattern (type $generated@@598)
 :no-pattern ($generated $generated@@598)
 :no-pattern ($generated@@0 $generated@@598)
))))))
(let (($generated@@599  (=> (and (not (and ($generated@@139 $generated@@591 $generated@@218) ($generated@@77 $generated@@591 $generated@@218 $generated@@592))) (= (ControlFlow 0 6) 2)) $generated@@597)))
(let (($generated@@600  (=> (and ($generated@@139 $generated@@591 $generated@@218) ($generated@@77 $generated@@591 $generated@@218 $generated@@592)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@591 $generated@@136))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= $generated@@591 $generated@@136))) (=> (= (ControlFlow 0 3) 2) $generated@@597))))))
(let (($generated@@601  (=> (= $generated@@593 ($generated@@163 $generated@@136 $generated@@592 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 3) $generated@@600) (=> (= (ControlFlow 0 7) 6) $generated@@599)))))
(let (($generated@@602  (=> (and ($generated@@245 $generated@@592) ($generated@@594 $generated@@592)) (=> (and (and (=> $generated@@595 (and ($generated@@139 $generated@@596 $generated@@218) ($generated@@77 $generated@@596 $generated@@218 $generated@@592))) true) (and (= 1 $generated@@255) (= (ControlFlow 0 8) 7))) $generated@@601))))
$generated@@602))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@370 (T@U T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@T) T@U)
(declare-fun $generated@@410 () T@T)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@453 (T@U Int) T@U)
(declare-fun $generated@@462 (T@U) Int)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@555 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (= ($generated@@151 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@81 $generated@@303 $generated@@305))) (<= ($generated ($generated@@81 $generated@@303 $generated@@305)) ($generated@@261 $generated@@303))))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@271 (type $generated@@306))))
(let (($generated@@308 ($generated@@270 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@269 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@268 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@267 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@271 (type $generated@@313))))
(let (($generated@@315 ($generated@@270 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@269 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@268 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@289 (type $generated@@317))))
(let (($generated@@319 ($generated@@288 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@287 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@286 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@285 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@329) $generated@@64)) (= ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330)))) ($generated@@212 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= (type $generated@@333) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@145) ($generated@@0 ($generated@@81 $generated@@331 $generated@@334))) ($generated@@236 $generated@@334 $generated@@332 $generated@@333))
 :pattern ( ($generated@@81 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@145) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@236 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@340) $generated@@339)) 0))
 :pattern ( (let (($generated@@340 (type $generated@@339)))
($generated@@81 ($generated@@262 $generated@@340) $generated@@339)))
)))
(assert  (and (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@341 $generated@@344)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@341 $generated@@344))
)) (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@342 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@342 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@271 (type $generated@@347))))
(let (($generated@@349 ($generated@@270 (type $generated@@347))))
(= (type ($generated@@343 $generated@@347)) ($generated@@76 $generated@@349 $generated@@348))))
 :pattern ( ($generated@@343 $generated@@347))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@351) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351)))) (= ($generated@@81 ($generated@@343 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@351))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@289 (type $generated@@355))))
(let (($generated@@357 ($generated@@288 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@76 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@359) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359)))) (= ($generated@@81 ($generated@@353 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@359))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(let (($generated@@363 ($generated@@270 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@269 $generated@@363 $generated@@362)) (= ($generated@@0 ($generated@@81 ($generated@@310 $generated@@360) $generated@@361)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@360) $generated@@364)) (= $generated@@361 ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@360) $generated@@364))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))
))))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(let (($generated@@368 ($generated@@288 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@287 $generated@@368 $generated@@367)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@365) $generated@@366)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@365) $generated@@369)) (= $generated@@366 ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@365) $generated@@369))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@371 $generated@@372)) $generated@@64)
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@373) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@374) $generated@@64)) (= (type $generated@@375) $generated@@64)) (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))) (and ($generated@@236 ($generated@@81 ($generated@@343 $generated@@373) $generated@@377) $generated@@375 $generated@@376) ($generated@@236 $generated@@377 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))
))))
 :pattern ( ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@64)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))) (and ($generated@@236 ($generated@@81 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@236 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 T@T) ) (! (= (type ($generated@@386 $generated@@387)) ($generated@@76 $generated@@387 $generated@@4))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@289 (type $generated@@388))))
(let (($generated@@390 ($generated@@288 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@287 $generated@@390 $generated@@389)) (= (= $generated@@388 ($generated@@286 $generated@@390 $generated@@389)) (= ($generated@@285 $generated@@388) ($generated@@386 $generated@@390))))))
 :pattern ( ($generated@@285 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@289 (type $generated@@391))))
(let (($generated@@393 ($generated@@288 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@287 $generated@@393 $generated@@392)) (= (= $generated@@391 ($generated@@286 $generated@@393 $generated@@392)) (= ($generated@@321 $generated@@391) ($generated@@386 $generated@@392))))))
 :pattern ( ($generated@@321 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@289 (type $generated@@394))))
(let (($generated@@396 ($generated@@288 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@287 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@286 $generated@@396 $generated@@395)) (= ($generated@@352 $generated@@394) ($generated@@386 $generated@@145))))))
 :pattern ( ($generated@@352 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@271 (type $generated@@397))))
(let (($generated@@399 ($generated@@270 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@269 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@268 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (and (and (= (type $generated@@400) $generated@@145) (= (type $generated@@401) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@397) ($generated@@256 ($generated@@211 $generated@@400 $generated@@401)))))
 :no-pattern (type $generated@@400)
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@341 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@289 (type $generated@@402))))
(let (($generated@@404 ($generated@@288 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@287 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@286 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@145) (= (type $generated@@406) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@402) ($generated@@256 ($generated@@211 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@352 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@212 $generated@@407 $generated@@46)) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@407)) $generated@@407) ($generated@@132 ($generated@@342 $generated@@2 $generated@@407) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@407 $generated@@46))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@145) ($generated@@212 $generated@@408 $generated@@47)) (and (= ($generated@@256 ($generated@@342 $generated@@3 $generated@@408)) $generated@@408) ($generated@@132 ($generated@@342 $generated@@3 $generated@@408) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@408 $generated@@47))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@44)) (and (= ($generated@@256 ($generated@@342 $generated@@4 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@342 $generated@@4 $generated@@409) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@410) 20))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@45)) (and (= ($generated@@256 ($generated@@342 $generated@@410 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@342 $generated@@410 $generated@@411) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@45))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@412) $generated@@413) ($generated@@132 $generated@@412 $generated@@413)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@79 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@76 $generated@@415 $generated@@2)) (<= 0 ($generated@@261 $generated@@414))))
 :pattern ( ($generated@@261 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@251 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@250 $generated@@417)) (<= 0 ($generated@@249 $generated@@416))))
 :pattern ( ($generated@@249 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@64) (= (type $generated@@421) $generated@@64)) (= ($generated@@418 ($generated@@370 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@370 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@64) (= (type $generated@@425) $generated@@64)) (= ($generated@@422 ($generated@@370 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@370 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@72 ($generated@@370 $generated@@426 $generated@@427)) $generated@@58))
 :pattern ( ($generated@@370 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@378 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@378 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@378 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@378 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@378 $generated@@436 $generated@@437)) $generated@@59))
 :pattern ( ($generated@@378 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) (= (type $generated@@439) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@438 $generated@@439)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@135 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@135 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@135 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@135 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert  (and (forall (($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@454))
)) (forall (($generated@@455 T@U) ($generated@@456 Int) ) (! (let (($generated@@457 ($generated@@251 (type $generated@@455))))
(= (type ($generated@@453 $generated@@455 $generated@@456)) $generated@@457))
 :pattern ( ($generated@@453 $generated@@455 $generated@@456))
))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (= (type $generated@@458) ($generated@@250 $generated@@145)) (= (type $generated@@459) $generated@@64)) (= (type $generated@@460) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460) (forall (($generated@@461 Int) ) (!  (=> (and (<= 0 $generated@@461) (< $generated@@461 ($generated@@249 $generated@@458))) ($generated@@236 ($generated@@453 $generated@@458 $generated@@461) $generated@@459 $generated@@460))
 :pattern ( ($generated@@453 $generated@@458 $generated@@461))
))))
 :pattern ( ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 Int) ) (! (= ($generated@@462 ($generated@@75 $generated@@463)) $generated@@463)
 :pattern ( ($generated@@75 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@464 ($generated@@221 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@467)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@468 ($generated@@226 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@226 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@471)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@150 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@150 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@475)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@452 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@452 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@452 $generated@@479)) $generated@@57))
 :pattern ( ($generated@@452 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(= ($generated@@342 $generated@@481 ($generated@@256 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@256 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))) (and ($generated@@212 ($generated@@81 ($generated@@343 $generated@@482) $generated@@485) $generated@@484) ($generated@@212 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@482) $generated@@485))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))) (and ($generated@@212 ($generated@@81 ($generated@@353 $generated@@486) $generated@@489) $generated@@488) ($generated@@212 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@486) $generated@@489))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) (= (type $generated@@493) $generated@@145)) (< ($generated@@490 $generated@@492) ($generated@@491 ($generated@@211 $generated@@492 $generated@@493))))
 :pattern ( ($generated@@211 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@490 $generated@@495) ($generated@@491 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498))) (and (= ($generated@@256 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496)) $generated@@496) ($generated@@132 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496) ($generated@@370 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501))) (and (= ($generated@@256 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499)) $generated@@499) ($generated@@132 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499) ($generated@@378 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@145)) ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503))) (and (= ($generated@@256 ($generated@@342 $generated@@136 $generated@@504)) $generated@@504) ($generated@@132 ($generated@@342 $generated@@136 $generated@@504) ($generated@@135 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 $generated@@506) $generated@@505))))
 :pattern ( (let (($generated@@506 (type $generated@@505)))
($generated@@81 ($generated@@386 $generated@@506) $generated@@505)))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@509 $generated@@510)) $generated@@62) (= ($generated@@507 ($generated@@135 $generated@@509 $generated@@510)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@136) (= ($generated@@490 ($generated@@256 $generated@@511)) ($generated@@491 $generated@@511)))
 :pattern ( ($generated@@490 ($generated@@256 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) ($generated@@212 $generated@@512 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@512)) $generated@@512) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@512) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@512 ($generated@@75 0)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) ($generated@@212 $generated@@513 ($generated@@221 $generated@@514))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513) ($generated@@221 $generated@@514))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@221 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@226 $generated@@516))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@226 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@226 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@150 $generated@@518))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517) ($generated@@150 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@150 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@452 $generated@@520))) (and (= ($generated@@256 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519) ($generated@@452 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@452 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@521 $generated@@524)))) ($generated@@236 $generated@@524 $generated@@522 $generated@@523))
 :pattern ( ($generated@@81 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@136) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@527) (and ($generated@@134 $generated@@525) (exists (($generated@@528 T@U) ) (!  (and (= (type $generated@@528) $generated@@64) ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
))))) ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@136) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@531) (and ($generated@@134 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@64) ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
 :pattern ( ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
))))) ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)) ($generated@@231 ($generated@@211 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@535)) ($generated@@231 ($generated@@256 $generated@@535)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@251 (type $generated@@536))))
 (=> (and (= (type $generated@@536) ($generated@@250 $generated@@537)) (= ($generated@@249 $generated@@536) 0)) (= $generated@@536 ($generated@@248 $generated@@537))))
 :pattern ( ($generated@@249 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@539)))
 (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@541 $generated@@2)) (= (type $generated@@540) $generated@@2)) (<= 0 ($generated $generated@@540))) (= ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)) (+ (- ($generated@@261 $generated@@538) ($generated ($generated@@81 $generated@@538 $generated@@539))) ($generated $generated@@540)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@543) $generated@@2)) ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
 :pattern ( ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@545) $generated@@3)) ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
 :pattern ( ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@547) $generated@@4)) ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
 :pattern ( ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@549) $generated@@410)) ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
 :pattern ( ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@145)) ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@250 $generated@@145)) (= (type $generated@@553) $generated@@64)) (= ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@249 $generated@@552))) ($generated@@212 ($generated@@453 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@453 $generated@@552 $generated@@554))
))))
 :pattern ( ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (= (type $generated@@556) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@249 $generated@@556))) (< ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))) ($generated@@555 $generated@@556))))
 :pattern ( ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560))) (and (and ($generated@@132 ($generated@@267 $generated@@558) ($generated@@221 $generated@@559)) ($generated@@132 ($generated@@310 $generated@@558) ($generated@@221 $generated@@560))) ($generated@@132 ($generated@@341 $generated@@558) ($generated@@221 ($generated@@135 $generated@@559 $generated@@560)))))
 :pattern ( ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@285 $generated@@561) ($generated@@226 $generated@@562)) ($generated@@132 ($generated@@321 $generated@@561) ($generated@@226 $generated@@563))) ($generated@@132 ($generated@@352 $generated@@561) ($generated@@226 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@2) ($generated@@132 $generated@@564 $generated@@46))
 :pattern ( ($generated@@132 $generated@@564 $generated@@46))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@3) ($generated@@132 $generated@@565 $generated@@47))
 :pattern ( ($generated@@132 $generated@@565 $generated@@47))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@4) ($generated@@132 $generated@@566 $generated@@44))
 :pattern ( ($generated@@132 $generated@@566 $generated@@44))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@410) ($generated@@132 $generated@@567 $generated@@45))
 :pattern ( ($generated@@132 $generated@@567 $generated@@45))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@145) ($generated@@132 $generated@@568 $generated@@48))
 :pattern ( ($generated@@132 $generated@@568 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@569 () T@U)
(declare-fun $generated@@570 () T@U)
(declare-fun $generated@@571 () T@U)
(declare-fun $generated@@572 () T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 (T@U) Bool)
(declare-fun $generated@@575 () Bool)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 () Int)
(assert  (and (and (and (and (and (= (type $generated@@569) $generated@@64) (= (type $generated@@570) $generated@@145)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@572) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@573) $generated@@77)) (= (type $generated@@576) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@578  (=> (= (ControlFlow 0 2) (- 0 1)) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@145) (and ($generated@@212 $generated@@579 $generated@@569) ($generated@@0 ($generated@@231 ($generated@@11 true)))))
 :no-pattern (type $generated@@579)
 :no-pattern ($generated $generated@@579)
 :no-pattern ($generated@@0 $generated@@579)
)))))
(let (($generated@@580  (=> (and (not (and ($generated@@212 $generated@@570 $generated@@569) ($generated@@236 $generated@@570 $generated@@569 $generated@@571))) (= (ControlFlow 0 4) 2)) $generated@@578)))
(let (($generated@@581  (=> (and (and ($generated@@212 $generated@@570 $generated@@569) ($generated@@236 $generated@@570 $generated@@569 $generated@@571)) (= (ControlFlow 0 3) 2)) $generated@@578)))
(let (($generated@@582  (=> (= $generated@@572 ($generated@@156 $generated@@573 $generated@@571 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@581) (=> (= (ControlFlow 0 5) 4) $generated@@580)))))
(let (($generated@@583  (=> (and ($generated@@235 $generated@@571) ($generated@@574 $generated@@571)) (=> (and (and (=> $generated@@575 (and ($generated@@212 $generated@@576 $generated@@569) ($generated@@236 $generated@@576 $generated@@569 $generated@@571))) true) (and (= 0 $generated@@577) (= (ControlFlow 0 6) 5))) $generated@@582))))
$generated@@583))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@T T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U T@U) Bool)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U Int) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@663 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@150) 16) (= (type $generated@@144) ($generated@@73 $generated@@150))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@151)) $generated@@71)
 :pattern ( ($generated@@145 $generated@@151))
))) (= (type $generated@@147) $generated@@89)) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@148 $generated@@152)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@71) (= (type $generated@@154) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@155) $generated@@89)) (and ($generated@@146 $generated@@154) (and (not (= $generated@@155 $generated@@147)) (= ($generated@@148 $generated@@155) ($generated@@145 $generated@@153))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) $generated@@153))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) ($generated@@145 $generated@@153))
)))
(assert (= (type $generated@@156) ($generated@@73 $generated@@150)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@71) (= (type $generated@@158) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@159) $generated@@89)) (and ($generated@@146 $generated@@158) (and (not (= $generated@@159 $generated@@147)) (= ($generated@@148 $generated@@159) ($generated@@145 $generated@@157))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) $generated@@157))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) ($generated@@145 $generated@@157))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@162) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@160 $generated@@161 $generated@@162)) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@161 $generated@@163) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60))
)))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@71) (= (type $generated@@165) $generated@@89)) (= (type $generated@@166) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166)  (or (= $generated@@165 $generated@@147) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@87 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@87 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@71)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@71) (= (type $generated@@172) $generated@@89)) (= (type $generated@@173) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@86 $generated@@172 ($generated@@145 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert  (and (= ($generated@@1 $generated@@176) 17) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@71)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@71) (= (type $generated@@180) $generated@@71)) (= (type $generated@@181) $generated@@176)) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@150)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@150)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@176) (= (type $generated@@188) $generated@@176)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@71)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@193) $generated@@71)) ($generated@@167 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@167 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 18)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@89 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@74 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@89) (= (type $generated@@244) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@245) ($generated@@73 $generated@@4))) (= (type $generated@@247) $generated@@89)) (= (type $generated@@248) ($generated@@73 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (= ($generated@@81 $generated@@156) 0))
(assert (forall (($generated@@251 T@T) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@73 $generated@@251))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@70) $generated@@156))
(assert ($generated@@254 $generated@@156))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@256 $generated@@257)) $generated@@176)
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@71) (= (type $generated@@259) $generated@@71)) (= (type $generated@@260) $generated@@150)) (= (type $generated@@261) $generated@@150)) (= ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259))  (and ($generated@@149 $generated@@260 $generated@@258) ($generated@@149 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259)))
)))
(assert (= ($generated@@81 $generated@@144) 0))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@69) $generated@@144))
(assert  (not ($generated@@254 $generated@@144)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@176) (= (type $generated@@263) $generated@@176)) (= ($generated@@182 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@182 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@71)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@267) $generated@@71)) (= ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@150) ($generated@@0 ($generated@@93 $generated@@266 $generated@@268))) ($generated@@149 $generated@@268 $generated@@267))
 :pattern ( ($generated@@93 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@71)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@272) $generated@@71)) (= ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@150) ($generated@@0 ($generated@@93 $generated@@271 $generated@@273))) ($generated@@149 $generated@@273 $generated@@272))
 :pattern ( ($generated@@93 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
(= (type ($generated@@274 $generated@@275)) $generated@@276))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@274 $generated@@277) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@71) (= (type $generated@@280) $generated@@71)) (= (type $generated@@281) $generated@@150)) (= (type $generated@@282) $generated@@150)) (= (type $generated@@283) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@146 $generated@@283)) (= ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287)) $generated@@150)
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@71) (= (type $generated@@289) $generated@@89)) ($generated@@149 ($generated@@285 $generated@@288 $generated@@289) $generated@@288))
 :pattern ( ($generated@@285 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@291 $generated@@292)) $generated@@150)
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@71) (= (type $generated@@294) $generated@@89)) ($generated@@149 ($generated@@290 $generated@@293 $generated@@294) $generated@@293))
 :pattern ( ($generated@@290 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@76)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@176) (= ($generated@@174 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@62)))
 :pattern ( ($generated@@174 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@176) ($generated@@174 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@150) (= (type $generated@@300) $generated@@150)) (= $generated@@298 ($generated@@255 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@174 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 19)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert ($generated@@254 $generated@@60))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@309) $generated@@71) (= (type $generated@@310) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@311) $generated@@89)) (and (and ($generated@@146 $generated@@310) (and (not (= $generated@@311 $generated@@147)) (= ($generated@@148 $generated@@311) ($generated@@145 $generated@@309)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) $generated@@309 $generated@@310))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) ($generated@@145 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@312) $generated@@71) (= (type $generated@@313) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@314) $generated@@89)) (and (and ($generated@@146 $generated@@313) (and (not (= $generated@@314 $generated@@147)) (= ($generated@@148 $generated@@314) ($generated@@145 $generated@@312)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) $generated@@312 $generated@@313))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) ($generated@@145 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@71) (= (type $generated@@316) $generated@@89)) (= ($generated@@167 $generated@@316 ($generated@@169 $generated@@315))  (and ($generated@@167 $generated@@316 ($generated@@145 $generated@@315)) (not (= $generated@@316 $generated@@147)))))
 :pattern ( ($generated@@167 $generated@@316 ($generated@@169 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@150)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@71) (= (type $generated@@321) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@86 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@322) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@323) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@324) $generated@@150)) (= (type $generated@@325) $generated@@71)) ($generated@@160 $generated@@322 $generated@@323)) ($generated@@278 $generated@@324 $generated@@325 $generated@@322)) ($generated@@278 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@160 $generated@@322 $generated@@323) ($generated@@278 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@326) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@327) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@329) $generated@@71)) ($generated@@160 $generated@@326 $generated@@327)) ($generated@@86 $generated@@328 $generated@@329 $generated@@326)) ($generated@@86 $generated@@328 $generated@@329 $generated@@327))
 :pattern ( ($generated@@160 $generated@@326 $generated@@327) ($generated@@86 $generated@@328 $generated@@329 $generated@@326))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@88 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@91 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@88 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@93 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@78)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@71) (and (= ($generated@@82 ($generated@@145 $generated@@338)) $generated@@65) (= ($generated@@336 ($generated@@145 $generated@@338)) $generated@@68)))
 :pattern ( ($generated@@145 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@71) (and (= ($generated@@82 ($generated@@169 $generated@@339)) $generated@@66) (= ($generated@@336 ($generated@@169 $generated@@339)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 20)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@88 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 21)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@88 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@378) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@376 $generated@@377 $generated@@378)) (and ($generated@@160 $generated@@377 $generated@@378) (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@74 (type $generated@@380))))
 (=> (and (and (= (type $generated@@379) $generated@@89) (= (type $generated@@380) ($generated@@73 $generated@@381))) (not ($generated@@254 $generated@@380))) (= ($generated@@95 ($generated@@93 $generated@@377 $generated@@379) $generated@@380) ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))
))))
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@91 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@88 $generated@@383 $generated@@2)) (= ($generated@@190 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (and (<= 0 ($generated ($generated@@93 $generated@@382 $generated@@384))) (<= ($generated ($generated@@93 $generated@@382 $generated@@384)) ($generated@@330 $generated@@382))))
 :pattern ( ($generated@@93 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@190 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@71) (= (type $generated@@386) $generated@@89)) (= ($generated@@167 $generated@@386 ($generated@@145 $generated@@385))  (or (= $generated@@386 $generated@@147) (= ($generated@@148 $generated@@386) ($generated@@145 $generated@@385)))))
 :pattern ( ($generated@@167 $generated@@386 ($generated@@145 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@344 (type $generated@@387))))
(let (($generated@@389 ($generated@@343 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@342 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@341 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@340 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@344 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@88 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@344 (type $generated@@394))))
(let (($generated@@396 ($generated@@343 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@342 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@341 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@93 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@362 (type $generated@@398))))
(let (($generated@@400 ($generated@@361 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@360 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@359 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@358 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@362 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@88 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@362 (type $generated@@405))))
(let (($generated@@407 ($generated@@361 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@360 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@359 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@93 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@410) $generated@@71)) (= ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@409 $generated@@411)))) ($generated@@149 $generated@@411 $generated@@410))
 :pattern ( ($generated@@93 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@413) $generated@@71)) (= (type $generated@@414) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@150) ($generated@@0 ($generated@@93 $generated@@412 $generated@@415))) ($generated@@278 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@93 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@417) $generated@@71)) (= (type $generated@@418) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@0 ($generated@@93 $generated@@416 $generated@@419))) ($generated@@278 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@93 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@93 ($generated@@331 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@93 ($generated@@331 $generated@@421) $generated@@420)))
)))
(assert  (and (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@422 $generated@@425)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@422 $generated@@425))
)) (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@423 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@423 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@344 (type $generated@@428))))
(let (($generated@@430 ($generated@@343 (type $generated@@428))))
(= (type ($generated@@424 $generated@@428)) ($generated@@88 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@424 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@432) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432)))) (= ($generated@@93 ($generated@@424 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@432))))))
 :pattern ( ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@362 (type $generated@@436))))
(let (($generated@@438 ($generated@@361 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@88 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@440) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440)))) (= ($generated@@93 ($generated@@434 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@440))))))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@343 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@342 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@93 ($generated@@391 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@441) $generated@@445))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@361 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@360 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@93 ($generated@@402 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@446) $generated@@450))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@93 ($generated@@402 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@71)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@455) $generated@@71)) (= (type $generated@@456) $generated@@71)) (= (type $generated@@457) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))) (and ($generated@@278 ($generated@@93 ($generated@@424 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@278 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@454) $generated@@458))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@71)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@463) $generated@@71)) (= (type $generated@@464) $generated@@71)) (= (type $generated@@465) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))) (and ($generated@@278 ($generated@@93 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@278 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@467) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@468) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@469) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@467 $generated@@469))) (and ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))) ($generated@@160 $generated@@467 $generated@@469))
 :pattern ( ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@88 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@362 (type $generated@@472))))
(let (($generated@@474 ($generated@@361 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@360 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@359 $generated@@474 $generated@@473)) (= ($generated@@358 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@358 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@362 (type $generated@@475))))
(let (($generated@@477 ($generated@@361 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@360 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@359 $generated@@477 $generated@@476)) (= ($generated@@402 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@402 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@362 (type $generated@@478))))
(let (($generated@@480 ($generated@@361 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@360 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@359 $generated@@480 $generated@@479)) (= ($generated@@433 $generated@@478) ($generated@@470 $generated@@150))))))
 :pattern ( ($generated@@433 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@344 (type $generated@@481))))
(let (($generated@@483 ($generated@@343 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@342 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@341 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@150) (= (type $generated@@485) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@422 $generated@@481) ($generated@@317 ($generated@@255 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@422 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@362 (type $generated@@486))))
(let (($generated@@488 ($generated@@361 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@360 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@359 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@150) (= (type $generated@@490) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@433 $generated@@486) ($generated@@317 ($generated@@255 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@433 $generated@@486))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@77)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@T) ) (!  (=> (and (= (type $generated@@493) $generated@@77) (= (type $generated@@494) $generated@@75)) (and (= ($generated@@491 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@493) (= ($generated@@84 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@494)))
 :pattern ( ($generated@@250 $generated@@495 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@150) ($generated@@149 $generated@@496 $generated@@46)) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@496)) $generated@@496) ($generated@@167 ($generated@@423 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@149 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@150) ($generated@@149 $generated@@497 $generated@@47)) (and (= ($generated@@317 ($generated@@423 $generated@@3 $generated@@497)) $generated@@497) ($generated@@167 ($generated@@423 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@149 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@150) ($generated@@149 $generated@@498 $generated@@44)) (and (= ($generated@@317 ($generated@@423 $generated@@4 $generated@@498)) $generated@@498) ($generated@@167 ($generated@@423 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@149 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 22))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) ($generated@@149 $generated@@500 $generated@@45)) (and (= ($generated@@317 ($generated@@423 $generated@@499 $generated@@500)) $generated@@500) ($generated@@167 ($generated@@423 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@149 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@71) (= ($generated@@149 ($generated@@317 $generated@@501) $generated@@502) ($generated@@167 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@149 ($generated@@317 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@91 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@88 $generated@@504 $generated@@2)) (<= 0 ($generated@@330 $generated@@503))))
 :pattern ( ($generated@@330 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@304 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@303 $generated@@506)) (<= 0 ($generated@@302 $generated@@505))))
 :pattern ( ($generated@@302 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@71)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@71) (= (type $generated@@510) $generated@@71)) (= ($generated@@507 ($generated@@451 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@451 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@71)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@71) (= (type $generated@@514) $generated@@71)) (= ($generated@@511 ($generated@@451 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@451 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@71) (= (type $generated@@516) $generated@@71)) (= ($generated@@82 ($generated@@451 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@71)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@71) (= (type $generated@@520) $generated@@71)) (= ($generated@@517 ($generated@@459 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@459 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@71)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@71) (= (type $generated@@524) $generated@@71)) (= ($generated@@521 ($generated@@459 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@71) (= (type $generated@@526) $generated@@71)) (= ($generated@@82 ($generated@@459 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@150)) (= ($generated@@295 ($generated@@255 $generated@@527 $generated@@528)) $generated@@62))
 :pattern ( ($generated@@255 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@71)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@71) (= (type $generated@@532) $generated@@71)) (= ($generated@@529 ($generated@@175 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@175 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@71) (= (type $generated@@536) $generated@@71)) (= ($generated@@533 ($generated@@175 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@175 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@150)) (= ($generated@@183 ($generated@@255 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@255 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@150)) (= ($generated@@184 ($generated@@255 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@255 $generated@@539 $generated@@540))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@543))
)) (forall (($generated@@544 T@U) ($generated@@545 Int) ) (! (let (($generated@@546 ($generated@@304 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544 $generated@@545)) $generated@@546))
 :pattern ( ($generated@@542 $generated@@544 $generated@@545))
))))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@303 $generated@@150)) (= (type $generated@@548) $generated@@71)) (= (type $generated@@549) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549) (forall (($generated@@550 Int) ) (!  (=> (and (<= 0 $generated@@550) (< $generated@@550 ($generated@@302 $generated@@547))) ($generated@@278 ($generated@@542 $generated@@547 $generated@@550) $generated@@548 $generated@@549))
 :pattern ( ($generated@@542 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@551 ($generated@@87 $generated@@552)) $generated@@552)
 :pattern ( ($generated@@87 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@71) (= ($generated@@553 ($generated@@264 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@264 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@71) (= ($generated@@82 ($generated@@264 $generated@@556)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@71)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@71) (= ($generated@@557 ($generated@@269 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@269 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@71) (= ($generated@@82 ($generated@@269 $generated@@560)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@71)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@71) (= ($generated@@561 ($generated@@189 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@189 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@71) (= ($generated@@82 ($generated@@189 $generated@@564)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@71)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@71) (= ($generated@@565 ($generated@@541 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@541 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@71) (= ($generated@@82 ($generated@@541 $generated@@568)) $generated@@57))
 :pattern ( ($generated@@541 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@71)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@71) (= ($generated@@569 ($generated@@145 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@145 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@71)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@71) (= ($generated@@572 ($generated@@169 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@169 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@423 $generated@@576 ($generated@@317 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@317 $generated@@575))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@71) (= (type $generated@@578) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@579) $generated@@89)) (and ($generated@@146 $generated@@578) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60)))) ($generated@@278 ($generated@@285 $generated@@577 $generated@@579) $generated@@577 $generated@@578))
 :pattern ( ($generated@@285 $generated@@577 $generated@@579) ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60))
))))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@71) (= (type $generated@@581) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@582) $generated@@89)) (and ($generated@@146 $generated@@581) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60)))) ($generated@@278 ($generated@@290 $generated@@580 $generated@@582) $generated@@580 $generated@@581))
 :pattern ( ($generated@@290 $generated@@580 $generated@@582) ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60))
))))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@584) $generated@@71)) (= (type $generated@@585) $generated@@71)) (= ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))) (and ($generated@@149 ($generated@@93 ($generated@@424 $generated@@583) $generated@@586) $generated@@585) ($generated@@149 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@583) $generated@@586))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@71)) (= (type $generated@@589) $generated@@71)) (= ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))) (and ($generated@@149 ($generated@@93 ($generated@@434 $generated@@587) $generated@@590) $generated@@589) ($generated@@149 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@587) $generated@@590))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@150)) (< ($generated@@591 $generated@@593) ($generated@@592 ($generated@@255 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@255 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@150) (= (type $generated@@596) $generated@@150)) (< ($generated@@591 $generated@@596) ($generated@@592 ($generated@@255 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@255 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@150) (= (type $generated@@598) $generated@@71)) (= (type $generated@@599) $generated@@71)) ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599))) (and (= ($generated@@317 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597)) $generated@@597) ($generated@@167 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597) ($generated@@451 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@150) (= (type $generated@@601) $generated@@71)) (= (type $generated@@602) $generated@@71)) ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602))) (and (= ($generated@@317 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600)) $generated@@600) ($generated@@167 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600) ($generated@@459 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@71) (= (type $generated@@604) $generated@@71)) (= (type $generated@@605) $generated@@150)) ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604))) (and (= ($generated@@317 ($generated@@423 $generated@@176 $generated@@605)) $generated@@605) ($generated@@167 ($generated@@423 $generated@@176 $generated@@605) ($generated@@175 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@93 ($generated@@470 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@93 ($generated@@470 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@71) (= (type $generated@@609) $generated@@71)) (and (= ($generated@@82 ($generated@@175 $generated@@608 $generated@@609)) $generated@@63) (= ($generated@@336 ($generated@@175 $generated@@608 $generated@@609)) $generated@@67)))
 :pattern ( ($generated@@175 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@176) (= ($generated@@591 ($generated@@317 $generated@@610)) ($generated@@592 $generated@@610)))
 :pattern ( ($generated@@591 ($generated@@317 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@150) ($generated@@149 $generated@@611 ($generated@@87 0))) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@611)) $generated@@611) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@611) ($generated@@87 0))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@87 0)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@150) (= (type $generated@@613) $generated@@71)) ($generated@@149 $generated@@612 ($generated@@264 $generated@@613))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612)) $generated@@612) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612) ($generated@@264 $generated@@613))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@264 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@150) (= (type $generated@@615) $generated@@71)) ($generated@@149 $generated@@614 ($generated@@269 $generated@@615))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614)) $generated@@614) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614) ($generated@@269 $generated@@615))))
 :pattern ( ($generated@@149 $generated@@614 ($generated@@269 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@150) (= (type $generated@@617) $generated@@71)) ($generated@@149 $generated@@616 ($generated@@189 $generated@@617))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616)) $generated@@616) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616) ($generated@@189 $generated@@617))))
 :pattern ( ($generated@@149 $generated@@616 ($generated@@189 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@150) (= (type $generated@@619) $generated@@71)) ($generated@@149 $generated@@618 ($generated@@541 $generated@@619))) (and (= ($generated@@317 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618)) $generated@@618) ($generated@@167 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618) ($generated@@541 $generated@@619))))
 :pattern ( ($generated@@149 $generated@@618 ($generated@@541 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@71) (= (type $generated@@621) $generated@@150)) ($generated@@149 $generated@@621 ($generated@@145 $generated@@620))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@621)) $generated@@621) ($generated@@167 ($generated@@423 $generated@@89 $generated@@621) ($generated@@145 $generated@@620))))
 :pattern ( ($generated@@149 $generated@@621 ($generated@@145 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@71) (= (type $generated@@623) $generated@@150)) ($generated@@149 $generated@@623 ($generated@@169 $generated@@622))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@623)) $generated@@623) ($generated@@167 ($generated@@423 $generated@@89 $generated@@623) ($generated@@169 $generated@@622))))
 :pattern ( ($generated@@149 $generated@@623 ($generated@@169 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (=> (and (and (and (= (type $generated@@624) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@625) $generated@@89)) (= (type $generated@@626) ($generated@@73 $generated@@628))) ($generated@@146 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))) ($generated@@160 $generated@@624 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@630) $generated@@71)) (= (type $generated@@631) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@629 $generated@@632)))) ($generated@@278 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@93 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@176) (= (type $generated@@634) $generated@@71)) (= (type $generated@@635) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@635) (and ($generated@@174 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@71) ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@176) (= (type $generated@@638) $generated@@71)) (= (type $generated@@639) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@639) (and ($generated@@174 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@71) ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@150) (= (type $generated@@642) $generated@@150)) (= ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)) ($generated@@274 ($generated@@255 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@317 ($generated@@274 $generated@@643)) ($generated@@274 ($generated@@317 $generated@@643)))
 :pattern ( ($generated@@317 ($generated@@274 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@304 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@303 $generated@@645)) (= ($generated@@302 $generated@@644) 0)) (= $generated@@644 ($generated@@301 $generated@@645))))
 :pattern ( ($generated@@302 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@88 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@330 $generated@@646) ($generated ($generated@@93 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@651) $generated@@2)) ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@653) $generated@@3)) ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@655) $generated@@4)) ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@657) $generated@@499)) ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@659) $generated@@150)) ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@303 $generated@@150)) (= (type $generated@@661) $generated@@71)) (= ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)) (forall (($generated@@662 Int) ) (!  (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@302 $generated@@660))) ($generated@@149 ($generated@@542 $generated@@660 $generated@@662) $generated@@661))
 :pattern ( ($generated@@542 $generated@@660 $generated@@662))
))))
 :pattern ( ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 Int) ) (!  (=> (= (type $generated@@664) ($generated@@303 $generated@@150)) (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@302 $generated@@664))) (< ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))) ($generated@@663 $generated@@664))))
 :pattern ( ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@667) $generated@@71)) (= (type $generated@@668) $generated@@71)) ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668))) (and (and ($generated@@167 ($generated@@340 $generated@@666) ($generated@@264 $generated@@667)) ($generated@@167 ($generated@@391 $generated@@666) ($generated@@264 $generated@@668))) ($generated@@167 ($generated@@422 $generated@@666) ($generated@@264 ($generated@@175 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@670) $generated@@71)) (= (type $generated@@671) $generated@@71)) ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671))) (and (and ($generated@@167 ($generated@@358 $generated@@669) ($generated@@269 $generated@@670)) ($generated@@167 ($generated@@402 $generated@@669) ($generated@@269 $generated@@671))) ($generated@@167 ($generated@@433 $generated@@669) ($generated@@269 ($generated@@175 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@2) ($generated@@167 $generated@@672 $generated@@46))
 :pattern ( ($generated@@167 $generated@@672 $generated@@46))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@3) ($generated@@167 $generated@@673 $generated@@47))
 :pattern ( ($generated@@167 $generated@@673 $generated@@47))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@4) ($generated@@167 $generated@@674 $generated@@44))
 :pattern ( ($generated@@167 $generated@@674 $generated@@44))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@499) ($generated@@167 $generated@@675 $generated@@45))
 :pattern ( ($generated@@167 $generated@@675 $generated@@45))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@150) ($generated@@167 $generated@@676 $generated@@48))
 :pattern ( ($generated@@167 $generated@@676 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Bool)
(declare-fun $generated@@680 (T@U) Bool)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(assert  (and (and (and (and (= (type $generated@@677) ($generated@@196 $generated@@89 $generated@@4)) (= (type $generated@@678) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@681) $generated@@150)) (= (type $generated@@682) $generated@@71)) (= (type $generated@@683) $generated@@89)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@684  (=> (= $generated@@677 ($generated@@195 $generated@@147 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) $generated@@679)))))
(let (($generated@@685  (=> (and (and (and ($generated@@146 $generated@@678) ($generated@@680 $generated@@678)) (and ($generated@@149 $generated@@681 $generated@@682) ($generated@@278 $generated@@681 $generated@@682 $generated@@678))) (and (and (not (= $generated@@683 $generated@@147)) ($generated@@167 $generated@@683 ($generated@@169 $generated@@682))) (and (= 1 $generated@@284) (= (ControlFlow 0 4) 2)))) $generated@@684)))
$generated@@685)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@342 () Int)
(declare-fun $generated@@343 (T@U) Int)
(declare-fun $generated@@344 (T@U) Bool)
(declare-fun $generated@@345 () T@U)
(declare-fun $generated@@346 () Bool)
(declare-fun $generated@@347 () T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@151 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@151 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert  (and (= (type $generated@@345) $generated@@64) (= (type $generated@@347) $generated@@145)))
(assert  (=> (<= 0 $generated@@342) (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@349) $generated@@145)) (or ($generated@@344 $generated@@349) (and (not (= 0 $generated@@342)) (and ($generated@@249 $generated@@348) ($generated@@224 $generated@@349 $generated@@345))))) (and $generated@@346 (= ($generated@@343 $generated@@349) ($generated@@243 5))))
 :pattern ( ($generated@@343 $generated@@349) ($generated@@249 $generated@@348))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@351) $generated@@64)) (= ($generated@@132 $generated@@350 ($generated@@150 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@350 $generated@@352)))) ($generated@@224 $generated@@352 $generated@@351))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@132 $generated@@350 ($generated@@150 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@233 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@250 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@233 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@238 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@145) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@250 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@238 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@81 ($generated@@276 $generated@@362) $generated@@361)))
)))
(assert  (and (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@363 $generated@@366)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@363 $generated@@366))
)) (forall (($generated@@367 T@T) ($generated@@368 T@U) ) (! (= (type ($generated@@364 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@364 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@285 (type $generated@@369))))
(let (($generated@@371 ($generated@@284 (type $generated@@369))))
(= (type ($generated@@365 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@365 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@373) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@363 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@372) ($generated@@143 ($generated@@364 $generated@@136 $generated@@373)))) (= ($generated@@81 ($generated@@365 $generated@@372) ($generated@@143 ($generated@@364 $generated@@136 $generated@@373))) ($generated@@144 ($generated@@364 $generated@@136 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@372) $generated@@373))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@303 (type $generated@@377))))
(let (($generated@@379 ($generated@@302 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@380) ($generated@@143 ($generated@@364 $generated@@136 $generated@@381)))) (= ($generated@@81 ($generated@@375 $generated@@380) ($generated@@143 ($generated@@364 $generated@@136 $generated@@381))) ($generated@@144 ($generated@@364 $generated@@136 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@284 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@283 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@81 ($generated@@365 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@382) $generated@@386))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@302 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@301 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@387) $generated@@388))
)))
(assert  (=> $generated@@346 (and ($generated@@224 $generated@@347 $generated@@345) ($generated@@0 ($generated@@245 ($generated@@11 true))))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@395) $generated@@399))) (and ($generated@@250 ($generated@@81 ($generated@@365 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@250 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@403) $generated@@407))) (and ($generated@@250 ($generated@@81 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@250 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert  (=> (<= 0 $generated@@342) (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@409) $generated@@145)) (or ($generated@@344 ($generated@@245 $generated@@409)) (and (not (= 0 $generated@@342)) (and ($generated@@249 $generated@@408) ($generated@@224 $generated@@409 $generated@@345))))) (and $generated@@346 (= ($generated@@343 ($generated@@245 $generated@@409)) ($generated@@243 5))))
 :weight 3
 :pattern ( ($generated@@343 ($generated@@245 $generated@@409)) ($generated@@249 $generated@@408))
))))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@303 (type $generated@@412))))
(let (($generated@@414 ($generated@@302 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@301 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@300 $generated@@414 $generated@@413)) (= ($generated@@299 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@299 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@303 (type $generated@@415))))
(let (($generated@@417 ($generated@@302 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@301 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@300 $generated@@417 $generated@@416)) (= ($generated@@335 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@335 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@303 (type $generated@@418))))
(let (($generated@@420 ($generated@@302 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@301 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@300 $generated@@420 $generated@@419)) (= ($generated@@374 $generated@@418) ($generated@@410 $generated@@145))))))
 :pattern ( ($generated@@374 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@285 (type $generated@@421))))
(let (($generated@@423 ($generated@@284 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@283 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@282 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@145) (= (type $generated@@425) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@363 $generated@@421) ($generated@@270 ($generated@@223 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@363 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@303 (type $generated@@426))))
(let (($generated@@428 ($generated@@302 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@301 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@300 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@145) (= (type $generated@@430) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@426) ($generated@@270 ($generated@@223 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@374 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@224 $generated@@431 $generated@@46)) (and (= ($generated@@270 ($generated@@364 $generated@@2 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@364 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@224 $generated@@432 $generated@@47)) (and (= ($generated@@270 ($generated@@364 $generated@@3 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@364 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@224 $generated@@433 $generated@@44)) (and (= ($generated@@270 ($generated@@364 $generated@@4 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@364 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@145) ($generated@@224 $generated@@435 $generated@@45)) (and (= ($generated@@270 ($generated@@364 $generated@@434 $generated@@435)) $generated@@435) ($generated@@132 ($generated@@364 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@224 ($generated@@270 $generated@@436) $generated@@437) ($generated@@132 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@224 ($generated@@270 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@79 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@76 $generated@@439 $generated@@2)) (<= 0 ($generated@@275 $generated@@438))))
 :pattern ( ($generated@@275 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@265 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@264 $generated@@441)) (<= 0 ($generated@@263 $generated@@440))))
 :pattern ( ($generated@@263 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@392 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@392 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@392 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@392 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@392 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@400 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@400 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@400 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@400 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@400 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@145) (= (type $generated@@463) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@135 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@135 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@135 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@135 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@145) (= (type $generated@@473) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@223 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@145) (= (type $generated@@475) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@223 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@265 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@264 $generated@@145)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@263 $generated@@482))) ($generated@@250 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@75 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@75 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@233 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@233 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@238 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@150 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@150 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@364 $generated@@505 ($generated@@270 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@270 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) (= ($generated@@132 $generated@@506 ($generated@@392 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@506) $generated@@509))) (and ($generated@@224 ($generated@@81 ($generated@@365 $generated@@506) $generated@@509) $generated@@508) ($generated@@224 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@506) $generated@@509))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@132 $generated@@506 ($generated@@392 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) (= ($generated@@132 $generated@@510 ($generated@@400 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@510) $generated@@513))) (and ($generated@@224 ($generated@@81 ($generated@@375 $generated@@510) $generated@@513) $generated@@512) ($generated@@224 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@510) $generated@@513))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@132 $generated@@510 ($generated@@400 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@145) (= (type $generated@@517) $generated@@145)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@223 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@223 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@145)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@223 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@223 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) ($generated@@224 $generated@@520 ($generated@@392 $generated@@521 $generated@@522))) (and (= ($generated@@270 ($generated@@364 ($generated@@283 $generated@@145 $generated@@145) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@364 ($generated@@283 $generated@@145 $generated@@145) $generated@@520) ($generated@@392 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@224 $generated@@520 ($generated@@392 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@224 $generated@@523 ($generated@@400 $generated@@524 $generated@@525))) (and (= ($generated@@270 ($generated@@364 ($generated@@301 $generated@@145 $generated@@145) $generated@@523)) $generated@@523) ($generated@@132 ($generated@@364 ($generated@@301 $generated@@145 $generated@@145) $generated@@523) ($generated@@400 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@224 $generated@@523 ($generated@@400 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@145)) ($generated@@224 $generated@@528 ($generated@@135 $generated@@526 $generated@@527))) (and (= ($generated@@270 ($generated@@364 $generated@@136 $generated@@528)) $generated@@528) ($generated@@132 ($generated@@364 $generated@@136 $generated@@528) ($generated@@135 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@224 $generated@@528 ($generated@@135 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@81 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@69)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@533 $generated@@534)) $generated@@62) (= ($generated@@531 ($generated@@135 $generated@@533 $generated@@534)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@136) (= ($generated@@514 ($generated@@270 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@270 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@145) ($generated@@224 $generated@@536 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@364 $generated@@2 $generated@@536)) $generated@@536) ($generated@@132 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@536) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@536 ($generated@@75 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) ($generated@@224 $generated@@537 ($generated@@233 $generated@@538))) (and (= ($generated@@270 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@233 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@233 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@224 $generated@@539 ($generated@@238 $generated@@540))) (and (= ($generated@@270 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@364 ($generated@@76 $generated@@145 $generated@@4) $generated@@539) ($generated@@238 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@238 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@224 $generated@@541 ($generated@@150 $generated@@542))) (and (= ($generated@@270 ($generated@@364 ($generated@@76 $generated@@145 $generated@@2) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@364 ($generated@@76 $generated@@145 $generated@@2) $generated@@541) ($generated@@150 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@150 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@64)) ($generated@@224 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@270 ($generated@@364 ($generated@@264 $generated@@145) $generated@@543)) $generated@@543) ($generated@@132 ($generated@@364 ($generated@@264 $generated@@145) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@545 ($generated@@150 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@545 $generated@@548)))) ($generated@@250 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@81 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@74 $generated@@545 ($generated@@150 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@136) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@551) (and ($generated@@134 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@64) ($generated@@74 $generated@@549 ($generated@@135 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@135 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@250 ($generated@@143 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@136) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@555) (and ($generated@@134 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@64) ($generated@@74 $generated@@553 ($generated@@135 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@135 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@250 ($generated@@144 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@145) (= (type $generated@@558) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@557) ($generated@@245 $generated@@558)) ($generated@@245 ($generated@@223 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@557) ($generated@@245 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@243 $generated@@559))) ($generated@@245 ($generated@@270 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@243 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@560)) ($generated@@245 ($generated@@270 $generated@@560)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@265 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@264 $generated@@562)) (= ($generated@@263 $generated@@561) 0)) (= $generated@@561 ($generated@@262 $generated@@562))))
 :pattern ( ($generated@@263 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@76 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@275 ($generated@@82 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@275 $generated@@563) ($generated ($generated@@81 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@2)) ($generated@@74 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@3)) ($generated@@74 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@4)) ($generated@@74 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@434)) ($generated@@74 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@145)) ($generated@@74 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@264 $generated@@145)) (= (type $generated@@578) $generated@@64)) (= ($generated@@132 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@263 $generated@@577))) ($generated@@224 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@132 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@263 $generated@@581))) (< ($generated@@515 ($generated@@364 $generated@@136 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@364 $generated@@136 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) $generated@@64)) ($generated@@132 $generated@@583 ($generated@@392 $generated@@584 $generated@@585))) (and (and ($generated@@132 ($generated@@281 $generated@@583) ($generated@@233 $generated@@584)) ($generated@@132 ($generated@@324 $generated@@583) ($generated@@233 $generated@@585))) ($generated@@132 ($generated@@363 $generated@@583) ($generated@@233 ($generated@@135 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@132 $generated@@583 ($generated@@392 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) ($generated@@132 $generated@@586 ($generated@@400 $generated@@587 $generated@@588))) (and (and ($generated@@132 ($generated@@299 $generated@@586) ($generated@@238 $generated@@587)) ($generated@@132 ($generated@@335 $generated@@586) ($generated@@238 $generated@@588))) ($generated@@132 ($generated@@374 $generated@@586) ($generated@@238 ($generated@@135 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@132 $generated@@586 ($generated@@400 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@132 $generated@@589 $generated@@46))
 :pattern ( ($generated@@132 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@132 $generated@@590 $generated@@47))
 :pattern ( ($generated@@132 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@132 $generated@@591 $generated@@44))
 :pattern ( ($generated@@132 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@132 $generated@@592 $generated@@45))
 :pattern ( ($generated@@132 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@145) ($generated@@132 $generated@@593 $generated@@48))
 :pattern ( ($generated@@132 $generated@@593 $generated@@48))
)))
(assert  (=> (<= 0 $generated@@342) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@145) (or ($generated@@344 $generated@@594) (and (not (= 0 $generated@@342)) ($generated@@224 $generated@@594 $generated@@345)))) true)
 :pattern ( ($generated@@343 $generated@@594))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 (T@U) Bool)
(declare-fun $generated@@601 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@595) $generated@@145) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@597) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@598) $generated@@77)) (= (type $generated@@599) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@601) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@602  (=> (= (ControlFlow 0 3) (- 0 2)) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@145) (and ($generated@@224 $generated@@603 $generated@@345) ($generated@@0 ($generated@@245 ($generated@@11 true)))))
 :no-pattern (type $generated@@603)
 :no-pattern ($generated $generated@@603)
 :no-pattern ($generated@@0 $generated@@603)
)))))
(let (($generated@@604  (=> (and (not (and ($generated@@224 $generated@@595 $generated@@345) ($generated@@250 $generated@@595 $generated@@345 $generated@@596))) (= (ControlFlow 0 5) 3)) $generated@@602)))
(let (($generated@@605  (=> (and (and ($generated@@224 $generated@@595 $generated@@345) ($generated@@250 $generated@@595 $generated@@345 $generated@@596)) (= (ControlFlow 0 4) 3)) $generated@@602)))
(let (($generated@@606  (=> (= $generated@@597 ($generated@@211 $generated@@598 $generated@@596 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 4) $generated@@605) (=> (= (ControlFlow 0 6) 5) $generated@@604)))))
(let (($generated@@607 true))
(let (($generated@@608  (=> (= $generated@@599 ($generated@@156 $generated@@598 $generated@@596 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@607) (=> (= (ControlFlow 0 7) 6) $generated@@606)))))
(let (($generated@@609  (=> (and (and (and ($generated@@249 $generated@@596) ($generated@@600 $generated@@596)) ($generated@@224 $generated@@601 $generated@@345)) (and (= 0 $generated@@342) (= (ControlFlow 0 8) 7))) $generated@@608)))
$generated@@609))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () Bool)
(declare-fun $generated@@158 () Bool)
(declare-fun $generated@@159 () Bool)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 (T@U T@U T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Bool)
(declare-fun $generated@@166 () Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@178) 11) (= (type $generated@@161) $generated@@178)) (= ($generated@@1 $generated@@179) 12)) (= (type $generated@@162) $generated@@179)) (= (type $generated@@164) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@167) ($generated@@57 $generated@@47 $generated@@4))) (= (type $generated@@168) $generated@@47)) (= (type $generated@@169) ($generated@@50 $generated@@4))) (= (type $generated@@170) $generated@@178)) (= (type $generated@@173) $generated@@178)) (= (type $generated@@174) $generated@@178)) (= (type $generated@@175) $generated@@178)) (= (type $generated@@176) $generated@@178)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@180  (=> (= (ControlFlow 0 2) (- 0 1)) $generated@@157)))
(let (($generated@@181  (=> (not $generated@@158) (=> (and (= $generated@@157 $generated@@159) (= (ControlFlow 0 8) 2)) $generated@@180))))
(let (($generated@@182  (=> $generated@@158 (=> (and ($generated@@160 $generated@@161 $generated@@162) ($generated@@163 $generated@@161 $generated@@162 $generated@@164)) (and (=> (= (ControlFlow 0 6) (- 0 7)) $generated@@165) (=> $generated@@165 (=> (and (= $generated@@157 $generated@@159) (= (ControlFlow 0 6) 2)) $generated@@180)))))))
(let (($generated@@183  (=> (not $generated@@166) (and (=> (= (ControlFlow 0 9) 6) $generated@@182) (=> (= (ControlFlow 0 9) 8) $generated@@181)))))
(let (($generated@@184  (=> $generated@@166 (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@165) (=> $generated@@165 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@165) (=> $generated@@165 (=> (and (= $generated@@157 true) (= (ControlFlow 0 3) 2)) $generated@@180))))))))
(let (($generated@@185  (=> (and (= $generated@@167 ($generated@@45 $generated@@168 $generated@@164 $generated@@169 false)) (=> $generated@@165 (and ($generated@@160 $generated@@170 $generated@@162) ($generated@@163 $generated@@170 $generated@@162 $generated@@164)))) (and (=> (= (ControlFlow 0 10) 3) $generated@@184) (=> (= (ControlFlow 0 10) 9) $generated@@183)))))
(let (($generated@@186  (=> (and ($generated@@171 $generated@@164) ($generated@@172 $generated@@164)) (=> (and (and (and (and ($generated@@160 $generated@@173 $generated@@162) ($generated@@163 $generated@@173 $generated@@162 $generated@@164)) (=> $generated@@159 (and ($generated@@160 $generated@@174 $generated@@162) ($generated@@163 $generated@@174 $generated@@162 $generated@@164)))) (and (=> $generated@@165 (and ($generated@@160 $generated@@175 $generated@@162) ($generated@@163 $generated@@175 $generated@@162 $generated@@164))) true)) (and (and (and ($generated@@160 $generated@@176 $generated@@162) ($generated@@163 $generated@@176 $generated@@162 $generated@@164)) true) (and (= 0 $generated@@177) (= (ControlFlow 0 11) 10)))) $generated@@185))))
$generated@@186))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 5))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 7))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U T@U T@U) Bool)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 () Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@157) 11) (= ($generated@@1 $generated@@171) 12)) (= (type $generated@@159) $generated@@171)) (= (type $generated@@160) $generated@@157)) (= (type $generated@@162) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@163) ($generated@@57 $generated@@47 $generated@@4))) (= (type $generated@@164) $generated@@47)) (= (type $generated@@165) ($generated@@50 $generated@@4))) (= (type $generated@@169) $generated@@157)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@172  (=> (= (ControlFlow 0 2) (- 0 1)) (exists (($generated@@173 T@U) ) (!  (and (= (type $generated@@173) $generated@@157) (and ($generated@@158 $generated@@173 $generated@@159) (= $generated@@173 $generated@@173)))
 :no-pattern (type $generated@@173)
 :no-pattern ($generated $generated@@173)
 :no-pattern ($generated@@0 $generated@@173)
)))))
(let (($generated@@174  (=> (and (not (and ($generated@@158 $generated@@160 $generated@@159) ($generated@@161 $generated@@160 $generated@@159 $generated@@162))) (= (ControlFlow 0 4) 2)) $generated@@172)))
(let (($generated@@175  (=> (and (and ($generated@@158 $generated@@160 $generated@@159) ($generated@@161 $generated@@160 $generated@@159 $generated@@162)) (= (ControlFlow 0 3) 2)) $generated@@172)))
(let (($generated@@176  (=> (= $generated@@163 ($generated@@45 $generated@@164 $generated@@162 $generated@@165 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@175) (=> (= (ControlFlow 0 5) 4) $generated@@174)))))
(let (($generated@@177  (=> (and ($generated@@166 $generated@@162) ($generated@@167 $generated@@162)) (=> (and (and (=> $generated@@168 (and ($generated@@158 $generated@@169 $generated@@159) ($generated@@161 $generated@@169 $generated@@159 $generated@@162))) true) (and (= 0 $generated@@170) (= (ControlFlow 0 6) 5))) $generated@@176))))
$generated@@177))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@255 () Int)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@321 (T@T T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Bool)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@577 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) $generated@@152)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@245 $generated@@251)) (= ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@71)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@143) (= ($generated@@141 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert  (=> (< 0 $generated@@255) (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@80) ($generated@@139 ($generated@@8 ($generated@@256 $generated@@257)) $generated@@46))
 :pattern ( ($generated@@256 $generated@@257))
))))
(assert  (=> (< 0 $generated@@255) (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@259) $generated@@80)) (and ($generated@@245 $generated@@258) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@258 $generated@@259) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@256 $generated@@259)) $generated@@46 $generated@@258))
 :pattern ( ($generated@@256 $generated@@259) ($generated@@86 ($generated@@84 $generated@@258 $generated@@259) $generated@@60))
))))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@143) ($generated@@141 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@152) (= (type $generated@@262) $generated@@152)) (= $generated@@260 ($generated@@221 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@141 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 17)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@152)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@67) (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@246 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@77 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@246 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@79 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@82 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@79 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@84 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 18)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@79 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@79 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@82 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@79 $generated@@319 $generated@@2)) (= ($generated@@158 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (and (<= 0 ($generated ($generated@@84 $generated@@318 $generated@@320))) (<= ($generated ($generated@@84 $generated@@318 $generated@@320)) ($generated@@276 $generated@@318))))
 :pattern ( ($generated@@84 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@158 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ($generated@@323 T@U) ) (! (= (type ($generated@@321 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@152) ($generated@@222 $generated@@324 $generated@@135)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@324)) $generated@@324) ($generated@@139 ($generated@@321 $generated@@80 $generated@@324) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@324 $generated@@135))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@152) ($generated@@222 $generated@@325 $generated@@218)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@325)) $generated@@325) ($generated@@139 ($generated@@321 $generated@@80 $generated@@325) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@325 $generated@@218))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@80) (= ($generated@@139 $generated@@326 $generated@@218)  (and ($generated@@139 $generated@@326 $generated@@135) (not (= $generated@@326 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@326 $generated@@218))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@286 (type $generated@@327))))
(let (($generated@@329 ($generated@@285 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@284 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@283 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@282 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@286 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@79 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@286 (type $generated@@334))))
(let (($generated@@336 ($generated@@285 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@284 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@283 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@304 (type $generated@@338))))
(let (($generated@@340 ($generated@@303 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@302 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@301 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@300 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@304 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@304 (type $generated@@345))))
(let (($generated@@347 ($generated@@303 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@302 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@301 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@350) $generated@@67)) (= ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@349 $generated@@351)))) ($generated@@222 $generated@@351 $generated@@350))
 :pattern ( ($generated@@84 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@353) $generated@@67)) (= (type $generated@@354) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@352 ($generated@@231 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@152) ($generated@@0 ($generated@@84 $generated@@352 $generated@@355))) ($generated@@246 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@84 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@77 $generated@@352 ($generated@@231 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@236 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@152) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@246 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@236 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@84 ($generated@@277 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@84 ($generated@@277 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@286 (type $generated@@365))))
(let (($generated@@367 ($generated@@285 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@369) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369)))) (= ($generated@@84 ($generated@@363 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@369))))))
 :pattern ( ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@304 (type $generated@@373))))
(let (($generated@@375 ($generated@@303 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@377) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377)))) (= ($generated@@84 ($generated@@371 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@285 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@284 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@331 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@303 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@302 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@383) $generated@@387))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@67)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))) (and ($generated@@246 ($generated@@84 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@246 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))) (and ($generated@@246 ($generated@@84 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@246 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@79 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@304 (type $generated@@406))))
(let (($generated@@408 ($generated@@303 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@302 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@301 $generated@@408 $generated@@407)) (= ($generated@@300 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@300 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@304 (type $generated@@409))))
(let (($generated@@411 ($generated@@303 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@302 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@301 $generated@@411 $generated@@410)) (= ($generated@@342 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@342 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@304 (type $generated@@412))))
(let (($generated@@414 ($generated@@303 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@302 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@301 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@152))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@286 (type $generated@@415))))
(let (($generated@@417 ($generated@@285 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@284 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@283 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@362 $generated@@415) ($generated@@271 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@304 (type $generated@@420))))
(let (($generated@@422 ($generated@@303 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@302 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@301 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@152) (= (type $generated@@424) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@420) ($generated@@271 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@321 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@271 ($generated@@321 $generated@@3 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@321 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@271 ($generated@@321 $generated@@4 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@321 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@271 ($generated@@321 $generated@@428 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@321 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@222 ($generated@@271 $generated@@430) $generated@@431) ($generated@@139 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@271 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@82 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@79 $generated@@433 $generated@@2)) (<= 0 ($generated@@276 $generated@@432))))
 :pattern ( ($generated@@276 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@266 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@265 $generated@@435)) (<= 0 ($generated@@264 $generated@@434))))
 :pattern ( ($generated@@264 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@75 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@152) (= (type $generated@@457) $generated@@152)) (= ($generated@@252 ($generated@@221 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@142 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@142 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@142 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@266 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@265 $generated@@152)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@264 $generated@@476))) ($generated@@246 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@78 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@78 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@157 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@157 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@321 $generated@@499 ($generated@@271 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@271 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@67)) (= ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@84 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) (= ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@84 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@221 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@221 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@271 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@271 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@152)) ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521))) (and (= ($generated@@271 ($generated@@321 $generated@@143 $generated@@522)) $generated@@522) ($generated@@139 ($generated@@321 $generated@@143 $generated@@522) ($generated@@142 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@84 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@84 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@142 $generated@@527 $generated@@528)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@143) (= ($generated@@508 ($generated@@271 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@271 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@152) ($generated@@222 $generated@@530 ($generated@@78 0))) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@530)) $generated@@530) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@530) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@78 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@67)) ($generated@@222 $generated@@531 ($generated@@231 $generated@@532))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@531)) $generated@@531) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@231 $generated@@532))))
 :pattern ( ($generated@@222 $generated@@531 ($generated@@231 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@222 $generated@@533 ($generated@@236 $generated@@534))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533) ($generated@@236 $generated@@534))))
 :pattern ( ($generated@@222 $generated@@533 ($generated@@236 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@222 $generated@@535 ($generated@@157 $generated@@536))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@535) ($generated@@157 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@157 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@222 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@271 ($generated@@321 ($generated@@265 $generated@@152) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@321 ($generated@@265 $generated@@152) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@525 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@525 $generated@@218) $generated@@66))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@539 $generated@@542)))) ($generated@@246 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@84 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@80) (= ($generated@@139 $generated@@546 $generated@@135)  (or (= $generated@@546 $generated@@136) ($generated@@543 ($generated@@544 $generated@@546)))))
 :pattern ( ($generated@@139 $generated@@546 $generated@@135))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@143) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@549) (and ($generated@@141 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@67) ($generated@@77 $generated@@547 ($generated@@142 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@77 $generated@@547 ($generated@@142 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@246 ($generated@@150 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@246 ($generated@@150 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@143) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@553) (and ($generated@@141 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@67) ($generated@@77 $generated@@551 ($generated@@142 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@77 $generated@@551 ($generated@@142 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@246 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@246 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@152) (= (type $generated@@556) $generated@@152)) (= ($generated@@221 ($generated@@241 $generated@@555) ($generated@@241 $generated@@556)) ($generated@@241 ($generated@@221 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@555) ($generated@@241 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= ($generated@@271 ($generated@@241 $generated@@557)) ($generated@@241 ($generated@@271 $generated@@557)))
 :pattern ( ($generated@@271 ($generated@@241 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@266 (type $generated@@558))))
 (=> (and (= (type $generated@@558) ($generated@@265 $generated@@559)) (= ($generated@@264 $generated@@558) 0)) (= $generated@@558 ($generated@@263 $generated@@559))))
 :pattern ( ($generated@@264 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@561)))
 (=> (and (and (= (type $generated@@560) ($generated@@79 $generated@@563 $generated@@2)) (= (type $generated@@562) $generated@@2)) (<= 0 ($generated $generated@@562))) (= ($generated@@276 ($generated@@85 $generated@@560 $generated@@561 $generated@@562)) (+ (- ($generated@@276 $generated@@560) ($generated ($generated@@84 $generated@@560 $generated@@561))) ($generated $generated@@562)))))
 :pattern ( ($generated@@276 ($generated@@85 $generated@@560 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@565) $generated@@2)) ($generated@@77 $generated@@565 $generated@@46 $generated@@564))
 :pattern ( ($generated@@77 $generated@@565 $generated@@46 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@567) $generated@@3)) ($generated@@77 $generated@@567 $generated@@47 $generated@@566))
 :pattern ( ($generated@@77 $generated@@567 $generated@@47 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@569) $generated@@4)) ($generated@@77 $generated@@569 $generated@@44 $generated@@568))
 :pattern ( ($generated@@77 $generated@@569 $generated@@44 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@571) $generated@@428)) ($generated@@77 $generated@@571 $generated@@45 $generated@@570))
 :pattern ( ($generated@@77 $generated@@571 $generated@@45 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@573) $generated@@152)) ($generated@@77 $generated@@573 $generated@@48 $generated@@572))
 :pattern ( ($generated@@77 $generated@@573 $generated@@48 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@265 $generated@@152)) (= (type $generated@@575) $generated@@67)) (= ($generated@@139 $generated@@574 ($generated@@470 $generated@@575)) (forall (($generated@@576 Int) ) (!  (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@264 $generated@@574))) ($generated@@222 ($generated@@471 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@471 $generated@@574 $generated@@576))
))))
 :pattern ( ($generated@@139 $generated@@574 ($generated@@470 $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 Int) ) (!  (=> (= (type $generated@@578) ($generated@@265 $generated@@152)) (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@264 $generated@@578))) (< ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@578 $generated@@579))) ($generated@@577 $generated@@578))))
 :pattern ( ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@578 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@139 $generated@@580 ($generated@@388 $generated@@581 $generated@@582))) (and (and ($generated@@139 ($generated@@282 $generated@@580) ($generated@@231 $generated@@581)) ($generated@@139 ($generated@@331 $generated@@580) ($generated@@231 $generated@@582))) ($generated@@139 ($generated@@362 $generated@@580) ($generated@@231 ($generated@@142 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@139 $generated@@580 ($generated@@388 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@67)) ($generated@@139 $generated@@583 ($generated@@396 $generated@@584 $generated@@585))) (and (and ($generated@@139 ($generated@@300 $generated@@583) ($generated@@236 $generated@@584)) ($generated@@139 ($generated@@342 $generated@@583) ($generated@@236 $generated@@585))) ($generated@@139 ($generated@@370 $generated@@583) ($generated@@236 ($generated@@142 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@139 $generated@@583 ($generated@@396 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@2) ($generated@@139 $generated@@586 $generated@@46))
 :pattern ( ($generated@@139 $generated@@586 $generated@@46))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@3) ($generated@@139 $generated@@587 $generated@@47))
 :pattern ( ($generated@@139 $generated@@587 $generated@@47))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@4) ($generated@@139 $generated@@588 $generated@@44))
 :pattern ( ($generated@@139 $generated@@588 $generated@@44))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@428) ($generated@@139 $generated@@589 $generated@@45))
 :pattern ( ($generated@@139 $generated@@589 $generated@@45))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@152) ($generated@@139 $generated@@590 $generated@@48))
 :pattern ( ($generated@@139 $generated@@590 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () Bool)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 (T@U) Bool)
(declare-fun $generated@@597 () T@U)
(assert  (and (and (and (and (= (type $generated@@591) $generated@@80) (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@593) ($generated@@164 $generated@@80 $generated@@4))) (= (type $generated@@595) $generated@@80)) (= (type $generated@@597) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@598  (=> (= (ControlFlow 0 2) (- 0 1)) (or (and ($generated@@139 $generated@@136 $generated@@218) (= ($generated@@256 $generated@@136) ($generated@@256 $generated@@136))) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@80) (and ($generated@@139 $generated@@599 $generated@@218) (= ($generated@@256 $generated@@599) ($generated@@256 $generated@@599))))
 :no-pattern (type $generated@@599)
 :no-pattern ($generated $generated@@599)
 :no-pattern ($generated@@0 $generated@@599)
))))))
(let (($generated@@600  (=> (and (not (and ($generated@@139 $generated@@591 $generated@@218) ($generated@@77 $generated@@591 $generated@@218 $generated@@592))) (= (ControlFlow 0 6) 2)) $generated@@598)))
(let (($generated@@601  (=> (and ($generated@@139 $generated@@591 $generated@@218) ($generated@@77 $generated@@591 $generated@@218 $generated@@592)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@591 $generated@@136))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= $generated@@591 $generated@@136))) (=> (= (ControlFlow 0 3) 2) $generated@@598))))))
(let (($generated@@602  (=> (and (= $generated@@593 ($generated@@163 $generated@@136 $generated@@592 $generated@@60 false)) (=> $generated@@594 (and ($generated@@139 $generated@@595 $generated@@218) ($generated@@77 $generated@@595 $generated@@218 $generated@@592)))) (and (=> (= (ControlFlow 0 7) 3) $generated@@601) (=> (= (ControlFlow 0 7) 6) $generated@@600)))))
(let (($generated@@603  (=> (and ($generated@@245 $generated@@592) ($generated@@596 $generated@@592)) (=> (and (and (=> $generated@@594 (and ($generated@@139 $generated@@597 $generated@@218) ($generated@@77 $generated@@597 $generated@@218 $generated@@592))) true) (and (= 1 $generated@@255) (= (ControlFlow 0 8) 7))) $generated@@602))))
$generated@@603))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U T@U T@U) Bool)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 () T@T)
(assert  (and (and (and (and (and (and (and (= (type $generated@@157) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@158) $generated@@47)) (= (type $generated@@159) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@160) ($generated@@50 $generated@@4))) (= ($generated@@1 $generated@@169) 11)) (= (type $generated@@165) $generated@@169)) (= ($generated@@1 $generated@@170) 12)) (= (type $generated@@166) $generated@@170)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@171  (=> (and (= $generated@@157 ($generated@@45 $generated@@158 $generated@@159 $generated@@160 false)) (= (ControlFlow 0 2) (- 0 1))) $generated@@161)))
(let (($generated@@172  (=> (and (and (and ($generated@@162 $generated@@159) ($generated@@163 $generated@@159)) (=> $generated@@161 (and ($generated@@164 $generated@@165 $generated@@166) ($generated@@167 $generated@@165 $generated@@166 $generated@@159)))) (and (= 0 $generated@@168) (= (ControlFlow 0 3) 2))) $generated@@171)))
$generated@@172)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@T T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U T@U) Bool)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U Int) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@663 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@150) 16) (= (type $generated@@144) ($generated@@73 $generated@@150))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@151)) $generated@@71)
 :pattern ( ($generated@@145 $generated@@151))
))) (= (type $generated@@147) $generated@@89)) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@148 $generated@@152)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@71) (= (type $generated@@154) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@155) $generated@@89)) (and ($generated@@146 $generated@@154) (and (not (= $generated@@155 $generated@@147)) (= ($generated@@148 $generated@@155) ($generated@@145 $generated@@153))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) $generated@@153))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) ($generated@@145 $generated@@153))
)))
(assert (= (type $generated@@156) ($generated@@73 $generated@@150)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@71) (= (type $generated@@158) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@159) $generated@@89)) (and ($generated@@146 $generated@@158) (and (not (= $generated@@159 $generated@@147)) (= ($generated@@148 $generated@@159) ($generated@@145 $generated@@157))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) $generated@@157))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) ($generated@@145 $generated@@157))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@162) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@160 $generated@@161 $generated@@162)) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@161 $generated@@163) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60))
)))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@71) (= (type $generated@@165) $generated@@89)) (= (type $generated@@166) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166)  (or (= $generated@@165 $generated@@147) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@87 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@87 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@71)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@71) (= (type $generated@@172) $generated@@89)) (= (type $generated@@173) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@86 $generated@@172 ($generated@@145 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert  (and (= ($generated@@1 $generated@@176) 17) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@71)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@71) (= (type $generated@@180) $generated@@71)) (= (type $generated@@181) $generated@@176)) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@150)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@150)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@176) (= (type $generated@@188) $generated@@176)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@71)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@193) $generated@@71)) ($generated@@167 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@167 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 18)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@89 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@74 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@89) (= (type $generated@@244) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@245) ($generated@@73 $generated@@4))) (= (type $generated@@247) $generated@@89)) (= (type $generated@@248) ($generated@@73 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (= ($generated@@81 $generated@@156) 0))
(assert (forall (($generated@@251 T@T) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@73 $generated@@251))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@70) $generated@@156))
(assert ($generated@@254 $generated@@156))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@256 $generated@@257)) $generated@@176)
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@71) (= (type $generated@@259) $generated@@71)) (= (type $generated@@260) $generated@@150)) (= (type $generated@@261) $generated@@150)) (= ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259))  (and ($generated@@149 $generated@@260 $generated@@258) ($generated@@149 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259)))
)))
(assert (= ($generated@@81 $generated@@144) 0))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@69) $generated@@144))
(assert  (not ($generated@@254 $generated@@144)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@176) (= (type $generated@@263) $generated@@176)) (= ($generated@@182 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@182 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@71)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@267) $generated@@71)) (= ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@150) ($generated@@0 ($generated@@93 $generated@@266 $generated@@268))) ($generated@@149 $generated@@268 $generated@@267))
 :pattern ( ($generated@@93 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@71)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@272) $generated@@71)) (= ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@150) ($generated@@0 ($generated@@93 $generated@@271 $generated@@273))) ($generated@@149 $generated@@273 $generated@@272))
 :pattern ( ($generated@@93 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
(= (type ($generated@@274 $generated@@275)) $generated@@276))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@274 $generated@@277) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@71) (= (type $generated@@280) $generated@@71)) (= (type $generated@@281) $generated@@150)) (= (type $generated@@282) $generated@@150)) (= (type $generated@@283) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@146 $generated@@283)) (= ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287)) $generated@@150)
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@71) (= (type $generated@@289) $generated@@89)) ($generated@@149 ($generated@@285 $generated@@288 $generated@@289) $generated@@288))
 :pattern ( ($generated@@285 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@291 $generated@@292)) $generated@@150)
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@71) (= (type $generated@@294) $generated@@89)) ($generated@@149 ($generated@@290 $generated@@293 $generated@@294) $generated@@293))
 :pattern ( ($generated@@290 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@76)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@176) (= ($generated@@174 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@62)))
 :pattern ( ($generated@@174 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@176) ($generated@@174 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@150) (= (type $generated@@300) $generated@@150)) (= $generated@@298 ($generated@@255 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@174 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 19)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert ($generated@@254 $generated@@60))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@309) $generated@@71) (= (type $generated@@310) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@311) $generated@@89)) (and (and ($generated@@146 $generated@@310) (and (not (= $generated@@311 $generated@@147)) (= ($generated@@148 $generated@@311) ($generated@@145 $generated@@309)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) $generated@@309 $generated@@310))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) ($generated@@145 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@312) $generated@@71) (= (type $generated@@313) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@314) $generated@@89)) (and (and ($generated@@146 $generated@@313) (and (not (= $generated@@314 $generated@@147)) (= ($generated@@148 $generated@@314) ($generated@@145 $generated@@312)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) $generated@@312 $generated@@313))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) ($generated@@145 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@71) (= (type $generated@@316) $generated@@89)) (= ($generated@@167 $generated@@316 ($generated@@169 $generated@@315))  (and ($generated@@167 $generated@@316 ($generated@@145 $generated@@315)) (not (= $generated@@316 $generated@@147)))))
 :pattern ( ($generated@@167 $generated@@316 ($generated@@169 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@150)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@71) (= (type $generated@@321) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@86 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@322) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@323) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@324) $generated@@150)) (= (type $generated@@325) $generated@@71)) ($generated@@160 $generated@@322 $generated@@323)) ($generated@@278 $generated@@324 $generated@@325 $generated@@322)) ($generated@@278 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@160 $generated@@322 $generated@@323) ($generated@@278 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@326) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@327) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@329) $generated@@71)) ($generated@@160 $generated@@326 $generated@@327)) ($generated@@86 $generated@@328 $generated@@329 $generated@@326)) ($generated@@86 $generated@@328 $generated@@329 $generated@@327))
 :pattern ( ($generated@@160 $generated@@326 $generated@@327) ($generated@@86 $generated@@328 $generated@@329 $generated@@326))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@88 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@91 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@88 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@93 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@78)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@71) (and (= ($generated@@82 ($generated@@145 $generated@@338)) $generated@@65) (= ($generated@@336 ($generated@@145 $generated@@338)) $generated@@68)))
 :pattern ( ($generated@@145 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@71) (and (= ($generated@@82 ($generated@@169 $generated@@339)) $generated@@66) (= ($generated@@336 ($generated@@169 $generated@@339)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 20)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@88 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 21)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@88 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@378) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@376 $generated@@377 $generated@@378)) (and ($generated@@160 $generated@@377 $generated@@378) (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@74 (type $generated@@380))))
 (=> (and (and (= (type $generated@@379) $generated@@89) (= (type $generated@@380) ($generated@@73 $generated@@381))) (not ($generated@@254 $generated@@380))) (= ($generated@@95 ($generated@@93 $generated@@377 $generated@@379) $generated@@380) ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))
))))
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@91 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@88 $generated@@383 $generated@@2)) (= ($generated@@190 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (and (<= 0 ($generated ($generated@@93 $generated@@382 $generated@@384))) (<= ($generated ($generated@@93 $generated@@382 $generated@@384)) ($generated@@330 $generated@@382))))
 :pattern ( ($generated@@93 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@190 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@71) (= (type $generated@@386) $generated@@89)) (= ($generated@@167 $generated@@386 ($generated@@145 $generated@@385))  (or (= $generated@@386 $generated@@147) (= ($generated@@148 $generated@@386) ($generated@@145 $generated@@385)))))
 :pattern ( ($generated@@167 $generated@@386 ($generated@@145 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@344 (type $generated@@387))))
(let (($generated@@389 ($generated@@343 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@342 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@341 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@340 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@344 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@88 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@344 (type $generated@@394))))
(let (($generated@@396 ($generated@@343 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@342 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@341 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@93 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@362 (type $generated@@398))))
(let (($generated@@400 ($generated@@361 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@360 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@359 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@358 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@362 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@88 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@362 (type $generated@@405))))
(let (($generated@@407 ($generated@@361 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@360 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@359 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@93 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@410) $generated@@71)) (= ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@409 $generated@@411)))) ($generated@@149 $generated@@411 $generated@@410))
 :pattern ( ($generated@@93 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@413) $generated@@71)) (= (type $generated@@414) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@150) ($generated@@0 ($generated@@93 $generated@@412 $generated@@415))) ($generated@@278 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@93 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@417) $generated@@71)) (= (type $generated@@418) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@0 ($generated@@93 $generated@@416 $generated@@419))) ($generated@@278 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@93 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@93 ($generated@@331 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@93 ($generated@@331 $generated@@421) $generated@@420)))
)))
(assert  (and (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@422 $generated@@425)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@422 $generated@@425))
)) (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@423 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@423 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@344 (type $generated@@428))))
(let (($generated@@430 ($generated@@343 (type $generated@@428))))
(= (type ($generated@@424 $generated@@428)) ($generated@@88 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@424 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@432) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432)))) (= ($generated@@93 ($generated@@424 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@432))))))
 :pattern ( ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@362 (type $generated@@436))))
(let (($generated@@438 ($generated@@361 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@88 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@440) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440)))) (= ($generated@@93 ($generated@@434 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@440))))))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@343 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@342 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@93 ($generated@@391 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@441) $generated@@445))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@361 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@360 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@93 ($generated@@402 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@446) $generated@@450))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@93 ($generated@@402 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@71)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@455) $generated@@71)) (= (type $generated@@456) $generated@@71)) (= (type $generated@@457) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))) (and ($generated@@278 ($generated@@93 ($generated@@424 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@278 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@454) $generated@@458))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@71)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@463) $generated@@71)) (= (type $generated@@464) $generated@@71)) (= (type $generated@@465) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))) (and ($generated@@278 ($generated@@93 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@278 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@467) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@468) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@469) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@467 $generated@@469))) (and ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))) ($generated@@160 $generated@@467 $generated@@469))
 :pattern ( ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@88 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@362 (type $generated@@472))))
(let (($generated@@474 ($generated@@361 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@360 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@359 $generated@@474 $generated@@473)) (= ($generated@@358 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@358 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@362 (type $generated@@475))))
(let (($generated@@477 ($generated@@361 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@360 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@359 $generated@@477 $generated@@476)) (= ($generated@@402 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@402 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@362 (type $generated@@478))))
(let (($generated@@480 ($generated@@361 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@360 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@359 $generated@@480 $generated@@479)) (= ($generated@@433 $generated@@478) ($generated@@470 $generated@@150))))))
 :pattern ( ($generated@@433 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@344 (type $generated@@481))))
(let (($generated@@483 ($generated@@343 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@342 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@341 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@150) (= (type $generated@@485) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@422 $generated@@481) ($generated@@317 ($generated@@255 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@422 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@362 (type $generated@@486))))
(let (($generated@@488 ($generated@@361 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@360 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@359 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@150) (= (type $generated@@490) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@433 $generated@@486) ($generated@@317 ($generated@@255 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@433 $generated@@486))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@77)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@T) ) (!  (=> (and (= (type $generated@@493) $generated@@77) (= (type $generated@@494) $generated@@75)) (and (= ($generated@@491 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@493) (= ($generated@@84 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@494)))
 :pattern ( ($generated@@250 $generated@@495 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@150) ($generated@@149 $generated@@496 $generated@@46)) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@496)) $generated@@496) ($generated@@167 ($generated@@423 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@149 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@150) ($generated@@149 $generated@@497 $generated@@47)) (and (= ($generated@@317 ($generated@@423 $generated@@3 $generated@@497)) $generated@@497) ($generated@@167 ($generated@@423 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@149 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@150) ($generated@@149 $generated@@498 $generated@@44)) (and (= ($generated@@317 ($generated@@423 $generated@@4 $generated@@498)) $generated@@498) ($generated@@167 ($generated@@423 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@149 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 22))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) ($generated@@149 $generated@@500 $generated@@45)) (and (= ($generated@@317 ($generated@@423 $generated@@499 $generated@@500)) $generated@@500) ($generated@@167 ($generated@@423 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@149 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@71) (= ($generated@@149 ($generated@@317 $generated@@501) $generated@@502) ($generated@@167 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@149 ($generated@@317 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@91 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@88 $generated@@504 $generated@@2)) (<= 0 ($generated@@330 $generated@@503))))
 :pattern ( ($generated@@330 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@304 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@303 $generated@@506)) (<= 0 ($generated@@302 $generated@@505))))
 :pattern ( ($generated@@302 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@71)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@71) (= (type $generated@@510) $generated@@71)) (= ($generated@@507 ($generated@@451 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@451 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@71)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@71) (= (type $generated@@514) $generated@@71)) (= ($generated@@511 ($generated@@451 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@451 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@71) (= (type $generated@@516) $generated@@71)) (= ($generated@@82 ($generated@@451 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@71)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@71) (= (type $generated@@520) $generated@@71)) (= ($generated@@517 ($generated@@459 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@459 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@71)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@71) (= (type $generated@@524) $generated@@71)) (= ($generated@@521 ($generated@@459 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@71) (= (type $generated@@526) $generated@@71)) (= ($generated@@82 ($generated@@459 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@150)) (= ($generated@@295 ($generated@@255 $generated@@527 $generated@@528)) $generated@@62))
 :pattern ( ($generated@@255 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@71)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@71) (= (type $generated@@532) $generated@@71)) (= ($generated@@529 ($generated@@175 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@175 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@71) (= (type $generated@@536) $generated@@71)) (= ($generated@@533 ($generated@@175 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@175 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@150)) (= ($generated@@183 ($generated@@255 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@255 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@150)) (= ($generated@@184 ($generated@@255 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@255 $generated@@539 $generated@@540))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@543))
)) (forall (($generated@@544 T@U) ($generated@@545 Int) ) (! (let (($generated@@546 ($generated@@304 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544 $generated@@545)) $generated@@546))
 :pattern ( ($generated@@542 $generated@@544 $generated@@545))
))))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@303 $generated@@150)) (= (type $generated@@548) $generated@@71)) (= (type $generated@@549) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549) (forall (($generated@@550 Int) ) (!  (=> (and (<= 0 $generated@@550) (< $generated@@550 ($generated@@302 $generated@@547))) ($generated@@278 ($generated@@542 $generated@@547 $generated@@550) $generated@@548 $generated@@549))
 :pattern ( ($generated@@542 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@551 ($generated@@87 $generated@@552)) $generated@@552)
 :pattern ( ($generated@@87 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@71) (= ($generated@@553 ($generated@@264 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@264 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@71) (= ($generated@@82 ($generated@@264 $generated@@556)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@71)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@71) (= ($generated@@557 ($generated@@269 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@269 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@71) (= ($generated@@82 ($generated@@269 $generated@@560)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@71)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@71) (= ($generated@@561 ($generated@@189 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@189 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@71) (= ($generated@@82 ($generated@@189 $generated@@564)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@71)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@71) (= ($generated@@565 ($generated@@541 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@541 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@71) (= ($generated@@82 ($generated@@541 $generated@@568)) $generated@@57))
 :pattern ( ($generated@@541 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@71)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@71) (= ($generated@@569 ($generated@@145 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@145 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@71)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@71) (= ($generated@@572 ($generated@@169 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@169 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@423 $generated@@576 ($generated@@317 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@317 $generated@@575))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@71) (= (type $generated@@578) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@579) $generated@@89)) (and ($generated@@146 $generated@@578) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60)))) ($generated@@278 ($generated@@285 $generated@@577 $generated@@579) $generated@@577 $generated@@578))
 :pattern ( ($generated@@285 $generated@@577 $generated@@579) ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60))
))))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@71) (= (type $generated@@581) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@582) $generated@@89)) (and ($generated@@146 $generated@@581) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60)))) ($generated@@278 ($generated@@290 $generated@@580 $generated@@582) $generated@@580 $generated@@581))
 :pattern ( ($generated@@290 $generated@@580 $generated@@582) ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60))
))))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@584) $generated@@71)) (= (type $generated@@585) $generated@@71)) (= ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))) (and ($generated@@149 ($generated@@93 ($generated@@424 $generated@@583) $generated@@586) $generated@@585) ($generated@@149 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@583) $generated@@586))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@71)) (= (type $generated@@589) $generated@@71)) (= ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))) (and ($generated@@149 ($generated@@93 ($generated@@434 $generated@@587) $generated@@590) $generated@@589) ($generated@@149 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@587) $generated@@590))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@150)) (< ($generated@@591 $generated@@593) ($generated@@592 ($generated@@255 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@255 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@150) (= (type $generated@@596) $generated@@150)) (< ($generated@@591 $generated@@596) ($generated@@592 ($generated@@255 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@255 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@150) (= (type $generated@@598) $generated@@71)) (= (type $generated@@599) $generated@@71)) ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599))) (and (= ($generated@@317 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597)) $generated@@597) ($generated@@167 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597) ($generated@@451 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@150) (= (type $generated@@601) $generated@@71)) (= (type $generated@@602) $generated@@71)) ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602))) (and (= ($generated@@317 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600)) $generated@@600) ($generated@@167 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600) ($generated@@459 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@71) (= (type $generated@@604) $generated@@71)) (= (type $generated@@605) $generated@@150)) ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604))) (and (= ($generated@@317 ($generated@@423 $generated@@176 $generated@@605)) $generated@@605) ($generated@@167 ($generated@@423 $generated@@176 $generated@@605) ($generated@@175 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@93 ($generated@@470 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@93 ($generated@@470 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@71) (= (type $generated@@609) $generated@@71)) (and (= ($generated@@82 ($generated@@175 $generated@@608 $generated@@609)) $generated@@63) (= ($generated@@336 ($generated@@175 $generated@@608 $generated@@609)) $generated@@67)))
 :pattern ( ($generated@@175 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@176) (= ($generated@@591 ($generated@@317 $generated@@610)) ($generated@@592 $generated@@610)))
 :pattern ( ($generated@@591 ($generated@@317 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@150) ($generated@@149 $generated@@611 ($generated@@87 0))) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@611)) $generated@@611) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@611) ($generated@@87 0))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@87 0)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@150) (= (type $generated@@613) $generated@@71)) ($generated@@149 $generated@@612 ($generated@@264 $generated@@613))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612)) $generated@@612) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612) ($generated@@264 $generated@@613))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@264 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@150) (= (type $generated@@615) $generated@@71)) ($generated@@149 $generated@@614 ($generated@@269 $generated@@615))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614)) $generated@@614) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614) ($generated@@269 $generated@@615))))
 :pattern ( ($generated@@149 $generated@@614 ($generated@@269 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@150) (= (type $generated@@617) $generated@@71)) ($generated@@149 $generated@@616 ($generated@@189 $generated@@617))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616)) $generated@@616) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616) ($generated@@189 $generated@@617))))
 :pattern ( ($generated@@149 $generated@@616 ($generated@@189 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@150) (= (type $generated@@619) $generated@@71)) ($generated@@149 $generated@@618 ($generated@@541 $generated@@619))) (and (= ($generated@@317 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618)) $generated@@618) ($generated@@167 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618) ($generated@@541 $generated@@619))))
 :pattern ( ($generated@@149 $generated@@618 ($generated@@541 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@71) (= (type $generated@@621) $generated@@150)) ($generated@@149 $generated@@621 ($generated@@145 $generated@@620))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@621)) $generated@@621) ($generated@@167 ($generated@@423 $generated@@89 $generated@@621) ($generated@@145 $generated@@620))))
 :pattern ( ($generated@@149 $generated@@621 ($generated@@145 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@71) (= (type $generated@@623) $generated@@150)) ($generated@@149 $generated@@623 ($generated@@169 $generated@@622))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@623)) $generated@@623) ($generated@@167 ($generated@@423 $generated@@89 $generated@@623) ($generated@@169 $generated@@622))))
 :pattern ( ($generated@@149 $generated@@623 ($generated@@169 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (=> (and (and (and (= (type $generated@@624) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@625) $generated@@89)) (= (type $generated@@626) ($generated@@73 $generated@@628))) ($generated@@146 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))) ($generated@@160 $generated@@624 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@630) $generated@@71)) (= (type $generated@@631) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@629 $generated@@632)))) ($generated@@278 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@93 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@176) (= (type $generated@@634) $generated@@71)) (= (type $generated@@635) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@635) (and ($generated@@174 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@71) ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@176) (= (type $generated@@638) $generated@@71)) (= (type $generated@@639) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@639) (and ($generated@@174 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@71) ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@150) (= (type $generated@@642) $generated@@150)) (= ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)) ($generated@@274 ($generated@@255 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@317 ($generated@@274 $generated@@643)) ($generated@@274 ($generated@@317 $generated@@643)))
 :pattern ( ($generated@@317 ($generated@@274 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@304 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@303 $generated@@645)) (= ($generated@@302 $generated@@644) 0)) (= $generated@@644 ($generated@@301 $generated@@645))))
 :pattern ( ($generated@@302 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@88 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@330 $generated@@646) ($generated ($generated@@93 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@651) $generated@@2)) ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@653) $generated@@3)) ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@655) $generated@@4)) ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@657) $generated@@499)) ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@659) $generated@@150)) ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@303 $generated@@150)) (= (type $generated@@661) $generated@@71)) (= ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)) (forall (($generated@@662 Int) ) (!  (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@302 $generated@@660))) ($generated@@149 ($generated@@542 $generated@@660 $generated@@662) $generated@@661))
 :pattern ( ($generated@@542 $generated@@660 $generated@@662))
))))
 :pattern ( ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 Int) ) (!  (=> (= (type $generated@@664) ($generated@@303 $generated@@150)) (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@302 $generated@@664))) (< ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))) ($generated@@663 $generated@@664))))
 :pattern ( ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@667) $generated@@71)) (= (type $generated@@668) $generated@@71)) ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668))) (and (and ($generated@@167 ($generated@@340 $generated@@666) ($generated@@264 $generated@@667)) ($generated@@167 ($generated@@391 $generated@@666) ($generated@@264 $generated@@668))) ($generated@@167 ($generated@@422 $generated@@666) ($generated@@264 ($generated@@175 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@670) $generated@@71)) (= (type $generated@@671) $generated@@71)) ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671))) (and (and ($generated@@167 ($generated@@358 $generated@@669) ($generated@@269 $generated@@670)) ($generated@@167 ($generated@@402 $generated@@669) ($generated@@269 $generated@@671))) ($generated@@167 ($generated@@433 $generated@@669) ($generated@@269 ($generated@@175 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@2) ($generated@@167 $generated@@672 $generated@@46))
 :pattern ( ($generated@@167 $generated@@672 $generated@@46))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@3) ($generated@@167 $generated@@673 $generated@@47))
 :pattern ( ($generated@@167 $generated@@673 $generated@@47))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@4) ($generated@@167 $generated@@674 $generated@@44))
 :pattern ( ($generated@@167 $generated@@674 $generated@@44))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@499) ($generated@@167 $generated@@675 $generated@@45))
 :pattern ( ($generated@@167 $generated@@675 $generated@@45))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@150) ($generated@@167 $generated@@676 $generated@@48))
 :pattern ( ($generated@@167 $generated@@676 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Bool)
(declare-fun $generated@@680 (T@U) Bool)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(assert  (and (and (and (and (= (type $generated@@677) ($generated@@196 $generated@@89 $generated@@4)) (= (type $generated@@678) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@681) $generated@@150)) (= (type $generated@@682) $generated@@71)) (= (type $generated@@683) $generated@@89)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@684  (=> (= $generated@@677 ($generated@@195 $generated@@147 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) $generated@@679)))))
(let (($generated@@685  (=> (and (and (and ($generated@@146 $generated@@678) ($generated@@680 $generated@@678)) (and ($generated@@149 $generated@@681 $generated@@682) ($generated@@278 $generated@@681 $generated@@682 $generated@@678))) (and (and (not (= $generated@@683 $generated@@147)) ($generated@@167 $generated@@683 ($generated@@169 $generated@@682))) (and (= 1 $generated@@284) (= (ControlFlow 0 4) 2)))) $generated@@684)))
$generated@@685)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@370 (T@U T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@T) T@U)
(declare-fun $generated@@410 () T@T)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@453 (T@U Int) T@U)
(declare-fun $generated@@462 (T@U) Int)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@555 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (= ($generated@@151 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@81 $generated@@303 $generated@@305))) (<= ($generated ($generated@@81 $generated@@303 $generated@@305)) ($generated@@261 $generated@@303))))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@271 (type $generated@@306))))
(let (($generated@@308 ($generated@@270 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@269 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@268 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@267 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@271 (type $generated@@313))))
(let (($generated@@315 ($generated@@270 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@269 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@268 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@289 (type $generated@@317))))
(let (($generated@@319 ($generated@@288 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@287 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@286 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@285 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@329) $generated@@64)) (= ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330)))) ($generated@@212 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= (type $generated@@333) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@145) ($generated@@0 ($generated@@81 $generated@@331 $generated@@334))) ($generated@@236 $generated@@334 $generated@@332 $generated@@333))
 :pattern ( ($generated@@81 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@145) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@236 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@340) $generated@@339)) 0))
 :pattern ( (let (($generated@@340 (type $generated@@339)))
($generated@@81 ($generated@@262 $generated@@340) $generated@@339)))
)))
(assert  (and (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@341 $generated@@344)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@341 $generated@@344))
)) (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@342 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@342 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@271 (type $generated@@347))))
(let (($generated@@349 ($generated@@270 (type $generated@@347))))
(= (type ($generated@@343 $generated@@347)) ($generated@@76 $generated@@349 $generated@@348))))
 :pattern ( ($generated@@343 $generated@@347))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@351) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351)))) (= ($generated@@81 ($generated@@343 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@351))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@289 (type $generated@@355))))
(let (($generated@@357 ($generated@@288 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@76 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@359) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359)))) (= ($generated@@81 ($generated@@353 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@359))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(let (($generated@@363 ($generated@@270 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@269 $generated@@363 $generated@@362)) (= ($generated@@0 ($generated@@81 ($generated@@310 $generated@@360) $generated@@361)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@360) $generated@@364)) (= $generated@@361 ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@360) $generated@@364))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))
))))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(let (($generated@@368 ($generated@@288 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@287 $generated@@368 $generated@@367)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@365) $generated@@366)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@365) $generated@@369)) (= $generated@@366 ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@365) $generated@@369))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@371 $generated@@372)) $generated@@64)
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@373) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@374) $generated@@64)) (= (type $generated@@375) $generated@@64)) (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))) (and ($generated@@236 ($generated@@81 ($generated@@343 $generated@@373) $generated@@377) $generated@@375 $generated@@376) ($generated@@236 $generated@@377 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))
))))
 :pattern ( ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@64)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))) (and ($generated@@236 ($generated@@81 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@236 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 T@T) ) (! (= (type ($generated@@386 $generated@@387)) ($generated@@76 $generated@@387 $generated@@4))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@289 (type $generated@@388))))
(let (($generated@@390 ($generated@@288 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@287 $generated@@390 $generated@@389)) (= (= $generated@@388 ($generated@@286 $generated@@390 $generated@@389)) (= ($generated@@285 $generated@@388) ($generated@@386 $generated@@390))))))
 :pattern ( ($generated@@285 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@289 (type $generated@@391))))
(let (($generated@@393 ($generated@@288 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@287 $generated@@393 $generated@@392)) (= (= $generated@@391 ($generated@@286 $generated@@393 $generated@@392)) (= ($generated@@321 $generated@@391) ($generated@@386 $generated@@392))))))
 :pattern ( ($generated@@321 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@289 (type $generated@@394))))
(let (($generated@@396 ($generated@@288 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@287 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@286 $generated@@396 $generated@@395)) (= ($generated@@352 $generated@@394) ($generated@@386 $generated@@145))))))
 :pattern ( ($generated@@352 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@271 (type $generated@@397))))
(let (($generated@@399 ($generated@@270 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@269 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@268 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (and (and (= (type $generated@@400) $generated@@145) (= (type $generated@@401) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@397) ($generated@@256 ($generated@@211 $generated@@400 $generated@@401)))))
 :no-pattern (type $generated@@400)
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@341 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@289 (type $generated@@402))))
(let (($generated@@404 ($generated@@288 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@287 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@286 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@145) (= (type $generated@@406) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@402) ($generated@@256 ($generated@@211 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@352 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@212 $generated@@407 $generated@@46)) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@407)) $generated@@407) ($generated@@132 ($generated@@342 $generated@@2 $generated@@407) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@407 $generated@@46))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@145) ($generated@@212 $generated@@408 $generated@@47)) (and (= ($generated@@256 ($generated@@342 $generated@@3 $generated@@408)) $generated@@408) ($generated@@132 ($generated@@342 $generated@@3 $generated@@408) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@408 $generated@@47))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@44)) (and (= ($generated@@256 ($generated@@342 $generated@@4 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@342 $generated@@4 $generated@@409) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@410) 20))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@45)) (and (= ($generated@@256 ($generated@@342 $generated@@410 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@342 $generated@@410 $generated@@411) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@45))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@412) $generated@@413) ($generated@@132 $generated@@412 $generated@@413)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@79 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@76 $generated@@415 $generated@@2)) (<= 0 ($generated@@261 $generated@@414))))
 :pattern ( ($generated@@261 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@251 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@250 $generated@@417)) (<= 0 ($generated@@249 $generated@@416))))
 :pattern ( ($generated@@249 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@64) (= (type $generated@@421) $generated@@64)) (= ($generated@@418 ($generated@@370 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@370 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@64) (= (type $generated@@425) $generated@@64)) (= ($generated@@422 ($generated@@370 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@370 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@72 ($generated@@370 $generated@@426 $generated@@427)) $generated@@58))
 :pattern ( ($generated@@370 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@378 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@378 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@378 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@378 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@378 $generated@@436 $generated@@437)) $generated@@59))
 :pattern ( ($generated@@378 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) (= (type $generated@@439) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@438 $generated@@439)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@135 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@135 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@135 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@135 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert  (and (forall (($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@454))
)) (forall (($generated@@455 T@U) ($generated@@456 Int) ) (! (let (($generated@@457 ($generated@@251 (type $generated@@455))))
(= (type ($generated@@453 $generated@@455 $generated@@456)) $generated@@457))
 :pattern ( ($generated@@453 $generated@@455 $generated@@456))
))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (= (type $generated@@458) ($generated@@250 $generated@@145)) (= (type $generated@@459) $generated@@64)) (= (type $generated@@460) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460) (forall (($generated@@461 Int) ) (!  (=> (and (<= 0 $generated@@461) (< $generated@@461 ($generated@@249 $generated@@458))) ($generated@@236 ($generated@@453 $generated@@458 $generated@@461) $generated@@459 $generated@@460))
 :pattern ( ($generated@@453 $generated@@458 $generated@@461))
))))
 :pattern ( ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 Int) ) (! (= ($generated@@462 ($generated@@75 $generated@@463)) $generated@@463)
 :pattern ( ($generated@@75 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@464 ($generated@@221 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@467)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@468 ($generated@@226 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@226 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@471)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@150 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@150 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@475)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@452 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@452 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@452 $generated@@479)) $generated@@57))
 :pattern ( ($generated@@452 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(= ($generated@@342 $generated@@481 ($generated@@256 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@256 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))) (and ($generated@@212 ($generated@@81 ($generated@@343 $generated@@482) $generated@@485) $generated@@484) ($generated@@212 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@482) $generated@@485))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))) (and ($generated@@212 ($generated@@81 ($generated@@353 $generated@@486) $generated@@489) $generated@@488) ($generated@@212 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@486) $generated@@489))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) (= (type $generated@@493) $generated@@145)) (< ($generated@@490 $generated@@492) ($generated@@491 ($generated@@211 $generated@@492 $generated@@493))))
 :pattern ( ($generated@@211 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@490 $generated@@495) ($generated@@491 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498))) (and (= ($generated@@256 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496)) $generated@@496) ($generated@@132 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496) ($generated@@370 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501))) (and (= ($generated@@256 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499)) $generated@@499) ($generated@@132 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499) ($generated@@378 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@145)) ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503))) (and (= ($generated@@256 ($generated@@342 $generated@@136 $generated@@504)) $generated@@504) ($generated@@132 ($generated@@342 $generated@@136 $generated@@504) ($generated@@135 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 $generated@@506) $generated@@505))))
 :pattern ( (let (($generated@@506 (type $generated@@505)))
($generated@@81 ($generated@@386 $generated@@506) $generated@@505)))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@509 $generated@@510)) $generated@@62) (= ($generated@@507 ($generated@@135 $generated@@509 $generated@@510)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@136) (= ($generated@@490 ($generated@@256 $generated@@511)) ($generated@@491 $generated@@511)))
 :pattern ( ($generated@@490 ($generated@@256 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) ($generated@@212 $generated@@512 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@512)) $generated@@512) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@512) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@512 ($generated@@75 0)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) ($generated@@212 $generated@@513 ($generated@@221 $generated@@514))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513) ($generated@@221 $generated@@514))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@221 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@226 $generated@@516))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@226 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@226 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@150 $generated@@518))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517) ($generated@@150 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@150 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@452 $generated@@520))) (and (= ($generated@@256 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519) ($generated@@452 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@452 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@521 $generated@@524)))) ($generated@@236 $generated@@524 $generated@@522 $generated@@523))
 :pattern ( ($generated@@81 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@136) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@527) (and ($generated@@134 $generated@@525) (exists (($generated@@528 T@U) ) (!  (and (= (type $generated@@528) $generated@@64) ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
))))) ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@136) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@531) (and ($generated@@134 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@64) ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
 :pattern ( ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
))))) ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)) ($generated@@231 ($generated@@211 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@535)) ($generated@@231 ($generated@@256 $generated@@535)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@251 (type $generated@@536))))
 (=> (and (= (type $generated@@536) ($generated@@250 $generated@@537)) (= ($generated@@249 $generated@@536) 0)) (= $generated@@536 ($generated@@248 $generated@@537))))
 :pattern ( ($generated@@249 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@539)))
 (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@541 $generated@@2)) (= (type $generated@@540) $generated@@2)) (<= 0 ($generated $generated@@540))) (= ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)) (+ (- ($generated@@261 $generated@@538) ($generated ($generated@@81 $generated@@538 $generated@@539))) ($generated $generated@@540)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@543) $generated@@2)) ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
 :pattern ( ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@545) $generated@@3)) ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
 :pattern ( ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@547) $generated@@4)) ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
 :pattern ( ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@549) $generated@@410)) ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
 :pattern ( ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@145)) ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@250 $generated@@145)) (= (type $generated@@553) $generated@@64)) (= ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@249 $generated@@552))) ($generated@@212 ($generated@@453 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@453 $generated@@552 $generated@@554))
))))
 :pattern ( ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (= (type $generated@@556) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@249 $generated@@556))) (< ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))) ($generated@@555 $generated@@556))))
 :pattern ( ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560))) (and (and ($generated@@132 ($generated@@267 $generated@@558) ($generated@@221 $generated@@559)) ($generated@@132 ($generated@@310 $generated@@558) ($generated@@221 $generated@@560))) ($generated@@132 ($generated@@341 $generated@@558) ($generated@@221 ($generated@@135 $generated@@559 $generated@@560)))))
 :pattern ( ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@285 $generated@@561) ($generated@@226 $generated@@562)) ($generated@@132 ($generated@@321 $generated@@561) ($generated@@226 $generated@@563))) ($generated@@132 ($generated@@352 $generated@@561) ($generated@@226 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@2) ($generated@@132 $generated@@564 $generated@@46))
 :pattern ( ($generated@@132 $generated@@564 $generated@@46))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@3) ($generated@@132 $generated@@565 $generated@@47))
 :pattern ( ($generated@@132 $generated@@565 $generated@@47))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@4) ($generated@@132 $generated@@566 $generated@@44))
 :pattern ( ($generated@@132 $generated@@566 $generated@@44))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@410) ($generated@@132 $generated@@567 $generated@@45))
 :pattern ( ($generated@@132 $generated@@567 $generated@@45))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@145) ($generated@@132 $generated@@568 $generated@@48))
 :pattern ( ($generated@@132 $generated@@568 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@569 () T@U)
(declare-fun $generated@@570 () T@U)
(declare-fun $generated@@571 () T@U)
(declare-fun $generated@@572 () T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () Bool)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 (T@U) Bool)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@569) $generated@@64) (= (type $generated@@570) $generated@@145)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@572) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@573) $generated@@77)) (= (type $generated@@575) $generated@@145)) (= (type $generated@@577) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@579  (=> (= (ControlFlow 0 2) (- 0 1)) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@145) (and ($generated@@212 $generated@@580 $generated@@569) ($generated@@0 ($generated@@231 ($generated@@11 true)))))
 :no-pattern (type $generated@@580)
 :no-pattern ($generated $generated@@580)
 :no-pattern ($generated@@0 $generated@@580)
)))))
(let (($generated@@581  (=> (and (not (and ($generated@@212 $generated@@570 $generated@@569) ($generated@@236 $generated@@570 $generated@@569 $generated@@571))) (= (ControlFlow 0 4) 2)) $generated@@579)))
(let (($generated@@582  (=> (and (and ($generated@@212 $generated@@570 $generated@@569) ($generated@@236 $generated@@570 $generated@@569 $generated@@571)) (= (ControlFlow 0 3) 2)) $generated@@579)))
(let (($generated@@583  (=> (and (= $generated@@572 ($generated@@156 $generated@@573 $generated@@571 $generated@@60 false)) (=> $generated@@574 (and ($generated@@212 $generated@@575 $generated@@569) ($generated@@236 $generated@@575 $generated@@569 $generated@@571)))) (and (=> (= (ControlFlow 0 5) 3) $generated@@582) (=> (= (ControlFlow 0 5) 4) $generated@@581)))))
(let (($generated@@584  (=> (and ($generated@@235 $generated@@571) ($generated@@576 $generated@@571)) (=> (and (and (=> $generated@@574 (and ($generated@@212 $generated@@577 $generated@@569) ($generated@@236 $generated@@577 $generated@@569 $generated@@571))) true) (and (= 0 $generated@@578) (= (ControlFlow 0 6) 5))) $generated@@583))))
$generated@@584))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@255 () Int)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@263 (T@T) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@321 (T@T T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Bool)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@577 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@80 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@70 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@213) ($generated@@69 $generated@@4))) (= (type $generated@@215) $generated@@80)) (= (type $generated@@216) ($generated@@69 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (= (type $generated@@218) $generated@@67))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@219 $generated@@218 $generated@@220) ($generated@@77 $generated@@219 $generated@@135 $generated@@220)))
 :pattern ( ($generated@@77 $generated@@219 $generated@@218 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@143)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@152)) (= (type $generated@@228) $generated@@152)) (= ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@139 ($generated@@221 $generated@@227 $generated@@228) ($generated@@142 $generated@@225 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@143) (= (type $generated@@230) $generated@@143)) (= ($generated@@149 $generated@@229 $generated@@230) (= $generated@@229 $generated@@230)))
 :pattern ( ($generated@@149 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@67)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@234) $generated@@67)) (= ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@152) ($generated@@0 ($generated@@84 $generated@@233 $generated@@235))) ($generated@@222 $generated@@235 $generated@@234))
 :pattern ( ($generated@@84 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@139 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@67)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@239) $generated@@67)) (= ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@152) ($generated@@0 ($generated@@84 $generated@@238 $generated@@240))) ($generated@@222 $generated@@240 $generated@@239))
 :pattern ( ($generated@@84 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@139 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(= (type ($generated@@241 $generated@@242)) $generated@@243))
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@241 $generated@@244) $generated@@244)
 :pattern ( ($generated@@241 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@152)) (= (type $generated@@250) $generated@@152)) (= (type $generated@@251) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@245 $generated@@251)) (= ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251)  (and ($generated@@246 $generated@@249 $generated@@247 $generated@@251) ($generated@@246 $generated@@250 $generated@@248 $generated@@251))))
 :pattern ( ($generated@@77 ($generated@@221 $generated@@249 $generated@@250) ($generated@@142 $generated@@247 $generated@@248) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@71)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (= (type $generated@@254) $generated@@143) (= ($generated@@141 $generated@@254) (= ($generated@@252 $generated@@254) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@254))
)))
(assert  (=> (< 0 $generated@@255) (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@80) ($generated@@139 ($generated@@8 ($generated@@256 $generated@@257)) $generated@@46))
 :pattern ( ($generated@@256 $generated@@257))
))))
(assert  (=> (< 0 $generated@@255) (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@259) $generated@@80)) (and ($generated@@245 $generated@@258) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@258 $generated@@259) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@256 $generated@@259)) $generated@@46 $generated@@258))
 :pattern ( ($generated@@256 $generated@@259) ($generated@@86 ($generated@@84 $generated@@258 $generated@@259) $generated@@60))
))))
(assert (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@143) ($generated@@141 $generated@@260)) (exists (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (and (and (= (type $generated@@261) $generated@@152) (= (type $generated@@262) $generated@@152)) (= $generated@@260 ($generated@@221 $generated@@261 $generated@@262)))
 :no-pattern (type $generated@@261)
 :no-pattern (type $generated@@262)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
)))
 :pattern ( ($generated@@141 $generated@@260))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@265 $generated@@267)) 17)) (forall (($generated@@268 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@263 $generated@@269)) ($generated@@265 $generated@@269))
 :pattern ( ($generated@@263 $generated@@269))
))))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@270)) 0)
 :pattern ( ($generated@@263 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@152)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@67) (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@246 ($generated@@271 $generated@@273) $generated@@274 $generated@@275) ($generated@@77 $generated@@273 $generated@@274 $generated@@275)))
 :pattern ( ($generated@@246 ($generated@@271 $generated@@273) $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@79 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@82 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@79 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@84 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 18)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@79 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@84 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@79 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@84 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@82 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@79 $generated@@319 $generated@@2)) (= ($generated@@158 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (and (<= 0 ($generated ($generated@@84 $generated@@318 $generated@@320))) (<= ($generated ($generated@@84 $generated@@318 $generated@@320)) ($generated@@276 $generated@@318))))
 :pattern ( ($generated@@84 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@158 $generated@@318))
)))
(assert (forall (($generated@@322 T@T) ($generated@@323 T@U) ) (! (= (type ($generated@@321 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@152) ($generated@@222 $generated@@324 $generated@@135)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@324)) $generated@@324) ($generated@@139 ($generated@@321 $generated@@80 $generated@@324) $generated@@135)))
 :pattern ( ($generated@@222 $generated@@324 $generated@@135))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@152) ($generated@@222 $generated@@325 $generated@@218)) (and (= ($generated@@271 ($generated@@321 $generated@@80 $generated@@325)) $generated@@325) ($generated@@139 ($generated@@321 $generated@@80 $generated@@325) $generated@@218)))
 :pattern ( ($generated@@222 $generated@@325 $generated@@218))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@80) (= ($generated@@139 $generated@@326 $generated@@218)  (and ($generated@@139 $generated@@326 $generated@@135) (not (= $generated@@326 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@326 $generated@@218))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@286 (type $generated@@327))))
(let (($generated@@329 ($generated@@285 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@284 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@283 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@282 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@286 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@79 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@286 (type $generated@@334))))
(let (($generated@@336 ($generated@@285 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@284 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@283 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@304 (type $generated@@338))))
(let (($generated@@340 ($generated@@303 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@302 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@301 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@300 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@304 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@304 (type $generated@@345))))
(let (($generated@@347 ($generated@@303 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@302 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@301 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@350) $generated@@67)) (= ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@349 $generated@@351)))) ($generated@@222 $generated@@351 $generated@@350))
 :pattern ( ($generated@@84 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@157 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@353) $generated@@67)) (= (type $generated@@354) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@352 ($generated@@231 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@152) ($generated@@0 ($generated@@84 $generated@@352 $generated@@355))) ($generated@@246 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@84 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@77 $generated@@352 ($generated@@231 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@236 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@152) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@246 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@236 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@84 ($generated@@277 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@84 ($generated@@277 $generated@@361) $generated@@360)))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@286 (type $generated@@365))))
(let (($generated@@367 ($generated@@285 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@369) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369)))) (= ($generated@@84 ($generated@@363 $generated@@368) ($generated@@150 ($generated@@321 $generated@@143 $generated@@369))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@369))))))
 :pattern ( ($generated@@84 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@304 (type $generated@@373))))
(let (($generated@@375 ($generated@@303 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@377) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377)))) (= ($generated@@84 ($generated@@371 $generated@@376) ($generated@@150 ($generated@@321 $generated@@143 $generated@@377))) ($generated@@151 ($generated@@321 $generated@@143 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@285 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@284 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@84 ($generated@@331 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@84 ($generated@@282 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@378) $generated@@382))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@84 ($generated@@331 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@303 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@302 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@84 ($generated@@342 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@84 ($generated@@300 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@383) $generated@@387))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@84 ($generated@@342 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@67)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))) (and ($generated@@246 ($generated@@84 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@246 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))) (and ($generated@@246 ($generated@@84 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@246 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@79 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@304 (type $generated@@406))))
(let (($generated@@408 ($generated@@303 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@302 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@301 $generated@@408 $generated@@407)) (= ($generated@@300 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@300 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@304 (type $generated@@409))))
(let (($generated@@411 ($generated@@303 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@302 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@301 $generated@@411 $generated@@410)) (= ($generated@@342 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@342 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@304 (type $generated@@412))))
(let (($generated@@414 ($generated@@303 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@302 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@301 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@152))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@286 (type $generated@@415))))
(let (($generated@@417 ($generated@@285 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@284 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@283 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@152) (= (type $generated@@419) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@362 $generated@@415) ($generated@@271 ($generated@@221 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@362 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@304 (type $generated@@420))))
(let (($generated@@422 ($generated@@303 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@302 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@301 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@152) (= (type $generated@@424) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@420) ($generated@@271 ($generated@@221 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@152) ($generated@@222 $generated@@425 $generated@@46)) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@425)) $generated@@425) ($generated@@139 ($generated@@321 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@222 $generated@@426 $generated@@47)) (and (= ($generated@@271 ($generated@@321 $generated@@3 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@321 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@222 $generated@@427 $generated@@44)) (and (= ($generated@@271 ($generated@@321 $generated@@4 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@321 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@152) ($generated@@222 $generated@@429 $generated@@45)) (and (= ($generated@@271 ($generated@@321 $generated@@428 $generated@@429)) $generated@@429) ($generated@@139 ($generated@@321 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@67) (= ($generated@@222 ($generated@@271 $generated@@430) $generated@@431) ($generated@@139 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@222 ($generated@@271 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@82 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@79 $generated@@433 $generated@@2)) (<= 0 ($generated@@276 $generated@@432))))
 :pattern ( ($generated@@276 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@266 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@265 $generated@@435)) (<= 0 ($generated@@264 $generated@@434))))
 :pattern ( ($generated@@264 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@75 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@152) (= (type $generated@@457) $generated@@152)) (= ($generated@@252 ($generated@@221 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@142 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@142 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@142 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@142 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@152) (= (type $generated@@467) $generated@@152)) (= ($generated@@150 ($generated@@221 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@152) (= (type $generated@@469) $generated@@152)) (= ($generated@@151 ($generated@@221 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@221 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@266 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@265 $generated@@152)) (= (type $generated@@477) $generated@@67)) (= (type $generated@@478) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@264 $generated@@476))) ($generated@@246 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@77 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@78 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@78 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@231 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@231 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@75 ($generated@@231 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@231 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@236 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@236 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@236 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@236 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@157 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@157 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@321 $generated@@499 ($generated@@271 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@271 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@501) $generated@@67)) (= (type $generated@@502) $generated@@67)) (= ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))) (and ($generated@@222 ($generated@@84 ($generated@@363 $generated@@500) $generated@@503) $generated@@502) ($generated@@222 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@500) $generated@@503))
 :pattern ( ($generated@@84 ($generated@@282 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@139 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) (= ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))) (and ($generated@@222 ($generated@@84 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@222 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@84 ($generated@@300 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@139 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@221 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@221 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@221 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@221 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@152) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@271 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514)) $generated@@514) ($generated@@139 ($generated@@321 ($generated@@284 $generated@@152 $generated@@152) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@222 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@152) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@271 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517)) $generated@@517) ($generated@@139 ($generated@@321 ($generated@@302 $generated@@152 $generated@@152) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@222 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@152)) ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521))) (and (= ($generated@@271 ($generated@@321 $generated@@143 $generated@@522)) $generated@@522) ($generated@@139 ($generated@@321 $generated@@143 $generated@@522) ($generated@@142 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@522 ($generated@@142 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@84 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@84 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@72)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@142 $generated@@527 $generated@@528)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@143) (= ($generated@@508 ($generated@@271 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@271 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@152) ($generated@@222 $generated@@530 ($generated@@78 0))) (and (= ($generated@@271 ($generated@@321 $generated@@2 $generated@@530)) $generated@@530) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@530) ($generated@@78 0))))
 :pattern ( ($generated@@222 $generated@@530 ($generated@@78 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@152) (= (type $generated@@532) $generated@@67)) ($generated@@222 $generated@@531 ($generated@@231 $generated@@532))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@531)) $generated@@531) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@231 $generated@@532))))
 :pattern ( ($generated@@222 $generated@@531 ($generated@@231 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) ($generated@@222 $generated@@533 ($generated@@236 $generated@@534))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@4) $generated@@533) ($generated@@236 $generated@@534))))
 :pattern ( ($generated@@222 $generated@@533 ($generated@@236 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@152) (= (type $generated@@536) $generated@@67)) ($generated@@222 $generated@@535 ($generated@@157 $generated@@536))) (and (= ($generated@@271 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@535)) $generated@@535) ($generated@@139 ($generated@@321 ($generated@@79 $generated@@152 $generated@@2) $generated@@535) ($generated@@157 $generated@@536))))
 :pattern ( ($generated@@222 $generated@@535 ($generated@@157 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@152) (= (type $generated@@538) $generated@@67)) ($generated@@222 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@271 ($generated@@321 ($generated@@265 $generated@@152) $generated@@537)) $generated@@537) ($generated@@139 ($generated@@321 ($generated@@265 $generated@@152) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@525 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@218) $generated@@64))
(assert (= ($generated@@525 $generated@@218) $generated@@66))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@539 $generated@@542)))) ($generated@@246 $generated@@542 $generated@@540 $generated@@541))
 :pattern ( ($generated@@84 $generated@@539 $generated@@542))
))))
 :pattern ( ($generated@@77 $generated@@539 ($generated@@157 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@80) (= ($generated@@139 $generated@@546 $generated@@135)  (or (= $generated@@546 $generated@@136) ($generated@@543 ($generated@@544 $generated@@546)))))
 :pattern ( ($generated@@139 $generated@@546 $generated@@135))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@143) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@549) (and ($generated@@141 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@67) ($generated@@77 $generated@@547 ($generated@@142 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@77 $generated@@547 ($generated@@142 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@246 ($generated@@150 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@246 ($generated@@150 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@143) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@245 $generated@@553) (and ($generated@@141 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@67) ($generated@@77 $generated@@551 ($generated@@142 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@77 $generated@@551 ($generated@@142 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@246 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@246 ($generated@@151 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@152) (= (type $generated@@556) $generated@@152)) (= ($generated@@221 ($generated@@241 $generated@@555) ($generated@@241 $generated@@556)) ($generated@@241 ($generated@@221 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@221 ($generated@@241 $generated@@555) ($generated@@241 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= ($generated@@271 ($generated@@241 $generated@@557)) ($generated@@241 ($generated@@271 $generated@@557)))
 :pattern ( ($generated@@271 ($generated@@241 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@266 (type $generated@@558))))
 (=> (and (= (type $generated@@558) ($generated@@265 $generated@@559)) (= ($generated@@264 $generated@@558) 0)) (= $generated@@558 ($generated@@263 $generated@@559))))
 :pattern ( ($generated@@264 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@561)))
 (=> (and (and (= (type $generated@@560) ($generated@@79 $generated@@563 $generated@@2)) (= (type $generated@@562) $generated@@2)) (<= 0 ($generated $generated@@562))) (= ($generated@@276 ($generated@@85 $generated@@560 $generated@@561 $generated@@562)) (+ (- ($generated@@276 $generated@@560) ($generated ($generated@@84 $generated@@560 $generated@@561))) ($generated $generated@@562)))))
 :pattern ( ($generated@@276 ($generated@@85 $generated@@560 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@565) $generated@@2)) ($generated@@77 $generated@@565 $generated@@46 $generated@@564))
 :pattern ( ($generated@@77 $generated@@565 $generated@@46 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@567) $generated@@3)) ($generated@@77 $generated@@567 $generated@@47 $generated@@566))
 :pattern ( ($generated@@77 $generated@@567 $generated@@47 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@569) $generated@@4)) ($generated@@77 $generated@@569 $generated@@44 $generated@@568))
 :pattern ( ($generated@@77 $generated@@569 $generated@@44 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@571) $generated@@428)) ($generated@@77 $generated@@571 $generated@@45 $generated@@570))
 :pattern ( ($generated@@77 $generated@@571 $generated@@45 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@573) $generated@@152)) ($generated@@77 $generated@@573 $generated@@48 $generated@@572))
 :pattern ( ($generated@@77 $generated@@573 $generated@@48 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@265 $generated@@152)) (= (type $generated@@575) $generated@@67)) (= ($generated@@139 $generated@@574 ($generated@@470 $generated@@575)) (forall (($generated@@576 Int) ) (!  (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@264 $generated@@574))) ($generated@@222 ($generated@@471 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@471 $generated@@574 $generated@@576))
))))
 :pattern ( ($generated@@139 $generated@@574 ($generated@@470 $generated@@575)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 Int) ) (!  (=> (= (type $generated@@578) ($generated@@265 $generated@@152)) (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@264 $generated@@578))) (< ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@578 $generated@@579))) ($generated@@577 $generated@@578))))
 :pattern ( ($generated@@509 ($generated@@321 $generated@@143 ($generated@@471 $generated@@578 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@284 $generated@@152 $generated@@152)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@139 $generated@@580 ($generated@@388 $generated@@581 $generated@@582))) (and (and ($generated@@139 ($generated@@282 $generated@@580) ($generated@@231 $generated@@581)) ($generated@@139 ($generated@@331 $generated@@580) ($generated@@231 $generated@@582))) ($generated@@139 ($generated@@362 $generated@@580) ($generated@@231 ($generated@@142 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@139 $generated@@580 ($generated@@388 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@302 $generated@@152 $generated@@152)) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) $generated@@67)) ($generated@@139 $generated@@583 ($generated@@396 $generated@@584 $generated@@585))) (and (and ($generated@@139 ($generated@@300 $generated@@583) ($generated@@236 $generated@@584)) ($generated@@139 ($generated@@342 $generated@@583) ($generated@@236 $generated@@585))) ($generated@@139 ($generated@@370 $generated@@583) ($generated@@236 ($generated@@142 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@139 $generated@@583 ($generated@@396 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@2) ($generated@@139 $generated@@586 $generated@@46))
 :pattern ( ($generated@@139 $generated@@586 $generated@@46))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@3) ($generated@@139 $generated@@587 $generated@@47))
 :pattern ( ($generated@@139 $generated@@587 $generated@@47))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@4) ($generated@@139 $generated@@588 $generated@@44))
 :pattern ( ($generated@@139 $generated@@588 $generated@@44))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@428) ($generated@@139 $generated@@589 $generated@@45))
 :pattern ( ($generated@@139 $generated@@589 $generated@@45))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@152) ($generated@@139 $generated@@590 $generated@@48))
 :pattern ( ($generated@@139 $generated@@590 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () Bool)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 (T@U) Bool)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@591) $generated@@80) (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@593) ($generated@@164 $generated@@80 $generated@@4))) (= (type $generated@@595) $generated@@80)) (= (type $generated@@597) $generated@@80)) (= (type $generated@@598) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@599  (=> (= (ControlFlow 0 2) (- 0 1)) (or (and ($generated@@139 $generated@@136 $generated@@218) (= ($generated@@256 $generated@@136) ($generated@@256 $generated@@136))) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@80) (and ($generated@@139 $generated@@600 $generated@@218) (= ($generated@@256 $generated@@600) ($generated@@256 $generated@@600))))
 :no-pattern (type $generated@@600)
 :no-pattern ($generated $generated@@600)
 :no-pattern ($generated@@0 $generated@@600)
))))))
(let (($generated@@601  (=> (and (not (and ($generated@@139 $generated@@591 $generated@@218) ($generated@@77 $generated@@591 $generated@@218 $generated@@592))) (= (ControlFlow 0 6) 2)) $generated@@599)))
(let (($generated@@602  (=> (and ($generated@@139 $generated@@591 $generated@@218) ($generated@@77 $generated@@591 $generated@@218 $generated@@592)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@591 $generated@@136))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= $generated@@591 $generated@@136))) (=> (= (ControlFlow 0 3) 2) $generated@@599))))))
(let (($generated@@603  (=> (and (= $generated@@593 ($generated@@163 $generated@@136 $generated@@592 $generated@@60 false)) (=> $generated@@594 (and ($generated@@139 $generated@@595 $generated@@218) ($generated@@77 $generated@@595 $generated@@218 $generated@@592)))) (and (=> (= (ControlFlow 0 7) 3) $generated@@602) (=> (= (ControlFlow 0 7) 6) $generated@@601)))))
(let (($generated@@604  (=> (and (and (and ($generated@@245 $generated@@592) ($generated@@596 $generated@@592)) (and ($generated@@139 $generated@@597 $generated@@218) ($generated@@77 $generated@@597 $generated@@218 $generated@@592))) (and (and (=> $generated@@594 (and ($generated@@139 $generated@@598 $generated@@218) ($generated@@77 $generated@@598 $generated@@218 $generated@@592))) true) (and (= 1 $generated@@255) (= (ControlFlow 0 8) 7)))) $generated@@603)))
$generated@@604))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@T T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U T@U) Bool)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U Int) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@663 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@150) 16) (= (type $generated@@144) ($generated@@73 $generated@@150))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@151)) $generated@@71)
 :pattern ( ($generated@@145 $generated@@151))
))) (= (type $generated@@147) $generated@@89)) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@148 $generated@@152)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@71) (= (type $generated@@154) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@155) $generated@@89)) (and ($generated@@146 $generated@@154) (and (not (= $generated@@155 $generated@@147)) (= ($generated@@148 $generated@@155) ($generated@@145 $generated@@153))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) $generated@@153))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) ($generated@@145 $generated@@153))
)))
(assert (= (type $generated@@156) ($generated@@73 $generated@@150)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@71) (= (type $generated@@158) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@159) $generated@@89)) (and ($generated@@146 $generated@@158) (and (not (= $generated@@159 $generated@@147)) (= ($generated@@148 $generated@@159) ($generated@@145 $generated@@157))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) $generated@@157))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) ($generated@@145 $generated@@157))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@162) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@160 $generated@@161 $generated@@162)) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@161 $generated@@163) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60))
)))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@71) (= (type $generated@@165) $generated@@89)) (= (type $generated@@166) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166)  (or (= $generated@@165 $generated@@147) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@87 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@87 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@71)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@71) (= (type $generated@@172) $generated@@89)) (= (type $generated@@173) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@86 $generated@@172 ($generated@@145 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert  (and (= ($generated@@1 $generated@@176) 17) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@71)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@71) (= (type $generated@@180) $generated@@71)) (= (type $generated@@181) $generated@@176)) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@150)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@150)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@176) (= (type $generated@@188) $generated@@176)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@71)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@193) $generated@@71)) ($generated@@167 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@167 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 18)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@89 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@74 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@89) (= (type $generated@@244) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@245) ($generated@@73 $generated@@4))) (= (type $generated@@247) $generated@@89)) (= (type $generated@@248) ($generated@@73 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (= ($generated@@81 $generated@@156) 0))
(assert (forall (($generated@@251 T@T) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@73 $generated@@251))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@70) $generated@@156))
(assert ($generated@@254 $generated@@156))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@256 $generated@@257)) $generated@@176)
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@71) (= (type $generated@@259) $generated@@71)) (= (type $generated@@260) $generated@@150)) (= (type $generated@@261) $generated@@150)) (= ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259))  (and ($generated@@149 $generated@@260 $generated@@258) ($generated@@149 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259)))
)))
(assert (= ($generated@@81 $generated@@144) 0))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@69) $generated@@144))
(assert  (not ($generated@@254 $generated@@144)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@176) (= (type $generated@@263) $generated@@176)) (= ($generated@@182 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@182 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@71)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@267) $generated@@71)) (= ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@150) ($generated@@0 ($generated@@93 $generated@@266 $generated@@268))) ($generated@@149 $generated@@268 $generated@@267))
 :pattern ( ($generated@@93 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@71)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@272) $generated@@71)) (= ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@150) ($generated@@0 ($generated@@93 $generated@@271 $generated@@273))) ($generated@@149 $generated@@273 $generated@@272))
 :pattern ( ($generated@@93 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
(= (type ($generated@@274 $generated@@275)) $generated@@276))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@274 $generated@@277) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@71) (= (type $generated@@280) $generated@@71)) (= (type $generated@@281) $generated@@150)) (= (type $generated@@282) $generated@@150)) (= (type $generated@@283) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@146 $generated@@283)) (= ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287)) $generated@@150)
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@71) (= (type $generated@@289) $generated@@89)) ($generated@@149 ($generated@@285 $generated@@288 $generated@@289) $generated@@288))
 :pattern ( ($generated@@285 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@291 $generated@@292)) $generated@@150)
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@71) (= (type $generated@@294) $generated@@89)) ($generated@@149 ($generated@@290 $generated@@293 $generated@@294) $generated@@293))
 :pattern ( ($generated@@290 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@76)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@176) (= ($generated@@174 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@62)))
 :pattern ( ($generated@@174 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@176) ($generated@@174 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@150) (= (type $generated@@300) $generated@@150)) (= $generated@@298 ($generated@@255 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@174 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 19)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert ($generated@@254 $generated@@60))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@309) $generated@@71) (= (type $generated@@310) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@311) $generated@@89)) (and (and ($generated@@146 $generated@@310) (and (not (= $generated@@311 $generated@@147)) (= ($generated@@148 $generated@@311) ($generated@@145 $generated@@309)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) $generated@@309 $generated@@310))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) ($generated@@145 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@312) $generated@@71) (= (type $generated@@313) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@314) $generated@@89)) (and (and ($generated@@146 $generated@@313) (and (not (= $generated@@314 $generated@@147)) (= ($generated@@148 $generated@@314) ($generated@@145 $generated@@312)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) $generated@@312 $generated@@313))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) ($generated@@145 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@71) (= (type $generated@@316) $generated@@89)) (= ($generated@@167 $generated@@316 ($generated@@169 $generated@@315))  (and ($generated@@167 $generated@@316 ($generated@@145 $generated@@315)) (not (= $generated@@316 $generated@@147)))))
 :pattern ( ($generated@@167 $generated@@316 ($generated@@169 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@150)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@71) (= (type $generated@@321) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@86 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@322) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@323) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@324) $generated@@150)) (= (type $generated@@325) $generated@@71)) ($generated@@160 $generated@@322 $generated@@323)) ($generated@@278 $generated@@324 $generated@@325 $generated@@322)) ($generated@@278 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@160 $generated@@322 $generated@@323) ($generated@@278 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@326) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@327) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@329) $generated@@71)) ($generated@@160 $generated@@326 $generated@@327)) ($generated@@86 $generated@@328 $generated@@329 $generated@@326)) ($generated@@86 $generated@@328 $generated@@329 $generated@@327))
 :pattern ( ($generated@@160 $generated@@326 $generated@@327) ($generated@@86 $generated@@328 $generated@@329 $generated@@326))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@88 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@91 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@88 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@93 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@78)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@71) (and (= ($generated@@82 ($generated@@145 $generated@@338)) $generated@@65) (= ($generated@@336 ($generated@@145 $generated@@338)) $generated@@68)))
 :pattern ( ($generated@@145 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@71) (and (= ($generated@@82 ($generated@@169 $generated@@339)) $generated@@66) (= ($generated@@336 ($generated@@169 $generated@@339)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 20)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@88 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 21)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@88 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@378) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@376 $generated@@377 $generated@@378)) (and ($generated@@160 $generated@@377 $generated@@378) (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@74 (type $generated@@380))))
 (=> (and (and (= (type $generated@@379) $generated@@89) (= (type $generated@@380) ($generated@@73 $generated@@381))) (not ($generated@@254 $generated@@380))) (= ($generated@@95 ($generated@@93 $generated@@377 $generated@@379) $generated@@380) ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))
))))
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@91 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@88 $generated@@383 $generated@@2)) (= ($generated@@190 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (and (<= 0 ($generated ($generated@@93 $generated@@382 $generated@@384))) (<= ($generated ($generated@@93 $generated@@382 $generated@@384)) ($generated@@330 $generated@@382))))
 :pattern ( ($generated@@93 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@190 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@71) (= (type $generated@@386) $generated@@89)) (= ($generated@@167 $generated@@386 ($generated@@145 $generated@@385))  (or (= $generated@@386 $generated@@147) (= ($generated@@148 $generated@@386) ($generated@@145 $generated@@385)))))
 :pattern ( ($generated@@167 $generated@@386 ($generated@@145 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@344 (type $generated@@387))))
(let (($generated@@389 ($generated@@343 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@342 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@341 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@340 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@344 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@88 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@344 (type $generated@@394))))
(let (($generated@@396 ($generated@@343 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@342 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@341 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@93 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@362 (type $generated@@398))))
(let (($generated@@400 ($generated@@361 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@360 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@359 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@358 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@362 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@88 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@362 (type $generated@@405))))
(let (($generated@@407 ($generated@@361 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@360 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@359 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@93 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@410) $generated@@71)) (= ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@409 $generated@@411)))) ($generated@@149 $generated@@411 $generated@@410))
 :pattern ( ($generated@@93 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@413) $generated@@71)) (= (type $generated@@414) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@150) ($generated@@0 ($generated@@93 $generated@@412 $generated@@415))) ($generated@@278 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@93 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@417) $generated@@71)) (= (type $generated@@418) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@0 ($generated@@93 $generated@@416 $generated@@419))) ($generated@@278 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@93 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@93 ($generated@@331 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@93 ($generated@@331 $generated@@421) $generated@@420)))
)))
(assert  (and (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@422 $generated@@425)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@422 $generated@@425))
)) (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@423 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@423 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@344 (type $generated@@428))))
(let (($generated@@430 ($generated@@343 (type $generated@@428))))
(= (type ($generated@@424 $generated@@428)) ($generated@@88 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@424 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@432) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432)))) (= ($generated@@93 ($generated@@424 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@432))))))
 :pattern ( ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@362 (type $generated@@436))))
(let (($generated@@438 ($generated@@361 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@88 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@440) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440)))) (= ($generated@@93 ($generated@@434 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@440))))))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@343 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@342 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@93 ($generated@@391 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@441) $generated@@445))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@361 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@360 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@93 ($generated@@402 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@446) $generated@@450))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@93 ($generated@@402 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@71)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@455) $generated@@71)) (= (type $generated@@456) $generated@@71)) (= (type $generated@@457) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))) (and ($generated@@278 ($generated@@93 ($generated@@424 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@278 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@454) $generated@@458))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@71)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@463) $generated@@71)) (= (type $generated@@464) $generated@@71)) (= (type $generated@@465) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))) (and ($generated@@278 ($generated@@93 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@278 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@467) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@468) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@469) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@467 $generated@@469))) (and ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))) ($generated@@160 $generated@@467 $generated@@469))
 :pattern ( ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@88 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@362 (type $generated@@472))))
(let (($generated@@474 ($generated@@361 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@360 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@359 $generated@@474 $generated@@473)) (= ($generated@@358 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@358 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@362 (type $generated@@475))))
(let (($generated@@477 ($generated@@361 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@360 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@359 $generated@@477 $generated@@476)) (= ($generated@@402 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@402 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@362 (type $generated@@478))))
(let (($generated@@480 ($generated@@361 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@360 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@359 $generated@@480 $generated@@479)) (= ($generated@@433 $generated@@478) ($generated@@470 $generated@@150))))))
 :pattern ( ($generated@@433 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@344 (type $generated@@481))))
(let (($generated@@483 ($generated@@343 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@342 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@341 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@150) (= (type $generated@@485) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@422 $generated@@481) ($generated@@317 ($generated@@255 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@422 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@362 (type $generated@@486))))
(let (($generated@@488 ($generated@@361 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@360 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@359 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@150) (= (type $generated@@490) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@433 $generated@@486) ($generated@@317 ($generated@@255 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@433 $generated@@486))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@77)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@T) ) (!  (=> (and (= (type $generated@@493) $generated@@77) (= (type $generated@@494) $generated@@75)) (and (= ($generated@@491 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@493) (= ($generated@@84 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@494)))
 :pattern ( ($generated@@250 $generated@@495 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@150) ($generated@@149 $generated@@496 $generated@@46)) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@496)) $generated@@496) ($generated@@167 ($generated@@423 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@149 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@150) ($generated@@149 $generated@@497 $generated@@47)) (and (= ($generated@@317 ($generated@@423 $generated@@3 $generated@@497)) $generated@@497) ($generated@@167 ($generated@@423 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@149 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@150) ($generated@@149 $generated@@498 $generated@@44)) (and (= ($generated@@317 ($generated@@423 $generated@@4 $generated@@498)) $generated@@498) ($generated@@167 ($generated@@423 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@149 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 22))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) ($generated@@149 $generated@@500 $generated@@45)) (and (= ($generated@@317 ($generated@@423 $generated@@499 $generated@@500)) $generated@@500) ($generated@@167 ($generated@@423 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@149 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@71) (= ($generated@@149 ($generated@@317 $generated@@501) $generated@@502) ($generated@@167 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@149 ($generated@@317 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@91 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@88 $generated@@504 $generated@@2)) (<= 0 ($generated@@330 $generated@@503))))
 :pattern ( ($generated@@330 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@304 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@303 $generated@@506)) (<= 0 ($generated@@302 $generated@@505))))
 :pattern ( ($generated@@302 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@71)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@71) (= (type $generated@@510) $generated@@71)) (= ($generated@@507 ($generated@@451 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@451 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@71)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@71) (= (type $generated@@514) $generated@@71)) (= ($generated@@511 ($generated@@451 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@451 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@71) (= (type $generated@@516) $generated@@71)) (= ($generated@@82 ($generated@@451 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@71)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@71) (= (type $generated@@520) $generated@@71)) (= ($generated@@517 ($generated@@459 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@459 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@71)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@71) (= (type $generated@@524) $generated@@71)) (= ($generated@@521 ($generated@@459 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@71) (= (type $generated@@526) $generated@@71)) (= ($generated@@82 ($generated@@459 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@150)) (= ($generated@@295 ($generated@@255 $generated@@527 $generated@@528)) $generated@@62))
 :pattern ( ($generated@@255 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@71)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@71) (= (type $generated@@532) $generated@@71)) (= ($generated@@529 ($generated@@175 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@175 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@71) (= (type $generated@@536) $generated@@71)) (= ($generated@@533 ($generated@@175 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@175 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@150)) (= ($generated@@183 ($generated@@255 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@255 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@150)) (= ($generated@@184 ($generated@@255 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@255 $generated@@539 $generated@@540))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@543))
)) (forall (($generated@@544 T@U) ($generated@@545 Int) ) (! (let (($generated@@546 ($generated@@304 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544 $generated@@545)) $generated@@546))
 :pattern ( ($generated@@542 $generated@@544 $generated@@545))
))))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@303 $generated@@150)) (= (type $generated@@548) $generated@@71)) (= (type $generated@@549) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549) (forall (($generated@@550 Int) ) (!  (=> (and (<= 0 $generated@@550) (< $generated@@550 ($generated@@302 $generated@@547))) ($generated@@278 ($generated@@542 $generated@@547 $generated@@550) $generated@@548 $generated@@549))
 :pattern ( ($generated@@542 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@551 ($generated@@87 $generated@@552)) $generated@@552)
 :pattern ( ($generated@@87 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@71) (= ($generated@@553 ($generated@@264 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@264 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@71) (= ($generated@@82 ($generated@@264 $generated@@556)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@71)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@71) (= ($generated@@557 ($generated@@269 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@269 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@71) (= ($generated@@82 ($generated@@269 $generated@@560)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@71)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@71) (= ($generated@@561 ($generated@@189 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@189 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@71) (= ($generated@@82 ($generated@@189 $generated@@564)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@71)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@71) (= ($generated@@565 ($generated@@541 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@541 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@71) (= ($generated@@82 ($generated@@541 $generated@@568)) $generated@@57))
 :pattern ( ($generated@@541 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@71)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@71) (= ($generated@@569 ($generated@@145 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@145 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@71)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@71) (= ($generated@@572 ($generated@@169 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@169 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@423 $generated@@576 ($generated@@317 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@317 $generated@@575))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@71) (= (type $generated@@578) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@579) $generated@@89)) (and ($generated@@146 $generated@@578) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60)))) ($generated@@278 ($generated@@285 $generated@@577 $generated@@579) $generated@@577 $generated@@578))
 :pattern ( ($generated@@285 $generated@@577 $generated@@579) ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60))
))))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@71) (= (type $generated@@581) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@582) $generated@@89)) (and ($generated@@146 $generated@@581) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60)))) ($generated@@278 ($generated@@290 $generated@@580 $generated@@582) $generated@@580 $generated@@581))
 :pattern ( ($generated@@290 $generated@@580 $generated@@582) ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60))
))))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@584) $generated@@71)) (= (type $generated@@585) $generated@@71)) (= ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))) (and ($generated@@149 ($generated@@93 ($generated@@424 $generated@@583) $generated@@586) $generated@@585) ($generated@@149 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@583) $generated@@586))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@71)) (= (type $generated@@589) $generated@@71)) (= ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))) (and ($generated@@149 ($generated@@93 ($generated@@434 $generated@@587) $generated@@590) $generated@@589) ($generated@@149 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@587) $generated@@590))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@150)) (< ($generated@@591 $generated@@593) ($generated@@592 ($generated@@255 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@255 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@150) (= (type $generated@@596) $generated@@150)) (< ($generated@@591 $generated@@596) ($generated@@592 ($generated@@255 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@255 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@150) (= (type $generated@@598) $generated@@71)) (= (type $generated@@599) $generated@@71)) ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599))) (and (= ($generated@@317 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597)) $generated@@597) ($generated@@167 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597) ($generated@@451 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@150) (= (type $generated@@601) $generated@@71)) (= (type $generated@@602) $generated@@71)) ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602))) (and (= ($generated@@317 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600)) $generated@@600) ($generated@@167 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600) ($generated@@459 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@71) (= (type $generated@@604) $generated@@71)) (= (type $generated@@605) $generated@@150)) ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604))) (and (= ($generated@@317 ($generated@@423 $generated@@176 $generated@@605)) $generated@@605) ($generated@@167 ($generated@@423 $generated@@176 $generated@@605) ($generated@@175 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@93 ($generated@@470 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@93 ($generated@@470 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@71) (= (type $generated@@609) $generated@@71)) (and (= ($generated@@82 ($generated@@175 $generated@@608 $generated@@609)) $generated@@63) (= ($generated@@336 ($generated@@175 $generated@@608 $generated@@609)) $generated@@67)))
 :pattern ( ($generated@@175 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@176) (= ($generated@@591 ($generated@@317 $generated@@610)) ($generated@@592 $generated@@610)))
 :pattern ( ($generated@@591 ($generated@@317 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@150) ($generated@@149 $generated@@611 ($generated@@87 0))) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@611)) $generated@@611) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@611) ($generated@@87 0))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@87 0)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@150) (= (type $generated@@613) $generated@@71)) ($generated@@149 $generated@@612 ($generated@@264 $generated@@613))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612)) $generated@@612) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612) ($generated@@264 $generated@@613))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@264 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@150) (= (type $generated@@615) $generated@@71)) ($generated@@149 $generated@@614 ($generated@@269 $generated@@615))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614)) $generated@@614) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614) ($generated@@269 $generated@@615))))
 :pattern ( ($generated@@149 $generated@@614 ($generated@@269 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@150) (= (type $generated@@617) $generated@@71)) ($generated@@149 $generated@@616 ($generated@@189 $generated@@617))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616)) $generated@@616) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616) ($generated@@189 $generated@@617))))
 :pattern ( ($generated@@149 $generated@@616 ($generated@@189 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@150) (= (type $generated@@619) $generated@@71)) ($generated@@149 $generated@@618 ($generated@@541 $generated@@619))) (and (= ($generated@@317 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618)) $generated@@618) ($generated@@167 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618) ($generated@@541 $generated@@619))))
 :pattern ( ($generated@@149 $generated@@618 ($generated@@541 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@71) (= (type $generated@@621) $generated@@150)) ($generated@@149 $generated@@621 ($generated@@145 $generated@@620))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@621)) $generated@@621) ($generated@@167 ($generated@@423 $generated@@89 $generated@@621) ($generated@@145 $generated@@620))))
 :pattern ( ($generated@@149 $generated@@621 ($generated@@145 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@71) (= (type $generated@@623) $generated@@150)) ($generated@@149 $generated@@623 ($generated@@169 $generated@@622))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@623)) $generated@@623) ($generated@@167 ($generated@@423 $generated@@89 $generated@@623) ($generated@@169 $generated@@622))))
 :pattern ( ($generated@@149 $generated@@623 ($generated@@169 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (=> (and (and (and (= (type $generated@@624) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@625) $generated@@89)) (= (type $generated@@626) ($generated@@73 $generated@@628))) ($generated@@146 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))) ($generated@@160 $generated@@624 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@630) $generated@@71)) (= (type $generated@@631) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@629 $generated@@632)))) ($generated@@278 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@93 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@176) (= (type $generated@@634) $generated@@71)) (= (type $generated@@635) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@635) (and ($generated@@174 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@71) ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@176) (= (type $generated@@638) $generated@@71)) (= (type $generated@@639) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@639) (and ($generated@@174 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@71) ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@150) (= (type $generated@@642) $generated@@150)) (= ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)) ($generated@@274 ($generated@@255 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@317 ($generated@@274 $generated@@643)) ($generated@@274 ($generated@@317 $generated@@643)))
 :pattern ( ($generated@@317 ($generated@@274 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@304 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@303 $generated@@645)) (= ($generated@@302 $generated@@644) 0)) (= $generated@@644 ($generated@@301 $generated@@645))))
 :pattern ( ($generated@@302 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@88 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@330 $generated@@646) ($generated ($generated@@93 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@651) $generated@@2)) ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@653) $generated@@3)) ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@655) $generated@@4)) ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@657) $generated@@499)) ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@659) $generated@@150)) ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@303 $generated@@150)) (= (type $generated@@661) $generated@@71)) (= ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)) (forall (($generated@@662 Int) ) (!  (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@302 $generated@@660))) ($generated@@149 ($generated@@542 $generated@@660 $generated@@662) $generated@@661))
 :pattern ( ($generated@@542 $generated@@660 $generated@@662))
))))
 :pattern ( ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 Int) ) (!  (=> (= (type $generated@@664) ($generated@@303 $generated@@150)) (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@302 $generated@@664))) (< ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))) ($generated@@663 $generated@@664))))
 :pattern ( ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@667) $generated@@71)) (= (type $generated@@668) $generated@@71)) ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668))) (and (and ($generated@@167 ($generated@@340 $generated@@666) ($generated@@264 $generated@@667)) ($generated@@167 ($generated@@391 $generated@@666) ($generated@@264 $generated@@668))) ($generated@@167 ($generated@@422 $generated@@666) ($generated@@264 ($generated@@175 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@670) $generated@@71)) (= (type $generated@@671) $generated@@71)) ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671))) (and (and ($generated@@167 ($generated@@358 $generated@@669) ($generated@@269 $generated@@670)) ($generated@@167 ($generated@@402 $generated@@669) ($generated@@269 $generated@@671))) ($generated@@167 ($generated@@433 $generated@@669) ($generated@@269 ($generated@@175 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@2) ($generated@@167 $generated@@672 $generated@@46))
 :pattern ( ($generated@@167 $generated@@672 $generated@@46))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@3) ($generated@@167 $generated@@673 $generated@@47))
 :pattern ( ($generated@@167 $generated@@673 $generated@@47))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@4) ($generated@@167 $generated@@674 $generated@@44))
 :pattern ( ($generated@@167 $generated@@674 $generated@@44))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@499) ($generated@@167 $generated@@675 $generated@@45))
 :pattern ( ($generated@@167 $generated@@675 $generated@@45))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@150) ($generated@@167 $generated@@676 $generated@@48))
 :pattern ( ($generated@@167 $generated@@676 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Bool)
(declare-fun $generated@@680 (T@U) Bool)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(assert  (and (and (and (and (= (type $generated@@677) ($generated@@196 $generated@@89 $generated@@4)) (= (type $generated@@678) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@681) $generated@@150)) (= (type $generated@@682) $generated@@71)) (= (type $generated@@683) $generated@@89)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@684  (=> (= $generated@@677 ($generated@@195 $generated@@147 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@679) (=> $generated@@679 (=> (= (ControlFlow 0 2) (- 0 1)) true))))))
(let (($generated@@685  (=> (and (and (and ($generated@@146 $generated@@678) ($generated@@680 $generated@@678)) (and ($generated@@149 $generated@@681 $generated@@682) ($generated@@278 $generated@@681 $generated@@682 $generated@@678))) (and (and (not (= $generated@@683 $generated@@147)) ($generated@@167 $generated@@683 ($generated@@169 $generated@@682))) (and (= 1 $generated@@284) (= (ControlFlow 0 4) 2)))) $generated@@684)))
$generated@@685)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U T@U T@U) Bool)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@157) 11) (= ($generated@@1 $generated@@172) 12)) (= (type $generated@@159) $generated@@172)) (= (type $generated@@160) $generated@@157)) (= (type $generated@@162) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@163) ($generated@@57 $generated@@47 $generated@@4))) (= (type $generated@@164) $generated@@47)) (= (type $generated@@165) ($generated@@50 $generated@@4))) (= (type $generated@@167) $generated@@157)) (= (type $generated@@170) $generated@@157)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@173  (=> (= (ControlFlow 0 2) (- 0 1)) (exists (($generated@@174 T@U) ) (!  (and (= (type $generated@@174) $generated@@157) (and ($generated@@158 $generated@@174 $generated@@159) (= $generated@@174 $generated@@174)))
 :no-pattern (type $generated@@174)
 :no-pattern ($generated $generated@@174)
 :no-pattern ($generated@@0 $generated@@174)
)))))
(let (($generated@@175  (=> (and (not (and ($generated@@158 $generated@@160 $generated@@159) ($generated@@161 $generated@@160 $generated@@159 $generated@@162))) (= (ControlFlow 0 4) 2)) $generated@@173)))
(let (($generated@@176  (=> (and (and ($generated@@158 $generated@@160 $generated@@159) ($generated@@161 $generated@@160 $generated@@159 $generated@@162)) (= (ControlFlow 0 3) 2)) $generated@@173)))
(let (($generated@@177  (=> (and (= $generated@@163 ($generated@@45 $generated@@164 $generated@@162 $generated@@165 false)) (=> $generated@@166 (and ($generated@@158 $generated@@167 $generated@@159) ($generated@@161 $generated@@167 $generated@@159 $generated@@162)))) (and (=> (= (ControlFlow 0 5) 3) $generated@@176) (=> (= (ControlFlow 0 5) 4) $generated@@175)))))
(let (($generated@@178  (=> (and ($generated@@168 $generated@@162) ($generated@@169 $generated@@162)) (=> (and (and (=> $generated@@166 (and ($generated@@158 $generated@@170 $generated@@159) ($generated@@161 $generated@@170 $generated@@159 $generated@@162))) true) (and (= 0 $generated@@171) (= (ControlFlow 0 6) 5))) $generated@@177))))
$generated@@178))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@T T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U T@U) Bool)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U Int) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@663 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@150) 16) (= (type $generated@@144) ($generated@@73 $generated@@150))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@151)) $generated@@71)
 :pattern ( ($generated@@145 $generated@@151))
))) (= (type $generated@@147) $generated@@89)) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@148 $generated@@152)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@71) (= (type $generated@@154) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@155) $generated@@89)) (and ($generated@@146 $generated@@154) (and (not (= $generated@@155 $generated@@147)) (= ($generated@@148 $generated@@155) ($generated@@145 $generated@@153))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) $generated@@153))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) ($generated@@145 $generated@@153))
)))
(assert (= (type $generated@@156) ($generated@@73 $generated@@150)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@71) (= (type $generated@@158) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@159) $generated@@89)) (and ($generated@@146 $generated@@158) (and (not (= $generated@@159 $generated@@147)) (= ($generated@@148 $generated@@159) ($generated@@145 $generated@@157))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) $generated@@157))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) ($generated@@145 $generated@@157))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@162) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@160 $generated@@161 $generated@@162)) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@161 $generated@@163) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60))
)))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@71) (= (type $generated@@165) $generated@@89)) (= (type $generated@@166) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166)  (or (= $generated@@165 $generated@@147) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@87 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@87 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@71)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@71) (= (type $generated@@172) $generated@@89)) (= (type $generated@@173) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@86 $generated@@172 ($generated@@145 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert  (and (= ($generated@@1 $generated@@176) 17) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@71)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@71) (= (type $generated@@180) $generated@@71)) (= (type $generated@@181) $generated@@176)) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@150)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@150)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@176) (= (type $generated@@188) $generated@@176)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@71)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@193) $generated@@71)) ($generated@@167 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@167 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 18)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@89 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@74 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@89) (= (type $generated@@244) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@245) ($generated@@73 $generated@@4))) (= (type $generated@@247) $generated@@89)) (= (type $generated@@248) ($generated@@73 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (= ($generated@@81 $generated@@156) 0))
(assert (forall (($generated@@251 T@T) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@73 $generated@@251))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@70) $generated@@156))
(assert ($generated@@254 $generated@@156))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@256 $generated@@257)) $generated@@176)
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@71) (= (type $generated@@259) $generated@@71)) (= (type $generated@@260) $generated@@150)) (= (type $generated@@261) $generated@@150)) (= ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259))  (and ($generated@@149 $generated@@260 $generated@@258) ($generated@@149 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259)))
)))
(assert (= ($generated@@81 $generated@@144) 0))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@69) $generated@@144))
(assert  (not ($generated@@254 $generated@@144)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@176) (= (type $generated@@263) $generated@@176)) (= ($generated@@182 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@182 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@71)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@267) $generated@@71)) (= ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@150) ($generated@@0 ($generated@@93 $generated@@266 $generated@@268))) ($generated@@149 $generated@@268 $generated@@267))
 :pattern ( ($generated@@93 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@71)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@272) $generated@@71)) (= ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@150) ($generated@@0 ($generated@@93 $generated@@271 $generated@@273))) ($generated@@149 $generated@@273 $generated@@272))
 :pattern ( ($generated@@93 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
(= (type ($generated@@274 $generated@@275)) $generated@@276))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@274 $generated@@277) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@71) (= (type $generated@@280) $generated@@71)) (= (type $generated@@281) $generated@@150)) (= (type $generated@@282) $generated@@150)) (= (type $generated@@283) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@146 $generated@@283)) (= ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287)) $generated@@150)
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@71) (= (type $generated@@289) $generated@@89)) ($generated@@149 ($generated@@285 $generated@@288 $generated@@289) $generated@@288))
 :pattern ( ($generated@@285 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@291 $generated@@292)) $generated@@150)
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@71) (= (type $generated@@294) $generated@@89)) ($generated@@149 ($generated@@290 $generated@@293 $generated@@294) $generated@@293))
 :pattern ( ($generated@@290 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@76)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@176) (= ($generated@@174 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@62)))
 :pattern ( ($generated@@174 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@176) ($generated@@174 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@150) (= (type $generated@@300) $generated@@150)) (= $generated@@298 ($generated@@255 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@174 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 19)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert ($generated@@254 $generated@@60))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@309) $generated@@71) (= (type $generated@@310) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@311) $generated@@89)) (and (and ($generated@@146 $generated@@310) (and (not (= $generated@@311 $generated@@147)) (= ($generated@@148 $generated@@311) ($generated@@145 $generated@@309)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) $generated@@309 $generated@@310))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) ($generated@@145 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@312) $generated@@71) (= (type $generated@@313) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@314) $generated@@89)) (and (and ($generated@@146 $generated@@313) (and (not (= $generated@@314 $generated@@147)) (= ($generated@@148 $generated@@314) ($generated@@145 $generated@@312)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) $generated@@312 $generated@@313))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) ($generated@@145 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@71) (= (type $generated@@316) $generated@@89)) (= ($generated@@167 $generated@@316 ($generated@@169 $generated@@315))  (and ($generated@@167 $generated@@316 ($generated@@145 $generated@@315)) (not (= $generated@@316 $generated@@147)))))
 :pattern ( ($generated@@167 $generated@@316 ($generated@@169 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@150)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@71) (= (type $generated@@321) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@86 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@322) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@323) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@324) $generated@@150)) (= (type $generated@@325) $generated@@71)) ($generated@@160 $generated@@322 $generated@@323)) ($generated@@278 $generated@@324 $generated@@325 $generated@@322)) ($generated@@278 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@160 $generated@@322 $generated@@323) ($generated@@278 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@326) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@327) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@329) $generated@@71)) ($generated@@160 $generated@@326 $generated@@327)) ($generated@@86 $generated@@328 $generated@@329 $generated@@326)) ($generated@@86 $generated@@328 $generated@@329 $generated@@327))
 :pattern ( ($generated@@160 $generated@@326 $generated@@327) ($generated@@86 $generated@@328 $generated@@329 $generated@@326))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@88 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@91 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@88 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@93 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@78)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@71) (and (= ($generated@@82 ($generated@@145 $generated@@338)) $generated@@65) (= ($generated@@336 ($generated@@145 $generated@@338)) $generated@@68)))
 :pattern ( ($generated@@145 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@71) (and (= ($generated@@82 ($generated@@169 $generated@@339)) $generated@@66) (= ($generated@@336 ($generated@@169 $generated@@339)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 20)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@88 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 21)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@88 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@378) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@376 $generated@@377 $generated@@378)) (and ($generated@@160 $generated@@377 $generated@@378) (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@74 (type $generated@@380))))
 (=> (and (and (= (type $generated@@379) $generated@@89) (= (type $generated@@380) ($generated@@73 $generated@@381))) (not ($generated@@254 $generated@@380))) (= ($generated@@95 ($generated@@93 $generated@@377 $generated@@379) $generated@@380) ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))
))))
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@91 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@88 $generated@@383 $generated@@2)) (= ($generated@@190 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (and (<= 0 ($generated ($generated@@93 $generated@@382 $generated@@384))) (<= ($generated ($generated@@93 $generated@@382 $generated@@384)) ($generated@@330 $generated@@382))))
 :pattern ( ($generated@@93 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@190 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@71) (= (type $generated@@386) $generated@@89)) (= ($generated@@167 $generated@@386 ($generated@@145 $generated@@385))  (or (= $generated@@386 $generated@@147) (= ($generated@@148 $generated@@386) ($generated@@145 $generated@@385)))))
 :pattern ( ($generated@@167 $generated@@386 ($generated@@145 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@344 (type $generated@@387))))
(let (($generated@@389 ($generated@@343 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@342 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@341 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@340 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@344 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@88 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@344 (type $generated@@394))))
(let (($generated@@396 ($generated@@343 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@342 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@341 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@93 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@362 (type $generated@@398))))
(let (($generated@@400 ($generated@@361 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@360 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@359 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@358 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@362 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@88 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@362 (type $generated@@405))))
(let (($generated@@407 ($generated@@361 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@360 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@359 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@93 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@410) $generated@@71)) (= ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@409 $generated@@411)))) ($generated@@149 $generated@@411 $generated@@410))
 :pattern ( ($generated@@93 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@413) $generated@@71)) (= (type $generated@@414) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@150) ($generated@@0 ($generated@@93 $generated@@412 $generated@@415))) ($generated@@278 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@93 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@417) $generated@@71)) (= (type $generated@@418) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@0 ($generated@@93 $generated@@416 $generated@@419))) ($generated@@278 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@93 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@93 ($generated@@331 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@93 ($generated@@331 $generated@@421) $generated@@420)))
)))
(assert  (and (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@422 $generated@@425)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@422 $generated@@425))
)) (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@423 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@423 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@344 (type $generated@@428))))
(let (($generated@@430 ($generated@@343 (type $generated@@428))))
(= (type ($generated@@424 $generated@@428)) ($generated@@88 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@424 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@432) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432)))) (= ($generated@@93 ($generated@@424 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@432))))))
 :pattern ( ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@362 (type $generated@@436))))
(let (($generated@@438 ($generated@@361 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@88 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@440) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440)))) (= ($generated@@93 ($generated@@434 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@440))))))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@343 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@342 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@93 ($generated@@391 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@441) $generated@@445))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@361 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@360 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@93 ($generated@@402 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@446) $generated@@450))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@93 ($generated@@402 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@71)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@455) $generated@@71)) (= (type $generated@@456) $generated@@71)) (= (type $generated@@457) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))) (and ($generated@@278 ($generated@@93 ($generated@@424 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@278 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@454) $generated@@458))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@71)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@463) $generated@@71)) (= (type $generated@@464) $generated@@71)) (= (type $generated@@465) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))) (and ($generated@@278 ($generated@@93 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@278 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@467) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@468) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@469) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@467 $generated@@469))) (and ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))) ($generated@@160 $generated@@467 $generated@@469))
 :pattern ( ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@88 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@362 (type $generated@@472))))
(let (($generated@@474 ($generated@@361 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@360 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@359 $generated@@474 $generated@@473)) (= ($generated@@358 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@358 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@362 (type $generated@@475))))
(let (($generated@@477 ($generated@@361 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@360 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@359 $generated@@477 $generated@@476)) (= ($generated@@402 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@402 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@362 (type $generated@@478))))
(let (($generated@@480 ($generated@@361 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@360 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@359 $generated@@480 $generated@@479)) (= ($generated@@433 $generated@@478) ($generated@@470 $generated@@150))))))
 :pattern ( ($generated@@433 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@344 (type $generated@@481))))
(let (($generated@@483 ($generated@@343 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@342 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@341 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@150) (= (type $generated@@485) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@422 $generated@@481) ($generated@@317 ($generated@@255 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@422 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@362 (type $generated@@486))))
(let (($generated@@488 ($generated@@361 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@360 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@359 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@150) (= (type $generated@@490) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@433 $generated@@486) ($generated@@317 ($generated@@255 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@433 $generated@@486))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@77)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@T) ) (!  (=> (and (= (type $generated@@493) $generated@@77) (= (type $generated@@494) $generated@@75)) (and (= ($generated@@491 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@493) (= ($generated@@84 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@494)))
 :pattern ( ($generated@@250 $generated@@495 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@150) ($generated@@149 $generated@@496 $generated@@46)) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@496)) $generated@@496) ($generated@@167 ($generated@@423 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@149 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@150) ($generated@@149 $generated@@497 $generated@@47)) (and (= ($generated@@317 ($generated@@423 $generated@@3 $generated@@497)) $generated@@497) ($generated@@167 ($generated@@423 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@149 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@150) ($generated@@149 $generated@@498 $generated@@44)) (and (= ($generated@@317 ($generated@@423 $generated@@4 $generated@@498)) $generated@@498) ($generated@@167 ($generated@@423 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@149 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 22))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) ($generated@@149 $generated@@500 $generated@@45)) (and (= ($generated@@317 ($generated@@423 $generated@@499 $generated@@500)) $generated@@500) ($generated@@167 ($generated@@423 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@149 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@71) (= ($generated@@149 ($generated@@317 $generated@@501) $generated@@502) ($generated@@167 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@149 ($generated@@317 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@91 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@88 $generated@@504 $generated@@2)) (<= 0 ($generated@@330 $generated@@503))))
 :pattern ( ($generated@@330 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@304 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@303 $generated@@506)) (<= 0 ($generated@@302 $generated@@505))))
 :pattern ( ($generated@@302 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@71)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@71) (= (type $generated@@510) $generated@@71)) (= ($generated@@507 ($generated@@451 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@451 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@71)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@71) (= (type $generated@@514) $generated@@71)) (= ($generated@@511 ($generated@@451 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@451 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@71) (= (type $generated@@516) $generated@@71)) (= ($generated@@82 ($generated@@451 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@71)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@71) (= (type $generated@@520) $generated@@71)) (= ($generated@@517 ($generated@@459 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@459 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@71)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@71) (= (type $generated@@524) $generated@@71)) (= ($generated@@521 ($generated@@459 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@71) (= (type $generated@@526) $generated@@71)) (= ($generated@@82 ($generated@@459 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@150)) (= ($generated@@295 ($generated@@255 $generated@@527 $generated@@528)) $generated@@62))
 :pattern ( ($generated@@255 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@71)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@71) (= (type $generated@@532) $generated@@71)) (= ($generated@@529 ($generated@@175 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@175 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@71) (= (type $generated@@536) $generated@@71)) (= ($generated@@533 ($generated@@175 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@175 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@150)) (= ($generated@@183 ($generated@@255 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@255 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@150)) (= ($generated@@184 ($generated@@255 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@255 $generated@@539 $generated@@540))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@543))
)) (forall (($generated@@544 T@U) ($generated@@545 Int) ) (! (let (($generated@@546 ($generated@@304 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544 $generated@@545)) $generated@@546))
 :pattern ( ($generated@@542 $generated@@544 $generated@@545))
))))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@303 $generated@@150)) (= (type $generated@@548) $generated@@71)) (= (type $generated@@549) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549) (forall (($generated@@550 Int) ) (!  (=> (and (<= 0 $generated@@550) (< $generated@@550 ($generated@@302 $generated@@547))) ($generated@@278 ($generated@@542 $generated@@547 $generated@@550) $generated@@548 $generated@@549))
 :pattern ( ($generated@@542 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@551 ($generated@@87 $generated@@552)) $generated@@552)
 :pattern ( ($generated@@87 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@71) (= ($generated@@553 ($generated@@264 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@264 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@71) (= ($generated@@82 ($generated@@264 $generated@@556)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@71)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@71) (= ($generated@@557 ($generated@@269 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@269 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@71) (= ($generated@@82 ($generated@@269 $generated@@560)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@71)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@71) (= ($generated@@561 ($generated@@189 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@189 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@71) (= ($generated@@82 ($generated@@189 $generated@@564)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@71)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@71) (= ($generated@@565 ($generated@@541 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@541 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@71) (= ($generated@@82 ($generated@@541 $generated@@568)) $generated@@57))
 :pattern ( ($generated@@541 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@71)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@71) (= ($generated@@569 ($generated@@145 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@145 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@71)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@71) (= ($generated@@572 ($generated@@169 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@169 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@423 $generated@@576 ($generated@@317 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@317 $generated@@575))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@71) (= (type $generated@@578) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@579) $generated@@89)) (and ($generated@@146 $generated@@578) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60)))) ($generated@@278 ($generated@@285 $generated@@577 $generated@@579) $generated@@577 $generated@@578))
 :pattern ( ($generated@@285 $generated@@577 $generated@@579) ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60))
))))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@71) (= (type $generated@@581) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@582) $generated@@89)) (and ($generated@@146 $generated@@581) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60)))) ($generated@@278 ($generated@@290 $generated@@580 $generated@@582) $generated@@580 $generated@@581))
 :pattern ( ($generated@@290 $generated@@580 $generated@@582) ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60))
))))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@584) $generated@@71)) (= (type $generated@@585) $generated@@71)) (= ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))) (and ($generated@@149 ($generated@@93 ($generated@@424 $generated@@583) $generated@@586) $generated@@585) ($generated@@149 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@583) $generated@@586))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@71)) (= (type $generated@@589) $generated@@71)) (= ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))) (and ($generated@@149 ($generated@@93 ($generated@@434 $generated@@587) $generated@@590) $generated@@589) ($generated@@149 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@587) $generated@@590))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@150)) (< ($generated@@591 $generated@@593) ($generated@@592 ($generated@@255 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@255 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@150) (= (type $generated@@596) $generated@@150)) (< ($generated@@591 $generated@@596) ($generated@@592 ($generated@@255 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@255 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@150) (= (type $generated@@598) $generated@@71)) (= (type $generated@@599) $generated@@71)) ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599))) (and (= ($generated@@317 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597)) $generated@@597) ($generated@@167 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597) ($generated@@451 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@150) (= (type $generated@@601) $generated@@71)) (= (type $generated@@602) $generated@@71)) ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602))) (and (= ($generated@@317 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600)) $generated@@600) ($generated@@167 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600) ($generated@@459 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@71) (= (type $generated@@604) $generated@@71)) (= (type $generated@@605) $generated@@150)) ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604))) (and (= ($generated@@317 ($generated@@423 $generated@@176 $generated@@605)) $generated@@605) ($generated@@167 ($generated@@423 $generated@@176 $generated@@605) ($generated@@175 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@93 ($generated@@470 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@93 ($generated@@470 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@71) (= (type $generated@@609) $generated@@71)) (and (= ($generated@@82 ($generated@@175 $generated@@608 $generated@@609)) $generated@@63) (= ($generated@@336 ($generated@@175 $generated@@608 $generated@@609)) $generated@@67)))
 :pattern ( ($generated@@175 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@176) (= ($generated@@591 ($generated@@317 $generated@@610)) ($generated@@592 $generated@@610)))
 :pattern ( ($generated@@591 ($generated@@317 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@150) ($generated@@149 $generated@@611 ($generated@@87 0))) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@611)) $generated@@611) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@611) ($generated@@87 0))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@87 0)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@150) (= (type $generated@@613) $generated@@71)) ($generated@@149 $generated@@612 ($generated@@264 $generated@@613))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612)) $generated@@612) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612) ($generated@@264 $generated@@613))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@264 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@150) (= (type $generated@@615) $generated@@71)) ($generated@@149 $generated@@614 ($generated@@269 $generated@@615))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614)) $generated@@614) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614) ($generated@@269 $generated@@615))))
 :pattern ( ($generated@@149 $generated@@614 ($generated@@269 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@150) (= (type $generated@@617) $generated@@71)) ($generated@@149 $generated@@616 ($generated@@189 $generated@@617))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616)) $generated@@616) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616) ($generated@@189 $generated@@617))))
 :pattern ( ($generated@@149 $generated@@616 ($generated@@189 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@150) (= (type $generated@@619) $generated@@71)) ($generated@@149 $generated@@618 ($generated@@541 $generated@@619))) (and (= ($generated@@317 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618)) $generated@@618) ($generated@@167 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618) ($generated@@541 $generated@@619))))
 :pattern ( ($generated@@149 $generated@@618 ($generated@@541 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@71) (= (type $generated@@621) $generated@@150)) ($generated@@149 $generated@@621 ($generated@@145 $generated@@620))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@621)) $generated@@621) ($generated@@167 ($generated@@423 $generated@@89 $generated@@621) ($generated@@145 $generated@@620))))
 :pattern ( ($generated@@149 $generated@@621 ($generated@@145 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@71) (= (type $generated@@623) $generated@@150)) ($generated@@149 $generated@@623 ($generated@@169 $generated@@622))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@623)) $generated@@623) ($generated@@167 ($generated@@423 $generated@@89 $generated@@623) ($generated@@169 $generated@@622))))
 :pattern ( ($generated@@149 $generated@@623 ($generated@@169 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (=> (and (and (and (= (type $generated@@624) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@625) $generated@@89)) (= (type $generated@@626) ($generated@@73 $generated@@628))) ($generated@@146 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))) ($generated@@160 $generated@@624 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@630) $generated@@71)) (= (type $generated@@631) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@629 $generated@@632)))) ($generated@@278 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@93 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@176) (= (type $generated@@634) $generated@@71)) (= (type $generated@@635) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@635) (and ($generated@@174 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@71) ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@176) (= (type $generated@@638) $generated@@71)) (= (type $generated@@639) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@639) (and ($generated@@174 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@71) ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@150) (= (type $generated@@642) $generated@@150)) (= ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)) ($generated@@274 ($generated@@255 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@317 ($generated@@274 $generated@@643)) ($generated@@274 ($generated@@317 $generated@@643)))
 :pattern ( ($generated@@317 ($generated@@274 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@304 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@303 $generated@@645)) (= ($generated@@302 $generated@@644) 0)) (= $generated@@644 ($generated@@301 $generated@@645))))
 :pattern ( ($generated@@302 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@88 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@330 $generated@@646) ($generated ($generated@@93 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@651) $generated@@2)) ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@653) $generated@@3)) ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@655) $generated@@4)) ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@657) $generated@@499)) ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@659) $generated@@150)) ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@303 $generated@@150)) (= (type $generated@@661) $generated@@71)) (= ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)) (forall (($generated@@662 Int) ) (!  (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@302 $generated@@660))) ($generated@@149 ($generated@@542 $generated@@660 $generated@@662) $generated@@661))
 :pattern ( ($generated@@542 $generated@@660 $generated@@662))
))))
 :pattern ( ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 Int) ) (!  (=> (= (type $generated@@664) ($generated@@303 $generated@@150)) (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@302 $generated@@664))) (< ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))) ($generated@@663 $generated@@664))))
 :pattern ( ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@667) $generated@@71)) (= (type $generated@@668) $generated@@71)) ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668))) (and (and ($generated@@167 ($generated@@340 $generated@@666) ($generated@@264 $generated@@667)) ($generated@@167 ($generated@@391 $generated@@666) ($generated@@264 $generated@@668))) ($generated@@167 ($generated@@422 $generated@@666) ($generated@@264 ($generated@@175 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@670) $generated@@71)) (= (type $generated@@671) $generated@@71)) ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671))) (and (and ($generated@@167 ($generated@@358 $generated@@669) ($generated@@269 $generated@@670)) ($generated@@167 ($generated@@402 $generated@@669) ($generated@@269 $generated@@671))) ($generated@@167 ($generated@@433 $generated@@669) ($generated@@269 ($generated@@175 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@2) ($generated@@167 $generated@@672 $generated@@46))
 :pattern ( ($generated@@167 $generated@@672 $generated@@46))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@3) ($generated@@167 $generated@@673 $generated@@47))
 :pattern ( ($generated@@167 $generated@@673 $generated@@47))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@4) ($generated@@167 $generated@@674 $generated@@44))
 :pattern ( ($generated@@167 $generated@@674 $generated@@44))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@499) ($generated@@167 $generated@@675 $generated@@45))
 :pattern ( ($generated@@167 $generated@@675 $generated@@45))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@150) ($generated@@167 $generated@@676 $generated@@48))
 :pattern ( ($generated@@167 $generated@@676 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Bool)
(declare-fun $generated@@680 () Bool)
(declare-fun $generated@@681 () Bool)
(declare-fun $generated@@682 (T@U) Bool)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(assert  (and (and (and (= (type $generated@@677) ($generated@@196 $generated@@89 $generated@@4)) (= (type $generated@@678) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@683) $generated@@89)) (= (type $generated@@684) $generated@@71)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@685  (=> (= $generated@@677 ($generated@@195 $generated@@147 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 7)) $generated@@679) (=> $generated@@679 (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@680) (=> $generated@@680 (=> (= (ControlFlow 0 2) (- 0 1)) $generated@@681)))))))))))
(let (($generated@@686  (=> (and ($generated@@146 $generated@@678) ($generated@@682 $generated@@678)) (=> (and (and (not (= $generated@@683 $generated@@147)) ($generated@@167 $generated@@683 ($generated@@169 $generated@@684))) (and (= 1 $generated@@284) (= (ControlFlow 0 8) 2))) $generated@@685))))
$generated@@686)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 7))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@T T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U T@U) Bool)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U Int) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@663 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@150) 16) (= (type $generated@@144) ($generated@@73 $generated@@150))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@151)) $generated@@71)
 :pattern ( ($generated@@145 $generated@@151))
))) (= (type $generated@@147) $generated@@89)) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@148 $generated@@152)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@71) (= (type $generated@@154) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@155) $generated@@89)) (and ($generated@@146 $generated@@154) (and (not (= $generated@@155 $generated@@147)) (= ($generated@@148 $generated@@155) ($generated@@145 $generated@@153))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) $generated@@153))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) ($generated@@145 $generated@@153))
)))
(assert (= (type $generated@@156) ($generated@@73 $generated@@150)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@71) (= (type $generated@@158) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@159) $generated@@89)) (and ($generated@@146 $generated@@158) (and (not (= $generated@@159 $generated@@147)) (= ($generated@@148 $generated@@159) ($generated@@145 $generated@@157))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) $generated@@157))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) ($generated@@145 $generated@@157))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@162) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@160 $generated@@161 $generated@@162)) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@161 $generated@@163) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60))
)))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@71) (= (type $generated@@165) $generated@@89)) (= (type $generated@@166) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166)  (or (= $generated@@165 $generated@@147) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@87 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@87 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@71)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@71) (= (type $generated@@172) $generated@@89)) (= (type $generated@@173) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@86 $generated@@172 ($generated@@145 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert  (and (= ($generated@@1 $generated@@176) 17) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@71)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@71) (= (type $generated@@180) $generated@@71)) (= (type $generated@@181) $generated@@176)) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@150)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@150)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@176) (= (type $generated@@188) $generated@@176)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@71)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@193) $generated@@71)) ($generated@@167 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@167 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 18)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@89 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@74 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@89) (= (type $generated@@244) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@245) ($generated@@73 $generated@@4))) (= (type $generated@@247) $generated@@89)) (= (type $generated@@248) ($generated@@73 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (= ($generated@@81 $generated@@156) 0))
(assert (forall (($generated@@251 T@T) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@73 $generated@@251))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@70) $generated@@156))
(assert ($generated@@254 $generated@@156))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@256 $generated@@257)) $generated@@176)
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@71) (= (type $generated@@259) $generated@@71)) (= (type $generated@@260) $generated@@150)) (= (type $generated@@261) $generated@@150)) (= ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259))  (and ($generated@@149 $generated@@260 $generated@@258) ($generated@@149 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259)))
)))
(assert (= ($generated@@81 $generated@@144) 0))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@69) $generated@@144))
(assert  (not ($generated@@254 $generated@@144)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@176) (= (type $generated@@263) $generated@@176)) (= ($generated@@182 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@182 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@71)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@267) $generated@@71)) (= ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@150) ($generated@@0 ($generated@@93 $generated@@266 $generated@@268))) ($generated@@149 $generated@@268 $generated@@267))
 :pattern ( ($generated@@93 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@71)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@272) $generated@@71)) (= ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@150) ($generated@@0 ($generated@@93 $generated@@271 $generated@@273))) ($generated@@149 $generated@@273 $generated@@272))
 :pattern ( ($generated@@93 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
(= (type ($generated@@274 $generated@@275)) $generated@@276))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@274 $generated@@277) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@71) (= (type $generated@@280) $generated@@71)) (= (type $generated@@281) $generated@@150)) (= (type $generated@@282) $generated@@150)) (= (type $generated@@283) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@146 $generated@@283)) (= ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287)) $generated@@150)
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@71) (= (type $generated@@289) $generated@@89)) ($generated@@149 ($generated@@285 $generated@@288 $generated@@289) $generated@@288))
 :pattern ( ($generated@@285 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@291 $generated@@292)) $generated@@150)
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@71) (= (type $generated@@294) $generated@@89)) ($generated@@149 ($generated@@290 $generated@@293 $generated@@294) $generated@@293))
 :pattern ( ($generated@@290 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@76)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@176) (= ($generated@@174 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@62)))
 :pattern ( ($generated@@174 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@176) ($generated@@174 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@150) (= (type $generated@@300) $generated@@150)) (= $generated@@298 ($generated@@255 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@174 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 19)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert ($generated@@254 $generated@@60))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@309) $generated@@71) (= (type $generated@@310) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@311) $generated@@89)) (and (and ($generated@@146 $generated@@310) (and (not (= $generated@@311 $generated@@147)) (= ($generated@@148 $generated@@311) ($generated@@145 $generated@@309)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) $generated@@309 $generated@@310))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) ($generated@@145 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@312) $generated@@71) (= (type $generated@@313) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@314) $generated@@89)) (and (and ($generated@@146 $generated@@313) (and (not (= $generated@@314 $generated@@147)) (= ($generated@@148 $generated@@314) ($generated@@145 $generated@@312)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) $generated@@312 $generated@@313))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) ($generated@@145 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@71) (= (type $generated@@316) $generated@@89)) (= ($generated@@167 $generated@@316 ($generated@@169 $generated@@315))  (and ($generated@@167 $generated@@316 ($generated@@145 $generated@@315)) (not (= $generated@@316 $generated@@147)))))
 :pattern ( ($generated@@167 $generated@@316 ($generated@@169 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@150)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@71) (= (type $generated@@321) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@86 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@322) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@323) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@324) $generated@@150)) (= (type $generated@@325) $generated@@71)) ($generated@@160 $generated@@322 $generated@@323)) ($generated@@278 $generated@@324 $generated@@325 $generated@@322)) ($generated@@278 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@160 $generated@@322 $generated@@323) ($generated@@278 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@326) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@327) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@329) $generated@@71)) ($generated@@160 $generated@@326 $generated@@327)) ($generated@@86 $generated@@328 $generated@@329 $generated@@326)) ($generated@@86 $generated@@328 $generated@@329 $generated@@327))
 :pattern ( ($generated@@160 $generated@@326 $generated@@327) ($generated@@86 $generated@@328 $generated@@329 $generated@@326))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@88 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@91 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@88 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@93 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@78)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@71) (and (= ($generated@@82 ($generated@@145 $generated@@338)) $generated@@65) (= ($generated@@336 ($generated@@145 $generated@@338)) $generated@@68)))
 :pattern ( ($generated@@145 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@71) (and (= ($generated@@82 ($generated@@169 $generated@@339)) $generated@@66) (= ($generated@@336 ($generated@@169 $generated@@339)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 20)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@88 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 21)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@88 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@378) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@376 $generated@@377 $generated@@378)) (and ($generated@@160 $generated@@377 $generated@@378) (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@74 (type $generated@@380))))
 (=> (and (and (= (type $generated@@379) $generated@@89) (= (type $generated@@380) ($generated@@73 $generated@@381))) (not ($generated@@254 $generated@@380))) (= ($generated@@95 ($generated@@93 $generated@@377 $generated@@379) $generated@@380) ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))
))))
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@91 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@88 $generated@@383 $generated@@2)) (= ($generated@@190 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (and (<= 0 ($generated ($generated@@93 $generated@@382 $generated@@384))) (<= ($generated ($generated@@93 $generated@@382 $generated@@384)) ($generated@@330 $generated@@382))))
 :pattern ( ($generated@@93 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@190 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@71) (= (type $generated@@386) $generated@@89)) (= ($generated@@167 $generated@@386 ($generated@@145 $generated@@385))  (or (= $generated@@386 $generated@@147) (= ($generated@@148 $generated@@386) ($generated@@145 $generated@@385)))))
 :pattern ( ($generated@@167 $generated@@386 ($generated@@145 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@344 (type $generated@@387))))
(let (($generated@@389 ($generated@@343 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@342 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@341 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@340 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@344 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@88 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@344 (type $generated@@394))))
(let (($generated@@396 ($generated@@343 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@342 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@341 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@93 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@362 (type $generated@@398))))
(let (($generated@@400 ($generated@@361 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@360 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@359 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@358 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@362 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@88 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@362 (type $generated@@405))))
(let (($generated@@407 ($generated@@361 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@360 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@359 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@93 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@410) $generated@@71)) (= ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@409 $generated@@411)))) ($generated@@149 $generated@@411 $generated@@410))
 :pattern ( ($generated@@93 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@413) $generated@@71)) (= (type $generated@@414) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@150) ($generated@@0 ($generated@@93 $generated@@412 $generated@@415))) ($generated@@278 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@93 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@417) $generated@@71)) (= (type $generated@@418) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@0 ($generated@@93 $generated@@416 $generated@@419))) ($generated@@278 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@93 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@93 ($generated@@331 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@93 ($generated@@331 $generated@@421) $generated@@420)))
)))
(assert  (and (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@422 $generated@@425)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@422 $generated@@425))
)) (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@423 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@423 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@344 (type $generated@@428))))
(let (($generated@@430 ($generated@@343 (type $generated@@428))))
(= (type ($generated@@424 $generated@@428)) ($generated@@88 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@424 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@432) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432)))) (= ($generated@@93 ($generated@@424 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@432))))))
 :pattern ( ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@362 (type $generated@@436))))
(let (($generated@@438 ($generated@@361 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@88 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@440) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440)))) (= ($generated@@93 ($generated@@434 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@440))))))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@343 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@342 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@93 ($generated@@391 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@441) $generated@@445))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@361 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@360 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@93 ($generated@@402 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@446) $generated@@450))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@93 ($generated@@402 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@71)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@455) $generated@@71)) (= (type $generated@@456) $generated@@71)) (= (type $generated@@457) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))) (and ($generated@@278 ($generated@@93 ($generated@@424 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@278 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@454) $generated@@458))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@71)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@463) $generated@@71)) (= (type $generated@@464) $generated@@71)) (= (type $generated@@465) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))) (and ($generated@@278 ($generated@@93 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@278 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@467) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@468) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@469) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@467 $generated@@469))) (and ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))) ($generated@@160 $generated@@467 $generated@@469))
 :pattern ( ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@88 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@362 (type $generated@@472))))
(let (($generated@@474 ($generated@@361 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@360 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@359 $generated@@474 $generated@@473)) (= ($generated@@358 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@358 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@362 (type $generated@@475))))
(let (($generated@@477 ($generated@@361 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@360 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@359 $generated@@477 $generated@@476)) (= ($generated@@402 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@402 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@362 (type $generated@@478))))
(let (($generated@@480 ($generated@@361 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@360 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@359 $generated@@480 $generated@@479)) (= ($generated@@433 $generated@@478) ($generated@@470 $generated@@150))))))
 :pattern ( ($generated@@433 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@344 (type $generated@@481))))
(let (($generated@@483 ($generated@@343 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@342 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@341 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@150) (= (type $generated@@485) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@422 $generated@@481) ($generated@@317 ($generated@@255 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@422 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@362 (type $generated@@486))))
(let (($generated@@488 ($generated@@361 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@360 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@359 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@150) (= (type $generated@@490) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@433 $generated@@486) ($generated@@317 ($generated@@255 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@433 $generated@@486))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@77)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@T) ) (!  (=> (and (= (type $generated@@493) $generated@@77) (= (type $generated@@494) $generated@@75)) (and (= ($generated@@491 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@493) (= ($generated@@84 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@494)))
 :pattern ( ($generated@@250 $generated@@495 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@150) ($generated@@149 $generated@@496 $generated@@46)) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@496)) $generated@@496) ($generated@@167 ($generated@@423 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@149 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@150) ($generated@@149 $generated@@497 $generated@@47)) (and (= ($generated@@317 ($generated@@423 $generated@@3 $generated@@497)) $generated@@497) ($generated@@167 ($generated@@423 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@149 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@150) ($generated@@149 $generated@@498 $generated@@44)) (and (= ($generated@@317 ($generated@@423 $generated@@4 $generated@@498)) $generated@@498) ($generated@@167 ($generated@@423 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@149 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 22))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) ($generated@@149 $generated@@500 $generated@@45)) (and (= ($generated@@317 ($generated@@423 $generated@@499 $generated@@500)) $generated@@500) ($generated@@167 ($generated@@423 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@149 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@71) (= ($generated@@149 ($generated@@317 $generated@@501) $generated@@502) ($generated@@167 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@149 ($generated@@317 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@91 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@88 $generated@@504 $generated@@2)) (<= 0 ($generated@@330 $generated@@503))))
 :pattern ( ($generated@@330 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@304 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@303 $generated@@506)) (<= 0 ($generated@@302 $generated@@505))))
 :pattern ( ($generated@@302 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@71)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@71) (= (type $generated@@510) $generated@@71)) (= ($generated@@507 ($generated@@451 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@451 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@71)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@71) (= (type $generated@@514) $generated@@71)) (= ($generated@@511 ($generated@@451 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@451 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@71) (= (type $generated@@516) $generated@@71)) (= ($generated@@82 ($generated@@451 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@71)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@71) (= (type $generated@@520) $generated@@71)) (= ($generated@@517 ($generated@@459 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@459 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@71)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@71) (= (type $generated@@524) $generated@@71)) (= ($generated@@521 ($generated@@459 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@71) (= (type $generated@@526) $generated@@71)) (= ($generated@@82 ($generated@@459 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@150)) (= ($generated@@295 ($generated@@255 $generated@@527 $generated@@528)) $generated@@62))
 :pattern ( ($generated@@255 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@71)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@71) (= (type $generated@@532) $generated@@71)) (= ($generated@@529 ($generated@@175 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@175 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@71) (= (type $generated@@536) $generated@@71)) (= ($generated@@533 ($generated@@175 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@175 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@150)) (= ($generated@@183 ($generated@@255 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@255 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@150)) (= ($generated@@184 ($generated@@255 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@255 $generated@@539 $generated@@540))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@543))
)) (forall (($generated@@544 T@U) ($generated@@545 Int) ) (! (let (($generated@@546 ($generated@@304 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544 $generated@@545)) $generated@@546))
 :pattern ( ($generated@@542 $generated@@544 $generated@@545))
))))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@303 $generated@@150)) (= (type $generated@@548) $generated@@71)) (= (type $generated@@549) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549) (forall (($generated@@550 Int) ) (!  (=> (and (<= 0 $generated@@550) (< $generated@@550 ($generated@@302 $generated@@547))) ($generated@@278 ($generated@@542 $generated@@547 $generated@@550) $generated@@548 $generated@@549))
 :pattern ( ($generated@@542 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@551 ($generated@@87 $generated@@552)) $generated@@552)
 :pattern ( ($generated@@87 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@71) (= ($generated@@553 ($generated@@264 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@264 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@71) (= ($generated@@82 ($generated@@264 $generated@@556)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@71)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@71) (= ($generated@@557 ($generated@@269 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@269 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@71) (= ($generated@@82 ($generated@@269 $generated@@560)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@71)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@71) (= ($generated@@561 ($generated@@189 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@189 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@71) (= ($generated@@82 ($generated@@189 $generated@@564)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@71)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@71) (= ($generated@@565 ($generated@@541 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@541 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@71) (= ($generated@@82 ($generated@@541 $generated@@568)) $generated@@57))
 :pattern ( ($generated@@541 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@71)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@71) (= ($generated@@569 ($generated@@145 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@145 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@71)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@71) (= ($generated@@572 ($generated@@169 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@169 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@423 $generated@@576 ($generated@@317 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@317 $generated@@575))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@71) (= (type $generated@@578) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@579) $generated@@89)) (and ($generated@@146 $generated@@578) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60)))) ($generated@@278 ($generated@@285 $generated@@577 $generated@@579) $generated@@577 $generated@@578))
 :pattern ( ($generated@@285 $generated@@577 $generated@@579) ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60))
))))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@71) (= (type $generated@@581) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@582) $generated@@89)) (and ($generated@@146 $generated@@581) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60)))) ($generated@@278 ($generated@@290 $generated@@580 $generated@@582) $generated@@580 $generated@@581))
 :pattern ( ($generated@@290 $generated@@580 $generated@@582) ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60))
))))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@584) $generated@@71)) (= (type $generated@@585) $generated@@71)) (= ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))) (and ($generated@@149 ($generated@@93 ($generated@@424 $generated@@583) $generated@@586) $generated@@585) ($generated@@149 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@583) $generated@@586))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@71)) (= (type $generated@@589) $generated@@71)) (= ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))) (and ($generated@@149 ($generated@@93 ($generated@@434 $generated@@587) $generated@@590) $generated@@589) ($generated@@149 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@587) $generated@@590))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@150)) (< ($generated@@591 $generated@@593) ($generated@@592 ($generated@@255 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@255 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@150) (= (type $generated@@596) $generated@@150)) (< ($generated@@591 $generated@@596) ($generated@@592 ($generated@@255 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@255 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@150) (= (type $generated@@598) $generated@@71)) (= (type $generated@@599) $generated@@71)) ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599))) (and (= ($generated@@317 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597)) $generated@@597) ($generated@@167 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597) ($generated@@451 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@150) (= (type $generated@@601) $generated@@71)) (= (type $generated@@602) $generated@@71)) ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602))) (and (= ($generated@@317 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600)) $generated@@600) ($generated@@167 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600) ($generated@@459 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@71) (= (type $generated@@604) $generated@@71)) (= (type $generated@@605) $generated@@150)) ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604))) (and (= ($generated@@317 ($generated@@423 $generated@@176 $generated@@605)) $generated@@605) ($generated@@167 ($generated@@423 $generated@@176 $generated@@605) ($generated@@175 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@93 ($generated@@470 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@93 ($generated@@470 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@71) (= (type $generated@@609) $generated@@71)) (and (= ($generated@@82 ($generated@@175 $generated@@608 $generated@@609)) $generated@@63) (= ($generated@@336 ($generated@@175 $generated@@608 $generated@@609)) $generated@@67)))
 :pattern ( ($generated@@175 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@176) (= ($generated@@591 ($generated@@317 $generated@@610)) ($generated@@592 $generated@@610)))
 :pattern ( ($generated@@591 ($generated@@317 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@150) ($generated@@149 $generated@@611 ($generated@@87 0))) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@611)) $generated@@611) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@611) ($generated@@87 0))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@87 0)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@150) (= (type $generated@@613) $generated@@71)) ($generated@@149 $generated@@612 ($generated@@264 $generated@@613))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612)) $generated@@612) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612) ($generated@@264 $generated@@613))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@264 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@150) (= (type $generated@@615) $generated@@71)) ($generated@@149 $generated@@614 ($generated@@269 $generated@@615))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614)) $generated@@614) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614) ($generated@@269 $generated@@615))))
 :pattern ( ($generated@@149 $generated@@614 ($generated@@269 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@150) (= (type $generated@@617) $generated@@71)) ($generated@@149 $generated@@616 ($generated@@189 $generated@@617))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616)) $generated@@616) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616) ($generated@@189 $generated@@617))))
 :pattern ( ($generated@@149 $generated@@616 ($generated@@189 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@150) (= (type $generated@@619) $generated@@71)) ($generated@@149 $generated@@618 ($generated@@541 $generated@@619))) (and (= ($generated@@317 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618)) $generated@@618) ($generated@@167 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618) ($generated@@541 $generated@@619))))
 :pattern ( ($generated@@149 $generated@@618 ($generated@@541 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@71) (= (type $generated@@621) $generated@@150)) ($generated@@149 $generated@@621 ($generated@@145 $generated@@620))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@621)) $generated@@621) ($generated@@167 ($generated@@423 $generated@@89 $generated@@621) ($generated@@145 $generated@@620))))
 :pattern ( ($generated@@149 $generated@@621 ($generated@@145 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@71) (= (type $generated@@623) $generated@@150)) ($generated@@149 $generated@@623 ($generated@@169 $generated@@622))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@623)) $generated@@623) ($generated@@167 ($generated@@423 $generated@@89 $generated@@623) ($generated@@169 $generated@@622))))
 :pattern ( ($generated@@149 $generated@@623 ($generated@@169 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (=> (and (and (and (= (type $generated@@624) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@625) $generated@@89)) (= (type $generated@@626) ($generated@@73 $generated@@628))) ($generated@@146 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))) ($generated@@160 $generated@@624 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@630) $generated@@71)) (= (type $generated@@631) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@629 $generated@@632)))) ($generated@@278 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@93 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@176) (= (type $generated@@634) $generated@@71)) (= (type $generated@@635) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@635) (and ($generated@@174 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@71) ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@176) (= (type $generated@@638) $generated@@71)) (= (type $generated@@639) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@639) (and ($generated@@174 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@71) ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@150) (= (type $generated@@642) $generated@@150)) (= ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)) ($generated@@274 ($generated@@255 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@317 ($generated@@274 $generated@@643)) ($generated@@274 ($generated@@317 $generated@@643)))
 :pattern ( ($generated@@317 ($generated@@274 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@304 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@303 $generated@@645)) (= ($generated@@302 $generated@@644) 0)) (= $generated@@644 ($generated@@301 $generated@@645))))
 :pattern ( ($generated@@302 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@88 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@330 $generated@@646) ($generated ($generated@@93 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@651) $generated@@2)) ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@653) $generated@@3)) ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@655) $generated@@4)) ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@657) $generated@@499)) ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@659) $generated@@150)) ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@303 $generated@@150)) (= (type $generated@@661) $generated@@71)) (= ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)) (forall (($generated@@662 Int) ) (!  (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@302 $generated@@660))) ($generated@@149 ($generated@@542 $generated@@660 $generated@@662) $generated@@661))
 :pattern ( ($generated@@542 $generated@@660 $generated@@662))
))))
 :pattern ( ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 Int) ) (!  (=> (= (type $generated@@664) ($generated@@303 $generated@@150)) (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@302 $generated@@664))) (< ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))) ($generated@@663 $generated@@664))))
 :pattern ( ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@667) $generated@@71)) (= (type $generated@@668) $generated@@71)) ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668))) (and (and ($generated@@167 ($generated@@340 $generated@@666) ($generated@@264 $generated@@667)) ($generated@@167 ($generated@@391 $generated@@666) ($generated@@264 $generated@@668))) ($generated@@167 ($generated@@422 $generated@@666) ($generated@@264 ($generated@@175 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@670) $generated@@71)) (= (type $generated@@671) $generated@@71)) ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671))) (and (and ($generated@@167 ($generated@@358 $generated@@669) ($generated@@269 $generated@@670)) ($generated@@167 ($generated@@402 $generated@@669) ($generated@@269 $generated@@671))) ($generated@@167 ($generated@@433 $generated@@669) ($generated@@269 ($generated@@175 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@2) ($generated@@167 $generated@@672 $generated@@46))
 :pattern ( ($generated@@167 $generated@@672 $generated@@46))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@3) ($generated@@167 $generated@@673 $generated@@47))
 :pattern ( ($generated@@167 $generated@@673 $generated@@47))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@4) ($generated@@167 $generated@@674 $generated@@44))
 :pattern ( ($generated@@167 $generated@@674 $generated@@44))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@499) ($generated@@167 $generated@@675 $generated@@45))
 :pattern ( ($generated@@167 $generated@@675 $generated@@45))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@150) ($generated@@167 $generated@@676 $generated@@48))
 :pattern ( ($generated@@167 $generated@@676 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Bool)
(declare-fun $generated@@680 () Bool)
(declare-fun $generated@@681 () Bool)
(declare-fun $generated@@682 (T@U) Bool)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(assert  (and (and (and (and (= (type $generated@@677) ($generated@@196 $generated@@89 $generated@@4)) (= (type $generated@@678) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@683) $generated@@150)) (= (type $generated@@684) $generated@@71)) (= (type $generated@@685) $generated@@89)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@686  (=> (= $generated@@677 ($generated@@195 $generated@@147 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) $generated@@679) (=> $generated@@679 (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@680) (=> $generated@@680 (=> (= (ControlFlow 0 2) (- 0 1)) $generated@@681)))))))))
(let (($generated@@687  (=> (and (and (and ($generated@@146 $generated@@678) ($generated@@682 $generated@@678)) (and ($generated@@149 $generated@@683 $generated@@684) ($generated@@278 $generated@@683 $generated@@684 $generated@@678))) (and (and (not (= $generated@@685 $generated@@147)) ($generated@@167 $generated@@685 ($generated@@169 $generated@@684))) (and (= 1 $generated@@284) (= (ControlFlow 0 6) 2)))) $generated@@686)))
$generated@@687)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@T T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U T@U) Bool)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U Int) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@663 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@150) 16) (= (type $generated@@144) ($generated@@73 $generated@@150))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@151)) $generated@@71)
 :pattern ( ($generated@@145 $generated@@151))
))) (= (type $generated@@147) $generated@@89)) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@148 $generated@@152)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@71) (= (type $generated@@154) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@155) $generated@@89)) (and ($generated@@146 $generated@@154) (and (not (= $generated@@155 $generated@@147)) (= ($generated@@148 $generated@@155) ($generated@@145 $generated@@153))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) $generated@@153))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) ($generated@@145 $generated@@153))
)))
(assert (= (type $generated@@156) ($generated@@73 $generated@@150)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@71) (= (type $generated@@158) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@159) $generated@@89)) (and ($generated@@146 $generated@@158) (and (not (= $generated@@159 $generated@@147)) (= ($generated@@148 $generated@@159) ($generated@@145 $generated@@157))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) $generated@@157))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) ($generated@@145 $generated@@157))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@162) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@160 $generated@@161 $generated@@162)) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@161 $generated@@163) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60))
)))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@71) (= (type $generated@@165) $generated@@89)) (= (type $generated@@166) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166)  (or (= $generated@@165 $generated@@147) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@87 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@87 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@71)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@71) (= (type $generated@@172) $generated@@89)) (= (type $generated@@173) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@86 $generated@@172 ($generated@@145 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert  (and (= ($generated@@1 $generated@@176) 17) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@71)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@71) (= (type $generated@@180) $generated@@71)) (= (type $generated@@181) $generated@@176)) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@150)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@150)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@176) (= (type $generated@@188) $generated@@176)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@71)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@193) $generated@@71)) ($generated@@167 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@167 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 18)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@89 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@74 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@89) (= (type $generated@@244) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@245) ($generated@@73 $generated@@4))) (= (type $generated@@247) $generated@@89)) (= (type $generated@@248) ($generated@@73 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (= ($generated@@81 $generated@@156) 0))
(assert (forall (($generated@@251 T@T) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@73 $generated@@251))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@70) $generated@@156))
(assert ($generated@@254 $generated@@156))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@256 $generated@@257)) $generated@@176)
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@71) (= (type $generated@@259) $generated@@71)) (= (type $generated@@260) $generated@@150)) (= (type $generated@@261) $generated@@150)) (= ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259))  (and ($generated@@149 $generated@@260 $generated@@258) ($generated@@149 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259)))
)))
(assert (= ($generated@@81 $generated@@144) 0))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@69) $generated@@144))
(assert  (not ($generated@@254 $generated@@144)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@176) (= (type $generated@@263) $generated@@176)) (= ($generated@@182 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@182 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@71)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@267) $generated@@71)) (= ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@150) ($generated@@0 ($generated@@93 $generated@@266 $generated@@268))) ($generated@@149 $generated@@268 $generated@@267))
 :pattern ( ($generated@@93 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@71)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@272) $generated@@71)) (= ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@150) ($generated@@0 ($generated@@93 $generated@@271 $generated@@273))) ($generated@@149 $generated@@273 $generated@@272))
 :pattern ( ($generated@@93 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
(= (type ($generated@@274 $generated@@275)) $generated@@276))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@274 $generated@@277) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@71) (= (type $generated@@280) $generated@@71)) (= (type $generated@@281) $generated@@150)) (= (type $generated@@282) $generated@@150)) (= (type $generated@@283) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@146 $generated@@283)) (= ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287)) $generated@@150)
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@71) (= (type $generated@@289) $generated@@89)) ($generated@@149 ($generated@@285 $generated@@288 $generated@@289) $generated@@288))
 :pattern ( ($generated@@285 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@291 $generated@@292)) $generated@@150)
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@71) (= (type $generated@@294) $generated@@89)) ($generated@@149 ($generated@@290 $generated@@293 $generated@@294) $generated@@293))
 :pattern ( ($generated@@290 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@76)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@176) (= ($generated@@174 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@62)))
 :pattern ( ($generated@@174 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@176) ($generated@@174 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@150) (= (type $generated@@300) $generated@@150)) (= $generated@@298 ($generated@@255 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@174 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 19)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert ($generated@@254 $generated@@60))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@309) $generated@@71) (= (type $generated@@310) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@311) $generated@@89)) (and (and ($generated@@146 $generated@@310) (and (not (= $generated@@311 $generated@@147)) (= ($generated@@148 $generated@@311) ($generated@@145 $generated@@309)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) $generated@@309 $generated@@310))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) ($generated@@145 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@312) $generated@@71) (= (type $generated@@313) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@314) $generated@@89)) (and (and ($generated@@146 $generated@@313) (and (not (= $generated@@314 $generated@@147)) (= ($generated@@148 $generated@@314) ($generated@@145 $generated@@312)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) $generated@@312 $generated@@313))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) ($generated@@145 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@71) (= (type $generated@@316) $generated@@89)) (= ($generated@@167 $generated@@316 ($generated@@169 $generated@@315))  (and ($generated@@167 $generated@@316 ($generated@@145 $generated@@315)) (not (= $generated@@316 $generated@@147)))))
 :pattern ( ($generated@@167 $generated@@316 ($generated@@169 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@150)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@71) (= (type $generated@@321) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@86 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@322) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@323) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@324) $generated@@150)) (= (type $generated@@325) $generated@@71)) ($generated@@160 $generated@@322 $generated@@323)) ($generated@@278 $generated@@324 $generated@@325 $generated@@322)) ($generated@@278 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@160 $generated@@322 $generated@@323) ($generated@@278 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@326) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@327) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@329) $generated@@71)) ($generated@@160 $generated@@326 $generated@@327)) ($generated@@86 $generated@@328 $generated@@329 $generated@@326)) ($generated@@86 $generated@@328 $generated@@329 $generated@@327))
 :pattern ( ($generated@@160 $generated@@326 $generated@@327) ($generated@@86 $generated@@328 $generated@@329 $generated@@326))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@88 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@91 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@88 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@93 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@78)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@71) (and (= ($generated@@82 ($generated@@145 $generated@@338)) $generated@@65) (= ($generated@@336 ($generated@@145 $generated@@338)) $generated@@68)))
 :pattern ( ($generated@@145 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@71) (and (= ($generated@@82 ($generated@@169 $generated@@339)) $generated@@66) (= ($generated@@336 ($generated@@169 $generated@@339)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 20)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@88 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 21)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@88 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@378) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@376 $generated@@377 $generated@@378)) (and ($generated@@160 $generated@@377 $generated@@378) (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@74 (type $generated@@380))))
 (=> (and (and (= (type $generated@@379) $generated@@89) (= (type $generated@@380) ($generated@@73 $generated@@381))) (not ($generated@@254 $generated@@380))) (= ($generated@@95 ($generated@@93 $generated@@377 $generated@@379) $generated@@380) ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))
))))
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@91 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@88 $generated@@383 $generated@@2)) (= ($generated@@190 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (and (<= 0 ($generated ($generated@@93 $generated@@382 $generated@@384))) (<= ($generated ($generated@@93 $generated@@382 $generated@@384)) ($generated@@330 $generated@@382))))
 :pattern ( ($generated@@93 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@190 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@71) (= (type $generated@@386) $generated@@89)) (= ($generated@@167 $generated@@386 ($generated@@145 $generated@@385))  (or (= $generated@@386 $generated@@147) (= ($generated@@148 $generated@@386) ($generated@@145 $generated@@385)))))
 :pattern ( ($generated@@167 $generated@@386 ($generated@@145 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@344 (type $generated@@387))))
(let (($generated@@389 ($generated@@343 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@342 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@341 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@340 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@344 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@88 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@344 (type $generated@@394))))
(let (($generated@@396 ($generated@@343 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@342 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@341 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@93 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@362 (type $generated@@398))))
(let (($generated@@400 ($generated@@361 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@360 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@359 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@358 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@362 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@88 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@362 (type $generated@@405))))
(let (($generated@@407 ($generated@@361 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@360 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@359 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@93 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@410) $generated@@71)) (= ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@409 $generated@@411)))) ($generated@@149 $generated@@411 $generated@@410))
 :pattern ( ($generated@@93 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@413) $generated@@71)) (= (type $generated@@414) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@150) ($generated@@0 ($generated@@93 $generated@@412 $generated@@415))) ($generated@@278 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@93 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@417) $generated@@71)) (= (type $generated@@418) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@0 ($generated@@93 $generated@@416 $generated@@419))) ($generated@@278 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@93 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@93 ($generated@@331 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@93 ($generated@@331 $generated@@421) $generated@@420)))
)))
(assert  (and (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@422 $generated@@425)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@422 $generated@@425))
)) (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@423 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@423 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@344 (type $generated@@428))))
(let (($generated@@430 ($generated@@343 (type $generated@@428))))
(= (type ($generated@@424 $generated@@428)) ($generated@@88 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@424 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@432) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432)))) (= ($generated@@93 ($generated@@424 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@432))))))
 :pattern ( ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@362 (type $generated@@436))))
(let (($generated@@438 ($generated@@361 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@88 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@440) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440)))) (= ($generated@@93 ($generated@@434 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@440))))))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@343 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@342 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@93 ($generated@@391 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@441) $generated@@445))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@361 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@360 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@93 ($generated@@402 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@446) $generated@@450))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@93 ($generated@@402 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@71)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@455) $generated@@71)) (= (type $generated@@456) $generated@@71)) (= (type $generated@@457) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))) (and ($generated@@278 ($generated@@93 ($generated@@424 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@278 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@454) $generated@@458))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@71)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@463) $generated@@71)) (= (type $generated@@464) $generated@@71)) (= (type $generated@@465) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))) (and ($generated@@278 ($generated@@93 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@278 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@467) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@468) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@469) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@467 $generated@@469))) (and ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))) ($generated@@160 $generated@@467 $generated@@469))
 :pattern ( ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@88 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@362 (type $generated@@472))))
(let (($generated@@474 ($generated@@361 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@360 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@359 $generated@@474 $generated@@473)) (= ($generated@@358 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@358 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@362 (type $generated@@475))))
(let (($generated@@477 ($generated@@361 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@360 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@359 $generated@@477 $generated@@476)) (= ($generated@@402 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@402 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@362 (type $generated@@478))))
(let (($generated@@480 ($generated@@361 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@360 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@359 $generated@@480 $generated@@479)) (= ($generated@@433 $generated@@478) ($generated@@470 $generated@@150))))))
 :pattern ( ($generated@@433 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@344 (type $generated@@481))))
(let (($generated@@483 ($generated@@343 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@342 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@341 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@150) (= (type $generated@@485) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@422 $generated@@481) ($generated@@317 ($generated@@255 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@422 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@362 (type $generated@@486))))
(let (($generated@@488 ($generated@@361 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@360 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@359 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@150) (= (type $generated@@490) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@433 $generated@@486) ($generated@@317 ($generated@@255 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@433 $generated@@486))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@77)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@T) ) (!  (=> (and (= (type $generated@@493) $generated@@77) (= (type $generated@@494) $generated@@75)) (and (= ($generated@@491 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@493) (= ($generated@@84 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@494)))
 :pattern ( ($generated@@250 $generated@@495 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@150) ($generated@@149 $generated@@496 $generated@@46)) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@496)) $generated@@496) ($generated@@167 ($generated@@423 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@149 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@150) ($generated@@149 $generated@@497 $generated@@47)) (and (= ($generated@@317 ($generated@@423 $generated@@3 $generated@@497)) $generated@@497) ($generated@@167 ($generated@@423 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@149 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@150) ($generated@@149 $generated@@498 $generated@@44)) (and (= ($generated@@317 ($generated@@423 $generated@@4 $generated@@498)) $generated@@498) ($generated@@167 ($generated@@423 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@149 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 22))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) ($generated@@149 $generated@@500 $generated@@45)) (and (= ($generated@@317 ($generated@@423 $generated@@499 $generated@@500)) $generated@@500) ($generated@@167 ($generated@@423 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@149 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@71) (= ($generated@@149 ($generated@@317 $generated@@501) $generated@@502) ($generated@@167 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@149 ($generated@@317 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@91 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@88 $generated@@504 $generated@@2)) (<= 0 ($generated@@330 $generated@@503))))
 :pattern ( ($generated@@330 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@304 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@303 $generated@@506)) (<= 0 ($generated@@302 $generated@@505))))
 :pattern ( ($generated@@302 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@71)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@71) (= (type $generated@@510) $generated@@71)) (= ($generated@@507 ($generated@@451 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@451 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@71)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@71) (= (type $generated@@514) $generated@@71)) (= ($generated@@511 ($generated@@451 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@451 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@71) (= (type $generated@@516) $generated@@71)) (= ($generated@@82 ($generated@@451 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@71)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@71) (= (type $generated@@520) $generated@@71)) (= ($generated@@517 ($generated@@459 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@459 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@71)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@71) (= (type $generated@@524) $generated@@71)) (= ($generated@@521 ($generated@@459 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@71) (= (type $generated@@526) $generated@@71)) (= ($generated@@82 ($generated@@459 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@150)) (= ($generated@@295 ($generated@@255 $generated@@527 $generated@@528)) $generated@@62))
 :pattern ( ($generated@@255 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@71)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@71) (= (type $generated@@532) $generated@@71)) (= ($generated@@529 ($generated@@175 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@175 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@71) (= (type $generated@@536) $generated@@71)) (= ($generated@@533 ($generated@@175 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@175 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@150)) (= ($generated@@183 ($generated@@255 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@255 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@150)) (= ($generated@@184 ($generated@@255 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@255 $generated@@539 $generated@@540))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@543))
)) (forall (($generated@@544 T@U) ($generated@@545 Int) ) (! (let (($generated@@546 ($generated@@304 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544 $generated@@545)) $generated@@546))
 :pattern ( ($generated@@542 $generated@@544 $generated@@545))
))))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@303 $generated@@150)) (= (type $generated@@548) $generated@@71)) (= (type $generated@@549) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549) (forall (($generated@@550 Int) ) (!  (=> (and (<= 0 $generated@@550) (< $generated@@550 ($generated@@302 $generated@@547))) ($generated@@278 ($generated@@542 $generated@@547 $generated@@550) $generated@@548 $generated@@549))
 :pattern ( ($generated@@542 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@551 ($generated@@87 $generated@@552)) $generated@@552)
 :pattern ( ($generated@@87 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@71) (= ($generated@@553 ($generated@@264 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@264 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@71) (= ($generated@@82 ($generated@@264 $generated@@556)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@71)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@71) (= ($generated@@557 ($generated@@269 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@269 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@71) (= ($generated@@82 ($generated@@269 $generated@@560)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@71)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@71) (= ($generated@@561 ($generated@@189 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@189 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@71) (= ($generated@@82 ($generated@@189 $generated@@564)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@71)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@71) (= ($generated@@565 ($generated@@541 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@541 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@71) (= ($generated@@82 ($generated@@541 $generated@@568)) $generated@@57))
 :pattern ( ($generated@@541 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@71)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@71) (= ($generated@@569 ($generated@@145 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@145 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@71)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@71) (= ($generated@@572 ($generated@@169 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@169 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@423 $generated@@576 ($generated@@317 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@317 $generated@@575))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@71) (= (type $generated@@578) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@579) $generated@@89)) (and ($generated@@146 $generated@@578) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60)))) ($generated@@278 ($generated@@285 $generated@@577 $generated@@579) $generated@@577 $generated@@578))
 :pattern ( ($generated@@285 $generated@@577 $generated@@579) ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60))
))))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@71) (= (type $generated@@581) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@582) $generated@@89)) (and ($generated@@146 $generated@@581) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60)))) ($generated@@278 ($generated@@290 $generated@@580 $generated@@582) $generated@@580 $generated@@581))
 :pattern ( ($generated@@290 $generated@@580 $generated@@582) ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60))
))))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@584) $generated@@71)) (= (type $generated@@585) $generated@@71)) (= ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))) (and ($generated@@149 ($generated@@93 ($generated@@424 $generated@@583) $generated@@586) $generated@@585) ($generated@@149 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@583) $generated@@586))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@71)) (= (type $generated@@589) $generated@@71)) (= ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))) (and ($generated@@149 ($generated@@93 ($generated@@434 $generated@@587) $generated@@590) $generated@@589) ($generated@@149 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@587) $generated@@590))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@150)) (< ($generated@@591 $generated@@593) ($generated@@592 ($generated@@255 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@255 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@150) (= (type $generated@@596) $generated@@150)) (< ($generated@@591 $generated@@596) ($generated@@592 ($generated@@255 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@255 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@150) (= (type $generated@@598) $generated@@71)) (= (type $generated@@599) $generated@@71)) ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599))) (and (= ($generated@@317 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597)) $generated@@597) ($generated@@167 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597) ($generated@@451 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@150) (= (type $generated@@601) $generated@@71)) (= (type $generated@@602) $generated@@71)) ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602))) (and (= ($generated@@317 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600)) $generated@@600) ($generated@@167 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600) ($generated@@459 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@71) (= (type $generated@@604) $generated@@71)) (= (type $generated@@605) $generated@@150)) ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604))) (and (= ($generated@@317 ($generated@@423 $generated@@176 $generated@@605)) $generated@@605) ($generated@@167 ($generated@@423 $generated@@176 $generated@@605) ($generated@@175 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@93 ($generated@@470 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@93 ($generated@@470 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@71) (= (type $generated@@609) $generated@@71)) (and (= ($generated@@82 ($generated@@175 $generated@@608 $generated@@609)) $generated@@63) (= ($generated@@336 ($generated@@175 $generated@@608 $generated@@609)) $generated@@67)))
 :pattern ( ($generated@@175 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@176) (= ($generated@@591 ($generated@@317 $generated@@610)) ($generated@@592 $generated@@610)))
 :pattern ( ($generated@@591 ($generated@@317 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@150) ($generated@@149 $generated@@611 ($generated@@87 0))) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@611)) $generated@@611) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@611) ($generated@@87 0))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@87 0)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@150) (= (type $generated@@613) $generated@@71)) ($generated@@149 $generated@@612 ($generated@@264 $generated@@613))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612)) $generated@@612) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612) ($generated@@264 $generated@@613))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@264 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@150) (= (type $generated@@615) $generated@@71)) ($generated@@149 $generated@@614 ($generated@@269 $generated@@615))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614)) $generated@@614) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614) ($generated@@269 $generated@@615))))
 :pattern ( ($generated@@149 $generated@@614 ($generated@@269 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@150) (= (type $generated@@617) $generated@@71)) ($generated@@149 $generated@@616 ($generated@@189 $generated@@617))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616)) $generated@@616) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616) ($generated@@189 $generated@@617))))
 :pattern ( ($generated@@149 $generated@@616 ($generated@@189 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@150) (= (type $generated@@619) $generated@@71)) ($generated@@149 $generated@@618 ($generated@@541 $generated@@619))) (and (= ($generated@@317 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618)) $generated@@618) ($generated@@167 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618) ($generated@@541 $generated@@619))))
 :pattern ( ($generated@@149 $generated@@618 ($generated@@541 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@71) (= (type $generated@@621) $generated@@150)) ($generated@@149 $generated@@621 ($generated@@145 $generated@@620))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@621)) $generated@@621) ($generated@@167 ($generated@@423 $generated@@89 $generated@@621) ($generated@@145 $generated@@620))))
 :pattern ( ($generated@@149 $generated@@621 ($generated@@145 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@71) (= (type $generated@@623) $generated@@150)) ($generated@@149 $generated@@623 ($generated@@169 $generated@@622))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@623)) $generated@@623) ($generated@@167 ($generated@@423 $generated@@89 $generated@@623) ($generated@@169 $generated@@622))))
 :pattern ( ($generated@@149 $generated@@623 ($generated@@169 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (=> (and (and (and (= (type $generated@@624) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@625) $generated@@89)) (= (type $generated@@626) ($generated@@73 $generated@@628))) ($generated@@146 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))) ($generated@@160 $generated@@624 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@630) $generated@@71)) (= (type $generated@@631) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@629 $generated@@632)))) ($generated@@278 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@93 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@176) (= (type $generated@@634) $generated@@71)) (= (type $generated@@635) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@635) (and ($generated@@174 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@71) ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@176) (= (type $generated@@638) $generated@@71)) (= (type $generated@@639) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@639) (and ($generated@@174 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@71) ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@150) (= (type $generated@@642) $generated@@150)) (= ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)) ($generated@@274 ($generated@@255 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@317 ($generated@@274 $generated@@643)) ($generated@@274 ($generated@@317 $generated@@643)))
 :pattern ( ($generated@@317 ($generated@@274 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@304 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@303 $generated@@645)) (= ($generated@@302 $generated@@644) 0)) (= $generated@@644 ($generated@@301 $generated@@645))))
 :pattern ( ($generated@@302 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@88 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@330 $generated@@646) ($generated ($generated@@93 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@651) $generated@@2)) ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@653) $generated@@3)) ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@655) $generated@@4)) ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@657) $generated@@499)) ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@659) $generated@@150)) ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@303 $generated@@150)) (= (type $generated@@661) $generated@@71)) (= ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)) (forall (($generated@@662 Int) ) (!  (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@302 $generated@@660))) ($generated@@149 ($generated@@542 $generated@@660 $generated@@662) $generated@@661))
 :pattern ( ($generated@@542 $generated@@660 $generated@@662))
))))
 :pattern ( ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 Int) ) (!  (=> (= (type $generated@@664) ($generated@@303 $generated@@150)) (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@302 $generated@@664))) (< ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))) ($generated@@663 $generated@@664))))
 :pattern ( ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@667) $generated@@71)) (= (type $generated@@668) $generated@@71)) ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668))) (and (and ($generated@@167 ($generated@@340 $generated@@666) ($generated@@264 $generated@@667)) ($generated@@167 ($generated@@391 $generated@@666) ($generated@@264 $generated@@668))) ($generated@@167 ($generated@@422 $generated@@666) ($generated@@264 ($generated@@175 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@670) $generated@@71)) (= (type $generated@@671) $generated@@71)) ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671))) (and (and ($generated@@167 ($generated@@358 $generated@@669) ($generated@@269 $generated@@670)) ($generated@@167 ($generated@@402 $generated@@669) ($generated@@269 $generated@@671))) ($generated@@167 ($generated@@433 $generated@@669) ($generated@@269 ($generated@@175 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@2) ($generated@@167 $generated@@672 $generated@@46))
 :pattern ( ($generated@@167 $generated@@672 $generated@@46))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@3) ($generated@@167 $generated@@673 $generated@@47))
 :pattern ( ($generated@@167 $generated@@673 $generated@@47))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@4) ($generated@@167 $generated@@674 $generated@@44))
 :pattern ( ($generated@@167 $generated@@674 $generated@@44))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@499) ($generated@@167 $generated@@675 $generated@@45))
 :pattern ( ($generated@@167 $generated@@675 $generated@@45))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@150) ($generated@@167 $generated@@676 $generated@@48))
 :pattern ( ($generated@@167 $generated@@676 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Bool)
(declare-fun $generated@@680 () Bool)
(declare-fun $generated@@681 () Bool)
(declare-fun $generated@@682 (T@U) Bool)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(assert  (and (and (and (and (= (type $generated@@677) ($generated@@196 $generated@@89 $generated@@4)) (= (type $generated@@678) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@683) $generated@@150)) (= (type $generated@@684) $generated@@71)) (= (type $generated@@685) $generated@@89)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@686  (=> (= $generated@@677 ($generated@@195 $generated@@147 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) $generated@@679) (=> $generated@@679 (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@680) (=> $generated@@680 (=> (= (ControlFlow 0 2) (- 0 1)) $generated@@681)))))))))
(let (($generated@@687  (=> (and (and (and ($generated@@146 $generated@@678) ($generated@@682 $generated@@678)) (and ($generated@@149 $generated@@683 $generated@@684) ($generated@@278 $generated@@683 $generated@@684 $generated@@678))) (and (and (not (= $generated@@685 $generated@@147)) ($generated@@167 $generated@@685 ($generated@@169 $generated@@684))) (and (= 1 $generated@@284) (= (ControlFlow 0 6) 2)))) $generated@@686)))
$generated@@687)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@T T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Int)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@376 (T@U T@U) Bool)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@T T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U Int) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@663 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@73 $generated@@80))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@72)) (= ($generated@@1 $generated@@77) 11)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@78) 12)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@75)) (= (type $generated@@70) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (= ($generated@@81 $generated@@60) 0))
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@72)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@75)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 13)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@74 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 15)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@71)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@150) 16) (= (type $generated@@144) ($generated@@73 $generated@@150))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@145 $generated@@151)) $generated@@71)
 :pattern ( ($generated@@145 $generated@@151))
))) (= (type $generated@@147) $generated@@89)) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@148 $generated@@152)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@71) (= (type $generated@@154) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@155) $generated@@89)) (and ($generated@@146 $generated@@154) (and (not (= $generated@@155 $generated@@147)) (= ($generated@@148 $generated@@155) ($generated@@145 $generated@@153))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) $generated@@153))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@154 $generated@@155) $generated@@144) ($generated@@145 $generated@@153))
)))
(assert (= (type $generated@@156) ($generated@@73 $generated@@150)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@71) (= (type $generated@@158) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@159) $generated@@89)) (and ($generated@@146 $generated@@158) (and (not (= $generated@@159 $generated@@147)) (= ($generated@@148 $generated@@159) ($generated@@145 $generated@@157))))) ($generated@@149 ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) $generated@@157))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@158 $generated@@159) $generated@@156) ($generated@@145 $generated@@157))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@162) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@160 $generated@@161 $generated@@162)) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@89) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@161 $generated@@163) $generated@@60))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60)))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@162 $generated@@163) $generated@@60))
)))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@71) (= (type $generated@@165) $generated@@89)) (= (type $generated@@166) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166)  (or (= $generated@@165 $generated@@147) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@165 ($generated@@145 $generated@@164) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@87 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@87 0)))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@169 $generated@@170)) $generated@@71)
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@71) (= (type $generated@@172) $generated@@89)) (= (type $generated@@173) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173) ($generated@@86 $generated@@172 ($generated@@145 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@86 $generated@@172 ($generated@@169 $generated@@171) $generated@@173))
)))
(assert  (and (= ($generated@@1 $generated@@176) 17) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@71)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@71) (= (type $generated@@180) $generated@@71)) (= (type $generated@@181) $generated@@176)) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@167 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@150)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@150)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@176) (= (type $generated@@188) $generated@@176)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@71)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@193) $generated@@71)) ($generated@@167 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@167 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 18)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@89 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@74 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@89) (= (type $generated@@244) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@245) ($generated@@73 $generated@@4))) (= (type $generated@@247) $generated@@89)) (= (type $generated@@248) ($generated@@73 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (= ($generated@@81 $generated@@156) 0))
(assert (forall (($generated@@251 T@T) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@73 $generated@@251))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@70) $generated@@156))
(assert ($generated@@254 $generated@@156))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@255 $generated@@256 $generated@@257)) $generated@@176)
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@258) $generated@@71) (= (type $generated@@259) $generated@@71)) (= (type $generated@@260) $generated@@150)) (= (type $generated@@261) $generated@@150)) (= ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259))  (and ($generated@@149 $generated@@260 $generated@@258) ($generated@@149 $generated@@261 $generated@@259))))
 :pattern ( ($generated@@167 ($generated@@255 $generated@@260 $generated@@261) ($generated@@175 $generated@@258 $generated@@259)))
)))
(assert (= ($generated@@81 $generated@@144) 0))
(assert (= ($generated@@250 $generated@@150 $generated@@64 $generated@@69) $generated@@144))
(assert  (not ($generated@@254 $generated@@144)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@176) (= (type $generated@@263) $generated@@176)) (= ($generated@@182 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@182 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@71)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@267) $generated@@71)) (= ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@150) ($generated@@0 ($generated@@93 $generated@@266 $generated@@268))) ($generated@@149 $generated@@268 $generated@@267))
 :pattern ( ($generated@@93 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@167 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@71)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@272) $generated@@71)) (= ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@150) ($generated@@0 ($generated@@93 $generated@@271 $generated@@273))) ($generated@@149 $generated@@273 $generated@@272))
 :pattern ( ($generated@@93 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@167 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
(= (type ($generated@@274 $generated@@275)) $generated@@276))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@274 $generated@@277) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@71) (= (type $generated@@280) $generated@@71)) (= (type $generated@@281) $generated@@150)) (= (type $generated@@282) $generated@@150)) (= (type $generated@@283) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@146 $generated@@283)) (= ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@86 ($generated@@255 $generated@@281 $generated@@282) ($generated@@175 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287)) $generated@@150)
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@71) (= (type $generated@@289) $generated@@89)) ($generated@@149 ($generated@@285 $generated@@288 $generated@@289) $generated@@288))
 :pattern ( ($generated@@285 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@291 $generated@@292)) $generated@@150)
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@71) (= (type $generated@@294) $generated@@89)) ($generated@@149 ($generated@@290 $generated@@293 $generated@@294) $generated@@293))
 :pattern ( ($generated@@290 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@76)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@176) (= ($generated@@174 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@62)))
 :pattern ( ($generated@@174 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@176) ($generated@@174 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@150) (= (type $generated@@300) $generated@@150)) (= $generated@@298 ($generated@@255 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@174 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 19)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert ($generated@@254 $generated@@60))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (= (type $generated@@309) $generated@@71) (= (type $generated@@310) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@311) $generated@@89)) (and (and ($generated@@146 $generated@@310) (and (not (= $generated@@311 $generated@@147)) (= ($generated@@148 $generated@@311) ($generated@@145 $generated@@309)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) $generated@@309 $generated@@310))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@310 $generated@@311) $generated@@144) ($generated@@145 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (= (type $generated@@312) $generated@@71) (= (type $generated@@313) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@314) $generated@@89)) (and (and ($generated@@146 $generated@@313) (and (not (= $generated@@314 $generated@@147)) (= ($generated@@148 $generated@@314) ($generated@@145 $generated@@312)))) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@60)))) ($generated@@278 ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) $generated@@312 $generated@@313))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@313 $generated@@314) $generated@@156) ($generated@@145 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@71) (= (type $generated@@316) $generated@@89)) (= ($generated@@167 $generated@@316 ($generated@@169 $generated@@315))  (and ($generated@@167 $generated@@316 ($generated@@145 $generated@@315)) (not (= $generated@@316 $generated@@147)))))
 :pattern ( ($generated@@167 $generated@@316 ($generated@@169 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@150)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@71) (= (type $generated@@321) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@86 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@278 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@322) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@323) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@324) $generated@@150)) (= (type $generated@@325) $generated@@71)) ($generated@@160 $generated@@322 $generated@@323)) ($generated@@278 $generated@@324 $generated@@325 $generated@@322)) ($generated@@278 $generated@@324 $generated@@325 $generated@@323))
 :pattern ( ($generated@@160 $generated@@322 $generated@@323) ($generated@@278 $generated@@324 $generated@@325 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@326) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@327) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@329) $generated@@71)) ($generated@@160 $generated@@326 $generated@@327)) ($generated@@86 $generated@@328 $generated@@329 $generated@@326)) ($generated@@86 $generated@@328 $generated@@329 $generated@@327))
 :pattern ( ($generated@@160 $generated@@326 $generated@@327) ($generated@@86 $generated@@328 $generated@@329 $generated@@326))
)))
(assert (forall (($generated@@332 T@T) ) (! (= (type ($generated@@331 $generated@@332)) ($generated@@88 $generated@@332 $generated@@2))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@91 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@88 $generated@@334 $generated@@2)) (and (= (= ($generated@@330 $generated@@333) 0) (= $generated@@333 ($generated@@331 $generated@@334))) (=> (not (= ($generated@@330 $generated@@333) 0)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) (< 0 ($generated ($generated@@93 $generated@@333 $generated@@335))))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@78)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@71) (and (= ($generated@@82 ($generated@@145 $generated@@338)) $generated@@65) (= ($generated@@336 ($generated@@145 $generated@@338)) $generated@@68)))
 :pattern ( ($generated@@145 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@71) (and (= ($generated@@82 ($generated@@169 $generated@@339)) $generated@@66) (= ($generated@@336 ($generated@@169 $generated@@339)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 20)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@88 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@93 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 21)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@88 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@93 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@378) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@376 $generated@@377 $generated@@378)) (and ($generated@@160 $generated@@377 $generated@@378) (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@74 (type $generated@@380))))
 (=> (and (and (= (type $generated@@379) $generated@@89) (= (type $generated@@380) ($generated@@73 $generated@@381))) (not ($generated@@254 $generated@@380))) (= ($generated@@95 ($generated@@93 $generated@@377 $generated@@379) $generated@@380) ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))))
 :pattern ( ($generated@@95 ($generated@@93 $generated@@378 $generated@@379) $generated@@380))
))))
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@91 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@88 $generated@@383 $generated@@2)) (= ($generated@@190 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (and (<= 0 ($generated ($generated@@93 $generated@@382 $generated@@384))) (<= ($generated ($generated@@93 $generated@@382 $generated@@384)) ($generated@@330 $generated@@382))))
 :pattern ( ($generated@@93 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@190 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@71) (= (type $generated@@386) $generated@@89)) (= ($generated@@167 $generated@@386 ($generated@@145 $generated@@385))  (or (= $generated@@386 $generated@@147) (= ($generated@@148 $generated@@386) ($generated@@145 $generated@@385)))))
 :pattern ( ($generated@@167 $generated@@386 ($generated@@145 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@344 (type $generated@@387))))
(let (($generated@@389 ($generated@@343 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@342 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@341 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@340 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@344 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@88 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@344 (type $generated@@394))))
(let (($generated@@396 ($generated@@343 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@342 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@341 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@93 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@362 (type $generated@@398))))
(let (($generated@@400 ($generated@@361 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@360 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@359 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@358 $generated@@398))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@362 (type $generated@@403))))
(= (type ($generated@@402 $generated@@403)) ($generated@@88 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@362 (type $generated@@405))))
(let (($generated@@407 ($generated@@361 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@360 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@359 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@406) ($generated@@0 ($generated@@93 ($generated@@402 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@402 $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@410) $generated@@71)) (= ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@409 $generated@@411)))) ($generated@@149 $generated@@411 $generated@@410))
 :pattern ( ($generated@@93 $generated@@409 $generated@@411))
))))
 :pattern ( ($generated@@167 $generated@@409 ($generated@@189 $generated@@410)))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@413) $generated@@71)) (= (type $generated@@414) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@150) ($generated@@0 ($generated@@93 $generated@@412 $generated@@415))) ($generated@@278 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@93 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@86 $generated@@412 ($generated@@264 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@88 $generated@@150 $generated@@4)) (= (type $generated@@417) $generated@@71)) (= (type $generated@@418) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@0 ($generated@@93 $generated@@416 $generated@@419))) ($generated@@278 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@93 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@86 $generated@@416 ($generated@@269 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(= ($generated ($generated@@93 ($generated@@331 $generated@@421) $generated@@420)) 0))
 :pattern ( (let (($generated@@421 (type $generated@@420)))
($generated@@93 ($generated@@331 $generated@@421) $generated@@420)))
)))
(assert  (and (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@422 $generated@@425)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@422 $generated@@425))
)) (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@423 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@423 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@344 (type $generated@@428))))
(let (($generated@@430 ($generated@@343 (type $generated@@428))))
(= (type ($generated@@424 $generated@@428)) ($generated@@88 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@424 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@432) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432)))) (= ($generated@@93 ($generated@@424 $generated@@431) ($generated@@183 ($generated@@423 $generated@@176 $generated@@432))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@432))))))
 :pattern ( ($generated@@93 ($generated@@422 $generated@@431) $generated@@432))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@88 $generated@@150 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@362 (type $generated@@436))))
(let (($generated@@438 ($generated@@361 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@88 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@440) $generated@@150)) (= ($generated@@0 ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440)))) (= ($generated@@93 ($generated@@434 $generated@@439) ($generated@@183 ($generated@@423 $generated@@176 $generated@@440))) ($generated@@184 ($generated@@423 $generated@@176 $generated@@440))))))
 :pattern ( ($generated@@93 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@343 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@342 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@93 ($generated@@391 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@93 ($generated@@340 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@441) $generated@@445))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@361 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@360 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@93 ($generated@@402 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@93 ($generated@@358 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@446) $generated@@450))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@93 ($generated@@402 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@71)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@455) $generated@@71)) (= (type $generated@@456) $generated@@71)) (= (type $generated@@457) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))) (and ($generated@@278 ($generated@@93 ($generated@@424 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@278 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@454) $generated@@458))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@86 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@71)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@463) $generated@@71)) (= (type $generated@@464) $generated@@71)) (= (type $generated@@465) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))) (and ($generated@@278 ($generated@@93 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@278 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@86 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@467) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@468) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@469) ($generated@@88 $generated@@89 $generated@@90))) (not (= $generated@@467 $generated@@469))) (and ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))) ($generated@@160 $generated@@467 $generated@@469))
 :pattern ( ($generated@@160 $generated@@467 $generated@@468) ($generated@@160 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@88 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@362 (type $generated@@472))))
(let (($generated@@474 ($generated@@361 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@360 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@359 $generated@@474 $generated@@473)) (= ($generated@@358 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@358 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@362 (type $generated@@475))))
(let (($generated@@477 ($generated@@361 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@360 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@359 $generated@@477 $generated@@476)) (= ($generated@@402 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@402 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@362 (type $generated@@478))))
(let (($generated@@480 ($generated@@361 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@360 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@359 $generated@@480 $generated@@479)) (= ($generated@@433 $generated@@478) ($generated@@470 $generated@@150))))))
 :pattern ( ($generated@@433 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@344 (type $generated@@481))))
(let (($generated@@483 ($generated@@343 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@342 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@341 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@150) (= (type $generated@@485) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@422 $generated@@481) ($generated@@317 ($generated@@255 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@422 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@362 (type $generated@@486))))
(let (($generated@@488 ($generated@@361 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@360 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@359 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@150) (= (type $generated@@490) $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@433 $generated@@486) ($generated@@317 ($generated@@255 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@433 $generated@@486))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@77)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@T) ) (!  (=> (and (= (type $generated@@493) $generated@@77) (= (type $generated@@494) $generated@@75)) (and (= ($generated@@491 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@493) (= ($generated@@84 ($generated@@250 $generated@@495 $generated@@493 $generated@@494)) $generated@@494)))
 :pattern ( ($generated@@250 $generated@@495 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@150) ($generated@@149 $generated@@496 $generated@@46)) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@496)) $generated@@496) ($generated@@167 ($generated@@423 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@149 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@150) ($generated@@149 $generated@@497 $generated@@47)) (and (= ($generated@@317 ($generated@@423 $generated@@3 $generated@@497)) $generated@@497) ($generated@@167 ($generated@@423 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@149 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@150) ($generated@@149 $generated@@498 $generated@@44)) (and (= ($generated@@317 ($generated@@423 $generated@@4 $generated@@498)) $generated@@498) ($generated@@167 ($generated@@423 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@149 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 22))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@150) ($generated@@149 $generated@@500 $generated@@45)) (and (= ($generated@@317 ($generated@@423 $generated@@499 $generated@@500)) $generated@@500) ($generated@@167 ($generated@@423 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@149 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@71) (= ($generated@@149 ($generated@@317 $generated@@501) $generated@@502) ($generated@@167 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@149 ($generated@@317 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@91 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@88 $generated@@504 $generated@@2)) (<= 0 ($generated@@330 $generated@@503))))
 :pattern ( ($generated@@330 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@304 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@303 $generated@@506)) (<= 0 ($generated@@302 $generated@@505))))
 :pattern ( ($generated@@302 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@71)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@71) (= (type $generated@@510) $generated@@71)) (= ($generated@@507 ($generated@@451 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@451 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@71)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@71) (= (type $generated@@514) $generated@@71)) (= ($generated@@511 ($generated@@451 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@451 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@71) (= (type $generated@@516) $generated@@71)) (= ($generated@@82 ($generated@@451 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@451 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@71)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@71) (= (type $generated@@520) $generated@@71)) (= ($generated@@517 ($generated@@459 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@459 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@71)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@71) (= (type $generated@@524) $generated@@71)) (= ($generated@@521 ($generated@@459 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@459 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@71) (= (type $generated@@526) $generated@@71)) (= ($generated@@82 ($generated@@459 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@459 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@150)) (= ($generated@@295 ($generated@@255 $generated@@527 $generated@@528)) $generated@@62))
 :pattern ( ($generated@@255 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@71)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@71) (= (type $generated@@532) $generated@@71)) (= ($generated@@529 ($generated@@175 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@175 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@71) (= (type $generated@@536) $generated@@71)) (= ($generated@@533 ($generated@@175 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@175 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@150)) (= ($generated@@183 ($generated@@255 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@255 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@150)) (= ($generated@@184 ($generated@@255 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@255 $generated@@539 $generated@@540))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@543))
)) (forall (($generated@@544 T@U) ($generated@@545 Int) ) (! (let (($generated@@546 ($generated@@304 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544 $generated@@545)) $generated@@546))
 :pattern ( ($generated@@542 $generated@@544 $generated@@545))
))))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@303 $generated@@150)) (= (type $generated@@548) $generated@@71)) (= (type $generated@@549) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549) (forall (($generated@@550 Int) ) (!  (=> (and (<= 0 $generated@@550) (< $generated@@550 ($generated@@302 $generated@@547))) ($generated@@278 ($generated@@542 $generated@@547 $generated@@550) $generated@@548 $generated@@549))
 :pattern ( ($generated@@542 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@86 $generated@@547 ($generated@@541 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@551 ($generated@@87 $generated@@552)) $generated@@552)
 :pattern ( ($generated@@87 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@71) (= ($generated@@553 ($generated@@264 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@264 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@71) (= ($generated@@82 ($generated@@264 $generated@@556)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@71)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@71) (= ($generated@@557 ($generated@@269 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@269 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@71) (= ($generated@@82 ($generated@@269 $generated@@560)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@71)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@71) (= ($generated@@561 ($generated@@189 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@189 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@71) (= ($generated@@82 ($generated@@189 $generated@@564)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@71)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@71) (= ($generated@@565 ($generated@@541 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@541 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@71) (= ($generated@@82 ($generated@@541 $generated@@568)) $generated@@57))
 :pattern ( ($generated@@541 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@71)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@71) (= ($generated@@569 ($generated@@145 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@145 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@71)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@71) (= ($generated@@572 ($generated@@169 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@169 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@423 $generated@@576 ($generated@@317 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@317 $generated@@575))
)))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@71) (= (type $generated@@578) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@579) $generated@@89)) (and ($generated@@146 $generated@@578) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60)))) ($generated@@278 ($generated@@285 $generated@@577 $generated@@579) $generated@@577 $generated@@578))
 :pattern ( ($generated@@285 $generated@@577 $generated@@579) ($generated@@95 ($generated@@93 $generated@@578 $generated@@579) $generated@@60))
))))
(assert  (=> (< 0 $generated@@284) (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@71) (= (type $generated@@581) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@582) $generated@@89)) (and ($generated@@146 $generated@@581) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60)))) ($generated@@278 ($generated@@290 $generated@@580 $generated@@582) $generated@@580 $generated@@581))
 :pattern ( ($generated@@290 $generated@@580 $generated@@582) ($generated@@95 ($generated@@93 $generated@@581 $generated@@582) $generated@@60))
))))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@584) $generated@@71)) (= (type $generated@@585) $generated@@71)) (= ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))) (and ($generated@@149 ($generated@@93 ($generated@@424 $generated@@583) $generated@@586) $generated@@585) ($generated@@149 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@93 ($generated@@424 $generated@@583) $generated@@586))
 :pattern ( ($generated@@93 ($generated@@340 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@167 $generated@@583 ($generated@@451 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@71)) (= (type $generated@@589) $generated@@71)) (= ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@150) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))) (and ($generated@@149 ($generated@@93 ($generated@@434 $generated@@587) $generated@@590) $generated@@589) ($generated@@149 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@93 ($generated@@434 $generated@@587) $generated@@590))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@167 $generated@@587 ($generated@@459 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@150)) (< ($generated@@591 $generated@@593) ($generated@@592 ($generated@@255 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@255 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@150) (= (type $generated@@596) $generated@@150)) (< ($generated@@591 $generated@@596) ($generated@@592 ($generated@@255 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@255 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@150) (= (type $generated@@598) $generated@@71)) (= (type $generated@@599) $generated@@71)) ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599))) (and (= ($generated@@317 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597)) $generated@@597) ($generated@@167 ($generated@@423 ($generated@@342 $generated@@150 $generated@@150) $generated@@597) ($generated@@451 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@149 $generated@@597 ($generated@@451 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@150) (= (type $generated@@601) $generated@@71)) (= (type $generated@@602) $generated@@71)) ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602))) (and (= ($generated@@317 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600)) $generated@@600) ($generated@@167 ($generated@@423 ($generated@@360 $generated@@150 $generated@@150) $generated@@600) ($generated@@459 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@149 $generated@@600 ($generated@@459 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@71) (= (type $generated@@604) $generated@@71)) (= (type $generated@@605) $generated@@150)) ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604))) (and (= ($generated@@317 ($generated@@423 $generated@@176 $generated@@605)) $generated@@605) ($generated@@167 ($generated@@423 $generated@@176 $generated@@605) ($generated@@175 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@149 $generated@@605 ($generated@@175 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@93 ($generated@@470 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@93 ($generated@@470 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@71) (= (type $generated@@609) $generated@@71)) (and (= ($generated@@82 ($generated@@175 $generated@@608 $generated@@609)) $generated@@63) (= ($generated@@336 ($generated@@175 $generated@@608 $generated@@609)) $generated@@67)))
 :pattern ( ($generated@@175 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@176) (= ($generated@@591 ($generated@@317 $generated@@610)) ($generated@@592 $generated@@610)))
 :pattern ( ($generated@@591 ($generated@@317 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@150) ($generated@@149 $generated@@611 ($generated@@87 0))) (and (= ($generated@@317 ($generated@@423 $generated@@2 $generated@@611)) $generated@@611) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@611) ($generated@@87 0))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@87 0)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@150) (= (type $generated@@613) $generated@@71)) ($generated@@149 $generated@@612 ($generated@@264 $generated@@613))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612)) $generated@@612) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@612) ($generated@@264 $generated@@613))))
 :pattern ( ($generated@@149 $generated@@612 ($generated@@264 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@150) (= (type $generated@@615) $generated@@71)) ($generated@@149 $generated@@614 ($generated@@269 $generated@@615))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614)) $generated@@614) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@4) $generated@@614) ($generated@@269 $generated@@615))))
 :pattern ( ($generated@@149 $generated@@614 ($generated@@269 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@150) (= (type $generated@@617) $generated@@71)) ($generated@@149 $generated@@616 ($generated@@189 $generated@@617))) (and (= ($generated@@317 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616)) $generated@@616) ($generated@@167 ($generated@@423 ($generated@@88 $generated@@150 $generated@@2) $generated@@616) ($generated@@189 $generated@@617))))
 :pattern ( ($generated@@149 $generated@@616 ($generated@@189 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@150) (= (type $generated@@619) $generated@@71)) ($generated@@149 $generated@@618 ($generated@@541 $generated@@619))) (and (= ($generated@@317 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618)) $generated@@618) ($generated@@167 ($generated@@423 ($generated@@303 $generated@@150) $generated@@618) ($generated@@541 $generated@@619))))
 :pattern ( ($generated@@149 $generated@@618 ($generated@@541 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@71) (= (type $generated@@621) $generated@@150)) ($generated@@149 $generated@@621 ($generated@@145 $generated@@620))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@621)) $generated@@621) ($generated@@167 ($generated@@423 $generated@@89 $generated@@621) ($generated@@145 $generated@@620))))
 :pattern ( ($generated@@149 $generated@@621 ($generated@@145 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@71) (= (type $generated@@623) $generated@@150)) ($generated@@149 $generated@@623 ($generated@@169 $generated@@622))) (and (= ($generated@@317 ($generated@@423 $generated@@89 $generated@@623)) $generated@@623) ($generated@@167 ($generated@@423 $generated@@89 $generated@@623) ($generated@@169 $generated@@622))))
 :pattern ( ($generated@@149 $generated@@623 ($generated@@169 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (=> (and (and (and (= (type $generated@@624) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@625) $generated@@89)) (= (type $generated@@626) ($generated@@73 $generated@@628))) ($generated@@146 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))) ($generated@@160 $generated@@624 ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@94 $generated@@624 $generated@@625 ($generated@@96 ($generated@@93 $generated@@624 $generated@@625) $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@88 $generated@@150 $generated@@2)) (= (type $generated@@630) $generated@@71)) (= (type $generated@@631) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@150) (< 0 ($generated ($generated@@93 $generated@@629 $generated@@632)))) ($generated@@278 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@93 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@86 $generated@@629 ($generated@@189 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@176) (= (type $generated@@634) $generated@@71)) (= (type $generated@@635) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@635) (and ($generated@@174 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@71) ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@86 $generated@@633 ($generated@@175 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@278 ($generated@@183 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@176) (= (type $generated@@638) $generated@@71)) (= (type $generated@@639) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@146 $generated@@639) (and ($generated@@174 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@71) ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@86 $generated@@637 ($generated@@175 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@278 ($generated@@184 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@150) (= (type $generated@@642) $generated@@150)) (= ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)) ($generated@@274 ($generated@@255 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@255 ($generated@@274 $generated@@641) ($generated@@274 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (! (= ($generated@@317 ($generated@@274 $generated@@643)) ($generated@@274 ($generated@@317 $generated@@643)))
 :pattern ( ($generated@@317 ($generated@@274 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (let (($generated@@645 ($generated@@304 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@303 $generated@@645)) (= ($generated@@302 $generated@@644) 0)) (= $generated@@644 ($generated@@301 $generated@@645))))
 :pattern ( ($generated@@302 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (let (($generated@@649 (type $generated@@647)))
 (=> (and (and (= (type $generated@@646) ($generated@@88 $generated@@649 $generated@@2)) (= (type $generated@@648) $generated@@2)) (<= 0 ($generated $generated@@648))) (= ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)) (+ (- ($generated@@330 $generated@@646) ($generated ($generated@@93 $generated@@646 $generated@@647))) ($generated $generated@@648)))))
 :pattern ( ($generated@@330 ($generated@@94 $generated@@646 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@651) $generated@@2)) ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@86 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@653) $generated@@3)) ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@86 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@655) $generated@@4)) ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@86 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@657) $generated@@499)) ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@86 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@659) $generated@@150)) ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@86 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@303 $generated@@150)) (= (type $generated@@661) $generated@@71)) (= ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)) (forall (($generated@@662 Int) ) (!  (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@302 $generated@@660))) ($generated@@149 ($generated@@542 $generated@@660 $generated@@662) $generated@@661))
 :pattern ( ($generated@@542 $generated@@660 $generated@@662))
))))
 :pattern ( ($generated@@167 $generated@@660 ($generated@@541 $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 Int) ) (!  (=> (= (type $generated@@664) ($generated@@303 $generated@@150)) (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@302 $generated@@664))) (< ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))) ($generated@@663 $generated@@664))))
 :pattern ( ($generated@@592 ($generated@@423 $generated@@176 ($generated@@542 $generated@@664 $generated@@665))))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@342 $generated@@150 $generated@@150)) (= (type $generated@@667) $generated@@71)) (= (type $generated@@668) $generated@@71)) ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668))) (and (and ($generated@@167 ($generated@@340 $generated@@666) ($generated@@264 $generated@@667)) ($generated@@167 ($generated@@391 $generated@@666) ($generated@@264 $generated@@668))) ($generated@@167 ($generated@@422 $generated@@666) ($generated@@264 ($generated@@175 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@167 $generated@@666 ($generated@@451 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@360 $generated@@150 $generated@@150)) (= (type $generated@@670) $generated@@71)) (= (type $generated@@671) $generated@@71)) ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671))) (and (and ($generated@@167 ($generated@@358 $generated@@669) ($generated@@269 $generated@@670)) ($generated@@167 ($generated@@402 $generated@@669) ($generated@@269 $generated@@671))) ($generated@@167 ($generated@@433 $generated@@669) ($generated@@269 ($generated@@175 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@167 $generated@@669 ($generated@@459 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@2) ($generated@@167 $generated@@672 $generated@@46))
 :pattern ( ($generated@@167 $generated@@672 $generated@@46))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@3) ($generated@@167 $generated@@673 $generated@@47))
 :pattern ( ($generated@@167 $generated@@673 $generated@@47))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@4) ($generated@@167 $generated@@674 $generated@@44))
 :pattern ( ($generated@@167 $generated@@674 $generated@@44))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@499) ($generated@@167 $generated@@675 $generated@@45))
 :pattern ( ($generated@@167 $generated@@675 $generated@@45))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@150) ($generated@@167 $generated@@676 $generated@@48))
 :pattern ( ($generated@@167 $generated@@676 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Bool)
(declare-fun $generated@@680 () Bool)
(declare-fun $generated@@681 () Bool)
(declare-fun $generated@@682 (T@U) Bool)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(assert  (and (and (and (and (= (type $generated@@677) ($generated@@196 $generated@@89 $generated@@4)) (= (type $generated@@678) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@683) $generated@@150)) (= (type $generated@@684) $generated@@71)) (= (type $generated@@685) $generated@@89)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@686  (=> (= $generated@@677 ($generated@@195 $generated@@147 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) $generated@@679) (=> $generated@@679 (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@680) (=> $generated@@680 (=> (= (ControlFlow 0 2) (- 0 1)) $generated@@681)))))))))
(let (($generated@@687  (=> (and (and (and ($generated@@146 $generated@@678) ($generated@@682 $generated@@678)) (and ($generated@@149 $generated@@683 $generated@@684) ($generated@@278 $generated@@683 $generated@@684 $generated@@678))) (and (and (not (= $generated@@685 $generated@@147)) ($generated@@167 $generated@@685 ($generated@@169 $generated@@684))) (and (= 0 $generated@@284) (= (ControlFlow 0 6) 2)))) $generated@@686)))
$generated@@687)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@T) T@U)
(declare-fun $generated@@262 (T@U) Int)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@281 (T@T T@T) T@U)
(declare-fun $generated@@282 (T@T T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@319 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@350 () Int)
(declare-fun $generated@@351 () Bool)
(declare-fun $generated@@352 () T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@429 () T@T)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 (T@U Int) T@U)
(declare-fun $generated@@481 (T@U) Int)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@149 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@149 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@250) $generated@@67) (= (type $generated@@251) $generated@@67)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) $generated@@152)) (= (type $generated@@254) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@248 $generated@@254)) (= ($generated@@77 ($generated@@224 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254)  (and ($generated@@249 $generated@@252 $generated@@250 $generated@@254) ($generated@@249 $generated@@253 $generated@@251 $generated@@254))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@71)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@143) (= ($generated@@141 $generated@@257) (= ($generated@@255 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@143) ($generated@@141 $generated@@258)) (exists (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (and (and (= (type $generated@@259) $generated@@152) (= (type $generated@@260) $generated@@152)) (= $generated@@258 ($generated@@224 $generated@@259 $generated@@260)))
 :no-pattern (type $generated@@259)
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
)))
 :pattern ( ($generated@@141 $generated@@258))
)))
(assert  (and (and (forall (($generated@@265 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@265)) 17)) (forall (($generated@@266 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
))) (forall (($generated@@267 T@T) ) (! (= (type ($generated@@261 $generated@@267)) ($generated@@263 $generated@@267))
 :pattern ( ($generated@@261 $generated@@267))
))))
(assert (forall (($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@268)) 0)
 :pattern ( ($generated@@261 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@152)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@67) (= (type $generated@@273) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@249 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@77 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@249 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@T) ) (! (= (type ($generated@@275 $generated@@276)) ($generated@@79 $generated@@276 $generated@@2))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@82 (type $generated@@277))))
 (=> (= (type $generated@@277) ($generated@@79 $generated@@278 $generated@@2)) (and (= (= ($generated@@274 $generated@@277) 0) (= $generated@@277 ($generated@@275 $generated@@278))) (=> (not (= ($generated@@274 $generated@@277) 0)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@278) (< 0 ($generated ($generated@@84 $generated@@277 $generated@@279))))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
))))))
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert  (and (and (and (and (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@285 $generated@@286)) 18)) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@287 $generated@@288)) $generated@@287)
 :pattern ( ($generated@@282 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@282 $generated@@289 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@282 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@283 (type $generated@@291))))
(= (type ($generated@@280 $generated@@291)) ($generated@@79 $generated@@292 $generated@@4)))
 :pattern ( ($generated@@280 $generated@@291))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= (type ($generated@@281 $generated@@293 $generated@@294)) ($generated@@282 $generated@@293 $generated@@294))
 :pattern ( ($generated@@281 $generated@@293 $generated@@294))
))))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@T) ) (! (let (($generated@@297 (type $generated@@295)))
 (not ($generated@@0 ($generated@@84 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295))))
 :pattern ( (let (($generated@@297 (type $generated@@295)))
($generated@@84 ($generated@@280 ($generated@@281 $generated@@297 $generated@@296)) $generated@@295)))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 19)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@79 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@84 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@84 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@82 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@79 $generated@@317 $generated@@2)) (= ($generated@@158 $generated@@316) (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@317) (and (<= 0 ($generated ($generated@@84 $generated@@316 $generated@@318))) (<= ($generated ($generated@@84 $generated@@316 $generated@@318)) ($generated@@274 $generated@@316))))
 :pattern ( ($generated@@84 $generated@@316 $generated@@318))
)))))
 :pattern ( ($generated@@158 $generated@@316))
)))
(assert (forall (($generated@@320 T@T) ($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@152) ($generated@@225 $generated@@322 $generated@@135)) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@322)) $generated@@322) ($generated@@139 ($generated@@319 $generated@@80 $generated@@322) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@322 $generated@@135))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@152) ($generated@@225 $generated@@323 $generated@@221)) (and (= ($generated@@269 ($generated@@319 $generated@@80 $generated@@323)) $generated@@323) ($generated@@139 ($generated@@319 $generated@@80 $generated@@323) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@323 $generated@@221))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@80) (= ($generated@@139 $generated@@324 $generated@@221)  (and ($generated@@139 $generated@@324 $generated@@135) (not (= $generated@@324 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@324 $generated@@221))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@284 (type $generated@@325))))
(let (($generated@@327 ($generated@@283 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@282 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@281 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@84 ($generated@@280 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@280 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@284 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@79 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@284 (type $generated@@332))))
(let (($generated@@334 ($generated@@283 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@282 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@281 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@302 (type $generated@@336))))
(let (($generated@@338 ($generated@@301 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@300 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@299 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@298 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@302 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@79 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@302 (type $generated@@343))))
(let (($generated@@345 ($generated@@301 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@300 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@299 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@84 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@348) $generated@@67)) (= ($generated@@139 $generated@@347 ($generated@@157 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@347 $generated@@349)))) ($generated@@225 $generated@@349 $generated@@348))
 :pattern ( ($generated@@84 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@139 $generated@@347 ($generated@@157 $generated@@348)))
)))
(assert (= (type $generated@@352) $generated@@80))
(assert  (=> (<= 1 $generated@@350) (=> (or $generated@@351 (not (= 1 $generated@@350))) ($generated@@139 $generated@@352 $generated@@221))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@354) $generated@@67)) (= (type $generated@@355) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@353 ($generated@@234 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@152) ($generated@@0 ($generated@@84 $generated@@353 $generated@@356))) ($generated@@249 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@84 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@77 $generated@@353 ($generated@@234 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@358) $generated@@67)) (= (type $generated@@359) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@357 ($generated@@239 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@152) ($generated@@0 ($generated@@84 $generated@@357 $generated@@360))) ($generated@@249 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@84 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@77 $generated@@357 ($generated@@239 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@84 ($generated@@275 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@84 ($generated@@275 $generated@@362) $generated@@361)))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@284 (type $generated@@366))))
(let (($generated@@368 ($generated@@283 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@79 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@370) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@84 ($generated@@280 $generated@@369) ($generated@@150 ($generated@@319 $generated@@143 $generated@@370)))) (= ($generated@@84 ($generated@@364 $generated@@369) ($generated@@150 ($generated@@319 $generated@@143 $generated@@370))) ($generated@@151 ($generated@@319 $generated@@143 $generated@@370))))))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@302 (type $generated@@374))))
(let (($generated@@376 ($generated@@301 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@378) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@84 ($generated@@298 $generated@@377) ($generated@@150 ($generated@@319 $generated@@143 $generated@@378)))) (= ($generated@@84 ($generated@@372 $generated@@377) ($generated@@150 ($generated@@319 $generated@@143 $generated@@378))) ($generated@@151 ($generated@@319 $generated@@143 $generated@@378))))))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@283 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@282 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@84 ($generated@@329 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@84 ($generated@@280 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@84 ($generated@@364 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@379) $generated@@383))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@301 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@300 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@84 ($generated@@340 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@84 ($generated@@298 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@84 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@384) $generated@@388))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@84 ($generated@@340 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@67)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) $generated@@67)) (= (type $generated@@395) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@280 $generated@@392) $generated@@396))) (and ($generated@@249 ($generated@@84 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@249 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@77 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@67)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@400) $generated@@404))) (and ($generated@@249 ($generated@@84 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@249 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@77 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@T) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@79 $generated@@406 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@302 (type $generated@@407))))
(let (($generated@@409 ($generated@@301 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@300 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@299 $generated@@409 $generated@@408)) (= ($generated@@298 $generated@@407) ($generated@@405 $generated@@409))))))
 :pattern ( ($generated@@298 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@302 (type $generated@@410))))
(let (($generated@@412 ($generated@@301 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@300 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@299 $generated@@412 $generated@@411)) (= ($generated@@340 $generated@@410) ($generated@@405 $generated@@411))))))
 :pattern ( ($generated@@340 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@302 (type $generated@@413))))
(let (($generated@@415 ($generated@@301 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@300 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@299 $generated@@415 $generated@@414)) (= ($generated@@371 $generated@@413) ($generated@@405 $generated@@152))))))
 :pattern ( ($generated@@371 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@284 (type $generated@@416))))
(let (($generated@@418 ($generated@@283 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@282 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@281 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@152) (= (type $generated@@420) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@363 $generated@@416) ($generated@@269 ($generated@@224 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@363 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@302 (type $generated@@421))))
(let (($generated@@423 ($generated@@301 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@300 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@299 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@152) (= (type $generated@@425) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@371 $generated@@421) ($generated@@269 ($generated@@224 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@371 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@152) ($generated@@225 $generated@@426 $generated@@46)) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@426)) $generated@@426) ($generated@@139 ($generated@@319 $generated@@2 $generated@@426) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@426 $generated@@46))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@152) ($generated@@225 $generated@@427 $generated@@47)) (and (= ($generated@@269 ($generated@@319 $generated@@3 $generated@@427)) $generated@@427) ($generated@@139 ($generated@@319 $generated@@3 $generated@@427) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@427 $generated@@47))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@152) ($generated@@225 $generated@@428 $generated@@44)) (and (= ($generated@@269 ($generated@@319 $generated@@4 $generated@@428)) $generated@@428) ($generated@@139 ($generated@@319 $generated@@4 $generated@@428) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@428 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@429) 20))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@152) ($generated@@225 $generated@@430 $generated@@45)) (and (= ($generated@@269 ($generated@@319 $generated@@429 $generated@@430)) $generated@@430) ($generated@@139 ($generated@@319 $generated@@429 $generated@@430) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@430 $generated@@45))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@67) (= ($generated@@225 ($generated@@269 $generated@@431) $generated@@432) ($generated@@139 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@225 ($generated@@269 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@82 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@79 $generated@@434 $generated@@2)) (<= 0 ($generated@@274 $generated@@433))))
 :pattern ( ($generated@@274 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@264 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@263 $generated@@436)) (<= 0 ($generated@@262 $generated@@435))))
 :pattern ( ($generated@@262 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@67)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) $generated@@67)) (= ($generated@@437 ($generated@@389 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@389 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@389 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@389 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@75 ($generated@@389 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@67)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@447 ($generated@@397 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@397 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@397 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@75 ($generated@@397 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@152) (= (type $generated@@458) $generated@@152)) (= ($generated@@255 ($generated@@224 $generated@@457 $generated@@458)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@142 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@142 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@142 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@142 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@152) (= (type $generated@@468) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@224 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@152) (= (type $generated@@470) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@224 $generated@@469 $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@473))
)) (forall (($generated@@474 T@U) ($generated@@475 Int) ) (! (let (($generated@@476 ($generated@@264 (type $generated@@474))))
(= (type ($generated@@472 $generated@@474 $generated@@475)) $generated@@476))
 :pattern ( ($generated@@472 $generated@@474 $generated@@475))
))))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@477) ($generated@@263 $generated@@152)) (= (type $generated@@478) $generated@@67)) (= (type $generated@@479) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@477 ($generated@@471 $generated@@478) $generated@@479) (forall (($generated@@480 Int) ) (!  (=> (and (<= 0 $generated@@480) (< $generated@@480 ($generated@@262 $generated@@477))) ($generated@@249 ($generated@@472 $generated@@477 $generated@@480) $generated@@478 $generated@@479))
 :pattern ( ($generated@@472 $generated@@477 $generated@@480))
))))
 :pattern ( ($generated@@77 $generated@@477 ($generated@@471 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 Int) ) (! (= ($generated@@481 ($generated@@78 $generated@@482)) $generated@@482)
 :pattern ( ($generated@@78 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@483 ($generated@@234 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@234 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@486)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@487 ($generated@@239 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@239 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@490)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@491 ($generated@@157 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@157 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@494)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@471 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@471 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@75 ($generated@@471 $generated@@498)) $generated@@57))
 :pattern ( ($generated@@471 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 (type $generated@@499)))
(= ($generated@@319 $generated@@500 ($generated@@269 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@269 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@502) $generated@@67)) (= (type $generated@@503) $generated@@67)) (= ($generated@@139 $generated@@501 ($generated@@389 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@280 $generated@@501) $generated@@504))) (and ($generated@@225 ($generated@@84 ($generated@@364 $generated@@501) $generated@@504) $generated@@503) ($generated@@225 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@501) $generated@@504))
 :pattern ( ($generated@@84 ($generated@@280 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@139 $generated@@501 ($generated@@389 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@506) $generated@@67)) (= (type $generated@@507) $generated@@67)) (= ($generated@@139 $generated@@505 ($generated@@397 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@298 $generated@@505) $generated@@508))) (and ($generated@@225 ($generated@@84 ($generated@@372 $generated@@505) $generated@@508) $generated@@507) ($generated@@225 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@505) $generated@@508))
 :pattern ( ($generated@@84 ($generated@@298 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@139 $generated@@505 ($generated@@397 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@152) (= (type $generated@@512) $generated@@152)) (< ($generated@@509 $generated@@511) ($generated@@510 ($generated@@224 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@224 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@152) (= (type $generated@@514) $generated@@152)) (< ($generated@@509 $generated@@514) ($generated@@510 ($generated@@224 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@224 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@152) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) ($generated@@225 $generated@@515 ($generated@@389 $generated@@516 $generated@@517))) (and (= ($generated@@269 ($generated@@319 ($generated@@282 $generated@@152 $generated@@152) $generated@@515)) $generated@@515) ($generated@@139 ($generated@@319 ($generated@@282 $generated@@152 $generated@@152) $generated@@515) ($generated@@389 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@225 $generated@@515 ($generated@@389 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@152) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) $generated@@67)) ($generated@@225 $generated@@518 ($generated@@397 $generated@@519 $generated@@520))) (and (= ($generated@@269 ($generated@@319 ($generated@@300 $generated@@152 $generated@@152) $generated@@518)) $generated@@518) ($generated@@139 ($generated@@319 ($generated@@300 $generated@@152 $generated@@152) $generated@@518) ($generated@@397 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@225 $generated@@518 ($generated@@397 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) $generated@@67)) (= (type $generated@@523) $generated@@152)) ($generated@@225 $generated@@523 ($generated@@142 $generated@@521 $generated@@522))) (and (= ($generated@@269 ($generated@@319 $generated@@143 $generated@@523)) $generated@@523) ($generated@@139 ($generated@@319 $generated@@143 $generated@@523) ($generated@@142 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@225 $generated@@523 ($generated@@142 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
 (not ($generated@@0 ($generated@@84 ($generated@@405 $generated@@525) $generated@@524))))
 :pattern ( (let (($generated@@525 (type $generated@@524)))
($generated@@84 ($generated@@405 $generated@@525) $generated@@524)))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@72)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@67) (= (type $generated@@529) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@528 $generated@@529)) $generated@@62) (= ($generated@@526 ($generated@@142 $generated@@528 $generated@@529)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@143) (= ($generated@@509 ($generated@@269 $generated@@530)) ($generated@@510 $generated@@530)))
 :pattern ( ($generated@@509 ($generated@@269 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@152) ($generated@@225 $generated@@531 ($generated@@78 0))) (and (= ($generated@@269 ($generated@@319 $generated@@2 $generated@@531)) $generated@@531) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@531) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@531 ($generated@@78 0)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@152) (= (type $generated@@533) $generated@@67)) ($generated@@225 $generated@@532 ($generated@@234 $generated@@533))) (and (= ($generated@@269 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@532) ($generated@@234 $generated@@533))))
 :pattern ( ($generated@@225 $generated@@532 ($generated@@234 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@152) (= (type $generated@@535) $generated@@67)) ($generated@@225 $generated@@534 ($generated@@239 $generated@@535))) (and (= ($generated@@269 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@534)) $generated@@534) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@4) $generated@@534) ($generated@@239 $generated@@535))))
 :pattern ( ($generated@@225 $generated@@534 ($generated@@239 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@152) (= (type $generated@@537) $generated@@67)) ($generated@@225 $generated@@536 ($generated@@157 $generated@@537))) (and (= ($generated@@269 ($generated@@319 ($generated@@79 $generated@@152 $generated@@2) $generated@@536)) $generated@@536) ($generated@@139 ($generated@@319 ($generated@@79 $generated@@152 $generated@@2) $generated@@536) ($generated@@157 $generated@@537))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@157 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@152) (= (type $generated@@539) $generated@@67)) ($generated@@225 $generated@@538 ($generated@@471 $generated@@539))) (and (= ($generated@@269 ($generated@@319 ($generated@@263 $generated@@152) $generated@@538)) $generated@@538) ($generated@@139 ($generated@@319 ($generated@@263 $generated@@152) $generated@@538) ($generated@@471 $generated@@539))))
 :pattern ( ($generated@@225 $generated@@538 ($generated@@471 $generated@@539)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@526 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@526 $generated@@221) $generated@@66))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@540 ($generated@@157 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@540 $generated@@543)))) ($generated@@249 $generated@@543 $generated@@541 $generated@@542))
 :pattern ( ($generated@@84 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@77 $generated@@540 ($generated@@157 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@143) (= (type $generated@@545) $generated@@67)) (= (type $generated@@546) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@546) (and ($generated@@141 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@67) ($generated@@77 $generated@@544 ($generated@@142 $generated@@545 $generated@@547) $generated@@546))
 :pattern ( ($generated@@77 $generated@@544 ($generated@@142 $generated@@545 $generated@@547) $generated@@546))
))))) ($generated@@249 ($generated@@150 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@249 ($generated@@150 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@143) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@550) (and ($generated@@141 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@67) ($generated@@77 $generated@@548 ($generated@@142 $generated@@551 $generated@@549) $generated@@550))
 :pattern ( ($generated@@77 $generated@@548 ($generated@@142 $generated@@551 $generated@@549) $generated@@550))
))))) ($generated@@249 ($generated@@151 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@249 ($generated@@151 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@152) (= (type $generated@@553) $generated@@152)) (= ($generated@@224 ($generated@@244 $generated@@552) ($generated@@244 $generated@@553)) ($generated@@244 ($generated@@224 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@224 ($generated@@244 $generated@@552) ($generated@@244 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= ($generated@@269 ($generated@@244 $generated@@554)) ($generated@@244 ($generated@@269 $generated@@554)))
 :pattern ( ($generated@@269 ($generated@@244 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@264 (type $generated@@555))))
 (=> (and (= (type $generated@@555) ($generated@@263 $generated@@556)) (= ($generated@@262 $generated@@555) 0)) (= $generated@@555 ($generated@@261 $generated@@556))))
 :pattern ( ($generated@@262 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@558)))
 (=> (and (and (= (type $generated@@557) ($generated@@79 $generated@@560 $generated@@2)) (= (type $generated@@559) $generated@@2)) (<= 0 ($generated $generated@@559))) (= ($generated@@274 ($generated@@85 $generated@@557 $generated@@558 $generated@@559)) (+ (- ($generated@@274 $generated@@557) ($generated ($generated@@84 $generated@@557 $generated@@558))) ($generated $generated@@559)))))
 :pattern ( ($generated@@274 ($generated@@85 $generated@@557 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@562) $generated@@2)) ($generated@@77 $generated@@562 $generated@@46 $generated@@561))
 :pattern ( ($generated@@77 $generated@@562 $generated@@46 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@564) $generated@@3)) ($generated@@77 $generated@@564 $generated@@47 $generated@@563))
 :pattern ( ($generated@@77 $generated@@564 $generated@@47 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@566) $generated@@4)) ($generated@@77 $generated@@566 $generated@@44 $generated@@565))
 :pattern ( ($generated@@77 $generated@@566 $generated@@44 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@568) $generated@@429)) ($generated@@77 $generated@@568 $generated@@45 $generated@@567))
 :pattern ( ($generated@@77 $generated@@568 $generated@@45 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@570) $generated@@152)) ($generated@@77 $generated@@570 $generated@@48 $generated@@569))
 :pattern ( ($generated@@77 $generated@@570 $generated@@48 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@263 $generated@@152)) (= (type $generated@@572) $generated@@67)) (= ($generated@@139 $generated@@571 ($generated@@471 $generated@@572)) (forall (($generated@@573 Int) ) (!  (=> (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@262 $generated@@571))) ($generated@@225 ($generated@@472 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@472 $generated@@571 $generated@@573))
))))
 :pattern ( ($generated@@139 $generated@@571 ($generated@@471 $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 Int) ) (!  (=> (= (type $generated@@575) ($generated@@263 $generated@@152)) (=> (and (<= 0 $generated@@576) (< $generated@@576 ($generated@@262 $generated@@575))) (< ($generated@@510 ($generated@@319 $generated@@143 ($generated@@472 $generated@@575 $generated@@576))) ($generated@@574 $generated@@575))))
 :pattern ( ($generated@@510 ($generated@@319 $generated@@143 ($generated@@472 $generated@@575 $generated@@576))))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) ($generated@@282 $generated@@152 $generated@@152)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) $generated@@67)) ($generated@@139 $generated@@577 ($generated@@389 $generated@@578 $generated@@579))) (and (and ($generated@@139 ($generated@@280 $generated@@577) ($generated@@234 $generated@@578)) ($generated@@139 ($generated@@329 $generated@@577) ($generated@@234 $generated@@579))) ($generated@@139 ($generated@@363 $generated@@577) ($generated@@234 ($generated@@142 $generated@@578 $generated@@579)))))
 :pattern ( ($generated@@139 $generated@@577 ($generated@@389 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) ($generated@@300 $generated@@152 $generated@@152)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) $generated@@67)) ($generated@@139 $generated@@580 ($generated@@397 $generated@@581 $generated@@582))) (and (and ($generated@@139 ($generated@@298 $generated@@580) ($generated@@239 $generated@@581)) ($generated@@139 ($generated@@340 $generated@@580) ($generated@@239 $generated@@582))) ($generated@@139 ($generated@@371 $generated@@580) ($generated@@239 ($generated@@142 $generated@@581 $generated@@582)))))
 :pattern ( ($generated@@139 $generated@@580 ($generated@@397 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@2) ($generated@@139 $generated@@583 $generated@@46))
 :pattern ( ($generated@@139 $generated@@583 $generated@@46))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@3) ($generated@@139 $generated@@584 $generated@@47))
 :pattern ( ($generated@@139 $generated@@584 $generated@@47))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@4) ($generated@@139 $generated@@585 $generated@@44))
 :pattern ( ($generated@@139 $generated@@585 $generated@@44))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@429) ($generated@@139 $generated@@586 $generated@@45))
 :pattern ( ($generated@@139 $generated@@586 $generated@@45))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@152) ($generated@@139 $generated@@587 $generated@@48))
 :pattern ( ($generated@@139 $generated@@587 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 (T@U) Bool)
(declare-fun $generated@@592 () T@U)
(assert  (and (and (and (= (type $generated@@588) $generated@@80) (= (type $generated@@589) ($generated@@167 $generated@@80 $generated@@4))) (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@592) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@593  (=> (and (and $generated@@351 (= $generated@@588 $generated@@352)) (and $generated@@351 (= (ControlFlow 0 3) (- 0 2)))) (not (= $generated@@352 $generated@@136)))))
(let (($generated@@594 true))
(let (($generated@@595  (=> (= $generated@@589 ($generated@@166 $generated@@136 $generated@@590 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@594) (=> (= (ControlFlow 0 4) 3) $generated@@593)))))
(let (($generated@@596  (=> (and (and (and ($generated@@248 $generated@@590) ($generated@@591 $generated@@590)) ($generated@@139 $generated@@592 $generated@@135)) (and (= 2 $generated@@350) (= (ControlFlow 0 5) 4))) $generated@@595)))
$generated@@596)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@T T@T) T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 (T@T T@U T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 (T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@233 (T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 (T@T T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@239 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U T@U) Bool)
(declare-fun $generated@@374 (T@T T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@T) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 () T@T)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@536 (T@U Int) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@651 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@74 $generated@@81))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@63) $generated@@77)) (= (type $generated@@64) $generated@@73)) (= ($generated@@1 $generated@@78) 11)) (= (type $generated@@65) $generated@@78)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@79) 12)) (= (type $generated@@68) $generated@@79)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (= ($generated@@82 $generated@@60) 0))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@73)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@76)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@89 $generated@@98 $generated@@99)) 13)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@92 ($generated@@89 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@89 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@93 ($generated@@89 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@89 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@93 (type $generated@@104))))
(= (type ($generated@@94 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@94 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@95 $generated@@107 $generated@@108 $generated@@109)) ($generated@@89 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@95 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@93 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@94 ($generated@@95 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@94 ($generated@@95 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@94 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@94 $generated@@121 $generated@@123)))
 :weight 0
)))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@75 (type $generated@@125))))
(= (type ($generated@@96 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@96 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@91) 15)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@97 $generated@@127 $generated@@128 $generated@@129)) $generated@@91)
 :pattern ( ($generated@@97 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@75 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@96 ($generated@@97 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 ($generated@@97 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@96 $generated@@139 $generated@@141)))
 :weight 0
)))) (forall (($generated@@142 Int) ) (! (= (type ($generated@@88 $generated@@142)) $generated@@72)
 :pattern ( ($generated@@88 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
 :pattern ( ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@147) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@90) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert  (and (forall (($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@151)) $generated@@72)
 :pattern ( ($generated@@149 $generated@@151))
)) (= (type $generated@@150) $generated@@90)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@72) (= (type $generated@@153) $generated@@90)) (= (type $generated@@154) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@153 ($generated@@149 $generated@@152) $generated@@154)  (or (= $generated@@153 $generated@@150) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@153 ($generated@@149 $generated@@152) $generated@@154))
)))
(assert (= (type $generated@@155) $generated@@72))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@90) (= (type $generated@@157) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@156 $generated@@155 $generated@@157)  (or (= $generated@@156 $generated@@150) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@156 $generated@@155 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@2) ($generated@@158 $generated@@159 ($generated@@88 0)))
 :pattern ( ($generated@@158 $generated@@159 ($generated@@88 0)))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@160 $generated@@161)) $generated@@72)
 :pattern ( ($generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@72) (= (type $generated@@163) $generated@@90)) (= (type $generated@@164) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@163 ($generated@@160 $generated@@162) $generated@@164) ($generated@@87 $generated@@163 ($generated@@149 $generated@@162) $generated@@164)))
 :pattern ( ($generated@@87 $generated@@163 ($generated@@160 $generated@@162) $generated@@164))
)))
(assert  (and (= ($generated@@1 $generated@@167) 16) (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@168 $generated@@169)) $generated@@72)
 :pattern ( ($generated@@166 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@72) (= (type $generated@@171) $generated@@72)) (= (type $generated@@172) $generated@@167)) ($generated@@158 $generated@@172 ($generated@@166 $generated@@170 $generated@@171))) ($generated@@165 $generated@@172))
 :pattern ( ($generated@@165 $generated@@172) ($generated@@158 $generated@@172 ($generated@@166 $generated@@170 $generated@@171)))
)))
(assert  (and (and (= ($generated@@1 $generated@@176) 17) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@174 $generated@@177))
))) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@176)
 :pattern ( ($generated@@175 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@167) (= (type $generated@@180) $generated@@167)) true) (= ($generated@@173 $generated@@179 $generated@@180)  (and (= ($generated@@174 $generated@@179) ($generated@@174 $generated@@180)) (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)))))
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@72)
 :pattern ( ($generated@@181 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) ($generated@@89 $generated@@176 $generated@@2)) (= (type $generated@@185) $generated@@72)) ($generated@@158 $generated@@184 ($generated@@181 $generated@@185))) ($generated@@182 $generated@@184))
 :pattern ( ($generated@@158 $generated@@184 ($generated@@181 $generated@@185)))
)))
(assert (= (type $generated@@186) ($generated@@74 ($generated@@89 $generated@@176 $generated@@4))))
(assert (= ($generated@@82 $generated@@186) 0))
(assert (forall (($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= (type ($generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@74 $generated@@188))
 :pattern ( ($generated@@187 $generated@@188 $generated@@189 $generated@@190))
)))
(assert (= ($generated@@187 ($generated@@89 $generated@@176 $generated@@4) $generated@@65 $generated@@71) $generated@@186))
(assert ($generated@@191 $generated@@186))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@194 $generated@@195)) $generated@@167)
 :pattern ( ($generated@@192 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (and (= (type $generated@@196) $generated@@72) (= (type $generated@@197) $generated@@72)) (= (type $generated@@198) $generated@@176)) (= (type $generated@@199) $generated@@176)) (= ($generated@@158 ($generated@@192 $generated@@198 $generated@@199) ($generated@@166 $generated@@196 $generated@@197))  (and ($generated@@193 $generated@@198 $generated@@196) ($generated@@193 $generated@@199 $generated@@197))))
 :pattern ( ($generated@@158 ($generated@@192 $generated@@198 $generated@@199) ($generated@@166 $generated@@196 $generated@@197)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) $generated@@167) (= (type $generated@@201) $generated@@167)) (= ($generated@@173 $generated@@200 $generated@@201) (= $generated@@200 $generated@@201)))
 :pattern ( ($generated@@173 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@202 $generated@@203)) $generated@@72)
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (= (type $generated@@204) ($generated@@89 $generated@@176 $generated@@4)) (= (type $generated@@205) $generated@@72)) (= ($generated@@158 $generated@@204 ($generated@@202 $generated@@205)) (forall (($generated@@206 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@176) ($generated@@0 ($generated@@94 $generated@@204 $generated@@206))) ($generated@@193 $generated@@206 $generated@@205))
 :pattern ( ($generated@@94 $generated@@204 $generated@@206))
))))
 :pattern ( ($generated@@158 $generated@@204 ($generated@@202 $generated@@205)))
)))
(assert (forall (($generated@@208 T@U) ) (! (= (type ($generated@@207 $generated@@208)) $generated@@72)
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (= (type $generated@@209) ($generated@@89 $generated@@176 $generated@@4)) (= (type $generated@@210) $generated@@72)) (= ($generated@@158 $generated@@209 ($generated@@207 $generated@@210)) (forall (($generated@@211 T@U) ) (!  (=> (and (= (type $generated@@211) $generated@@176) ($generated@@0 ($generated@@94 $generated@@209 $generated@@211))) ($generated@@193 $generated@@211 $generated@@210))
 :pattern ( ($generated@@94 $generated@@209 $generated@@211))
))))
 :pattern ( ($generated@@158 $generated@@209 ($generated@@207 $generated@@210)))
)))
(assert  (and (forall (($generated@@215 T@U) ) (! (= (type ($generated@@212 $generated@@215)) ($generated@@89 $generated@@176 $generated@@4))
 :pattern ( ($generated@@212 $generated@@215))
)) (forall (($generated@@216 T@U) ) (! (= (type ($generated@@214 $generated@@216)) $generated@@72)
 :pattern ( ($generated@@214 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (and (= (type $generated@@217) $generated@@72) (= (type $generated@@218) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@219) $generated@@90)) (and (and ($generated@@213 $generated@@218) (and (not (= $generated@@219 $generated@@150)) (= ($generated@@214 $generated@@219) ($generated@@149 $generated@@217)))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@218 $generated@@219) $generated@@60)))) ($generated@@87 ($generated@@212 $generated@@219) ($generated@@202 $generated@@155) $generated@@218))
 :pattern ( ($generated@@212 $generated@@219) ($generated@@96 ($generated@@94 $generated@@218 $generated@@219) $generated@@60) ($generated@@149 $generated@@217))
)))
(assert (forall (($generated@@221 T@U) ) (! (let (($generated@@222 (type $generated@@221)))
(= (type ($generated@@220 $generated@@221)) $generated@@222))
 :pattern ( ($generated@@220 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@220 $generated@@223) $generated@@223)
 :pattern ( ($generated@@220 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@225) $generated@@72) (= (type $generated@@226) $generated@@72)) (= (type $generated@@227) $generated@@176)) (= (type $generated@@228) $generated@@176)) (= (type $generated@@229) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@213 $generated@@229)) (= ($generated@@87 ($generated@@192 $generated@@227 $generated@@228) ($generated@@166 $generated@@225 $generated@@226) $generated@@229)  (and ($generated@@224 $generated@@227 $generated@@225 $generated@@229) ($generated@@224 $generated@@228 $generated@@226 $generated@@229))))
 :pattern ( ($generated@@87 ($generated@@192 $generated@@227 $generated@@228) ($generated@@166 $generated@@225 $generated@@226) $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@77)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@167) (= ($generated@@165 $generated@@232) (= ($generated@@230 $generated@@232) $generated@@63)))
 :pattern ( ($generated@@165 $generated@@232))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (= ($generated@@1 ($generated@@236 $generated@@240 $generated@@241)) 18)) (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@236 $generated@@242 $generated@@243)) $generated@@242)
 :pattern ( ($generated@@236 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (! (= ($generated@@238 ($generated@@236 $generated@@244 $generated@@245)) $generated@@245)
 :pattern ( ($generated@@236 $generated@@244 $generated@@245))
))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@238 (type $generated@@246))))
(= (type ($generated@@233 $generated@@246 $generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@233 $generated@@246 $generated@@247 $generated@@248))
))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(let (($generated@@255 (type $generated@@251)))
(= (type ($generated@@239 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@236 $generated@@255 $generated@@254))))
 :pattern ( ($generated@@239 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))) (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@238 (type $generated@@256))))
 (=> (= (type $generated@@259) $generated@@260) (= ($generated@@233 ($generated@@239 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@257 $generated@@258) $generated@@259)))
 :weight 0
))) (and (and (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (or (= $generated@@263 $generated@@265) (= ($generated@@233 ($generated@@239 $generated@@262 $generated@@263 $generated@@264 $generated@@261) $generated@@265 $generated@@266) ($generated@@233 $generated@@262 $generated@@265 $generated@@266)))
 :weight 0
)) (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (or (= $generated@@270 $generated@@272) (= ($generated@@233 ($generated@@239 $generated@@268 $generated@@269 $generated@@270 $generated@@267) $generated@@271 $generated@@272) ($generated@@233 $generated@@268 $generated@@271 $generated@@272)))
 :weight 0
))) (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (or true (= ($generated@@233 ($generated@@239 $generated@@274 $generated@@275 $generated@@276 $generated@@273) $generated@@277 $generated@@278) ($generated@@233 $generated@@274 $generated@@277 $generated@@278)))
 :weight 0
)))) (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (! (= (type ($generated@@234 $generated@@279 $generated@@280 $generated@@281 $generated@@282 $generated@@283 $generated@@284)) ($generated@@236 $generated@@90 $generated@@4))
 :pattern ( ($generated@@234 $generated@@279 $generated@@280 $generated@@281 $generated@@282 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (= (type ($generated@@235 $generated@@285)) $generated@@176)
 :pattern ( ($generated@@235 $generated@@285))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@75 (type $generated@@293))))
 (=> (and (and (and (and (and (and (and (= (type $generated@@286) $generated@@90) (= (type $generated@@287) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@288) ($generated@@74 $generated@@4))) (= (type $generated@@289) $generated@@90)) (= (type $generated@@290) ($generated@@89 $generated@@176 $generated@@4))) (= (type $generated@@291) ($generated@@89 $generated@@176 $generated@@4))) (= (type $generated@@292) $generated@@90)) (= (type $generated@@293) ($generated@@74 $generated@@294))) (= ($generated@@0 ($generated@@233 ($generated@@234 $generated@@286 $generated@@287 $generated@@288 $generated@@289 $generated@@290 $generated@@291) $generated@@292 $generated@@293))  (=> (and (not (= $generated@@292 $generated@@286)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@287 $generated@@292) $generated@@288))) (or (or (= $generated@@292 $generated@@289) ($generated@@0 ($generated@@94 $generated@@290 ($generated@@235 $generated@@292)))) ($generated@@0 ($generated@@94 $generated@@291 ($generated@@235 $generated@@292))))))))
 :pattern ( ($generated@@233 ($generated@@234 $generated@@286 $generated@@287 $generated@@288 $generated@@289 $generated@@290 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@167) ($generated@@165 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@176) (= (type $generated@@297) $generated@@176)) (= $generated@@295 ($generated@@192 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@165 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 19)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert ($generated@@191 $generated@@60))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@72) (= (type $generated@@307) $generated@@90)) (= ($generated@@158 $generated@@307 ($generated@@160 $generated@@306))  (and ($generated@@158 $generated@@307 ($generated@@149 $generated@@306)) (not (= $generated@@307 $generated@@150)))))
 :pattern ( ($generated@@158 $generated@@307 ($generated@@160 $generated@@306)))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@72) (= (type $generated@@310) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@224 ($generated@@235 $generated@@308) $generated@@309 $generated@@310) ($generated@@87 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@224 ($generated@@235 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@311) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@312) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@313) $generated@@176)) (= (type $generated@@314) $generated@@72)) ($generated@@145 $generated@@311 $generated@@312)) ($generated@@224 $generated@@313 $generated@@314 $generated@@311)) ($generated@@224 $generated@@313 $generated@@314 $generated@@312))
 :pattern ( ($generated@@145 $generated@@311 $generated@@312) ($generated@@224 $generated@@313 $generated@@314 $generated@@311))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@315) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@316) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@318) $generated@@72)) ($generated@@145 $generated@@315 $generated@@316)) ($generated@@87 $generated@@317 $generated@@318 $generated@@315)) ($generated@@87 $generated@@317 $generated@@318 $generated@@316))
 :pattern ( ($generated@@145 $generated@@315 $generated@@316) ($generated@@87 $generated@@317 $generated@@318 $generated@@315))
)))
(assert (forall (($generated@@321 T@T) ) (! (= (type ($generated@@320 $generated@@321)) ($generated@@89 $generated@@321 $generated@@2))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@92 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@89 $generated@@323 $generated@@2)) (and (= (= ($generated@@319 $generated@@322) 0) (= $generated@@322 ($generated@@320 $generated@@323))) (=> (not (= ($generated@@319 $generated@@322) 0)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) (< 0 ($generated ($generated@@94 $generated@@322 $generated@@324))))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@79)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@72) (and (= ($generated@@83 ($generated@@149 $generated@@327)) $generated@@66) (= ($generated@@325 ($generated@@149 $generated@@327)) $generated@@70)))
 :pattern ( ($generated@@149 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@72) (and (= ($generated@@83 ($generated@@160 $generated@@328)) $generated@@67) (= ($generated@@325 ($generated@@160 $generated@@328)) $generated@@70)))
 :pattern ( ($generated@@160 $generated@@328))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 20)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@89 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@94 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@94 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 21)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@89 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@94 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@94 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@367) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@365 $generated@@366 $generated@@367)) (and ($generated@@145 $generated@@366 $generated@@367) (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@75 (type $generated@@369))))
 (=> (and (and (= (type $generated@@368) $generated@@90) (= (type $generated@@369) ($generated@@74 $generated@@370))) (not ($generated@@191 $generated@@369))) (= ($generated@@96 ($generated@@94 $generated@@366 $generated@@368) $generated@@369) ($generated@@96 ($generated@@94 $generated@@367 $generated@@368) $generated@@369))))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@367 $generated@@368) $generated@@369))
))))
 :pattern ( ($generated@@365 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@92 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@89 $generated@@372 $generated@@2)) (= ($generated@@182 $generated@@371) (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@372) (and (<= 0 ($generated ($generated@@94 $generated@@371 $generated@@373))) (<= ($generated ($generated@@94 $generated@@371 $generated@@373)) ($generated@@319 $generated@@371))))
 :pattern ( ($generated@@94 $generated@@371 $generated@@373))
)))))
 :pattern ( ($generated@@182 $generated@@371))
)))
(assert (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@176) ($generated@@193 $generated@@377 $generated@@155)) (and (= ($generated@@235 ($generated@@374 $generated@@90 $generated@@377)) $generated@@377) ($generated@@158 ($generated@@374 $generated@@90 $generated@@377) $generated@@155)))
 :pattern ( ($generated@@193 $generated@@377 $generated@@155))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@72) (= (type $generated@@379) $generated@@90)) (= ($generated@@158 $generated@@379 ($generated@@149 $generated@@378))  (or (= $generated@@379 $generated@@150) (= ($generated@@214 $generated@@379) ($generated@@149 $generated@@378)))))
 :pattern ( ($generated@@158 $generated@@379 ($generated@@149 $generated@@378)))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@333 (type $generated@@380))))
(let (($generated@@382 ($generated@@332 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@331 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@330 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) ($generated@@0 ($generated@@94 ($generated@@329 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@329 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@333 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385)) ($generated@@89 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@333 (type $generated@@387))))
(let (($generated@@389 ($generated@@332 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@331 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@330 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@388) ($generated@@0 ($generated@@94 ($generated@@384 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@351 (type $generated@@391))))
(let (($generated@@393 ($generated@@350 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@349 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@348 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) ($generated@@0 ($generated@@94 ($generated@@347 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@347 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@351 (type $generated@@396))))
(= (type ($generated@@395 $generated@@396)) ($generated@@89 $generated@@397 $generated@@4)))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@351 (type $generated@@398))))
(let (($generated@@400 ($generated@@350 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@349 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@348 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@399) ($generated@@0 ($generated@@94 ($generated@@395 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@395 $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@89 $generated@@176 $generated@@2)) (= (type $generated@@403) $generated@@72)) (= ($generated@@158 $generated@@402 ($generated@@181 $generated@@403)) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@176) (< 0 ($generated ($generated@@94 $generated@@402 $generated@@404)))) ($generated@@193 $generated@@404 $generated@@403))
 :pattern ( ($generated@@94 $generated@@402 $generated@@404))
))))
 :pattern ( ($generated@@158 $generated@@402 ($generated@@181 $generated@@403)))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) $generated@@72) (= (type $generated@@406) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@407) $generated@@90)) (and (and ($generated@@213 $generated@@406) (and (not (= $generated@@407 $generated@@150)) (= ($generated@@214 $generated@@407) ($generated@@149 $generated@@405)))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@406 $generated@@407) $generated@@60)))) ($generated@@87 ($generated@@96 ($generated@@94 $generated@@406 $generated@@407) $generated@@186) ($generated@@202 $generated@@155) $generated@@406))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@406 $generated@@407) $generated@@186) ($generated@@149 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@89 $generated@@176 $generated@@4)) (= (type $generated@@409) $generated@@72)) (= (type $generated@@410) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@408 ($generated@@202 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@176) ($generated@@0 ($generated@@94 $generated@@408 $generated@@411))) ($generated@@224 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@94 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@87 $generated@@408 ($generated@@202 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@89 $generated@@176 $generated@@4)) (= (type $generated@@413) $generated@@72)) (= (type $generated@@414) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@412 ($generated@@207 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@176) ($generated@@0 ($generated@@94 $generated@@412 $generated@@415))) ($generated@@224 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@94 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@87 $generated@@412 ($generated@@207 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(= ($generated ($generated@@94 ($generated@@320 $generated@@417) $generated@@416)) 0))
 :pattern ( (let (($generated@@417 (type $generated@@416)))
($generated@@94 ($generated@@320 $generated@@417) $generated@@416)))
)))
(assert  (and (forall (($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@420)) ($generated@@89 $generated@@176 $generated@@4))
 :pattern ( ($generated@@418 $generated@@420))
)) (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@333 (type $generated@@421))))
(let (($generated@@423 ($generated@@332 (type $generated@@421))))
(= (type ($generated@@419 $generated@@421)) ($generated@@89 $generated@@423 $generated@@422))))
 :pattern ( ($generated@@419 $generated@@421))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@331 $generated@@176 $generated@@176)) (= (type $generated@@425) $generated@@176)) (= ($generated@@0 ($generated@@94 ($generated@@418 $generated@@424) $generated@@425))  (and ($generated@@0 ($generated@@94 ($generated@@329 $generated@@424) ($generated@@174 ($generated@@374 $generated@@167 $generated@@425)))) (= ($generated@@94 ($generated@@419 $generated@@424) ($generated@@174 ($generated@@374 $generated@@167 $generated@@425))) ($generated@@175 ($generated@@374 $generated@@167 $generated@@425))))))
 :pattern ( ($generated@@94 ($generated@@418 $generated@@424) $generated@@425))
)))
(assert  (and (forall (($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@428)) ($generated@@89 $generated@@176 $generated@@4))
 :pattern ( ($generated@@426 $generated@@428))
)) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@351 (type $generated@@429))))
(let (($generated@@431 ($generated@@350 (type $generated@@429))))
(= (type ($generated@@427 $generated@@429)) ($generated@@89 $generated@@431 $generated@@430))))
 :pattern ( ($generated@@427 $generated@@429))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@349 $generated@@176 $generated@@176)) (= (type $generated@@433) $generated@@176)) (= ($generated@@0 ($generated@@94 ($generated@@426 $generated@@432) $generated@@433))  (and ($generated@@0 ($generated@@94 ($generated@@347 $generated@@432) ($generated@@174 ($generated@@374 $generated@@167 $generated@@433)))) (= ($generated@@94 ($generated@@427 $generated@@432) ($generated@@174 ($generated@@374 $generated@@167 $generated@@433))) ($generated@@175 ($generated@@374 $generated@@167 $generated@@433))))))
 :pattern ( ($generated@@94 ($generated@@426 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
(let (($generated@@437 ($generated@@332 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@331 $generated@@437 $generated@@436)) (= ($generated@@0 ($generated@@94 ($generated@@384 $generated@@434) $generated@@435)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@437) (and ($generated@@0 ($generated@@94 ($generated@@329 $generated@@434) $generated@@438)) (= $generated@@435 ($generated@@94 ($generated@@419 $generated@@434) $generated@@438))))
 :pattern ( ($generated@@94 ($generated@@329 $generated@@434) $generated@@438))
 :pattern ( ($generated@@94 ($generated@@419 $generated@@434) $generated@@438))
))))))
 :pattern ( ($generated@@94 ($generated@@384 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(let (($generated@@442 ($generated@@350 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@349 $generated@@442 $generated@@441)) (= ($generated@@0 ($generated@@94 ($generated@@395 $generated@@439) $generated@@440)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@442) (and ($generated@@0 ($generated@@94 ($generated@@347 $generated@@439) $generated@@443)) (= $generated@@440 ($generated@@94 ($generated@@427 $generated@@439) $generated@@443))))
 :pattern ( ($generated@@94 ($generated@@347 $generated@@439) $generated@@443))
 :pattern ( ($generated@@94 ($generated@@427 $generated@@439) $generated@@443))
))))))
 :pattern ( ($generated@@94 ($generated@@395 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@72)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@331 $generated@@176 $generated@@176)) (= (type $generated@@448) $generated@@72)) (= (type $generated@@449) $generated@@72)) (= (type $generated@@450) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@176) ($generated@@0 ($generated@@94 ($generated@@329 $generated@@447) $generated@@451))) (and ($generated@@224 ($generated@@94 ($generated@@419 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@224 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@94 ($generated@@419 $generated@@447) $generated@@451))
 :pattern ( ($generated@@94 ($generated@@329 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@87 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@72)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@349 $generated@@176 $generated@@176)) (= (type $generated@@456) $generated@@72)) (= (type $generated@@457) $generated@@72)) (= (type $generated@@458) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@176) ($generated@@0 ($generated@@94 ($generated@@347 $generated@@455) $generated@@459))) (and ($generated@@224 ($generated@@94 ($generated@@427 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@224 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@94 ($generated@@427 $generated@@455) $generated@@459))
 :pattern ( ($generated@@94 ($generated@@347 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@87 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@460) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@461) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@462) ($generated@@89 $generated@@90 $generated@@91))) (not (= $generated@@460 $generated@@462))) (and ($generated@@145 $generated@@460 $generated@@461) ($generated@@145 $generated@@461 $generated@@462))) ($generated@@145 $generated@@460 $generated@@462))
 :pattern ( ($generated@@145 $generated@@460 $generated@@461) ($generated@@145 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@T) ) (! (= (type ($generated@@463 $generated@@464)) ($generated@@89 $generated@@464 $generated@@4))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@351 (type $generated@@465))))
(let (($generated@@467 ($generated@@350 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@349 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@348 $generated@@467 $generated@@466)) (= ($generated@@347 $generated@@465) ($generated@@463 $generated@@467))))))
 :pattern ( ($generated@@347 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@351 (type $generated@@468))))
(let (($generated@@470 ($generated@@350 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@349 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@348 $generated@@470 $generated@@469)) (= ($generated@@395 $generated@@468) ($generated@@463 $generated@@469))))))
 :pattern ( ($generated@@395 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@351 (type $generated@@471))))
(let (($generated@@473 ($generated@@350 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@349 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@348 $generated@@473 $generated@@472)) (= ($generated@@426 $generated@@471) ($generated@@463 $generated@@176))))))
 :pattern ( ($generated@@426 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@333 (type $generated@@474))))
(let (($generated@@476 ($generated@@332 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@331 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@330 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@176) (= (type $generated@@478) $generated@@176)) ($generated@@0 ($generated@@94 ($generated@@418 $generated@@474) ($generated@@235 ($generated@@192 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@418 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@351 (type $generated@@479))))
(let (($generated@@481 ($generated@@350 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@349 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@348 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@176) (= (type $generated@@483) $generated@@176)) ($generated@@0 ($generated@@94 ($generated@@426 $generated@@479) ($generated@@235 ($generated@@192 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@426 $generated@@479))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@78)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@T) ) (!  (=> (and (= (type $generated@@486) $generated@@78) (= (type $generated@@487) $generated@@76)) (and (= ($generated@@484 ($generated@@187 $generated@@488 $generated@@486 $generated@@487)) $generated@@486) (= ($generated@@85 ($generated@@187 $generated@@488 $generated@@486 $generated@@487)) $generated@@487)))
 :pattern ( ($generated@@187 $generated@@488 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@176) ($generated@@193 $generated@@489 $generated@@46)) (and (= ($generated@@235 ($generated@@374 $generated@@2 $generated@@489)) $generated@@489) ($generated@@158 ($generated@@374 $generated@@2 $generated@@489) $generated@@46)))
 :pattern ( ($generated@@193 $generated@@489 $generated@@46))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@176) ($generated@@193 $generated@@490 $generated@@47)) (and (= ($generated@@235 ($generated@@374 $generated@@3 $generated@@490)) $generated@@490) ($generated@@158 ($generated@@374 $generated@@3 $generated@@490) $generated@@47)))
 :pattern ( ($generated@@193 $generated@@490 $generated@@47))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@176) ($generated@@193 $generated@@491 $generated@@44)) (and (= ($generated@@235 ($generated@@374 $generated@@4 $generated@@491)) $generated@@491) ($generated@@158 ($generated@@374 $generated@@4 $generated@@491) $generated@@44)))
 :pattern ( ($generated@@193 $generated@@491 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@492) 22))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@176) ($generated@@193 $generated@@493 $generated@@45)) (and (= ($generated@@235 ($generated@@374 $generated@@492 $generated@@493)) $generated@@493) ($generated@@158 ($generated@@374 $generated@@492 $generated@@493) $generated@@45)))
 :pattern ( ($generated@@193 $generated@@493 $generated@@45))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@72) (= ($generated@@193 ($generated@@235 $generated@@494) $generated@@495) ($generated@@158 $generated@@494 $generated@@495)))
 :pattern ( ($generated@@193 ($generated@@235 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@92 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@89 $generated@@497 $generated@@2)) (<= 0 ($generated@@319 $generated@@496))))
 :pattern ( ($generated@@319 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@301 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@300 $generated@@499)) (<= 0 ($generated@@299 $generated@@498))))
 :pattern ( ($generated@@299 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@72)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@500 ($generated@@444 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@444 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@72)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@72) (= (type $generated@@507) $generated@@72)) (= ($generated@@504 ($generated@@444 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@444 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@72) (= (type $generated@@509) $generated@@72)) (= ($generated@@83 ($generated@@444 $generated@@508 $generated@@509)) $generated@@58))
 :pattern ( ($generated@@444 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@72)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@72) (= (type $generated@@513) $generated@@72)) (= ($generated@@510 ($generated@@452 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@452 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@72)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@72) (= (type $generated@@517) $generated@@72)) (= ($generated@@514 ($generated@@452 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@452 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@72) (= (type $generated@@519) $generated@@72)) (= ($generated@@83 ($generated@@452 $generated@@518 $generated@@519)) $generated@@59))
 :pattern ( ($generated@@452 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@176) (= (type $generated@@521) $generated@@176)) (= ($generated@@230 ($generated@@192 $generated@@520 $generated@@521)) $generated@@63))
 :pattern ( ($generated@@192 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@72)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@72) (= (type $generated@@525) $generated@@72)) (= ($generated@@522 ($generated@@166 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@166 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@72)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@72) (= (type $generated@@529) $generated@@72)) (= ($generated@@526 ($generated@@166 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@166 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@176) (= (type $generated@@531) $generated@@176)) (= ($generated@@174 ($generated@@192 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@192 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@176) (= (type $generated@@533) $generated@@176)) (= ($generated@@175 ($generated@@192 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@192 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@90) ($generated@@158 $generated@@534 $generated@@155))
 :pattern ( ($generated@@158 $generated@@534 $generated@@155))
)))
(assert  (and (forall (($generated@@537 T@U) ) (! (= (type ($generated@@535 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@535 $generated@@537))
)) (forall (($generated@@538 T@U) ($generated@@539 Int) ) (! (let (($generated@@540 ($generated@@301 (type $generated@@538))))
(= (type ($generated@@536 $generated@@538 $generated@@539)) $generated@@540))
 :pattern ( ($generated@@536 $generated@@538 $generated@@539))
))))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@300 $generated@@176)) (= (type $generated@@542) $generated@@72)) (= (type $generated@@543) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@541 ($generated@@535 $generated@@542) $generated@@543) (forall (($generated@@544 Int) ) (!  (=> (and (<= 0 $generated@@544) (< $generated@@544 ($generated@@299 $generated@@541))) ($generated@@224 ($generated@@536 $generated@@541 $generated@@544) $generated@@542 $generated@@543))
 :pattern ( ($generated@@536 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@87 $generated@@541 ($generated@@535 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@545 ($generated@@88 $generated@@546)) $generated@@546)
 :pattern ( ($generated@@88 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@72)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@72) (= ($generated@@547 ($generated@@202 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@202 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@72) (= ($generated@@83 ($generated@@202 $generated@@550)) $generated@@54))
 :pattern ( ($generated@@202 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@72)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@72) (= ($generated@@551 ($generated@@207 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@207 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@72) (= ($generated@@83 ($generated@@207 $generated@@554)) $generated@@55))
 :pattern ( ($generated@@207 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@72)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@72) (= ($generated@@555 ($generated@@181 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@181 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@72) (= ($generated@@83 ($generated@@181 $generated@@558)) $generated@@56))
 :pattern ( ($generated@@181 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@72)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@72) (= ($generated@@559 ($generated@@535 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@535 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@72) (= ($generated@@83 ($generated@@535 $generated@@562)) $generated@@57))
 :pattern ( ($generated@@535 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@72)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@72) (= ($generated@@563 ($generated@@149 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@149 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@72)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@72) (= ($generated@@566 ($generated@@160 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@160 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
(= ($generated@@374 $generated@@570 ($generated@@235 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@235 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@331 $generated@@176 $generated@@176)) (= (type $generated@@572) $generated@@72)) (= (type $generated@@573) $generated@@72)) (= ($generated@@158 $generated@@571 ($generated@@444 $generated@@572 $generated@@573)) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@176) ($generated@@0 ($generated@@94 ($generated@@329 $generated@@571) $generated@@574))) (and ($generated@@193 ($generated@@94 ($generated@@419 $generated@@571) $generated@@574) $generated@@573) ($generated@@193 $generated@@574 $generated@@572)))
 :pattern ( ($generated@@94 ($generated@@419 $generated@@571) $generated@@574))
 :pattern ( ($generated@@94 ($generated@@329 $generated@@571) $generated@@574))
))))
 :pattern ( ($generated@@158 $generated@@571 ($generated@@444 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@349 $generated@@176 $generated@@176)) (= (type $generated@@576) $generated@@72)) (= (type $generated@@577) $generated@@72)) (= ($generated@@158 $generated@@575 ($generated@@452 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@176) ($generated@@0 ($generated@@94 ($generated@@347 $generated@@575) $generated@@578))) (and ($generated@@193 ($generated@@94 ($generated@@427 $generated@@575) $generated@@578) $generated@@577) ($generated@@193 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@94 ($generated@@427 $generated@@575) $generated@@578))
 :pattern ( ($generated@@94 ($generated@@347 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@158 $generated@@575 ($generated@@452 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@176) (= (type $generated@@582) $generated@@176)) (< ($generated@@579 $generated@@581) ($generated@@580 ($generated@@192 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@192 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@176) (= (type $generated@@584) $generated@@176)) (< ($generated@@579 $generated@@584) ($generated@@580 ($generated@@192 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@192 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@176) (= (type $generated@@586) $generated@@72)) (= (type $generated@@587) $generated@@72)) ($generated@@193 $generated@@585 ($generated@@444 $generated@@586 $generated@@587))) (and (= ($generated@@235 ($generated@@374 ($generated@@331 $generated@@176 $generated@@176) $generated@@585)) $generated@@585) ($generated@@158 ($generated@@374 ($generated@@331 $generated@@176 $generated@@176) $generated@@585) ($generated@@444 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@193 $generated@@585 ($generated@@444 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@176) (= (type $generated@@589) $generated@@72)) (= (type $generated@@590) $generated@@72)) ($generated@@193 $generated@@588 ($generated@@452 $generated@@589 $generated@@590))) (and (= ($generated@@235 ($generated@@374 ($generated@@349 $generated@@176 $generated@@176) $generated@@588)) $generated@@588) ($generated@@158 ($generated@@374 ($generated@@349 $generated@@176 $generated@@176) $generated@@588) ($generated@@452 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@193 $generated@@588 ($generated@@452 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@72) (= (type $generated@@592) $generated@@72)) (= (type $generated@@593) $generated@@176)) ($generated@@193 $generated@@593 ($generated@@166 $generated@@591 $generated@@592))) (and (= ($generated@@235 ($generated@@374 $generated@@167 $generated@@593)) $generated@@593) ($generated@@158 ($generated@@374 $generated@@167 $generated@@593) ($generated@@166 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@193 $generated@@593 ($generated@@166 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (not ($generated@@0 ($generated@@94 ($generated@@463 $generated@@595) $generated@@594))))
 :pattern ( (let (($generated@@595 (type $generated@@594)))
($generated@@94 ($generated@@463 $generated@@595) $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@72) (= (type $generated@@597) $generated@@72)) (and (= ($generated@@83 ($generated@@166 $generated@@596 $generated@@597)) $generated@@64) (= ($generated@@325 ($generated@@166 $generated@@596 $generated@@597)) $generated@@69)))
 :pattern ( ($generated@@166 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@167) (= ($generated@@579 ($generated@@235 $generated@@598)) ($generated@@580 $generated@@598)))
 :pattern ( ($generated@@579 ($generated@@235 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@176) ($generated@@193 $generated@@599 ($generated@@88 0))) (and (= ($generated@@235 ($generated@@374 $generated@@2 $generated@@599)) $generated@@599) ($generated@@158 ($generated@@374 ($generated@@89 $generated@@176 $generated@@4) $generated@@599) ($generated@@88 0))))
 :pattern ( ($generated@@193 $generated@@599 ($generated@@88 0)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@176) (= (type $generated@@601) $generated@@72)) ($generated@@193 $generated@@600 ($generated@@202 $generated@@601))) (and (= ($generated@@235 ($generated@@374 ($generated@@89 $generated@@176 $generated@@4) $generated@@600)) $generated@@600) ($generated@@158 ($generated@@374 ($generated@@89 $generated@@176 $generated@@4) $generated@@600) ($generated@@202 $generated@@601))))
 :pattern ( ($generated@@193 $generated@@600 ($generated@@202 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@176) (= (type $generated@@603) $generated@@72)) ($generated@@193 $generated@@602 ($generated@@207 $generated@@603))) (and (= ($generated@@235 ($generated@@374 ($generated@@89 $generated@@176 $generated@@4) $generated@@602)) $generated@@602) ($generated@@158 ($generated@@374 ($generated@@89 $generated@@176 $generated@@4) $generated@@602) ($generated@@207 $generated@@603))))
 :pattern ( ($generated@@193 $generated@@602 ($generated@@207 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@176) (= (type $generated@@605) $generated@@72)) ($generated@@193 $generated@@604 ($generated@@181 $generated@@605))) (and (= ($generated@@235 ($generated@@374 ($generated@@89 $generated@@176 $generated@@2) $generated@@604)) $generated@@604) ($generated@@158 ($generated@@374 ($generated@@89 $generated@@176 $generated@@2) $generated@@604) ($generated@@181 $generated@@605))))
 :pattern ( ($generated@@193 $generated@@604 ($generated@@181 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@176) (= (type $generated@@607) $generated@@72)) ($generated@@193 $generated@@606 ($generated@@535 $generated@@607))) (and (= ($generated@@235 ($generated@@374 ($generated@@300 $generated@@176) $generated@@606)) $generated@@606) ($generated@@158 ($generated@@374 ($generated@@300 $generated@@176) $generated@@606) ($generated@@535 $generated@@607))))
 :pattern ( ($generated@@193 $generated@@606 ($generated@@535 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@72) (= (type $generated@@609) $generated@@176)) ($generated@@193 $generated@@609 ($generated@@149 $generated@@608))) (and (= ($generated@@235 ($generated@@374 $generated@@90 $generated@@609)) $generated@@609) ($generated@@158 ($generated@@374 $generated@@90 $generated@@609) ($generated@@149 $generated@@608))))
 :pattern ( ($generated@@193 $generated@@609 ($generated@@149 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@72) (= (type $generated@@611) $generated@@176)) ($generated@@193 $generated@@611 ($generated@@160 $generated@@610))) (and (= ($generated@@235 ($generated@@374 $generated@@90 $generated@@611)) $generated@@611) ($generated@@158 ($generated@@374 $generated@@90 $generated@@611) ($generated@@160 $generated@@610))))
 :pattern ( ($generated@@193 $generated@@611 ($generated@@160 $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@72) (= (type $generated@@613) $generated@@90)) (and (not (= $generated@@613 $generated@@150)) (= ($generated@@214 $generated@@613) ($generated@@149 $generated@@612)))) ($generated@@158 ($generated@@212 $generated@@613) ($generated@@202 $generated@@155)))
 :pattern ( ($generated@@212 $generated@@613) ($generated@@149 $generated@@612))
)))
(assert (= ($generated@@83 $generated@@155) $generated@@62))
(assert (= ($generated@@325 $generated@@155) $generated@@68))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@614) ($generated@@89 $generated@@176 $generated@@2)) (= (type $generated@@615) $generated@@72)) (= (type $generated@@616) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@614 ($generated@@181 $generated@@615) $generated@@616) (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@176) (< 0 ($generated ($generated@@94 $generated@@614 $generated@@617)))) ($generated@@224 $generated@@617 $generated@@615 $generated@@616))
 :pattern ( ($generated@@94 $generated@@614 $generated@@617))
))))
 :pattern ( ($generated@@87 $generated@@614 ($generated@@181 $generated@@615) $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@72) (= (type $generated@@619) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@620) $generated@@90)) (and ($generated@@213 $generated@@619) (and (not (= $generated@@620 $generated@@150)) (= ($generated@@214 $generated@@620) ($generated@@149 $generated@@618))))) ($generated@@158 ($generated@@96 ($generated@@94 $generated@@619 $generated@@620) $generated@@186) ($generated@@202 $generated@@155)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@619 $generated@@620) $generated@@186) ($generated@@149 $generated@@618))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@167) (= (type $generated@@622) $generated@@72)) (= (type $generated@@623) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@213 $generated@@623) (and ($generated@@165 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@72) ($generated@@87 $generated@@621 ($generated@@166 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@87 $generated@@621 ($generated@@166 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@224 ($generated@@174 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@224 ($generated@@174 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@167) (= (type $generated@@626) $generated@@72)) (= (type $generated@@627) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@213 $generated@@627) (and ($generated@@165 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@72) ($generated@@87 $generated@@625 ($generated@@166 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@87 $generated@@625 ($generated@@166 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@224 ($generated@@175 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@224 ($generated@@175 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@176) (= (type $generated@@630) $generated@@176)) (= ($generated@@192 ($generated@@220 $generated@@629) ($generated@@220 $generated@@630)) ($generated@@220 ($generated@@192 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@192 ($generated@@220 $generated@@629) ($generated@@220 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (! (= ($generated@@235 ($generated@@220 $generated@@631)) ($generated@@220 ($generated@@235 $generated@@631)))
 :pattern ( ($generated@@235 ($generated@@220 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (! (let (($generated@@633 ($generated@@301 (type $generated@@632))))
 (=> (and (= (type $generated@@632) ($generated@@300 $generated@@633)) (= ($generated@@299 $generated@@632) 0)) (= $generated@@632 ($generated@@298 $generated@@633))))
 :pattern ( ($generated@@299 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (! (let (($generated@@637 (type $generated@@635)))
 (=> (and (and (= (type $generated@@634) ($generated@@89 $generated@@637 $generated@@2)) (= (type $generated@@636) $generated@@2)) (<= 0 ($generated $generated@@636))) (= ($generated@@319 ($generated@@95 $generated@@634 $generated@@635 $generated@@636)) (+ (- ($generated@@319 $generated@@634) ($generated ($generated@@94 $generated@@634 $generated@@635))) ($generated $generated@@636)))))
 :pattern ( ($generated@@319 ($generated@@95 $generated@@634 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@639) $generated@@2)) ($generated@@87 $generated@@639 $generated@@46 $generated@@638))
 :pattern ( ($generated@@87 $generated@@639 $generated@@46 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@641) $generated@@3)) ($generated@@87 $generated@@641 $generated@@47 $generated@@640))
 :pattern ( ($generated@@87 $generated@@641 $generated@@47 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@643) $generated@@4)) ($generated@@87 $generated@@643 $generated@@44 $generated@@642))
 :pattern ( ($generated@@87 $generated@@643 $generated@@44 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@645) $generated@@492)) ($generated@@87 $generated@@645 $generated@@45 $generated@@644))
 :pattern ( ($generated@@87 $generated@@645 $generated@@45 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@647) $generated@@176)) ($generated@@87 $generated@@647 $generated@@48 $generated@@646))
 :pattern ( ($generated@@87 $generated@@647 $generated@@48 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@300 $generated@@176)) (= (type $generated@@649) $generated@@72)) (= ($generated@@158 $generated@@648 ($generated@@535 $generated@@649)) (forall (($generated@@650 Int) ) (!  (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@299 $generated@@648))) ($generated@@193 ($generated@@536 $generated@@648 $generated@@650) $generated@@649))
 :pattern ( ($generated@@536 $generated@@648 $generated@@650))
))))
 :pattern ( ($generated@@158 $generated@@648 ($generated@@535 $generated@@649)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 Int) ) (!  (=> (= (type $generated@@652) ($generated@@300 $generated@@176)) (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@299 $generated@@652))) (< ($generated@@580 ($generated@@374 $generated@@167 ($generated@@536 $generated@@652 $generated@@653))) ($generated@@651 $generated@@652))))
 :pattern ( ($generated@@580 ($generated@@374 $generated@@167 ($generated@@536 $generated@@652 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) ($generated@@331 $generated@@176 $generated@@176)) (= (type $generated@@655) $generated@@72)) (= (type $generated@@656) $generated@@72)) ($generated@@158 $generated@@654 ($generated@@444 $generated@@655 $generated@@656))) (and (and ($generated@@158 ($generated@@329 $generated@@654) ($generated@@202 $generated@@655)) ($generated@@158 ($generated@@384 $generated@@654) ($generated@@202 $generated@@656))) ($generated@@158 ($generated@@418 $generated@@654) ($generated@@202 ($generated@@166 $generated@@655 $generated@@656)))))
 :pattern ( ($generated@@158 $generated@@654 ($generated@@444 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) ($generated@@349 $generated@@176 $generated@@176)) (= (type $generated@@658) $generated@@72)) (= (type $generated@@659) $generated@@72)) ($generated@@158 $generated@@657 ($generated@@452 $generated@@658 $generated@@659))) (and (and ($generated@@158 ($generated@@347 $generated@@657) ($generated@@207 $generated@@658)) ($generated@@158 ($generated@@395 $generated@@657) ($generated@@207 $generated@@659))) ($generated@@158 ($generated@@426 $generated@@657) ($generated@@207 ($generated@@166 $generated@@658 $generated@@659)))))
 :pattern ( ($generated@@158 $generated@@657 ($generated@@452 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@2) ($generated@@158 $generated@@660 $generated@@46))
 :pattern ( ($generated@@158 $generated@@660 $generated@@46))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@3) ($generated@@158 $generated@@661 $generated@@47))
 :pattern ( ($generated@@158 $generated@@661 $generated@@47))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@4) ($generated@@158 $generated@@662 $generated@@44))
 :pattern ( ($generated@@158 $generated@@662 $generated@@44))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@492) ($generated@@158 $generated@@663 $generated@@45))
 :pattern ( ($generated@@158 $generated@@663 $generated@@45))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@176) ($generated@@158 $generated@@664 $generated@@48))
 :pattern ( ($generated@@158 $generated@@664 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Bool)
(declare-fun $generated@@669 (T@U) Bool)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Int)
(assert  (and (and (and (= (type $generated@@665) ($generated@@236 $generated@@90 $generated@@4)) (= (type $generated@@666) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@667) $generated@@90)) (= (type $generated@@670) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@672 true))
(let (($generated@@673 true))
(let (($generated@@674  (=> (and (= $generated@@665 ($generated@@234 $generated@@150 $generated@@666 $generated@@60 $generated@@667 ($generated@@212 $generated@@667) ($generated@@96 ($generated@@94 $generated@@666 $generated@@667) $generated@@186))) (= $generated@@668 ($generated@@0 ($generated@@233 $generated@@665 $generated@@667 $generated@@186)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@668) (=> $generated@@668 (and (=> (= (ControlFlow 0 3) 1) $generated@@673) (=> (= (ControlFlow 0 3) 2) $generated@@672)))))))
(let (($generated@@675  (=> (and ($generated@@213 $generated@@666) ($generated@@669 $generated@@666)) (=> (and (and (not (= $generated@@667 $generated@@150)) (and ($generated@@158 $generated@@667 ($generated@@160 $generated@@670)) ($generated@@87 $generated@@667 ($generated@@160 $generated@@670) $generated@@666))) (and (= 0 $generated@@671) (= (ControlFlow 0 5) 3))) $generated@@674))))
$generated@@675)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@90 (T@U) Int)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@164 (T@U) Int)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@198 (T@U T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 () T@T)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@252 (T@T T@U T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (Int) Int)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@297 (T@U T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@312 (T@U T@U) Bool)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@U Int) T@U)
(declare-fun $generated@@325 (T@T) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@356 (T@U) Int)
(declare-fun $generated@@357 (T@T) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@T T@T) T@U)
(declare-fun $generated@@368 (T@T T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@370 (T@T) T@T)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@T T@T) T@U)
(declare-fun $generated@@386 (T@T T@T) T@T)
(declare-fun $generated@@387 (T@T) T@T)
(declare-fun $generated@@388 (T@T) T@T)
(declare-fun $generated@@402 (T@U T@U) Bool)
(declare-fun $generated@@408 (T@U T@U) Bool)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@T T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@507 (T@U T@U) T@U)
(declare-fun $generated@@515 (T@U T@U) T@U)
(declare-fun $generated@@523 (Int Int) Int)
(declare-fun $generated@@535 (T@T) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@564 () T@T)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@621 (T@U) T@U)
(declare-fun $generated@@625 (T@U) T@U)
(declare-fun $generated@@629 (T@U) T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@645 (T@U) Int)
(declare-fun $generated@@646 (T@U) Int)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 (T@U T@U T@U) Bool)
(declare-fun $generated@@655 (T@U T@U T@U) Bool)
(declare-fun $generated@@668 (T@T) T@U)
(declare-fun $generated@@674 (T@U T@U T@U) T@U)
(declare-fun $generated@@675 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@676 (T@T T@T) T@T)
(declare-fun $generated@@677 (T@T) T@T)
(declare-fun $generated@@678 (T@T) T@T)
(declare-fun $generated@@679 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@730 (Int Int) Int)
(declare-fun $generated@@735 (T@U) T@U)
(declare-fun $generated@@736 (T@U) T@U)
(declare-fun $generated@@758 (T@U) Bool)
(declare-fun $generated@@817 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@80) 6) (= (type $generated@@44) $generated@@80)) (= (type $generated@@45) $generated@@80)) (= (type $generated@@46) $generated@@80)) (= (type $generated@@47) $generated@@80)) (= (type $generated@@48) $generated@@80)) (= ($generated@@1 $generated@@81) 7)) (= (type $generated@@49) $generated@@81)) (= (type $generated@@50) $generated@@81)) (= (type $generated@@51) $generated@@81)) (= (type $generated@@52) $generated@@81)) (= (type $generated@@53) $generated@@81)) (= (type $generated@@54) $generated@@81)) (= (type $generated@@55) $generated@@81)) (= (type $generated@@56) $generated@@81)) (= (type $generated@@57) $generated@@81)) (= (type $generated@@58) $generated@@81)) (= (type $generated@@59) $generated@@81)) (forall (($generated@@88 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@88)) 8))) (forall (($generated@@89 T@T) ) (! (= ($generated@@83 ($generated@@82 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@82 $generated@@89))
))) (= (type $generated@@60) ($generated@@82 $generated@@4))) (= ($generated@@1 $generated@@84) 9)) (= (type $generated@@61) $generated@@84)) (= (type $generated@@62) $generated@@81)) (= (type $generated@@63) $generated@@81)) (= ($generated@@1 $generated@@85) 10)) (= (type $generated@@64) $generated@@85)) (= (type $generated@@65) $generated@@81)) (= ($generated@@1 $generated@@86) 11)) (= (type $generated@@66) $generated@@86)) (= (type $generated@@67) $generated@@81)) (= (type $generated@@68) $generated@@81)) (= ($generated@@1 $generated@@87) 12)) (= (type $generated@@69) $generated@@87)) (= (type $generated@@70) $generated@@87)) (= (type $generated@@71) $generated@@87)) (= (type $generated@@72) $generated@@87)) (= (type $generated@@73) $generated@@84)) (= (type $generated@@74) $generated@@84)) (= (type $generated@@75) $generated@@84)) (= (type $generated@@76) $generated@@84)) (= (type $generated@@77) $generated@@84)) (= (type $generated@@78) $generated@@84)) (= (type $generated@@79) $generated@@84)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79)
)
(assert (= ($generated@@90 $generated@@60) 0))
(assert (forall (($generated@@92 T@U) ) (! (= (type ($generated@@91 $generated@@92)) $generated@@81)
 :pattern ( ($generated@@91 $generated@@92))
)))
(assert (= ($generated@@91 $generated@@44) $generated@@49))
(assert (= ($generated@@91 $generated@@45) $generated@@50))
(assert (= ($generated@@91 $generated@@46) $generated@@51))
(assert (= ($generated@@91 $generated@@47) $generated@@52))
(assert (= ($generated@@91 $generated@@48) $generated@@53))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@84)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@106 $generated@@107)) 13)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@97 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@97 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@101 (type $generated@@112))))
(= (type ($generated@@102 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@102 $generated@@112 $generated@@113))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 (type $generated@@117)))
(let (($generated@@119 (type $generated@@116)))
(= (type ($generated@@103 $generated@@115 $generated@@116 $generated@@117)) ($generated@@97 $generated@@119 $generated@@118))))
 :pattern ( ($generated@@103 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@101 (type $generated@@120))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@102 ($generated@@103 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@102 ($generated@@103 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@102 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@102 $generated@@129 $generated@@131)))
 :weight 0
)))) (= ($generated@@1 $generated@@98) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@83 (type $generated@@133))))
(= (type ($generated@@104 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@104 $generated@@132 $generated@@133))
))) (= ($generated@@1 $generated@@99) 15)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= (type ($generated@@105 $generated@@135 $generated@@136 $generated@@137)) $generated@@99)
 :pattern ( ($generated@@105 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@83 (type $generated@@139))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@104 ($generated@@105 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@104 ($generated@@105 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@104 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@104 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 Int) ) (! (= (type ($generated@@96 $generated@@150)) $generated@@80)
 :pattern ( ($generated@@96 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
 :pattern ( ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@153 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@153 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@154 $generated@@160)) $generated@@80)
 :pattern ( ($generated@@154 $generated@@160))
))) (= (type $generated@@155) $generated@@98)) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@156 $generated@@161)) $generated@@80)
 :pattern ( ($generated@@156 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@80) (= (type $generated@@163) $generated@@98)) (and (not (= $generated@@163 $generated@@155)) (= ($generated@@156 $generated@@163) ($generated@@154 $generated@@162)))) ($generated@@157 ($generated@@153 $generated@@163) $generated@@162))
 :pattern ( ($generated@@153 $generated@@163) ($generated@@154 $generated@@162))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@80) (= (type $generated@@167) $generated@@98)) (and (not (= $generated@@167 $generated@@155)) (= ($generated@@156 $generated@@167) ($generated@@154 $generated@@166)))) ($generated@@165 ($generated@@8 ($generated@@164 $generated@@167)) $generated@@46))
 :pattern ( ($generated@@164 $generated@@167) ($generated@@154 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@168 $generated@@169)) $generated@@158)
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@80) (= (type $generated@@171) $generated@@98)) (and (not (= $generated@@171 $generated@@155)) (= ($generated@@156 $generated@@171) ($generated@@154 $generated@@170)))) ($generated@@157 ($generated@@168 $generated@@171) $generated@@170))
 :pattern ( ($generated@@168 $generated@@171) ($generated@@154 $generated@@170))
)))
(assert (= (type $generated@@172) ($generated@@82 $generated@@158)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@80) (= (type $generated@@175) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@176) $generated@@98)) (and ($generated@@173 $generated@@175) (and (not (= $generated@@176 $generated@@155)) (= ($generated@@156 $generated@@176) ($generated@@154 $generated@@174))))) ($generated@@157 ($generated@@104 ($generated@@102 $generated@@175 $generated@@176) $generated@@172) $generated@@174))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@175 $generated@@176) $generated@@172) ($generated@@154 $generated@@174))
)))
(assert (= (type $generated@@177) ($generated@@82 $generated@@158)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@80) (= (type $generated@@179) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@180) $generated@@98)) (and ($generated@@173 $generated@@179) (and (not (= $generated@@180 $generated@@155)) (= ($generated@@156 $generated@@180) ($generated@@154 $generated@@178))))) ($generated@@157 ($generated@@104 ($generated@@102 $generated@@179 $generated@@180) $generated@@177) $generated@@178))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@179 $generated@@180) $generated@@177) ($generated@@154 $generated@@178))
)))
(assert (= (type $generated@@181) ($generated@@82 $generated@@158)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (and (= (type $generated@@182) $generated@@80) (= (type $generated@@183) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@184) $generated@@98)) (and ($generated@@173 $generated@@183) (and (not (= $generated@@184 $generated@@155)) (= ($generated@@156 $generated@@184) ($generated@@154 $generated@@182))))) ($generated@@157 ($generated@@104 ($generated@@102 $generated@@183 $generated@@184) $generated@@181) $generated@@182))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@183 $generated@@184) $generated@@181) ($generated@@154 $generated@@182))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@187) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@185 $generated@@186 $generated@@187)) (forall (($generated@@188 T@U) ) (!  (=> (and (= (type $generated@@188) $generated@@98) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@186 $generated@@188) $generated@@60))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@187 $generated@@188) $generated@@60)))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@187 $generated@@188) $generated@@60))
)))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@80) (= (type $generated@@190) $generated@@98)) (= (type $generated@@191) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@190 ($generated@@154 $generated@@189) $generated@@191)  (or (= $generated@@190 $generated@@155) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@191 $generated@@190) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@190 ($generated@@154 $generated@@189) $generated@@191))
)))
(assert (= (type $generated@@192) $generated@@80))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (= (type $generated@@193) $generated@@2) (= (type $generated@@194) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@193 $generated@@192 $generated@@194))
 :pattern ( ($generated@@95 $generated@@193 $generated@@192 $generated@@194))
)))
(assert (= (type $generated@@195) $generated@@80))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@98) (= (type $generated@@197) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@196 $generated@@195 $generated@@197)  (or (= $generated@@196 $generated@@155) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@197 $generated@@196) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@196 $generated@@195 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (and (= (type $generated@@199) $generated@@80) (= (type $generated@@200) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@201) $generated@@98)) (and (and ($generated@@173 $generated@@200) (and (not (= $generated@@201 $generated@@155)) (= ($generated@@156 $generated@@201) ($generated@@154 $generated@@199)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@200 $generated@@201) $generated@@60)))) ($generated@@198 ($generated@@153 $generated@@201) $generated@@199 $generated@@200))
 :pattern ( ($generated@@153 $generated@@201) ($generated@@104 ($generated@@102 $generated@@200 $generated@@201) $generated@@60) ($generated@@154 $generated@@199))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (and (= (type $generated@@202) $generated@@80) (= (type $generated@@203) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@204) $generated@@98)) (and (and ($generated@@173 $generated@@203) (and (not (= $generated@@204 $generated@@155)) (= ($generated@@156 $generated@@204) ($generated@@154 $generated@@202)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@203 $generated@@204) $generated@@60)))) ($generated@@95 ($generated@@8 ($generated@@164 $generated@@204)) $generated@@46 $generated@@203))
 :pattern ( ($generated@@164 $generated@@204) ($generated@@104 ($generated@@102 $generated@@203 $generated@@204) $generated@@60) ($generated@@154 $generated@@202))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (and (= (type $generated@@205) $generated@@80) (= (type $generated@@206) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@207) $generated@@98)) (and (and ($generated@@173 $generated@@206) (and (not (= $generated@@207 $generated@@155)) (= ($generated@@156 $generated@@207) ($generated@@154 $generated@@205)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@206 $generated@@207) $generated@@60)))) ($generated@@198 ($generated@@168 $generated@@207) $generated@@205 $generated@@206))
 :pattern ( ($generated@@168 $generated@@207) ($generated@@104 ($generated@@102 $generated@@206 $generated@@207) $generated@@60) ($generated@@154 $generated@@205))
)))
(assert (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@2) ($generated@@165 $generated@@208 ($generated@@96 0)))
 :pattern ( ($generated@@165 $generated@@208 ($generated@@96 0)))
)))
(assert (forall (($generated@@210 T@U) ) (! (= (type ($generated@@209 $generated@@210)) $generated@@80)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and (= (type $generated@@211) $generated@@80) (= (type $generated@@212) $generated@@98)) (= (type $generated@@213) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@212 ($generated@@209 $generated@@211) $generated@@213) ($generated@@95 $generated@@212 ($generated@@154 $generated@@211) $generated@@213)))
 :pattern ( ($generated@@95 $generated@@212 ($generated@@209 $generated@@211) $generated@@213))
)))
(assert  (and (= ($generated@@1 $generated@@216) 17) (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@80)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@80) (= (type $generated@@220) $generated@@80)) (= (type $generated@@221) $generated@@216)) ($generated@@165 $generated@@221 ($generated@@215 $generated@@219 $generated@@220))) ($generated@@214 $generated@@221))
 :pattern ( ($generated@@214 $generated@@221) ($generated@@165 $generated@@221 ($generated@@215 $generated@@219 $generated@@220)))
)))
(assert  (and (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@158)
 :pattern ( ($generated@@223 $generated@@225))
)) (forall (($generated@@226 T@U) ) (! (= (type ($generated@@224 $generated@@226)) $generated@@158)
 :pattern ( ($generated@@224 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (= (type $generated@@227) $generated@@216) (= (type $generated@@228) $generated@@216)) true) (= ($generated@@222 $generated@@227 $generated@@228)  (and (= ($generated@@223 $generated@@227) ($generated@@223 $generated@@228)) (= ($generated@@224 $generated@@227) ($generated@@224 $generated@@228)))))
 :pattern ( ($generated@@222 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@229 $generated@@231)) $generated@@80)
 :pattern ( ($generated@@229 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (and (= (type $generated@@232) ($generated@@97 $generated@@158 $generated@@2)) (= (type $generated@@233) $generated@@80)) ($generated@@165 $generated@@232 ($generated@@229 $generated@@233))) ($generated@@230 $generated@@232))
 :pattern ( ($generated@@165 $generated@@232 ($generated@@229 $generated@@233)))
)))
(assert  (and (and (and (forall (($generated@@238 T@T) ) (= ($generated@@1 ($generated@@236 $generated@@238)) 18)) (forall (($generated@@239 T@T) ) (! (= ($generated@@237 ($generated@@236 $generated@@239)) $generated@@239)
 :pattern ( ($generated@@236 $generated@@239))
))) (= (type $generated@@234) ($generated@@82 ($generated@@236 $generated@@158)))) (forall (($generated@@240 T@U) ) (! (= (type ($generated@@235 $generated@@240)) $generated@@80)
 :pattern ( ($generated@@235 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@80) (= (type $generated@@242) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@243) $generated@@98)) (and ($generated@@173 $generated@@242) (and (not (= $generated@@243 $generated@@155)) (= ($generated@@156 $generated@@243) ($generated@@154 $generated@@241))))) ($generated@@165 ($generated@@104 ($generated@@102 $generated@@242 $generated@@243) $generated@@234) ($generated@@235 $generated@@241)))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@242 $generated@@243) $generated@@234) ($generated@@154 $generated@@241))
)))
(assert (= (type $generated@@244) ($generated@@82 ($generated@@236 $generated@@158))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@80) (= (type $generated@@246) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@247) $generated@@98)) (and ($generated@@173 $generated@@246) (and (not (= $generated@@247 $generated@@155)) (= ($generated@@156 $generated@@247) ($generated@@154 $generated@@245))))) ($generated@@165 ($generated@@104 ($generated@@102 $generated@@246 $generated@@247) $generated@@244) ($generated@@235 $generated@@245)))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@246 $generated@@247) $generated@@244) ($generated@@154 $generated@@245))
)))
(assert (= (type $generated@@248) ($generated@@82 ($generated@@236 $generated@@158))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@80) (= (type $generated@@250) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@251) $generated@@98)) (and ($generated@@173 $generated@@250) (and (not (= $generated@@251 $generated@@155)) (= ($generated@@156 $generated@@251) ($generated@@154 $generated@@249))))) ($generated@@165 ($generated@@104 ($generated@@102 $generated@@250 $generated@@251) $generated@@248) ($generated@@235 $generated@@249)))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@250 $generated@@251) $generated@@248) ($generated@@154 $generated@@249))
)))
(assert (= ($generated@@90 $generated@@177) 0))
(assert (forall (($generated@@253 T@T) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@253 $generated@@254 $generated@@255)) ($generated@@82 $generated@@253))
 :pattern ( ($generated@@252 $generated@@253 $generated@@254 $generated@@255))
)))
(assert (= ($generated@@252 $generated@@158 $generated@@66 $generated@@74) $generated@@177))
(assert ($generated@@256 $generated@@177))
(assert (= ($generated@@90 $generated@@234) 0))
(assert (= ($generated@@252 ($generated@@236 $generated@@158) $generated@@66 $generated@@76) $generated@@234))
(assert ($generated@@256 $generated@@234))
(assert (= ($generated@@90 $generated@@244) 0))
(assert (= ($generated@@252 ($generated@@236 $generated@@158) $generated@@66 $generated@@77) $generated@@244))
(assert ($generated@@256 $generated@@244))
(assert (= ($generated@@90 $generated@@248) 0))
(assert (= ($generated@@252 ($generated@@236 $generated@@158) $generated@@66 $generated@@78) $generated@@248))
(assert ($generated@@256 $generated@@248))
(assert (= (type $generated@@257) ($generated@@82 ($generated@@97 $generated@@158 $generated@@4))))
(assert (= ($generated@@90 $generated@@257) 0))
(assert (= ($generated@@252 ($generated@@97 $generated@@158 $generated@@4) $generated@@66 $generated@@79) $generated@@257))
(assert ($generated@@256 $generated@@257))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (! (= (type ($generated@@258 $generated@@259 $generated@@260)) $generated@@216)
 :pattern ( ($generated@@258 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (= (type $generated@@261) $generated@@80) (= (type $generated@@262) $generated@@80)) (= (type $generated@@263) $generated@@158)) (= (type $generated@@264) $generated@@158)) (= ($generated@@165 ($generated@@258 $generated@@263 $generated@@264) ($generated@@215 $generated@@261 $generated@@262))  (and ($generated@@157 $generated@@263 $generated@@261) ($generated@@157 $generated@@264 $generated@@262))))
 :pattern ( ($generated@@165 ($generated@@258 $generated@@263 $generated@@264) ($generated@@215 $generated@@261 $generated@@262)))
)))
(assert (= ($generated@@90 $generated@@172) 0))
(assert (= ($generated@@252 $generated@@158 $generated@@66 $generated@@73) $generated@@172))
(assert  (not ($generated@@256 $generated@@172)))
(assert (= ($generated@@90 $generated@@181) 0))
(assert (= ($generated@@252 $generated@@158 $generated@@66 $generated@@75) $generated@@181))
(assert  (not ($generated@@256 $generated@@181)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (= (type $generated@@266) $generated@@80) (= (type $generated@@267) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@268) $generated@@98)) (and (and ($generated@@173 $generated@@267) (and (not (= $generated@@268 $generated@@155)) (= ($generated@@156 $generated@@268) ($generated@@154 $generated@@266)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@267 $generated@@268) $generated@@60)))) ($generated@@95 ($generated@@8 ($generated@@265 $generated@@268)) $generated@@192 $generated@@267))
 :pattern ( ($generated@@265 $generated@@268) ($generated@@104 ($generated@@102 $generated@@267 $generated@@268) $generated@@60) ($generated@@154 $generated@@266))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@216) (= (type $generated@@270) $generated@@216)) (= ($generated@@222 $generated@@269 $generated@@270) (= $generated@@269 $generated@@270)))
 :pattern ( ($generated@@222 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@80)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@97 $generated@@158 $generated@@4)) (= (type $generated@@274) $generated@@80)) (= ($generated@@165 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@158) ($generated@@0 ($generated@@102 $generated@@273 $generated@@275))) ($generated@@157 $generated@@275 $generated@@274))
 :pattern ( ($generated@@102 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@165 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@80)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@97 $generated@@158 $generated@@4)) (= (type $generated@@279) $generated@@80)) (= ($generated@@165 $generated@@278 ($generated@@276 $generated@@279)) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@158) ($generated@@0 ($generated@@102 $generated@@278 $generated@@280))) ($generated@@157 $generated@@280 $generated@@279))
 :pattern ( ($generated@@102 $generated@@278 $generated@@280))
))))
 :pattern ( ($generated@@165 $generated@@278 ($generated@@276 $generated@@279)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@97 $generated@@158 $generated@@4))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) $generated@@80) (= (type $generated@@284) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@285) $generated@@98)) (and (and ($generated@@173 $generated@@284) (and (not (= $generated@@285 $generated@@155)) (= ($generated@@156 $generated@@285) ($generated@@154 $generated@@283)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@284 $generated@@285) $generated@@60)))) ($generated@@95 ($generated@@281 $generated@@285) ($generated@@271 $generated@@195) $generated@@284))
 :pattern ( ($generated@@281 $generated@@285) ($generated@@104 ($generated@@102 $generated@@284 $generated@@285) $generated@@60) ($generated@@154 $generated@@283))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@97 $generated@@158 $generated@@4))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (= (type $generated@@288) $generated@@80) (= (type $generated@@289) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@290) $generated@@98)) (and (and ($generated@@173 $generated@@289) (and (not (= $generated@@290 $generated@@155)) (= ($generated@@156 $generated@@290) ($generated@@154 $generated@@288)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@289 $generated@@290) $generated@@60)))) ($generated@@95 ($generated@@286 $generated@@290) ($generated@@271 $generated@@195) $generated@@289))
 :pattern ( ($generated@@286 $generated@@290) ($generated@@104 ($generated@@102 $generated@@289 $generated@@290) $generated@@60) ($generated@@154 $generated@@288))
)))
(assert (forall (($generated@@292 Int) ) (! (= ($generated@@291 $generated@@292) $generated@@292)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 (type $generated@@294)))
(= (type ($generated@@293 $generated@@294)) $generated@@295))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= ($generated@@293 $generated@@296) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (! (let (($generated@@300 (type $generated@@299)))
(= (type ($generated@@297 $generated@@298 $generated@@299)) ($generated@@236 $generated@@300)))
 :pattern ( ($generated@@297 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (= (type $generated@@301) ($generated@@236 $generated@@158)) (= (type $generated@@302) $generated@@158)) (= (type $generated@@303) $generated@@80)) (and ($generated@@165 $generated@@301 ($generated@@235 $generated@@303)) ($generated@@157 $generated@@302 $generated@@303))) ($generated@@165 ($generated@@297 $generated@@301 $generated@@302) ($generated@@235 $generated@@303)))
 :pattern ( ($generated@@165 ($generated@@297 $generated@@301 $generated@@302) ($generated@@235 $generated@@303)))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@304) $generated@@80) (= (type $generated@@305) $generated@@80)) (= (type $generated@@306) $generated@@158)) (= (type $generated@@307) $generated@@158)) (= (type $generated@@308) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@173 $generated@@308)) (= ($generated@@95 ($generated@@258 $generated@@306 $generated@@307) ($generated@@215 $generated@@304 $generated@@305) $generated@@308)  (and ($generated@@198 $generated@@306 $generated@@304 $generated@@308) ($generated@@198 $generated@@307 $generated@@305 $generated@@308))))
 :pattern ( ($generated@@95 ($generated@@258 $generated@@306 $generated@@307) ($generated@@215 $generated@@304 $generated@@305) $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@85)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@216) (= ($generated@@214 $generated@@311) (= ($generated@@309 $generated@@311) $generated@@64)))
 :pattern ( ($generated@@214 $generated@@311))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 Int) ) (! (let (($generated@@317 ($generated@@237 (type $generated@@315))))
(= (type ($generated@@314 $generated@@315 $generated@@316)) $generated@@317))
 :pattern ( ($generated@@314 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@237 (type $generated@@318))))
 (=> (and (= (type $generated@@318) ($generated@@236 $generated@@320)) (= (type $generated@@319) ($generated@@236 $generated@@320))) (= ($generated@@312 $generated@@318 $generated@@319)  (and (= ($generated@@313 $generated@@318) ($generated@@313 $generated@@319)) (forall (($generated@@321 Int) ) (!  (=> (and (<= 0 $generated@@321) (< $generated@@321 ($generated@@313 $generated@@318))) (= ($generated@@314 $generated@@318 $generated@@321) ($generated@@314 $generated@@319 $generated@@321)))
 :pattern ( ($generated@@314 $generated@@318 $generated@@321))
 :pattern ( ($generated@@314 $generated@@319 $generated@@321))
))))))
 :pattern ( ($generated@@312 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@216) ($generated@@214 $generated@@322)) (exists (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (and (and (= (type $generated@@323) $generated@@158) (= (type $generated@@324) $generated@@158)) (= $generated@@322 ($generated@@258 $generated@@323 $generated@@324)))
 :no-pattern (type $generated@@323)
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
)))
 :pattern ( ($generated@@214 $generated@@322))
)))
(assert (forall (($generated@@326 T@T) ) (! (= (type ($generated@@325 $generated@@326)) ($generated@@236 $generated@@326))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@T) ) (! (= ($generated@@313 ($generated@@325 $generated@@327)) 0)
 :pattern ( ($generated@@325 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@2) (= ($generated@@165 $generated@@328 $generated@@192) (<= ($generated@@291 0) ($generated $generated@@328))))
 :pattern ( ($generated@@165 $generated@@328 $generated@@192))
)))
(assert ($generated@@256 $generated@@60))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (! (let (($generated@@331 (type $generated@@330)))
 (=> (= (type $generated@@329) ($generated@@236 $generated@@331)) (= ($generated@@313 ($generated@@297 $generated@@329 $generated@@330)) (+ 1 ($generated@@313 $generated@@329)))))
 :pattern ( ($generated@@297 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (= (type $generated@@332) $generated@@80) (= (type $generated@@333) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@334) $generated@@98)) (and (and ($generated@@173 $generated@@333) (and (not (= $generated@@334 $generated@@155)) (= ($generated@@156 $generated@@334) ($generated@@154 $generated@@332)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@333 $generated@@334) $generated@@60)))) ($generated@@198 ($generated@@104 ($generated@@102 $generated@@333 $generated@@334) $generated@@172) $generated@@332 $generated@@333))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@333 $generated@@334) $generated@@172) ($generated@@154 $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (and (= (type $generated@@335) $generated@@80) (= (type $generated@@336) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@337) $generated@@98)) (and (and ($generated@@173 $generated@@336) (and (not (= $generated@@337 $generated@@155)) (= ($generated@@156 $generated@@337) ($generated@@154 $generated@@335)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@336 $generated@@337) $generated@@60)))) ($generated@@198 ($generated@@104 ($generated@@102 $generated@@336 $generated@@337) $generated@@177) $generated@@335 $generated@@336))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@336 $generated@@337) $generated@@177) ($generated@@154 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (and (= (type $generated@@338) $generated@@80) (= (type $generated@@339) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@340) $generated@@98)) (and (and ($generated@@173 $generated@@339) (and (not (= $generated@@340 $generated@@155)) (= ($generated@@156 $generated@@340) ($generated@@154 $generated@@338)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@339 $generated@@340) $generated@@60)))) ($generated@@198 ($generated@@104 ($generated@@102 $generated@@339 $generated@@340) $generated@@181) $generated@@338 $generated@@339))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@339 $generated@@340) $generated@@181) ($generated@@154 $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@80) (= (type $generated@@342) $generated@@98)) (= ($generated@@165 $generated@@342 ($generated@@209 $generated@@341))  (and ($generated@@165 $generated@@342 ($generated@@154 $generated@@341)) (not (= $generated@@342 $generated@@155)))))
 :pattern ( ($generated@@165 $generated@@342 ($generated@@209 $generated@@341)))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@158)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@80) (= (type $generated@@347) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@198 ($generated@@343 $generated@@345) $generated@@346 $generated@@347) ($generated@@95 $generated@@345 $generated@@346 $generated@@347)))
 :pattern ( ($generated@@198 ($generated@@343 $generated@@345) $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@348) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@349) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@350) $generated@@158)) (= (type $generated@@351) $generated@@80)) ($generated@@185 $generated@@348 $generated@@349)) ($generated@@198 $generated@@350 $generated@@351 $generated@@348)) ($generated@@198 $generated@@350 $generated@@351 $generated@@349))
 :pattern ( ($generated@@185 $generated@@348 $generated@@349) ($generated@@198 $generated@@350 $generated@@351 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@352) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@353) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@355) $generated@@80)) ($generated@@185 $generated@@352 $generated@@353)) ($generated@@95 $generated@@354 $generated@@355 $generated@@352)) ($generated@@95 $generated@@354 $generated@@355 $generated@@353))
 :pattern ( ($generated@@185 $generated@@352 $generated@@353) ($generated@@95 $generated@@354 $generated@@355 $generated@@352))
)))
(assert (forall (($generated@@358 T@T) ) (! (= (type ($generated@@357 $generated@@358)) ($generated@@97 $generated@@358 $generated@@2))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@100 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@97 $generated@@360 $generated@@2)) (and (= (= ($generated@@356 $generated@@359) 0) (= $generated@@359 ($generated@@357 $generated@@360))) (=> (not (= ($generated@@356 $generated@@359) 0)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) (< 0 ($generated ($generated@@102 $generated@@359 $generated@@361))))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@87)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@80) (and (= ($generated@@91 ($generated@@154 $generated@@364)) $generated@@67) (= ($generated@@362 ($generated@@154 $generated@@364)) $generated@@72)))
 :pattern ( ($generated@@154 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@80) (and (= ($generated@@91 ($generated@@209 $generated@@365)) $generated@@68) (= ($generated@@362 ($generated@@209 $generated@@365)) $generated@@72)))
 :pattern ( ($generated@@209 $generated@@365))
)))
(assert  (and (and (and (and (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (= ($generated@@1 ($generated@@368 $generated@@371 $generated@@372)) 19)) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= ($generated@@369 ($generated@@368 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@368 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= ($generated@@370 ($generated@@368 $generated@@375 $generated@@376)) $generated@@376)
 :pattern ( ($generated@@368 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@369 (type $generated@@377))))
(= (type ($generated@@366 $generated@@377)) ($generated@@97 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@377))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= (type ($generated@@367 $generated@@379 $generated@@380)) ($generated@@368 $generated@@379 $generated@@380))
 :pattern ( ($generated@@367 $generated@@379 $generated@@380))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@T) ) (! (let (($generated@@383 (type $generated@@381)))
 (not ($generated@@0 ($generated@@102 ($generated@@366 ($generated@@367 $generated@@383 $generated@@382)) $generated@@381))))
 :pattern ( (let (($generated@@383 (type $generated@@381)))
($generated@@102 ($generated@@366 ($generated@@367 $generated@@383 $generated@@382)) $generated@@381)))
)))
(assert  (and (and (and (and (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (= ($generated@@1 ($generated@@386 $generated@@389 $generated@@390)) 20)) (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (! (= ($generated@@387 ($generated@@386 $generated@@391 $generated@@392)) $generated@@391)
 :pattern ( ($generated@@386 $generated@@391 $generated@@392))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@388 ($generated@@386 $generated@@393 $generated@@394)) $generated@@394)
 :pattern ( ($generated@@386 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@387 (type $generated@@395))))
(= (type ($generated@@384 $generated@@395)) ($generated@@97 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@395))
))) (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (! (= (type ($generated@@385 $generated@@397 $generated@@398)) ($generated@@386 $generated@@397 $generated@@398))
 :pattern ( ($generated@@385 $generated@@397 $generated@@398))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@T) ) (! (let (($generated@@401 (type $generated@@399)))
 (not ($generated@@0 ($generated@@102 ($generated@@384 ($generated@@385 $generated@@401 $generated@@400)) $generated@@399))))
 :pattern ( (let (($generated@@401 (type $generated@@399)))
($generated@@102 ($generated@@384 ($generated@@385 $generated@@401 $generated@@400)) $generated@@399)))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@404) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@402 $generated@@403 $generated@@404)) (and ($generated@@185 $generated@@403 $generated@@404) (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@83 (type $generated@@406))))
 (=> (and (and (= (type $generated@@405) $generated@@98) (= (type $generated@@406) ($generated@@82 $generated@@407))) (not ($generated@@256 $generated@@406))) (= ($generated@@104 ($generated@@102 $generated@@403 $generated@@405) $generated@@406) ($generated@@104 ($generated@@102 $generated@@404 $generated@@405) $generated@@406))))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@404 $generated@@405) $generated@@406))
))))
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@100 (type $generated@@409))))
 (=> (and (= (type $generated@@409) ($generated@@97 $generated@@411 $generated@@4)) (= (type $generated@@410) ($generated@@97 $generated@@411 $generated@@4))) (= ($generated@@408 $generated@@409 $generated@@410) (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@411) (= ($generated@@0 ($generated@@102 $generated@@409 $generated@@412)) ($generated@@0 ($generated@@102 $generated@@410 $generated@@412))))
 :pattern ( ($generated@@102 $generated@@409 $generated@@412))
 :pattern ( ($generated@@102 $generated@@410 $generated@@412))
)))))
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@237 (type $generated@@414))))
(= (type ($generated@@413 $generated@@414 $generated@@415)) ($generated@@236 $generated@@416)))
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@237 (type $generated@@417))))
 (=> (and (= (type $generated@@417) ($generated@@236 $generated@@419)) (= (type $generated@@418) ($generated@@236 $generated@@419))) (= ($generated@@313 ($generated@@413 $generated@@417 $generated@@418)) (+ ($generated@@313 $generated@@417) ($generated@@313 $generated@@418)))))
 :pattern ( ($generated@@313 ($generated@@413 $generated@@417 $generated@@418)))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@100 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@97 $generated@@421 $generated@@2)) (= ($generated@@230 $generated@@420) (forall (($generated@@422 T@U) ) (!  (=> (= (type $generated@@422) $generated@@421) (and (<= 0 ($generated ($generated@@102 $generated@@420 $generated@@422))) (<= ($generated ($generated@@102 $generated@@420 $generated@@422)) ($generated@@356 $generated@@420))))
 :pattern ( ($generated@@102 $generated@@420 $generated@@422))
)))))
 :pattern ( ($generated@@230 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) $generated@@80) (= (type $generated@@424) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@425) $generated@@98)) (and (and ($generated@@173 $generated@@424) (and (not (= $generated@@425 $generated@@155)) (= ($generated@@156 $generated@@425) ($generated@@154 $generated@@423)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@424 $generated@@425) $generated@@60)))) ($generated@@95 ($generated@@104 ($generated@@102 $generated@@424 $generated@@425) $generated@@234) ($generated@@235 $generated@@423) $generated@@424))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@424 $generated@@425) $generated@@234) ($generated@@154 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) $generated@@80) (= (type $generated@@427) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@428) $generated@@98)) (and (and ($generated@@173 $generated@@427) (and (not (= $generated@@428 $generated@@155)) (= ($generated@@156 $generated@@428) ($generated@@154 $generated@@426)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@427 $generated@@428) $generated@@60)))) ($generated@@95 ($generated@@104 ($generated@@102 $generated@@427 $generated@@428) $generated@@244) ($generated@@235 $generated@@426) $generated@@427))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@427 $generated@@428) $generated@@244) ($generated@@154 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) $generated@@80) (= (type $generated@@430) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@431) $generated@@98)) (and (and ($generated@@173 $generated@@430) (and (not (= $generated@@431 $generated@@155)) (= ($generated@@156 $generated@@431) ($generated@@154 $generated@@429)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@430 $generated@@431) $generated@@60)))) ($generated@@95 ($generated@@104 ($generated@@102 $generated@@430 $generated@@431) $generated@@248) ($generated@@235 $generated@@429) $generated@@430))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@430 $generated@@431) $generated@@248) ($generated@@154 $generated@@429))
)))
(assert (forall (($generated@@433 T@T) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@433)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@158) ($generated@@157 $generated@@435 $generated@@192)) (and (= ($generated@@343 ($generated@@432 $generated@@2 $generated@@435)) $generated@@435) ($generated@@165 ($generated@@432 $generated@@2 $generated@@435) $generated@@192)))
 :pattern ( ($generated@@157 $generated@@435 $generated@@192))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@158) ($generated@@157 $generated@@436 $generated@@195)) (and (= ($generated@@343 ($generated@@432 $generated@@98 $generated@@436)) $generated@@436) ($generated@@165 ($generated@@432 $generated@@98 $generated@@436) $generated@@195)))
 :pattern ( ($generated@@157 $generated@@436 $generated@@195))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@80) (= (type $generated@@438) $generated@@98)) (= ($generated@@165 $generated@@438 ($generated@@154 $generated@@437))  (or (= $generated@@438 $generated@@155) (= ($generated@@156 $generated@@438) ($generated@@154 $generated@@437)))))
 :pattern ( ($generated@@165 $generated@@438 ($generated@@154 $generated@@437)))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 Int) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
 (=> (= (type $generated@@439) ($generated@@236 $generated@@442)) (and (=> (= $generated@@440 ($generated@@313 $generated@@439)) (= ($generated@@314 ($generated@@297 $generated@@439 $generated@@441) $generated@@440) $generated@@441)) (=> (not (= $generated@@440 ($generated@@313 $generated@@439))) (= ($generated@@314 ($generated@@297 $generated@@439 $generated@@441) $generated@@440) ($generated@@314 $generated@@439 $generated@@440))))))
 :pattern ( ($generated@@314 ($generated@@297 $generated@@439 $generated@@441) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@370 (type $generated@@443))))
(let (($generated@@445 ($generated@@369 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@368 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@367 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) ($generated@@0 ($generated@@102 ($generated@@366 $generated@@443) $generated@@446)))
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@366 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@370 (type $generated@@448))))
(= (type ($generated@@447 $generated@@448)) ($generated@@97 $generated@@449 $generated@@4)))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@370 (type $generated@@450))))
(let (($generated@@452 ($generated@@369 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@368 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@367 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@451) ($generated@@0 ($generated@@102 ($generated@@447 $generated@@450) $generated@@453)))
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@447 $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@388 (type $generated@@454))))
(let (($generated@@456 ($generated@@387 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@386 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@385 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ) (!  (and (= (type $generated@@457) $generated@@456) ($generated@@0 ($generated@@102 ($generated@@384 $generated@@454) $generated@@457)))
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@384 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@388 (type $generated@@459))))
(= (type ($generated@@458 $generated@@459)) ($generated@@97 $generated@@460 $generated@@4)))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@388 (type $generated@@461))))
(let (($generated@@463 ($generated@@387 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@386 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@385 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ) (!  (and (= (type $generated@@464) $generated@@462) ($generated@@0 ($generated@@102 ($generated@@458 $generated@@461) $generated@@464)))
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@458 $generated@@461))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@97 $generated@@158 $generated@@2)) (= (type $generated@@466) $generated@@80)) (= ($generated@@165 $generated@@465 ($generated@@229 $generated@@466)) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@158) (< 0 ($generated ($generated@@102 $generated@@465 $generated@@467)))) ($generated@@157 $generated@@467 $generated@@466))
 :pattern ( ($generated@@102 $generated@@465 $generated@@467))
))))
 :pattern ( ($generated@@165 $generated@@465 ($generated@@229 $generated@@466)))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (= (type $generated@@468) $generated@@80) (= (type $generated@@469) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@470) $generated@@98)) (and (and ($generated@@173 $generated@@469) (and (not (= $generated@@470 $generated@@155)) (= ($generated@@156 $generated@@470) ($generated@@154 $generated@@468)))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@469 $generated@@470) $generated@@60)))) ($generated@@95 ($generated@@104 ($generated@@102 $generated@@469 $generated@@470) $generated@@257) ($generated@@271 $generated@@195) $generated@@469))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@469 $generated@@470) $generated@@257) ($generated@@154 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (= (type $generated@@471) ($generated@@97 $generated@@158 $generated@@4)) (= (type $generated@@472) $generated@@80)) (= (type $generated@@473) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@471 ($generated@@271 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@158) ($generated@@0 ($generated@@102 $generated@@471 $generated@@474))) ($generated@@198 $generated@@474 $generated@@472 $generated@@473))
 :pattern ( ($generated@@102 $generated@@471 $generated@@474))
))))
 :pattern ( ($generated@@95 $generated@@471 ($generated@@271 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@97 $generated@@158 $generated@@4)) (= (type $generated@@476) $generated@@80)) (= (type $generated@@477) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@475 ($generated@@276 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@158) ($generated@@0 ($generated@@102 $generated@@475 $generated@@478))) ($generated@@198 $generated@@478 $generated@@476 $generated@@477))
 :pattern ( ($generated@@102 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@95 $generated@@475 ($generated@@276 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 (type $generated@@479)))
(= ($generated ($generated@@102 ($generated@@357 $generated@@480) $generated@@479)) 0))
 :pattern ( (let (($generated@@480 (type $generated@@479)))
($generated@@102 ($generated@@357 $generated@@480) $generated@@479)))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) ($generated@@97 $generated@@158 $generated@@4))
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@370 (type $generated@@484))))
(let (($generated@@486 ($generated@@369 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484)) ($generated@@97 $generated@@486 $generated@@485))))
 :pattern ( ($generated@@482 $generated@@484))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) ($generated@@368 $generated@@158 $generated@@158)) (= (type $generated@@488) $generated@@158)) (= ($generated@@0 ($generated@@102 ($generated@@481 $generated@@487) $generated@@488))  (and ($generated@@0 ($generated@@102 ($generated@@366 $generated@@487) ($generated@@223 ($generated@@432 $generated@@216 $generated@@488)))) (= ($generated@@102 ($generated@@482 $generated@@487) ($generated@@223 ($generated@@432 $generated@@216 $generated@@488))) ($generated@@224 ($generated@@432 $generated@@216 $generated@@488))))))
 :pattern ( ($generated@@102 ($generated@@481 $generated@@487) $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) ($generated@@97 $generated@@158 $generated@@4))
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@388 (type $generated@@492))))
(let (($generated@@494 ($generated@@387 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492)) ($generated@@97 $generated@@494 $generated@@493))))
 :pattern ( ($generated@@490 $generated@@492))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) ($generated@@386 $generated@@158 $generated@@158)) (= (type $generated@@496) $generated@@158)) (= ($generated@@0 ($generated@@102 ($generated@@489 $generated@@495) $generated@@496))  (and ($generated@@0 ($generated@@102 ($generated@@384 $generated@@495) ($generated@@223 ($generated@@432 $generated@@216 $generated@@496)))) (= ($generated@@102 ($generated@@490 $generated@@495) ($generated@@223 ($generated@@432 $generated@@216 $generated@@496))) ($generated@@224 ($generated@@432 $generated@@216 $generated@@496))))))
 :pattern ( ($generated@@102 ($generated@@489 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(let (($generated@@500 ($generated@@369 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@368 $generated@@500 $generated@@499)) (= ($generated@@0 ($generated@@102 ($generated@@447 $generated@@497) $generated@@498)) (exists (($generated@@501 T@U) ) (!  (and (= (type $generated@@501) $generated@@500) (and ($generated@@0 ($generated@@102 ($generated@@366 $generated@@497) $generated@@501)) (= $generated@@498 ($generated@@102 ($generated@@482 $generated@@497) $generated@@501))))
 :pattern ( ($generated@@102 ($generated@@366 $generated@@497) $generated@@501))
 :pattern ( ($generated@@102 ($generated@@482 $generated@@497) $generated@@501))
))))))
 :pattern ( ($generated@@102 ($generated@@447 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(let (($generated@@505 ($generated@@387 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@386 $generated@@505 $generated@@504)) (= ($generated@@0 ($generated@@102 ($generated@@458 $generated@@502) $generated@@503)) (exists (($generated@@506 T@U) ) (!  (and (= (type $generated@@506) $generated@@505) (and ($generated@@0 ($generated@@102 ($generated@@384 $generated@@502) $generated@@506)) (= $generated@@503 ($generated@@102 ($generated@@490 $generated@@502) $generated@@506))))
 :pattern ( ($generated@@102 ($generated@@384 $generated@@502) $generated@@506))
 :pattern ( ($generated@@102 ($generated@@490 $generated@@502) $generated@@506))
))))))
 :pattern ( ($generated@@102 ($generated@@458 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@508 $generated@@509)) $generated@@80)
 :pattern ( ($generated@@507 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) ($generated@@368 $generated@@158 $generated@@158)) (= (type $generated@@511) $generated@@80)) (= (type $generated@@512) $generated@@80)) (= (type $generated@@513) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@510 ($generated@@507 $generated@@511 $generated@@512) $generated@@513) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@158) ($generated@@0 ($generated@@102 ($generated@@366 $generated@@510) $generated@@514))) (and ($generated@@198 ($generated@@102 ($generated@@482 $generated@@510) $generated@@514) $generated@@512 $generated@@513) ($generated@@198 $generated@@514 $generated@@511 $generated@@513)))
 :pattern ( ($generated@@102 ($generated@@482 $generated@@510) $generated@@514))
 :pattern ( ($generated@@102 ($generated@@366 $generated@@510) $generated@@514))
))))
 :pattern ( ($generated@@95 $generated@@510 ($generated@@507 $generated@@511 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (= (type ($generated@@515 $generated@@516 $generated@@517)) $generated@@80)
 :pattern ( ($generated@@515 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) ($generated@@386 $generated@@158 $generated@@158)) (= (type $generated@@519) $generated@@80)) (= (type $generated@@520) $generated@@80)) (= (type $generated@@521) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@518 ($generated@@515 $generated@@519 $generated@@520) $generated@@521) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@158) ($generated@@0 ($generated@@102 ($generated@@384 $generated@@518) $generated@@522))) (and ($generated@@198 ($generated@@102 ($generated@@490 $generated@@518) $generated@@522) $generated@@520 $generated@@521) ($generated@@198 $generated@@522 $generated@@519 $generated@@521)))
 :pattern ( ($generated@@102 ($generated@@490 $generated@@518) $generated@@522))
 :pattern ( ($generated@@102 ($generated@@384 $generated@@518) $generated@@522))
))))
 :pattern ( ($generated@@95 $generated@@518 ($generated@@515 $generated@@519 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ($generated@@525 Int) ) (! (= ($generated@@523 $generated@@524 $generated@@525) (div $generated@@524 $generated@@525))
 :pattern ( ($generated@@523 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@100 (type $generated@@526))))
 (=> (and (and (= (type $generated@@526) ($generated@@97 $generated@@528 $generated@@4)) (= (type $generated@@527) ($generated@@97 $generated@@528 $generated@@4))) ($generated@@408 $generated@@526 $generated@@527)) (= $generated@@526 $generated@@527)))
 :pattern ( ($generated@@408 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@237 (type $generated@@529))))
 (=> (and (and (= (type $generated@@529) ($generated@@236 $generated@@531)) (= (type $generated@@530) ($generated@@236 $generated@@531))) ($generated@@312 $generated@@529 $generated@@530)) (= $generated@@529 $generated@@530)))
 :pattern ( ($generated@@312 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@532) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@533) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@534) ($generated@@97 $generated@@98 $generated@@99))) (not (= $generated@@532 $generated@@534))) (and ($generated@@185 $generated@@532 $generated@@533) ($generated@@185 $generated@@533 $generated@@534))) ($generated@@185 $generated@@532 $generated@@534))
 :pattern ( ($generated@@185 $generated@@532 $generated@@533) ($generated@@185 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@T) ) (! (= (type ($generated@@535 $generated@@536)) ($generated@@97 $generated@@536 $generated@@4))
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@388 (type $generated@@537))))
(let (($generated@@539 ($generated@@387 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@386 $generated@@539 $generated@@538)) (= (= $generated@@537 ($generated@@385 $generated@@539 $generated@@538)) (= ($generated@@384 $generated@@537) ($generated@@535 $generated@@539))))))
 :pattern ( ($generated@@384 $generated@@537))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@388 (type $generated@@540))))
(let (($generated@@542 ($generated@@387 (type $generated@@540))))
 (=> (= (type $generated@@540) ($generated@@386 $generated@@542 $generated@@541)) (= (= $generated@@540 ($generated@@385 $generated@@542 $generated@@541)) (= ($generated@@458 $generated@@540) ($generated@@535 $generated@@541))))))
 :pattern ( ($generated@@458 $generated@@540))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 ($generated@@388 (type $generated@@543))))
(let (($generated@@545 ($generated@@387 (type $generated@@543))))
 (=> (= (type $generated@@543) ($generated@@386 $generated@@545 $generated@@544)) (= (= $generated@@543 ($generated@@385 $generated@@545 $generated@@544)) (= ($generated@@489 $generated@@543) ($generated@@535 $generated@@158))))))
 :pattern ( ($generated@@489 $generated@@543))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@370 (type $generated@@546))))
(let (($generated@@548 ($generated@@369 (type $generated@@546))))
 (=> (= (type $generated@@546) ($generated@@368 $generated@@548 $generated@@547)) (or (= $generated@@546 ($generated@@367 $generated@@548 $generated@@547)) (exists (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@158)) ($generated@@0 ($generated@@102 ($generated@@481 $generated@@546) ($generated@@343 ($generated@@258 $generated@@549 $generated@@550)))))
 :no-pattern (type $generated@@549)
 :no-pattern (type $generated@@550)
 :no-pattern ($generated $generated@@549)
 :no-pattern ($generated@@0 $generated@@549)
 :no-pattern ($generated $generated@@550)
 :no-pattern ($generated@@0 $generated@@550)
))))))
 :pattern ( ($generated@@481 $generated@@546))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@388 (type $generated@@551))))
(let (($generated@@553 ($generated@@387 (type $generated@@551))))
 (=> (= (type $generated@@551) ($generated@@386 $generated@@553 $generated@@552)) (or (= $generated@@551 ($generated@@385 $generated@@553 $generated@@552)) (exists (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (and (and (= (type $generated@@554) $generated@@158) (= (type $generated@@555) $generated@@158)) ($generated@@0 ($generated@@102 ($generated@@489 $generated@@551) ($generated@@343 ($generated@@258 $generated@@554 $generated@@555)))))
 :no-pattern (type $generated@@554)
 :no-pattern (type $generated@@555)
 :no-pattern ($generated $generated@@554)
 :no-pattern ($generated@@0 $generated@@554)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
))))))
 :pattern ( ($generated@@489 $generated@@551))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@86)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@T) ) (!  (=> (and (= (type $generated@@558) $generated@@86) (= (type $generated@@559) $generated@@84)) (and (= ($generated@@556 ($generated@@252 $generated@@560 $generated@@558 $generated@@559)) $generated@@558) (= ($generated@@93 ($generated@@252 $generated@@560 $generated@@558 $generated@@559)) $generated@@559)))
 :pattern ( ($generated@@252 $generated@@560 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@158) ($generated@@157 $generated@@561 $generated@@46)) (and (= ($generated@@343 ($generated@@432 $generated@@2 $generated@@561)) $generated@@561) ($generated@@165 ($generated@@432 $generated@@2 $generated@@561) $generated@@46)))
 :pattern ( ($generated@@157 $generated@@561 $generated@@46))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@158) ($generated@@157 $generated@@562 $generated@@47)) (and (= ($generated@@343 ($generated@@432 $generated@@3 $generated@@562)) $generated@@562) ($generated@@165 ($generated@@432 $generated@@3 $generated@@562) $generated@@47)))
 :pattern ( ($generated@@157 $generated@@562 $generated@@47))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@158) ($generated@@157 $generated@@563 $generated@@44)) (and (= ($generated@@343 ($generated@@432 $generated@@4 $generated@@563)) $generated@@563) ($generated@@165 ($generated@@432 $generated@@4 $generated@@563) $generated@@44)))
 :pattern ( ($generated@@157 $generated@@563 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@564) 21))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@158) ($generated@@157 $generated@@565 $generated@@45)) (and (= ($generated@@343 ($generated@@432 $generated@@564 $generated@@565)) $generated@@565) ($generated@@165 ($generated@@432 $generated@@564 $generated@@565) $generated@@45)))
 :pattern ( ($generated@@157 $generated@@565 $generated@@45))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@80) (= ($generated@@157 ($generated@@343 $generated@@566) $generated@@567) ($generated@@165 $generated@@566 $generated@@567)))
 :pattern ( ($generated@@157 ($generated@@343 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@100 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@97 $generated@@569 $generated@@2)) (<= 0 ($generated@@356 $generated@@568))))
 :pattern ( ($generated@@356 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@237 (type $generated@@570))))
 (=> (= (type $generated@@570) ($generated@@236 $generated@@571)) (<= 0 ($generated@@313 $generated@@570))))
 :pattern ( ($generated@@313 $generated@@570))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@80)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@80) (= (type $generated@@575) $generated@@80)) (= ($generated@@572 ($generated@@507 $generated@@574 $generated@@575)) $generated@@574))
 :pattern ( ($generated@@507 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@80)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@80) (= (type $generated@@579) $generated@@80)) (= ($generated@@576 ($generated@@507 $generated@@578 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@507 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@80) (= (type $generated@@581) $generated@@80)) (= ($generated@@91 ($generated@@507 $generated@@580 $generated@@581)) $generated@@58))
 :pattern ( ($generated@@507 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@80)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@80) (= (type $generated@@585) $generated@@80)) (= ($generated@@582 ($generated@@515 $generated@@584 $generated@@585)) $generated@@584))
 :pattern ( ($generated@@515 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@80)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@80) (= (type $generated@@589) $generated@@80)) (= ($generated@@586 ($generated@@515 $generated@@588 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@515 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@80) (= (type $generated@@591) $generated@@80)) (= ($generated@@91 ($generated@@515 $generated@@590 $generated@@591)) $generated@@59))
 :pattern ( ($generated@@515 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@158) (= (type $generated@@593) $generated@@158)) (= ($generated@@309 ($generated@@258 $generated@@592 $generated@@593)) $generated@@64))
 :pattern ( ($generated@@258 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@80)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@80) (= (type $generated@@597) $generated@@80)) (= ($generated@@594 ($generated@@215 $generated@@596 $generated@@597)) $generated@@596))
 :pattern ( ($generated@@215 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@80)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@80) (= (type $generated@@601) $generated@@80)) (= ($generated@@598 ($generated@@215 $generated@@600 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@215 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@158) (= (type $generated@@603) $generated@@158)) (= ($generated@@223 ($generated@@258 $generated@@602 $generated@@603)) $generated@@602))
 :pattern ( ($generated@@258 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@158) (= (type $generated@@605) $generated@@158)) (= ($generated@@224 ($generated@@258 $generated@@604 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@258 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@98) ($generated@@165 $generated@@606 $generated@@195))
 :pattern ( ($generated@@165 $generated@@606 $generated@@195))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@236 $generated@@158)) (= (type $generated@@608) $generated@@80)) (= (type $generated@@609) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@607 ($generated@@235 $generated@@608) $generated@@609) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@313 $generated@@607))) ($generated@@198 ($generated@@314 $generated@@607 $generated@@610) $generated@@608 $generated@@609))
 :pattern ( ($generated@@314 $generated@@607 $generated@@610))
))))
 :pattern ( ($generated@@95 $generated@@607 ($generated@@235 $generated@@608) $generated@@609))
)))
(assert (forall (($generated@@612 Int) ) (! (= ($generated@@611 ($generated@@96 $generated@@612)) $generated@@612)
 :pattern ( ($generated@@96 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@80)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@80) (= ($generated@@613 ($generated@@271 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@271 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@80) (= ($generated@@91 ($generated@@271 $generated@@616)) $generated@@54))
 :pattern ( ($generated@@271 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@80)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@80) (= ($generated@@617 ($generated@@276 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@276 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@80) (= ($generated@@91 ($generated@@276 $generated@@620)) $generated@@55))
 :pattern ( ($generated@@276 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ) (! (= (type ($generated@@621 $generated@@622)) $generated@@80)
 :pattern ( ($generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@80) (= ($generated@@621 ($generated@@229 $generated@@623)) $generated@@623))
 :pattern ( ($generated@@229 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@80) (= ($generated@@91 ($generated@@229 $generated@@624)) $generated@@56))
 :pattern ( ($generated@@229 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ) (! (= (type ($generated@@625 $generated@@626)) $generated@@80)
 :pattern ( ($generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@80) (= ($generated@@625 ($generated@@235 $generated@@627)) $generated@@627))
 :pattern ( ($generated@@235 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@80) (= ($generated@@91 ($generated@@235 $generated@@628)) $generated@@57))
 :pattern ( ($generated@@235 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ) (! (= (type ($generated@@629 $generated@@630)) $generated@@80)
 :pattern ( ($generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@80) (= ($generated@@629 ($generated@@154 $generated@@631)) $generated@@631))
 :pattern ( ($generated@@154 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@80)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@80) (= ($generated@@632 ($generated@@209 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@209 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 (type $generated@@635)))
(= ($generated@@432 $generated@@636 ($generated@@343 $generated@@635)) $generated@@635))
 :pattern ( ($generated@@343 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@637) ($generated@@368 $generated@@158 $generated@@158)) (= (type $generated@@638) $generated@@80)) (= (type $generated@@639) $generated@@80)) (= ($generated@@165 $generated@@637 ($generated@@507 $generated@@638 $generated@@639)) (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@158) ($generated@@0 ($generated@@102 ($generated@@366 $generated@@637) $generated@@640))) (and ($generated@@157 ($generated@@102 ($generated@@482 $generated@@637) $generated@@640) $generated@@639) ($generated@@157 $generated@@640 $generated@@638)))
 :pattern ( ($generated@@102 ($generated@@482 $generated@@637) $generated@@640))
 :pattern ( ($generated@@102 ($generated@@366 $generated@@637) $generated@@640))
))))
 :pattern ( ($generated@@165 $generated@@637 ($generated@@507 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@641) ($generated@@386 $generated@@158 $generated@@158)) (= (type $generated@@642) $generated@@80)) (= (type $generated@@643) $generated@@80)) (= ($generated@@165 $generated@@641 ($generated@@515 $generated@@642 $generated@@643)) (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@158) ($generated@@0 ($generated@@102 ($generated@@384 $generated@@641) $generated@@644))) (and ($generated@@157 ($generated@@102 ($generated@@490 $generated@@641) $generated@@644) $generated@@643) ($generated@@157 $generated@@644 $generated@@642)))
 :pattern ( ($generated@@102 ($generated@@490 $generated@@641) $generated@@644))
 :pattern ( ($generated@@102 ($generated@@384 $generated@@641) $generated@@644))
))))
 :pattern ( ($generated@@165 $generated@@641 ($generated@@515 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@158) (= (type $generated@@648) $generated@@158)) (< ($generated@@645 $generated@@647) ($generated@@646 ($generated@@258 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@258 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@158) (= (type $generated@@650) $generated@@158)) (< ($generated@@645 $generated@@650) ($generated@@646 ($generated@@258 $generated@@649 $generated@@650))))
 :pattern ( ($generated@@258 $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@80) (= (type $generated@@652) $generated@@98)) (and (not (= $generated@@652 $generated@@155)) (= ($generated@@156 $generated@@652) ($generated@@154 $generated@@651)))) ($generated@@165 ($generated@@8 ($generated@@265 $generated@@652)) $generated@@192))
 :pattern ( ($generated@@265 $generated@@652) ($generated@@154 $generated@@651))
)))
(assert  (=> (<= 0 $generated@@653) (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@80) (= (type $generated@@657) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@658) $generated@@98)) (or ($generated@@655 $generated@@656 $generated@@657 $generated@@658) (and (not (= 0 $generated@@653)) (and ($generated@@173 $generated@@657) (and (not (= $generated@@658 $generated@@155)) (and ($generated@@165 $generated@@658 ($generated@@209 $generated@@656)) ($generated@@95 $generated@@658 ($generated@@209 $generated@@656) $generated@@657))))))) true)
 :pattern ( ($generated@@654 $generated@@656 $generated@@657 $generated@@658))
))))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) $generated@@158) (= (type $generated@@660) $generated@@80)) (= (type $generated@@661) $generated@@80)) ($generated@@157 $generated@@659 ($generated@@507 $generated@@660 $generated@@661))) (and (= ($generated@@343 ($generated@@432 ($generated@@368 $generated@@158 $generated@@158) $generated@@659)) $generated@@659) ($generated@@165 ($generated@@432 ($generated@@368 $generated@@158 $generated@@158) $generated@@659) ($generated@@507 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@157 $generated@@659 ($generated@@507 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) $generated@@158) (= (type $generated@@663) $generated@@80)) (= (type $generated@@664) $generated@@80)) ($generated@@157 $generated@@662 ($generated@@515 $generated@@663 $generated@@664))) (and (= ($generated@@343 ($generated@@432 ($generated@@386 $generated@@158 $generated@@158) $generated@@662)) $generated@@662) ($generated@@165 ($generated@@432 ($generated@@386 $generated@@158 $generated@@158) $generated@@662) ($generated@@515 $generated@@663 $generated@@664))))
 :pattern ( ($generated@@157 $generated@@662 ($generated@@515 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) $generated@@80) (= (type $generated@@666) $generated@@80)) (= (type $generated@@667) $generated@@158)) ($generated@@157 $generated@@667 ($generated@@215 $generated@@665 $generated@@666))) (and (= ($generated@@343 ($generated@@432 $generated@@216 $generated@@667)) $generated@@667) ($generated@@165 ($generated@@432 $generated@@216 $generated@@667) ($generated@@215 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@157 $generated@@667 ($generated@@215 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@669 T@T) ) (! (= (type ($generated@@668 $generated@@669)) ($generated@@97 $generated@@669 $generated@@4))
 :pattern ( ($generated@@668 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ) (! (let (($generated@@671 (type $generated@@670)))
 (not ($generated@@0 ($generated@@102 ($generated@@668 $generated@@671) $generated@@670))))
 :pattern ( (let (($generated@@671 (type $generated@@670)))
($generated@@102 ($generated@@668 $generated@@671) $generated@@670)))
)))
(assert (forall (($generated@@672 T@U) ) (! (let (($generated@@673 (type $generated@@672)))
 (not ($generated@@0 ($generated@@102 ($generated@@535 $generated@@673) $generated@@672))))
 :pattern ( (let (($generated@@673 (type $generated@@672)))
($generated@@102 ($generated@@535 $generated@@673) $generated@@672)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@680 T@T) ($generated@@681 T@T) ) (= ($generated@@1 ($generated@@676 $generated@@680 $generated@@681)) 22)) (forall (($generated@@682 T@T) ($generated@@683 T@T) ) (! (= ($generated@@677 ($generated@@676 $generated@@682 $generated@@683)) $generated@@682)
 :pattern ( ($generated@@676 $generated@@682 $generated@@683))
))) (forall (($generated@@684 T@T) ($generated@@685 T@T) ) (! (= ($generated@@678 ($generated@@676 $generated@@684 $generated@@685)) $generated@@685)
 :pattern ( ($generated@@676 $generated@@684 $generated@@685))
))) (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (! (let (($generated@@689 ($generated@@678 (type $generated@@686))))
(= (type ($generated@@674 $generated@@686 $generated@@687 $generated@@688)) $generated@@689))
 :pattern ( ($generated@@674 $generated@@686 $generated@@687 $generated@@688))
))) (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (! (let (($generated@@694 (type $generated@@693)))
(let (($generated@@695 (type $generated@@691)))
(= (type ($generated@@679 $generated@@690 $generated@@691 $generated@@692 $generated@@693)) ($generated@@676 $generated@@695 $generated@@694))))
 :pattern ( ($generated@@679 $generated@@690 $generated@@691 $generated@@692 $generated@@693))
))) (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ) (! (let (($generated@@700 ($generated@@678 (type $generated@@696))))
 (=> (= (type $generated@@699) $generated@@700) (= ($generated@@674 ($generated@@679 $generated@@696 $generated@@697 $generated@@698 $generated@@699) $generated@@697 $generated@@698) $generated@@699)))
 :weight 0
))) (and (and (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ) (!  (or (= $generated@@703 $generated@@705) (= ($generated@@674 ($generated@@679 $generated@@702 $generated@@703 $generated@@704 $generated@@701) $generated@@705 $generated@@706) ($generated@@674 $generated@@702 $generated@@705 $generated@@706)))
 :weight 0
)) (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (!  (or (= $generated@@710 $generated@@712) (= ($generated@@674 ($generated@@679 $generated@@708 $generated@@709 $generated@@710 $generated@@707) $generated@@711 $generated@@712) ($generated@@674 $generated@@708 $generated@@711 $generated@@712)))
 :weight 0
))) (forall (($generated@@713 T@U) ($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ($generated@@718 T@U) ) (!  (or true (= ($generated@@674 ($generated@@679 $generated@@714 $generated@@715 $generated@@716 $generated@@713) $generated@@717 $generated@@718) ($generated@@674 $generated@@714 $generated@@717 $generated@@718)))
 :weight 0
)))) (forall (($generated@@719 T@U) ($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (! (= (type ($generated@@675 $generated@@719 $generated@@720 $generated@@721 $generated@@722)) ($generated@@676 $generated@@98 $generated@@4))
 :pattern ( ($generated@@675 $generated@@719 $generated@@720 $generated@@721 $generated@@722))
))))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ($generated@@725 T@U) ($generated@@726 T@U) ($generated@@727 T@U) ($generated@@728 T@U) ) (! (let (($generated@@729 ($generated@@83 (type $generated@@728))))
 (=> (and (and (and (and (and (= (type $generated@@723) $generated@@98) (= (type $generated@@724) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@725) ($generated@@82 $generated@@4))) (= (type $generated@@726) $generated@@98)) (= (type $generated@@727) $generated@@98)) (= (type $generated@@728) ($generated@@82 $generated@@729))) (= ($generated@@0 ($generated@@674 ($generated@@675 $generated@@723 $generated@@724 $generated@@725 $generated@@726) $generated@@727 $generated@@728))  (=> (and (not (= $generated@@727 $generated@@723)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@724 $generated@@727) $generated@@725))) (= $generated@@727 $generated@@726)))))
 :pattern ( ($generated@@674 ($generated@@675 $generated@@723 $generated@@724 $generated@@725 $generated@@726) $generated@@727 $generated@@728))
)))
(assert (forall (($generated@@731 Int) ($generated@@732 Int) ) (! (= ($generated@@730 $generated@@731 $generated@@732) (mod $generated@@731 $generated@@732))
 :pattern ( ($generated@@730 $generated@@731 $generated@@732))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) $generated@@80) (= (type $generated@@734) $generated@@80)) (and (= ($generated@@91 ($generated@@215 $generated@@733 $generated@@734)) $generated@@65) (= ($generated@@362 ($generated@@215 $generated@@733 $generated@@734)) $generated@@71)))
 :pattern ( ($generated@@215 $generated@@733 $generated@@734))
)))
(assert  (and (forall (($generated@@737 T@U) ) (! (let (($generated@@738 ($generated@@237 (type $generated@@737))))
(= (type ($generated@@735 $generated@@737)) ($generated@@236 $generated@@738)))
 :pattern ( ($generated@@735 $generated@@737))
)) (forall (($generated@@739 T@U) ) (! (let (($generated@@740 ($generated@@237 (type $generated@@739))))
(= (type ($generated@@736 $generated@@739)) $generated@@740))
 :pattern ( ($generated@@736 $generated@@739))
))))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ) (! (let (($generated@@743 (type $generated@@742)))
 (=> (= (type $generated@@741) ($generated@@236 $generated@@743)) (and (= ($generated@@735 ($generated@@297 $generated@@741 $generated@@742)) $generated@@741) (= ($generated@@736 ($generated@@297 $generated@@741 $generated@@742)) $generated@@742))))
 :pattern ( ($generated@@297 $generated@@741 $generated@@742))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@216) (= ($generated@@645 ($generated@@343 $generated@@744)) ($generated@@646 $generated@@744)))
 :pattern ( ($generated@@645 ($generated@@343 $generated@@744)))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@745) $generated@@158) ($generated@@157 $generated@@745 ($generated@@96 0))) (and (= ($generated@@343 ($generated@@432 $generated@@2 $generated@@745)) $generated@@745) ($generated@@165 ($generated@@432 ($generated@@97 $generated@@158 $generated@@4) $generated@@745) ($generated@@96 0))))
 :pattern ( ($generated@@157 $generated@@745 ($generated@@96 0)))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ) (!  (=> (and (and (= (type $generated@@746) $generated@@158) (= (type $generated@@747) $generated@@80)) ($generated@@157 $generated@@746 ($generated@@271 $generated@@747))) (and (= ($generated@@343 ($generated@@432 ($generated@@97 $generated@@158 $generated@@4) $generated@@746)) $generated@@746) ($generated@@165 ($generated@@432 ($generated@@97 $generated@@158 $generated@@4) $generated@@746) ($generated@@271 $generated@@747))))
 :pattern ( ($generated@@157 $generated@@746 ($generated@@271 $generated@@747)))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (and (= (type $generated@@748) $generated@@158) (= (type $generated@@749) $generated@@80)) ($generated@@157 $generated@@748 ($generated@@276 $generated@@749))) (and (= ($generated@@343 ($generated@@432 ($generated@@97 $generated@@158 $generated@@4) $generated@@748)) $generated@@748) ($generated@@165 ($generated@@432 ($generated@@97 $generated@@158 $generated@@4) $generated@@748) ($generated@@276 $generated@@749))))
 :pattern ( ($generated@@157 $generated@@748 ($generated@@276 $generated@@749)))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (and (= (type $generated@@750) $generated@@158) (= (type $generated@@751) $generated@@80)) ($generated@@157 $generated@@750 ($generated@@229 $generated@@751))) (and (= ($generated@@343 ($generated@@432 ($generated@@97 $generated@@158 $generated@@2) $generated@@750)) $generated@@750) ($generated@@165 ($generated@@432 ($generated@@97 $generated@@158 $generated@@2) $generated@@750) ($generated@@229 $generated@@751))))
 :pattern ( ($generated@@157 $generated@@750 ($generated@@229 $generated@@751)))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (and (= (type $generated@@752) $generated@@158) (= (type $generated@@753) $generated@@80)) ($generated@@157 $generated@@752 ($generated@@235 $generated@@753))) (and (= ($generated@@343 ($generated@@432 ($generated@@236 $generated@@158) $generated@@752)) $generated@@752) ($generated@@165 ($generated@@432 ($generated@@236 $generated@@158) $generated@@752) ($generated@@235 $generated@@753))))
 :pattern ( ($generated@@157 $generated@@752 ($generated@@235 $generated@@753)))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (and (= (type $generated@@754) $generated@@80) (= (type $generated@@755) $generated@@158)) ($generated@@157 $generated@@755 ($generated@@154 $generated@@754))) (and (= ($generated@@343 ($generated@@432 $generated@@98 $generated@@755)) $generated@@755) ($generated@@165 ($generated@@432 $generated@@98 $generated@@755) ($generated@@154 $generated@@754))))
 :pattern ( ($generated@@157 $generated@@755 ($generated@@154 $generated@@754)))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ) (!  (=> (and (and (= (type $generated@@756) $generated@@80) (= (type $generated@@757) $generated@@158)) ($generated@@157 $generated@@757 ($generated@@209 $generated@@756))) (and (= ($generated@@343 ($generated@@432 $generated@@98 $generated@@757)) $generated@@757) ($generated@@165 ($generated@@432 $generated@@98 $generated@@757) ($generated@@209 $generated@@756))))
 :pattern ( ($generated@@157 $generated@@757 ($generated@@209 $generated@@756)))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@759) $generated@@80) (= (type $generated@@760) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@761) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@762) $generated@@98)) (and (and (and ($generated@@173 $generated@@760) ($generated@@173 $generated@@761)) (and (not (= $generated@@762 $generated@@155)) ($generated@@165 $generated@@762 ($generated@@209 $generated@@759)))) (and ($generated@@758 $generated@@760) ($generated@@185 $generated@@760 $generated@@761)))) (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (! (let (($generated@@765 ($generated@@83 (type $generated@@764))))
 (=> (and (and (= (type $generated@@763) $generated@@98) (= (type $generated@@764) ($generated@@82 $generated@@765))) (and (not (= $generated@@763 $generated@@155)) (or (or (= $generated@@763 $generated@@762) ($generated@@0 ($generated@@102 ($generated@@281 $generated@@762) ($generated@@343 $generated@@763)))) ($generated@@0 ($generated@@102 ($generated@@104 ($generated@@102 $generated@@760 $generated@@762) $generated@@257) ($generated@@343 $generated@@763)))))) (= ($generated@@104 ($generated@@102 $generated@@760 $generated@@763) $generated@@764) ($generated@@104 ($generated@@102 $generated@@761 $generated@@763) $generated@@764))))
 :no-pattern (type $generated@@763)
 :no-pattern (type $generated@@764)
 :no-pattern ($generated $generated@@763)
 :no-pattern ($generated@@0 $generated@@763)
 :no-pattern ($generated $generated@@764)
 :no-pattern ($generated@@0 $generated@@764)
))) (= ($generated@@654 $generated@@759 $generated@@760 $generated@@762) ($generated@@654 $generated@@759 $generated@@761 $generated@@762)))
 :pattern ( ($generated@@758 $generated@@760) ($generated@@185 $generated@@760 $generated@@761) ($generated@@654 $generated@@759 $generated@@761 $generated@@762))
)))
(assert (forall (($generated@@766 T@U) ($generated@@767 T@U) ($generated@@768 T@U) ($generated@@769 T@U) ) (! (let (($generated@@770 (type $generated@@769)))
 (=> (and (and (and (= (type $generated@@766) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@767) $generated@@98)) (= (type $generated@@768) ($generated@@82 $generated@@770))) ($generated@@173 ($generated@@103 $generated@@766 $generated@@767 ($generated@@105 ($generated@@102 $generated@@766 $generated@@767) $generated@@768 $generated@@769)))) ($generated@@185 $generated@@766 ($generated@@103 $generated@@766 $generated@@767 ($generated@@105 ($generated@@102 $generated@@766 $generated@@767) $generated@@768 $generated@@769)))))
 :pattern ( ($generated@@103 $generated@@766 $generated@@767 ($generated@@105 ($generated@@102 $generated@@766 $generated@@767) $generated@@768 $generated@@769)))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (= (type $generated@@771) $generated@@80) (= (type $generated@@772) $generated@@98)) (and (not (= $generated@@772 $generated@@155)) (= ($generated@@156 $generated@@772) ($generated@@154 $generated@@771)))) ($generated@@165 ($generated@@281 $generated@@772) ($generated@@271 $generated@@195)))
 :pattern ( ($generated@@281 $generated@@772) ($generated@@154 $generated@@771))
)))
(assert (forall (($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (and (= (type $generated@@773) $generated@@80) (= (type $generated@@774) $generated@@98)) (and (not (= $generated@@774 $generated@@155)) (= ($generated@@156 $generated@@774) ($generated@@154 $generated@@773)))) ($generated@@165 ($generated@@286 $generated@@774) ($generated@@271 $generated@@195)))
 :pattern ( ($generated@@286 $generated@@774) ($generated@@154 $generated@@773))
)))
(assert (= ($generated@@91 $generated@@192) $generated@@62))
(assert (= ($generated@@362 $generated@@192) $generated@@69))
(assert (= ($generated@@91 $generated@@195) $generated@@63))
(assert (= ($generated@@362 $generated@@195) $generated@@70))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ($generated@@777 T@U) ) (!  (=> (and (and (= (type $generated@@775) ($generated@@97 $generated@@158 $generated@@2)) (= (type $generated@@776) $generated@@80)) (= (type $generated@@777) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@775 ($generated@@229 $generated@@776) $generated@@777) (forall (($generated@@778 T@U) ) (!  (=> (and (= (type $generated@@778) $generated@@158) (< 0 ($generated ($generated@@102 $generated@@775 $generated@@778)))) ($generated@@198 $generated@@778 $generated@@776 $generated@@777))
 :pattern ( ($generated@@102 $generated@@775 $generated@@778))
))))
 :pattern ( ($generated@@95 $generated@@775 ($generated@@229 $generated@@776) $generated@@777))
)))
(assert (forall (($generated@@779 T@U) ($generated@@780 T@U) ($generated@@781 T@U) ) (!  (=> (and (and (and (= (type $generated@@779) $generated@@80) (= (type $generated@@780) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@781) $generated@@98)) (and ($generated@@173 $generated@@780) (and (not (= $generated@@781 $generated@@155)) (= ($generated@@156 $generated@@781) ($generated@@154 $generated@@779))))) ($generated@@165 ($generated@@104 ($generated@@102 $generated@@780 $generated@@781) $generated@@257) ($generated@@271 $generated@@195)))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@780 $generated@@781) $generated@@257) ($generated@@154 $generated@@779))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ($generated@@784 T@U) ) (!  (=> (and (and (and (= (type $generated@@782) $generated@@216) (= (type $generated@@783) $generated@@80)) (= (type $generated@@784) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@173 $generated@@784) (and ($generated@@214 $generated@@782) (exists (($generated@@785 T@U) ) (!  (and (= (type $generated@@785) $generated@@80) ($generated@@95 $generated@@782 ($generated@@215 $generated@@783 $generated@@785) $generated@@784))
 :pattern ( ($generated@@95 $generated@@782 ($generated@@215 $generated@@783 $generated@@785) $generated@@784))
))))) ($generated@@198 ($generated@@223 $generated@@782) $generated@@783 $generated@@784))
 :pattern ( ($generated@@198 ($generated@@223 $generated@@782) $generated@@783 $generated@@784))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ($generated@@788 T@U) ) (!  (=> (and (and (and (= (type $generated@@786) $generated@@216) (= (type $generated@@787) $generated@@80)) (= (type $generated@@788) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@173 $generated@@788) (and ($generated@@214 $generated@@786) (exists (($generated@@789 T@U) ) (!  (and (= (type $generated@@789) $generated@@80) ($generated@@95 $generated@@786 ($generated@@215 $generated@@789 $generated@@787) $generated@@788))
 :pattern ( ($generated@@95 $generated@@786 ($generated@@215 $generated@@789 $generated@@787) $generated@@788))
))))) ($generated@@198 ($generated@@224 $generated@@786) $generated@@787 $generated@@788))
 :pattern ( ($generated@@198 ($generated@@224 $generated@@786) $generated@@787 $generated@@788))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ($generated@@792 Int) ) (! (let (($generated@@793 ($generated@@237 (type $generated@@790))))
 (=> (and (= (type $generated@@790) ($generated@@236 $generated@@793)) (= (type $generated@@791) ($generated@@236 $generated@@793))) (and (=> (< $generated@@792 ($generated@@313 $generated@@790)) (= ($generated@@314 ($generated@@413 $generated@@790 $generated@@791) $generated@@792) ($generated@@314 $generated@@790 $generated@@792))) (=> (<= ($generated@@313 $generated@@790) $generated@@792) (= ($generated@@314 ($generated@@413 $generated@@790 $generated@@791) $generated@@792) ($generated@@314 $generated@@791 (- $generated@@792 ($generated@@313 $generated@@790))))))))
 :pattern ( ($generated@@314 ($generated@@413 $generated@@790 $generated@@791) $generated@@792))
)))
(assert (forall (($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (= (type $generated@@794) $generated@@158) (= (type $generated@@795) $generated@@158)) (= ($generated@@258 ($generated@@293 $generated@@794) ($generated@@293 $generated@@795)) ($generated@@293 ($generated@@258 $generated@@794 $generated@@795))))
 :pattern ( ($generated@@258 ($generated@@293 $generated@@794) ($generated@@293 $generated@@795)))
)))
(assert (forall (($generated@@796 Int) ) (! (= ($generated@@343 ($generated@@8 ($generated@@291 $generated@@796))) ($generated@@293 ($generated@@343 ($generated@@8 $generated@@796))))
 :pattern ( ($generated@@343 ($generated@@8 ($generated@@291 $generated@@796))))
)))
(assert (forall (($generated@@797 T@U) ) (! (= ($generated@@343 ($generated@@293 $generated@@797)) ($generated@@293 ($generated@@343 $generated@@797)))
 :pattern ( ($generated@@343 ($generated@@293 $generated@@797)))
)))
(assert (forall (($generated@@798 T@U) ) (! (let (($generated@@799 ($generated@@237 (type $generated@@798))))
 (=> (and (= (type $generated@@798) ($generated@@236 $generated@@799)) (= ($generated@@313 $generated@@798) 0)) (= $generated@@798 ($generated@@325 $generated@@799))))
 :pattern ( ($generated@@313 $generated@@798))
)))
(assert (forall (($generated@@800 T@U) ($generated@@801 T@U) ($generated@@802 T@U) ) (! (let (($generated@@803 (type $generated@@801)))
 (=> (and (and (= (type $generated@@800) ($generated@@97 $generated@@803 $generated@@2)) (= (type $generated@@802) $generated@@2)) (<= 0 ($generated $generated@@802))) (= ($generated@@356 ($generated@@103 $generated@@800 $generated@@801 $generated@@802)) (+ (- ($generated@@356 $generated@@800) ($generated ($generated@@102 $generated@@800 $generated@@801))) ($generated $generated@@802)))))
 :pattern ( ($generated@@356 ($generated@@103 $generated@@800 $generated@@801 $generated@@802)))
)))
(assert (forall (($generated@@804 T@U) ($generated@@805 T@U) ) (!  (=> (and (= (type $generated@@804) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@805) $generated@@2)) ($generated@@95 $generated@@805 $generated@@46 $generated@@804))
 :pattern ( ($generated@@95 $generated@@805 $generated@@46 $generated@@804))
)))
(assert (forall (($generated@@806 T@U) ($generated@@807 T@U) ) (!  (=> (and (= (type $generated@@806) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@807) $generated@@3)) ($generated@@95 $generated@@807 $generated@@47 $generated@@806))
 :pattern ( ($generated@@95 $generated@@807 $generated@@47 $generated@@806))
)))
(assert (forall (($generated@@808 T@U) ($generated@@809 T@U) ) (!  (=> (and (= (type $generated@@808) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@809) $generated@@4)) ($generated@@95 $generated@@809 $generated@@44 $generated@@808))
 :pattern ( ($generated@@95 $generated@@809 $generated@@44 $generated@@808))
)))
(assert (forall (($generated@@810 T@U) ($generated@@811 T@U) ) (!  (=> (and (= (type $generated@@810) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@811) $generated@@564)) ($generated@@95 $generated@@811 $generated@@45 $generated@@810))
 :pattern ( ($generated@@95 $generated@@811 $generated@@45 $generated@@810))
)))
(assert (forall (($generated@@812 T@U) ($generated@@813 T@U) ) (!  (=> (and (= (type $generated@@812) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@813) $generated@@158)) ($generated@@95 $generated@@813 $generated@@48 $generated@@812))
 :pattern ( ($generated@@95 $generated@@813 $generated@@48 $generated@@812))
)))
(assert (forall (($generated@@814 T@U) ($generated@@815 T@U) ) (!  (=> (and (= (type $generated@@814) ($generated@@236 $generated@@158)) (= (type $generated@@815) $generated@@80)) (= ($generated@@165 $generated@@814 ($generated@@235 $generated@@815)) (forall (($generated@@816 Int) ) (!  (=> (and (<= 0 $generated@@816) (< $generated@@816 ($generated@@313 $generated@@814))) ($generated@@157 ($generated@@314 $generated@@814 $generated@@816) $generated@@815))
 :pattern ( ($generated@@314 $generated@@814 $generated@@816))
))))
 :pattern ( ($generated@@165 $generated@@814 ($generated@@235 $generated@@815)))
)))
(assert (forall (($generated@@818 T@U) ($generated@@819 Int) ) (!  (=> (= (type $generated@@818) ($generated@@236 $generated@@158)) (=> (and (<= 0 $generated@@819) (< $generated@@819 ($generated@@313 $generated@@818))) (< ($generated@@646 ($generated@@432 $generated@@216 ($generated@@314 $generated@@818 $generated@@819))) ($generated@@817 $generated@@818))))
 :pattern ( ($generated@@646 ($generated@@432 $generated@@216 ($generated@@314 $generated@@818 $generated@@819))))
)))
(assert (forall (($generated@@820 T@U) ($generated@@821 T@U) ($generated@@822 T@U) ) (!  (=> (and (and (and (= (type $generated@@820) ($generated@@368 $generated@@158 $generated@@158)) (= (type $generated@@821) $generated@@80)) (= (type $generated@@822) $generated@@80)) ($generated@@165 $generated@@820 ($generated@@507 $generated@@821 $generated@@822))) (and (and ($generated@@165 ($generated@@366 $generated@@820) ($generated@@271 $generated@@821)) ($generated@@165 ($generated@@447 $generated@@820) ($generated@@271 $generated@@822))) ($generated@@165 ($generated@@481 $generated@@820) ($generated@@271 ($generated@@215 $generated@@821 $generated@@822)))))
 :pattern ( ($generated@@165 $generated@@820 ($generated@@507 $generated@@821 $generated@@822)))
)))
(assert (forall (($generated@@823 T@U) ($generated@@824 T@U) ($generated@@825 T@U) ) (!  (=> (and (and (and (= (type $generated@@823) ($generated@@386 $generated@@158 $generated@@158)) (= (type $generated@@824) $generated@@80)) (= (type $generated@@825) $generated@@80)) ($generated@@165 $generated@@823 ($generated@@515 $generated@@824 $generated@@825))) (and (and ($generated@@165 ($generated@@384 $generated@@823) ($generated@@276 $generated@@824)) ($generated@@165 ($generated@@458 $generated@@823) ($generated@@276 $generated@@825))) ($generated@@165 ($generated@@489 $generated@@823) ($generated@@276 ($generated@@215 $generated@@824 $generated@@825)))))
 :pattern ( ($generated@@165 $generated@@823 ($generated@@515 $generated@@824 $generated@@825)))
)))
(assert (forall (($generated@@826 T@U) ) (!  (=> (= (type $generated@@826) $generated@@2) ($generated@@165 $generated@@826 $generated@@46))
 :pattern ( ($generated@@165 $generated@@826 $generated@@46))
)))
(assert (forall (($generated@@827 T@U) ) (!  (=> (= (type $generated@@827) $generated@@3) ($generated@@165 $generated@@827 $generated@@47))
 :pattern ( ($generated@@165 $generated@@827 $generated@@47))
)))
(assert (forall (($generated@@828 T@U) ) (!  (=> (= (type $generated@@828) $generated@@4) ($generated@@165 $generated@@828 $generated@@44))
 :pattern ( ($generated@@165 $generated@@828 $generated@@44))
)))
(assert (forall (($generated@@829 T@U) ) (!  (=> (= (type $generated@@829) $generated@@564) ($generated@@165 $generated@@829 $generated@@45))
 :pattern ( ($generated@@165 $generated@@829 $generated@@45))
)))
(assert (forall (($generated@@830 T@U) ) (!  (=> (= (type $generated@@830) $generated@@158) ($generated@@165 $generated@@830 $generated@@48))
 :pattern ( ($generated@@165 $generated@@830 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@831 () Int)
(declare-fun $generated@@832 () Int)
(declare-fun $generated@@833 () Int)
(declare-fun $generated@@834 () Int)
(declare-fun $generated@@835 () Int)
(declare-fun $generated@@836 () T@U)
(declare-fun $generated@@837 () T@U)
(declare-fun $generated@@838 () T@U)
(declare-fun $generated@@839 () T@U)
(declare-fun $generated@@840 () T@U)
(declare-fun $generated@@841 () T@U)
(declare-fun $generated@@842 () Int)
(declare-fun $generated@@843 () T@U)
(declare-fun $generated@@844 () T@U)
(declare-fun $generated@@845 () T@U)
(declare-fun $generated@@846 () T@U)
(declare-fun $generated@@847 () T@U)
(declare-fun $generated@@848 () T@U)
(declare-fun $generated@@849 () T@U)
(declare-fun $generated@@850 () Int)
(declare-fun $generated@@851 () T@U)
(declare-fun $generated@@852 () T@U)
(declare-fun $generated@@853 () T@U)
(declare-fun $generated@@854 () T@U)
(declare-fun $generated@@855 () T@U)
(declare-fun $generated@@856 () T@U)
(declare-fun $generated@@857 () T@U)
(declare-fun $generated@@858 () T@U)
(declare-fun $generated@@859 () T@U)
(declare-fun $generated@@860 () T@U)
(declare-fun $generated@@861 () Int)
(declare-fun $generated@@862 () T@U)
(declare-fun $generated@@863 () T@U)
(declare-fun $generated@@864 () T@U)
(declare-fun $generated@@865 () T@U)
(declare-fun $generated@@866 () T@U)
(declare-fun $generated@@867 () T@U)
(declare-fun $generated@@868 () T@U)
(declare-fun $generated@@869 () T@U)
(declare-fun $generated@@870 () T@U)
(declare-fun $generated@@871 () T@U)
(declare-fun $generated@@872 () Int)
(declare-fun $generated@@873 () T@U)
(declare-fun $generated@@874 () T@U)
(declare-fun $generated@@875 () T@U)
(declare-fun $generated@@876 () T@U)
(declare-fun $generated@@877 () T@U)
(declare-fun $generated@@878 () T@U)
(declare-fun $generated@@879 () Int)
(declare-fun $generated@@880 () T@U)
(declare-fun $generated@@881 () T@U)
(declare-fun $generated@@882 () T@U)
(declare-fun $generated@@883 () T@U)
(declare-fun $generated@@884 () T@U)
(declare-fun $generated@@885 () T@U)
(declare-fun $generated@@886 () T@U)
(declare-fun $generated@@887 () T@U)
(declare-fun $generated@@888 () T@U)
(declare-fun $generated@@889 () T@U)
(declare-fun $generated@@890 () T@U)
(declare-fun $generated@@891 () T@U)
(declare-fun $generated@@892 () Int)
(declare-fun $generated@@893 () T@U)
(declare-fun $generated@@894 () T@U)
(declare-fun $generated@@895 () T@U)
(declare-fun $generated@@896 () T@U)
(declare-fun $generated@@897 () T@U)
(declare-fun $generated@@898 () T@U)
(declare-fun $generated@@899 () Int)
(declare-fun $generated@@900 () T@U)
(declare-fun $generated@@901 () T@U)
(declare-fun $generated@@902 () T@U)
(declare-fun $generated@@903 () Bool)
(declare-fun $generated@@904 () T@U)
(declare-fun $generated@@905 () Int)
(declare-fun $generated@@906 () T@U)
(declare-fun $generated@@907 () Int)
(declare-fun $generated@@908 () Int)
(declare-fun $generated@@909 () T@U)
(declare-fun $generated@@910 () T@U)
(declare-fun $generated@@911 () T@U)
(declare-fun $generated@@912 () T@U)
(declare-fun $generated@@913 () Int)
(declare-fun $generated@@914 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@836) $generated@@98) (= (type $generated@@837) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@838) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@843) ($generated@@676 $generated@@98 $generated@@4))) (= (type $generated@@883) $generated@@158)) (= (type $generated@@884) $generated@@158)) (= (type $generated@@885) $generated@@158)) (= (type $generated@@886) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@846) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@887) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@888) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@889) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@890) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@891) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@893) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@894) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@895) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@896) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@897) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@898) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@900) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@901) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@902) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@865) $generated@@158)) (= (type $generated@@866) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@867) $generated@@158)) (= (type $generated@@868) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@869) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@870) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@871) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@873) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@874) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@875) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@876) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@877) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@878) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@880) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@881) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@882) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@839) $generated@@158)) (= (type $generated@@840) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@841) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@854) $generated@@158)) (= (type $generated@@855) $generated@@158)) (= (type $generated@@856) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@857) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@858) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@859) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@860) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@862) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@863) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@864) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@844) $generated@@158)) (= (type $generated@@845) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@847) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@848) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@849) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@851) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@852) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@853) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@904) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@906) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@909) $generated@@158)) (= (type $generated@@910) $generated@@80)) (= (type $generated@@911) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@912) ($generated@@97 $generated@@158 $generated@@4))) (= (type $generated@@914) ($generated@@97 $generated@@98 $generated@@99))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 39) (let (($generated@@915  (=> (= $generated@@831 (+ $generated@@832 1)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (or (<= 0 $generated@@833) (> $generated@@834 $generated@@835)) (= (- ($generated@@265 $generated@@836) $generated@@831) $generated@@833))) (=> (or (or (<= 0 $generated@@833) (> $generated@@834 $generated@@835)) (= (- ($generated@@265 $generated@@836) $generated@@831) $generated@@833)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (> $generated@@834 $generated@@835) (and (= $generated@@834 $generated@@835) (< (- ($generated@@265 $generated@@836) $generated@@831) $generated@@833)))) (=> (or (> $generated@@834 $generated@@835) (and (= $generated@@834 $generated@@835) (< (- ($generated@@265 $generated@@836) $generated@@831) $generated@@833))) (=> (= (ControlFlow 0 5) (- 0 4)) (forall (($generated@@916 T@U) ) (!  (=> (and (= (type $generated@@916) $generated@@98) ($generated@@0 ($generated@@102 ($generated@@104 ($generated@@102 $generated@@837 $generated@@836) $generated@@257) ($generated@@343 $generated@@916)))) (and (not (= $generated@@916 $generated@@155)) (not ($generated@@0 ($generated@@104 ($generated@@102 $generated@@838 $generated@@916) $generated@@60)))))
 :pattern ( ($generated@@102 ($generated@@104 ($generated@@102 $generated@@837 $generated@@836) $generated@@257) ($generated@@343 $generated@@916)))
))))))))))
(let (($generated@@917  (=> (and (= $generated@@839 (ite (= ($generated@@730 $generated@@832 ($generated@@291 2)) ($generated@@291 0)) ($generated@@104 ($generated@@102 $generated@@840 $generated@@836) $generated@@172) ($generated@@104 ($generated@@102 $generated@@840 $generated@@836) $generated@@172))) (= $generated@@841 ($generated@@103 $generated@@840 $generated@@836 ($generated@@105 ($generated@@102 $generated@@840 $generated@@836) $generated@@172 $generated@@839)))) (=> (and (and ($generated@@173 $generated@@841) (= $generated@@834 $generated@@842)) (and (= $generated@@837 $generated@@841) (= (ControlFlow 0 16) 5))) $generated@@915))))
(let (($generated@@918  (=> (and (not (= ($generated@@730 $generated@@832 ($generated@@291 2)) ($generated@@291 0))) (= (ControlFlow 0 18) 16)) $generated@@917)))
(let (($generated@@919  (=> (and (= ($generated@@730 $generated@@832 ($generated@@291 2)) ($generated@@291 0)) (= (ControlFlow 0 17) 16)) $generated@@917)))
(let (($generated@@920  (and (=> (= (ControlFlow 0 19) (- 0 21)) ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@172))) (=> ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@172)) (and (=> (= (ControlFlow 0 19) (- 0 20)) (not (= ($generated@@291 2) 0))) (=> (not (= ($generated@@291 2) 0)) (and (=> (= (ControlFlow 0 19) 17) $generated@@919) (=> (= (ControlFlow 0 19) 18) $generated@@918))))))))
(let (($generated@@921  (and (=> (= (ControlFlow 0 25) (- 0 26)) ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@172))) (=> ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@172)) (=> (= $generated@@844 ($generated@@153 $generated@@836)) (=> (and (= $generated@@845 ($generated@@103 $generated@@846 $generated@@836 ($generated@@105 ($generated@@102 $generated@@846 $generated@@836) $generated@@172 $generated@@844))) ($generated@@173 $generated@@845)) (=> (and (and (= $generated@@847 ($generated@@103 $generated@@845 $generated@@836 ($generated@@105 ($generated@@102 $generated@@845 $generated@@836) $generated@@234 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@845 $generated@@836) $generated@@234) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@845 $generated@@836) $generated@@172)))))) (= $generated@@848 ($generated@@103 $generated@@847 $generated@@836 ($generated@@105 ($generated@@102 $generated@@847 $generated@@836) $generated@@244 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@847 $generated@@836) $generated@@244) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@847 $generated@@836) $generated@@177))))))) (and (= $generated@@849 ($generated@@103 $generated@@848 $generated@@836 ($generated@@105 ($generated@@102 $generated@@848 $generated@@836) $generated@@248 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@848 $generated@@836) $generated@@248) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@848 $generated@@836) $generated@@181)))))) (= $generated@@850 (+ $generated@@835 1)))) (=> (and (and (and (and (and (= $generated@@850 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@849 $generated@@836) $generated@@234))) (= $generated@@850 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@849 $generated@@836) $generated@@244)))) (= $generated@@850 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@849 $generated@@836) $generated@@248)))) ($generated@@173 $generated@@849)) (and (= $generated@@851 ($generated@@281 $generated@@836)) (= $generated@@852 ($generated@@104 ($generated@@102 $generated@@849 $generated@@836) $generated@@257)))) (and (and (and ($generated@@173 $generated@@853) ($generated@@758 $generated@@853)) (forall (($generated@@922 T@U) ($generated@@923 T@U) ) (! (let (($generated@@924 ($generated@@83 (type $generated@@923))))
 (=> (and (and (and (= (type $generated@@922) $generated@@98) (= (type $generated@@923) ($generated@@82 $generated@@924))) (and (not (= $generated@@922 $generated@@155)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@849 $generated@@922) $generated@@60)))) (or (or (= $generated@@922 $generated@@836) ($generated@@0 ($generated@@102 $generated@@851 ($generated@@343 $generated@@922)))) ($generated@@0 ($generated@@102 $generated@@852 ($generated@@343 $generated@@922))))) (= ($generated@@104 ($generated@@102 $generated@@853 $generated@@922) $generated@@923) ($generated@@104 ($generated@@102 $generated@@849 $generated@@922) $generated@@923))))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@853 $generated@@922) $generated@@923))
))) (and (and ($generated@@185 $generated@@849 $generated@@853) (= $generated@@840 $generated@@853)) (and (= $generated@@842 $generated@@850) (= (ControlFlow 0 25) 19))))) $generated@@920))))))))
(let (($generated@@925  (and (=> (= (ControlFlow 0 22) (- 0 24)) ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@177))) (=> ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@177)) (and (=> (= (ControlFlow 0 22) (- 0 23)) ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@172))) (=> ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@172)) (=> (and (= $generated@@854 ($generated@@153 $generated@@836)) (= $generated@@855 ($generated@@153 $generated@@836))) (=> (and (and (and (= $generated@@856 ($generated@@103 $generated@@846 $generated@@836 ($generated@@105 ($generated@@102 $generated@@846 $generated@@836) $generated@@177 $generated@@854))) ($generated@@173 $generated@@856)) (and (= $generated@@857 ($generated@@103 $generated@@856 $generated@@836 ($generated@@105 ($generated@@102 $generated@@856 $generated@@836) $generated@@172 $generated@@855))) ($generated@@173 $generated@@857))) (and (and (= $generated@@858 ($generated@@103 $generated@@857 $generated@@836 ($generated@@105 ($generated@@102 $generated@@857 $generated@@836) $generated@@234 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@857 $generated@@836) $generated@@234) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@857 $generated@@836) $generated@@172)))))) (= $generated@@859 ($generated@@103 $generated@@858 $generated@@836 ($generated@@105 ($generated@@102 $generated@@858 $generated@@836) $generated@@244 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@858 $generated@@836) $generated@@244) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@858 $generated@@836) $generated@@177))))))) (and (= $generated@@860 ($generated@@103 $generated@@859 $generated@@836 ($generated@@105 ($generated@@102 $generated@@859 $generated@@836) $generated@@248 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@859 $generated@@836) $generated@@248) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@859 $generated@@836) $generated@@181)))))) (= $generated@@861 (+ $generated@@835 1))))) (=> (and (and (and (and (and (= $generated@@861 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@860 $generated@@836) $generated@@234))) (= $generated@@861 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@860 $generated@@836) $generated@@244)))) (= $generated@@861 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@860 $generated@@836) $generated@@248)))) ($generated@@173 $generated@@860)) (and (= $generated@@862 ($generated@@281 $generated@@836)) (= $generated@@863 ($generated@@104 ($generated@@102 $generated@@860 $generated@@836) $generated@@257)))) (and (and (and ($generated@@173 $generated@@864) ($generated@@758 $generated@@864)) (forall (($generated@@926 T@U) ($generated@@927 T@U) ) (! (let (($generated@@928 ($generated@@83 (type $generated@@927))))
 (=> (and (and (and (= (type $generated@@926) $generated@@98) (= (type $generated@@927) ($generated@@82 $generated@@928))) (and (not (= $generated@@926 $generated@@155)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@860 $generated@@926) $generated@@60)))) (or (or (= $generated@@926 $generated@@836) ($generated@@0 ($generated@@102 $generated@@862 ($generated@@343 $generated@@926)))) ($generated@@0 ($generated@@102 $generated@@863 ($generated@@343 $generated@@926))))) (= ($generated@@104 ($generated@@102 $generated@@864 $generated@@926) $generated@@927) ($generated@@104 ($generated@@102 $generated@@860 $generated@@926) $generated@@927))))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@864 $generated@@926) $generated@@927))
))) (and (and ($generated@@185 $generated@@860 $generated@@864) (= $generated@@840 $generated@@864)) (and (= $generated@@842 $generated@@861) (= (ControlFlow 0 22) 19))))) $generated@@920)))))))))
(let (($generated@@929  (=> (= $generated@@832 ($generated@@730 ($generated@@265 $generated@@836) ($generated@@291 11))) (and (=> (= (ControlFlow 0 27) 22) $generated@@925) (=> (= (ControlFlow 0 27) 25) $generated@@921)))))
(let (($generated@@930  (=> (and (and (not (= $generated@@832 ($generated@@730 ($generated@@265 $generated@@836) ($generated@@291 11)))) (= $generated@@834 $generated@@835)) (and (= $generated@@837 $generated@@846) (= (ControlFlow 0 15) 5))) $generated@@915)))
(let (($generated@@931  (=> (not (= $generated@@832 ($generated@@523 ($generated@@265 $generated@@836) ($generated@@291 2)))) (and (=> (= (ControlFlow 0 28) (- 0 29)) (not (= ($generated@@291 11) 0))) (=> (not (= ($generated@@291 11) 0)) (and (=> (= (ControlFlow 0 28) 27) $generated@@929) (=> (= (ControlFlow 0 28) 15) $generated@@930)))))))
(let (($generated@@932  (=> (= $generated@@832 ($generated@@523 ($generated@@265 $generated@@836) ($generated@@291 2))) (and (=> (= (ControlFlow 0 12) (- 0 14)) ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@172))) (=> ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@172)) (=> (= $generated@@865 ($generated@@153 $generated@@836)) (=> (and (= $generated@@866 ($generated@@103 $generated@@846 $generated@@836 ($generated@@105 ($generated@@102 $generated@@846 $generated@@836) $generated@@172 $generated@@865))) ($generated@@173 $generated@@866)) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@181))) (=> ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@181)) (=> (= $generated@@867 ($generated@@104 ($generated@@102 $generated@@866 $generated@@836) $generated@@172)) (=> (and (= $generated@@868 ($generated@@103 $generated@@866 $generated@@836 ($generated@@105 ($generated@@102 $generated@@866 $generated@@836) $generated@@181 $generated@@867))) ($generated@@173 $generated@@868)) (=> (and (and (= $generated@@869 ($generated@@103 $generated@@868 $generated@@836 ($generated@@105 ($generated@@102 $generated@@868 $generated@@836) $generated@@234 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@868 $generated@@836) $generated@@234) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@868 $generated@@836) $generated@@172)))))) (= $generated@@870 ($generated@@103 $generated@@869 $generated@@836 ($generated@@105 ($generated@@102 $generated@@869 $generated@@836) $generated@@244 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@869 $generated@@836) $generated@@244) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@869 $generated@@836) $generated@@177))))))) (and (= $generated@@871 ($generated@@103 $generated@@870 $generated@@836 ($generated@@105 ($generated@@102 $generated@@870 $generated@@836) $generated@@248 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@870 $generated@@836) $generated@@248) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@870 $generated@@836) $generated@@181)))))) (= $generated@@872 (+ $generated@@835 1)))) (=> (and (and (and (and (and (and (= $generated@@872 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@871 $generated@@836) $generated@@234))) (= $generated@@872 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@871 $generated@@836) $generated@@244)))) (= $generated@@872 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@871 $generated@@836) $generated@@248)))) ($generated@@173 $generated@@871)) (and (= $generated@@873 ($generated@@281 $generated@@836)) (= $generated@@874 ($generated@@104 ($generated@@102 $generated@@871 $generated@@836) $generated@@257)))) (and (and (and ($generated@@173 $generated@@875) ($generated@@758 $generated@@875)) (and (forall (($generated@@933 T@U) ($generated@@934 T@U) ) (! (let (($generated@@935 ($generated@@83 (type $generated@@934))))
 (=> (and (and (and (= (type $generated@@933) $generated@@98) (= (type $generated@@934) ($generated@@82 $generated@@935))) (and (not (= $generated@@933 $generated@@155)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@871 $generated@@933) $generated@@60)))) (or (or (= $generated@@933 $generated@@836) ($generated@@0 ($generated@@102 $generated@@873 ($generated@@343 $generated@@933)))) ($generated@@0 ($generated@@102 $generated@@874 ($generated@@343 $generated@@933))))) (= ($generated@@104 ($generated@@102 $generated@@875 $generated@@933) $generated@@934) ($generated@@104 ($generated@@102 $generated@@871 $generated@@933) $generated@@934))))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@875 $generated@@933) $generated@@934))
)) ($generated@@185 $generated@@871 $generated@@875))) (and (and (= $generated@@876 ($generated@@103 $generated@@875 $generated@@836 ($generated@@105 ($generated@@102 $generated@@875 $generated@@836) $generated@@234 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@875 $generated@@836) $generated@@234) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@875 $generated@@836) $generated@@172)))))) (= $generated@@877 ($generated@@103 $generated@@876 $generated@@836 ($generated@@105 ($generated@@102 $generated@@876 $generated@@836) $generated@@244 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@876 $generated@@836) $generated@@244) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@876 $generated@@836) $generated@@177))))))) (and (= $generated@@878 ($generated@@103 $generated@@877 $generated@@836 ($generated@@105 ($generated@@102 $generated@@877 $generated@@836) $generated@@248 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@877 $generated@@836) $generated@@248) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@877 $generated@@836) $generated@@181)))))) (= $generated@@879 (+ $generated@@872 1)))))) (and (and (and (and (and (= $generated@@879 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@878 $generated@@836) $generated@@234))) (= $generated@@879 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@878 $generated@@836) $generated@@244)))) (= $generated@@879 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@878 $generated@@836) $generated@@248)))) ($generated@@173 $generated@@878)) (and (= $generated@@880 ($generated@@281 $generated@@836)) (= $generated@@881 ($generated@@104 ($generated@@102 $generated@@878 $generated@@836) $generated@@257)))) (and (and (and ($generated@@173 $generated@@882) ($generated@@758 $generated@@882)) (forall (($generated@@936 T@U) ($generated@@937 T@U) ) (! (let (($generated@@938 ($generated@@83 (type $generated@@937))))
 (=> (and (and (and (= (type $generated@@936) $generated@@98) (= (type $generated@@937) ($generated@@82 $generated@@938))) (and (not (= $generated@@936 $generated@@155)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@878 $generated@@936) $generated@@60)))) (or (or (= $generated@@936 $generated@@836) ($generated@@0 ($generated@@102 $generated@@880 ($generated@@343 $generated@@936)))) ($generated@@0 ($generated@@102 $generated@@881 ($generated@@343 $generated@@936))))) (= ($generated@@104 ($generated@@102 $generated@@882 $generated@@936) $generated@@937) ($generated@@104 ($generated@@102 $generated@@878 $generated@@936) $generated@@937))))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@882 $generated@@936) $generated@@937))
))) (and (and ($generated@@185 $generated@@878 $generated@@882) (= $generated@@834 $generated@@879)) (and (= $generated@@837 $generated@@882) (= (ControlFlow 0 12) 5)))))) $generated@@915)))))))))))))
(let (($generated@@939  (=> (not (= ($generated@@730 $generated@@832 ($generated@@291 17)) ($generated@@291 0))) (and (=> (= (ControlFlow 0 30) (- 0 31)) (not (= ($generated@@291 2) 0))) (=> (not (= ($generated@@291 2) 0)) (and (=> (= (ControlFlow 0 30) 12) $generated@@932) (=> (= (ControlFlow 0 30) 28) $generated@@931)))))))
(let (($generated@@940  (=> (= ($generated@@730 $generated@@832 ($generated@@291 17)) ($generated@@291 0)) (and (=> (= (ControlFlow 0 8) (- 0 11)) ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@172))) (=> ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@172)) (and (=> (= (ControlFlow 0 8) (- 0 10)) ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@177))) (=> ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@177)) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@181))) (=> ($generated@@0 ($generated@@674 $generated@@843 $generated@@836 $generated@@181)) (=> (= $generated@@883 ($generated@@153 $generated@@836)) (=> (and (and (= $generated@@884 ($generated@@153 $generated@@836)) (= $generated@@885 ($generated@@153 $generated@@836))) (and (= $generated@@886 ($generated@@103 $generated@@846 $generated@@836 ($generated@@105 ($generated@@102 $generated@@846 $generated@@836) $generated@@172 $generated@@883))) ($generated@@173 $generated@@886))) (=> (and (and (and (= $generated@@887 ($generated@@103 $generated@@886 $generated@@836 ($generated@@105 ($generated@@102 $generated@@886 $generated@@836) $generated@@177 $generated@@884))) ($generated@@173 $generated@@887)) (and (= $generated@@888 ($generated@@103 $generated@@887 $generated@@836 ($generated@@105 ($generated@@102 $generated@@887 $generated@@836) $generated@@181 $generated@@885))) ($generated@@173 $generated@@888))) (and (and (= $generated@@889 ($generated@@103 $generated@@888 $generated@@836 ($generated@@105 ($generated@@102 $generated@@888 $generated@@836) $generated@@234 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@888 $generated@@836) $generated@@234) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@888 $generated@@836) $generated@@172)))))) (= $generated@@890 ($generated@@103 $generated@@889 $generated@@836 ($generated@@105 ($generated@@102 $generated@@889 $generated@@836) $generated@@244 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@889 $generated@@836) $generated@@244) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@889 $generated@@836) $generated@@177))))))) (and (= $generated@@891 ($generated@@103 $generated@@890 $generated@@836 ($generated@@105 ($generated@@102 $generated@@890 $generated@@836) $generated@@248 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@890 $generated@@836) $generated@@248) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@890 $generated@@836) $generated@@181)))))) (= $generated@@892 (+ $generated@@835 1))))) (=> (and (and (and (and (and (and (= $generated@@892 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@891 $generated@@836) $generated@@234))) (= $generated@@892 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@891 $generated@@836) $generated@@244)))) (= $generated@@892 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@891 $generated@@836) $generated@@248)))) ($generated@@173 $generated@@891)) (and (= $generated@@893 ($generated@@281 $generated@@836)) (= $generated@@894 ($generated@@104 ($generated@@102 $generated@@891 $generated@@836) $generated@@257)))) (and (and (and ($generated@@173 $generated@@895) ($generated@@758 $generated@@895)) (and (forall (($generated@@941 T@U) ($generated@@942 T@U) ) (! (let (($generated@@943 ($generated@@83 (type $generated@@942))))
 (=> (and (and (and (= (type $generated@@941) $generated@@98) (= (type $generated@@942) ($generated@@82 $generated@@943))) (and (not (= $generated@@941 $generated@@155)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@891 $generated@@941) $generated@@60)))) (or (or (= $generated@@941 $generated@@836) ($generated@@0 ($generated@@102 $generated@@893 ($generated@@343 $generated@@941)))) ($generated@@0 ($generated@@102 $generated@@894 ($generated@@343 $generated@@941))))) (= ($generated@@104 ($generated@@102 $generated@@895 $generated@@941) $generated@@942) ($generated@@104 ($generated@@102 $generated@@891 $generated@@941) $generated@@942))))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@895 $generated@@941) $generated@@942))
)) ($generated@@185 $generated@@891 $generated@@895))) (and (and (= $generated@@896 ($generated@@103 $generated@@895 $generated@@836 ($generated@@105 ($generated@@102 $generated@@895 $generated@@836) $generated@@234 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@895 $generated@@836) $generated@@234) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@895 $generated@@836) $generated@@172)))))) (= $generated@@897 ($generated@@103 $generated@@896 $generated@@836 ($generated@@105 ($generated@@102 $generated@@896 $generated@@836) $generated@@244 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@896 $generated@@836) $generated@@244) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@896 $generated@@836) $generated@@177))))))) (and (= $generated@@898 ($generated@@103 $generated@@897 $generated@@836 ($generated@@105 ($generated@@102 $generated@@897 $generated@@836) $generated@@248 ($generated@@413 ($generated@@104 ($generated@@102 $generated@@897 $generated@@836) $generated@@248) ($generated@@297 ($generated@@325 $generated@@158) ($generated@@104 ($generated@@102 $generated@@897 $generated@@836) $generated@@181)))))) (= $generated@@899 (+ $generated@@892 1)))))) (and (and (and (and (and (= $generated@@899 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@898 $generated@@836) $generated@@234))) (= $generated@@899 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@898 $generated@@836) $generated@@244)))) (= $generated@@899 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@898 $generated@@836) $generated@@248)))) ($generated@@173 $generated@@898)) (and (= $generated@@900 ($generated@@281 $generated@@836)) (= $generated@@901 ($generated@@104 ($generated@@102 $generated@@898 $generated@@836) $generated@@257)))) (and (and (and ($generated@@173 $generated@@902) ($generated@@758 $generated@@902)) (forall (($generated@@944 T@U) ($generated@@945 T@U) ) (! (let (($generated@@946 ($generated@@83 (type $generated@@945))))
 (=> (and (and (and (= (type $generated@@944) $generated@@98) (= (type $generated@@945) ($generated@@82 $generated@@946))) (and (not (= $generated@@944 $generated@@155)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@898 $generated@@944) $generated@@60)))) (or (or (= $generated@@944 $generated@@836) ($generated@@0 ($generated@@102 $generated@@900 ($generated@@343 $generated@@944)))) ($generated@@0 ($generated@@102 $generated@@901 ($generated@@343 $generated@@944))))) (= ($generated@@104 ($generated@@102 $generated@@902 $generated@@944) $generated@@945) ($generated@@104 ($generated@@102 $generated@@898 $generated@@944) $generated@@945))))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@902 $generated@@944) $generated@@945))
))) (and (and ($generated@@185 $generated@@898 $generated@@902) (= $generated@@834 $generated@@899)) (and (= $generated@@837 $generated@@902) (= (ControlFlow 0 8) 5)))))) $generated@@915)))))))))))))
(let (($generated@@947  (=> (and (< $generated@@832 ($generated@@265 $generated@@836)) (= $generated@@833 (- ($generated@@265 $generated@@836) $generated@@832))) (and (=> (= (ControlFlow 0 32) (- 0 33)) (not (= ($generated@@291 17) 0))) (=> (not (= ($generated@@291 17) 0)) (and (=> (= (ControlFlow 0 32) 8) $generated@@940) (=> (= (ControlFlow 0 32) 30) $generated@@939)))))))
(let (($generated@@948 true))
(let (($generated@@949  (=> $generated@@903 (and (=> (= (ControlFlow 0 34) 3) $generated@@948) (=> (= (ControlFlow 0 34) 32) $generated@@947)))))
(let (($generated@@950 true))
(let (($generated@@951  (and (=> (= (ControlFlow 0 35) 2) $generated@@950) (=> (= (ControlFlow 0 35) 34) $generated@@949))))
(let (($generated@@952 true))
(let (($generated@@953  (=> (and ($generated@@173 $generated@@846) ($generated@@758 $generated@@846)) (=> (and (and (and (= $generated@@835 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@846 $generated@@836) $generated@@234))) (= $generated@@835 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@846 $generated@@836) $generated@@244)))) (= $generated@@835 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@846 $generated@@836) $generated@@248)))) (and ($generated@@173 $generated@@904) ($generated@@185 $generated@@904 $generated@@846))) (=> (and (and (and (and (<= 0 $generated@@835) (<= 0 $generated@@832)) (= $generated@@905 0)) (and (forall (($generated@@954 T@U) ) (!  (=> (= (type $generated@@954) $generated@@98) (=> (and (not (= $generated@@954 $generated@@155)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@838 $generated@@954) $generated@@60))) (or (= ($generated@@102 $generated@@846 $generated@@954) ($generated@@102 $generated@@906 $generated@@954)) (= $generated@@954 $generated@@836))))
 :pattern ( ($generated@@102 $generated@@846 $generated@@954))
)) ($generated@@185 $generated@@906 $generated@@846))) (and (and (forall (($generated@@955 T@U) ($generated@@956 T@U) ) (! (let (($generated@@957 ($generated@@83 (type $generated@@956))))
 (=> (and (and (= (type $generated@@955) $generated@@98) (= (type $generated@@956) ($generated@@82 $generated@@957))) (and (not (= $generated@@955 $generated@@155)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@906 $generated@@955) $generated@@60)))) (or (= ($generated@@104 ($generated@@102 $generated@@846 $generated@@955) $generated@@956) ($generated@@104 ($generated@@102 $generated@@906 $generated@@955) $generated@@956)) ($generated@@0 ($generated@@674 $generated@@843 $generated@@955 $generated@@956)))))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@846 $generated@@955) $generated@@956))
)) (forall (($generated@@958 T@U) ) (!  (=> (and (= (type $generated@@958) $generated@@98) ($generated@@0 ($generated@@102 ($generated@@104 ($generated@@102 $generated@@846 $generated@@836) $generated@@257) ($generated@@343 $generated@@958)))) (and (not (= $generated@@958 $generated@@155)) (not ($generated@@0 ($generated@@104 ($generated@@102 $generated@@838 $generated@@958) $generated@@60)))))
 :pattern ( ($generated@@102 ($generated@@104 ($generated@@102 $generated@@846 $generated@@836) $generated@@257) ($generated@@343 $generated@@958)))
))) (and (>= $generated@@835 $generated@@905) (=> (= $generated@@835 $generated@@905) (and (<= (- ($generated@@265 $generated@@836) $generated@@832) $generated@@907) (=> (= (- ($generated@@265 $generated@@836) $generated@@832) $generated@@907) true)))))) (and (=> (= (ControlFlow 0 36) 1) $generated@@952) (=> (= (ControlFlow 0 36) 35) $generated@@951)))))))
(let (($generated@@959  (=> (= $generated@@843 ($generated@@675 $generated@@155 $generated@@838 $generated@@60 $generated@@836)) (=> (and (and (= ($generated@@265 $generated@@836) $generated@@908) (= ($generated@@153 $generated@@836) $generated@@909)) (and ($generated@@312 ($generated@@104 ($generated@@102 $generated@@838 $generated@@836) $generated@@234) ($generated@@325 $generated@@158)) ($generated@@312 ($generated@@104 ($generated@@102 $generated@@838 $generated@@836) $generated@@244) ($generated@@325 $generated@@158)))) (=> (and (and (and (and ($generated@@312 ($generated@@104 ($generated@@102 $generated@@838 $generated@@836) $generated@@248) ($generated@@325 $generated@@158)) ($generated@@654 $generated@@910 $generated@@838 $generated@@836)) (and ($generated@@408 ($generated@@281 $generated@@836) ($generated@@668 $generated@@158)) ($generated@@408 ($generated@@286 $generated@@836) ($generated@@668 $generated@@158)))) (and (and ($generated@@408 ($generated@@104 ($generated@@102 $generated@@838 $generated@@836) $generated@@257) ($generated@@668 $generated@@158)) (= ($generated@@164 $generated@@836) $generated@@908)) (and (= ($generated@@168 $generated@@836) $generated@@909) (= $generated@@905 0)))) (and (and (and (= $generated@@911 ($generated@@281 $generated@@836)) (= $generated@@912 ($generated@@104 ($generated@@102 $generated@@838 $generated@@836) $generated@@257))) (and ($generated@@173 $generated@@906) ($generated@@758 $generated@@906))) (and (and (forall (($generated@@960 T@U) ($generated@@961 T@U) ) (! (let (($generated@@962 ($generated@@83 (type $generated@@961))))
 (=> (and (and (and (= (type $generated@@960) $generated@@98) (= (type $generated@@961) ($generated@@82 $generated@@962))) (and (not (= $generated@@960 $generated@@155)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@838 $generated@@960) $generated@@60)))) (or (or (= $generated@@960 $generated@@836) ($generated@@0 ($generated@@102 $generated@@911 ($generated@@343 $generated@@960)))) ($generated@@0 ($generated@@102 $generated@@912 ($generated@@343 $generated@@960))))) (= ($generated@@104 ($generated@@102 $generated@@906 $generated@@960) $generated@@961) ($generated@@104 ($generated@@102 $generated@@838 $generated@@960) $generated@@961))))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@906 $generated@@960) $generated@@961))
)) ($generated@@185 $generated@@838 $generated@@906)) (and (= $generated@@913 ($generated@@291 0)) (= $generated@@907 (- ($generated@@265 $generated@@836) $generated@@913)))))) (and (=> (= (ControlFlow 0 37) (- 0 38)) (forall (($generated@@963 T@U) ) (!  (=> (and (= (type $generated@@963) $generated@@98) ($generated@@0 ($generated@@102 ($generated@@104 ($generated@@102 $generated@@906 $generated@@836) $generated@@257) ($generated@@343 $generated@@963)))) (and (not (= $generated@@963 $generated@@155)) (not ($generated@@0 ($generated@@104 ($generated@@102 $generated@@838 $generated@@963) $generated@@60)))))
 :pattern ( ($generated@@102 ($generated@@104 ($generated@@102 $generated@@906 $generated@@836) $generated@@257) ($generated@@343 $generated@@963)))
))) (=> (forall (($generated@@964 T@U) ) (!  (=> (and (= (type $generated@@964) $generated@@98) ($generated@@0 ($generated@@102 ($generated@@104 ($generated@@102 $generated@@906 $generated@@836) $generated@@257) ($generated@@343 $generated@@964)))) (and (not (= $generated@@964 $generated@@155)) (not ($generated@@0 ($generated@@104 ($generated@@102 $generated@@838 $generated@@964) $generated@@60)))))
 :pattern ( ($generated@@102 ($generated@@104 ($generated@@102 $generated@@906 $generated@@836) $generated@@257) ($generated@@343 $generated@@964)))
)) (=> (= (ControlFlow 0 37) 36) $generated@@953))))))))
(let (($generated@@965  (=> (and ($generated@@173 $generated@@838) ($generated@@758 $generated@@838)) (=> (and (and (and (not (= $generated@@836 $generated@@155)) (and ($generated@@165 $generated@@836 ($generated@@209 $generated@@910)) ($generated@@95 $generated@@836 ($generated@@209 $generated@@910) $generated@@838))) (<= ($generated@@291 0) $generated@@908)) (and ($generated@@157 $generated@@909 $generated@@910) ($generated@@198 $generated@@909 $generated@@910 $generated@@838))) (=> (and (and (and (and (= $generated@@905 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@838 $generated@@836) $generated@@234))) (= $generated@@905 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@838 $generated@@836) $generated@@244)))) (= $generated@@905 ($generated@@313 ($generated@@104 ($generated@@102 $generated@@838 $generated@@836) $generated@@248)))) true) (and (and (and ($generated@@173 $generated@@914) ($generated@@185 $generated@@914 $generated@@838)) true) (and (= 1 $generated@@653) (= (ControlFlow 0 39) 37)))) $generated@@959)))))
$generated@@965)))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@T) T@U)
(declare-fun $generated@@453 () T@T)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@604 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@153) 14) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@70) (= (type $generated@@157) $generated@@70)) (= (type $generated@@158) $generated@@153)) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157))) ($generated@@151 $generated@@158))
 :pattern ( ($generated@@151 $generated@@158) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157)))
)))
(assert  (and (and (= ($generated@@1 $generated@@162) 15) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@162)
 :pattern ( ($generated@@161 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@153) (= (type $generated@@166) $generated@@153)) true) (= ($generated@@159 $generated@@165 $generated@@166)  (and (= ($generated@@160 $generated@@165) ($generated@@160 $generated@@166)) (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)))))
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@70)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@82 $generated@@162 $generated@@2)) (= (type $generated@@171) $generated@@70)) ($generated@@149 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@149 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@172 $generated@@173)) $generated@@70)
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@83) (= ($generated@@149 $generated@@174 $generated@@146)  (or (= $generated@@174 $generated@@143) (= ($generated@@172 $generated@@174) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@174 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 16)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@83 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@73 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@83) (= (type $generated@@225) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@226) ($generated@@72 $generated@@4))) (= (type $generated@@228) $generated@@83)) (= (type $generated@@229) ($generated@@72 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (= (type $generated@@231) $generated@@70))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@83) (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@232 $generated@@231 $generated@@233) ($generated@@80 $generated@@232 $generated@@142 $generated@@233)))
 :pattern ( ($generated@@80 $generated@@232 $generated@@231 $generated@@233))
)))
(assert (= (type $generated@@234) $generated@@70))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@83) (= (type $generated@@236) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@235 $generated@@234 $generated@@236) ($generated@@80 $generated@@235 $generated@@146 $generated@@236)))
 :pattern ( ($generated@@80 $generated@@235 $generated@@234 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@153)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@70) (= (type $generated@@242) $generated@@70)) (= (type $generated@@243) $generated@@162)) (= (type $generated@@244) $generated@@162)) (= ($generated@@149 ($generated@@237 $generated@@243 $generated@@244) ($generated@@152 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@149 ($generated@@237 $generated@@243 $generated@@244) ($generated@@152 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@153) (= (type $generated@@246) $generated@@153)) (= ($generated@@159 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@159 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@70)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@82 $generated@@162 $generated@@4)) (= (type $generated@@250) $generated@@70)) (= ($generated@@149 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@162) ($generated@@0 ($generated@@87 $generated@@249 $generated@@251))) ($generated@@238 $generated@@251 $generated@@250))
 :pattern ( ($generated@@87 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@149 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@70)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@82 $generated@@162 $generated@@4)) (= (type $generated@@255) $generated@@70)) (= ($generated@@149 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@162) ($generated@@0 ($generated@@87 $generated@@254 $generated@@256))) ($generated@@238 $generated@@256 $generated@@255))
 :pattern ( ($generated@@87 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@149 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@70) (= (type $generated@@264) $generated@@70)) (= (type $generated@@265) $generated@@162)) (= (type $generated@@266) $generated@@162)) (= (type $generated@@267) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@261 $generated@@267)) (= ($generated@@80 ($generated@@237 $generated@@265 $generated@@266) ($generated@@152 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@80 ($generated@@237 $generated@@265 $generated@@266) ($generated@@152 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@74)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@153) (= ($generated@@151 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@153) ($generated@@151 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@162) (= (type $generated@@273) $generated@@162)) (= $generated@@271 ($generated@@237 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@151 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@162)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@70) (= (type $generated@@286) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@80 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@288) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@289) $generated@@162)) (= (type $generated@@290) $generated@@70)) ($generated@@138 $generated@@287 $generated@@288)) ($generated@@262 $generated@@289 $generated@@290 $generated@@287)) ($generated@@262 $generated@@289 $generated@@290 $generated@@288))
 :pattern ( ($generated@@138 $generated@@287 $generated@@288) ($generated@@262 $generated@@289 $generated@@290 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@80 $generated@@293 $generated@@294 $generated@@291)) ($generated@@80 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@80 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@82 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@85 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@82 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@87 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 18)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@82 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@87 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@87 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 19)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@82 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@87 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@87 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@85 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@82 $generated@@338 $generated@@2)) (= ($generated@@168 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@87 $generated@@337 $generated@@339))) (<= ($generated ($generated@@87 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@87 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@168 $generated@@337))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@162) ($generated@@238 $generated@@343 $generated@@142)) (and (= ($generated@@282 ($generated@@340 $generated@@83 $generated@@343)) $generated@@343) ($generated@@149 ($generated@@340 $generated@@83 $generated@@343) $generated@@142)))
 :pattern ( ($generated@@238 $generated@@343 $generated@@142))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@162) ($generated@@238 $generated@@344 $generated@@231)) (and (= ($generated@@282 ($generated@@340 $generated@@83 $generated@@344)) $generated@@344) ($generated@@149 ($generated@@340 $generated@@83 $generated@@344) $generated@@231)))
 :pattern ( ($generated@@238 $generated@@344 $generated@@231))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@162) ($generated@@238 $generated@@345 $generated@@146)) (and (= ($generated@@282 ($generated@@340 $generated@@83 $generated@@345)) $generated@@345) ($generated@@149 ($generated@@340 $generated@@83 $generated@@345) $generated@@146)))
 :pattern ( ($generated@@238 $generated@@345 $generated@@146))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@162) ($generated@@238 $generated@@346 $generated@@234)) (and (= ($generated@@282 ($generated@@340 $generated@@83 $generated@@346)) $generated@@346) ($generated@@149 ($generated@@340 $generated@@83 $generated@@346) $generated@@234)))
 :pattern ( ($generated@@238 $generated@@346 $generated@@234))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@149 $generated@@347 $generated@@231)  (and ($generated@@149 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@347 $generated@@231))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@83) (= ($generated@@149 $generated@@348 $generated@@234)  (and ($generated@@149 $generated@@348 $generated@@146) (not (= $generated@@348 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@348 $generated@@234))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@305 (type $generated@@349))))
(let (($generated@@351 ($generated@@304 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@303 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@302 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@87 ($generated@@301 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@301 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@305 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@82 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@305 (type $generated@@356))))
(let (($generated@@358 ($generated@@304 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@303 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@302 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@87 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@323 (type $generated@@360))))
(let (($generated@@362 ($generated@@322 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@321 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@320 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@319 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@319 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@323 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@82 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@323 (type $generated@@367))))
(let (($generated@@369 ($generated@@322 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@321 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@320 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@87 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@82 $generated@@162 $generated@@2)) (= (type $generated@@372) $generated@@70)) (= ($generated@@149 $generated@@371 ($generated@@167 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@162) (< 0 ($generated ($generated@@87 $generated@@371 $generated@@373)))) ($generated@@238 $generated@@373 $generated@@372))
 :pattern ( ($generated@@87 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@149 $generated@@371 ($generated@@167 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@82 $generated@@162 $generated@@4)) (= (type $generated@@375) $generated@@70)) (= (type $generated@@376) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@374 ($generated@@247 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@162) ($generated@@0 ($generated@@87 $generated@@374 $generated@@377))) ($generated@@262 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@87 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@80 $generated@@374 ($generated@@247 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@162 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@252 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@162) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@262 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@252 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(= ($generated ($generated@@87 ($generated@@296 $generated@@383) $generated@@382)) 0))
 :pattern ( (let (($generated@@383 (type $generated@@382)))
($generated@@87 ($generated@@296 $generated@@383) $generated@@382)))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@162 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@305 (type $generated@@387))))
(let (($generated@@389 ($generated@@304 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@82 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@303 $generated@@162 $generated@@162)) (= (type $generated@@391) $generated@@162)) (= ($generated@@0 ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@87 ($generated@@301 $generated@@390) ($generated@@160 ($generated@@340 $generated@@153 $generated@@391)))) (= ($generated@@87 ($generated@@385 $generated@@390) ($generated@@160 ($generated@@340 $generated@@153 $generated@@391))) ($generated@@161 ($generated@@340 $generated@@153 $generated@@391))))))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@82 $generated@@162 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@323 (type $generated@@395))))
(let (($generated@@397 ($generated@@322 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@321 $generated@@162 $generated@@162)) (= (type $generated@@399) $generated@@162)) (= ($generated@@0 ($generated@@87 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@87 ($generated@@319 $generated@@398) ($generated@@160 ($generated@@340 $generated@@153 $generated@@399)))) (= ($generated@@87 ($generated@@393 $generated@@398) ($generated@@160 ($generated@@340 $generated@@153 $generated@@399))) ($generated@@161 ($generated@@340 $generated@@153 $generated@@399))))))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@304 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@303 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@87 ($generated@@353 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@87 ($generated@@301 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@87 ($generated@@385 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@87 ($generated@@301 $generated@@400) $generated@@404))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@87 ($generated@@353 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@322 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@321 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@364 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@319 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@393 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@319 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@364 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@70)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@303 $generated@@162 $generated@@162)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) $generated@@70)) (= (type $generated@@416) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@162) ($generated@@0 ($generated@@87 ($generated@@301 $generated@@413) $generated@@417))) (and ($generated@@262 ($generated@@87 ($generated@@385 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@262 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@301 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@70)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@321 $generated@@162 $generated@@162)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@162) ($generated@@0 ($generated@@87 ($generated@@319 $generated@@421) $generated@@425))) (and ($generated@@262 ($generated@@87 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@262 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@87 ($generated@@319 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@80 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@426) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@427) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@426 $generated@@428))) (and ($generated@@138 $generated@@426 $generated@@427) ($generated@@138 $generated@@427 $generated@@428))) ($generated@@138 $generated@@426 $generated@@428))
 :pattern ( ($generated@@138 $generated@@426 $generated@@427) ($generated@@138 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@T) ) (! (= (type ($generated@@429 $generated@@430)) ($generated@@82 $generated@@430 $generated@@4))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@323 (type $generated@@431))))
(let (($generated@@433 ($generated@@322 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@321 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@320 $generated@@433 $generated@@432)) (= ($generated@@319 $generated@@431) ($generated@@429 $generated@@433))))))
 :pattern ( ($generated@@319 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@323 (type $generated@@434))))
(let (($generated@@436 ($generated@@322 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@321 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@320 $generated@@436 $generated@@435)) (= ($generated@@364 $generated@@434) ($generated@@429 $generated@@435))))))
 :pattern ( ($generated@@364 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@323 (type $generated@@437))))
(let (($generated@@439 ($generated@@322 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@321 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@320 $generated@@439 $generated@@438)) (= ($generated@@392 $generated@@437) ($generated@@429 $generated@@162))))))
 :pattern ( ($generated@@392 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@305 (type $generated@@440))))
(let (($generated@@442 ($generated@@304 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@303 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@302 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@162) (= (type $generated@@444) $generated@@162)) ($generated@@0 ($generated@@87 ($generated@@384 $generated@@440) ($generated@@282 ($generated@@237 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@384 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@323 (type $generated@@445))))
(let (($generated@@447 ($generated@@322 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@321 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@320 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@162) (= (type $generated@@449) $generated@@162)) ($generated@@0 ($generated@@87 ($generated@@392 $generated@@445) ($generated@@282 ($generated@@237 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@392 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@162) ($generated@@238 $generated@@450 $generated@@46)) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@450)) $generated@@450) ($generated@@149 ($generated@@340 $generated@@2 $generated@@450) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@450 $generated@@46))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@162) ($generated@@238 $generated@@451 $generated@@47)) (and (= ($generated@@282 ($generated@@340 $generated@@3 $generated@@451)) $generated@@451) ($generated@@149 ($generated@@340 $generated@@3 $generated@@451) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@451 $generated@@47))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@162) ($generated@@238 $generated@@452 $generated@@44)) (and (= ($generated@@282 ($generated@@340 $generated@@4 $generated@@452)) $generated@@452) ($generated@@149 ($generated@@340 $generated@@4 $generated@@452) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@452 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@453) 20))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@162) ($generated@@238 $generated@@454 $generated@@45)) (and (= ($generated@@282 ($generated@@340 $generated@@453 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@340 $generated@@453 $generated@@454) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@454 $generated@@45))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@70) (= ($generated@@238 ($generated@@282 $generated@@455) $generated@@456) ($generated@@149 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@238 ($generated@@282 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@85 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@82 $generated@@458 $generated@@2)) (<= 0 ($generated@@295 $generated@@457))))
 :pattern ( ($generated@@295 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@277 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@276 $generated@@460)) (<= 0 ($generated@@275 $generated@@459))))
 :pattern ( ($generated@@275 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@461 ($generated@@410 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@410 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@410 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@410 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@78 ($generated@@410 $generated@@469 $generated@@470)) $generated@@58))
 :pattern ( ($generated@@410 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@471 ($generated@@418 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@418 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@418 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@418 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@78 ($generated@@418 $generated@@479 $generated@@480)) $generated@@59))
 :pattern ( ($generated@@418 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@162) (= (type $generated@@482) $generated@@162)) (= ($generated@@268 ($generated@@237 $generated@@481 $generated@@482)) $generated@@63))
 :pattern ( ($generated@@237 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@152 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@152 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@152 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@152 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@162) (= (type $generated@@492) $generated@@162)) (= ($generated@@160 ($generated@@237 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@237 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@162) (= (type $generated@@494) $generated@@162)) (= ($generated@@161 ($generated@@237 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@237 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@83) ($generated@@149 $generated@@495 $generated@@142))
 :pattern ( ($generated@@149 $generated@@495 $generated@@142))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@277 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@276 $generated@@162)) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@275 $generated@@502))) ($generated@@262 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@80 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@81 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@81 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@247 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@247 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@247 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@512 ($generated@@252 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@252 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@78 ($generated@@252 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@516 ($generated@@167 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@167 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@78 ($generated@@167 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@340 $generated@@525 ($generated@@282 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@282 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@303 $generated@@162 $generated@@162)) (= (type $generated@@527) $generated@@70)) (= (type $generated@@528) $generated@@70)) (= ($generated@@149 $generated@@526 ($generated@@410 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@162) ($generated@@0 ($generated@@87 ($generated@@301 $generated@@526) $generated@@529))) (and ($generated@@238 ($generated@@87 ($generated@@385 $generated@@526) $generated@@529) $generated@@528) ($generated@@238 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@526) $generated@@529))
 :pattern ( ($generated@@87 ($generated@@301 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@149 $generated@@526 ($generated@@410 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@321 $generated@@162 $generated@@162)) (= (type $generated@@531) $generated@@70)) (= (type $generated@@532) $generated@@70)) (= ($generated@@149 $generated@@530 ($generated@@418 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@162) ($generated@@0 ($generated@@87 ($generated@@319 $generated@@530) $generated@@533))) (and ($generated@@238 ($generated@@87 ($generated@@393 $generated@@530) $generated@@533) $generated@@532) ($generated@@238 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@530) $generated@@533))
 :pattern ( ($generated@@87 ($generated@@319 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@149 $generated@@530 ($generated@@418 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@162) (= (type $generated@@537) $generated@@162)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@237 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@237 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@162) (= (type $generated@@539) $generated@@162)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@237 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@237 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@162) (= (type $generated@@541) $generated@@70)) (= (type $generated@@542) $generated@@70)) ($generated@@238 $generated@@540 ($generated@@410 $generated@@541 $generated@@542))) (and (= ($generated@@282 ($generated@@340 ($generated@@303 $generated@@162 $generated@@162) $generated@@540)) $generated@@540) ($generated@@149 ($generated@@340 ($generated@@303 $generated@@162 $generated@@162) $generated@@540) ($generated@@410 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@238 $generated@@540 ($generated@@410 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@162) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@238 $generated@@543 ($generated@@418 $generated@@544 $generated@@545))) (and (= ($generated@@282 ($generated@@340 ($generated@@321 $generated@@162 $generated@@162) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@340 ($generated@@321 $generated@@162 $generated@@162) $generated@@543) ($generated@@418 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@238 $generated@@543 ($generated@@418 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@70) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@162)) ($generated@@238 $generated@@548 ($generated@@152 $generated@@546 $generated@@547))) (and (= ($generated@@282 ($generated@@340 $generated@@153 $generated@@548)) $generated@@548) ($generated@@149 ($generated@@340 $generated@@153 $generated@@548) ($generated@@152 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@548 ($generated@@152 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (not ($generated@@0 ($generated@@87 ($generated@@429 $generated@@550) $generated@@549))))
 :pattern ( (let (($generated@@550 (type $generated@@549)))
($generated@@87 ($generated@@429 $generated@@550) $generated@@549)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@75)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@70) (= (type $generated@@554) $generated@@70)) (and (= ($generated@@78 ($generated@@152 $generated@@553 $generated@@554)) $generated@@64) (= ($generated@@551 ($generated@@152 $generated@@553 $generated@@554)) $generated@@68)))
 :pattern ( ($generated@@152 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@153) (= ($generated@@534 ($generated@@282 $generated@@555)) ($generated@@535 $generated@@555)))
 :pattern ( ($generated@@534 ($generated@@282 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@162) ($generated@@238 $generated@@556 ($generated@@81 0))) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@556)) $generated@@556) ($generated@@149 ($generated@@340 ($generated@@82 $generated@@162 $generated@@4) $generated@@556) ($generated@@81 0))))
 :pattern ( ($generated@@238 $generated@@556 ($generated@@81 0)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@162) (= (type $generated@@558) $generated@@70)) ($generated@@238 $generated@@557 ($generated@@247 $generated@@558))) (and (= ($generated@@282 ($generated@@340 ($generated@@82 $generated@@162 $generated@@4) $generated@@557)) $generated@@557) ($generated@@149 ($generated@@340 ($generated@@82 $generated@@162 $generated@@4) $generated@@557) ($generated@@247 $generated@@558))))
 :pattern ( ($generated@@238 $generated@@557 ($generated@@247 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@162) (= (type $generated@@560) $generated@@70)) ($generated@@238 $generated@@559 ($generated@@252 $generated@@560))) (and (= ($generated@@282 ($generated@@340 ($generated@@82 $generated@@162 $generated@@4) $generated@@559)) $generated@@559) ($generated@@149 ($generated@@340 ($generated@@82 $generated@@162 $generated@@4) $generated@@559) ($generated@@252 $generated@@560))))
 :pattern ( ($generated@@238 $generated@@559 ($generated@@252 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@162) (= (type $generated@@562) $generated@@70)) ($generated@@238 $generated@@561 ($generated@@167 $generated@@562))) (and (= ($generated@@282 ($generated@@340 ($generated@@82 $generated@@162 $generated@@2) $generated@@561)) $generated@@561) ($generated@@149 ($generated@@340 ($generated@@82 $generated@@162 $generated@@2) $generated@@561) ($generated@@167 $generated@@562))))
 :pattern ( ($generated@@238 $generated@@561 ($generated@@167 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@162) (= (type $generated@@564) $generated@@70)) ($generated@@238 $generated@@563 ($generated@@496 $generated@@564))) (and (= ($generated@@282 ($generated@@340 ($generated@@276 $generated@@162) $generated@@563)) $generated@@563) ($generated@@149 ($generated@@340 ($generated@@276 $generated@@162) $generated@@563) ($generated@@496 $generated@@564))))
 :pattern ( ($generated@@238 $generated@@563 ($generated@@496 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
 (=> (and (and (and (= (type $generated@@565) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@566) $generated@@83)) (= (type $generated@@567) ($generated@@72 $generated@@569))) ($generated@@261 ($generated@@88 $generated@@565 $generated@@566 ($generated@@90 ($generated@@87 $generated@@565 $generated@@566) $generated@@567 $generated@@568)))) ($generated@@138 $generated@@565 ($generated@@88 $generated@@565 $generated@@566 ($generated@@90 ($generated@@87 $generated@@565 $generated@@566) $generated@@567 $generated@@568)))))
 :pattern ( ($generated@@88 $generated@@565 $generated@@566 ($generated@@90 ($generated@@87 $generated@@565 $generated@@566) $generated@@567 $generated@@568)))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@61))
(assert (= ($generated@@551 $generated@@142) $generated@@67))
(assert (= ($generated@@78 $generated@@231) $generated@@62))
(assert (= ($generated@@551 $generated@@231) $generated@@67))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@551 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@234) $generated@@66))
(assert (= ($generated@@551 $generated@@234) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@162 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@167 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@162) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@262 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@167 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@153) (= (type $generated@@575) $generated@@70)) (= (type $generated@@576) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@576) (and ($generated@@151 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@70) ($generated@@80 $generated@@574 ($generated@@152 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@80 $generated@@574 ($generated@@152 $generated@@575 $generated@@577) $generated@@576))
))))) ($generated@@262 ($generated@@160 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@262 ($generated@@160 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@153) (= (type $generated@@579) $generated@@70)) (= (type $generated@@580) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@580) (and ($generated@@151 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@70) ($generated@@80 $generated@@578 ($generated@@152 $generated@@581 $generated@@579) $generated@@580))
 :pattern ( ($generated@@80 $generated@@578 ($generated@@152 $generated@@581 $generated@@579) $generated@@580))
))))) ($generated@@262 ($generated@@161 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@262 ($generated@@161 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@162) (= (type $generated@@583) $generated@@162)) (= ($generated@@237 ($generated@@257 $generated@@582) ($generated@@257 $generated@@583)) ($generated@@257 ($generated@@237 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@237 ($generated@@257 $generated@@582) ($generated@@257 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (= ($generated@@282 ($generated@@257 $generated@@584)) ($generated@@257 ($generated@@282 $generated@@584)))
 :pattern ( ($generated@@282 ($generated@@257 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@277 (type $generated@@585))))
 (=> (and (= (type $generated@@585) ($generated@@276 $generated@@586)) (= ($generated@@275 $generated@@585) 0)) (= $generated@@585 ($generated@@274 $generated@@586))))
 :pattern ( ($generated@@275 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@588)))
 (=> (and (and (= (type $generated@@587) ($generated@@82 $generated@@590 $generated@@2)) (= (type $generated@@589) $generated@@2)) (<= 0 ($generated $generated@@589))) (= ($generated@@295 ($generated@@88 $generated@@587 $generated@@588 $generated@@589)) (+ (- ($generated@@295 $generated@@587) ($generated ($generated@@87 $generated@@587 $generated@@588))) ($generated $generated@@589)))))
 :pattern ( ($generated@@295 ($generated@@88 $generated@@587 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@592) $generated@@2)) ($generated@@80 $generated@@592 $generated@@46 $generated@@591))
 :pattern ( ($generated@@80 $generated@@592 $generated@@46 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@3)) ($generated@@80 $generated@@594 $generated@@47 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@47 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@4)) ($generated@@80 $generated@@596 $generated@@44 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@44 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@453)) ($generated@@80 $generated@@598 $generated@@45 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@45 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@162)) ($generated@@80 $generated@@600 $generated@@48 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@48 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@276 $generated@@162)) (= (type $generated@@602) $generated@@70)) (= ($generated@@149 $generated@@601 ($generated@@496 $generated@@602)) (forall (($generated@@603 Int) ) (!  (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@275 $generated@@601))) ($generated@@238 ($generated@@497 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@497 $generated@@601 $generated@@603))
))))
 :pattern ( ($generated@@149 $generated@@601 ($generated@@496 $generated@@602)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 Int) ) (!  (=> (= (type $generated@@605) ($generated@@276 $generated@@162)) (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@275 $generated@@605))) (< ($generated@@535 ($generated@@340 $generated@@153 ($generated@@497 $generated@@605 $generated@@606))) ($generated@@604 $generated@@605))))
 :pattern ( ($generated@@535 ($generated@@340 $generated@@153 ($generated@@497 $generated@@605 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@303 $generated@@162 $generated@@162)) (= (type $generated@@608) $generated@@70)) (= (type $generated@@609) $generated@@70)) ($generated@@149 $generated@@607 ($generated@@410 $generated@@608 $generated@@609))) (and (and ($generated@@149 ($generated@@301 $generated@@607) ($generated@@247 $generated@@608)) ($generated@@149 ($generated@@353 $generated@@607) ($generated@@247 $generated@@609))) ($generated@@149 ($generated@@384 $generated@@607) ($generated@@247 ($generated@@152 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@149 $generated@@607 ($generated@@410 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@321 $generated@@162 $generated@@162)) (= (type $generated@@611) $generated@@70)) (= (type $generated@@612) $generated@@70)) ($generated@@149 $generated@@610 ($generated@@418 $generated@@611 $generated@@612))) (and (and ($generated@@149 ($generated@@319 $generated@@610) ($generated@@252 $generated@@611)) ($generated@@149 ($generated@@364 $generated@@610) ($generated@@252 $generated@@612))) ($generated@@149 ($generated@@392 $generated@@610) ($generated@@252 ($generated@@152 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@149 $generated@@610 ($generated@@418 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@2) ($generated@@149 $generated@@613 $generated@@46))
 :pattern ( ($generated@@149 $generated@@613 $generated@@46))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@3) ($generated@@149 $generated@@614 $generated@@47))
 :pattern ( ($generated@@149 $generated@@614 $generated@@47))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@4) ($generated@@149 $generated@@615 $generated@@44))
 :pattern ( ($generated@@149 $generated@@615 $generated@@44))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@453) ($generated@@149 $generated@@616 $generated@@45))
 :pattern ( ($generated@@149 $generated@@616 $generated@@45))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@162) ($generated@@149 $generated@@617 $generated@@48))
 :pattern ( ($generated@@149 $generated@@617 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () Bool)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 (T@U) Bool)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Bool)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () Int)
(assert  (and (and (and (and (and (= (type $generated@@618) ($generated@@177 $generated@@83 $generated@@4)) (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@621) $generated@@83)) (= (type $generated@@623) $generated@@83)) (= (type $generated@@624) $generated@@83)) (= (type $generated@@626) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@628  (=> (= $generated@@618 ($generated@@176 $generated@@143 $generated@@619 $generated@@60 false)) (=> (and (=> $generated@@620 (and ($generated@@149 $generated@@621 $generated@@231) ($generated@@80 $generated@@621 $generated@@231 $generated@@619))) (= (ControlFlow 0 2) (- 0 1))) $generated@@620))))
(let (($generated@@629  (=> (and ($generated@@261 $generated@@619) ($generated@@622 $generated@@619)) (=> (and (and (and (not (= $generated@@623 $generated@@143)) ($generated@@149 $generated@@623 $generated@@234)) (and (=> $generated@@620 (and ($generated@@149 $generated@@624 $generated@@231) ($generated@@80 $generated@@624 $generated@@231 $generated@@619))) true)) (and (and (=> $generated@@625 (and ($generated@@149 $generated@@626 $generated@@231) ($generated@@80 $generated@@626 $generated@@231 $generated@@619))) true) (and (= 1 $generated@@627) (= (ControlFlow 0 3) 2)))) $generated@@628))))
$generated@@629)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@T) T@U)
(declare-fun $generated@@453 () T@T)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@604 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@138 $generated@@139 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@139 $generated@@141) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@140 $generated@@141) $generated@@60))
)))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140))
)))
(assert  (and (= (type $generated@@142) $generated@@70) (= (type $generated@@143) $generated@@83)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@83) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@144 $generated@@142 $generated@@145)  (or (= $generated@@144 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@145 $generated@@144) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@144 $generated@@142 $generated@@145))
)))
(assert (= (type $generated@@146) $generated@@70))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@83) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@147 $generated@@146 $generated@@148)  (or (= $generated@@147 $generated@@143) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@147) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@147 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= (type $generated@@150) $generated@@2) ($generated@@149 $generated@@150 ($generated@@81 0)))
 :pattern ( ($generated@@149 $generated@@150 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@153) 14) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@70) (= (type $generated@@157) $generated@@70)) (= (type $generated@@158) $generated@@153)) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157))) ($generated@@151 $generated@@158))
 :pattern ( ($generated@@151 $generated@@158) ($generated@@149 $generated@@158 ($generated@@152 $generated@@156 $generated@@157)))
)))
(assert  (and (and (= ($generated@@1 $generated@@162) 15) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@162)
 :pattern ( ($generated@@161 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@153) (= (type $generated@@166) $generated@@153)) true) (= ($generated@@159 $generated@@165 $generated@@166)  (and (= ($generated@@160 $generated@@165) ($generated@@160 $generated@@166)) (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)))))
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@70)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@82 $generated@@162 $generated@@2)) (= (type $generated@@171) $generated@@70)) ($generated@@149 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@149 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@172 $generated@@173)) $generated@@70)
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@83) (= ($generated@@149 $generated@@174 $generated@@146)  (or (= $generated@@174 $generated@@143) (= ($generated@@172 $generated@@174) $generated@@146))))
 :pattern ( ($generated@@149 $generated@@174 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 16)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@83 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@73 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@83) (= (type $generated@@225) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@226) ($generated@@72 $generated@@4))) (= (type $generated@@228) $generated@@83)) (= (type $generated@@229) ($generated@@72 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (= (type $generated@@231) $generated@@70))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@83) (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@232 $generated@@231 $generated@@233) ($generated@@80 $generated@@232 $generated@@142 $generated@@233)))
 :pattern ( ($generated@@80 $generated@@232 $generated@@231 $generated@@233))
)))
(assert (= (type $generated@@234) $generated@@70))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@83) (= (type $generated@@236) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@235 $generated@@234 $generated@@236) ($generated@@80 $generated@@235 $generated@@146 $generated@@236)))
 :pattern ( ($generated@@80 $generated@@235 $generated@@234 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@153)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@70) (= (type $generated@@242) $generated@@70)) (= (type $generated@@243) $generated@@162)) (= (type $generated@@244) $generated@@162)) (= ($generated@@149 ($generated@@237 $generated@@243 $generated@@244) ($generated@@152 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@149 ($generated@@237 $generated@@243 $generated@@244) ($generated@@152 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@153) (= (type $generated@@246) $generated@@153)) (= ($generated@@159 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@159 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@70)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@82 $generated@@162 $generated@@4)) (= (type $generated@@250) $generated@@70)) (= ($generated@@149 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@162) ($generated@@0 ($generated@@87 $generated@@249 $generated@@251))) ($generated@@238 $generated@@251 $generated@@250))
 :pattern ( ($generated@@87 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@149 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@70)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@82 $generated@@162 $generated@@4)) (= (type $generated@@255) $generated@@70)) (= ($generated@@149 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@162) ($generated@@0 ($generated@@87 $generated@@254 $generated@@256))) ($generated@@238 $generated@@256 $generated@@255))
 :pattern ( ($generated@@87 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@149 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@70) (= (type $generated@@264) $generated@@70)) (= (type $generated@@265) $generated@@162)) (= (type $generated@@266) $generated@@162)) (= (type $generated@@267) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@261 $generated@@267)) (= ($generated@@80 ($generated@@237 $generated@@265 $generated@@266) ($generated@@152 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@80 ($generated@@237 $generated@@265 $generated@@266) ($generated@@152 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@74)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@153) (= ($generated@@151 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@153) ($generated@@151 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@162) (= (type $generated@@273) $generated@@162)) (= $generated@@271 ($generated@@237 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@151 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@162)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@70) (= (type $generated@@286) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@80 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@288) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@289) $generated@@162)) (= (type $generated@@290) $generated@@70)) ($generated@@138 $generated@@287 $generated@@288)) ($generated@@262 $generated@@289 $generated@@290 $generated@@287)) ($generated@@262 $generated@@289 $generated@@290 $generated@@288))
 :pattern ( ($generated@@138 $generated@@287 $generated@@288) ($generated@@262 $generated@@289 $generated@@290 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@291) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@292) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@294) $generated@@70)) ($generated@@138 $generated@@291 $generated@@292)) ($generated@@80 $generated@@293 $generated@@294 $generated@@291)) ($generated@@80 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@138 $generated@@291 $generated@@292) ($generated@@80 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@82 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@85 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@82 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@87 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 18)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@82 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@87 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@87 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 19)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@82 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@87 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@87 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@85 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@82 $generated@@338 $generated@@2)) (= ($generated@@168 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@87 $generated@@337 $generated@@339))) (<= ($generated ($generated@@87 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@87 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@168 $generated@@337))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@162) ($generated@@238 $generated@@343 $generated@@142)) (and (= ($generated@@282 ($generated@@340 $generated@@83 $generated@@343)) $generated@@343) ($generated@@149 ($generated@@340 $generated@@83 $generated@@343) $generated@@142)))
 :pattern ( ($generated@@238 $generated@@343 $generated@@142))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@162) ($generated@@238 $generated@@344 $generated@@231)) (and (= ($generated@@282 ($generated@@340 $generated@@83 $generated@@344)) $generated@@344) ($generated@@149 ($generated@@340 $generated@@83 $generated@@344) $generated@@231)))
 :pattern ( ($generated@@238 $generated@@344 $generated@@231))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@162) ($generated@@238 $generated@@345 $generated@@146)) (and (= ($generated@@282 ($generated@@340 $generated@@83 $generated@@345)) $generated@@345) ($generated@@149 ($generated@@340 $generated@@83 $generated@@345) $generated@@146)))
 :pattern ( ($generated@@238 $generated@@345 $generated@@146))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@162) ($generated@@238 $generated@@346 $generated@@234)) (and (= ($generated@@282 ($generated@@340 $generated@@83 $generated@@346)) $generated@@346) ($generated@@149 ($generated@@340 $generated@@83 $generated@@346) $generated@@234)))
 :pattern ( ($generated@@238 $generated@@346 $generated@@234))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@83) (= ($generated@@149 $generated@@347 $generated@@231)  (and ($generated@@149 $generated@@347 $generated@@142) (not (= $generated@@347 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@347 $generated@@231))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@83) (= ($generated@@149 $generated@@348 $generated@@234)  (and ($generated@@149 $generated@@348 $generated@@146) (not (= $generated@@348 $generated@@143)))))
 :pattern ( ($generated@@149 $generated@@348 $generated@@234))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@305 (type $generated@@349))))
(let (($generated@@351 ($generated@@304 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@303 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@302 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@87 ($generated@@301 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@301 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@305 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@82 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@305 (type $generated@@356))))
(let (($generated@@358 ($generated@@304 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@303 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@302 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@87 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@323 (type $generated@@360))))
(let (($generated@@362 ($generated@@322 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@321 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@320 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@319 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@319 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@323 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@82 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@323 (type $generated@@367))))
(let (($generated@@369 ($generated@@322 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@321 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@320 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@87 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@82 $generated@@162 $generated@@2)) (= (type $generated@@372) $generated@@70)) (= ($generated@@149 $generated@@371 ($generated@@167 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@162) (< 0 ($generated ($generated@@87 $generated@@371 $generated@@373)))) ($generated@@238 $generated@@373 $generated@@372))
 :pattern ( ($generated@@87 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@149 $generated@@371 ($generated@@167 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@82 $generated@@162 $generated@@4)) (= (type $generated@@375) $generated@@70)) (= (type $generated@@376) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@374 ($generated@@247 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@162) ($generated@@0 ($generated@@87 $generated@@374 $generated@@377))) ($generated@@262 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@87 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@80 $generated@@374 ($generated@@247 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@82 $generated@@162 $generated@@4)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@378 ($generated@@252 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@162) ($generated@@0 ($generated@@87 $generated@@378 $generated@@381))) ($generated@@262 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@87 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@80 $generated@@378 ($generated@@252 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(= ($generated ($generated@@87 ($generated@@296 $generated@@383) $generated@@382)) 0))
 :pattern ( (let (($generated@@383 (type $generated@@382)))
($generated@@87 ($generated@@296 $generated@@383) $generated@@382)))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@82 $generated@@162 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@305 (type $generated@@387))))
(let (($generated@@389 ($generated@@304 (type $generated@@387))))
(= (type ($generated@@385 $generated@@387)) ($generated@@82 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@385 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@303 $generated@@162 $generated@@162)) (= (type $generated@@391) $generated@@162)) (= ($generated@@0 ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@87 ($generated@@301 $generated@@390) ($generated@@160 ($generated@@340 $generated@@153 $generated@@391)))) (= ($generated@@87 ($generated@@385 $generated@@390) ($generated@@160 ($generated@@340 $generated@@153 $generated@@391))) ($generated@@161 ($generated@@340 $generated@@153 $generated@@391))))))
 :pattern ( ($generated@@87 ($generated@@384 $generated@@390) $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@82 $generated@@162 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@323 (type $generated@@395))))
(let (($generated@@397 ($generated@@322 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@321 $generated@@162 $generated@@162)) (= (type $generated@@399) $generated@@162)) (= ($generated@@0 ($generated@@87 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@87 ($generated@@319 $generated@@398) ($generated@@160 ($generated@@340 $generated@@153 $generated@@399)))) (= ($generated@@87 ($generated@@393 $generated@@398) ($generated@@160 ($generated@@340 $generated@@153 $generated@@399))) ($generated@@161 ($generated@@340 $generated@@153 $generated@@399))))))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@304 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@303 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@87 ($generated@@353 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@87 ($generated@@301 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@87 ($generated@@385 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@87 ($generated@@301 $generated@@400) $generated@@404))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@87 ($generated@@353 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@322 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@321 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@87 ($generated@@364 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@87 ($generated@@319 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@87 ($generated@@393 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@87 ($generated@@319 $generated@@405) $generated@@409))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@87 ($generated@@364 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@70)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@303 $generated@@162 $generated@@162)) (= (type $generated@@414) $generated@@70)) (= (type $generated@@415) $generated@@70)) (= (type $generated@@416) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@162) ($generated@@0 ($generated@@87 ($generated@@301 $generated@@413) $generated@@417))) (and ($generated@@262 ($generated@@87 ($generated@@385 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@262 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@301 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@80 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@70)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@321 $generated@@162 $generated@@162)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@162) ($generated@@0 ($generated@@87 ($generated@@319 $generated@@421) $generated@@425))) (and ($generated@@262 ($generated@@87 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@262 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@87 ($generated@@319 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@80 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@426) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@427) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@428) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@426 $generated@@428))) (and ($generated@@138 $generated@@426 $generated@@427) ($generated@@138 $generated@@427 $generated@@428))) ($generated@@138 $generated@@426 $generated@@428))
 :pattern ( ($generated@@138 $generated@@426 $generated@@427) ($generated@@138 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@T) ) (! (= (type ($generated@@429 $generated@@430)) ($generated@@82 $generated@@430 $generated@@4))
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@323 (type $generated@@431))))
(let (($generated@@433 ($generated@@322 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@321 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@320 $generated@@433 $generated@@432)) (= ($generated@@319 $generated@@431) ($generated@@429 $generated@@433))))))
 :pattern ( ($generated@@319 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@323 (type $generated@@434))))
(let (($generated@@436 ($generated@@322 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@321 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@320 $generated@@436 $generated@@435)) (= ($generated@@364 $generated@@434) ($generated@@429 $generated@@435))))))
 :pattern ( ($generated@@364 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@323 (type $generated@@437))))
(let (($generated@@439 ($generated@@322 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@321 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@320 $generated@@439 $generated@@438)) (= ($generated@@392 $generated@@437) ($generated@@429 $generated@@162))))))
 :pattern ( ($generated@@392 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@305 (type $generated@@440))))
(let (($generated@@442 ($generated@@304 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@303 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@302 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@162) (= (type $generated@@444) $generated@@162)) ($generated@@0 ($generated@@87 ($generated@@384 $generated@@440) ($generated@@282 ($generated@@237 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@384 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@323 (type $generated@@445))))
(let (($generated@@447 ($generated@@322 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@321 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@320 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@162) (= (type $generated@@449) $generated@@162)) ($generated@@0 ($generated@@87 ($generated@@392 $generated@@445) ($generated@@282 ($generated@@237 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@392 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@162) ($generated@@238 $generated@@450 $generated@@46)) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@450)) $generated@@450) ($generated@@149 ($generated@@340 $generated@@2 $generated@@450) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@450 $generated@@46))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@162) ($generated@@238 $generated@@451 $generated@@47)) (and (= ($generated@@282 ($generated@@340 $generated@@3 $generated@@451)) $generated@@451) ($generated@@149 ($generated@@340 $generated@@3 $generated@@451) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@451 $generated@@47))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@162) ($generated@@238 $generated@@452 $generated@@44)) (and (= ($generated@@282 ($generated@@340 $generated@@4 $generated@@452)) $generated@@452) ($generated@@149 ($generated@@340 $generated@@4 $generated@@452) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@452 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@453) 20))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@162) ($generated@@238 $generated@@454 $generated@@45)) (and (= ($generated@@282 ($generated@@340 $generated@@453 $generated@@454)) $generated@@454) ($generated@@149 ($generated@@340 $generated@@453 $generated@@454) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@454 $generated@@45))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@70) (= ($generated@@238 ($generated@@282 $generated@@455) $generated@@456) ($generated@@149 $generated@@455 $generated@@456)))
 :pattern ( ($generated@@238 ($generated@@282 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@85 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@82 $generated@@458 $generated@@2)) (<= 0 ($generated@@295 $generated@@457))))
 :pattern ( ($generated@@295 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@277 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@276 $generated@@460)) (<= 0 ($generated@@275 $generated@@459))))
 :pattern ( ($generated@@275 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@70) (= (type $generated@@464) $generated@@70)) (= ($generated@@461 ($generated@@410 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@410 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@410 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@410 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@78 ($generated@@410 $generated@@469 $generated@@470)) $generated@@58))
 :pattern ( ($generated@@410 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@70) (= (type $generated@@474) $generated@@70)) (= ($generated@@471 ($generated@@418 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@418 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@70) (= (type $generated@@478) $generated@@70)) (= ($generated@@475 ($generated@@418 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@418 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@78 ($generated@@418 $generated@@479 $generated@@480)) $generated@@59))
 :pattern ( ($generated@@418 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@162) (= (type $generated@@482) $generated@@162)) (= ($generated@@268 ($generated@@237 $generated@@481 $generated@@482)) $generated@@63))
 :pattern ( ($generated@@237 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@152 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@152 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@152 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@152 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@162) (= (type $generated@@492) $generated@@162)) (= ($generated@@160 ($generated@@237 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@237 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@162) (= (type $generated@@494) $generated@@162)) (= ($generated@@161 ($generated@@237 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@237 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@83) ($generated@@149 $generated@@495 $generated@@142))
 :pattern ( ($generated@@149 $generated@@495 $generated@@142))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@277 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@276 $generated@@162)) (= (type $generated@@503) $generated@@70)) (= (type $generated@@504) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@275 $generated@@502))) ($generated@@262 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@80 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@81 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@81 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@247 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@247 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@247 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@512 ($generated@@252 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@252 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@78 ($generated@@252 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@516 ($generated@@167 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@167 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@78 ($generated@@167 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@340 $generated@@525 ($generated@@282 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@282 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@303 $generated@@162 $generated@@162)) (= (type $generated@@527) $generated@@70)) (= (type $generated@@528) $generated@@70)) (= ($generated@@149 $generated@@526 ($generated@@410 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@162) ($generated@@0 ($generated@@87 ($generated@@301 $generated@@526) $generated@@529))) (and ($generated@@238 ($generated@@87 ($generated@@385 $generated@@526) $generated@@529) $generated@@528) ($generated@@238 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@87 ($generated@@385 $generated@@526) $generated@@529))
 :pattern ( ($generated@@87 ($generated@@301 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@149 $generated@@526 ($generated@@410 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@321 $generated@@162 $generated@@162)) (= (type $generated@@531) $generated@@70)) (= (type $generated@@532) $generated@@70)) (= ($generated@@149 $generated@@530 ($generated@@418 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@162) ($generated@@0 ($generated@@87 ($generated@@319 $generated@@530) $generated@@533))) (and ($generated@@238 ($generated@@87 ($generated@@393 $generated@@530) $generated@@533) $generated@@532) ($generated@@238 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@530) $generated@@533))
 :pattern ( ($generated@@87 ($generated@@319 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@149 $generated@@530 ($generated@@418 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@162) (= (type $generated@@537) $generated@@162)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@237 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@237 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@162) (= (type $generated@@539) $generated@@162)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@237 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@237 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@162) (= (type $generated@@541) $generated@@70)) (= (type $generated@@542) $generated@@70)) ($generated@@238 $generated@@540 ($generated@@410 $generated@@541 $generated@@542))) (and (= ($generated@@282 ($generated@@340 ($generated@@303 $generated@@162 $generated@@162) $generated@@540)) $generated@@540) ($generated@@149 ($generated@@340 ($generated@@303 $generated@@162 $generated@@162) $generated@@540) ($generated@@410 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@238 $generated@@540 ($generated@@410 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@162) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@238 $generated@@543 ($generated@@418 $generated@@544 $generated@@545))) (and (= ($generated@@282 ($generated@@340 ($generated@@321 $generated@@162 $generated@@162) $generated@@543)) $generated@@543) ($generated@@149 ($generated@@340 ($generated@@321 $generated@@162 $generated@@162) $generated@@543) ($generated@@418 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@238 $generated@@543 ($generated@@418 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@70) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@162)) ($generated@@238 $generated@@548 ($generated@@152 $generated@@546 $generated@@547))) (and (= ($generated@@282 ($generated@@340 $generated@@153 $generated@@548)) $generated@@548) ($generated@@149 ($generated@@340 $generated@@153 $generated@@548) ($generated@@152 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@548 ($generated@@152 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (not ($generated@@0 ($generated@@87 ($generated@@429 $generated@@550) $generated@@549))))
 :pattern ( (let (($generated@@550 (type $generated@@549)))
($generated@@87 ($generated@@429 $generated@@550) $generated@@549)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@75)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@70) (= (type $generated@@554) $generated@@70)) (and (= ($generated@@78 ($generated@@152 $generated@@553 $generated@@554)) $generated@@64) (= ($generated@@551 ($generated@@152 $generated@@553 $generated@@554)) $generated@@68)))
 :pattern ( ($generated@@152 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@153) (= ($generated@@534 ($generated@@282 $generated@@555)) ($generated@@535 $generated@@555)))
 :pattern ( ($generated@@534 ($generated@@282 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@162) ($generated@@238 $generated@@556 ($generated@@81 0))) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@556)) $generated@@556) ($generated@@149 ($generated@@340 ($generated@@82 $generated@@162 $generated@@4) $generated@@556) ($generated@@81 0))))
 :pattern ( ($generated@@238 $generated@@556 ($generated@@81 0)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@162) (= (type $generated@@558) $generated@@70)) ($generated@@238 $generated@@557 ($generated@@247 $generated@@558))) (and (= ($generated@@282 ($generated@@340 ($generated@@82 $generated@@162 $generated@@4) $generated@@557)) $generated@@557) ($generated@@149 ($generated@@340 ($generated@@82 $generated@@162 $generated@@4) $generated@@557) ($generated@@247 $generated@@558))))
 :pattern ( ($generated@@238 $generated@@557 ($generated@@247 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@162) (= (type $generated@@560) $generated@@70)) ($generated@@238 $generated@@559 ($generated@@252 $generated@@560))) (and (= ($generated@@282 ($generated@@340 ($generated@@82 $generated@@162 $generated@@4) $generated@@559)) $generated@@559) ($generated@@149 ($generated@@340 ($generated@@82 $generated@@162 $generated@@4) $generated@@559) ($generated@@252 $generated@@560))))
 :pattern ( ($generated@@238 $generated@@559 ($generated@@252 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@162) (= (type $generated@@562) $generated@@70)) ($generated@@238 $generated@@561 ($generated@@167 $generated@@562))) (and (= ($generated@@282 ($generated@@340 ($generated@@82 $generated@@162 $generated@@2) $generated@@561)) $generated@@561) ($generated@@149 ($generated@@340 ($generated@@82 $generated@@162 $generated@@2) $generated@@561) ($generated@@167 $generated@@562))))
 :pattern ( ($generated@@238 $generated@@561 ($generated@@167 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@162) (= (type $generated@@564) $generated@@70)) ($generated@@238 $generated@@563 ($generated@@496 $generated@@564))) (and (= ($generated@@282 ($generated@@340 ($generated@@276 $generated@@162) $generated@@563)) $generated@@563) ($generated@@149 ($generated@@340 ($generated@@276 $generated@@162) $generated@@563) ($generated@@496 $generated@@564))))
 :pattern ( ($generated@@238 $generated@@563 ($generated@@496 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
 (=> (and (and (and (= (type $generated@@565) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@566) $generated@@83)) (= (type $generated@@567) ($generated@@72 $generated@@569))) ($generated@@261 ($generated@@88 $generated@@565 $generated@@566 ($generated@@90 ($generated@@87 $generated@@565 $generated@@566) $generated@@567 $generated@@568)))) ($generated@@138 $generated@@565 ($generated@@88 $generated@@565 $generated@@566 ($generated@@90 ($generated@@87 $generated@@565 $generated@@566) $generated@@567 $generated@@568)))))
 :pattern ( ($generated@@88 $generated@@565 $generated@@566 ($generated@@90 ($generated@@87 $generated@@565 $generated@@566) $generated@@567 $generated@@568)))
)))
(assert (= ($generated@@78 $generated@@142) $generated@@61))
(assert (= ($generated@@551 $generated@@142) $generated@@67))
(assert (= ($generated@@78 $generated@@231) $generated@@62))
(assert (= ($generated@@551 $generated@@231) $generated@@67))
(assert (= ($generated@@78 $generated@@146) $generated@@65))
(assert (= ($generated@@551 $generated@@146) $generated@@69))
(assert (= ($generated@@78 $generated@@234) $generated@@66))
(assert (= ($generated@@551 $generated@@234) $generated@@69))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@82 $generated@@162 $generated@@2)) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@570 ($generated@@167 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@162) (< 0 ($generated ($generated@@87 $generated@@570 $generated@@573)))) ($generated@@262 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@87 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@80 $generated@@570 ($generated@@167 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@153) (= (type $generated@@575) $generated@@70)) (= (type $generated@@576) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@576) (and ($generated@@151 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@70) ($generated@@80 $generated@@574 ($generated@@152 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@80 $generated@@574 ($generated@@152 $generated@@575 $generated@@577) $generated@@576))
))))) ($generated@@262 ($generated@@160 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@262 ($generated@@160 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@153) (= (type $generated@@579) $generated@@70)) (= (type $generated@@580) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@261 $generated@@580) (and ($generated@@151 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@70) ($generated@@80 $generated@@578 ($generated@@152 $generated@@581 $generated@@579) $generated@@580))
 :pattern ( ($generated@@80 $generated@@578 ($generated@@152 $generated@@581 $generated@@579) $generated@@580))
))))) ($generated@@262 ($generated@@161 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@262 ($generated@@161 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@162) (= (type $generated@@583) $generated@@162)) (= ($generated@@237 ($generated@@257 $generated@@582) ($generated@@257 $generated@@583)) ($generated@@257 ($generated@@237 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@237 ($generated@@257 $generated@@582) ($generated@@257 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (= ($generated@@282 ($generated@@257 $generated@@584)) ($generated@@257 ($generated@@282 $generated@@584)))
 :pattern ( ($generated@@282 ($generated@@257 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@277 (type $generated@@585))))
 (=> (and (= (type $generated@@585) ($generated@@276 $generated@@586)) (= ($generated@@275 $generated@@585) 0)) (= $generated@@585 ($generated@@274 $generated@@586))))
 :pattern ( ($generated@@275 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@588)))
 (=> (and (and (= (type $generated@@587) ($generated@@82 $generated@@590 $generated@@2)) (= (type $generated@@589) $generated@@2)) (<= 0 ($generated $generated@@589))) (= ($generated@@295 ($generated@@88 $generated@@587 $generated@@588 $generated@@589)) (+ (- ($generated@@295 $generated@@587) ($generated ($generated@@87 $generated@@587 $generated@@588))) ($generated $generated@@589)))))
 :pattern ( ($generated@@295 ($generated@@88 $generated@@587 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@592) $generated@@2)) ($generated@@80 $generated@@592 $generated@@46 $generated@@591))
 :pattern ( ($generated@@80 $generated@@592 $generated@@46 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@594) $generated@@3)) ($generated@@80 $generated@@594 $generated@@47 $generated@@593))
 :pattern ( ($generated@@80 $generated@@594 $generated@@47 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@4)) ($generated@@80 $generated@@596 $generated@@44 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@44 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@453)) ($generated@@80 $generated@@598 $generated@@45 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@45 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@162)) ($generated@@80 $generated@@600 $generated@@48 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@48 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@276 $generated@@162)) (= (type $generated@@602) $generated@@70)) (= ($generated@@149 $generated@@601 ($generated@@496 $generated@@602)) (forall (($generated@@603 Int) ) (!  (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@275 $generated@@601))) ($generated@@238 ($generated@@497 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@497 $generated@@601 $generated@@603))
))))
 :pattern ( ($generated@@149 $generated@@601 ($generated@@496 $generated@@602)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 Int) ) (!  (=> (= (type $generated@@605) ($generated@@276 $generated@@162)) (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@275 $generated@@605))) (< ($generated@@535 ($generated@@340 $generated@@153 ($generated@@497 $generated@@605 $generated@@606))) ($generated@@604 $generated@@605))))
 :pattern ( ($generated@@535 ($generated@@340 $generated@@153 ($generated@@497 $generated@@605 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@303 $generated@@162 $generated@@162)) (= (type $generated@@608) $generated@@70)) (= (type $generated@@609) $generated@@70)) ($generated@@149 $generated@@607 ($generated@@410 $generated@@608 $generated@@609))) (and (and ($generated@@149 ($generated@@301 $generated@@607) ($generated@@247 $generated@@608)) ($generated@@149 ($generated@@353 $generated@@607) ($generated@@247 $generated@@609))) ($generated@@149 ($generated@@384 $generated@@607) ($generated@@247 ($generated@@152 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@149 $generated@@607 ($generated@@410 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@321 $generated@@162 $generated@@162)) (= (type $generated@@611) $generated@@70)) (= (type $generated@@612) $generated@@70)) ($generated@@149 $generated@@610 ($generated@@418 $generated@@611 $generated@@612))) (and (and ($generated@@149 ($generated@@319 $generated@@610) ($generated@@252 $generated@@611)) ($generated@@149 ($generated@@364 $generated@@610) ($generated@@252 $generated@@612))) ($generated@@149 ($generated@@392 $generated@@610) ($generated@@252 ($generated@@152 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@149 $generated@@610 ($generated@@418 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@2) ($generated@@149 $generated@@613 $generated@@46))
 :pattern ( ($generated@@149 $generated@@613 $generated@@46))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@3) ($generated@@149 $generated@@614 $generated@@47))
 :pattern ( ($generated@@149 $generated@@614 $generated@@47))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@4) ($generated@@149 $generated@@615 $generated@@44))
 :pattern ( ($generated@@149 $generated@@615 $generated@@44))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@453) ($generated@@149 $generated@@616 $generated@@45))
 :pattern ( ($generated@@149 $generated@@616 $generated@@45))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@162) ($generated@@149 $generated@@617 $generated@@48))
 :pattern ( ($generated@@149 $generated@@617 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 (T@U) Bool)
(declare-fun $generated@@623 () Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Bool)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@618) ($generated@@177 $generated@@83 $generated@@4)) (= (type $generated@@619) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@620) $generated@@83)) (= (type $generated@@621) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@624) $generated@@83)) (= (type $generated@@625) $generated@@83)) (= (type $generated@@627) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@629  (=> (= $generated@@618 ($generated@@176 $generated@@143 $generated@@619 $generated@@60 false)) (=> (and (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@619 $generated@@620) $generated@@60))) (= $generated@@621 ($generated@@88 $generated@@619 $generated@@620 ($generated@@90 ($generated@@87 $generated@@619 $generated@@620) $generated@@60 ($generated@@11 true))))) (=> (and (and ($generated@@261 $generated@@621) ($generated@@622 $generated@@621)) (and (=> $generated@@623 (and ($generated@@149 $generated@@624 $generated@@231) ($generated@@80 $generated@@624 $generated@@231 $generated@@621))) (= (ControlFlow 0 2) (- 0 1)))) $generated@@623)))))
(let (($generated@@630  (=> (and ($generated@@261 $generated@@619) ($generated@@622 $generated@@619)) (=> (and (and (and (not (= $generated@@620 $generated@@143)) ($generated@@149 $generated@@620 $generated@@234)) (and (=> $generated@@623 (and ($generated@@149 $generated@@625 $generated@@231) ($generated@@80 $generated@@625 $generated@@231 $generated@@619))) true)) (and (and (=> $generated@@626 (and ($generated@@149 $generated@@627 $generated@@231) ($generated@@80 $generated@@627 $generated@@231 $generated@@619))) true) (and (= 1 $generated@@628) (= (ControlFlow 0 3) 2)))) $generated@@629))))
$generated@@630)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 14) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@70) (= (type $generated@@153) $generated@@70)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@70)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@82 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@70)) ($generated@@145 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@145 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@168 $generated@@169)) $generated@@70)
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@83) (= ($generated@@145 $generated@@170 $generated@@142)  (or (= $generated@@170 $generated@@139) (= ($generated@@168 $generated@@170) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@170 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@83 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@73 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@83) (= (type $generated@@221) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@222) ($generated@@72 $generated@@4))) (= (type $generated@@224) $generated@@83)) (= (type $generated@@225) ($generated@@72 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (= (type $generated@@227) $generated@@70))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@83) (= (type $generated@@229) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@228 $generated@@227 $generated@@229) ($generated@@80 $generated@@228 $generated@@138 $generated@@229)))
 :pattern ( ($generated@@80 $generated@@228 $generated@@227 $generated@@229))
)))
(assert (= (type $generated@@230) $generated@@70))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@83) (= (type $generated@@232) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@231 $generated@@230 $generated@@232) ($generated@@80 $generated@@231 $generated@@142 $generated@@232)))
 :pattern ( ($generated@@80 $generated@@231 $generated@@230 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@149)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@70) (= (type $generated@@238) $generated@@70)) (= (type $generated@@239) $generated@@158)) (= (type $generated@@240) $generated@@158)) (= ($generated@@145 ($generated@@233 $generated@@239 $generated@@240) ($generated@@148 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@145 ($generated@@233 $generated@@239 $generated@@240) ($generated@@148 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@149) (= (type $generated@@242) $generated@@149)) (= ($generated@@155 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@155 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@70)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@82 $generated@@158 $generated@@4)) (= (type $generated@@246) $generated@@70)) (= ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) ($generated@@0 ($generated@@87 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@87 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@70)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@82 $generated@@158 $generated@@4)) (= (type $generated@@251) $generated@@70)) (= ($generated@@145 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@158) ($generated@@0 ($generated@@87 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@87 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@145 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@70) (= (type $generated@@260) $generated@@70)) (= (type $generated@@261) $generated@@158)) (= (type $generated@@262) $generated@@158)) (= (type $generated@@263) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@257 $generated@@263)) (= ($generated@@80 ($generated@@233 $generated@@261 $generated@@262) ($generated@@148 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@80 ($generated@@233 $generated@@261 $generated@@262) ($generated@@148 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@74)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@149) (= ($generated@@147 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@149) ($generated@@147 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@158) (= (type $generated@@269) $generated@@158)) (= $generated@@267 ($generated@@233 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@147 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 17)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@158)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@70) (= (type $generated@@282) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@80 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@82 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@85 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@82 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@87 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@82 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@87 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@87 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@82 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@87 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@87 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@85 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@82 $generated@@326 $generated@@2)) (= ($generated@@164 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@87 $generated@@325 $generated@@327))) (<= ($generated ($generated@@87 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@87 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@164 $generated@@325))
)))
(assert (forall (($generated@@329 T@T) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@158) ($generated@@234 $generated@@331 $generated@@138)) (and (= ($generated@@278 ($generated@@328 $generated@@83 $generated@@331)) $generated@@331) ($generated@@145 ($generated@@328 $generated@@83 $generated@@331) $generated@@138)))
 :pattern ( ($generated@@234 $generated@@331 $generated@@138))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@158) ($generated@@234 $generated@@332 $generated@@227)) (and (= ($generated@@278 ($generated@@328 $generated@@83 $generated@@332)) $generated@@332) ($generated@@145 ($generated@@328 $generated@@83 $generated@@332) $generated@@227)))
 :pattern ( ($generated@@234 $generated@@332 $generated@@227))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@158) ($generated@@234 $generated@@333 $generated@@142)) (and (= ($generated@@278 ($generated@@328 $generated@@83 $generated@@333)) $generated@@333) ($generated@@145 ($generated@@328 $generated@@83 $generated@@333) $generated@@142)))
 :pattern ( ($generated@@234 $generated@@333 $generated@@142))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@158) ($generated@@234 $generated@@334 $generated@@230)) (and (= ($generated@@278 ($generated@@328 $generated@@83 $generated@@334)) $generated@@334) ($generated@@145 ($generated@@328 $generated@@83 $generated@@334) $generated@@230)))
 :pattern ( ($generated@@234 $generated@@334 $generated@@230))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@83) (= ($generated@@145 $generated@@335 $generated@@227)  (and ($generated@@145 $generated@@335 $generated@@138) (not (= $generated@@335 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@335 $generated@@227))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@83) (= ($generated@@145 $generated@@336 $generated@@230)  (and ($generated@@145 $generated@@336 $generated@@142) (not (= $generated@@336 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@336 $generated@@230))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@293 (type $generated@@337))))
(let (($generated@@339 ($generated@@292 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@291 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@290 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@87 ($generated@@289 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@289 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@293 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@82 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@293 (type $generated@@344))))
(let (($generated@@346 ($generated@@292 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@291 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@290 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@87 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(let (($generated@@350 ($generated@@310 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@309 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@308 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@307 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@307 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@311 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(let (($generated@@357 ($generated@@310 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@309 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@308 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@82 $generated@@158 $generated@@2)) (= (type $generated@@360) $generated@@70)) (= ($generated@@145 $generated@@359 ($generated@@163 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@158) (< 0 ($generated ($generated@@87 $generated@@359 $generated@@361)))) ($generated@@234 $generated@@361 $generated@@360))
 :pattern ( ($generated@@87 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@145 $generated@@359 ($generated@@163 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@82 $generated@@158 $generated@@4)) (= (type $generated@@363) $generated@@70)) (= (type $generated@@364) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@362 ($generated@@243 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@158) ($generated@@0 ($generated@@87 $generated@@362 $generated@@365))) ($generated@@258 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@87 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@80 $generated@@362 ($generated@@243 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@82 $generated@@158 $generated@@4)) (= (type $generated@@367) $generated@@70)) (= (type $generated@@368) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@366 ($generated@@248 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@158) ($generated@@0 ($generated@@87 $generated@@366 $generated@@369))) ($generated@@258 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@87 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@80 $generated@@366 ($generated@@248 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@87 ($generated@@284 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@87 ($generated@@284 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@82 $generated@@158 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@293 (type $generated@@375))))
(let (($generated@@377 ($generated@@292 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@82 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@379) $generated@@158)) (= ($generated@@0 ($generated@@87 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@87 ($generated@@289 $generated@@378) ($generated@@156 ($generated@@328 $generated@@149 $generated@@379)))) (= ($generated@@87 ($generated@@373 $generated@@378) ($generated@@156 ($generated@@328 $generated@@149 $generated@@379))) ($generated@@157 ($generated@@328 $generated@@149 $generated@@379))))))
 :pattern ( ($generated@@87 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@82 $generated@@158 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@311 (type $generated@@383))))
(let (($generated@@385 ($generated@@310 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@82 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@387) $generated@@158)) (= ($generated@@0 ($generated@@87 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@87 ($generated@@307 $generated@@386) ($generated@@156 ($generated@@328 $generated@@149 $generated@@387)))) (= ($generated@@87 ($generated@@381 $generated@@386) ($generated@@156 ($generated@@328 $generated@@149 $generated@@387))) ($generated@@157 ($generated@@328 $generated@@149 $generated@@387))))))
 :pattern ( ($generated@@87 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@292 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@291 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@87 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@87 ($generated@@289 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@87 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@87 ($generated@@289 $generated@@388) $generated@@392))
 :pattern ( ($generated@@87 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@87 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@310 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@309 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@87 ($generated@@307 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@87 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@87 ($generated@@307 $generated@@393) $generated@@397))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@70)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@402) $generated@@70)) (= (type $generated@@403) $generated@@70)) (= (type $generated@@404) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@158) ($generated@@0 ($generated@@87 ($generated@@289 $generated@@401) $generated@@405))) (and ($generated@@258 ($generated@@87 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@258 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@87 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@87 ($generated@@289 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@80 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@70)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@410) $generated@@70)) (= (type $generated@@411) $generated@@70)) (= (type $generated@@412) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@158) ($generated@@0 ($generated@@87 ($generated@@307 $generated@@409) $generated@@413))) (and ($generated@@258 ($generated@@87 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@258 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@307 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@80 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@82 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@311 (type $generated@@416))))
(let (($generated@@418 ($generated@@310 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@309 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@308 $generated@@418 $generated@@417)) (= ($generated@@307 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@307 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@311 (type $generated@@419))))
(let (($generated@@421 ($generated@@310 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@309 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@308 $generated@@421 $generated@@420)) (= ($generated@@352 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@352 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@311 (type $generated@@422))))
(let (($generated@@424 ($generated@@310 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@309 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@308 $generated@@424 $generated@@423)) (= ($generated@@380 $generated@@422) ($generated@@414 $generated@@158))))))
 :pattern ( ($generated@@380 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@293 (type $generated@@425))))
(let (($generated@@427 ($generated@@292 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@291 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@290 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@158) (= (type $generated@@429) $generated@@158)) ($generated@@0 ($generated@@87 ($generated@@372 $generated@@425) ($generated@@278 ($generated@@233 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@372 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@311 (type $generated@@430))))
(let (($generated@@432 ($generated@@310 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@309 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@308 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@158) (= (type $generated@@434) $generated@@158)) ($generated@@0 ($generated@@87 ($generated@@380 $generated@@430) ($generated@@278 ($generated@@233 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@380 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@158) ($generated@@234 $generated@@435 $generated@@46)) (and (= ($generated@@278 ($generated@@328 $generated@@2 $generated@@435)) $generated@@435) ($generated@@145 ($generated@@328 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@158) ($generated@@234 $generated@@436 $generated@@47)) (and (= ($generated@@278 ($generated@@328 $generated@@3 $generated@@436)) $generated@@436) ($generated@@145 ($generated@@328 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@158) ($generated@@234 $generated@@437 $generated@@44)) (and (= ($generated@@278 ($generated@@328 $generated@@4 $generated@@437)) $generated@@437) ($generated@@145 ($generated@@328 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 20))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@158) ($generated@@234 $generated@@439 $generated@@45)) (and (= ($generated@@278 ($generated@@328 $generated@@438 $generated@@439)) $generated@@439) ($generated@@145 ($generated@@328 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@70) (= ($generated@@234 ($generated@@278 $generated@@440) $generated@@441) ($generated@@145 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@234 ($generated@@278 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@85 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@82 $generated@@443 $generated@@2)) (<= 0 ($generated@@283 $generated@@442))))
 :pattern ( ($generated@@283 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@273 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@272 $generated@@445)) (<= 0 ($generated@@271 $generated@@444))))
 :pattern ( ($generated@@271 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@70)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@70) (= (type $generated@@449) $generated@@70)) (= ($generated@@446 ($generated@@398 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@398 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@70)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@70) (= (type $generated@@453) $generated@@70)) (= ($generated@@450 ($generated@@398 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@398 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@70) (= (type $generated@@455) $generated@@70)) (= ($generated@@78 ($generated@@398 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@70)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@70) (= (type $generated@@459) $generated@@70)) (= ($generated@@456 ($generated@@406 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@406 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@70)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@70) (= (type $generated@@463) $generated@@70)) (= ($generated@@460 ($generated@@406 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@70) (= (type $generated@@465) $generated@@70)) (= ($generated@@78 ($generated@@406 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@158) (= (type $generated@@467) $generated@@158)) (= ($generated@@264 ($generated@@233 $generated@@466 $generated@@467)) $generated@@63))
 :pattern ( ($generated@@233 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@70)) (= ($generated@@468 ($generated@@148 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@148 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@472 ($generated@@148 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@148 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@158) (= (type $generated@@477) $generated@@158)) (= ($generated@@156 ($generated@@233 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@233 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@158) (= (type $generated@@479) $generated@@158)) (= ($generated@@157 ($generated@@233 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@233 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@83) ($generated@@145 $generated@@480 $generated@@138))
 :pattern ( ($generated@@145 $generated@@480 $generated@@138))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@273 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@272 $generated@@158)) (= (type $generated@@488) $generated@@70)) (= (type $generated@@489) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@271 $generated@@487))) ($generated@@258 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@80 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@81 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@81 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@70) (= ($generated@@493 ($generated@@243 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@243 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@70) (= ($generated@@78 ($generated@@243 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@70) (= ($generated@@497 ($generated@@248 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@248 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@70) (= ($generated@@78 ($generated@@248 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@501 ($generated@@163 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@163 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@78 ($generated@@163 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@70) (= ($generated@@78 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@328 $generated@@510 ($generated@@278 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@278 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@512) $generated@@70)) (= (type $generated@@513) $generated@@70)) (= ($generated@@145 $generated@@511 ($generated@@398 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@158) ($generated@@0 ($generated@@87 ($generated@@289 $generated@@511) $generated@@514))) (and ($generated@@234 ($generated@@87 ($generated@@373 $generated@@511) $generated@@514) $generated@@513) ($generated@@234 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@87 ($generated@@373 $generated@@511) $generated@@514))
 :pattern ( ($generated@@87 ($generated@@289 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@145 $generated@@511 ($generated@@398 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@516) $generated@@70)) (= (type $generated@@517) $generated@@70)) (= ($generated@@145 $generated@@515 ($generated@@406 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@158) ($generated@@0 ($generated@@87 ($generated@@307 $generated@@515) $generated@@518))) (and ($generated@@234 ($generated@@87 ($generated@@381 $generated@@515) $generated@@518) $generated@@517) ($generated@@234 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@515) $generated@@518))
 :pattern ( ($generated@@87 ($generated@@307 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@145 $generated@@515 ($generated@@406 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@158) (= (type $generated@@522) $generated@@158)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@233 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@233 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@158) (= (type $generated@@524) $generated@@158)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@233 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@233 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@158) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) $generated@@70)) ($generated@@234 $generated@@525 ($generated@@398 $generated@@526 $generated@@527))) (and (= ($generated@@278 ($generated@@328 ($generated@@291 $generated@@158 $generated@@158) $generated@@525)) $generated@@525) ($generated@@145 ($generated@@328 ($generated@@291 $generated@@158 $generated@@158) $generated@@525) ($generated@@398 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@234 $generated@@525 ($generated@@398 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@158) (= (type $generated@@529) $generated@@70)) (= (type $generated@@530) $generated@@70)) ($generated@@234 $generated@@528 ($generated@@406 $generated@@529 $generated@@530))) (and (= ($generated@@278 ($generated@@328 ($generated@@309 $generated@@158 $generated@@158) $generated@@528)) $generated@@528) ($generated@@145 ($generated@@328 ($generated@@309 $generated@@158 $generated@@158) $generated@@528) ($generated@@406 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@234 $generated@@528 ($generated@@406 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@70) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@158)) ($generated@@234 $generated@@533 ($generated@@148 $generated@@531 $generated@@532))) (and (= ($generated@@278 ($generated@@328 $generated@@149 $generated@@533)) $generated@@533) ($generated@@145 ($generated@@328 $generated@@149 $generated@@533) ($generated@@148 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@234 $generated@@533 ($generated@@148 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@87 ($generated@@414 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@87 ($generated@@414 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@75)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@70) (= (type $generated@@539) $generated@@70)) (and (= ($generated@@78 ($generated@@148 $generated@@538 $generated@@539)) $generated@@64) (= ($generated@@536 ($generated@@148 $generated@@538 $generated@@539)) $generated@@68)))
 :pattern ( ($generated@@148 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@149) (= ($generated@@519 ($generated@@278 $generated@@540)) ($generated@@520 $generated@@540)))
 :pattern ( ($generated@@519 ($generated@@278 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@158) ($generated@@234 $generated@@541 ($generated@@81 0))) (and (= ($generated@@278 ($generated@@328 $generated@@2 $generated@@541)) $generated@@541) ($generated@@145 ($generated@@328 ($generated@@82 $generated@@158 $generated@@4) $generated@@541) ($generated@@81 0))))
 :pattern ( ($generated@@234 $generated@@541 ($generated@@81 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@158) (= (type $generated@@543) $generated@@70)) ($generated@@234 $generated@@542 ($generated@@243 $generated@@543))) (and (= ($generated@@278 ($generated@@328 ($generated@@82 $generated@@158 $generated@@4) $generated@@542)) $generated@@542) ($generated@@145 ($generated@@328 ($generated@@82 $generated@@158 $generated@@4) $generated@@542) ($generated@@243 $generated@@543))))
 :pattern ( ($generated@@234 $generated@@542 ($generated@@243 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@158) (= (type $generated@@545) $generated@@70)) ($generated@@234 $generated@@544 ($generated@@248 $generated@@545))) (and (= ($generated@@278 ($generated@@328 ($generated@@82 $generated@@158 $generated@@4) $generated@@544)) $generated@@544) ($generated@@145 ($generated@@328 ($generated@@82 $generated@@158 $generated@@4) $generated@@544) ($generated@@248 $generated@@545))))
 :pattern ( ($generated@@234 $generated@@544 ($generated@@248 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@158) (= (type $generated@@547) $generated@@70)) ($generated@@234 $generated@@546 ($generated@@163 $generated@@547))) (and (= ($generated@@278 ($generated@@328 ($generated@@82 $generated@@158 $generated@@2) $generated@@546)) $generated@@546) ($generated@@145 ($generated@@328 ($generated@@82 $generated@@158 $generated@@2) $generated@@546) ($generated@@163 $generated@@547))))
 :pattern ( ($generated@@234 $generated@@546 ($generated@@163 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@158) (= (type $generated@@549) $generated@@70)) ($generated@@234 $generated@@548 ($generated@@481 $generated@@549))) (and (= ($generated@@278 ($generated@@328 ($generated@@272 $generated@@158) $generated@@548)) $generated@@548) ($generated@@145 ($generated@@328 ($generated@@272 $generated@@158) $generated@@548) ($generated@@481 $generated@@549))))
 :pattern ( ($generated@@234 $generated@@548 ($generated@@481 $generated@@549)))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@536 $generated@@138) $generated@@67))
(assert (= ($generated@@78 $generated@@227) $generated@@62))
(assert (= ($generated@@536 $generated@@227) $generated@@67))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@536 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@230) $generated@@66))
(assert (= ($generated@@536 $generated@@230) $generated@@69))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@82 $generated@@158 $generated@@2)) (= (type $generated@@551) $generated@@70)) (= (type $generated@@552) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@550 ($generated@@163 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@158) (< 0 ($generated ($generated@@87 $generated@@550 $generated@@553)))) ($generated@@258 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@87 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@80 $generated@@550 ($generated@@163 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@149) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@257 $generated@@556) (and ($generated@@147 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@70) ($generated@@80 $generated@@554 ($generated@@148 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@80 $generated@@554 ($generated@@148 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@258 ($generated@@156 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@258 ($generated@@156 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@149) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@257 $generated@@560) (and ($generated@@147 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@70) ($generated@@80 $generated@@558 ($generated@@148 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@80 $generated@@558 ($generated@@148 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@258 ($generated@@157 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@258 ($generated@@157 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@158) (= (type $generated@@563) $generated@@158)) (= ($generated@@233 ($generated@@253 $generated@@562) ($generated@@253 $generated@@563)) ($generated@@253 ($generated@@233 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@233 ($generated@@253 $generated@@562) ($generated@@253 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= ($generated@@278 ($generated@@253 $generated@@564)) ($generated@@253 ($generated@@278 $generated@@564)))
 :pattern ( ($generated@@278 ($generated@@253 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@273 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@272 $generated@@566)) (= ($generated@@271 $generated@@565) 0)) (= $generated@@565 ($generated@@270 $generated@@566))))
 :pattern ( ($generated@@271 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@82 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@283 ($generated@@88 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@283 $generated@@567) ($generated ($generated@@87 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@283 ($generated@@88 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@572) $generated@@2)) ($generated@@80 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@80 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@574) $generated@@3)) ($generated@@80 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@80 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@576) $generated@@4)) ($generated@@80 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@80 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@578) $generated@@438)) ($generated@@80 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@80 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@580) $generated@@158)) ($generated@@80 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@80 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@272 $generated@@158)) (= (type $generated@@582) $generated@@70)) (= ($generated@@145 $generated@@581 ($generated@@481 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@271 $generated@@581))) ($generated@@234 ($generated@@482 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@482 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@145 $generated@@581 ($generated@@481 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@272 $generated@@158)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@271 $generated@@585))) (< ($generated@@520 ($generated@@328 $generated@@149 ($generated@@482 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@520 ($generated@@328 $generated@@149 ($generated@@482 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) $generated@@70)) ($generated@@145 $generated@@587 ($generated@@398 $generated@@588 $generated@@589))) (and (and ($generated@@145 ($generated@@289 $generated@@587) ($generated@@243 $generated@@588)) ($generated@@145 ($generated@@341 $generated@@587) ($generated@@243 $generated@@589))) ($generated@@145 ($generated@@372 $generated@@587) ($generated@@243 ($generated@@148 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@145 $generated@@587 ($generated@@398 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) $generated@@70)) ($generated@@145 $generated@@590 ($generated@@406 $generated@@591 $generated@@592))) (and (and ($generated@@145 ($generated@@307 $generated@@590) ($generated@@248 $generated@@591)) ($generated@@145 ($generated@@352 $generated@@590) ($generated@@248 $generated@@592))) ($generated@@145 ($generated@@380 $generated@@590) ($generated@@248 ($generated@@148 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@145 $generated@@590 ($generated@@406 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@145 $generated@@593 $generated@@46))
 :pattern ( ($generated@@145 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@145 $generated@@594 $generated@@47))
 :pattern ( ($generated@@145 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@145 $generated@@595 $generated@@44))
 :pattern ( ($generated@@145 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@438) ($generated@@145 $generated@@596 $generated@@45))
 :pattern ( ($generated@@145 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@158) ($generated@@145 $generated@@597 $generated@@48))
 :pattern ( ($generated@@145 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () Bool)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () Bool)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(assert  (and (and (and (and (and (= (type $generated@@598) ($generated@@173 $generated@@83 $generated@@4)) (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@601) $generated@@83)) (= (type $generated@@603) $generated@@83)) (= (type $generated@@604) $generated@@83)) (= (type $generated@@606) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@608  (=> (= $generated@@598 ($generated@@172 $generated@@139 $generated@@599 $generated@@60 false)) (=> (and (=> $generated@@600 (and ($generated@@145 $generated@@601 $generated@@227) ($generated@@80 $generated@@601 $generated@@227 $generated@@599))) (= (ControlFlow 0 2) (- 0 1))) $generated@@600))))
(let (($generated@@609  (=> (and ($generated@@257 $generated@@599) ($generated@@602 $generated@@599)) (=> (and (and (and (not (= $generated@@603 $generated@@139)) (and ($generated@@145 $generated@@603 $generated@@230) ($generated@@80 $generated@@603 $generated@@230 $generated@@599))) (and (=> $generated@@600 (and ($generated@@145 $generated@@604 $generated@@227) ($generated@@80 $generated@@604 $generated@@227 $generated@@599))) true)) (and (and (=> $generated@@605 (and ($generated@@145 $generated@@606 $generated@@227) ($generated@@80 $generated@@606 $generated@@227 $generated@@599))) true) (and (= 1 $generated@@607) (= (ControlFlow 0 3) 2)))) $generated@@608))))
$generated@@609)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@370 (T@U T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@T) T@U)
(declare-fun $generated@@410 () T@T)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@453 (T@U Int) T@U)
(declare-fun $generated@@462 (T@U) Int)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@555 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (= ($generated@@151 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@81 $generated@@303 $generated@@305))) (<= ($generated ($generated@@81 $generated@@303 $generated@@305)) ($generated@@261 $generated@@303))))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@271 (type $generated@@306))))
(let (($generated@@308 ($generated@@270 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@269 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@268 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@267 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@271 (type $generated@@313))))
(let (($generated@@315 ($generated@@270 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@269 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@268 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@289 (type $generated@@317))))
(let (($generated@@319 ($generated@@288 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@287 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@286 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@285 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@329) $generated@@64)) (= ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330)))) ($generated@@212 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= (type $generated@@333) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@145) ($generated@@0 ($generated@@81 $generated@@331 $generated@@334))) ($generated@@236 $generated@@334 $generated@@332 $generated@@333))
 :pattern ( ($generated@@81 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@145) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@236 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@340) $generated@@339)) 0))
 :pattern ( (let (($generated@@340 (type $generated@@339)))
($generated@@81 ($generated@@262 $generated@@340) $generated@@339)))
)))
(assert  (and (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@341 $generated@@344)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@341 $generated@@344))
)) (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@342 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@342 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@271 (type $generated@@347))))
(let (($generated@@349 ($generated@@270 (type $generated@@347))))
(= (type ($generated@@343 $generated@@347)) ($generated@@76 $generated@@349 $generated@@348))))
 :pattern ( ($generated@@343 $generated@@347))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@351) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351)))) (= ($generated@@81 ($generated@@343 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@351))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@289 (type $generated@@355))))
(let (($generated@@357 ($generated@@288 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@76 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@359) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359)))) (= ($generated@@81 ($generated@@353 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@359))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(let (($generated@@363 ($generated@@270 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@269 $generated@@363 $generated@@362)) (= ($generated@@0 ($generated@@81 ($generated@@310 $generated@@360) $generated@@361)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@360) $generated@@364)) (= $generated@@361 ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@360) $generated@@364))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))
))))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(let (($generated@@368 ($generated@@288 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@287 $generated@@368 $generated@@367)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@365) $generated@@366)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@365) $generated@@369)) (= $generated@@366 ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@365) $generated@@369))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@371 $generated@@372)) $generated@@64)
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@373) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@374) $generated@@64)) (= (type $generated@@375) $generated@@64)) (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))) (and ($generated@@236 ($generated@@81 ($generated@@343 $generated@@373) $generated@@377) $generated@@375 $generated@@376) ($generated@@236 $generated@@377 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))
))))
 :pattern ( ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@64)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))) (and ($generated@@236 ($generated@@81 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@236 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 T@T) ) (! (= (type ($generated@@386 $generated@@387)) ($generated@@76 $generated@@387 $generated@@4))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@289 (type $generated@@388))))
(let (($generated@@390 ($generated@@288 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@287 $generated@@390 $generated@@389)) (= (= $generated@@388 ($generated@@286 $generated@@390 $generated@@389)) (= ($generated@@285 $generated@@388) ($generated@@386 $generated@@390))))))
 :pattern ( ($generated@@285 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@289 (type $generated@@391))))
(let (($generated@@393 ($generated@@288 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@287 $generated@@393 $generated@@392)) (= (= $generated@@391 ($generated@@286 $generated@@393 $generated@@392)) (= ($generated@@321 $generated@@391) ($generated@@386 $generated@@392))))))
 :pattern ( ($generated@@321 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@289 (type $generated@@394))))
(let (($generated@@396 ($generated@@288 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@287 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@286 $generated@@396 $generated@@395)) (= ($generated@@352 $generated@@394) ($generated@@386 $generated@@145))))))
 :pattern ( ($generated@@352 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@271 (type $generated@@397))))
(let (($generated@@399 ($generated@@270 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@269 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@268 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (and (and (= (type $generated@@400) $generated@@145) (= (type $generated@@401) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@397) ($generated@@256 ($generated@@211 $generated@@400 $generated@@401)))))
 :no-pattern (type $generated@@400)
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@341 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@289 (type $generated@@402))))
(let (($generated@@404 ($generated@@288 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@287 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@286 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@145) (= (type $generated@@406) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@402) ($generated@@256 ($generated@@211 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@352 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@212 $generated@@407 $generated@@46)) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@407)) $generated@@407) ($generated@@132 ($generated@@342 $generated@@2 $generated@@407) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@407 $generated@@46))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@145) ($generated@@212 $generated@@408 $generated@@47)) (and (= ($generated@@256 ($generated@@342 $generated@@3 $generated@@408)) $generated@@408) ($generated@@132 ($generated@@342 $generated@@3 $generated@@408) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@408 $generated@@47))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@44)) (and (= ($generated@@256 ($generated@@342 $generated@@4 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@342 $generated@@4 $generated@@409) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@410) 20))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@45)) (and (= ($generated@@256 ($generated@@342 $generated@@410 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@342 $generated@@410 $generated@@411) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@45))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@412) $generated@@413) ($generated@@132 $generated@@412 $generated@@413)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@79 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@76 $generated@@415 $generated@@2)) (<= 0 ($generated@@261 $generated@@414))))
 :pattern ( ($generated@@261 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@251 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@250 $generated@@417)) (<= 0 ($generated@@249 $generated@@416))))
 :pattern ( ($generated@@249 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@64) (= (type $generated@@421) $generated@@64)) (= ($generated@@418 ($generated@@370 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@370 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@64) (= (type $generated@@425) $generated@@64)) (= ($generated@@422 ($generated@@370 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@370 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@72 ($generated@@370 $generated@@426 $generated@@427)) $generated@@58))
 :pattern ( ($generated@@370 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@378 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@378 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@378 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@378 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@378 $generated@@436 $generated@@437)) $generated@@59))
 :pattern ( ($generated@@378 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) (= (type $generated@@439) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@438 $generated@@439)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@135 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@135 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@135 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@135 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert  (and (forall (($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@454))
)) (forall (($generated@@455 T@U) ($generated@@456 Int) ) (! (let (($generated@@457 ($generated@@251 (type $generated@@455))))
(= (type ($generated@@453 $generated@@455 $generated@@456)) $generated@@457))
 :pattern ( ($generated@@453 $generated@@455 $generated@@456))
))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (= (type $generated@@458) ($generated@@250 $generated@@145)) (= (type $generated@@459) $generated@@64)) (= (type $generated@@460) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460) (forall (($generated@@461 Int) ) (!  (=> (and (<= 0 $generated@@461) (< $generated@@461 ($generated@@249 $generated@@458))) ($generated@@236 ($generated@@453 $generated@@458 $generated@@461) $generated@@459 $generated@@460))
 :pattern ( ($generated@@453 $generated@@458 $generated@@461))
))))
 :pattern ( ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 Int) ) (! (= ($generated@@462 ($generated@@75 $generated@@463)) $generated@@463)
 :pattern ( ($generated@@75 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@464 ($generated@@221 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@467)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@468 ($generated@@226 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@226 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@471)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@150 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@150 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@475)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@452 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@452 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@452 $generated@@479)) $generated@@57))
 :pattern ( ($generated@@452 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(= ($generated@@342 $generated@@481 ($generated@@256 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@256 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))) (and ($generated@@212 ($generated@@81 ($generated@@343 $generated@@482) $generated@@485) $generated@@484) ($generated@@212 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@482) $generated@@485))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))) (and ($generated@@212 ($generated@@81 ($generated@@353 $generated@@486) $generated@@489) $generated@@488) ($generated@@212 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@486) $generated@@489))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) (= (type $generated@@493) $generated@@145)) (< ($generated@@490 $generated@@492) ($generated@@491 ($generated@@211 $generated@@492 $generated@@493))))
 :pattern ( ($generated@@211 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@490 $generated@@495) ($generated@@491 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498))) (and (= ($generated@@256 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496)) $generated@@496) ($generated@@132 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496) ($generated@@370 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501))) (and (= ($generated@@256 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499)) $generated@@499) ($generated@@132 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499) ($generated@@378 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@145)) ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503))) (and (= ($generated@@256 ($generated@@342 $generated@@136 $generated@@504)) $generated@@504) ($generated@@132 ($generated@@342 $generated@@136 $generated@@504) ($generated@@135 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 $generated@@506) $generated@@505))))
 :pattern ( (let (($generated@@506 (type $generated@@505)))
($generated@@81 ($generated@@386 $generated@@506) $generated@@505)))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@509 $generated@@510)) $generated@@62) (= ($generated@@507 ($generated@@135 $generated@@509 $generated@@510)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@136) (= ($generated@@490 ($generated@@256 $generated@@511)) ($generated@@491 $generated@@511)))
 :pattern ( ($generated@@490 ($generated@@256 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) ($generated@@212 $generated@@512 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@512)) $generated@@512) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@512) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@512 ($generated@@75 0)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) ($generated@@212 $generated@@513 ($generated@@221 $generated@@514))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513) ($generated@@221 $generated@@514))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@221 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@226 $generated@@516))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@226 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@226 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@150 $generated@@518))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517) ($generated@@150 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@150 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@452 $generated@@520))) (and (= ($generated@@256 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519) ($generated@@452 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@452 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@521 $generated@@524)))) ($generated@@236 $generated@@524 $generated@@522 $generated@@523))
 :pattern ( ($generated@@81 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@136) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@527) (and ($generated@@134 $generated@@525) (exists (($generated@@528 T@U) ) (!  (and (= (type $generated@@528) $generated@@64) ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
))))) ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@136) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@531) (and ($generated@@134 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@64) ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
 :pattern ( ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
))))) ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)) ($generated@@231 ($generated@@211 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@535)) ($generated@@231 ($generated@@256 $generated@@535)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@251 (type $generated@@536))))
 (=> (and (= (type $generated@@536) ($generated@@250 $generated@@537)) (= ($generated@@249 $generated@@536) 0)) (= $generated@@536 ($generated@@248 $generated@@537))))
 :pattern ( ($generated@@249 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@539)))
 (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@541 $generated@@2)) (= (type $generated@@540) $generated@@2)) (<= 0 ($generated $generated@@540))) (= ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)) (+ (- ($generated@@261 $generated@@538) ($generated ($generated@@81 $generated@@538 $generated@@539))) ($generated $generated@@540)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@543) $generated@@2)) ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
 :pattern ( ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@545) $generated@@3)) ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
 :pattern ( ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@547) $generated@@4)) ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
 :pattern ( ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@549) $generated@@410)) ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
 :pattern ( ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@145)) ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@250 $generated@@145)) (= (type $generated@@553) $generated@@64)) (= ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@249 $generated@@552))) ($generated@@212 ($generated@@453 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@453 $generated@@552 $generated@@554))
))))
 :pattern ( ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (= (type $generated@@556) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@249 $generated@@556))) (< ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))) ($generated@@555 $generated@@556))))
 :pattern ( ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560))) (and (and ($generated@@132 ($generated@@267 $generated@@558) ($generated@@221 $generated@@559)) ($generated@@132 ($generated@@310 $generated@@558) ($generated@@221 $generated@@560))) ($generated@@132 ($generated@@341 $generated@@558) ($generated@@221 ($generated@@135 $generated@@559 $generated@@560)))))
 :pattern ( ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@285 $generated@@561) ($generated@@226 $generated@@562)) ($generated@@132 ($generated@@321 $generated@@561) ($generated@@226 $generated@@563))) ($generated@@132 ($generated@@352 $generated@@561) ($generated@@226 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@2) ($generated@@132 $generated@@564 $generated@@46))
 :pattern ( ($generated@@132 $generated@@564 $generated@@46))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@3) ($generated@@132 $generated@@565 $generated@@47))
 :pattern ( ($generated@@132 $generated@@565 $generated@@47))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@4) ($generated@@132 $generated@@566 $generated@@44))
 :pattern ( ($generated@@132 $generated@@566 $generated@@44))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@410) ($generated@@132 $generated@@567 $generated@@45))
 :pattern ( ($generated@@132 $generated@@567 $generated@@45))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@145) ($generated@@132 $generated@@568 $generated@@48))
 :pattern ( ($generated@@132 $generated@@568 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@569 () Bool)
(declare-fun $generated@@570 () Int)
(declare-fun $generated@@571 () Bool)
(declare-fun $generated@@572 () T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 (T@U) Bool)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 () T@U)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@572) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@573) $generated@@77)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@576) $generated@@145)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@145)) (= (type $generated@@579) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@581  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@231 ($generated@@11 true))))))
(let (($generated@@582  (and (=> (= (ControlFlow 0 5) (- 0 6)) $generated@@569) (=> $generated@@569 (=> (= (ControlFlow 0 5) 2) $generated@@581)))))
(let (($generated@@583  (=> (<= 100 $generated@@570) (=> (and (= $generated@@569 $generated@@571) (= (ControlFlow 0 8) 5)) $generated@@582))))
(let (($generated@@584  (=> (< $generated@@570 10) (=> (and (= $generated@@569 true) (= (ControlFlow 0 7) 5)) $generated@@582))))
(let (($generated@@585  (=> (< $generated@@570 100) (and (=> (= (ControlFlow 0 3) (- 0 4)) true) (=> (= (ControlFlow 0 3) 2) $generated@@581)))))
(let (($generated@@586  (=> (<= 10 $generated@@570) (and (=> (= (ControlFlow 0 9) 3) $generated@@585) (=> (= (ControlFlow 0 9) 8) $generated@@583)))))
(let (($generated@@587  (=> (= $generated@@572 ($generated@@156 $generated@@573 $generated@@574 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 7) $generated@@584) (=> (= (ControlFlow 0 10) 9) $generated@@586)))))
(let (($generated@@588  (=> (and (and ($generated@@235 $generated@@574) ($generated@@575 $generated@@574)) (and ($generated@@212 $generated@@576 $generated@@577) ($generated@@236 $generated@@576 $generated@@577 $generated@@574))) (=> (and (and (and ($generated@@212 $generated@@578 $generated@@577) ($generated@@236 $generated@@578 $generated@@577 $generated@@574)) (=> $generated@@571 (and ($generated@@212 $generated@@579 $generated@@577) ($generated@@236 $generated@@579 $generated@@577 $generated@@574)))) (and (= 0 $generated@@580) (= (ControlFlow 0 11) 10))) $generated@@587))))
$generated@@588)))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@370 (T@U T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@T) T@U)
(declare-fun $generated@@410 () T@T)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@453 (T@U Int) T@U)
(declare-fun $generated@@462 (T@U) Int)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@555 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (= ($generated@@151 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@81 $generated@@303 $generated@@305))) (<= ($generated ($generated@@81 $generated@@303 $generated@@305)) ($generated@@261 $generated@@303))))
 :pattern ( ($generated@@81 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@151 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@271 (type $generated@@306))))
(let (($generated@@308 ($generated@@270 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@269 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@268 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@267 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@271 (type $generated@@313))))
(let (($generated@@315 ($generated@@270 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@269 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@268 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@289 (type $generated@@317))))
(let (($generated@@319 ($generated@@288 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@287 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@286 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@285 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@329) $generated@@64)) (= ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@328 $generated@@330)))) ($generated@@212 $generated@@330 $generated@@329))
 :pattern ( ($generated@@81 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@132 $generated@@328 ($generated@@150 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@332) $generated@@64)) (= (type $generated@@333) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@145) ($generated@@0 ($generated@@81 $generated@@331 $generated@@334))) ($generated@@236 $generated@@334 $generated@@332 $generated@@333))
 :pattern ( ($generated@@81 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@74 $generated@@331 ($generated@@221 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@145) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@236 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@226 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@340) $generated@@339)) 0))
 :pattern ( (let (($generated@@340 (type $generated@@339)))
($generated@@81 ($generated@@262 $generated@@340) $generated@@339)))
)))
(assert  (and (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@341 $generated@@344)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@341 $generated@@344))
)) (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@342 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@342 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@271 (type $generated@@347))))
(let (($generated@@349 ($generated@@270 (type $generated@@347))))
(= (type ($generated@@343 $generated@@347)) ($generated@@76 $generated@@349 $generated@@348))))
 :pattern ( ($generated@@343 $generated@@347))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@351) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351)))) (= ($generated@@81 ($generated@@343 $generated@@350) ($generated@@143 ($generated@@342 $generated@@136 $generated@@351))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@351))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@350) $generated@@351))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@289 (type $generated@@355))))
(let (($generated@@357 ($generated@@288 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@76 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@359) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359)))) (= ($generated@@81 ($generated@@353 $generated@@358) ($generated@@143 ($generated@@342 $generated@@136 $generated@@359))) ($generated@@144 ($generated@@342 $generated@@136 $generated@@359))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(let (($generated@@363 ($generated@@270 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@269 $generated@@363 $generated@@362)) (= ($generated@@0 ($generated@@81 ($generated@@310 $generated@@360) $generated@@361)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@360) $generated@@364)) (= $generated@@361 ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@360) $generated@@364))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@360) $generated@@364))
))))))
 :pattern ( ($generated@@81 ($generated@@310 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(let (($generated@@368 ($generated@@288 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@287 $generated@@368 $generated@@367)) (= ($generated@@0 ($generated@@81 ($generated@@321 $generated@@365) $generated@@366)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@365) $generated@@369)) (= $generated@@366 ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@365) $generated@@369))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@365) $generated@@369))
))))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@371 $generated@@372)) $generated@@64)
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@373) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@374) $generated@@64)) (= (type $generated@@375) $generated@@64)) (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))) (and ($generated@@236 ($generated@@81 ($generated@@343 $generated@@373) $generated@@377) $generated@@375 $generated@@376) ($generated@@236 $generated@@377 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@373) $generated@@377))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@373) $generated@@377))
))))
 :pattern ( ($generated@@74 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@64)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))) (and ($generated@@236 ($generated@@81 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@236 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 T@T) ) (! (= (type ($generated@@386 $generated@@387)) ($generated@@76 $generated@@387 $generated@@4))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@289 (type $generated@@388))))
(let (($generated@@390 ($generated@@288 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@287 $generated@@390 $generated@@389)) (= (= $generated@@388 ($generated@@286 $generated@@390 $generated@@389)) (= ($generated@@285 $generated@@388) ($generated@@386 $generated@@390))))))
 :pattern ( ($generated@@285 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@289 (type $generated@@391))))
(let (($generated@@393 ($generated@@288 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@287 $generated@@393 $generated@@392)) (= (= $generated@@391 ($generated@@286 $generated@@393 $generated@@392)) (= ($generated@@321 $generated@@391) ($generated@@386 $generated@@392))))))
 :pattern ( ($generated@@321 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@289 (type $generated@@394))))
(let (($generated@@396 ($generated@@288 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@287 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@286 $generated@@396 $generated@@395)) (= ($generated@@352 $generated@@394) ($generated@@386 $generated@@145))))))
 :pattern ( ($generated@@352 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@271 (type $generated@@397))))
(let (($generated@@399 ($generated@@270 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@269 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@268 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (and (and (= (type $generated@@400) $generated@@145) (= (type $generated@@401) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@397) ($generated@@256 ($generated@@211 $generated@@400 $generated@@401)))))
 :no-pattern (type $generated@@400)
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@341 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@289 (type $generated@@402))))
(let (($generated@@404 ($generated@@288 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@287 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@286 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@145) (= (type $generated@@406) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@402) ($generated@@256 ($generated@@211 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@352 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@212 $generated@@407 $generated@@46)) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@407)) $generated@@407) ($generated@@132 ($generated@@342 $generated@@2 $generated@@407) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@407 $generated@@46))
)))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@145) ($generated@@212 $generated@@408 $generated@@47)) (and (= ($generated@@256 ($generated@@342 $generated@@3 $generated@@408)) $generated@@408) ($generated@@132 ($generated@@342 $generated@@3 $generated@@408) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@408 $generated@@47))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@212 $generated@@409 $generated@@44)) (and (= ($generated@@256 ($generated@@342 $generated@@4 $generated@@409)) $generated@@409) ($generated@@132 ($generated@@342 $generated@@4 $generated@@409) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@409 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@410) 20))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@212 $generated@@411 $generated@@45)) (and (= ($generated@@256 ($generated@@342 $generated@@410 $generated@@411)) $generated@@411) ($generated@@132 ($generated@@342 $generated@@410 $generated@@411) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@411 $generated@@45))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (= (type $generated@@413) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@412) $generated@@413) ($generated@@132 $generated@@412 $generated@@413)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@79 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@76 $generated@@415 $generated@@2)) (<= 0 ($generated@@261 $generated@@414))))
 :pattern ( ($generated@@261 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@251 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@250 $generated@@417)) (<= 0 ($generated@@249 $generated@@416))))
 :pattern ( ($generated@@249 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (= (type ($generated@@418 $generated@@419)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@64) (= (type $generated@@421) $generated@@64)) (= ($generated@@418 ($generated@@370 $generated@@420 $generated@@421)) $generated@@420))
 :pattern ( ($generated@@370 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@64) (= (type $generated@@425) $generated@@64)) (= ($generated@@422 ($generated@@370 $generated@@424 $generated@@425)) $generated@@425))
 :pattern ( ($generated@@370 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@72 ($generated@@370 $generated@@426 $generated@@427)) $generated@@58))
 :pattern ( ($generated@@370 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@378 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@378 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@378 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@378 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@72 ($generated@@378 $generated@@436 $generated@@437)) $generated@@59))
 :pattern ( ($generated@@378 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) (= (type $generated@@439) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@438 $generated@@439)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@135 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@135 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@135 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@135 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) (= (type $generated@@449) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@211 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@211 $generated@@450 $generated@@451))
)))
(assert  (and (forall (($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@454))
)) (forall (($generated@@455 T@U) ($generated@@456 Int) ) (! (let (($generated@@457 ($generated@@251 (type $generated@@455))))
(= (type ($generated@@453 $generated@@455 $generated@@456)) $generated@@457))
 :pattern ( ($generated@@453 $generated@@455 $generated@@456))
))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (= (type $generated@@458) ($generated@@250 $generated@@145)) (= (type $generated@@459) $generated@@64)) (= (type $generated@@460) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460) (forall (($generated@@461 Int) ) (!  (=> (and (<= 0 $generated@@461) (< $generated@@461 ($generated@@249 $generated@@458))) ($generated@@236 ($generated@@453 $generated@@458 $generated@@461) $generated@@459 $generated@@460))
 :pattern ( ($generated@@453 $generated@@458 $generated@@461))
))))
 :pattern ( ($generated@@74 $generated@@458 ($generated@@452 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 Int) ) (! (= ($generated@@462 ($generated@@75 $generated@@463)) $generated@@463)
 :pattern ( ($generated@@75 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@464 ($generated@@221 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@221 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@467)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@468 ($generated@@226 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@226 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@471)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@150 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@150 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@475)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@452 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@452 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@452 $generated@@479)) $generated@@57))
 :pattern ( ($generated@@452 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(= ($generated@@342 $generated@@481 ($generated@@256 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@256 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) $generated@@64)) (= ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))) (and ($generated@@212 ($generated@@81 ($generated@@343 $generated@@482) $generated@@485) $generated@@484) ($generated@@212 $generated@@485 $generated@@483)))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@482) $generated@@485))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@482) $generated@@485))
))))
 :pattern ( ($generated@@132 $generated@@482 ($generated@@370 $generated@@483 $generated@@484)))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))) (and ($generated@@212 ($generated@@81 ($generated@@353 $generated@@486) $generated@@489) $generated@@488) ($generated@@212 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@486) $generated@@489))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@132 $generated@@486 ($generated@@378 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) (= (type $generated@@493) $generated@@145)) (< ($generated@@490 $generated@@492) ($generated@@491 ($generated@@211 $generated@@492 $generated@@493))))
 :pattern ( ($generated@@211 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (< ($generated@@490 $generated@@495) ($generated@@491 ($generated@@211 $generated@@494 $generated@@495))))
 :pattern ( ($generated@@211 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) $generated@@64)) ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498))) (and (= ($generated@@256 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496)) $generated@@496) ($generated@@132 ($generated@@342 ($generated@@269 $generated@@145 $generated@@145) $generated@@496) ($generated@@370 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@212 $generated@@496 ($generated@@370 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501))) (and (= ($generated@@256 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499)) $generated@@499) ($generated@@132 ($generated@@342 ($generated@@287 $generated@@145 $generated@@145) $generated@@499) ($generated@@378 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@212 $generated@@499 ($generated@@378 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@145)) ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503))) (and (= ($generated@@256 ($generated@@342 $generated@@136 $generated@@504)) $generated@@504) ($generated@@132 ($generated@@342 $generated@@136 $generated@@504) ($generated@@135 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@212 $generated@@504 ($generated@@135 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
 (not ($generated@@0 ($generated@@81 ($generated@@386 $generated@@506) $generated@@505))))
 :pattern ( (let (($generated@@506 (type $generated@@505)))
($generated@@81 ($generated@@386 $generated@@506) $generated@@505)))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@509 $generated@@510)) $generated@@62) (= ($generated@@507 ($generated@@135 $generated@@509 $generated@@510)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@136) (= ($generated@@490 ($generated@@256 $generated@@511)) ($generated@@491 $generated@@511)))
 :pattern ( ($generated@@490 ($generated@@256 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) ($generated@@212 $generated@@512 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@342 $generated@@2 $generated@@512)) $generated@@512) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@512) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@512 ($generated@@75 0)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) ($generated@@212 $generated@@513 ($generated@@221 $generated@@514))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@513) ($generated@@221 $generated@@514))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@221 $generated@@514)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@64)) ($generated@@212 $generated@@515 ($generated@@226 $generated@@516))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515)) $generated@@515) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@4) $generated@@515) ($generated@@226 $generated@@516))))
 :pattern ( ($generated@@212 $generated@@515 ($generated@@226 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) ($generated@@212 $generated@@517 ($generated@@150 $generated@@518))) (and (= ($generated@@256 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@342 ($generated@@76 $generated@@145 $generated@@2) $generated@@517) ($generated@@150 $generated@@518))))
 :pattern ( ($generated@@212 $generated@@517 ($generated@@150 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) ($generated@@212 $generated@@519 ($generated@@452 $generated@@520))) (and (= ($generated@@256 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@342 ($generated@@250 $generated@@145) $generated@@519) ($generated@@452 $generated@@520))))
 :pattern ( ($generated@@212 $generated@@519 ($generated@@452 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@521 $generated@@524)))) ($generated@@236 $generated@@524 $generated@@522 $generated@@523))
 :pattern ( ($generated@@81 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@74 $generated@@521 ($generated@@150 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@136) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@527) (and ($generated@@134 $generated@@525) (exists (($generated@@528 T@U) ) (!  (and (= (type $generated@@528) $generated@@64) ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@135 $generated@@526 $generated@@528) $generated@@527))
))))) ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@525) $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@136) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@531) (and ($generated@@134 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@64) ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
 :pattern ( ($generated@@74 $generated@@529 ($generated@@135 $generated@@532 $generated@@530) $generated@@531))
))))) ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)) ($generated@@231 ($generated@@211 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@533) ($generated@@231 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@535)) ($generated@@231 ($generated@@256 $generated@@535)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@251 (type $generated@@536))))
 (=> (and (= (type $generated@@536) ($generated@@250 $generated@@537)) (= ($generated@@249 $generated@@536) 0)) (= $generated@@536 ($generated@@248 $generated@@537))))
 :pattern ( ($generated@@249 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@539)))
 (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@541 $generated@@2)) (= (type $generated@@540) $generated@@2)) (<= 0 ($generated $generated@@540))) (= ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)) (+ (- ($generated@@261 $generated@@538) ($generated ($generated@@81 $generated@@538 $generated@@539))) ($generated $generated@@540)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@538 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@543) $generated@@2)) ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
 :pattern ( ($generated@@74 $generated@@543 $generated@@46 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@545) $generated@@3)) ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
 :pattern ( ($generated@@74 $generated@@545 $generated@@47 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@547) $generated@@4)) ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
 :pattern ( ($generated@@74 $generated@@547 $generated@@44 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@549) $generated@@410)) ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
 :pattern ( ($generated@@74 $generated@@549 $generated@@45 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@551) $generated@@145)) ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
 :pattern ( ($generated@@74 $generated@@551 $generated@@48 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@250 $generated@@145)) (= (type $generated@@553) $generated@@64)) (= ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@249 $generated@@552))) ($generated@@212 ($generated@@453 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@453 $generated@@552 $generated@@554))
))))
 :pattern ( ($generated@@132 $generated@@552 ($generated@@452 $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (= (type $generated@@556) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@249 $generated@@556))) (< ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))) ($generated@@555 $generated@@556))))
 :pattern ( ($generated@@491 ($generated@@342 $generated@@136 ($generated@@453 $generated@@556 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560))) (and (and ($generated@@132 ($generated@@267 $generated@@558) ($generated@@221 $generated@@559)) ($generated@@132 ($generated@@310 $generated@@558) ($generated@@221 $generated@@560))) ($generated@@132 ($generated@@341 $generated@@558) ($generated@@221 ($generated@@135 $generated@@559 $generated@@560)))))
 :pattern ( ($generated@@132 $generated@@558 ($generated@@370 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563))) (and (and ($generated@@132 ($generated@@285 $generated@@561) ($generated@@226 $generated@@562)) ($generated@@132 ($generated@@321 $generated@@561) ($generated@@226 $generated@@563))) ($generated@@132 ($generated@@352 $generated@@561) ($generated@@226 ($generated@@135 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@132 $generated@@561 ($generated@@378 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@2) ($generated@@132 $generated@@564 $generated@@46))
 :pattern ( ($generated@@132 $generated@@564 $generated@@46))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@3) ($generated@@132 $generated@@565 $generated@@47))
 :pattern ( ($generated@@132 $generated@@565 $generated@@47))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@4) ($generated@@132 $generated@@566 $generated@@44))
 :pattern ( ($generated@@132 $generated@@566 $generated@@44))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@410) ($generated@@132 $generated@@567 $generated@@45))
 :pattern ( ($generated@@132 $generated@@567 $generated@@45))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@145) ($generated@@132 $generated@@568 $generated@@48))
 :pattern ( ($generated@@132 $generated@@568 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@569 () Bool)
(declare-fun $generated@@570 () Int)
(declare-fun $generated@@571 () Bool)
(declare-fun $generated@@572 () Bool)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () Bool)
(declare-fun $generated@@577 () T@U)
(declare-fun $generated@@578 () Bool)
(declare-fun $generated@@579 () T@U)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 (T@U) Bool)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () Bool)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () Bool)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@573) $generated@@145) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@577) $generated@@145)) (= (type $generated@@579) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@580) $generated@@77)) (= (type $generated@@582) $generated@@145)) (= (type $generated@@583) $generated@@145)) (= (type $generated@@584) $generated@@145)) (= (type $generated@@585) $generated@@145)) (= (type $generated@@587) $generated@@145)) (= (type $generated@@589) $generated@@145)) (= (type $generated@@590) $generated@@145)) (= (type $generated@@591) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@593  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@231 ($generated@@11 true))))))
(let (($generated@@594  (and (=> (= (ControlFlow 0 6) (- 0 8)) true) (and (=> (= (ControlFlow 0 6) (- 0 7)) $generated@@569) (=> $generated@@569 (=> (= (ControlFlow 0 6) 2) $generated@@593))))))
(let (($generated@@595  (=> (<= 100 $generated@@570) (=> (and (= $generated@@569 $generated@@571) (= (ControlFlow 0 18) 6)) $generated@@594))))
(let (($generated@@596  (=> (< $generated@@570 40) (=> (and (=> $generated@@572 (and ($generated@@212 $generated@@573 $generated@@574) ($generated@@236 $generated@@573 $generated@@574 $generated@@575))) (=> $generated@@576 (and ($generated@@212 $generated@@577 $generated@@574) ($generated@@236 $generated@@577 $generated@@574 $generated@@575)))) (and (=> (= (ControlFlow 0 15) (- 0 17)) true) (and (=> (= (ControlFlow 0 15) (- 0 16)) $generated@@576) (=> $generated@@576 (=> (and (= $generated@@569 true) (= (ControlFlow 0 15) 6)) $generated@@594))))))))
(let (($generated@@597  (=> (< $generated@@570 30) (and (=> (= (ControlFlow 0 12) (- 0 14)) true) (and (=> (= (ControlFlow 0 12) (- 0 13)) true) (=> (and (= $generated@@569 true) (= (ControlFlow 0 12) 6)) $generated@@594))))))
(let (($generated@@598  (=> (< $generated@@570 20) (and (=> (= (ControlFlow 0 10) (- 0 11)) $generated@@571) (=> $generated@@571 (=> (and (= $generated@@569 true) (= (ControlFlow 0 10) 6)) $generated@@594))))))
(let (($generated@@599  (=> (< $generated@@570 10) (=> (and (= $generated@@569 true) (= (ControlFlow 0 9) 6)) $generated@@594))))
(let (($generated@@600  (=> (< $generated@@570 100) (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@578) (=> $generated@@578 (and (=> (= (ControlFlow 0 3) (- 0 4)) true) (=> (= (ControlFlow 0 3) 2) $generated@@593)))))))
(let (($generated@@601  (=> (<= 40 $generated@@570) (and (=> (= (ControlFlow 0 19) 3) $generated@@600) (=> (= (ControlFlow 0 19) 18) $generated@@595)))))
(let (($generated@@602  (=> (<= 30 $generated@@570) (and (=> (= (ControlFlow 0 20) 15) $generated@@596) (=> (= (ControlFlow 0 20) 19) $generated@@601)))))
(let (($generated@@603  (=> (<= 20 $generated@@570) (and (=> (= (ControlFlow 0 21) 12) $generated@@597) (=> (= (ControlFlow 0 21) 20) $generated@@602)))))
(let (($generated@@604  (=> (<= 10 $generated@@570) (and (=> (= (ControlFlow 0 22) 10) $generated@@598) (=> (= (ControlFlow 0 22) 21) $generated@@603)))))
(let (($generated@@605  (=> (= $generated@@579 ($generated@@156 $generated@@580 $generated@@575 $generated@@60 false)) (and (=> (= (ControlFlow 0 23) 9) $generated@@599) (=> (= (ControlFlow 0 23) 22) $generated@@604)))))
(let (($generated@@606  (=> (and ($generated@@235 $generated@@575) ($generated@@581 $generated@@575)) (=> (and (and (and (and ($generated@@212 $generated@@582 $generated@@574) ($generated@@236 $generated@@582 $generated@@574 $generated@@575)) (and ($generated@@212 $generated@@583 $generated@@574) ($generated@@236 $generated@@583 $generated@@574 $generated@@575))) (and (and (=> $generated@@578 (and ($generated@@212 $generated@@584 $generated@@574) ($generated@@236 $generated@@584 $generated@@574 $generated@@575))) (=> $generated@@571 (and ($generated@@212 $generated@@585 $generated@@574) ($generated@@236 $generated@@585 $generated@@574 $generated@@575)))) (and (=> $generated@@586 (and ($generated@@212 $generated@@587 $generated@@574) ($generated@@236 $generated@@587 $generated@@574 $generated@@575))) true))) (and (and (and (=> $generated@@588 (and ($generated@@212 $generated@@589 $generated@@574) ($generated@@236 $generated@@589 $generated@@574 $generated@@575))) true) (and (=> $generated@@572 (and ($generated@@212 $generated@@590 $generated@@574) ($generated@@236 $generated@@590 $generated@@574 $generated@@575))) true)) (and (and (=> $generated@@576 (and ($generated@@212 $generated@@591 $generated@@574) ($generated@@236 $generated@@591 $generated@@574 $generated@@575))) true) (and (= 0 $generated@@592) (= (ControlFlow 0 24) 23))))) $generated@@605))))
$generated@@606)))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 10) (- 11))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 15) (- 16))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 5))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 7))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@334 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@T) T@U)
(declare-fun $generated@@444 () T@T)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U Int) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (= (type $generated@@140) $generated@@68) (= (type $generated@@141) $generated@@81)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@81) (= (type $generated@@143) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@142 $generated@@140 $generated@@143)  (or (= $generated@@142 $generated@@141) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@143 $generated@@142) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@142 $generated@@140 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@79 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 14) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@68)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@68) (= (type $generated@@152) $generated@@68)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@68)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@68)) ($generated@@144 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@144 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@167 $generated@@168)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@81) (= ($generated@@144 $generated@@169 $generated@@140)  (or (= $generated@@169 $generated@@141) (= ($generated@@167 $generated@@169) $generated@@140))))
 :pattern ( ($generated@@144 $generated@@169 $generated@@140))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@81 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@71 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@81) (= (type $generated@@220) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@221) ($generated@@70 $generated@@4))) (= (type $generated@@223) $generated@@81)) (= (type $generated@@224) ($generated@@70 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (= (type $generated@@226) $generated@@68))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@81) (= (type $generated@@228) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@227 $generated@@226 $generated@@228) ($generated@@78 $generated@@227 $generated@@140 $generated@@228)))
 :pattern ( ($generated@@78 $generated@@227 $generated@@226 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@148)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@68) (= (type $generated@@234) $generated@@68)) (= (type $generated@@235) $generated@@157)) (= (type $generated@@236) $generated@@157)) (= ($generated@@144 ($generated@@229 $generated@@235 $generated@@236) ($generated@@147 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@144 ($generated@@229 $generated@@235 $generated@@236) ($generated@@147 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@148) (= (type $generated@@238) $generated@@148)) (= ($generated@@154 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@154 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@68)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@242) $generated@@68)) (= ($generated@@144 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@157) ($generated@@0 ($generated@@85 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@85 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@144 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@247) $generated@@68)) (= ($generated@@144 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@157) ($generated@@0 ($generated@@85 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@85 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@144 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@249 $generated@@250) $generated@@250)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@68) (= (type $generated@@258) $generated@@68)) (= (type $generated@@259) $generated@@157)) (= (type $generated@@260) $generated@@157)) (= (type $generated@@261) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@255 $generated@@261)) (= ($generated@@78 ($generated@@229 $generated@@259 $generated@@260) ($generated@@147 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@78 ($generated@@229 $generated@@259 $generated@@260) ($generated@@147 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@72)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@148) (= ($generated@@146 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@148) ($generated@@146 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@157) (= (type $generated@@267) $generated@@157)) (= $generated@@265 ($generated@@229 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@146 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@157)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@68) (= (type $generated@@280) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@256 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@78 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@256 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@282) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@283) $generated@@157)) (= (type $generated@@284) $generated@@68)) ($generated@@136 $generated@@281 $generated@@282)) ($generated@@256 $generated@@283 $generated@@284 $generated@@281)) ($generated@@256 $generated@@283 $generated@@284 $generated@@282))
 :pattern ( ($generated@@136 $generated@@281 $generated@@282) ($generated@@256 $generated@@283 $generated@@284 $generated@@281))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@285) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@288) $generated@@68)) ($generated@@136 $generated@@285 $generated@@286)) ($generated@@78 $generated@@287 $generated@@288 $generated@@285)) ($generated@@78 $generated@@287 $generated@@288 $generated@@286))
 :pattern ( ($generated@@136 $generated@@285 $generated@@286) ($generated@@78 $generated@@287 $generated@@288 $generated@@285))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@80 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@83 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@80 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@85 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 18)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@80 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@85 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@85 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@80 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@85 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@85 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@83 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@80 $generated@@332 $generated@@2)) (= ($generated@@163 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@85 $generated@@331 $generated@@333))) (<= ($generated ($generated@@85 $generated@@331 $generated@@333)) ($generated@@289 $generated@@331))))
 :pattern ( ($generated@@85 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@163 $generated@@331))
)))
(assert (forall (($generated@@335 T@T) ($generated@@336 T@U) ) (! (= (type ($generated@@334 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@157) ($generated@@230 $generated@@337 $generated@@140)) (and (= ($generated@@276 ($generated@@334 $generated@@81 $generated@@337)) $generated@@337) ($generated@@144 ($generated@@334 $generated@@81 $generated@@337) $generated@@140)))
 :pattern ( ($generated@@230 $generated@@337 $generated@@140))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@157) ($generated@@230 $generated@@338 $generated@@226)) (and (= ($generated@@276 ($generated@@334 $generated@@81 $generated@@338)) $generated@@338) ($generated@@144 ($generated@@334 $generated@@81 $generated@@338) $generated@@226)))
 :pattern ( ($generated@@230 $generated@@338 $generated@@226))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@81) (= ($generated@@144 $generated@@339 $generated@@226)  (and ($generated@@144 $generated@@339 $generated@@140) (not (= $generated@@339 $generated@@141)))))
 :pattern ( ($generated@@144 $generated@@339 $generated@@226))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@299 (type $generated@@340))))
(let (($generated@@342 ($generated@@298 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@297 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@296 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@85 ($generated@@295 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@295 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@299 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@80 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@299 (type $generated@@347))))
(let (($generated@@349 ($generated@@298 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@297 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@296 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@85 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@317 (type $generated@@351))))
(let (($generated@@353 ($generated@@316 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@315 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@314 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@313 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@317 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@317 (type $generated@@358))))
(let (($generated@@360 ($generated@@316 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@315 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@314 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@363) $generated@@68)) (= ($generated@@144 $generated@@362 ($generated@@162 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@362 $generated@@364)))) ($generated@@230 $generated@@364 $generated@@363))
 :pattern ( ($generated@@85 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@144 $generated@@362 ($generated@@162 $generated@@363)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@366) $generated@@68)) (= (type $generated@@367) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@365 ($generated@@239 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@157) ($generated@@0 ($generated@@85 $generated@@365 $generated@@368))) ($generated@@256 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@85 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@78 $generated@@365 ($generated@@239 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@370) $generated@@68)) (= (type $generated@@371) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@369 ($generated@@244 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@157) ($generated@@0 ($generated@@85 $generated@@369 $generated@@372))) ($generated@@256 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@85 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@78 $generated@@369 ($generated@@244 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@85 ($generated@@290 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@85 ($generated@@290 $generated@@374) $generated@@373)))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@299 (type $generated@@378))))
(let (($generated@@380 ($generated@@298 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@80 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@297 $generated@@157 $generated@@157)) (= (type $generated@@382) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@85 ($generated@@295 $generated@@381) ($generated@@155 ($generated@@334 $generated@@148 $generated@@382)))) (= ($generated@@85 ($generated@@376 $generated@@381) ($generated@@155 ($generated@@334 $generated@@148 $generated@@382))) ($generated@@156 ($generated@@334 $generated@@148 $generated@@382))))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@317 (type $generated@@386))))
(let (($generated@@388 ($generated@@316 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@80 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@315 $generated@@157 $generated@@157)) (= (type $generated@@390) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@85 ($generated@@313 $generated@@389) ($generated@@155 ($generated@@334 $generated@@148 $generated@@390)))) (= ($generated@@85 ($generated@@384 $generated@@389) ($generated@@155 ($generated@@334 $generated@@148 $generated@@390))) ($generated@@156 ($generated@@334 $generated@@148 $generated@@390))))))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@298 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@297 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@85 ($generated@@344 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@85 ($generated@@295 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@85 ($generated@@376 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@85 ($generated@@295 $generated@@391) $generated@@395))
 :pattern ( ($generated@@85 ($generated@@376 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@85 ($generated@@344 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@316 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@315 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@85 ($generated@@355 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@85 ($generated@@313 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@85 ($generated@@384 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@396) $generated@@400))
 :pattern ( ($generated@@85 ($generated@@384 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@68)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@297 $generated@@157 $generated@@157)) (= (type $generated@@405) $generated@@68)) (= (type $generated@@406) $generated@@68)) (= (type $generated@@407) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@295 $generated@@404) $generated@@408))) (and ($generated@@256 ($generated@@85 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@256 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@85 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@85 ($generated@@295 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@78 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@68)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@315 $generated@@157 $generated@@157)) (= (type $generated@@413) $generated@@68)) (= (type $generated@@414) $generated@@68)) (= (type $generated@@415) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@412) $generated@@416))) (and ($generated@@256 ($generated@@85 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@256 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@85 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@78 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@417) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@419) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@417 $generated@@419))) (and ($generated@@136 $generated@@417 $generated@@418) ($generated@@136 $generated@@418 $generated@@419))) ($generated@@136 $generated@@417 $generated@@419))
 :pattern ( ($generated@@136 $generated@@417 $generated@@418) ($generated@@136 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@T) ) (! (= (type ($generated@@420 $generated@@421)) ($generated@@80 $generated@@421 $generated@@4))
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@317 (type $generated@@422))))
(let (($generated@@424 ($generated@@316 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@315 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@314 $generated@@424 $generated@@423)) (= ($generated@@313 $generated@@422) ($generated@@420 $generated@@424))))))
 :pattern ( ($generated@@313 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@317 (type $generated@@425))))
(let (($generated@@427 ($generated@@316 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@315 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@314 $generated@@427 $generated@@426)) (= ($generated@@355 $generated@@425) ($generated@@420 $generated@@426))))))
 :pattern ( ($generated@@355 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@317 (type $generated@@428))))
(let (($generated@@430 ($generated@@316 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@315 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@314 $generated@@430 $generated@@429)) (= ($generated@@383 $generated@@428) ($generated@@420 $generated@@157))))))
 :pattern ( ($generated@@383 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@299 (type $generated@@431))))
(let (($generated@@433 ($generated@@298 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@297 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@296 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@157) (= (type $generated@@435) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@431) ($generated@@276 ($generated@@229 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@375 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@317 (type $generated@@436))))
(let (($generated@@438 ($generated@@316 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@315 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@314 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@157) (= (type $generated@@440) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@436) ($generated@@276 ($generated@@229 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@157) ($generated@@230 $generated@@441 $generated@@46)) (and (= ($generated@@276 ($generated@@334 $generated@@2 $generated@@441)) $generated@@441) ($generated@@144 ($generated@@334 $generated@@2 $generated@@441) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@441 $generated@@46))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@157) ($generated@@230 $generated@@442 $generated@@47)) (and (= ($generated@@276 ($generated@@334 $generated@@3 $generated@@442)) $generated@@442) ($generated@@144 ($generated@@334 $generated@@3 $generated@@442) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@442 $generated@@47))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@157) ($generated@@230 $generated@@443 $generated@@44)) (and (= ($generated@@276 ($generated@@334 $generated@@4 $generated@@443)) $generated@@443) ($generated@@144 ($generated@@334 $generated@@4 $generated@@443) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@443 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@444) 20))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@157) ($generated@@230 $generated@@445 $generated@@45)) (and (= ($generated@@276 ($generated@@334 $generated@@444 $generated@@445)) $generated@@445) ($generated@@144 ($generated@@334 $generated@@444 $generated@@445) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@445 $generated@@45))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (= (type $generated@@447) $generated@@68) (= ($generated@@230 ($generated@@276 $generated@@446) $generated@@447) ($generated@@144 $generated@@446 $generated@@447)))
 :pattern ( ($generated@@230 ($generated@@276 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@83 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@80 $generated@@449 $generated@@2)) (<= 0 ($generated@@289 $generated@@448))))
 :pattern ( ($generated@@289 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@271 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@270 $generated@@451)) (<= 0 ($generated@@269 $generated@@450))))
 :pattern ( ($generated@@269 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@68)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@68) (= (type $generated@@455) $generated@@68)) (= ($generated@@452 ($generated@@401 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@401 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@68)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@68) (= (type $generated@@459) $generated@@68)) (= ($generated@@456 ($generated@@401 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@401 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@76 ($generated@@401 $generated@@460 $generated@@461)) $generated@@58))
 :pattern ( ($generated@@401 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@409 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@466 ($generated@@409 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@409 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@76 ($generated@@409 $generated@@470 $generated@@471)) $generated@@59))
 :pattern ( ($generated@@409 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@157) (= (type $generated@@473) $generated@@157)) (= ($generated@@262 ($generated@@229 $generated@@472 $generated@@473)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@147 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@147 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@478 ($generated@@147 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@147 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@157) (= (type $generated@@483) $generated@@157)) (= ($generated@@155 ($generated@@229 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@229 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@157) (= (type $generated@@485) $generated@@157)) (= ($generated@@156 ($generated@@229 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@229 $generated@@484 $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 ($generated@@271 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489 $generated@@490)) $generated@@491))
 :pattern ( ($generated@@487 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@270 $generated@@157)) (= (type $generated@@493) $generated@@68)) (= (type $generated@@494) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@492 ($generated@@486 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@269 $generated@@492))) ($generated@@256 ($generated@@487 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@487 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@78 $generated@@492 ($generated@@486 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@496 ($generated@@79 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@79 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@68) (= ($generated@@498 ($generated@@239 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@239 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@68) (= ($generated@@76 ($generated@@239 $generated@@501)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@68) (= ($generated@@502 ($generated@@244 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@244 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@68) (= ($generated@@76 ($generated@@244 $generated@@505)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@68) (= ($generated@@506 ($generated@@162 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@162 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@68) (= ($generated@@76 ($generated@@162 $generated@@509)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@68) (= ($generated@@510 ($generated@@486 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@486 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@76 ($generated@@486 $generated@@513)) $generated@@57))
 :pattern ( ($generated@@486 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
(= ($generated@@334 $generated@@515 ($generated@@276 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@276 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@297 $generated@@157 $generated@@157)) (= (type $generated@@517) $generated@@68)) (= (type $generated@@518) $generated@@68)) (= ($generated@@144 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@295 $generated@@516) $generated@@519))) (and ($generated@@230 ($generated@@85 ($generated@@376 $generated@@516) $generated@@519) $generated@@518) ($generated@@230 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@85 ($generated@@376 $generated@@516) $generated@@519))
 :pattern ( ($generated@@85 ($generated@@295 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@144 $generated@@516 ($generated@@401 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@315 $generated@@157 $generated@@157)) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) $generated@@68)) (= ($generated@@144 $generated@@520 ($generated@@409 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@313 $generated@@520) $generated@@523))) (and ($generated@@230 ($generated@@85 ($generated@@384 $generated@@520) $generated@@523) $generated@@522) ($generated@@230 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@85 ($generated@@384 $generated@@520) $generated@@523))
 :pattern ( ($generated@@85 ($generated@@313 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@144 $generated@@520 ($generated@@409 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@157) (= (type $generated@@527) $generated@@157)) (< ($generated@@524 $generated@@526) ($generated@@525 ($generated@@229 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@229 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@157) (= (type $generated@@529) $generated@@157)) (< ($generated@@524 $generated@@529) ($generated@@525 ($generated@@229 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@229 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@157) (= (type $generated@@531) $generated@@68)) (= (type $generated@@532) $generated@@68)) ($generated@@230 $generated@@530 ($generated@@401 $generated@@531 $generated@@532))) (and (= ($generated@@276 ($generated@@334 ($generated@@297 $generated@@157 $generated@@157) $generated@@530)) $generated@@530) ($generated@@144 ($generated@@334 ($generated@@297 $generated@@157 $generated@@157) $generated@@530) ($generated@@401 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@230 $generated@@530 ($generated@@401 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@157) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) $generated@@68)) ($generated@@230 $generated@@533 ($generated@@409 $generated@@534 $generated@@535))) (and (= ($generated@@276 ($generated@@334 ($generated@@315 $generated@@157 $generated@@157) $generated@@533)) $generated@@533) ($generated@@144 ($generated@@334 ($generated@@315 $generated@@157 $generated@@157) $generated@@533) ($generated@@409 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@230 $generated@@533 ($generated@@409 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@68) (= (type $generated@@537) $generated@@68)) (= (type $generated@@538) $generated@@157)) ($generated@@230 $generated@@538 ($generated@@147 $generated@@536 $generated@@537))) (and (= ($generated@@276 ($generated@@334 $generated@@148 $generated@@538)) $generated@@538) ($generated@@144 ($generated@@334 $generated@@148 $generated@@538) ($generated@@147 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@230 $generated@@538 ($generated@@147 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@85 ($generated@@420 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@85 ($generated@@420 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@73)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@68) (= (type $generated@@544) $generated@@68)) (and (= ($generated@@76 ($generated@@147 $generated@@543 $generated@@544)) $generated@@62) (= ($generated@@541 ($generated@@147 $generated@@543 $generated@@544)) $generated@@65)))
 :pattern ( ($generated@@147 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@148) (= ($generated@@524 ($generated@@276 $generated@@545)) ($generated@@525 $generated@@545)))
 :pattern ( ($generated@@524 ($generated@@276 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@157) ($generated@@230 $generated@@546 ($generated@@79 0))) (and (= ($generated@@276 ($generated@@334 $generated@@2 $generated@@546)) $generated@@546) ($generated@@144 ($generated@@334 ($generated@@80 $generated@@157 $generated@@4) $generated@@546) ($generated@@79 0))))
 :pattern ( ($generated@@230 $generated@@546 ($generated@@79 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@157) (= (type $generated@@548) $generated@@68)) ($generated@@230 $generated@@547 ($generated@@239 $generated@@548))) (and (= ($generated@@276 ($generated@@334 ($generated@@80 $generated@@157 $generated@@4) $generated@@547)) $generated@@547) ($generated@@144 ($generated@@334 ($generated@@80 $generated@@157 $generated@@4) $generated@@547) ($generated@@239 $generated@@548))))
 :pattern ( ($generated@@230 $generated@@547 ($generated@@239 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@157) (= (type $generated@@550) $generated@@68)) ($generated@@230 $generated@@549 ($generated@@244 $generated@@550))) (and (= ($generated@@276 ($generated@@334 ($generated@@80 $generated@@157 $generated@@4) $generated@@549)) $generated@@549) ($generated@@144 ($generated@@334 ($generated@@80 $generated@@157 $generated@@4) $generated@@549) ($generated@@244 $generated@@550))))
 :pattern ( ($generated@@230 $generated@@549 ($generated@@244 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@157) (= (type $generated@@552) $generated@@68)) ($generated@@230 $generated@@551 ($generated@@162 $generated@@552))) (and (= ($generated@@276 ($generated@@334 ($generated@@80 $generated@@157 $generated@@2) $generated@@551)) $generated@@551) ($generated@@144 ($generated@@334 ($generated@@80 $generated@@157 $generated@@2) $generated@@551) ($generated@@162 $generated@@552))))
 :pattern ( ($generated@@230 $generated@@551 ($generated@@162 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@157) (= (type $generated@@554) $generated@@68)) ($generated@@230 $generated@@553 ($generated@@486 $generated@@554))) (and (= ($generated@@276 ($generated@@334 ($generated@@270 $generated@@157) $generated@@553)) $generated@@553) ($generated@@144 ($generated@@334 ($generated@@270 $generated@@157) $generated@@553) ($generated@@486 $generated@@554))))
 :pattern ( ($generated@@230 $generated@@553 ($generated@@486 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (=> (and (and (and (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@556) $generated@@81)) (= (type $generated@@557) ($generated@@70 $generated@@559))) ($generated@@255 ($generated@@86 $generated@@555 $generated@@556 ($generated@@88 ($generated@@85 $generated@@555 $generated@@556) $generated@@557 $generated@@558)))) ($generated@@136 $generated@@555 ($generated@@86 $generated@@555 $generated@@556 ($generated@@88 ($generated@@85 $generated@@555 $generated@@556) $generated@@557 $generated@@558)))))
 :pattern ( ($generated@@86 $generated@@555 $generated@@556 ($generated@@88 ($generated@@85 $generated@@555 $generated@@556) $generated@@557 $generated@@558)))
)))
(assert (= ($generated@@76 $generated@@140) $generated@@63))
(assert (= ($generated@@541 $generated@@140) $generated@@66))
(assert (= ($generated@@76 $generated@@226) $generated@@64))
(assert (= ($generated@@541 $generated@@226) $generated@@67))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@560 ($generated@@162 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@560 $generated@@563)))) ($generated@@256 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@85 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@78 $generated@@560 ($generated@@162 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@148) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@255 $generated@@566) (and ($generated@@146 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@68) ($generated@@78 $generated@@564 ($generated@@147 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@78 $generated@@564 ($generated@@147 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@256 ($generated@@155 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@256 ($generated@@155 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@148) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@255 $generated@@570) (and ($generated@@146 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@68) ($generated@@78 $generated@@568 ($generated@@147 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@78 $generated@@568 ($generated@@147 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@256 ($generated@@156 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@256 ($generated@@156 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@157) (= (type $generated@@573) $generated@@157)) (= ($generated@@229 ($generated@@251 $generated@@572) ($generated@@251 $generated@@573)) ($generated@@251 ($generated@@229 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@229 ($generated@@251 $generated@@572) ($generated@@251 $generated@@573)))
)))
(assert (forall (($generated@@574 Int) ) (! (= ($generated@@276 ($generated@@8 ($generated@@249 $generated@@574))) ($generated@@251 ($generated@@276 ($generated@@8 $generated@@574))))
 :pattern ( ($generated@@276 ($generated@@8 ($generated@@249 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@276 ($generated@@251 $generated@@575)) ($generated@@251 ($generated@@276 $generated@@575)))
 :pattern ( ($generated@@276 ($generated@@251 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@271 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@270 $generated@@577)) (= ($generated@@269 $generated@@576) 0)) (= $generated@@576 ($generated@@268 $generated@@577))))
 :pattern ( ($generated@@269 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@579)))
 (=> (and (and (= (type $generated@@578) ($generated@@80 $generated@@581 $generated@@2)) (= (type $generated@@580) $generated@@2)) (<= 0 ($generated $generated@@580))) (= ($generated@@289 ($generated@@86 $generated@@578 $generated@@579 $generated@@580)) (+ (- ($generated@@289 $generated@@578) ($generated ($generated@@85 $generated@@578 $generated@@579))) ($generated $generated@@580)))))
 :pattern ( ($generated@@289 ($generated@@86 $generated@@578 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@583) $generated@@2)) ($generated@@78 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@78 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@585) $generated@@3)) ($generated@@78 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@78 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@587) $generated@@4)) ($generated@@78 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@78 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@589) $generated@@444)) ($generated@@78 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@78 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@591) $generated@@157)) ($generated@@78 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@78 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@270 $generated@@157)) (= (type $generated@@593) $generated@@68)) (= ($generated@@144 $generated@@592 ($generated@@486 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@269 $generated@@592))) ($generated@@230 ($generated@@487 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@487 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@144 $generated@@592 ($generated@@486 $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@270 $generated@@157)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@269 $generated@@596))) (< ($generated@@525 ($generated@@334 $generated@@148 ($generated@@487 $generated@@596 $generated@@597))) ($generated@@595 $generated@@596))))
 :pattern ( ($generated@@525 ($generated@@334 $generated@@148 ($generated@@487 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@297 $generated@@157 $generated@@157)) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@144 $generated@@598 ($generated@@401 $generated@@599 $generated@@600))) (and (and ($generated@@144 ($generated@@295 $generated@@598) ($generated@@239 $generated@@599)) ($generated@@144 ($generated@@344 $generated@@598) ($generated@@239 $generated@@600))) ($generated@@144 ($generated@@375 $generated@@598) ($generated@@239 ($generated@@147 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@144 $generated@@598 ($generated@@401 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@315 $generated@@157 $generated@@157)) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@68)) ($generated@@144 $generated@@601 ($generated@@409 $generated@@602 $generated@@603))) (and (and ($generated@@144 ($generated@@313 $generated@@601) ($generated@@244 $generated@@602)) ($generated@@144 ($generated@@355 $generated@@601) ($generated@@244 $generated@@603))) ($generated@@144 ($generated@@383 $generated@@601) ($generated@@244 ($generated@@147 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@144 $generated@@601 ($generated@@409 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@144 $generated@@604 $generated@@46))
 :pattern ( ($generated@@144 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@144 $generated@@605 $generated@@47))
 :pattern ( ($generated@@144 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@144 $generated@@606 $generated@@44))
 :pattern ( ($generated@@144 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@444) ($generated@@144 $generated@@607 $generated@@45))
 :pattern ( ($generated@@144 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@157) ($generated@@144 $generated@@608 $generated@@48))
 :pattern ( ($generated@@144 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 (T@U) Bool)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@609) ($generated@@172 $generated@@81 $generated@@4)) (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@611) $generated@@81)) (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@615) $generated@@157)) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) $generated@@68)) (= (type $generated@@618) $generated@@157)) (= (type $generated@@619) $generated@@157)) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@621) $generated@@157)) (= (type $generated@@622) $generated@@81)) (= (type $generated@@623) $generated@@81)) (= (type $generated@@624) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@626  (=> (= $generated@@609 ($generated@@171 $generated@@141 $generated@@610 $generated@@60 false)) (=> (and (not (= $generated@@611 $generated@@141)) (= ($generated@@167 $generated@@611) $generated@@140)) (=> (and (and (not ($generated@@0 ($generated@@87 ($generated@@85 $generated@@610 $generated@@611) $generated@@60))) (= $generated@@612 ($generated@@86 $generated@@610 $generated@@611 ($generated@@88 ($generated@@85 $generated@@610 $generated@@611) $generated@@60 ($generated@@11 true))))) (and ($generated@@255 $generated@@612) ($generated@@613 $generated@@612))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@144 $generated@@611 $generated@@226)) (=> ($generated@@144 $generated@@611 $generated@@226) (=> (= $generated@@614 ($generated@@249 102)) (=> (and (and (and (and ($generated@@230 $generated@@615 $generated@@616) ($generated@@256 $generated@@615 $generated@@616 $generated@@610)) (= $generated@@617 $generated@@226)) (and (= $generated@@618 ($generated@@276 $generated@@611)) (= $generated@@619 ($generated@@276 $generated@@611)))) (and (and (and ($generated@@255 $generated@@620) ($generated@@613 $generated@@620)) (and ($generated@@230 $generated@@621 $generated@@617) ($generated@@256 $generated@@621 $generated@@617 $generated@@620))) (and (and ($generated@@0 ($generated@@251 ($generated@@11 true))) (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@81) (=> (and (not (= $generated@@627 $generated@@141)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@612 $generated@@627) $generated@@60))) (= ($generated@@85 $generated@@620 $generated@@627) ($generated@@85 $generated@@612 $generated@@627))))
 :pattern ( ($generated@@85 $generated@@620 $generated@@627))
))) (and ($generated@@136 $generated@@612 $generated@@620) (= $generated@@622 ($generated@@334 $generated@@81 $generated@@621)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@622 $generated@@141))) (=> (not (= $generated@@622 $generated@@141)) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@622 $generated@@141))))))))))))))
(let (($generated@@628  (=> (and ($generated@@255 $generated@@610) ($generated@@613 $generated@@610)) (=> (and (and ($generated@@144 $generated@@623 $generated@@226) ($generated@@78 $generated@@623 $generated@@226 $generated@@610)) true) (=> (and (and (and ($generated@@144 $generated@@624 $generated@@226) ($generated@@78 $generated@@624 $generated@@226 $generated@@610)) true) (and (= 3 $generated@@625) (= (ControlFlow 0 5) 2))) $generated@@626)))))
$generated@@628)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () Bool)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U T@U T@U) Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () Bool)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@181 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@180) 11) (= (type $generated@@160) $generated@@180)) (= ($generated@@1 $generated@@181) 12)) (= (type $generated@@161) $generated@@181)) (= (type $generated@@163) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@164) ($generated@@57 $generated@@47 $generated@@4))) (= (type $generated@@165) $generated@@47)) (= (type $generated@@166) ($generated@@50 $generated@@4))) (= (type $generated@@167) $generated@@180)) (= (type $generated@@170) $generated@@180)) (= (type $generated@@172) $generated@@180)) (= (type $generated@@174) $generated@@180)) (= (type $generated@@175) $generated@@180)) (= (type $generated@@177) $generated@@180)) (= (type $generated@@178) $generated@@180)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@182  (=> (= (ControlFlow 0 5) (- 0 4)) true)))
(let (($generated@@183  (=> (< $generated@@157 20) (and (=> (= (ControlFlow 0 8) (- 0 9)) $generated@@158) (=> $generated@@158 (=> (= (ControlFlow 0 8) 5) $generated@@182))))))
(let (($generated@@184  (=> (< $generated@@157 10) (and (=> (= (ControlFlow 0 6) (- 0 7)) true) (=> (= (ControlFlow 0 6) 5) $generated@@182)))))
(let (($generated@@185  (=> (and (<= 20 $generated@@157) (=> true (and ($generated@@159 $generated@@160 $generated@@161) ($generated@@162 $generated@@160 $generated@@161 $generated@@163)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true)))))
(let (($generated@@186  (=> (<= 10 $generated@@157) (and (=> (= (ControlFlow 0 10) 8) $generated@@183) (=> (= (ControlFlow 0 10) 2) $generated@@185)))))
(let (($generated@@187  (=> (and (= $generated@@164 ($generated@@45 $generated@@165 $generated@@163 $generated@@166 false)) (=> $generated@@158 ($generated@@159 $generated@@167 $generated@@161))) (and (=> (= (ControlFlow 0 11) 6) $generated@@184) (=> (= (ControlFlow 0 11) 10) $generated@@186)))))
(let (($generated@@188  (=> (and ($generated@@168 $generated@@163) ($generated@@169 $generated@@163)) (=> (and (and (and (and ($generated@@159 $generated@@170 $generated@@161) ($generated@@162 $generated@@170 $generated@@161 $generated@@163)) (=> $generated@@171 (and ($generated@@159 $generated@@172 $generated@@161) ($generated@@162 $generated@@172 $generated@@161 $generated@@163)))) (and (=> $generated@@173 (and ($generated@@159 $generated@@174 $generated@@161) ($generated@@162 $generated@@174 $generated@@161 $generated@@163))) true)) (and (and (and (=> $generated@@158 (and ($generated@@159 $generated@@175 $generated@@161) ($generated@@162 $generated@@175 $generated@@161 $generated@@163))) true) (and (=> $generated@@176 (and ($generated@@159 $generated@@177 $generated@@161) ($generated@@162 $generated@@177 $generated@@161 $generated@@163))) true)) (and (and (=> $generated@@158 ($generated@@159 $generated@@178 $generated@@161)) true) (and (= 0 $generated@@179) (= (ControlFlow 0 12) 11))))) $generated@@187))))
$generated@@188))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 8) (- 9))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 (T@U T@U T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@158) 11) (= ($generated@@1 $generated@@192) 12)) (= (type $generated@@160) $generated@@192)) (= (type $generated@@161) $generated@@158)) (= (type $generated@@162) $generated@@158)) (= (type $generated@@164) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@165) $generated@@158)) (= (type $generated@@166) $generated@@158)) (= (type $generated@@167) $generated@@158)) (= (type $generated@@169) $generated@@158)) (= (type $generated@@168) $generated@@158)) (= (type $generated@@170) $generated@@158)) (= (type $generated@@171) $generated@@158)) (= (type $generated@@172) $generated@@158)) (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4))) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@50 $generated@@4))) (= (type $generated@@178) $generated@@158)) (= (type $generated@@182) $generated@@158)) (= (type $generated@@183) $generated@@158)) (= (type $generated@@184) $generated@@158)) (= (type $generated@@186) $generated@@158)) (= (type $generated@@188) $generated@@158)) (= (type $generated@@190) $generated@@158)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@193  (=> (= (ControlFlow 0 5) (- 0 4)) true)))
(let (($generated@@194  (=> (< $generated@@157 20) (and (=> (= (ControlFlow 0 8) (- 0 9)) true) (=> (= (ControlFlow 0 8) 5) $generated@@193)))))
(let (($generated@@195  (=> (< $generated@@157 10) (and (=> (= (ControlFlow 0 6) (- 0 7)) true) (=> (= (ControlFlow 0 6) 5) $generated@@193)))))
(let (($generated@@196  (=> (<= 20 $generated@@157) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true)))))
(let (($generated@@197  (=> (<= 10 $generated@@157) (and (=> (= (ControlFlow 0 10) 8) $generated@@194) (=> (= (ControlFlow 0 10) 2) $generated@@196)))))
(let (($generated@@198  (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (exists (($generated@@199 T@U) ) (!  (and (= (type $generated@@199) $generated@@158) (and ($generated@@159 $generated@@199 $generated@@160) (and (and ($generated@@159 $generated@@161 $generated@@160) ($generated@@159 $generated@@161 $generated@@160)) (and (= $generated@@161 $generated@@161) (= $generated@@161 $generated@@161)))))
 :no-pattern (type $generated@@199)
 :no-pattern ($generated $generated@@199)
 :no-pattern ($generated@@0 $generated@@199)
)) (or (exists (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (and (and (= (type $generated@@200) $generated@@158) (= (type $generated@@201) $generated@@158)) (and (and ($generated@@159 $generated@@200 $generated@@160) ($generated@@159 $generated@@201 $generated@@160)) (and ($generated@@159 $generated@@161 $generated@@160) (and (= $generated@@200 $generated@@161) (= $generated@@161 $generated@@161)))))
 :no-pattern (type $generated@@200)
 :no-pattern (type $generated@@201)
 :no-pattern ($generated $generated@@200)
 :no-pattern ($generated@@0 $generated@@200)
 :no-pattern ($generated $generated@@201)
 :no-pattern ($generated@@0 $generated@@201)
)) (or (exists (($generated@@202 T@U) ) (!  (and (= (type $generated@@202) $generated@@158) (and ($generated@@159 $generated@@202 $generated@@160) (and (and ($generated@@159 $generated@@161 $generated@@160) ($generated@@159 $generated@@161 $generated@@160)) (and (= $generated@@161 $generated@@161) (= $generated@@161 $generated@@161)))))
 :no-pattern (type $generated@@202)
 :no-pattern ($generated $generated@@202)
 :no-pattern ($generated@@0 $generated@@202)
)) (or (exists (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (and (and (= (type $generated@@203) $generated@@158) (= (type $generated@@204) $generated@@158)) (and (and ($generated@@159 $generated@@203 $generated@@160) ($generated@@159 $generated@@204 $generated@@160)) (and ($generated@@159 $generated@@203 $generated@@160) (and (= $generated@@203 $generated@@203) (= $generated@@203 $generated@@161)))))
 :no-pattern (type $generated@@203)
 :no-pattern (type $generated@@204)
 :no-pattern ($generated $generated@@203)
 :no-pattern ($generated@@0 $generated@@203)
 :no-pattern ($generated $generated@@204)
 :no-pattern ($generated@@0 $generated@@204)
)) (or (exists (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (and (and (= (type $generated@@205) $generated@@158) (= (type $generated@@206) $generated@@158)) (and (and ($generated@@159 $generated@@205 $generated@@160) ($generated@@159 $generated@@206 $generated@@160)) (and ($generated@@159 $generated@@206 $generated@@160) (and (= $generated@@206 $generated@@206) (= $generated@@206 $generated@@161)))))
 :no-pattern (type $generated@@205)
 :no-pattern (type $generated@@206)
 :no-pattern ($generated $generated@@205)
 :no-pattern ($generated@@0 $generated@@205)
 :no-pattern ($generated $generated@@206)
 :no-pattern ($generated@@0 $generated@@206)
)) (exists (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (and (and (and (= (type $generated@@207) $generated@@158) (= (type $generated@@208) $generated@@158)) (= (type $generated@@209) $generated@@158)) (and (and (and ($generated@@159 $generated@@207 $generated@@160) ($generated@@159 $generated@@208 $generated@@160)) ($generated@@159 $generated@@209 $generated@@160)) (and (= $generated@@207 $generated@@209) (= $generated@@209 $generated@@161))))
 :no-pattern (type $generated@@207)
 :no-pattern (type $generated@@208)
 :no-pattern (type $generated@@209)
 :no-pattern ($generated $generated@@207)
 :no-pattern ($generated@@0 $generated@@207)
 :no-pattern ($generated $generated@@208)
 :no-pattern ($generated@@0 $generated@@208)
 :no-pattern ($generated $generated@@209)
 :no-pattern ($generated@@0 $generated@@209)
)))))))) (=> (or (exists (($generated@@210 T@U) ) (!  (and (= (type $generated@@210) $generated@@158) (and ($generated@@159 $generated@@210 $generated@@160) (and (and ($generated@@159 $generated@@161 $generated@@160) ($generated@@159 $generated@@161 $generated@@160)) (and (= $generated@@161 $generated@@161) (= $generated@@161 $generated@@161)))))
 :no-pattern (type $generated@@210)
 :no-pattern ($generated $generated@@210)
 :no-pattern ($generated@@0 $generated@@210)
)) (or (exists (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (and (and (= (type $generated@@211) $generated@@158) (= (type $generated@@212) $generated@@158)) (and (and ($generated@@159 $generated@@211 $generated@@160) ($generated@@159 $generated@@212 $generated@@160)) (and ($generated@@159 $generated@@161 $generated@@160) (and (= $generated@@211 $generated@@161) (= $generated@@161 $generated@@161)))))
 :no-pattern (type $generated@@211)
 :no-pattern (type $generated@@212)
 :no-pattern ($generated $generated@@211)
 :no-pattern ($generated@@0 $generated@@211)
 :no-pattern ($generated $generated@@212)
 :no-pattern ($generated@@0 $generated@@212)
)) (or (exists (($generated@@213 T@U) ) (!  (and (= (type $generated@@213) $generated@@158) (and ($generated@@159 $generated@@213 $generated@@160) (and (and ($generated@@159 $generated@@161 $generated@@160) ($generated@@159 $generated@@161 $generated@@160)) (and (= $generated@@161 $generated@@161) (= $generated@@161 $generated@@161)))))
 :no-pattern (type $generated@@213)
 :no-pattern ($generated $generated@@213)
 :no-pattern ($generated@@0 $generated@@213)
)) (or (exists (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (and (and (= (type $generated@@214) $generated@@158) (= (type $generated@@215) $generated@@158)) (and (and ($generated@@159 $generated@@214 $generated@@160) ($generated@@159 $generated@@215 $generated@@160)) (and ($generated@@159 $generated@@214 $generated@@160) (and (= $generated@@214 $generated@@214) (= $generated@@214 $generated@@161)))))
 :no-pattern (type $generated@@214)
 :no-pattern (type $generated@@215)
 :no-pattern ($generated $generated@@214)
 :no-pattern ($generated@@0 $generated@@214)
 :no-pattern ($generated $generated@@215)
 :no-pattern ($generated@@0 $generated@@215)
)) (or (exists (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (and (and (= (type $generated@@216) $generated@@158) (= (type $generated@@217) $generated@@158)) (and (and ($generated@@159 $generated@@216 $generated@@160) ($generated@@159 $generated@@217 $generated@@160)) (and ($generated@@159 $generated@@217 $generated@@160) (and (= $generated@@217 $generated@@217) (= $generated@@217 $generated@@161)))))
 :no-pattern (type $generated@@216)
 :no-pattern (type $generated@@217)
 :no-pattern ($generated $generated@@216)
 :no-pattern ($generated@@0 $generated@@216)
 :no-pattern ($generated $generated@@217)
 :no-pattern ($generated@@0 $generated@@217)
)) (exists (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (and (and (and (= (type $generated@@218) $generated@@158) (= (type $generated@@219) $generated@@158)) (= (type $generated@@220) $generated@@158)) (and (and (and ($generated@@159 $generated@@218 $generated@@160) ($generated@@159 $generated@@219 $generated@@160)) ($generated@@159 $generated@@220 $generated@@160)) (and (= $generated@@218 $generated@@220) (= $generated@@220 $generated@@161))))
 :no-pattern (type $generated@@218)
 :no-pattern (type $generated@@219)
 :no-pattern (type $generated@@220)
 :no-pattern ($generated $generated@@218)
 :no-pattern ($generated@@0 $generated@@218)
 :no-pattern ($generated $generated@@219)
 :no-pattern ($generated@@0 $generated@@219)
 :no-pattern ($generated $generated@@220)
 :no-pattern ($generated@@0 $generated@@220)
))))))) (=> (=> true (and ($generated@@159 $generated@@162 $generated@@160) ($generated@@163 $generated@@162 $generated@@160 $generated@@164))) (=> (and (and (=> true (and ($generated@@159 $generated@@165 $generated@@160) ($generated@@163 $generated@@165 $generated@@160 $generated@@164))) (=> true (and ($generated@@159 $generated@@166 $generated@@160) ($generated@@163 $generated@@166 $generated@@160 $generated@@164)))) (and (= $generated@@162 $generated@@166) (= $generated@@166 $generated@@161))) (and (=> (= (ControlFlow 0 11) 6) $generated@@195) (=> (= (ControlFlow 0 11) 10) $generated@@197))))))))
(let (($generated@@221  (=> (= (ControlFlow 0 14) 11) $generated@@198)))
(let (($generated@@222  (=> (and (not (= $generated@@167 $generated@@168)) (= (ControlFlow 0 16) 14)) $generated@@221)))
(let (($generated@@223  (=> (and (= $generated@@167 $generated@@168) (= (ControlFlow 0 15) 14)) $generated@@221)))
(let (($generated@@224  (=> (and (and (and ($generated@@159 $generated@@167 $generated@@160) ($generated@@163 $generated@@167 $generated@@160 $generated@@164)) (and ($generated@@159 $generated@@169 $generated@@160) ($generated@@163 $generated@@169 $generated@@160 $generated@@164))) (and ($generated@@159 $generated@@168 $generated@@160) ($generated@@163 $generated@@168 $generated@@160 $generated@@164))) (and (=> (= (ControlFlow 0 17) 15) $generated@@223) (=> (= (ControlFlow 0 17) 16) $generated@@222)))))
(let (($generated@@225  (=> (and (not (and (and (and ($generated@@159 $generated@@167 $generated@@160) ($generated@@163 $generated@@167 $generated@@160 $generated@@164)) (and ($generated@@159 $generated@@169 $generated@@160) ($generated@@163 $generated@@169 $generated@@160 $generated@@164))) (and ($generated@@159 $generated@@168 $generated@@160) ($generated@@163 $generated@@168 $generated@@160 $generated@@164)))) (= (ControlFlow 0 13) 11)) $generated@@198)))
(let (($generated@@226  (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (and ($generated@@159 $generated@@170 $generated@@160) (= $generated@@170 $generated@@170)) (exists (($generated@@227 T@U) ) (!  (and (= (type $generated@@227) $generated@@158) (and ($generated@@159 $generated@@227 $generated@@160) (= $generated@@227 $generated@@170)))
 :no-pattern (type $generated@@227)
 :no-pattern ($generated $generated@@227)
 :no-pattern ($generated@@0 $generated@@227)
)))) (=> (or (and ($generated@@159 $generated@@170 $generated@@160) (= $generated@@170 $generated@@170)) (exists (($generated@@228 T@U) ) (!  (and (= (type $generated@@228) $generated@@158) (and ($generated@@159 $generated@@228 $generated@@160) (= $generated@@228 $generated@@170)))
 :no-pattern (type $generated@@228)
 :no-pattern ($generated $generated@@228)
 :no-pattern ($generated@@0 $generated@@228)
))) (=> (and (=> true (and ($generated@@159 $generated@@171 $generated@@160) ($generated@@163 $generated@@171 $generated@@160 $generated@@164))) (= $generated@@171 $generated@@170)) (and (=> (= (ControlFlow 0 18) 17) $generated@@224) (=> (= (ControlFlow 0 18) 13) $generated@@225)))))))
(let (($generated@@229  (=> (and (not (and ($generated@@159 $generated@@172 $generated@@160) ($generated@@163 $generated@@172 $generated@@160 $generated@@164))) (= (ControlFlow 0 22) 18)) $generated@@226)))
(let (($generated@@230  (=> (and ($generated@@159 $generated@@172 $generated@@160) ($generated@@163 $generated@@172 $generated@@160 $generated@@164)) (and (=> (= (ControlFlow 0 20) (- 0 21)) $generated@@173) (=> $generated@@173 (=> (= (ControlFlow 0 20) 18) $generated@@226))))))
(let (($generated@@231  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@164 $generated@@176 false)) (=> (and (=> $generated@@177 (and ($generated@@159 $generated@@178 $generated@@160) ($generated@@163 $generated@@178 $generated@@160 $generated@@164))) (=> $generated@@173 (and ($generated@@159 $generated@@170 $generated@@160) ($generated@@163 $generated@@170 $generated@@160 $generated@@164)))) (and (=> (= (ControlFlow 0 23) 20) $generated@@230) (=> (= (ControlFlow 0 23) 22) $generated@@229))))))
(let (($generated@@232  (=> (and ($generated@@179 $generated@@164) ($generated@@180 $generated@@164)) (=> (and (and (and (and ($generated@@159 $generated@@161 $generated@@160) ($generated@@163 $generated@@161 $generated@@160 $generated@@164)) (=> $generated@@181 (and ($generated@@159 $generated@@182 $generated@@160) ($generated@@163 $generated@@182 $generated@@160 $generated@@164)))) (and (and (=> $generated@@177 (and ($generated@@159 $generated@@183 $generated@@160) ($generated@@163 $generated@@183 $generated@@160 $generated@@164))) true) (and (=> $generated@@173 (and ($generated@@159 $generated@@184 $generated@@160) ($generated@@163 $generated@@184 $generated@@160 $generated@@164))) true))) (and (and (and (=> $generated@@185 (and ($generated@@159 $generated@@186 $generated@@160) ($generated@@163 $generated@@186 $generated@@160 $generated@@164))) true) (and (=> $generated@@187 (and ($generated@@159 $generated@@188 $generated@@160) ($generated@@163 $generated@@188 $generated@@160 $generated@@164))) true)) (and (and (=> $generated@@189 (and ($generated@@159 $generated@@190 $generated@@160) ($generated@@163 $generated@@190 $generated@@160 $generated@@164))) true) (and (= 0 $generated@@191) (= (ControlFlow 0 24) 23))))) $generated@@231))))
$generated@@232)))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 20) (- 21))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 18) (- 19))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U T@U T@U) Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () Int)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@160) 11) (= (type $generated@@158) $generated@@160)) (= ($generated@@1 $generated@@173) 12)) (= (type $generated@@159) $generated@@173)) (= (type $generated@@161) $generated@@160)) (= (type $generated@@163) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@164) ($generated@@57 $generated@@47 $generated@@4))) (= (type $generated@@165) $generated@@47)) (= (type $generated@@166) ($generated@@50 $generated@@4))) (= (type $generated@@167) $generated@@160)) (= (type $generated@@170) $generated@@160)) (= (type $generated@@171) $generated@@160)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@174  (=> (= (ControlFlow 0 2) (- 0 1)) (or (and ($generated@@157 $generated@@158 $generated@@159) (= $generated@@158 $generated@@158)) (exists (($generated@@175 T@U) ) (!  (and (= (type $generated@@175) $generated@@160) (and ($generated@@157 $generated@@175 $generated@@159) (= $generated@@175 $generated@@158)))
 :no-pattern (type $generated@@175)
 :no-pattern ($generated $generated@@175)
 :no-pattern ($generated@@0 $generated@@175)
))))))
(let (($generated@@176  (=> (and (not (and ($generated@@157 $generated@@161 $generated@@159) ($generated@@162 $generated@@161 $generated@@159 $generated@@163))) (= (ControlFlow 0 4) 2)) $generated@@174)))
(let (($generated@@177  (=> (and (and ($generated@@157 $generated@@161 $generated@@159) ($generated@@162 $generated@@161 $generated@@159 $generated@@163)) (= (ControlFlow 0 3) 2)) $generated@@174)))
(let (($generated@@178  (=> (= $generated@@164 ($generated@@45 $generated@@165 $generated@@163 $generated@@166 false)) (=> (and (and ($generated@@157 $generated@@167 $generated@@159) ($generated@@162 $generated@@167 $generated@@159 $generated@@163)) (and ($generated@@157 $generated@@158 $generated@@159) ($generated@@162 $generated@@158 $generated@@159 $generated@@163))) (and (=> (= (ControlFlow 0 5) 3) $generated@@177) (=> (= (ControlFlow 0 5) 4) $generated@@176))))))
(let (($generated@@179  (=> (and ($generated@@168 $generated@@163) ($generated@@169 $generated@@163)) (=> (and (and ($generated@@157 $generated@@170 $generated@@159) ($generated@@162 $generated@@170 $generated@@159 $generated@@163)) true) (=> (and (and (and ($generated@@157 $generated@@171 $generated@@159) ($generated@@162 $generated@@171 $generated@@159 $generated@@163)) true) (and (= 0 $generated@@172) (= (ControlFlow 0 6) 5))) $generated@@178)))))
$generated@@179))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 (T@U T@U T@U) Bool)
(declare-fun $generated@@167 () Bool)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@T)
(declare-fun $generated@@175 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@157) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@158) $generated@@47)) (= (type $generated@@159) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@160) ($generated@@50 $generated@@4))) (= ($generated@@1 $generated@@174) 11)) (= (type $generated@@164) $generated@@174)) (= ($generated@@1 $generated@@175) 12)) (= (type $generated@@165) $generated@@175)) (= (type $generated@@168) $generated@@174)) (= (type $generated@@170) $generated@@174)) (= (type $generated@@172) $generated@@174)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@176  (=> (= $generated@@157 ($generated@@45 $generated@@158 $generated@@159 $generated@@160 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))))
(let (($generated@@177  (=> (and ($generated@@161 $generated@@159) ($generated@@162 $generated@@159)) (=> (and (and (and ($generated@@163 $generated@@164 $generated@@165) ($generated@@166 $generated@@164 $generated@@165 $generated@@159)) (=> $generated@@167 (and ($generated@@163 $generated@@168 $generated@@165) ($generated@@166 $generated@@168 $generated@@165 $generated@@159)))) (and (and (=> $generated@@169 (and ($generated@@163 $generated@@170 $generated@@165) ($generated@@166 $generated@@170 $generated@@165 $generated@@159))) (=> $generated@@171 (and ($generated@@163 $generated@@172 $generated@@165) ($generated@@166 $generated@@172 $generated@@165 $generated@@159)))) (and (= 0 $generated@@173) (= (ControlFlow 0 5) 2)))) $generated@@176))))
$generated@@177)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U) Bool)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@164 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 11) (= ($generated@@1 $generated@@164) 12)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@165) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@166) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@167) $generated@@163)) (= (type $generated@@168) $generated@@164)) ($generated@@44 $generated@@165 $generated@@166)) ($generated@@162 $generated@@167 $generated@@168 $generated@@165)) ($generated@@162 $generated@@167 $generated@@168 $generated@@166))
 :pattern ( ($generated@@44 $generated@@165 $generated@@166) ($generated@@162 $generated@@167 $generated@@168 $generated@@165))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@171) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@169 $generated@@171))) (and ($generated@@44 $generated@@169 $generated@@170) ($generated@@44 $generated@@170 $generated@@171))) ($generated@@44 $generated@@169 $generated@@171))
 :pattern ( ($generated@@44 $generated@@169 $generated@@170) ($generated@@44 $generated@@170 $generated@@171))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () Bool)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@172) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@173) $generated@@46)) (= (type $generated@@174) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@176) $generated@@163)) (= (type $generated@@177) $generated@@164)) (= (type $generated@@178) $generated@@163)) (= (type $generated@@179) $generated@@163)) (= (type $generated@@181) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@183) $generated@@163)) (= (type $generated@@184) $generated@@164)) (= (type $generated@@185) $generated@@163)) (= (type $generated@@186) $generated@@163)) (= (type $generated@@187) $generated@@163)) (= (type $generated@@189) $generated@@163)) (= (type $generated@@191) $generated@@163)) (= (type $generated@@193) $generated@@163)) (= (type $generated@@195) $generated@@163)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@197  (=> (= (ControlFlow 0 5) (- 0 4)) true)))
(let (($generated@@198  (and (=> (= (ControlFlow 0 8) (- 0 9)) true) (=> (= (ControlFlow 0 8) 5) $generated@@197))))
(let (($generated@@199  (and (=> (= (ControlFlow 0 6) (- 0 7)) true) (=> (= (ControlFlow 0 6) 5) $generated@@197))))
(let (($generated@@200  (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))
(let (($generated@@201  (=> (= $generated@@172 ($generated@@107 $generated@@173 $generated@@174 $generated@@50 false)) (=> (and (and (and (and ($generated@@175 $generated@@176 $generated@@177) ($generated@@162 $generated@@176 $generated@@177 $generated@@174)) (and ($generated@@175 $generated@@178 $generated@@177) ($generated@@162 $generated@@178 $generated@@177 $generated@@174))) (and (and ($generated@@175 $generated@@179 $generated@@177) ($generated@@162 $generated@@179 $generated@@177 $generated@@174)) (and ($generated@@180 $generated@@181) ($generated@@182 $generated@@181)))) (and (and (and ($generated@@175 $generated@@183 $generated@@184) ($generated@@162 $generated@@183 $generated@@184 $generated@@181)) (and ($generated@@175 $generated@@185 $generated@@184) ($generated@@162 $generated@@185 $generated@@184 $generated@@181))) (and (and ($generated@@175 $generated@@186 $generated@@184) ($generated@@162 $generated@@186 $generated@@184 $generated@@181)) (and (forall (($generated@@202 T@U) ) (!  (=> (= (type $generated@@202) $generated@@46) (=> (and (not (= $generated@@202 $generated@@173)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@174 $generated@@202) $generated@@50))) (= ($generated@@49 $generated@@181 $generated@@202) ($generated@@49 $generated@@174 $generated@@202))))
 :pattern ( ($generated@@49 $generated@@181 $generated@@202))
)) ($generated@@44 $generated@@174 $generated@@181))))) (and (and (=> (= (ControlFlow 0 10) 6) $generated@@199) (=> (= (ControlFlow 0 10) 8) $generated@@198)) (=> (= (ControlFlow 0 10) 2) $generated@@200))))))
(let (($generated@@203  (=> (and ($generated@@180 $generated@@174) ($generated@@182 $generated@@174)) (=> (and (and ($generated@@175 $generated@@187 $generated@@184) ($generated@@162 $generated@@187 $generated@@184 $generated@@174)) (=> $generated@@188 (and ($generated@@175 $generated@@189 $generated@@184) ($generated@@162 $generated@@189 $generated@@184 $generated@@174)))) (=> (and (and (and (=> $generated@@190 (and ($generated@@175 $generated@@191 $generated@@184) ($generated@@162 $generated@@191 $generated@@184 $generated@@174))) true) (and (=> $generated@@192 (and ($generated@@175 $generated@@193 $generated@@184) ($generated@@162 $generated@@193 $generated@@184 $generated@@174))) true)) (and (and (=> $generated@@194 (and ($generated@@175 $generated@@195 $generated@@184) ($generated@@162 $generated@@195 $generated@@184 $generated@@174))) true) (and (= 1 $generated@@196) (= (ControlFlow 0 11) 10)))) $generated@@201)))))
$generated@@203)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Bool)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 (T@U T@U T@U) Bool)
(declare-fun $generated@@166 () Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () Bool)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@176 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@157) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@158) $generated@@47)) (= (type $generated@@159) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@160) ($generated@@50 $generated@@4))) (= ($generated@@1 $generated@@175) 11)) (= (type $generated@@163) $generated@@175)) (= ($generated@@1 $generated@@176) 12)) (= (type $generated@@164) $generated@@176)) (= (type $generated@@167) $generated@@175)) (= (type $generated@@171) $generated@@175)) (= (type $generated@@172) $generated@@175)) (= (type $generated@@173) $generated@@175)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@177  (=> (= $generated@@157 ($generated@@45 $generated@@158 $generated@@159 $generated@@160 false)) (=> (and (=> $generated@@161 (and ($generated@@162 $generated@@163 $generated@@164) ($generated@@165 $generated@@163 $generated@@164 $generated@@159))) (=> $generated@@166 (and ($generated@@162 $generated@@167 $generated@@164) ($generated@@165 $generated@@167 $generated@@164 $generated@@159)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@166) (=> $generated@@166 (=> (= (ControlFlow 0 2) (- 0 1)) $generated@@168)))))))
(let (($generated@@178  (=> (and (and (and (and ($generated@@169 $generated@@159) ($generated@@170 $generated@@159)) (=> $generated@@168 (and ($generated@@162 $generated@@171 $generated@@164) ($generated@@165 $generated@@171 $generated@@164 $generated@@159)))) (and (=> $generated@@161 (and ($generated@@162 $generated@@172 $generated@@164) ($generated@@165 $generated@@172 $generated@@164 $generated@@159))) true)) (and (and (=> $generated@@166 (and ($generated@@162 $generated@@173 $generated@@164) ($generated@@165 $generated@@173 $generated@@164 $generated@@159))) true) (and (= 0 $generated@@174) (= (ControlFlow 0 4) 2)))) $generated@@177)))
$generated@@178)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 (T@U T@U T@U) Bool)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () Bool)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () T@T)
(declare-fun $generated@@190 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@189) 11) (= (type $generated@@158) $generated@@189)) (= ($generated@@1 $generated@@190) 12)) (= (type $generated@@159) $generated@@190)) (= (type $generated@@161) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@163) $generated@@189)) (= (type $generated@@164) $generated@@189)) (= (type $generated@@167) $generated@@189)) (= (type $generated@@168) ($generated@@57 $generated@@47 $generated@@4))) (= (type $generated@@169) $generated@@47)) (= (type $generated@@170) ($generated@@50 $generated@@4))) (= (type $generated@@172) $generated@@189)) (= (type $generated@@174) $generated@@189)) (= (type $generated@@177) $generated@@189)) (= (type $generated@@179) $generated@@189)) (= (type $generated@@181) $generated@@189)) (= (type $generated@@182) $generated@@189)) (= (type $generated@@183) $generated@@189)) (= (type $generated@@184) $generated@@189)) (= (type $generated@@186) $generated@@189)) (= (type $generated@@187) $generated@@189)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@191  (=> (=> true (and ($generated@@157 $generated@@158 $generated@@159) ($generated@@160 $generated@@158 $generated@@159 $generated@@161))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (=> (and (=> $generated@@162 (and ($generated@@157 $generated@@163 $generated@@159) ($generated@@160 $generated@@163 $generated@@159 $generated@@161))) (=> $generated@@162 (and ($generated@@157 $generated@@164 $generated@@159) ($generated@@160 $generated@@164 $generated@@159 $generated@@161)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) $generated@@162) (=> $generated@@162 (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true)))))))))
(let (($generated@@192  (=> (and (<= 10 $generated@@165) (= (ControlFlow 0 8) 2)) $generated@@191)))
(let (($generated@@193  (=> (and (< $generated@@165 10) (=> $generated@@166 (and ($generated@@157 $generated@@167 $generated@@159) ($generated@@160 $generated@@167 $generated@@159 $generated@@161)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) $generated@@166) (=> $generated@@166 (=> (= (ControlFlow 0 6) 2) $generated@@191))))))
(let (($generated@@194  (=> (= $generated@@168 ($generated@@45 $generated@@169 $generated@@161 $generated@@170 false)) (=> (and (=> $generated@@171 (and ($generated@@157 $generated@@172 $generated@@159) ($generated@@160 $generated@@172 $generated@@159 $generated@@161))) (=> $generated@@173 (and ($generated@@157 $generated@@174 $generated@@159) ($generated@@160 $generated@@174 $generated@@159 $generated@@161)))) (and (=> (= (ControlFlow 0 9) (- 0 10)) $generated@@173) (=> $generated@@173 (and (=> (= (ControlFlow 0 9) 6) $generated@@193) (=> (= (ControlFlow 0 9) 8) $generated@@192))))))))
(let (($generated@@195  (=> (and ($generated@@175 $generated@@161) ($generated@@176 $generated@@161)) (=> (and (and (and (and ($generated@@157 $generated@@177 $generated@@159) ($generated@@160 $generated@@177 $generated@@159 $generated@@161)) (and (=> $generated@@178 (and ($generated@@157 $generated@@179 $generated@@159) ($generated@@160 $generated@@179 $generated@@159 $generated@@161))) (=> $generated@@180 (and ($generated@@157 $generated@@181 $generated@@159) ($generated@@160 $generated@@181 $generated@@159 $generated@@161))))) (and (and (=> $generated@@171 (and ($generated@@157 $generated@@182 $generated@@159) ($generated@@160 $generated@@182 $generated@@159 $generated@@161))) true) (and (=> $generated@@173 (and ($generated@@157 $generated@@183 $generated@@159) ($generated@@160 $generated@@183 $generated@@159 $generated@@161))) true))) (and (and (and (=> $generated@@166 (and ($generated@@157 $generated@@184 $generated@@159) ($generated@@160 $generated@@184 $generated@@159 $generated@@161))) true) (and (=> $generated@@185 (and ($generated@@157 $generated@@186 $generated@@159) ($generated@@160 $generated@@186 $generated@@159 $generated@@161))) true)) (and (and (=> $generated@@162 (and ($generated@@157 $generated@@187 $generated@@159) ($generated@@160 $generated@@187 $generated@@159 $generated@@161))) true) (and (= 0 $generated@@188) (= (ControlFlow 0 11) 9))))) $generated@@194))))
$generated@@195))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 10))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 7))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (Int Int) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@155 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@155 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@216 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@149) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@242 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@149) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@242 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@365) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@373) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@242 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@242 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@242 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@242 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@400 $generated@@402))) (and ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))) ($generated@@132 $generated@@400 $generated@@402))
 :pattern ( ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@303 (type $generated@@405))))
(let (($generated@@407 ($generated@@302 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@301 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@300 $generated@@407 $generated@@406)) (= ($generated@@299 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@299 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@335 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@335 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@303 (type $generated@@411))))
(let (($generated@@413 ($generated@@302 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@301 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@300 $generated@@413 $generated@@412)) (= ($generated@@366 $generated@@411) ($generated@@403 $generated@@149))))))
 :pattern ( ($generated@@366 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@285 (type $generated@@414))))
(let (($generated@@416 ($generated@@284 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@283 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@282 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@149) (= (type $generated@@418) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@414) ($generated@@262 ($generated@@215 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@355 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@303 (type $generated@@419))))
(let (($generated@@421 ($generated@@302 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@301 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@300 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@149) (= (type $generated@@423) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@419) ($generated@@262 ($generated@@215 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@366 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@149) ($generated@@216 $generated@@424 $generated@@46)) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@424)) $generated@@424) ($generated@@136 ($generated@@356 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@149) ($generated@@216 $generated@@425 $generated@@47)) (and (= ($generated@@262 ($generated@@356 $generated@@3 $generated@@425)) $generated@@425) ($generated@@136 ($generated@@356 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@149) ($generated@@216 $generated@@426 $generated@@44)) (and (= ($generated@@262 ($generated@@356 $generated@@4 $generated@@426)) $generated@@426) ($generated@@136 ($generated@@356 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@149) ($generated@@216 $generated@@428 $generated@@45)) (and (= ($generated@@262 ($generated@@356 $generated@@427 $generated@@428)) $generated@@428) ($generated@@136 ($generated@@356 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@429) $generated@@430) ($generated@@136 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@275 $generated@@431))))
 :pattern ( ($generated@@275 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@257 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@256 $generated@@434)) (<= 0 ($generated@@255 $generated@@433))))
 :pattern ( ($generated@@255 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@384 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@384 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@384 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@384 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@392 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@392 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@392 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@149) (= (type $generated@@456) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@139 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@139 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@139 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@139 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@149) (= (type $generated@@466) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@215 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@149) (= (type $generated@@468) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@215 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@257 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@256 $generated@@149)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@255 $generated@@475))) ($generated@@242 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@225 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@225 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@230 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@230 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@154 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@154 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@356 $generated@@498 ($generated@@262 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@262 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))) (and ($generated@@216 ($generated@@81 ($generated@@357 $generated@@499) $generated@@502) $generated@@501) ($generated@@216 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))) (and ($generated@@216 ($generated@@81 ($generated@@367 $generated@@503) $generated@@506) $generated@@505) ($generated@@216 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@149) (= (type $generated@@510) $generated@@149)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@215 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@215 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) (= (type $generated@@512) $generated@@149)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@215 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@215 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@149) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515))) (and (= ($generated@@262 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513)) $generated@@513) ($generated@@136 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513) ($generated@@384 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@149) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518))) (and (= ($generated@@262 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516)) $generated@@516) ($generated@@136 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516) ($generated@@392 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@149)) ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520))) (and (= ($generated@@262 ($generated@@356 $generated@@140 $generated@@521)) $generated@@521) ($generated@@136 ($generated@@356 $generated@@140 $generated@@521) ($generated@@139 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@81 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 Int) ($generated@@526 Int) ) (! (= ($generated@@524 $generated@@525 $generated@@526) (mod $generated@@525 $generated@@526))
 :pattern ( ($generated@@524 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@69)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@529 $generated@@530)) $generated@@62) (= ($generated@@527 ($generated@@139 $generated@@529 $generated@@530)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@140) (= ($generated@@507 ($generated@@262 $generated@@531)) ($generated@@508 $generated@@531)))
 :pattern ( ($generated@@507 ($generated@@262 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@149) ($generated@@216 $generated@@532 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@532)) $generated@@532) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@532) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@532 ($generated@@75 0)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@149) (= (type $generated@@534) $generated@@64)) ($generated@@216 $generated@@533 ($generated@@225 $generated@@534))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@533)) $generated@@533) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@533) ($generated@@225 $generated@@534))))
 :pattern ( ($generated@@216 $generated@@533 ($generated@@225 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@149) (= (type $generated@@536) $generated@@64)) ($generated@@216 $generated@@535 ($generated@@230 $generated@@536))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@535)) $generated@@535) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@535) ($generated@@230 $generated@@536))))
 :pattern ( ($generated@@216 $generated@@535 ($generated@@230 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@149) (= (type $generated@@538) $generated@@64)) ($generated@@216 $generated@@537 ($generated@@154 $generated@@538))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@537)) $generated@@537) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@537) ($generated@@154 $generated@@538))))
 :pattern ( ($generated@@216 $generated@@537 ($generated@@154 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@149) (= (type $generated@@540) $generated@@64)) ($generated@@216 $generated@@539 ($generated@@469 $generated@@540))) (and (= ($generated@@262 ($generated@@356 ($generated@@256 $generated@@149) $generated@@539)) $generated@@539) ($generated@@136 ($generated@@356 ($generated@@256 $generated@@149) $generated@@539) ($generated@@469 $generated@@540))))
 :pattern ( ($generated@@216 $generated@@539 ($generated@@469 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@541 ($generated@@154 $generated@@542) $generated@@543) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@541 $generated@@544)))) ($generated@@242 $generated@@544 $generated@@542 $generated@@543))
 :pattern ( ($generated@@81 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@74 $generated@@541 ($generated@@154 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@140) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@547) (and ($generated@@138 $generated@@545) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@64) ($generated@@74 $generated@@545 ($generated@@139 $generated@@546 $generated@@548) $generated@@547))
 :pattern ( ($generated@@74 $generated@@545 ($generated@@139 $generated@@546 $generated@@548) $generated@@547))
))))) ($generated@@242 ($generated@@147 $generated@@545) $generated@@546 $generated@@547))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@545) $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@140) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@551) (and ($generated@@138 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@64) ($generated@@74 $generated@@549 ($generated@@139 $generated@@552 $generated@@550) $generated@@551))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@139 $generated@@552 $generated@@550) $generated@@551))
))))) ($generated@@242 ($generated@@148 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@553) ($generated@@237 $generated@@554)) ($generated@@237 ($generated@@215 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@553) ($generated@@237 $generated@@554)))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@555))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@555))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@555))))
)))
(assert (forall (($generated@@556 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@556)) ($generated@@237 ($generated@@262 $generated@@556)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@257 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@256 $generated@@558)) (= ($generated@@255 $generated@@557) 0)) (= $generated@@557 ($generated@@254 $generated@@558))))
 :pattern ( ($generated@@255 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@560)))
 (=> (and (and (= (type $generated@@559) ($generated@@76 $generated@@562 $generated@@2)) (= (type $generated@@561) $generated@@2)) (<= 0 ($generated $generated@@561))) (= ($generated@@275 ($generated@@82 $generated@@559 $generated@@560 $generated@@561)) (+ (- ($generated@@275 $generated@@559) ($generated ($generated@@81 $generated@@559 $generated@@560))) ($generated $generated@@561)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@559 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@2)) ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@46 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@3)) ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@47 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@4)) ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@44 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@427)) ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@45 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@149)) ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@48 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@256 $generated@@149)) (= (type $generated@@574) $generated@@64)) (= ($generated@@136 $generated@@573 ($generated@@469 $generated@@574)) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@255 $generated@@573))) ($generated@@216 ($generated@@470 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@470 $generated@@573 $generated@@575))
))))
 :pattern ( ($generated@@136 $generated@@573 ($generated@@469 $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ) (!  (=> (= (type $generated@@577) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@255 $generated@@577))) (< ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@577 $generated@@578))) ($generated@@576 $generated@@577))))
 :pattern ( ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@577 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@136 $generated@@579 ($generated@@384 $generated@@580 $generated@@581))) (and (and ($generated@@136 ($generated@@281 $generated@@579) ($generated@@225 $generated@@580)) ($generated@@136 ($generated@@324 $generated@@579) ($generated@@225 $generated@@581))) ($generated@@136 ($generated@@355 $generated@@579) ($generated@@225 ($generated@@139 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@384 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@136 $generated@@582 ($generated@@392 $generated@@583 $generated@@584))) (and (and ($generated@@136 ($generated@@299 $generated@@582) ($generated@@230 $generated@@583)) ($generated@@136 ($generated@@335 $generated@@582) ($generated@@230 $generated@@584))) ($generated@@136 ($generated@@366 $generated@@582) ($generated@@230 ($generated@@139 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@136 $generated@@582 ($generated@@392 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@2) ($generated@@136 $generated@@585 $generated@@46))
 :pattern ( ($generated@@136 $generated@@585 $generated@@46))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@3) ($generated@@136 $generated@@586 $generated@@47))
 :pattern ( ($generated@@136 $generated@@586 $generated@@47))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@4) ($generated@@136 $generated@@587 $generated@@44))
 :pattern ( ($generated@@136 $generated@@587 $generated@@44))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@427) ($generated@@136 $generated@@588 $generated@@45))
 :pattern ( ($generated@@136 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@149) ($generated@@136 $generated@@589 $generated@@48))
 :pattern ( ($generated@@136 $generated@@589 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () Bool)
(declare-fun $generated@@595 () Bool)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Bool)
(declare-fun $generated@@600 () Bool)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () Bool)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () Bool)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Bool)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Bool)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () Bool)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () Bool)
(declare-fun $generated@@625 () Bool)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Bool)
(declare-fun $generated@@630 () Bool)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () Bool)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () Bool)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () Bool)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () Bool)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@617) $generated@@149) (= (type $generated@@593) $generated@@149)) (= (type $generated@@591) $generated@@149)) (= (type $generated@@590) $generated@@149)) (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@603) $generated@@77)) (= (type $generated@@604) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@606) $generated@@149)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@609) $generated@@149)) (= (type $generated@@611) $generated@@149)) (= (type $generated@@619) $generated@@149)) (= (type $generated@@621) $generated@@149)) (= (type $generated@@622) $generated@@149)) (= (type $generated@@623) $generated@@149)) (= (type $generated@@628) $generated@@149)) (= (type $generated@@631) $generated@@149)) (= (type $generated@@633) $generated@@149)) (= (type $generated@@635) $generated@@149)) (= (type $generated@@636) $generated@@149)) (= (type $generated@@638) $generated@@149)) (= (type $generated@@639) $generated@@149)) (= (type $generated@@640) $generated@@149)) (= (type $generated@@641) $generated@@149)) (= (type $generated@@642) $generated@@149)) (= (type $generated@@644) $generated@@149)) (= (type $generated@@646) $generated@@149)) (= (type $generated@@647) $generated@@149)) (= (type $generated@@648) $generated@@149)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 53) (let (($generated@@650 true))
(let (($generated@@651  (=> (and (= $generated@@590 $generated@@591) (= (ControlFlow 0 36) 34)) $generated@@650)))
(let (($generated@@652  (=> (and (not (= $generated@@590 $generated@@591)) (= (ControlFlow 0 35) 34)) $generated@@650)))
(let (($generated@@653  (=> (=> (< 4 $generated@@592) (= $generated@@590 $generated@@593)) (and (=> (= (ControlFlow 0 37) (- 0 38)) $generated@@594) (=> $generated@@594 (and (=> (= (ControlFlow 0 37) 35) $generated@@652) (=> (= (ControlFlow 0 37) 36) $generated@@651)))))))
(let (($generated@@654  (=> (and (<= $generated@@592 4) (= (ControlFlow 0 41) 37)) $generated@@653)))
(let (($generated@@655  (=> (< 4 $generated@@592) (and (=> (= (ControlFlow 0 39) (- 0 40)) $generated@@594) (=> $generated@@594 (=> (= (ControlFlow 0 39) 37) $generated@@653))))))
(let (($generated@@656  (=> (not $generated@@595) (and (=> (= (ControlFlow 0 42) 39) $generated@@655) (=> (= (ControlFlow 0 42) 41) $generated@@654)))))
(let (($generated@@657  (=> (< 0 $generated@@596) (=> (and (= $generated@@597 (- $generated@@596 0)) (= $generated@@598 (- $generated@@596 1))) (and (=> (= (ControlFlow 0 21) (- 0 22)) (or (<= 0 $generated@@597) (= (- $generated@@598 0) $generated@@597))) (=> (or (<= 0 $generated@@597) (= (- $generated@@598 0) $generated@@597)) (=> (= (ControlFlow 0 21) (- 0 20)) (< (- $generated@@598 0) $generated@@597))))))))
(let (($generated@@658  (=> (and (<= $generated@@596 0) (= (ControlFlow 0 19) (- 0 18))) true)))
(let (($generated@@659  (=> $generated@@599 (and (=> (= (ControlFlow 0 23) 19) $generated@@658) (=> (= (ControlFlow 0 23) 21) $generated@@657)))))
(let (($generated@@660 true))
(let (($generated@@661  (and (=> (= (ControlFlow 0 24) 17) $generated@@660) (=> (= (ControlFlow 0 24) 23) $generated@@659))))
(let (($generated@@662 true))
(let (($generated@@663  (=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and true (not false)) true) $generated@@600) $generated@@594) (<= 0 $generated@@596)) true) true) true) $generated@@595) true) $generated@@594) $generated@@600) true) (<= 0 $generated@@601)) (and (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@77) (=> (and (not (= $generated@@664 $generated@@603)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@602 $generated@@664) $generated@@60))) (= ($generated@@81 $generated@@602 $generated@@664) ($generated@@81 $generated@@602 $generated@@664))))
 :pattern ( ($generated@@81 $generated@@602 $generated@@664))
)) ($generated@@132 $generated@@602 $generated@@602))) (and (and (and (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (! (let (($generated@@667 ($generated@@67 (type $generated@@666))))
 (=> (and (and (= (type $generated@@665) $generated@@77) (= (type $generated@@666) ($generated@@66 $generated@@667))) (and (not (= $generated@@665 $generated@@603)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@602 $generated@@665) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@602 $generated@@665) $generated@@666) ($generated@@83 ($generated@@81 $generated@@602 $generated@@665) $generated@@666)) ($generated@@0 ($generated@@159 $generated@@604 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@602 $generated@@665) $generated@@666))
)) (=> true true)) (and (=> $generated@@594 $generated@@594) (=> $generated@@600 $generated@@600))) (and (and (=> true true) (=> $generated@@605 $generated@@605)) (and (<= (- $generated@@596 0) $generated@@601) (=> (= (- $generated@@596 0) $generated@@601) true))))) (and (=> (= (ControlFlow 0 25) 16) $generated@@662) (=> (= (ControlFlow 0 25) 24) $generated@@661)))))
(let (($generated@@668  (=> (=> true (and ($generated@@216 $generated@@606 $generated@@607) ($generated@@242 $generated@@606 $generated@@607 $generated@@602))) (=> (and (and (=> $generated@@608 (and ($generated@@216 $generated@@609 $generated@@607) ($generated@@242 $generated@@609 $generated@@607 $generated@@602))) (=> $generated@@610 (and ($generated@@216 $generated@@611 $generated@@607) ($generated@@242 $generated@@611 $generated@@607 $generated@@602)))) (and (= $generated@@601 (- $generated@@592 0)) (= (ControlFlow 0 26) 25))) $generated@@663))))
(let (($generated@@669  (=> (and (<= 100 $generated@@612) (= (ControlFlow 0 29) 26)) $generated@@668)))
(let (($generated@@670  (=> (< $generated@@612 100) (and (=> (= (ControlFlow 0 27) (- 0 28)) $generated@@605) (=> $generated@@605 (=> (= (ControlFlow 0 27) 26) $generated@@668))))))
(let (($generated@@671  (=> (<= $generated@@613 $generated@@592) (and (=> (= (ControlFlow 0 30) (- 0 32)) true) (and (=> (= (ControlFlow 0 30) (- 0 31)) $generated@@600) (=> $generated@@600 (and (=> (= (ControlFlow 0 30) 27) $generated@@670) (=> (= (ControlFlow 0 30) 29) $generated@@669))))))))
(let (($generated@@672  (and (=> (= (ControlFlow 0 3) (- 0 8)) true) (and (=> (= (ControlFlow 0 3) (- 0 7)) $generated@@614) (=> $generated@@614 (=> (= $generated@@615 (+ $generated@@592 1)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (<= 0 $generated@@616) (= (- $generated@@613 $generated@@615) $generated@@616))) (=> (or (<= 0 $generated@@616) (= (- $generated@@613 $generated@@615) $generated@@616)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (< (- $generated@@613 $generated@@615) $generated@@616)) (=> (< (- $generated@@613 $generated@@615) $generated@@616) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@595 (=> (< 4 $generated@@615) (= $generated@@617 $generated@@593)))) (=> (=> $generated@@595 (=> (< 4 $generated@@615) (= $generated@@617 $generated@@593))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@595 (or (= $generated@@617 $generated@@591) (<= $generated@@615 $generated@@613))))))))))))))))
(let (($generated@@673  (=> (not (= ($generated@@524 $generated@@592 ($generated@@235 2)) ($generated@@235 0))) (=> (and (= $generated@@614 $generated@@600) (= (ControlFlow 0 10) 3)) $generated@@672))))
(let (($generated@@674  (=> (= ($generated@@524 $generated@@592 ($generated@@235 2)) ($generated@@235 0)) (=> (and (= $generated@@614 true) (= (ControlFlow 0 9) 3)) $generated@@672))))
(let (($generated@@675  (and (=> (= (ControlFlow 0 11) (- 0 12)) (not (= ($generated@@235 2) 0))) (=> (not (= ($generated@@235 2) 0)) (and (=> (= (ControlFlow 0 11) 9) $generated@@674) (=> (= (ControlFlow 0 11) 10) $generated@@673))))))
(let (($generated@@676  (=> (not (= $generated@@592 ($generated@@235 4))) (=> (and (= $generated@@617 $generated@@590) (= (ControlFlow 0 14) 11)) $generated@@675))))
(let (($generated@@677  (=> (= $generated@@592 ($generated@@235 4)) (=> (and (= $generated@@617 $generated@@593) (= (ControlFlow 0 13) 11)) $generated@@675))))
(let (($generated@@678  (=> (and (< $generated@@592 $generated@@613) (= $generated@@616 (- $generated@@613 $generated@@592))) (and (=> (= (ControlFlow 0 15) 13) $generated@@677) (=> (= (ControlFlow 0 15) 14) $generated@@676)))))
(let (($generated@@679  (=> $generated@@595 (and (=> (= (ControlFlow 0 33) 30) $generated@@671) (=> (= (ControlFlow 0 33) 15) $generated@@678)))))
(let (($generated@@680  (and (=> (= (ControlFlow 0 43) 42) $generated@@656) (=> (= (ControlFlow 0 43) 33) $generated@@679))))
(let (($generated@@681 true))
(let (($generated@@682  (=> (=> $generated@@618 (and ($generated@@216 $generated@@619 $generated@@607) ($generated@@242 $generated@@619 $generated@@607 $generated@@602))) (=> (and (and (=> $generated@@620 (and ($generated@@216 $generated@@621 $generated@@607) ($generated@@242 $generated@@621 $generated@@607 $generated@@602))) (=> $generated@@600 (and ($generated@@216 $generated@@622 $generated@@607) ($generated@@242 $generated@@622 $generated@@607 $generated@@602)))) (and (=> $generated@@605 (and ($generated@@216 $generated@@623 $generated@@607) ($generated@@242 $generated@@623 $generated@@607 $generated@@602))) (=> $generated@@594 (and ($generated@@216 $generated@@590 $generated@@607) ($generated@@242 $generated@@590 $generated@@607 $generated@@602))))) (=> (and (and (and (and (and (and (and (and (and (and (not false) true) $generated@@600) $generated@@594) (<= 0 $generated@@592)) true) true) true) (and (=> $generated@@595 true) (=> $generated@@595 (=> (< 4 $generated@@592) (= $generated@@590 $generated@@593))))) (and (and (=> $generated@@595 true) (=> $generated@@595 (or (= $generated@@590 $generated@@591) (<= $generated@@592 $generated@@613)))) (and (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@77) (=> (and (not (= $generated@@683 $generated@@603)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@602 $generated@@683) $generated@@60))) (= ($generated@@81 $generated@@602 $generated@@683) ($generated@@81 $generated@@602 $generated@@683))))
 :pattern ( ($generated@@81 $generated@@602 $generated@@683))
)) ($generated@@132 $generated@@602 $generated@@602)))) (and (and (and (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (! (let (($generated@@686 ($generated@@67 (type $generated@@685))))
 (=> (and (and (= (type $generated@@684) $generated@@77) (= (type $generated@@685) ($generated@@66 $generated@@686))) (and (not (= $generated@@684 $generated@@603)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@602 $generated@@684) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@602 $generated@@684) $generated@@685) ($generated@@83 ($generated@@81 $generated@@602 $generated@@684) $generated@@685)) ($generated@@0 ($generated@@159 $generated@@604 $generated@@684 $generated@@685)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@602 $generated@@684) $generated@@685))
)) (=> $generated@@624 $generated@@624)) (and (=> true $generated@@594) (=> true $generated@@600))) (and (and (=> true true) (=> $generated@@625 $generated@@605)) (and (<= (- $generated@@613 $generated@@592) $generated@@626) (=> (= (- $generated@@613 $generated@@592) $generated@@626) true))))) (and (=> (= (ControlFlow 0 44) 1) $generated@@681) (=> (= (ControlFlow 0 44) 43) $generated@@680)))))))
(let (($generated@@687  (=> (and (= $generated@@627 ($generated@@235 0)) (= $generated@@626 (- $generated@@613 $generated@@627))) (and (=> (= (ControlFlow 0 45) (- 0 47)) (=> $generated@@595 (=> (< 4 $generated@@627) (= $generated@@628 $generated@@593)))) (=> (=> $generated@@595 (=> (< 4 $generated@@627) (= $generated@@628 $generated@@593))) (and (=> (= (ControlFlow 0 45) (- 0 46)) (=> $generated@@595 (or (= $generated@@628 $generated@@591) (<= $generated@@627 $generated@@613)))) (=> (=> $generated@@595 (or (= $generated@@628 $generated@@591) (<= $generated@@627 $generated@@613))) (=> (= (ControlFlow 0 45) 44) $generated@@682))))))))
(let (($generated@@688  (=> (and (= $generated@@628 $generated@@591) (= (ControlFlow 0 49) 45)) $generated@@687)))
(let (($generated@@689  (=> (and (= $generated@@628 $generated@@593) (= (ControlFlow 0 48) 45)) $generated@@687)))
(let (($generated@@690  (=> (and (<= 100 $generated@@612) (= $generated@@625 $generated@@629)) (and (=> (= (ControlFlow 0 51) 48) $generated@@689) (=> (= (ControlFlow 0 51) 49) $generated@@688)))))
(let (($generated@@691  (=> (and (< $generated@@612 100) (= $generated@@625 true)) (and (=> (= (ControlFlow 0 50) 48) $generated@@689) (=> (= (ControlFlow 0 50) 49) $generated@@688)))))
(let (($generated@@692  (=> (= $generated@@604 ($generated@@160 $generated@@603 $generated@@602 $generated@@60 false)) (=> (and (and (=> $generated@@630 (and ($generated@@216 $generated@@631 $generated@@607) ($generated@@242 $generated@@631 $generated@@607 $generated@@602))) (=> $generated@@632 (and ($generated@@216 $generated@@633 $generated@@607) ($generated@@242 $generated@@633 $generated@@607 $generated@@602)))) (and (=> $generated@@634 (and ($generated@@216 $generated@@635 $generated@@607) ($generated@@242 $generated@@635 $generated@@607 $generated@@602))) (=> $generated@@629 (and ($generated@@216 $generated@@636 $generated@@607) ($generated@@242 $generated@@636 $generated@@607 $generated@@602))))) (and (=> (= (ControlFlow 0 52) 50) $generated@@691) (=> (= (ControlFlow 0 52) 51) $generated@@690))))))
(let (($generated@@693  (=> (and ($generated@@241 $generated@@602) ($generated@@637 $generated@@602)) (=> (and (and (and ($generated@@216 $generated@@593 $generated@@607) ($generated@@242 $generated@@593 $generated@@607 $generated@@602)) (and ($generated@@216 $generated@@591 $generated@@607) ($generated@@242 $generated@@591 $generated@@607 $generated@@602))) (and (and (<= ($generated@@235 0) $generated@@613) (=> $generated@@624 (and ($generated@@216 $generated@@638 $generated@@607) ($generated@@242 $generated@@638 $generated@@607 $generated@@602)))) (and (=> $generated@@630 (and ($generated@@216 $generated@@639 $generated@@607) ($generated@@242 $generated@@639 $generated@@607 $generated@@602))) true))) (=> (and (and (and (and (=> $generated@@632 (and ($generated@@216 $generated@@640 $generated@@607) ($generated@@242 $generated@@640 $generated@@607 $generated@@602))) true) (and (=> $generated@@634 (and ($generated@@216 $generated@@641 $generated@@607) ($generated@@242 $generated@@641 $generated@@607 $generated@@602))) true)) (and (and (=> $generated@@629 (and ($generated@@216 $generated@@642 $generated@@607) ($generated@@242 $generated@@642 $generated@@607 $generated@@602))) true) (and (=> $generated@@643 (and ($generated@@216 $generated@@644 $generated@@607) ($generated@@242 $generated@@644 $generated@@607 $generated@@602))) true))) (and (and (and (=> $generated@@645 (and ($generated@@216 $generated@@646 $generated@@607) ($generated@@242 $generated@@646 $generated@@607 $generated@@602))) true) (and (=> $generated@@608 (and ($generated@@216 $generated@@647 $generated@@607) ($generated@@242 $generated@@647 $generated@@607 $generated@@602))) true)) (and (and (=> $generated@@610 (and ($generated@@216 $generated@@648 $generated@@607) ($generated@@242 $generated@@648 $generated@@607 $generated@@602))) true) (and (= 1 $generated@@649) (= (ControlFlow 0 53) 52))))) $generated@@692)))))
$generated@@693)))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 (T@U T@U T@U) Bool)
(declare-fun $generated@@167 () Bool)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@157) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@158) $generated@@47)) (= (type $generated@@159) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@160) ($generated@@50 $generated@@4))) (= ($generated@@1 $generated@@172) 11)) (= (type $generated@@164) $generated@@172)) (= ($generated@@1 $generated@@173) 12)) (= (type $generated@@165) $generated@@173)) (= (type $generated@@168) $generated@@172)) (= (type $generated@@170) $generated@@172)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@174  (=> (= $generated@@157 ($generated@@45 $generated@@158 $generated@@159 $generated@@160 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true)))))
(let (($generated@@175  (=> (and (and (and ($generated@@161 $generated@@159) ($generated@@162 $generated@@159)) (and ($generated@@163 $generated@@164 $generated@@165) ($generated@@166 $generated@@164 $generated@@165 $generated@@159))) (and (and (=> $generated@@167 (and ($generated@@163 $generated@@168 $generated@@165) ($generated@@166 $generated@@168 $generated@@165 $generated@@159))) (=> $generated@@169 (and ($generated@@163 $generated@@170 $generated@@165) ($generated@@166 $generated@@170 $generated@@165 $generated@@159)))) (and (= 0 $generated@@171) (= (ControlFlow 0 4) 2)))) $generated@@174)))
$generated@@175)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Bool)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 (T@U T@U T@U) Bool)
(declare-fun $generated@@166 () Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@157) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@158) $generated@@47)) (= (type $generated@@159) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@160) ($generated@@50 $generated@@4))) (= ($generated@@1 $generated@@178) 11)) (= (type $generated@@163) $generated@@178)) (= ($generated@@1 $generated@@179) 12)) (= (type $generated@@164) $generated@@179)) (= (type $generated@@167) $generated@@178)) (= (type $generated@@170) $generated@@178)) (= (type $generated@@171) $generated@@178)) (= (type $generated@@172) $generated@@178)) (= (type $generated@@174) $generated@@178)) (= (type $generated@@176) $generated@@178)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@180  (=> (= $generated@@157 ($generated@@45 $generated@@158 $generated@@159 $generated@@160 false)) (=> (and (=> $generated@@161 (and ($generated@@162 $generated@@163 $generated@@164) ($generated@@165 $generated@@163 $generated@@164 $generated@@159))) (=> $generated@@166 (and ($generated@@162 $generated@@167 $generated@@164) ($generated@@165 $generated@@167 $generated@@164 $generated@@159)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) $generated@@161) (=> $generated@@161 (and (=> (= (ControlFlow 0 2) (- 0 4)) $generated@@166) (=> $generated@@166 (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))))))))
(let (($generated@@181  (=> (and ($generated@@168 $generated@@159) ($generated@@169 $generated@@159)) (=> (and (and ($generated@@162 $generated@@170 $generated@@164) ($generated@@165 $generated@@170 $generated@@164 $generated@@159)) (and (=> $generated@@161 (and ($generated@@162 $generated@@171 $generated@@164) ($generated@@165 $generated@@171 $generated@@164 $generated@@159))) true)) (=> (and (and (and (=> $generated@@166 (and ($generated@@162 $generated@@172 $generated@@164) ($generated@@165 $generated@@172 $generated@@164 $generated@@159))) true) (and (=> $generated@@173 (and ($generated@@162 $generated@@174 $generated@@164) ($generated@@165 $generated@@174 $generated@@164 $generated@@159))) true)) (and (and (=> $generated@@175 (and ($generated@@162 $generated@@176 $generated@@164) ($generated@@165 $generated@@176 $generated@@164 $generated@@159))) true) (and (= 1 $generated@@177) (= (ControlFlow 0 6) 2)))) $generated@@180)))))
$generated@@181)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 (T@U T@U) T@U)
(declare-fun $generated@@213 (T@U T@U) Bool)
(declare-fun $generated@@214 (T@U T@U) Bool)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@T) T@U)
(declare-fun $generated@@421 () T@T)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@464 (T@U Int) T@U)
(declare-fun $generated@@473 (T@U) Int)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert  (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= (type ($generated@@212 $generated@@216 $generated@@217)) $generated@@136)
 :pattern ( ($generated@@212 $generated@@216 $generated@@217))
)) (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@215 $generated@@218 $generated@@219)) $generated@@136)
 :pattern ( ($generated@@215 $generated@@218 $generated@@219))
))))
(assert  (=> (<= 1 $generated@@211) (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (= (type $generated@@220) $generated@@64) (= (type $generated@@221) $generated@@145)) (or ($generated@@213 $generated@@220 $generated@@221) (and (not (= 1 $generated@@211)) ($generated@@214 $generated@@221 $generated@@220)))) (= ($generated@@212 $generated@@220 $generated@@221) ($generated@@215 $generated@@221 $generated@@221)))
 :pattern ( ($generated@@212 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) $generated@@64) (= (type $generated@@223) $generated@@64)) (= (type $generated@@224) $generated@@145)) (= (type $generated@@225) $generated@@145)) (= ($generated@@132 ($generated@@215 $generated@@224 $generated@@225) ($generated@@135 $generated@@222 $generated@@223))  (and ($generated@@214 $generated@@224 $generated@@222) ($generated@@214 $generated@@225 $generated@@223))))
 :pattern ( ($generated@@132 ($generated@@215 $generated@@224 $generated@@225) ($generated@@135 $generated@@222 $generated@@223)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@136) (= (type $generated@@227) $generated@@136)) (= ($generated@@142 $generated@@226 $generated@@227) (= $generated@@226 $generated@@227)))
 :pattern ( ($generated@@142 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@64)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@231) $generated@@64)) (= ($generated@@132 $generated@@230 ($generated@@228 $generated@@231)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@145) ($generated@@0 ($generated@@81 $generated@@230 $generated@@232))) ($generated@@214 $generated@@232 $generated@@231))
 :pattern ( ($generated@@81 $generated@@230 $generated@@232))
))))
 :pattern ( ($generated@@132 $generated@@230 ($generated@@228 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@214 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@64) (= (type $generated@@245) $generated@@64)) (= (type $generated@@246) $generated@@145)) (= (type $generated@@247) $generated@@145)) (= (type $generated@@248) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@242 $generated@@248)) (= ($generated@@74 ($generated@@215 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@136) (= ($generated@@134 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@136) ($generated@@134 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@145) (= (type $generated@@254) $generated@@145)) (= $generated@@252 ($generated@@215 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@134 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@145)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@64) (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267) ($generated@@74 $generated@@265 $generated@@266 $generated@@267)))
 :pattern ( ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@76 $generated@@270 $generated@@2))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@79 (type $generated@@271))))
 (=> (= (type $generated@@271) ($generated@@76 $generated@@272 $generated@@2)) (and (= (= ($generated@@268 $generated@@271) 0) (= $generated@@271 ($generated@@269 $generated@@272))) (=> (not (= ($generated@@268 $generated@@271) 0)) (exists (($generated@@273 T@U) ) (!  (and (= (type $generated@@273) $generated@@272) (< 0 ($generated ($generated@@81 $generated@@271 $generated@@273))))
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
))))))
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 18)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@76 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@81 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@81 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 19)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@76 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@79 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@76 $generated@@311 $generated@@2)) (= ($generated@@151 $generated@@310) (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@311) (and (<= 0 ($generated ($generated@@81 $generated@@310 $generated@@312))) (<= ($generated ($generated@@81 $generated@@310 $generated@@312)) ($generated@@268 $generated@@310))))
 :pattern ( ($generated@@81 $generated@@310 $generated@@312))
)))))
 :pattern ( ($generated@@151 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@278 (type $generated@@313))))
(let (($generated@@315 ($generated@@277 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@276 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@275 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) ($generated@@0 ($generated@@81 ($generated@@274 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@274 $generated@@313))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@278 (type $generated@@318))))
(= (type ($generated@@317 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@278 (type $generated@@320))))
(let (($generated@@322 ($generated@@277 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@276 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@275 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@296 (type $generated@@324))))
(let (($generated@@326 ($generated@@295 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@294 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@293 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@292 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@296 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@296 (type $generated@@331))))
(let (($generated@@333 ($generated@@295 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@294 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@293 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@336) $generated@@64)) (= ($generated@@132 $generated@@335 ($generated@@150 $generated@@336)) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@335 $generated@@337)))) ($generated@@214 $generated@@337 $generated@@336))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
))))
 :pattern ( ($generated@@132 $generated@@335 ($generated@@150 $generated@@336)))
)))
(assert  (=> (<= 1 $generated@@211) (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) $generated@@145)) (or ($generated@@213 $generated@@338 ($generated@@238 $generated@@339)) (and (not (= 1 $generated@@211)) ($generated@@214 $generated@@339 $generated@@338)))) (= ($generated@@212 $generated@@338 ($generated@@238 $generated@@339)) ($generated@@238 ($generated@@215 ($generated@@238 $generated@@339) ($generated@@238 $generated@@339)))))
 :weight 3
 :pattern ( ($generated@@212 $generated@@338 ($generated@@238 $generated@@339)))
))))
(assert  (=> (<= 1 $generated@@211) (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@340) $generated@@64) (= (type $generated@@341) $generated@@145)) (or ($generated@@213 $generated@@340 $generated@@341) (and (not (= 1 $generated@@211)) ($generated@@214 $generated@@341 $generated@@340)))) ($generated@@132 ($generated@@212 $generated@@340 $generated@@341) ($generated@@135 $generated@@340 $generated@@340)))
 :pattern ( ($generated@@212 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@342 ($generated@@228 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@145) ($generated@@0 ($generated@@81 $generated@@342 $generated@@345))) ($generated@@243 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@81 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@74 $generated@@342 ($generated@@228 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@346) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@347) $generated@@64)) (= (type $generated@@348) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@346 ($generated@@233 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@145) ($generated@@0 ($generated@@81 $generated@@346 $generated@@349))) ($generated@@243 $generated@@349 $generated@@347 $generated@@348))
 :pattern ( ($generated@@81 $generated@@346 $generated@@349))
))))
 :pattern ( ($generated@@74 $generated@@346 ($generated@@233 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(= ($generated ($generated@@81 ($generated@@269 $generated@@351) $generated@@350)) 0))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@81 ($generated@@269 $generated@@351) $generated@@350)))
)))
(assert  (and (and (forall (($generated@@355 T@U) ) (! (= (type ($generated@@352 $generated@@355)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@352 $generated@@355))
)) (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@353 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@353 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@278 (type $generated@@358))))
(let (($generated@@360 ($generated@@277 (type $generated@@358))))
(= (type ($generated@@354 $generated@@358)) ($generated@@76 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@354 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@362) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@81 ($generated@@274 $generated@@361) ($generated@@143 ($generated@@353 $generated@@136 $generated@@362)))) (= ($generated@@81 ($generated@@354 $generated@@361) ($generated@@143 ($generated@@353 $generated@@136 $generated@@362))) ($generated@@144 ($generated@@353 $generated@@136 $generated@@362))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@361) $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@296 (type $generated@@366))))
(let (($generated@@368 ($generated@@295 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@76 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@370) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@369) ($generated@@143 ($generated@@353 $generated@@136 $generated@@370)))) (= ($generated@@81 ($generated@@364 $generated@@369) ($generated@@143 ($generated@@353 $generated@@136 $generated@@370))) ($generated@@144 ($generated@@353 $generated@@136 $generated@@370))))))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(let (($generated@@374 ($generated@@277 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@276 $generated@@374 $generated@@373)) (= ($generated@@0 ($generated@@81 ($generated@@317 $generated@@371) $generated@@372)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) (and ($generated@@0 ($generated@@81 ($generated@@274 $generated@@371) $generated@@375)) (= $generated@@372 ($generated@@81 ($generated@@354 $generated@@371) $generated@@375))))
 :pattern ( ($generated@@81 ($generated@@274 $generated@@371) $generated@@375))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@371) $generated@@375))
))))))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@295 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@294 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@81 ($generated@@364 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@376) $generated@@380))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@64)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@274 $generated@@384) $generated@@388))) (and ($generated@@243 ($generated@@81 ($generated@@354 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@243 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@274 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@74 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@64)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@392) $generated@@396))) (and ($generated@@243 ($generated@@81 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@243 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@T) ) (! (= (type ($generated@@397 $generated@@398)) ($generated@@76 $generated@@398 $generated@@4))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@296 (type $generated@@399))))
(let (($generated@@401 ($generated@@295 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@294 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@293 $generated@@401 $generated@@400)) (= ($generated@@292 $generated@@399) ($generated@@397 $generated@@401))))))
 :pattern ( ($generated@@292 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@296 (type $generated@@402))))
(let (($generated@@404 ($generated@@295 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@294 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@293 $generated@@404 $generated@@403)) (= ($generated@@328 $generated@@402) ($generated@@397 $generated@@403))))))
 :pattern ( ($generated@@328 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@296 (type $generated@@405))))
(let (($generated@@407 ($generated@@295 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@294 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@293 $generated@@407 $generated@@406)) (= ($generated@@363 $generated@@405) ($generated@@397 $generated@@145))))))
 :pattern ( ($generated@@363 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@278 (type $generated@@408))))
(let (($generated@@410 ($generated@@277 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@276 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@275 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (and (and (= (type $generated@@411) $generated@@145) (= (type $generated@@412) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@408) ($generated@@263 ($generated@@215 $generated@@411 $generated@@412)))))
 :no-pattern (type $generated@@411)
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@352 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@296 (type $generated@@413))))
(let (($generated@@415 ($generated@@295 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@294 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@293 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (and (and (= (type $generated@@416) $generated@@145) (= (type $generated@@417) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@363 $generated@@413) ($generated@@263 ($generated@@215 $generated@@416 $generated@@417)))))
 :no-pattern (type $generated@@416)
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@363 $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@214 $generated@@418 $generated@@46)) (and (= ($generated@@263 ($generated@@353 $generated@@2 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@353 $generated@@2 $generated@@418) $generated@@46)))
 :pattern ( ($generated@@214 $generated@@418 $generated@@46))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@214 $generated@@419 $generated@@47)) (and (= ($generated@@263 ($generated@@353 $generated@@3 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@353 $generated@@3 $generated@@419) $generated@@47)))
 :pattern ( ($generated@@214 $generated@@419 $generated@@47))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@214 $generated@@420 $generated@@44)) (and (= ($generated@@263 ($generated@@353 $generated@@4 $generated@@420)) $generated@@420) ($generated@@132 ($generated@@353 $generated@@4 $generated@@420) $generated@@44)))
 :pattern ( ($generated@@214 $generated@@420 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@421) 20))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@145) ($generated@@214 $generated@@422 $generated@@45)) (and (= ($generated@@263 ($generated@@353 $generated@@421 $generated@@422)) $generated@@422) ($generated@@132 ($generated@@353 $generated@@421 $generated@@422) $generated@@45)))
 :pattern ( ($generated@@214 $generated@@422 $generated@@45))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@64) (= ($generated@@214 ($generated@@263 $generated@@423) $generated@@424) ($generated@@132 $generated@@423 $generated@@424)))
 :pattern ( ($generated@@214 ($generated@@263 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@79 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@76 $generated@@426 $generated@@2)) (<= 0 ($generated@@268 $generated@@425))))
 :pattern ( ($generated@@268 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@258 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@257 $generated@@428)) (<= 0 ($generated@@256 $generated@@427))))
 :pattern ( ($generated@@256 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (= (type ($generated@@429 $generated@@430)) $generated@@64)
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@64) (= (type $generated@@432) $generated@@64)) (= ($generated@@429 ($generated@@381 $generated@@431 $generated@@432)) $generated@@431))
 :pattern ( ($generated@@381 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@64)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@64) (= (type $generated@@436) $generated@@64)) (= ($generated@@433 ($generated@@381 $generated@@435 $generated@@436)) $generated@@436))
 :pattern ( ($generated@@381 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@72 ($generated@@381 $generated@@437 $generated@@438)) $generated@@58))
 :pattern ( ($generated@@381 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@389 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@389 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@389 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@389 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@72 ($generated@@389 $generated@@447 $generated@@448)) $generated@@59))
 :pattern ( ($generated@@389 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@145) (= (type $generated@@450) $generated@@145)) (= ($generated@@249 ($generated@@215 $generated@@449 $generated@@450)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@135 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@135 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@135 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@135 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) (= (type $generated@@460) $generated@@145)) (= ($generated@@143 ($generated@@215 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@215 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) (= (type $generated@@462) $generated@@145)) (= ($generated@@144 ($generated@@215 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@215 $generated@@461 $generated@@462))
)))
(assert  (and (forall (($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@465))
)) (forall (($generated@@466 T@U) ($generated@@467 Int) ) (! (let (($generated@@468 ($generated@@258 (type $generated@@466))))
(= (type ($generated@@464 $generated@@466 $generated@@467)) $generated@@468))
 :pattern ( ($generated@@464 $generated@@466 $generated@@467))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@469) ($generated@@257 $generated@@145)) (= (type $generated@@470) $generated@@64)) (= (type $generated@@471) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@469 ($generated@@463 $generated@@470) $generated@@471) (forall (($generated@@472 Int) ) (!  (=> (and (<= 0 $generated@@472) (< $generated@@472 ($generated@@256 $generated@@469))) ($generated@@243 ($generated@@464 $generated@@469 $generated@@472) $generated@@470 $generated@@471))
 :pattern ( ($generated@@464 $generated@@469 $generated@@472))
))))
 :pattern ( ($generated@@74 $generated@@469 ($generated@@463 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@474 Int) ) (! (= ($generated@@473 ($generated@@75 $generated@@474)) $generated@@474)
 :pattern ( ($generated@@75 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@475 ($generated@@228 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@228 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@72 ($generated@@228 $generated@@478)) $generated@@54))
 :pattern ( ($generated@@228 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@479 ($generated@@233 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@233 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@482)) $generated@@55))
 :pattern ( ($generated@@233 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@483 ($generated@@150 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@150 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@486)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@463 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@463 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@463 $generated@@490)) $generated@@57))
 :pattern ( ($generated@@463 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 (type $generated@@491)))
(= ($generated@@353 $generated@@492 ($generated@@263 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@263 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@494) $generated@@64)) (= (type $generated@@495) $generated@@64)) (= ($generated@@132 $generated@@493 ($generated@@381 $generated@@494 $generated@@495)) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@274 $generated@@493) $generated@@496))) (and ($generated@@214 ($generated@@81 ($generated@@354 $generated@@493) $generated@@496) $generated@@495) ($generated@@214 $generated@@496 $generated@@494)))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@493) $generated@@496))
 :pattern ( ($generated@@81 ($generated@@274 $generated@@493) $generated@@496))
))))
 :pattern ( ($generated@@132 $generated@@493 ($generated@@381 $generated@@494 $generated@@495)))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@498) $generated@@64)) (= (type $generated@@499) $generated@@64)) (= ($generated@@132 $generated@@497 ($generated@@389 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@497) $generated@@500))) (and ($generated@@214 ($generated@@81 ($generated@@364 $generated@@497) $generated@@500) $generated@@499) ($generated@@214 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@497) $generated@@500))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@132 $generated@@497 ($generated@@389 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@145)) (< ($generated@@501 $generated@@503) ($generated@@502 ($generated@@215 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@215 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@145) (= (type $generated@@506) $generated@@145)) (< ($generated@@501 $generated@@506) ($generated@@502 ($generated@@215 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@215 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) $generated@@145) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) ($generated@@214 $generated@@507 ($generated@@381 $generated@@508 $generated@@509))) (and (= ($generated@@263 ($generated@@353 ($generated@@276 $generated@@145 $generated@@145) $generated@@507)) $generated@@507) ($generated@@132 ($generated@@353 ($generated@@276 $generated@@145 $generated@@145) $generated@@507) ($generated@@381 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@214 $generated@@507 ($generated@@381 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) ($generated@@214 $generated@@510 ($generated@@389 $generated@@511 $generated@@512))) (and (= ($generated@@263 ($generated@@353 ($generated@@294 $generated@@145 $generated@@145) $generated@@510)) $generated@@510) ($generated@@132 ($generated@@353 ($generated@@294 $generated@@145 $generated@@145) $generated@@510) ($generated@@389 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@214 $generated@@510 ($generated@@389 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@145)) ($generated@@214 $generated@@515 ($generated@@135 $generated@@513 $generated@@514))) (and (= ($generated@@263 ($generated@@353 $generated@@136 $generated@@515)) $generated@@515) ($generated@@132 ($generated@@353 $generated@@136 $generated@@515) ($generated@@135 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@214 $generated@@515 ($generated@@135 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
 (not ($generated@@0 ($generated@@81 ($generated@@397 $generated@@517) $generated@@516))))
 :pattern ( (let (($generated@@517 (type $generated@@516)))
($generated@@81 ($generated@@397 $generated@@517) $generated@@516)))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@69)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@520 $generated@@521)) $generated@@62) (= ($generated@@518 ($generated@@135 $generated@@520 $generated@@521)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@136) (= ($generated@@501 ($generated@@263 $generated@@522)) ($generated@@502 $generated@@522)))
 :pattern ( ($generated@@501 ($generated@@263 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) ($generated@@214 $generated@@523 ($generated@@75 0))) (and (= ($generated@@263 ($generated@@353 $generated@@2 $generated@@523)) $generated@@523) ($generated@@132 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@523) ($generated@@75 0))))
 :pattern ( ($generated@@214 $generated@@523 ($generated@@75 0)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@214 $generated@@524 ($generated@@228 $generated@@525))) (and (= ($generated@@263 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@524) ($generated@@228 $generated@@525))))
 :pattern ( ($generated@@214 $generated@@524 ($generated@@228 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@64)) ($generated@@214 $generated@@526 ($generated@@233 $generated@@527))) (and (= ($generated@@263 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@526)) $generated@@526) ($generated@@132 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@526) ($generated@@233 $generated@@527))))
 :pattern ( ($generated@@214 $generated@@526 ($generated@@233 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) ($generated@@214 $generated@@528 ($generated@@150 $generated@@529))) (and (= ($generated@@263 ($generated@@353 ($generated@@76 $generated@@145 $generated@@2) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@353 ($generated@@76 $generated@@145 $generated@@2) $generated@@528) ($generated@@150 $generated@@529))))
 :pattern ( ($generated@@214 $generated@@528 ($generated@@150 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) ($generated@@214 $generated@@530 ($generated@@463 $generated@@531))) (and (= ($generated@@263 ($generated@@353 ($generated@@257 $generated@@145) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@353 ($generated@@257 $generated@@145) $generated@@530) ($generated@@463 $generated@@531))))
 :pattern ( ($generated@@214 $generated@@530 ($generated@@463 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@532 ($generated@@150 $generated@@533) $generated@@534) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@532 $generated@@535)))) ($generated@@243 $generated@@535 $generated@@533 $generated@@534))
 :pattern ( ($generated@@81 $generated@@532 $generated@@535))
))))
 :pattern ( ($generated@@74 $generated@@532 ($generated@@150 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@136) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@242 $generated@@538) (and ($generated@@134 $generated@@536) (exists (($generated@@539 T@U) ) (!  (and (= (type $generated@@539) $generated@@64) ($generated@@74 $generated@@536 ($generated@@135 $generated@@537 $generated@@539) $generated@@538))
 :pattern ( ($generated@@74 $generated@@536 ($generated@@135 $generated@@537 $generated@@539) $generated@@538))
))))) ($generated@@243 ($generated@@143 $generated@@536) $generated@@537 $generated@@538))
 :pattern ( ($generated@@243 ($generated@@143 $generated@@536) $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@136) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@242 $generated@@542) (and ($generated@@134 $generated@@540) (exists (($generated@@543 T@U) ) (!  (and (= (type $generated@@543) $generated@@64) ($generated@@74 $generated@@540 ($generated@@135 $generated@@543 $generated@@541) $generated@@542))
 :pattern ( ($generated@@74 $generated@@540 ($generated@@135 $generated@@543 $generated@@541) $generated@@542))
))))) ($generated@@243 ($generated@@144 $generated@@540) $generated@@541 $generated@@542))
 :pattern ( ($generated@@243 ($generated@@144 $generated@@540) $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@145)) (= ($generated@@215 ($generated@@238 $generated@@544) ($generated@@238 $generated@@545)) ($generated@@238 ($generated@@215 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@215 ($generated@@238 $generated@@544) ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= ($generated@@263 ($generated@@238 $generated@@546)) ($generated@@238 ($generated@@263 $generated@@546)))
 :pattern ( ($generated@@263 ($generated@@238 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@258 (type $generated@@547))))
 (=> (and (= (type $generated@@547) ($generated@@257 $generated@@548)) (= ($generated@@256 $generated@@547) 0)) (= $generated@@547 ($generated@@255 $generated@@548))))
 :pattern ( ($generated@@256 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@550)))
 (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@552 $generated@@2)) (= (type $generated@@551) $generated@@2)) (<= 0 ($generated $generated@@551))) (= ($generated@@268 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)) (+ (- ($generated@@268 $generated@@549) ($generated ($generated@@81 $generated@@549 $generated@@550))) ($generated $generated@@551)))))
 :pattern ( ($generated@@268 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@2)) ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@3)) ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@4)) ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@421)) ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@145)) ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@257 $generated@@145)) (= (type $generated@@564) $generated@@64)) (= ($generated@@132 $generated@@563 ($generated@@463 $generated@@564)) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@256 $generated@@563))) ($generated@@214 ($generated@@464 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@464 $generated@@563 $generated@@565))
))))
 :pattern ( ($generated@@132 $generated@@563 ($generated@@463 $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 Int) ) (!  (=> (= (type $generated@@567) ($generated@@257 $generated@@145)) (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@256 $generated@@567))) (< ($generated@@502 ($generated@@353 $generated@@136 ($generated@@464 $generated@@567 $generated@@568))) ($generated@@566 $generated@@567))))
 :pattern ( ($generated@@502 ($generated@@353 $generated@@136 ($generated@@464 $generated@@567 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@64)) ($generated@@132 $generated@@569 ($generated@@381 $generated@@570 $generated@@571))) (and (and ($generated@@132 ($generated@@274 $generated@@569) ($generated@@228 $generated@@570)) ($generated@@132 ($generated@@317 $generated@@569) ($generated@@228 $generated@@571))) ($generated@@132 ($generated@@352 $generated@@569) ($generated@@228 ($generated@@135 $generated@@570 $generated@@571)))))
 :pattern ( ($generated@@132 $generated@@569 ($generated@@381 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@132 $generated@@572 ($generated@@389 $generated@@573 $generated@@574))) (and (and ($generated@@132 ($generated@@292 $generated@@572) ($generated@@233 $generated@@573)) ($generated@@132 ($generated@@328 $generated@@572) ($generated@@233 $generated@@574))) ($generated@@132 ($generated@@363 $generated@@572) ($generated@@233 ($generated@@135 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@389 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@2) ($generated@@132 $generated@@575 $generated@@46))
 :pattern ( ($generated@@132 $generated@@575 $generated@@46))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@3) ($generated@@132 $generated@@576 $generated@@47))
 :pattern ( ($generated@@132 $generated@@576 $generated@@47))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@4) ($generated@@132 $generated@@577 $generated@@44))
 :pattern ( ($generated@@132 $generated@@577 $generated@@44))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@421) ($generated@@132 $generated@@578 $generated@@45))
 :pattern ( ($generated@@132 $generated@@578 $generated@@45))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@145) ($generated@@132 $generated@@579 $generated@@48))
 :pattern ( ($generated@@132 $generated@@579 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 (T@U) Bool)
(declare-fun $generated@@589 () Bool)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () Bool)
(declare-fun $generated@@592 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@580) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@581) $generated@@77)) (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@583) $generated@@145)) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) $generated@@145)) (= (type $generated@@586) $generated@@145)) (= (type $generated@@587) $generated@@136)) (= (type $generated@@590) $generated@@145)) (= (type $generated@@592) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@593  (=> (= $generated@@580 ($generated@@156 $generated@@581 $generated@@582 $generated@@60 false)) (=> (and (and ($generated@@214 $generated@@583 $generated@@584) ($generated@@243 $generated@@583 $generated@@584 $generated@@582)) (and ($generated@@214 $generated@@585 $generated@@584) ($generated@@243 $generated@@585 $generated@@584 $generated@@582))) (=> (and (and (and ($generated@@243 $generated@@586 $generated@@584 $generated@@582) ($generated@@213 $generated@@584 $generated@@586)) (and ($generated@@134 ($generated@@212 $generated@@584 $generated@@586)) (= $generated@@587 ($generated@@212 $generated@@584 $generated@@586)))) (and (and ($generated@@213 $generated@@584 $generated@@586) ($generated@@132 $generated@@587 ($generated@@135 $generated@@584 $generated@@584))) (and ($generated@@134 $generated@@587) (= ($generated@@215 $generated@@583 $generated@@585) $generated@@587)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true)))))))
(let (($generated@@594  (=> (and ($generated@@242 $generated@@582) ($generated@@588 $generated@@582)) (=> (and (and (and ($generated@@214 $generated@@586 $generated@@584) ($generated@@243 $generated@@586 $generated@@584 $generated@@582)) (and (=> $generated@@589 (and ($generated@@214 $generated@@590 $generated@@584) ($generated@@243 $generated@@590 $generated@@584 $generated@@582))) true)) (and (and (=> $generated@@591 (and ($generated@@214 $generated@@592 $generated@@584) ($generated@@243 $generated@@592 $generated@@584 $generated@@582))) true) (and (= 2 $generated@@211) (= (ControlFlow 0 4) 2)))) $generated@@593))))
$generated@@594)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 (T@U T@U) T@U)
(declare-fun $generated@@213 (T@U T@U) Bool)
(declare-fun $generated@@214 (T@U T@U) Bool)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@T) T@U)
(declare-fun $generated@@421 () T@T)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@464 (T@U Int) T@U)
(declare-fun $generated@@473 (T@U) Int)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@566 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert  (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= (type ($generated@@212 $generated@@216 $generated@@217)) $generated@@136)
 :pattern ( ($generated@@212 $generated@@216 $generated@@217))
)) (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@215 $generated@@218 $generated@@219)) $generated@@136)
 :pattern ( ($generated@@215 $generated@@218 $generated@@219))
))))
(assert  (=> (<= 1 $generated@@211) (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (= (type $generated@@220) $generated@@64) (= (type $generated@@221) $generated@@145)) (or ($generated@@213 $generated@@220 $generated@@221) (and (not (= 1 $generated@@211)) ($generated@@214 $generated@@221 $generated@@220)))) (= ($generated@@212 $generated@@220 $generated@@221) ($generated@@215 $generated@@221 $generated@@221)))
 :pattern ( ($generated@@212 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (= (type $generated@@222) $generated@@64) (= (type $generated@@223) $generated@@64)) (= (type $generated@@224) $generated@@145)) (= (type $generated@@225) $generated@@145)) (= ($generated@@132 ($generated@@215 $generated@@224 $generated@@225) ($generated@@135 $generated@@222 $generated@@223))  (and ($generated@@214 $generated@@224 $generated@@222) ($generated@@214 $generated@@225 $generated@@223))))
 :pattern ( ($generated@@132 ($generated@@215 $generated@@224 $generated@@225) ($generated@@135 $generated@@222 $generated@@223)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@136) (= (type $generated@@227) $generated@@136)) (= ($generated@@142 $generated@@226 $generated@@227) (= $generated@@226 $generated@@227)))
 :pattern ( ($generated@@142 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@64)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@231) $generated@@64)) (= ($generated@@132 $generated@@230 ($generated@@228 $generated@@231)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@145) ($generated@@0 ($generated@@81 $generated@@230 $generated@@232))) ($generated@@214 $generated@@232 $generated@@231))
 :pattern ( ($generated@@81 $generated@@230 $generated@@232))
))))
 :pattern ( ($generated@@132 $generated@@230 ($generated@@228 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@214 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@64) (= (type $generated@@245) $generated@@64)) (= (type $generated@@246) $generated@@145)) (= (type $generated@@247) $generated@@145)) (= (type $generated@@248) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@242 $generated@@248)) (= ($generated@@74 ($generated@@215 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@246 $generated@@247) ($generated@@135 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@136) (= ($generated@@134 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@136) ($generated@@134 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@145) (= (type $generated@@254) $generated@@145)) (= $generated@@252 ($generated@@215 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@134 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@145)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@64) (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267) ($generated@@74 $generated@@265 $generated@@266 $generated@@267)))
 :pattern ( ($generated@@243 ($generated@@263 $generated@@265) $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@76 $generated@@270 $generated@@2))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@79 (type $generated@@271))))
 (=> (= (type $generated@@271) ($generated@@76 $generated@@272 $generated@@2)) (and (= (= ($generated@@268 $generated@@271) 0) (= $generated@@271 ($generated@@269 $generated@@272))) (=> (not (= ($generated@@268 $generated@@271) 0)) (exists (($generated@@273 T@U) ) (!  (and (= (type $generated@@273) $generated@@272) (< 0 ($generated ($generated@@81 $generated@@271 $generated@@273))))
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
))))))
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 18)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@76 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@81 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@81 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 19)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@76 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@81 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@79 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@76 $generated@@311 $generated@@2)) (= ($generated@@151 $generated@@310) (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@311) (and (<= 0 ($generated ($generated@@81 $generated@@310 $generated@@312))) (<= ($generated ($generated@@81 $generated@@310 $generated@@312)) ($generated@@268 $generated@@310))))
 :pattern ( ($generated@@81 $generated@@310 $generated@@312))
)))))
 :pattern ( ($generated@@151 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@278 (type $generated@@313))))
(let (($generated@@315 ($generated@@277 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@276 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@275 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) ($generated@@0 ($generated@@81 ($generated@@274 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@274 $generated@@313))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@278 (type $generated@@318))))
(= (type ($generated@@317 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@278 (type $generated@@320))))
(let (($generated@@322 ($generated@@277 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@276 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@275 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@296 (type $generated@@324))))
(let (($generated@@326 ($generated@@295 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@294 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@293 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@292 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@296 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@296 (type $generated@@331))))
(let (($generated@@333 ($generated@@295 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@294 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@293 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@336) $generated@@64)) (= ($generated@@132 $generated@@335 ($generated@@150 $generated@@336)) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@335 $generated@@337)))) ($generated@@214 $generated@@337 $generated@@336))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
))))
 :pattern ( ($generated@@132 $generated@@335 ($generated@@150 $generated@@336)))
)))
(assert  (=> (<= 1 $generated@@211) (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@338) $generated@@64) (= (type $generated@@339) $generated@@145)) (or ($generated@@213 $generated@@338 ($generated@@238 $generated@@339)) (and (not (= 1 $generated@@211)) ($generated@@214 $generated@@339 $generated@@338)))) (= ($generated@@212 $generated@@338 ($generated@@238 $generated@@339)) ($generated@@238 ($generated@@215 ($generated@@238 $generated@@339) ($generated@@238 $generated@@339)))))
 :weight 3
 :pattern ( ($generated@@212 $generated@@338 ($generated@@238 $generated@@339)))
))))
(assert  (=> (<= 1 $generated@@211) (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@340) $generated@@64) (= (type $generated@@341) $generated@@145)) (or ($generated@@213 $generated@@340 $generated@@341) (and (not (= 1 $generated@@211)) ($generated@@214 $generated@@341 $generated@@340)))) ($generated@@132 ($generated@@212 $generated@@340 $generated@@341) ($generated@@135 $generated@@340 $generated@@340)))
 :pattern ( ($generated@@212 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@343) $generated@@64)) (= (type $generated@@344) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@342 ($generated@@228 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@145) ($generated@@0 ($generated@@81 $generated@@342 $generated@@345))) ($generated@@243 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@81 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@74 $generated@@342 ($generated@@228 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@346) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@347) $generated@@64)) (= (type $generated@@348) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@346 ($generated@@233 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@145) ($generated@@0 ($generated@@81 $generated@@346 $generated@@349))) ($generated@@243 $generated@@349 $generated@@347 $generated@@348))
 :pattern ( ($generated@@81 $generated@@346 $generated@@349))
))))
 :pattern ( ($generated@@74 $generated@@346 ($generated@@233 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
(= ($generated ($generated@@81 ($generated@@269 $generated@@351) $generated@@350)) 0))
 :pattern ( (let (($generated@@351 (type $generated@@350)))
($generated@@81 ($generated@@269 $generated@@351) $generated@@350)))
)))
(assert  (and (and (forall (($generated@@355 T@U) ) (! (= (type ($generated@@352 $generated@@355)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@352 $generated@@355))
)) (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@353 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@353 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@278 (type $generated@@358))))
(let (($generated@@360 ($generated@@277 (type $generated@@358))))
(= (type ($generated@@354 $generated@@358)) ($generated@@76 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@354 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@362) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@81 ($generated@@274 $generated@@361) ($generated@@143 ($generated@@353 $generated@@136 $generated@@362)))) (= ($generated@@81 ($generated@@354 $generated@@361) ($generated@@143 ($generated@@353 $generated@@136 $generated@@362))) ($generated@@144 ($generated@@353 $generated@@136 $generated@@362))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@361) $generated@@362))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@296 (type $generated@@366))))
(let (($generated@@368 ($generated@@295 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@76 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@370) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@369) ($generated@@143 ($generated@@353 $generated@@136 $generated@@370)))) (= ($generated@@81 ($generated@@364 $generated@@369) ($generated@@143 ($generated@@353 $generated@@136 $generated@@370))) ($generated@@144 ($generated@@353 $generated@@136 $generated@@370))))))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(let (($generated@@374 ($generated@@277 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@276 $generated@@374 $generated@@373)) (= ($generated@@0 ($generated@@81 ($generated@@317 $generated@@371) $generated@@372)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) (and ($generated@@0 ($generated@@81 ($generated@@274 $generated@@371) $generated@@375)) (= $generated@@372 ($generated@@81 ($generated@@354 $generated@@371) $generated@@375))))
 :pattern ( ($generated@@81 ($generated@@274 $generated@@371) $generated@@375))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@371) $generated@@375))
))))))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@295 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@294 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@81 ($generated@@292 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@81 ($generated@@364 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@376) $generated@@380))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@64)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@274 $generated@@384) $generated@@388))) (and ($generated@@243 ($generated@@81 ($generated@@354 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@243 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@274 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@74 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@64)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@392) $generated@@396))) (and ($generated@@243 ($generated@@81 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@243 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@T) ) (! (= (type ($generated@@397 $generated@@398)) ($generated@@76 $generated@@398 $generated@@4))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@296 (type $generated@@399))))
(let (($generated@@401 ($generated@@295 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@294 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@293 $generated@@401 $generated@@400)) (= ($generated@@292 $generated@@399) ($generated@@397 $generated@@401))))))
 :pattern ( ($generated@@292 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@296 (type $generated@@402))))
(let (($generated@@404 ($generated@@295 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@294 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@293 $generated@@404 $generated@@403)) (= ($generated@@328 $generated@@402) ($generated@@397 $generated@@403))))))
 :pattern ( ($generated@@328 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@296 (type $generated@@405))))
(let (($generated@@407 ($generated@@295 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@294 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@293 $generated@@407 $generated@@406)) (= ($generated@@363 $generated@@405) ($generated@@397 $generated@@145))))))
 :pattern ( ($generated@@363 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@278 (type $generated@@408))))
(let (($generated@@410 ($generated@@277 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@276 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@275 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (and (and (= (type $generated@@411) $generated@@145) (= (type $generated@@412) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@408) ($generated@@263 ($generated@@215 $generated@@411 $generated@@412)))))
 :no-pattern (type $generated@@411)
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@352 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@296 (type $generated@@413))))
(let (($generated@@415 ($generated@@295 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@294 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@293 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (and (and (= (type $generated@@416) $generated@@145) (= (type $generated@@417) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@363 $generated@@413) ($generated@@263 ($generated@@215 $generated@@416 $generated@@417)))))
 :no-pattern (type $generated@@416)
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@363 $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@214 $generated@@418 $generated@@46)) (and (= ($generated@@263 ($generated@@353 $generated@@2 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@353 $generated@@2 $generated@@418) $generated@@46)))
 :pattern ( ($generated@@214 $generated@@418 $generated@@46))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@214 $generated@@419 $generated@@47)) (and (= ($generated@@263 ($generated@@353 $generated@@3 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@353 $generated@@3 $generated@@419) $generated@@47)))
 :pattern ( ($generated@@214 $generated@@419 $generated@@47))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@214 $generated@@420 $generated@@44)) (and (= ($generated@@263 ($generated@@353 $generated@@4 $generated@@420)) $generated@@420) ($generated@@132 ($generated@@353 $generated@@4 $generated@@420) $generated@@44)))
 :pattern ( ($generated@@214 $generated@@420 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@421) 20))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@145) ($generated@@214 $generated@@422 $generated@@45)) (and (= ($generated@@263 ($generated@@353 $generated@@421 $generated@@422)) $generated@@422) ($generated@@132 ($generated@@353 $generated@@421 $generated@@422) $generated@@45)))
 :pattern ( ($generated@@214 $generated@@422 $generated@@45))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@64) (= ($generated@@214 ($generated@@263 $generated@@423) $generated@@424) ($generated@@132 $generated@@423 $generated@@424)))
 :pattern ( ($generated@@214 ($generated@@263 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@79 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@76 $generated@@426 $generated@@2)) (<= 0 ($generated@@268 $generated@@425))))
 :pattern ( ($generated@@268 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@258 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@257 $generated@@428)) (<= 0 ($generated@@256 $generated@@427))))
 :pattern ( ($generated@@256 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (= (type ($generated@@429 $generated@@430)) $generated@@64)
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@64) (= (type $generated@@432) $generated@@64)) (= ($generated@@429 ($generated@@381 $generated@@431 $generated@@432)) $generated@@431))
 :pattern ( ($generated@@381 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@64)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@64) (= (type $generated@@436) $generated@@64)) (= ($generated@@433 ($generated@@381 $generated@@435 $generated@@436)) $generated@@436))
 :pattern ( ($generated@@381 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@72 ($generated@@381 $generated@@437 $generated@@438)) $generated@@58))
 :pattern ( ($generated@@381 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@389 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@389 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@389 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@389 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@72 ($generated@@389 $generated@@447 $generated@@448)) $generated@@59))
 :pattern ( ($generated@@389 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@145) (= (type $generated@@450) $generated@@145)) (= ($generated@@249 ($generated@@215 $generated@@449 $generated@@450)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@135 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@135 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@135 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@135 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) (= (type $generated@@460) $generated@@145)) (= ($generated@@143 ($generated@@215 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@215 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) (= (type $generated@@462) $generated@@145)) (= ($generated@@144 ($generated@@215 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@215 $generated@@461 $generated@@462))
)))
(assert  (and (forall (($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@465))
)) (forall (($generated@@466 T@U) ($generated@@467 Int) ) (! (let (($generated@@468 ($generated@@258 (type $generated@@466))))
(= (type ($generated@@464 $generated@@466 $generated@@467)) $generated@@468))
 :pattern ( ($generated@@464 $generated@@466 $generated@@467))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@469) ($generated@@257 $generated@@145)) (= (type $generated@@470) $generated@@64)) (= (type $generated@@471) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@469 ($generated@@463 $generated@@470) $generated@@471) (forall (($generated@@472 Int) ) (!  (=> (and (<= 0 $generated@@472) (< $generated@@472 ($generated@@256 $generated@@469))) ($generated@@243 ($generated@@464 $generated@@469 $generated@@472) $generated@@470 $generated@@471))
 :pattern ( ($generated@@464 $generated@@469 $generated@@472))
))))
 :pattern ( ($generated@@74 $generated@@469 ($generated@@463 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@474 Int) ) (! (= ($generated@@473 ($generated@@75 $generated@@474)) $generated@@474)
 :pattern ( ($generated@@75 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@475 ($generated@@228 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@228 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@72 ($generated@@228 $generated@@478)) $generated@@54))
 :pattern ( ($generated@@228 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@479 ($generated@@233 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@233 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@482)) $generated@@55))
 :pattern ( ($generated@@233 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@483 ($generated@@150 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@150 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@486)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@463 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@463 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@463 $generated@@490)) $generated@@57))
 :pattern ( ($generated@@463 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 (type $generated@@491)))
(= ($generated@@353 $generated@@492 ($generated@@263 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@263 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@494) $generated@@64)) (= (type $generated@@495) $generated@@64)) (= ($generated@@132 $generated@@493 ($generated@@381 $generated@@494 $generated@@495)) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@274 $generated@@493) $generated@@496))) (and ($generated@@214 ($generated@@81 ($generated@@354 $generated@@493) $generated@@496) $generated@@495) ($generated@@214 $generated@@496 $generated@@494)))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@493) $generated@@496))
 :pattern ( ($generated@@81 ($generated@@274 $generated@@493) $generated@@496))
))))
 :pattern ( ($generated@@132 $generated@@493 ($generated@@381 $generated@@494 $generated@@495)))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@498) $generated@@64)) (= (type $generated@@499) $generated@@64)) (= ($generated@@132 $generated@@497 ($generated@@389 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@292 $generated@@497) $generated@@500))) (and ($generated@@214 ($generated@@81 ($generated@@364 $generated@@497) $generated@@500) $generated@@499) ($generated@@214 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@497) $generated@@500))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@132 $generated@@497 ($generated@@389 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) (= (type $generated@@504) $generated@@145)) (< ($generated@@501 $generated@@503) ($generated@@502 ($generated@@215 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@215 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@145) (= (type $generated@@506) $generated@@145)) (< ($generated@@501 $generated@@506) ($generated@@502 ($generated@@215 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@215 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) $generated@@145) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) ($generated@@214 $generated@@507 ($generated@@381 $generated@@508 $generated@@509))) (and (= ($generated@@263 ($generated@@353 ($generated@@276 $generated@@145 $generated@@145) $generated@@507)) $generated@@507) ($generated@@132 ($generated@@353 ($generated@@276 $generated@@145 $generated@@145) $generated@@507) ($generated@@381 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@214 $generated@@507 ($generated@@381 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) ($generated@@214 $generated@@510 ($generated@@389 $generated@@511 $generated@@512))) (and (= ($generated@@263 ($generated@@353 ($generated@@294 $generated@@145 $generated@@145) $generated@@510)) $generated@@510) ($generated@@132 ($generated@@353 ($generated@@294 $generated@@145 $generated@@145) $generated@@510) ($generated@@389 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@214 $generated@@510 ($generated@@389 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@145)) ($generated@@214 $generated@@515 ($generated@@135 $generated@@513 $generated@@514))) (and (= ($generated@@263 ($generated@@353 $generated@@136 $generated@@515)) $generated@@515) ($generated@@132 ($generated@@353 $generated@@136 $generated@@515) ($generated@@135 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@214 $generated@@515 ($generated@@135 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
 (not ($generated@@0 ($generated@@81 ($generated@@397 $generated@@517) $generated@@516))))
 :pattern ( (let (($generated@@517 (type $generated@@516)))
($generated@@81 ($generated@@397 $generated@@517) $generated@@516)))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@69)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@520 $generated@@521)) $generated@@62) (= ($generated@@518 ($generated@@135 $generated@@520 $generated@@521)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@136) (= ($generated@@501 ($generated@@263 $generated@@522)) ($generated@@502 $generated@@522)))
 :pattern ( ($generated@@501 ($generated@@263 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) ($generated@@214 $generated@@523 ($generated@@75 0))) (and (= ($generated@@263 ($generated@@353 $generated@@2 $generated@@523)) $generated@@523) ($generated@@132 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@523) ($generated@@75 0))))
 :pattern ( ($generated@@214 $generated@@523 ($generated@@75 0)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) ($generated@@214 $generated@@524 ($generated@@228 $generated@@525))) (and (= ($generated@@263 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@524) ($generated@@228 $generated@@525))))
 :pattern ( ($generated@@214 $generated@@524 ($generated@@228 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@64)) ($generated@@214 $generated@@526 ($generated@@233 $generated@@527))) (and (= ($generated@@263 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@526)) $generated@@526) ($generated@@132 ($generated@@353 ($generated@@76 $generated@@145 $generated@@4) $generated@@526) ($generated@@233 $generated@@527))))
 :pattern ( ($generated@@214 $generated@@526 ($generated@@233 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) ($generated@@214 $generated@@528 ($generated@@150 $generated@@529))) (and (= ($generated@@263 ($generated@@353 ($generated@@76 $generated@@145 $generated@@2) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@353 ($generated@@76 $generated@@145 $generated@@2) $generated@@528) ($generated@@150 $generated@@529))))
 :pattern ( ($generated@@214 $generated@@528 ($generated@@150 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) ($generated@@214 $generated@@530 ($generated@@463 $generated@@531))) (and (= ($generated@@263 ($generated@@353 ($generated@@257 $generated@@145) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@353 ($generated@@257 $generated@@145) $generated@@530) ($generated@@463 $generated@@531))))
 :pattern ( ($generated@@214 $generated@@530 ($generated@@463 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@532 ($generated@@150 $generated@@533) $generated@@534) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@532 $generated@@535)))) ($generated@@243 $generated@@535 $generated@@533 $generated@@534))
 :pattern ( ($generated@@81 $generated@@532 $generated@@535))
))))
 :pattern ( ($generated@@74 $generated@@532 ($generated@@150 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@136) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@242 $generated@@538) (and ($generated@@134 $generated@@536) (exists (($generated@@539 T@U) ) (!  (and (= (type $generated@@539) $generated@@64) ($generated@@74 $generated@@536 ($generated@@135 $generated@@537 $generated@@539) $generated@@538))
 :pattern ( ($generated@@74 $generated@@536 ($generated@@135 $generated@@537 $generated@@539) $generated@@538))
))))) ($generated@@243 ($generated@@143 $generated@@536) $generated@@537 $generated@@538))
 :pattern ( ($generated@@243 ($generated@@143 $generated@@536) $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@136) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@242 $generated@@542) (and ($generated@@134 $generated@@540) (exists (($generated@@543 T@U) ) (!  (and (= (type $generated@@543) $generated@@64) ($generated@@74 $generated@@540 ($generated@@135 $generated@@543 $generated@@541) $generated@@542))
 :pattern ( ($generated@@74 $generated@@540 ($generated@@135 $generated@@543 $generated@@541) $generated@@542))
))))) ($generated@@243 ($generated@@144 $generated@@540) $generated@@541 $generated@@542))
 :pattern ( ($generated@@243 ($generated@@144 $generated@@540) $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@145)) (= ($generated@@215 ($generated@@238 $generated@@544) ($generated@@238 $generated@@545)) ($generated@@238 ($generated@@215 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@215 ($generated@@238 $generated@@544) ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= ($generated@@263 ($generated@@238 $generated@@546)) ($generated@@238 ($generated@@263 $generated@@546)))
 :pattern ( ($generated@@263 ($generated@@238 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@258 (type $generated@@547))))
 (=> (and (= (type $generated@@547) ($generated@@257 $generated@@548)) (= ($generated@@256 $generated@@547) 0)) (= $generated@@547 ($generated@@255 $generated@@548))))
 :pattern ( ($generated@@256 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@550)))
 (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@552 $generated@@2)) (= (type $generated@@551) $generated@@2)) (<= 0 ($generated $generated@@551))) (= ($generated@@268 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)) (+ (- ($generated@@268 $generated@@549) ($generated ($generated@@81 $generated@@549 $generated@@550))) ($generated $generated@@551)))))
 :pattern ( ($generated@@268 ($generated@@82 $generated@@549 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@2)) ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@46 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@3)) ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@47 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@4)) ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@44 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@421)) ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@45 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@145)) ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@48 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@257 $generated@@145)) (= (type $generated@@564) $generated@@64)) (= ($generated@@132 $generated@@563 ($generated@@463 $generated@@564)) (forall (($generated@@565 Int) ) (!  (=> (and (<= 0 $generated@@565) (< $generated@@565 ($generated@@256 $generated@@563))) ($generated@@214 ($generated@@464 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@464 $generated@@563 $generated@@565))
))))
 :pattern ( ($generated@@132 $generated@@563 ($generated@@463 $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 Int) ) (!  (=> (= (type $generated@@567) ($generated@@257 $generated@@145)) (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@256 $generated@@567))) (< ($generated@@502 ($generated@@353 $generated@@136 ($generated@@464 $generated@@567 $generated@@568))) ($generated@@566 $generated@@567))))
 :pattern ( ($generated@@502 ($generated@@353 $generated@@136 ($generated@@464 $generated@@567 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) ($generated@@276 $generated@@145 $generated@@145)) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@64)) ($generated@@132 $generated@@569 ($generated@@381 $generated@@570 $generated@@571))) (and (and ($generated@@132 ($generated@@274 $generated@@569) ($generated@@228 $generated@@570)) ($generated@@132 ($generated@@317 $generated@@569) ($generated@@228 $generated@@571))) ($generated@@132 ($generated@@352 $generated@@569) ($generated@@228 ($generated@@135 $generated@@570 $generated@@571)))))
 :pattern ( ($generated@@132 $generated@@569 ($generated@@381 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@294 $generated@@145 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@132 $generated@@572 ($generated@@389 $generated@@573 $generated@@574))) (and (and ($generated@@132 ($generated@@292 $generated@@572) ($generated@@233 $generated@@573)) ($generated@@132 ($generated@@328 $generated@@572) ($generated@@233 $generated@@574))) ($generated@@132 ($generated@@363 $generated@@572) ($generated@@233 ($generated@@135 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@389 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@2) ($generated@@132 $generated@@575 $generated@@46))
 :pattern ( ($generated@@132 $generated@@575 $generated@@46))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@3) ($generated@@132 $generated@@576 $generated@@47))
 :pattern ( ($generated@@132 $generated@@576 $generated@@47))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@4) ($generated@@132 $generated@@577 $generated@@44))
 :pattern ( ($generated@@132 $generated@@577 $generated@@44))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@421) ($generated@@132 $generated@@578 $generated@@45))
 :pattern ( ($generated@@132 $generated@@578 $generated@@45))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@145) ($generated@@132 $generated@@579 $generated@@48))
 :pattern ( ($generated@@132 $generated@@579 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 (T@U) Bool)
(declare-fun $generated@@589 () Bool)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () Bool)
(declare-fun $generated@@592 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@580) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@581) $generated@@77)) (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@583) $generated@@145)) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) $generated@@145)) (= (type $generated@@586) $generated@@145)) (= (type $generated@@587) $generated@@136)) (= (type $generated@@590) $generated@@145)) (= (type $generated@@592) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@593  (=> (= $generated@@580 ($generated@@156 $generated@@581 $generated@@582 $generated@@60 false)) (=> (and (and ($generated@@214 $generated@@583 $generated@@584) ($generated@@243 $generated@@583 $generated@@584 $generated@@582)) (and ($generated@@214 $generated@@585 $generated@@584) ($generated@@243 $generated@@585 $generated@@584 $generated@@582))) (=> (and (and (and ($generated@@243 $generated@@586 $generated@@584 $generated@@582) ($generated@@213 $generated@@584 $generated@@586)) (and ($generated@@134 ($generated@@212 $generated@@584 $generated@@586)) (= $generated@@587 ($generated@@212 $generated@@584 $generated@@586)))) (and (and ($generated@@213 $generated@@584 $generated@@586) ($generated@@132 $generated@@587 ($generated@@135 $generated@@584 $generated@@584))) (and ($generated@@134 $generated@@587) (= ($generated@@215 $generated@@583 $generated@@585) $generated@@587)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true)))))))
(let (($generated@@594  (=> (and ($generated@@242 $generated@@582) ($generated@@588 $generated@@582)) (=> (and (and (and ($generated@@214 $generated@@586 $generated@@584) ($generated@@243 $generated@@586 $generated@@584 $generated@@582)) (and (=> $generated@@589 (and ($generated@@214 $generated@@590 $generated@@584) ($generated@@243 $generated@@590 $generated@@584 $generated@@582))) true)) (and (and (=> $generated@@591 (and ($generated@@214 $generated@@592 $generated@@584) ($generated@@243 $generated@@592 $generated@@584 $generated@@582))) true) (and (= 2 $generated@@211) (= (ControlFlow 0 4) 2)))) $generated@@593))))
$generated@@594)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U) Bool)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@164 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 11) (= ($generated@@1 $generated@@164) 12)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@165) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@166) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@167) $generated@@163)) (= (type $generated@@168) $generated@@164)) ($generated@@44 $generated@@165 $generated@@166)) ($generated@@162 $generated@@167 $generated@@168 $generated@@165)) ($generated@@162 $generated@@167 $generated@@168 $generated@@166))
 :pattern ( ($generated@@44 $generated@@165 $generated@@166) ($generated@@162 $generated@@167 $generated@@168 $generated@@165))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@171) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@169 $generated@@171))) (and ($generated@@44 $generated@@169 $generated@@170) ($generated@@44 $generated@@170 $generated@@171))) ($generated@@44 $generated@@169 $generated@@171))
 :pattern ( ($generated@@44 $generated@@169 $generated@@170) ($generated@@44 $generated@@170 $generated@@171))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@172) ($generated@@108 $generated@@46 $generated@@4)) (= (type $generated@@173) $generated@@46)) (= (type $generated@@174) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@176) $generated@@163)) (= (type $generated@@177) $generated@@164)) (= (type $generated@@178) $generated@@163)) (= (type $generated@@180) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@182) $generated@@163)) (= (type $generated@@183) $generated@@164)) (= (type $generated@@184) $generated@@163)) (= (type $generated@@185) $generated@@163)) (= (type $generated@@187) $generated@@163)) (= (type $generated@@189) $generated@@163)) (= (type $generated@@191) $generated@@163)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@193  (=> (= $generated@@172 ($generated@@107 $generated@@173 $generated@@174 $generated@@50 false)) (=> (and (and (and (and ($generated@@175 $generated@@176 $generated@@177) ($generated@@162 $generated@@176 $generated@@177 $generated@@174)) (and ($generated@@175 $generated@@178 $generated@@177) ($generated@@162 $generated@@178 $generated@@177 $generated@@174))) (and (and ($generated@@179 $generated@@180) ($generated@@181 $generated@@180)) (and ($generated@@175 $generated@@182 $generated@@183) ($generated@@162 $generated@@182 $generated@@183 $generated@@180)))) (and (and (and ($generated@@175 $generated@@184 $generated@@183) ($generated@@162 $generated@@184 $generated@@183 $generated@@180)) (forall (($generated@@194 T@U) ) (!  (=> (= (type $generated@@194) $generated@@46) (=> (and (not (= $generated@@194 $generated@@173)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@174 $generated@@194) $generated@@50))) (= ($generated@@49 $generated@@180 $generated@@194) ($generated@@49 $generated@@174 $generated@@194))))
 :pattern ( ($generated@@49 $generated@@180 $generated@@194))
))) (and ($generated@@44 $generated@@174 $generated@@180) (= (ControlFlow 0 2) (- 0 1))))) true))))
(let (($generated@@195  (=> (and (and ($generated@@179 $generated@@174) ($generated@@181 $generated@@174)) (and ($generated@@175 $generated@@185 $generated@@183) ($generated@@162 $generated@@185 $generated@@183 $generated@@174))) (=> (and (and (and (=> $generated@@186 (and ($generated@@175 $generated@@187 $generated@@183) ($generated@@162 $generated@@187 $generated@@183 $generated@@174))) true) (and (=> $generated@@188 (and ($generated@@175 $generated@@189 $generated@@183) ($generated@@162 $generated@@189 $generated@@183 $generated@@174))) true)) (and (and (=> $generated@@190 (and ($generated@@175 $generated@@191 $generated@@183) ($generated@@162 $generated@@191 $generated@@183 $generated@@174))) true) (and (= 1 $generated@@192) (= (ControlFlow 0 3) 2)))) $generated@@193))))
$generated@@195)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
