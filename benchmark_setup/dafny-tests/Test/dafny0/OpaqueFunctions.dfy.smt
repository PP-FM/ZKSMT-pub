(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 () Int)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) Int)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 () T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@T T@U T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@232 (T@T) T@U)
(declare-fun $generated@@233 (T@U) Int)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@T T@T) T@U)
(declare-fun $generated@@263 (T@T T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U T@U) Bool)
(declare-fun $generated@@306 (T@T T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@373 (T@U T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Bool)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@538 (T@T) T@U)
(declare-fun $generated@@544 (T@U T@U T@U) T@U)
(declare-fun $generated@@545 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@546 (T@T T@T) T@T)
(declare-fun $generated@@547 (T@T) T@T)
(declare-fun $generated@@548 (T@T) T@T)
(declare-fun $generated@@549 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@614 (T@U T@U) Bool)
(declare-fun $generated@@654 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@104 $generated@@105)) 13)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@100 ($generated@@87 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@87 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@101 ($generated@@87 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@87 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@101 (type $generated@@110))))
(= (type ($generated@@98 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 (type $generated@@115)))
(let (($generated@@117 (type $generated@@114)))
(= (type ($generated@@102 $generated@@113 $generated@@114 $generated@@115)) ($generated@@87 $generated@@117 $generated@@116))))
 :pattern ( ($generated@@102 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@101 (type $generated@@118))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@98 ($generated@@102 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@98 ($generated@@102 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@98 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@98 ($generated@@102 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@98 $generated@@127 $generated@@129)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@73 (type $generated@@131))))
(= (type ($generated@@97 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@97 $generated@@130 $generated@@131))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= (type ($generated@@103 $generated@@133 $generated@@134 $generated@@135)) $generated@@89)
 :pattern ( ($generated@@103 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@138) $generated@@139) (= ($generated@@97 ($generated@@103 $generated@@136 $generated@@137 $generated@@138) $generated@@137) $generated@@138)))
 :weight 0
))) (and (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@97 ($generated@@103 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@97 $generated@@141 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or true (= ($generated@@97 ($generated@@103 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@97 $generated@@145 $generated@@147)))
 :weight 0
)))) (= (type $generated@@92) $generated@@88)) (= (type $generated@@94) $generated@@70)) (= (type $generated@@99) ($generated@@72 $generated@@2))))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@149) $generated@@88)) (or ($generated@@90 $generated@@148 $generated@@149) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@148) (and (not (= $generated@@149 $generated@@92)) (and ($generated@@93 $generated@@149 $generated@@94) ($generated@@95 $generated@@149 $generated@@94 $generated@@148))))))) (and (=> ($generated@@86 $generated@@148 $generated@@149) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)))) (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@148 $generated@@149))))
 :pattern ( ($generated@@86 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@88) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (= (type $generated@@158) $generated@@70))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@88) (= (type $generated@@160) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@159 $generated@@158 $generated@@160)  (or (= $generated@@159 $generated@@92) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@70)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@164) $generated@@88)) (and ($generated@@91 $generated@@163) (and (not (= $generated@@164 $generated@@92)) (= ($generated@@161 $generated@@164) $generated@@158)))) ($generated@@93 ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99) $generated@@46))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@93 $generated@@165 ($generated@@150 0)))
 :pattern ( ($generated@@93 $generated@@165 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@70)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@70) (= (type $generated@@172) $generated@@70)) (= (type $generated@@173) $generated@@168)) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 17) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@70)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@70)) ($generated@@93 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@93 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@88) (= ($generated@@93 $generated@@187 $generated@@158)  (or (= $generated@@187 $generated@@92) (= ($generated@@161 $generated@@187) $generated@@158))))
 :pattern ( ($generated@@93 $generated@@187 $generated@@158))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (= (type $generated@@188) $generated@@88) (= (type $generated@@189) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@188 $generated@@94 $generated@@189) ($generated@@95 $generated@@188 $generated@@158 $generated@@189)))
 :pattern ( ($generated@@95 $generated@@188 $generated@@94 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@192 $generated@@193)) $generated@@168)
 :pattern ( ($generated@@190 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (and (= (type $generated@@194) $generated@@70) (= (type $generated@@195) $generated@@70)) (= (type $generated@@196) $generated@@177)) (= (type $generated@@197) $generated@@177)) (= ($generated@@93 ($generated@@190 $generated@@196 $generated@@197) ($generated@@167 $generated@@194 $generated@@195))  (and ($generated@@191 $generated@@196 $generated@@194) ($generated@@191 $generated@@197 $generated@@195))))
 :pattern ( ($generated@@93 ($generated@@190 $generated@@196 $generated@@197) ($generated@@167 $generated@@194 $generated@@195)))
)))
(assert (= ($generated@@80 $generated@@99) 0))
(assert (forall (($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= (type ($generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@72 $generated@@199))
 :pattern ( ($generated@@198 $generated@@199 $generated@@200 $generated@@201))
)))
(assert (= ($generated@@198 $generated@@2 $generated@@64 $generated@@69) $generated@@99))
(assert  (not ($generated@@202 $generated@@99)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@168) (= (type $generated@@204) $generated@@168)) (= ($generated@@174 $generated@@203 $generated@@204) (= $generated@@203 $generated@@204)))
 :pattern ( ($generated@@174 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (= (type ($generated@@205 $generated@@206)) $generated@@70)
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@208) $generated@@70)) (= ($generated@@93 $generated@@207 ($generated@@205 $generated@@208)) (forall (($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@209) $generated@@177) ($generated@@0 ($generated@@98 $generated@@207 $generated@@209))) ($generated@@191 $generated@@209 $generated@@208))
 :pattern ( ($generated@@98 $generated@@207 $generated@@209))
))))
 :pattern ( ($generated@@93 $generated@@207 ($generated@@205 $generated@@208)))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@70)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@213) $generated@@70)) (= ($generated@@93 $generated@@212 ($generated@@210 $generated@@213)) (forall (($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@177) ($generated@@0 ($generated@@98 $generated@@212 $generated@@214))) ($generated@@191 $generated@@214 $generated@@213))
 :pattern ( ($generated@@98 $generated@@212 $generated@@214))
))))
 :pattern ( ($generated@@93 $generated@@212 ($generated@@210 $generated@@213)))
)))
(assert (forall (($generated@@215 Int) ) (! (= ($generated@@96 $generated@@215) $generated@@215)
 :pattern ( ($generated@@96 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (let (($generated@@218 (type $generated@@217)))
(= (type ($generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ) (! (= ($generated@@216 $generated@@219) $generated@@219)
 :pattern ( ($generated@@216 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@221) $generated@@70) (= (type $generated@@222) $generated@@70)) (= (type $generated@@223) $generated@@177)) (= (type $generated@@224) $generated@@177)) (= (type $generated@@225) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@91 $generated@@225)) (= ($generated@@95 ($generated@@190 $generated@@223 $generated@@224) ($generated@@167 $generated@@221 $generated@@222) $generated@@225)  (and ($generated@@220 $generated@@223 $generated@@221 $generated@@225) ($generated@@220 $generated@@224 $generated@@222 $generated@@225))))
 :pattern ( ($generated@@95 ($generated@@190 $generated@@223 $generated@@224) ($generated@@167 $generated@@221 $generated@@222) $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@75)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@168) (= ($generated@@166 $generated@@228) (= ($generated@@226 $generated@@228) $generated@@62)))
 :pattern ( ($generated@@166 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@168) ($generated@@166 $generated@@229)) (exists (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (and (and (= (type $generated@@230) $generated@@177) (= (type $generated@@231) $generated@@177)) (= $generated@@229 ($generated@@190 $generated@@230 $generated@@231)))
 :no-pattern (type $generated@@230)
 :no-pattern (type $generated@@231)
 :no-pattern ($generated $generated@@230)
 :no-pattern ($generated@@0 $generated@@230)
 :no-pattern ($generated $generated@@231)
 :no-pattern ($generated@@0 $generated@@231)
)))
 :pattern ( ($generated@@166 $generated@@229))
)))
(assert  (and (and (forall (($generated@@236 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@236)) 18)) (forall (($generated@@237 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@234 $generated@@237))
))) (forall (($generated@@238 T@T) ) (! (= (type ($generated@@232 $generated@@238)) ($generated@@234 $generated@@238))
 :pattern ( ($generated@@232 $generated@@238))
))))
(assert (forall (($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@232 $generated@@239)) 0)
 :pattern ( ($generated@@232 $generated@@239))
)))
(assert ($generated@@202 $generated@@60))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@177)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244) ($generated@@95 $generated@@242 $generated@@243 $generated@@244)))
 :pattern ( ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@246) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@247) $generated@@177)) (= (type $generated@@248) $generated@@70)) ($generated@@154 $generated@@245 $generated@@246)) ($generated@@220 $generated@@247 $generated@@248 $generated@@245)) ($generated@@220 $generated@@247 $generated@@248 $generated@@246))
 :pattern ( ($generated@@154 $generated@@245 $generated@@246) ($generated@@220 $generated@@247 $generated@@248 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@249) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@250) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@252) $generated@@70)) ($generated@@154 $generated@@249 $generated@@250)) ($generated@@95 $generated@@251 $generated@@252 $generated@@249)) ($generated@@95 $generated@@251 $generated@@252 $generated@@250))
 :pattern ( ($generated@@154 $generated@@249 $generated@@250) ($generated@@95 $generated@@251 $generated@@252 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@254) $generated@@88)) (=> (and (and ($generated@@91 $generated@@253) (and (not (= $generated@@254 $generated@@92)) (= ($generated@@161 $generated@@254) $generated@@158))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@253 $generated@@254) $generated@@60))) ($generated@@95 ($generated@@97 ($generated@@98 $generated@@253 $generated@@254) $generated@@99) $generated@@46 $generated@@253)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@253 $generated@@254) $generated@@99))
)))
(assert (forall (($generated@@257 T@T) ) (! (= (type ($generated@@256 $generated@@257)) ($generated@@87 $generated@@257 $generated@@2))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@100 (type $generated@@258))))
 (=> (= (type $generated@@258) ($generated@@87 $generated@@259 $generated@@2)) (and (= (= ($generated@@255 $generated@@258) 0) (= $generated@@258 ($generated@@256 $generated@@259))) (=> (not (= ($generated@@255 $generated@@258) 0)) (exists (($generated@@260 T@U) ) (!  (and (= (type $generated@@260) $generated@@259) (< 0 ($generated ($generated@@98 $generated@@258 $generated@@260))))
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
))))))
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert  (and (and (and (and (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@266 $generated@@267)) 19)) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@268 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@263 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@263 $generated@@270 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@263 $generated@@270 $generated@@271))
))) (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@264 (type $generated@@272))))
(= (type ($generated@@261 $generated@@272)) ($generated@@87 $generated@@273 $generated@@4)))
 :pattern ( ($generated@@261 $generated@@272))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= (type ($generated@@262 $generated@@274 $generated@@275)) ($generated@@263 $generated@@274 $generated@@275))
 :pattern ( ($generated@@262 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@T) ) (! (let (($generated@@278 (type $generated@@276)))
 (not ($generated@@0 ($generated@@98 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276))))
 :pattern ( (let (($generated@@278 (type $generated@@276)))
($generated@@98 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276)))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 20)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@87 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@98 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@98 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@297 $generated@@298 $generated@@299)) (and ($generated@@154 $generated@@298 $generated@@299) (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@73 (type $generated@@301))))
 (=> (and (and (= (type $generated@@300) $generated@@88) (= (type $generated@@301) ($generated@@72 $generated@@302))) (not ($generated@@202 $generated@@301))) (= ($generated@@97 ($generated@@98 $generated@@298 $generated@@300) $generated@@301) ($generated@@97 ($generated@@98 $generated@@299 $generated@@300) $generated@@301))))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@299 $generated@@300) $generated@@301))
))))
 :pattern ( ($generated@@297 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@100 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@87 $generated@@304 $generated@@2)) (= ($generated@@183 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@98 $generated@@303 $generated@@305))) (<= ($generated ($generated@@98 $generated@@303 $generated@@305)) ($generated@@255 $generated@@303))))
 :pattern ( ($generated@@98 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@183 $generated@@303))
)))
(assert (forall (($generated@@307 T@T) ($generated@@308 T@U) ) (! (= (type ($generated@@306 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@177) ($generated@@191 $generated@@309 $generated@@158)) (and (= ($generated@@240 ($generated@@306 $generated@@88 $generated@@309)) $generated@@309) ($generated@@93 ($generated@@306 $generated@@88 $generated@@309) $generated@@158)))
 :pattern ( ($generated@@191 $generated@@309 $generated@@158))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@177) ($generated@@191 $generated@@310 $generated@@94)) (and (= ($generated@@240 ($generated@@306 $generated@@88 $generated@@310)) $generated@@310) ($generated@@93 ($generated@@306 $generated@@88 $generated@@310) $generated@@94)))
 :pattern ( ($generated@@191 $generated@@310 $generated@@94))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@88) (= ($generated@@93 $generated@@311 $generated@@94)  (and ($generated@@93 $generated@@311 $generated@@158) (not (= $generated@@311 $generated@@92)))))
 :pattern ( ($generated@@93 $generated@@311 $generated@@94))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@265 (type $generated@@312))))
(let (($generated@@314 ($generated@@264 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@263 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@262 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) ($generated@@0 ($generated@@98 ($generated@@261 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@261 $generated@@312))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@265 (type $generated@@317))))
(= (type ($generated@@316 $generated@@317)) ($generated@@87 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@265 (type $generated@@319))))
(let (($generated@@321 ($generated@@264 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@263 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@262 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@320) ($generated@@0 ($generated@@98 ($generated@@316 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@283 (type $generated@@323))))
(let (($generated@@325 ($generated@@282 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@281 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@280 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@98 ($generated@@279 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@279 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@283 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@87 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@283 (type $generated@@330))))
(let (($generated@@332 ($generated@@282 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@281 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@280 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@98 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@335) $generated@@70)) (= ($generated@@93 $generated@@334 ($generated@@182 $generated@@335)) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@334 $generated@@336)))) ($generated@@191 $generated@@336 $generated@@335))
 :pattern ( ($generated@@98 $generated@@334 $generated@@336))
))))
 :pattern ( ($generated@@93 $generated@@334 ($generated@@182 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@338) $generated@@70)) (= (type $generated@@339) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@337 ($generated@@205 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@177) ($generated@@0 ($generated@@98 $generated@@337 $generated@@340))) ($generated@@220 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@98 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@95 $generated@@337 ($generated@@205 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@342) $generated@@70)) (= (type $generated@@343) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@341 ($generated@@210 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@177) ($generated@@0 ($generated@@98 $generated@@341 $generated@@344))) ($generated@@220 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@98 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@95 $generated@@341 ($generated@@210 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 (type $generated@@345)))
(= ($generated ($generated@@98 ($generated@@256 $generated@@346) $generated@@345)) 0))
 :pattern ( (let (($generated@@346 (type $generated@@345)))
($generated@@98 ($generated@@256 $generated@@346) $generated@@345)))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@265 (type $generated@@350))))
(let (($generated@@352 ($generated@@264 (type $generated@@350))))
(= (type ($generated@@348 $generated@@350)) ($generated@@87 $generated@@352 $generated@@351))))
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@263 $generated@@177 $generated@@177)) (= (type $generated@@354) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@347 $generated@@353) $generated@@354))  (and ($generated@@0 ($generated@@98 ($generated@@261 $generated@@353) ($generated@@175 ($generated@@306 $generated@@168 $generated@@354)))) (= ($generated@@98 ($generated@@348 $generated@@353) ($generated@@175 ($generated@@306 $generated@@168 $generated@@354))) ($generated@@176 ($generated@@306 $generated@@168 $generated@@354))))))
 :pattern ( ($generated@@98 ($generated@@347 $generated@@353) $generated@@354))
)))
(assert  (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@357)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@355 $generated@@357))
)) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@283 (type $generated@@358))))
(let (($generated@@360 ($generated@@282 (type $generated@@358))))
(= (type ($generated@@356 $generated@@358)) ($generated@@87 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@356 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@281 $generated@@177 $generated@@177)) (= (type $generated@@362) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@355 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@98 ($generated@@279 $generated@@361) ($generated@@175 ($generated@@306 $generated@@168 $generated@@362)))) (= ($generated@@98 ($generated@@356 $generated@@361) ($generated@@175 ($generated@@306 $generated@@168 $generated@@362))) ($generated@@176 ($generated@@306 $generated@@168 $generated@@362))))))
 :pattern ( ($generated@@98 ($generated@@355 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@264 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@263 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@98 ($generated@@316 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@98 ($generated@@261 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@98 ($generated@@348 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@98 ($generated@@261 $generated@@363) $generated@@367))
 :pattern ( ($generated@@98 ($generated@@348 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@98 ($generated@@316 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@282 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@281 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@98 ($generated@@327 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@98 ($generated@@279 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@98 ($generated@@356 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@98 ($generated@@279 $generated@@368) $generated@@372))
 :pattern ( ($generated@@98 ($generated@@356 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@98 ($generated@@327 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@70)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (and (= (type $generated@@376) ($generated@@263 $generated@@177 $generated@@177)) (= (type $generated@@377) $generated@@70)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@261 $generated@@376) $generated@@380))) (and ($generated@@220 ($generated@@98 ($generated@@348 $generated@@376) $generated@@380) $generated@@378 $generated@@379) ($generated@@220 $generated@@380 $generated@@377 $generated@@379)))
 :pattern ( ($generated@@98 ($generated@@348 $generated@@376) $generated@@380))
 :pattern ( ($generated@@98 ($generated@@261 $generated@@376) $generated@@380))
))))
 :pattern ( ($generated@@95 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@70)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@281 $generated@@177 $generated@@177)) (= (type $generated@@385) $generated@@70)) (= (type $generated@@386) $generated@@70)) (= (type $generated@@387) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@279 $generated@@384) $generated@@388))) (and ($generated@@220 ($generated@@98 ($generated@@356 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@220 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@98 ($generated@@356 $generated@@384) $generated@@388))
 :pattern ( ($generated@@98 ($generated@@279 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@95 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= (type ($generated@@389 $generated@@390 $generated@@391)) ($generated@@87 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@394)))
 (=> (and (and (= (type $generated@@393) ($generated@@87 $generated@@396 $generated@@4)) (= (type $generated@@395) $generated@@396)) ($generated@@0 ($generated@@98 $generated@@393 $generated@@395))) ($generated@@0 ($generated@@98 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))))
 :pattern ( ($generated@@389 $generated@@393 $generated@@394) ($generated@@98 $generated@@393 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@398)))
 (=> (and (= (type $generated@@397) ($generated@@87 $generated@@400 $generated@@4)) (= (type $generated@@399) $generated@@400)) (= ($generated@@0 ($generated@@98 ($generated@@389 $generated@@397 $generated@@398) $generated@@399))  (or (= $generated@@399 $generated@@398) ($generated@@0 ($generated@@98 $generated@@397 $generated@@399))))))
 :pattern ( ($generated@@98 ($generated@@389 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@401) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@402) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@403) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@401 $generated@@403))) (and ($generated@@154 $generated@@401 $generated@@402) ($generated@@154 $generated@@402 $generated@@403))) ($generated@@154 $generated@@401 $generated@@403))
 :pattern ( ($generated@@154 $generated@@401 $generated@@402) ($generated@@154 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@87 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@283 (type $generated@@406))))
(let (($generated@@408 ($generated@@282 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@281 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@280 $generated@@408 $generated@@407)) (= ($generated@@279 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@279 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@283 (type $generated@@409))))
(let (($generated@@411 ($generated@@282 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@281 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@280 $generated@@411 $generated@@410)) (= ($generated@@327 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@327 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@283 (type $generated@@412))))
(let (($generated@@414 ($generated@@282 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@281 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@280 $generated@@414 $generated@@413)) (= ($generated@@355 $generated@@412) ($generated@@404 $generated@@177))))))
 :pattern ( ($generated@@355 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@265 (type $generated@@415))))
(let (($generated@@417 ($generated@@264 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@263 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@262 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@177) (= (type $generated@@419) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@347 $generated@@415) ($generated@@240 ($generated@@190 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@347 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@283 (type $generated@@420))))
(let (($generated@@422 ($generated@@282 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@281 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@280 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@177) (= (type $generated@@424) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@355 $generated@@420) ($generated@@240 ($generated@@190 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@355 $generated@@420))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@76)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@T) ) (!  (=> (and (= (type $generated@@427) $generated@@76) (= (type $generated@@428) $generated@@74)) (and (= ($generated@@425 ($generated@@198 $generated@@429 $generated@@427 $generated@@428)) $generated@@427) (= ($generated@@83 ($generated@@198 $generated@@429 $generated@@427 $generated@@428)) $generated@@428)))
 :pattern ( ($generated@@198 $generated@@429 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@177) ($generated@@191 $generated@@430 $generated@@46)) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@430)) $generated@@430) ($generated@@93 ($generated@@306 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@191 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@177) ($generated@@191 $generated@@431 $generated@@47)) (and (= ($generated@@240 ($generated@@306 $generated@@3 $generated@@431)) $generated@@431) ($generated@@93 ($generated@@306 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@191 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@177) ($generated@@191 $generated@@432 $generated@@44)) (and (= ($generated@@240 ($generated@@306 $generated@@4 $generated@@432)) $generated@@432) ($generated@@93 ($generated@@306 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@191 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 21))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@177) ($generated@@191 $generated@@434 $generated@@45)) (and (= ($generated@@240 ($generated@@306 $generated@@433 $generated@@434)) $generated@@434) ($generated@@93 ($generated@@306 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@191 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@70) (= ($generated@@191 ($generated@@240 $generated@@435) $generated@@436) ($generated@@93 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@191 ($generated@@240 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@100 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@87 $generated@@438 $generated@@2)) (<= 0 ($generated@@255 $generated@@437))))
 :pattern ( ($generated@@255 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@235 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@234 $generated@@440)) (<= 0 ($generated@@233 $generated@@439))))
 :pattern ( ($generated@@233 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@70)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@70) (= (type $generated@@444) $generated@@70)) (= ($generated@@441 ($generated@@373 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@373 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@70)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@70) (= (type $generated@@448) $generated@@70)) (= ($generated@@445 ($generated@@373 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@373 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@70) (= (type $generated@@450) $generated@@70)) (= ($generated@@81 ($generated@@373 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@373 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@70)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@70) (= (type $generated@@454) $generated@@70)) (= ($generated@@451 ($generated@@381 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@381 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@70)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@70) (= (type $generated@@458) $generated@@70)) (= ($generated@@455 ($generated@@381 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@381 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@70) (= (type $generated@@460) $generated@@70)) (= ($generated@@81 ($generated@@381 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@381 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@177) (= (type $generated@@462) $generated@@177)) (= ($generated@@226 ($generated@@190 $generated@@461 $generated@@462)) $generated@@62))
 :pattern ( ($generated@@190 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@463 ($generated@@167 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@167 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@70)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@70) (= (type $generated@@470) $generated@@70)) (= ($generated@@467 ($generated@@167 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@167 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@177) (= (type $generated@@472) $generated@@177)) (= ($generated@@175 ($generated@@190 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@190 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@177) (= (type $generated@@474) $generated@@177)) (= ($generated@@176 ($generated@@190 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@190 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@235 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@234 $generated@@177)) (= (type $generated@@482) $generated@@70)) (= (type $generated@@483) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@233 $generated@@481))) ($generated@@220 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@95 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
 (=> (= (type $generated@@485) ($generated@@87 $generated@@487 $generated@@4)) ($generated@@0 ($generated@@98 ($generated@@389 $generated@@485 $generated@@486) $generated@@486))))
 :pattern ( ($generated@@389 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@150 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@150 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@70) (= ($generated@@490 ($generated@@205 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@205 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@70) (= ($generated@@81 ($generated@@205 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@205 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@70) (= ($generated@@494 ($generated@@210 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@210 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@70) (= ($generated@@81 ($generated@@210 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@210 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@70) (= ($generated@@498 ($generated@@182 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@182 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@70) (= ($generated@@81 ($generated@@182 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@70)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@70) (= ($generated@@502 ($generated@@475 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@475 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@70) (= ($generated@@81 ($generated@@475 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@306 $generated@@507 ($generated@@240 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@240 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@263 $generated@@177 $generated@@177)) (= (type $generated@@509) $generated@@70)) (= (type $generated@@510) $generated@@70)) (= ($generated@@93 $generated@@508 ($generated@@373 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@261 $generated@@508) $generated@@511))) (and ($generated@@191 ($generated@@98 ($generated@@348 $generated@@508) $generated@@511) $generated@@510) ($generated@@191 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@98 ($generated@@348 $generated@@508) $generated@@511))
 :pattern ( ($generated@@98 ($generated@@261 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@93 $generated@@508 ($generated@@373 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@281 $generated@@177 $generated@@177)) (= (type $generated@@513) $generated@@70)) (= (type $generated@@514) $generated@@70)) (= ($generated@@93 $generated@@512 ($generated@@381 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@279 $generated@@512) $generated@@515))) (and ($generated@@191 ($generated@@98 ($generated@@356 $generated@@512) $generated@@515) $generated@@514) ($generated@@191 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@98 ($generated@@356 $generated@@512) $generated@@515))
 :pattern ( ($generated@@98 ($generated@@279 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@93 $generated@@512 ($generated@@381 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@518) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@519) $generated@@88)) (=> (and (and (and ($generated@@91 $generated@@517) ($generated@@91 $generated@@518)) (and (not (= $generated@@519 $generated@@92)) ($generated@@93 $generated@@519 $generated@@94))) (and ($generated@@516 $generated@@517) ($generated@@154 $generated@@517 $generated@@518))) (=> (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@73 (type $generated@@521))))
 (=> (and (and (= (type $generated@@520) $generated@@88) (= (type $generated@@521) ($generated@@72 $generated@@522))) (and (not (= $generated@@520 $generated@@92)) (= $generated@@520 $generated@@519))) (= ($generated@@97 ($generated@@98 $generated@@517 $generated@@520) $generated@@521) ($generated@@97 ($generated@@98 $generated@@518 $generated@@520) $generated@@521))))
 :no-pattern (type $generated@@520)
 :no-pattern (type $generated@@521)
 :no-pattern ($generated $generated@@520)
 :no-pattern ($generated@@0 $generated@@520)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
)) (= ($generated@@86 $generated@@517 $generated@@519) ($generated@@86 $generated@@518 $generated@@519)))))
 :pattern ( ($generated@@516 $generated@@517) ($generated@@154 $generated@@517 $generated@@518) ($generated@@86 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@177) (= (type $generated@@526) $generated@@177)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@190 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@190 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@177) (= (type $generated@@528) $generated@@177)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@190 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@190 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@177) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) $generated@@70)) ($generated@@191 $generated@@529 ($generated@@373 $generated@@530 $generated@@531))) (and (= ($generated@@240 ($generated@@306 ($generated@@263 $generated@@177 $generated@@177) $generated@@529)) $generated@@529) ($generated@@93 ($generated@@306 ($generated@@263 $generated@@177 $generated@@177) $generated@@529) ($generated@@373 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@191 $generated@@529 ($generated@@373 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@177) (= (type $generated@@533) $generated@@70)) (= (type $generated@@534) $generated@@70)) ($generated@@191 $generated@@532 ($generated@@381 $generated@@533 $generated@@534))) (and (= ($generated@@240 ($generated@@306 ($generated@@281 $generated@@177 $generated@@177) $generated@@532)) $generated@@532) ($generated@@93 ($generated@@306 ($generated@@281 $generated@@177 $generated@@177) $generated@@532) ($generated@@381 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@191 $generated@@532 ($generated@@381 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@70) (= (type $generated@@536) $generated@@70)) (= (type $generated@@537) $generated@@177)) ($generated@@191 $generated@@537 ($generated@@167 $generated@@535 $generated@@536))) (and (= ($generated@@240 ($generated@@306 $generated@@168 $generated@@537)) $generated@@537) ($generated@@93 ($generated@@306 $generated@@168 $generated@@537) ($generated@@167 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@191 $generated@@537 ($generated@@167 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@539 T@T) ) (! (= (type ($generated@@538 $generated@@539)) ($generated@@87 $generated@@539 $generated@@4))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@98 ($generated@@538 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@98 ($generated@@538 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@98 ($generated@@404 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@98 ($generated@@404 $generated@@543) $generated@@542)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@550 T@T) ($generated@@551 T@T) ) (= ($generated@@1 ($generated@@546 $generated@@550 $generated@@551)) 22)) (forall (($generated@@552 T@T) ($generated@@553 T@T) ) (! (= ($generated@@547 ($generated@@546 $generated@@552 $generated@@553)) $generated@@552)
 :pattern ( ($generated@@546 $generated@@552 $generated@@553))
))) (forall (($generated@@554 T@T) ($generated@@555 T@T) ) (! (= ($generated@@548 ($generated@@546 $generated@@554 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@546 $generated@@554 $generated@@555))
))) (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@548 (type $generated@@556))))
(= (type ($generated@@544 $generated@@556 $generated@@557 $generated@@558)) $generated@@559))
 :pattern ( ($generated@@544 $generated@@556 $generated@@557 $generated@@558))
))) (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
(let (($generated@@565 (type $generated@@561)))
(= (type ($generated@@549 $generated@@560 $generated@@561 $generated@@562 $generated@@563)) ($generated@@546 $generated@@565 $generated@@564))))
 :pattern ( ($generated@@549 $generated@@560 $generated@@561 $generated@@562 $generated@@563))
))) (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@548 (type $generated@@566))))
 (=> (= (type $generated@@569) $generated@@570) (= ($generated@@544 ($generated@@549 $generated@@566 $generated@@567 $generated@@568 $generated@@569) $generated@@567 $generated@@568) $generated@@569)))
 :weight 0
))) (and (and (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (or (= $generated@@573 $generated@@575) (= ($generated@@544 ($generated@@549 $generated@@572 $generated@@573 $generated@@574 $generated@@571) $generated@@575 $generated@@576) ($generated@@544 $generated@@572 $generated@@575 $generated@@576)))
 :weight 0
)) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (or (= $generated@@580 $generated@@582) (= ($generated@@544 ($generated@@549 $generated@@578 $generated@@579 $generated@@580 $generated@@577) $generated@@581 $generated@@582) ($generated@@544 $generated@@578 $generated@@581 $generated@@582)))
 :weight 0
))) (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (or true (= ($generated@@544 ($generated@@549 $generated@@584 $generated@@585 $generated@@586 $generated@@583) $generated@@587 $generated@@588) ($generated@@544 $generated@@584 $generated@@587 $generated@@588)))
 :weight 0
)))) (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (= (type ($generated@@545 $generated@@589 $generated@@590 $generated@@591 $generated@@592)) ($generated@@546 $generated@@88 $generated@@4))
 :pattern ( ($generated@@545 $generated@@589 $generated@@590 $generated@@591 $generated@@592))
))))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@73 (type $generated@@598))))
 (=> (and (and (and (and (and (= (type $generated@@593) $generated@@88) (= (type $generated@@594) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@595) ($generated@@72 $generated@@4))) (= (type $generated@@596) $generated@@88)) (= (type $generated@@597) $generated@@88)) (= (type $generated@@598) ($generated@@72 $generated@@599))) (= ($generated@@0 ($generated@@544 ($generated@@545 $generated@@593 $generated@@594 $generated@@595 $generated@@596) $generated@@597 $generated@@598))  (=> (and (not (= $generated@@597 $generated@@593)) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@594 $generated@@597) $generated@@595))) (= $generated@@597 $generated@@596)))))
 :pattern ( ($generated@@544 ($generated@@545 $generated@@593 $generated@@594 $generated@@595 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@77)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@70) (= (type $generated@@603) $generated@@70)) (and (= ($generated@@81 ($generated@@167 $generated@@602 $generated@@603)) $generated@@63) (= ($generated@@600 ($generated@@167 $generated@@602 $generated@@603)) $generated@@67)))
 :pattern ( ($generated@@167 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@168) (= ($generated@@523 ($generated@@240 $generated@@604)) ($generated@@524 $generated@@604)))
 :pattern ( ($generated@@523 ($generated@@240 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@177) ($generated@@191 $generated@@605 ($generated@@150 0))) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@605)) $generated@@605) ($generated@@93 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@605) ($generated@@150 0))))
 :pattern ( ($generated@@191 $generated@@605 ($generated@@150 0)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@177) (= (type $generated@@607) $generated@@70)) ($generated@@191 $generated@@606 ($generated@@205 $generated@@607))) (and (= ($generated@@240 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@606)) $generated@@606) ($generated@@93 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@606) ($generated@@205 $generated@@607))))
 :pattern ( ($generated@@191 $generated@@606 ($generated@@205 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@177) (= (type $generated@@609) $generated@@70)) ($generated@@191 $generated@@608 ($generated@@210 $generated@@609))) (and (= ($generated@@240 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@608)) $generated@@608) ($generated@@93 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@608) ($generated@@210 $generated@@609))))
 :pattern ( ($generated@@191 $generated@@608 ($generated@@210 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@177) (= (type $generated@@611) $generated@@70)) ($generated@@191 $generated@@610 ($generated@@182 $generated@@611))) (and (= ($generated@@240 ($generated@@306 ($generated@@87 $generated@@177 $generated@@2) $generated@@610)) $generated@@610) ($generated@@93 ($generated@@306 ($generated@@87 $generated@@177 $generated@@2) $generated@@610) ($generated@@182 $generated@@611))))
 :pattern ( ($generated@@191 $generated@@610 ($generated@@182 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@177) (= (type $generated@@613) $generated@@70)) ($generated@@191 $generated@@612 ($generated@@475 $generated@@613))) (and (= ($generated@@240 ($generated@@306 ($generated@@234 $generated@@177) $generated@@612)) $generated@@612) ($generated@@93 ($generated@@306 ($generated@@234 $generated@@177) $generated@@612) ($generated@@475 $generated@@613))))
 :pattern ( ($generated@@191 $generated@@612 ($generated@@475 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@100 (type $generated@@615))))
 (=> (and (= (type $generated@@615) ($generated@@87 $generated@@617 $generated@@4)) (= (type $generated@@616) ($generated@@87 $generated@@617 $generated@@4))) (= ($generated@@614 $generated@@615 $generated@@616) (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@617) ($generated@@0 ($generated@@98 $generated@@615 $generated@@618))) ($generated@@0 ($generated@@98 $generated@@616 $generated@@618)))
 :pattern ( ($generated@@98 $generated@@615 $generated@@618))
 :pattern ( ($generated@@98 $generated@@616 $generated@@618))
)))))
 :pattern ( ($generated@@614 $generated@@615 $generated@@616))
)))
(assert (= ($generated@@81 $generated@@158) $generated@@65))
(assert (= ($generated@@600 $generated@@158) $generated@@68))
(assert (= ($generated@@81 $generated@@94) $generated@@66))
(assert (= ($generated@@600 $generated@@94) $generated@@68))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@619) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@620) $generated@@70)) (= (type $generated@@621) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@619 ($generated@@182 $generated@@620) $generated@@621) (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@619 $generated@@622)))) ($generated@@220 $generated@@622 $generated@@620 $generated@@621))
 :pattern ( ($generated@@98 $generated@@619 $generated@@622))
))))
 :pattern ( ($generated@@95 $generated@@619 ($generated@@182 $generated@@620) $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) $generated@@168) (= (type $generated@@624) $generated@@70)) (= (type $generated@@625) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@625) (and ($generated@@166 $generated@@623) (exists (($generated@@626 T@U) ) (!  (and (= (type $generated@@626) $generated@@70) ($generated@@95 $generated@@623 ($generated@@167 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@95 $generated@@623 ($generated@@167 $generated@@624 $generated@@626) $generated@@625))
))))) ($generated@@220 ($generated@@175 $generated@@623) $generated@@624 $generated@@625))
 :pattern ( ($generated@@220 ($generated@@175 $generated@@623) $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) $generated@@168) (= (type $generated@@628) $generated@@70)) (= (type $generated@@629) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@629) (and ($generated@@166 $generated@@627) (exists (($generated@@630 T@U) ) (!  (and (= (type $generated@@630) $generated@@70) ($generated@@95 $generated@@627 ($generated@@167 $generated@@630 $generated@@628) $generated@@629))
 :pattern ( ($generated@@95 $generated@@627 ($generated@@167 $generated@@630 $generated@@628) $generated@@629))
))))) ($generated@@220 ($generated@@176 $generated@@627) $generated@@628 $generated@@629))
 :pattern ( ($generated@@220 ($generated@@176 $generated@@627) $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@177) (= (type $generated@@632) $generated@@177)) (= ($generated@@190 ($generated@@216 $generated@@631) ($generated@@216 $generated@@632)) ($generated@@216 ($generated@@190 $generated@@631 $generated@@632))))
 :pattern ( ($generated@@190 ($generated@@216 $generated@@631) ($generated@@216 $generated@@632)))
)))
(assert (forall (($generated@@633 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@96 $generated@@633))) ($generated@@216 ($generated@@240 ($generated@@8 $generated@@633))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@96 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ) (! (= ($generated@@240 ($generated@@216 $generated@@634)) ($generated@@216 ($generated@@240 $generated@@634)))
 :pattern ( ($generated@@240 ($generated@@216 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 ($generated@@235 (type $generated@@635))))
 (=> (and (= (type $generated@@635) ($generated@@234 $generated@@636)) (= ($generated@@233 $generated@@635) 0)) (= $generated@@635 ($generated@@232 $generated@@636))))
 :pattern ( ($generated@@233 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (! (let (($generated@@640 (type $generated@@638)))
 (=> (and (and (= (type $generated@@637) ($generated@@87 $generated@@640 $generated@@2)) (= (type $generated@@639) $generated@@2)) (<= 0 ($generated $generated@@639))) (= ($generated@@255 ($generated@@102 $generated@@637 $generated@@638 $generated@@639)) (+ (- ($generated@@255 $generated@@637) ($generated ($generated@@98 $generated@@637 $generated@@638))) ($generated $generated@@639)))))
 :pattern ( ($generated@@255 ($generated@@102 $generated@@637 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@642) $generated@@2)) ($generated@@95 $generated@@642 $generated@@46 $generated@@641))
 :pattern ( ($generated@@95 $generated@@642 $generated@@46 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@644) $generated@@3)) ($generated@@95 $generated@@644 $generated@@47 $generated@@643))
 :pattern ( ($generated@@95 $generated@@644 $generated@@47 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@646) $generated@@4)) ($generated@@95 $generated@@646 $generated@@44 $generated@@645))
 :pattern ( ($generated@@95 $generated@@646 $generated@@44 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@648) $generated@@433)) ($generated@@95 $generated@@648 $generated@@45 $generated@@647))
 :pattern ( ($generated@@95 $generated@@648 $generated@@45 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@650) $generated@@177)) ($generated@@95 $generated@@650 $generated@@48 $generated@@649))
 :pattern ( ($generated@@95 $generated@@650 $generated@@48 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@234 $generated@@177)) (= (type $generated@@652) $generated@@70)) (= ($generated@@93 $generated@@651 ($generated@@475 $generated@@652)) (forall (($generated@@653 Int) ) (!  (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@233 $generated@@651))) ($generated@@191 ($generated@@476 $generated@@651 $generated@@653) $generated@@652))
 :pattern ( ($generated@@476 $generated@@651 $generated@@653))
))))
 :pattern ( ($generated@@93 $generated@@651 ($generated@@475 $generated@@652)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 Int) ) (!  (=> (= (type $generated@@655) ($generated@@234 $generated@@177)) (=> (and (<= 0 $generated@@656) (< $generated@@656 ($generated@@233 $generated@@655))) (< ($generated@@524 ($generated@@306 $generated@@168 ($generated@@476 $generated@@655 $generated@@656))) ($generated@@654 $generated@@655))))
 :pattern ( ($generated@@524 ($generated@@306 $generated@@168 ($generated@@476 $generated@@655 $generated@@656))))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) ($generated@@263 $generated@@177 $generated@@177)) (= (type $generated@@658) $generated@@70)) (= (type $generated@@659) $generated@@70)) ($generated@@93 $generated@@657 ($generated@@373 $generated@@658 $generated@@659))) (and (and ($generated@@93 ($generated@@261 $generated@@657) ($generated@@205 $generated@@658)) ($generated@@93 ($generated@@316 $generated@@657) ($generated@@205 $generated@@659))) ($generated@@93 ($generated@@347 $generated@@657) ($generated@@205 ($generated@@167 $generated@@658 $generated@@659)))))
 :pattern ( ($generated@@93 $generated@@657 ($generated@@373 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@281 $generated@@177 $generated@@177)) (= (type $generated@@661) $generated@@70)) (= (type $generated@@662) $generated@@70)) ($generated@@93 $generated@@660 ($generated@@381 $generated@@661 $generated@@662))) (and (and ($generated@@93 ($generated@@279 $generated@@660) ($generated@@210 $generated@@661)) ($generated@@93 ($generated@@327 $generated@@660) ($generated@@210 $generated@@662))) ($generated@@93 ($generated@@355 $generated@@660) ($generated@@210 ($generated@@167 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@93 $generated@@660 ($generated@@381 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@2) ($generated@@93 $generated@@663 $generated@@46))
 :pattern ( ($generated@@93 $generated@@663 $generated@@46))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@3) ($generated@@93 $generated@@664 $generated@@47))
 :pattern ( ($generated@@93 $generated@@664 $generated@@47))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@4) ($generated@@93 $generated@@665 $generated@@44))
 :pattern ( ($generated@@93 $generated@@665 $generated@@44))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@433) ($generated@@93 $generated@@666 $generated@@45))
 :pattern ( ($generated@@93 $generated@@666 $generated@@45))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@177) ($generated@@93 $generated@@667 $generated@@48))
 :pattern ( ($generated@@93 $generated@@667 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(assert  (and (and (= (type $generated@@668) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@669) $generated@@88)) (= (type $generated@@670) ($generated@@546 $generated@@88 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@671 true))
(let (($generated@@672  (=> (and (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@668 $generated@@669) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@668 $generated@@669)) (= (ControlFlow 0 5) 2)) $generated@@671)))
(let (($generated@@673  (=> (and (= ($generated ($generated@@97 ($generated@@98 $generated@@668 $generated@@669) $generated@@99)) ($generated@@96 8)) ($generated@@95 $generated@@669 $generated@@158 $generated@@668)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (= $generated@@669 $generated@@669) (and ($generated@@614 ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669)) ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669))) (not ($generated@@614 ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669)) ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669))))))) (=> (or (= $generated@@669 $generated@@669) (and ($generated@@614 ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669)) ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669))) (not ($generated@@614 ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669)) ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669)))))) (=> (or (= $generated@@669 $generated@@669) ($generated@@90 $generated@@668 $generated@@669)) (=> (and ($generated@@86 $generated@@668 $generated@@669) (= (ControlFlow 0 3) 2)) $generated@@671)))))))
(let (($generated@@674  (=> (=> ($generated@@86 $generated@@668 $generated@@669) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@668 $generated@@669) $generated@@99)))) (and (=> (= (ControlFlow 0 8) 3) $generated@@673) (=> (= (ControlFlow 0 8) 5) $generated@@672)))))
(let (($generated@@675  (=> ($generated@@95 $generated@@669 $generated@@158 $generated@@668) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (= $generated@@669 $generated@@669) (and ($generated@@614 ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669)) ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669))) (not ($generated@@614 ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669)) ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669))))))) (=> (or (= $generated@@669 $generated@@669) (and ($generated@@614 ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669)) ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669))) (not ($generated@@614 ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669)) ($generated@@389 ($generated@@538 $generated@@177) ($generated@@240 $generated@@669)))))) (=> (or (= $generated@@669 $generated@@669) ($generated@@90 $generated@@668 $generated@@669)) (=> (and ($generated@@86 $generated@@668 $generated@@669) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@668 $generated@@669) $generated@@99)))) (and (=> (= (ControlFlow 0 6) 3) $generated@@673) (=> (= (ControlFlow 0 6) 5) $generated@@672)))))))))
(let (($generated@@676 true))
(let (($generated@@677  (=> (= $generated@@670 ($generated@@545 $generated@@92 $generated@@668 $generated@@60 $generated@@669)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@676) (=> (= (ControlFlow 0 9) 6) $generated@@675)) (=> (= (ControlFlow 0 9) 8) $generated@@674)))))
(let (($generated@@678  (=> (and ($generated@@91 $generated@@668) ($generated@@516 $generated@@668)) (=> (and (and (not (= $generated@@669 $generated@@92)) (and ($generated@@93 $generated@@669 $generated@@94) ($generated@@95 $generated@@669 $generated@@94 $generated@@668))) (and (= 0 $generated@@85) (= (ControlFlow 0 10) 9))) $generated@@677))))
$generated@@678)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@T T@U T@U) T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@T)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@225 (T@T) T@U)
(declare-fun $generated@@226 (T@U) Int)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@T) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@299 (T@T T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@366 (T@U T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@T) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U T@U) Int)
(declare-fun $generated@@495 (T@U T@U) Bool)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@515 (T@U T@U T@U) T@U)
(declare-fun $generated@@516 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@517 (T@T T@T) T@T)
(declare-fun $generated@@518 (T@T) T@T)
(declare-fun $generated@@519 (T@T) T@T)
(declare-fun $generated@@520 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@573 (T@U) Bool)
(declare-fun $generated@@626 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 12)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@70 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@70 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@67)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@141) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@139 $generated@@140 $generated@@141)) (forall (($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@84) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@140 $generated@@142) $generated@@60))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60))
)))
 :pattern ( ($generated@@139 $generated@@140 $generated@@141))
)))
(assert  (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@84)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@84) (= (type $generated@@146) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@145 $generated@@143 $generated@@146))
)))
(assert  (and (= (type $generated@@147) ($generated@@69 $generated@@2)) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@151)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@153) $generated@@84)) (and ($generated@@148 $generated@@152) (and (not (= $generated@@153 $generated@@144)) (= ($generated@@149 $generated@@153) $generated@@143)))) ($generated@@150 ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147) $generated@@46))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@150 $generated@@154 ($generated@@82 0)))
 :pattern ( ($generated@@150 $generated@@154 ($generated@@82 0)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@67) (= (type $generated@@161) $generated@@67)) (= (type $generated@@162) $generated@@157)) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 16) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@73)
 :pattern ( ($generated@@171 $generated@@173))
)) (= (type $generated@@172) $generated@@67)))
(assert (= ($generated@@171 $generated@@172) $generated@@65))
(assert (= ($generated@@171 $generated@@143) $generated@@65))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@178) $generated@@67)) ($generated@@150 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@150 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@84) (= ($generated@@150 $generated@@179 $generated@@143)  (or (= $generated@@179 $generated@@144) (= ($generated@@149 $generated@@179) $generated@@143))))
 :pattern ( ($generated@@150 $generated@@179 $generated@@143))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (= (type $generated@@180) $generated@@84) (= (type $generated@@181) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@180 $generated@@172 $generated@@181) ($generated@@81 $generated@@180 $generated@@143 $generated@@181)))
 :pattern ( ($generated@@81 $generated@@180 $generated@@172 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@157)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@166)) (= (type $generated@@189) $generated@@166)) (= ($generated@@150 ($generated@@182 $generated@@188 $generated@@189) ($generated@@156 $generated@@186 $generated@@187))  (and ($generated@@183 $generated@@188 $generated@@186) ($generated@@183 $generated@@189 $generated@@187))))
 :pattern ( ($generated@@150 ($generated@@182 $generated@@188 $generated@@189) ($generated@@156 $generated@@186 $generated@@187)))
)))
(assert (= ($generated@@76 $generated@@147) 0))
(assert  (and (and (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@190 $generated@@193 $generated@@194 $generated@@195)) ($generated@@69 $generated@@193))
 :pattern ( ($generated@@190 $generated@@193 $generated@@194 $generated@@195))
)) (= ($generated@@1 $generated@@192) 17)) (= (type $generated@@191) $generated@@192)))
(assert (= ($generated@@190 $generated@@2 $generated@@191 $generated@@66) $generated@@147))
(assert  (not ($generated@@196 $generated@@147)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@157) (= (type $generated@@198) $generated@@157)) (= ($generated@@163 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@163 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@67)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@202) $generated@@67)) (= ($generated@@150 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@166) ($generated@@0 ($generated@@88 $generated@@201 $generated@@203))) ($generated@@183 $generated@@203 $generated@@202))
 :pattern ( ($generated@@88 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@150 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@67)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@207) $generated@@67)) (= ($generated@@150 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@166) ($generated@@0 ($generated@@88 $generated@@206 $generated@@208))) ($generated@@183 $generated@@208 $generated@@207))
 :pattern ( ($generated@@88 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@150 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@214) $generated@@67) (= (type $generated@@215) $generated@@67)) (= (type $generated@@216) $generated@@166)) (= (type $generated@@217) $generated@@166)) (= (type $generated@@218) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@148 $generated@@218)) (= ($generated@@81 ($generated@@182 $generated@@216 $generated@@217) ($generated@@156 $generated@@214 $generated@@215) $generated@@218)  (and ($generated@@213 $generated@@216 $generated@@214 $generated@@218) ($generated@@213 $generated@@217 $generated@@215 $generated@@218))))
 :pattern ( ($generated@@81 ($generated@@182 $generated@@216 $generated@@217) ($generated@@156 $generated@@214 $generated@@215) $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@219 $generated@@220)) $generated@@72)
 :pattern ( ($generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@157) (= ($generated@@155 $generated@@221) (= ($generated@@219 $generated@@221) $generated@@62)))
 :pattern ( ($generated@@155 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@157) ($generated@@155 $generated@@222)) (exists (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (and (and (= (type $generated@@223) $generated@@166) (= (type $generated@@224) $generated@@166)) (= $generated@@222 ($generated@@182 $generated@@223 $generated@@224)))
 :no-pattern (type $generated@@223)
 :no-pattern (type $generated@@224)
 :no-pattern ($generated $generated@@223)
 :no-pattern ($generated@@0 $generated@@223)
 :no-pattern ($generated $generated@@224)
 :no-pattern ($generated@@0 $generated@@224)
)))
 :pattern ( ($generated@@155 $generated@@222))
)))
(assert  (and (and (forall (($generated@@229 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@229)) 18)) (forall (($generated@@230 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@227 $generated@@230))
))) (forall (($generated@@231 T@T) ) (! (= (type ($generated@@225 $generated@@231)) ($generated@@227 $generated@@231))
 :pattern ( ($generated@@225 $generated@@231))
))))
(assert (forall (($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@225 $generated@@232)) 0)
 :pattern ( ($generated@@225 $generated@@232))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@166)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@67) (= (type $generated@@237) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237) ($generated@@81 $generated@@235 $generated@@236 $generated@@237)))
 :pattern ( ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@238) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@239) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@240) $generated@@166)) (= (type $generated@@241) $generated@@67)) ($generated@@139 $generated@@238 $generated@@239)) ($generated@@213 $generated@@240 $generated@@241 $generated@@238)) ($generated@@213 $generated@@240 $generated@@241 $generated@@239))
 :pattern ( ($generated@@139 $generated@@238 $generated@@239) ($generated@@213 $generated@@240 $generated@@241 $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@242) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@243) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@245) $generated@@67)) ($generated@@139 $generated@@242 $generated@@243)) ($generated@@81 $generated@@244 $generated@@245 $generated@@242)) ($generated@@81 $generated@@244 $generated@@245 $generated@@243))
 :pattern ( ($generated@@139 $generated@@242 $generated@@243) ($generated@@81 $generated@@244 $generated@@245 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@247) $generated@@84)) (=> (and (and ($generated@@148 $generated@@246) (and (not (= $generated@@247 $generated@@144)) (= ($generated@@149 $generated@@247) $generated@@143))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@246 $generated@@247) $generated@@60))) ($generated@@81 ($generated@@90 ($generated@@88 $generated@@246 $generated@@247) $generated@@147) $generated@@46 $generated@@246)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@246 $generated@@247) $generated@@147))
)))
(assert (forall (($generated@@250 T@T) ) (! (= (type ($generated@@249 $generated@@250)) ($generated@@83 $generated@@250 $generated@@2))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@86 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@83 $generated@@252 $generated@@2)) (and (= (= ($generated@@248 $generated@@251) 0) (= $generated@@251 ($generated@@249 $generated@@252))) (=> (not (= ($generated@@248 $generated@@251) 0)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) (< 0 ($generated ($generated@@88 $generated@@251 $generated@@253))))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 19)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@83 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@88 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@88 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 20)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@83 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@88 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@88 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@292) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@290 $generated@@291 $generated@@292)) (and ($generated@@139 $generated@@291 $generated@@292) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@70 (type $generated@@294))))
 (=> (and (and (= (type $generated@@293) $generated@@84) (= (type $generated@@294) ($generated@@69 $generated@@295))) (not ($generated@@196 $generated@@294))) (= ($generated@@90 ($generated@@88 $generated@@291 $generated@@293) $generated@@294) ($generated@@90 ($generated@@88 $generated@@292 $generated@@293) $generated@@294))))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@292 $generated@@293) $generated@@294))
))))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@86 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@83 $generated@@297 $generated@@2)) (= ($generated@@175 $generated@@296) (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@297) (and (<= 0 ($generated ($generated@@88 $generated@@296 $generated@@298))) (<= ($generated ($generated@@88 $generated@@296 $generated@@298)) ($generated@@248 $generated@@296))))
 :pattern ( ($generated@@88 $generated@@296 $generated@@298))
)))))
 :pattern ( ($generated@@175 $generated@@296))
)))
(assert (forall (($generated@@300 T@T) ($generated@@301 T@U) ) (! (= (type ($generated@@299 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@166) ($generated@@183 $generated@@302 $generated@@172)) (and (= ($generated@@233 ($generated@@299 $generated@@84 $generated@@302)) $generated@@302) ($generated@@150 ($generated@@299 $generated@@84 $generated@@302) $generated@@172)))
 :pattern ( ($generated@@183 $generated@@302 $generated@@172))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@166) ($generated@@183 $generated@@303 $generated@@143)) (and (= ($generated@@233 ($generated@@299 $generated@@84 $generated@@303)) $generated@@303) ($generated@@150 ($generated@@299 $generated@@84 $generated@@303) $generated@@143)))
 :pattern ( ($generated@@183 $generated@@303 $generated@@143))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@84) (= ($generated@@150 $generated@@304 $generated@@172)  (and ($generated@@150 $generated@@304 $generated@@143) (not (= $generated@@304 $generated@@144)))))
 :pattern ( ($generated@@150 $generated@@304 $generated@@172))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@258 (type $generated@@305))))
(let (($generated@@307 ($generated@@257 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@256 $generated@@307 $generated@@306)) (or (= $generated@@305 ($generated@@255 $generated@@307 $generated@@306)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) ($generated@@0 ($generated@@88 ($generated@@254 $generated@@305) $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@254 $generated@@305))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@258 (type $generated@@310))))
(= (type ($generated@@309 $generated@@310)) ($generated@@83 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@258 (type $generated@@312))))
(let (($generated@@314 ($generated@@257 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@256 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@255 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@313) ($generated@@0 ($generated@@88 ($generated@@309 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(let (($generated@@318 ($generated@@275 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@274 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@273 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@88 ($generated@@272 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@272 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@276 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@83 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@276 (type $generated@@323))))
(let (($generated@@325 ($generated@@275 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@274 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@273 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@328) $generated@@67)) (= ($generated@@150 $generated@@327 ($generated@@174 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@327 $generated@@329)))) ($generated@@183 $generated@@329 $generated@@328))
 :pattern ( ($generated@@88 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@150 $generated@@327 ($generated@@174 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@330) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@331) $generated@@67)) (= (type $generated@@332) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@330 ($generated@@199 $generated@@331) $generated@@332) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@166) ($generated@@0 ($generated@@88 $generated@@330 $generated@@333))) ($generated@@213 $generated@@333 $generated@@331 $generated@@332))
 :pattern ( ($generated@@88 $generated@@330 $generated@@333))
))))
 :pattern ( ($generated@@81 $generated@@330 ($generated@@199 $generated@@331) $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@335) $generated@@67)) (= (type $generated@@336) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@334 ($generated@@204 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@166) ($generated@@0 ($generated@@88 $generated@@334 $generated@@337))) ($generated@@213 $generated@@337 $generated@@335 $generated@@336))
 :pattern ( ($generated@@88 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@81 $generated@@334 ($generated@@204 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= ($generated ($generated@@88 ($generated@@249 $generated@@339) $generated@@338)) 0))
 :pattern ( (let (($generated@@339 (type $generated@@338)))
($generated@@88 ($generated@@249 $generated@@339) $generated@@338)))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@340 $generated@@342))
)) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@258 (type $generated@@343))))
(let (($generated@@345 ($generated@@257 (type $generated@@343))))
(= (type ($generated@@341 $generated@@343)) ($generated@@83 $generated@@345 $generated@@344))))
 :pattern ( ($generated@@341 $generated@@343))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@256 $generated@@166 $generated@@166)) (= (type $generated@@347) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@340 $generated@@346) $generated@@347))  (and ($generated@@0 ($generated@@88 ($generated@@254 $generated@@346) ($generated@@164 ($generated@@299 $generated@@157 $generated@@347)))) (= ($generated@@88 ($generated@@341 $generated@@346) ($generated@@164 ($generated@@299 $generated@@157 $generated@@347))) ($generated@@165 ($generated@@299 $generated@@157 $generated@@347))))))
 :pattern ( ($generated@@88 ($generated@@340 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@276 (type $generated@@351))))
(let (($generated@@353 ($generated@@275 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351)) ($generated@@83 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@274 $generated@@166 $generated@@166)) (= (type $generated@@355) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@348 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@88 ($generated@@272 $generated@@354) ($generated@@164 ($generated@@299 $generated@@157 $generated@@355)))) (= ($generated@@88 ($generated@@349 $generated@@354) ($generated@@164 ($generated@@299 $generated@@157 $generated@@355))) ($generated@@165 ($generated@@299 $generated@@157 $generated@@355))))))
 :pattern ( ($generated@@88 ($generated@@348 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(let (($generated@@359 ($generated@@257 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@256 $generated@@359 $generated@@358)) (= ($generated@@0 ($generated@@88 ($generated@@309 $generated@@356) $generated@@357)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) (and ($generated@@0 ($generated@@88 ($generated@@254 $generated@@356) $generated@@360)) (= $generated@@357 ($generated@@88 ($generated@@341 $generated@@356) $generated@@360))))
 :pattern ( ($generated@@88 ($generated@@254 $generated@@356) $generated@@360))
 :pattern ( ($generated@@88 ($generated@@341 $generated@@356) $generated@@360))
))))))
 :pattern ( ($generated@@88 ($generated@@309 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(let (($generated@@364 ($generated@@275 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@274 $generated@@364 $generated@@363)) (= ($generated@@0 ($generated@@88 ($generated@@320 $generated@@361) $generated@@362)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (and ($generated@@0 ($generated@@88 ($generated@@272 $generated@@361) $generated@@365)) (= $generated@@362 ($generated@@88 ($generated@@349 $generated@@361) $generated@@365))))
 :pattern ( ($generated@@88 ($generated@@272 $generated@@361) $generated@@365))
 :pattern ( ($generated@@88 ($generated@@349 $generated@@361) $generated@@365))
))))))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@367 $generated@@368)) $generated@@67)
 :pattern ( ($generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (and (= (type $generated@@369) ($generated@@256 $generated@@166 $generated@@166)) (= (type $generated@@370) $generated@@67)) (= (type $generated@@371) $generated@@67)) (= (type $generated@@372) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@254 $generated@@369) $generated@@373))) (and ($generated@@213 ($generated@@88 ($generated@@341 $generated@@369) $generated@@373) $generated@@371 $generated@@372) ($generated@@213 $generated@@373 $generated@@370 $generated@@372)))
 :pattern ( ($generated@@88 ($generated@@341 $generated@@369) $generated@@373))
 :pattern ( ($generated@@88 ($generated@@254 $generated@@369) $generated@@373))
))))
 :pattern ( ($generated@@81 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@67)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@274 $generated@@166 $generated@@166)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) $generated@@67)) (= (type $generated@@380) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@272 $generated@@377) $generated@@381))) (and ($generated@@213 ($generated@@88 ($generated@@349 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@213 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@88 ($generated@@349 $generated@@377) $generated@@381))
 :pattern ( ($generated@@88 ($generated@@272 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@81 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@382) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@383) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@384) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@382 $generated@@384))) (and ($generated@@139 $generated@@382 $generated@@383) ($generated@@139 $generated@@383 $generated@@384))) ($generated@@139 $generated@@382 $generated@@384))
 :pattern ( ($generated@@139 $generated@@382 $generated@@383) ($generated@@139 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@T) ) (! (= (type ($generated@@385 $generated@@386)) ($generated@@83 $generated@@386 $generated@@4))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@276 (type $generated@@387))))
(let (($generated@@389 ($generated@@275 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@274 $generated@@389 $generated@@388)) (= (= $generated@@387 ($generated@@273 $generated@@389 $generated@@388)) (= ($generated@@272 $generated@@387) ($generated@@385 $generated@@389))))))
 :pattern ( ($generated@@272 $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@276 (type $generated@@390))))
(let (($generated@@392 ($generated@@275 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@274 $generated@@392 $generated@@391)) (= (= $generated@@390 ($generated@@273 $generated@@392 $generated@@391)) (= ($generated@@320 $generated@@390) ($generated@@385 $generated@@391))))))
 :pattern ( ($generated@@320 $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@276 (type $generated@@393))))
(let (($generated@@395 ($generated@@275 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@274 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@273 $generated@@395 $generated@@394)) (= ($generated@@348 $generated@@393) ($generated@@385 $generated@@166))))))
 :pattern ( ($generated@@348 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@258 (type $generated@@396))))
(let (($generated@@398 ($generated@@257 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@256 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@255 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (and (and (= (type $generated@@399) $generated@@166) (= (type $generated@@400) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@340 $generated@@396) ($generated@@233 ($generated@@182 $generated@@399 $generated@@400)))))
 :no-pattern (type $generated@@399)
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@340 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@276 (type $generated@@401))))
(let (($generated@@403 ($generated@@275 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@274 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@273 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@166) (= (type $generated@@405) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@348 $generated@@401) ($generated@@233 ($generated@@182 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@348 $generated@@401))
)))
(assert (forall (($generated@@407 T@U) ) (! (= (type ($generated@@406 $generated@@407)) $generated@@192)
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@T) ) (!  (=> (and (= (type $generated@@408) $generated@@192) (= (type $generated@@409) $generated@@71)) (and (= ($generated@@406 ($generated@@190 $generated@@410 $generated@@408 $generated@@409)) $generated@@408) (= ($generated@@79 ($generated@@190 $generated@@410 $generated@@408 $generated@@409)) $generated@@409)))
 :pattern ( ($generated@@190 $generated@@410 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@166) ($generated@@183 $generated@@411 $generated@@46)) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@411)) $generated@@411) ($generated@@150 ($generated@@299 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@183 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@166) ($generated@@183 $generated@@412 $generated@@47)) (and (= ($generated@@233 ($generated@@299 $generated@@3 $generated@@412)) $generated@@412) ($generated@@150 ($generated@@299 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@183 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@166) ($generated@@183 $generated@@413 $generated@@44)) (and (= ($generated@@233 ($generated@@299 $generated@@4 $generated@@413)) $generated@@413) ($generated@@150 ($generated@@299 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@183 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 21))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@166) ($generated@@183 $generated@@415 $generated@@45)) (and (= ($generated@@233 ($generated@@299 $generated@@414 $generated@@415)) $generated@@415) ($generated@@150 ($generated@@299 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@183 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@67) (= ($generated@@183 ($generated@@233 $generated@@416) $generated@@417) ($generated@@150 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@183 ($generated@@233 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@86 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@83 $generated@@419 $generated@@2)) (<= 0 ($generated@@248 $generated@@418))))
 :pattern ( ($generated@@248 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@228 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@227 $generated@@421)) (<= 0 ($generated@@226 $generated@@420))))
 :pattern ( ($generated@@226 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@67) (= (type $generated@@425) $generated@@67)) (= ($generated@@422 ($generated@@366 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@366 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@67)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@67) (= (type $generated@@429) $generated@@67)) (= ($generated@@426 ($generated@@366 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@366 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@67) (= (type $generated@@431) $generated@@67)) (= ($generated@@77 ($generated@@366 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@366 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@67)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@67) (= (type $generated@@435) $generated@@67)) (= ($generated@@432 ($generated@@374 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@374 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@67) (= (type $generated@@439) $generated@@67)) (= ($generated@@436 ($generated@@374 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@374 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@67) (= (type $generated@@441) $generated@@67)) (= ($generated@@77 ($generated@@374 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@374 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@166) (= (type $generated@@443) $generated@@166)) (= ($generated@@219 ($generated@@182 $generated@@442 $generated@@443)) $generated@@62))
 :pattern ( ($generated@@182 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@67)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@444 ($generated@@156 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@156 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@67)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@448 ($generated@@156 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@156 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@166) (= (type $generated@@453) $generated@@166)) (= ($generated@@164 ($generated@@182 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@182 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@166) (= (type $generated@@455) $generated@@166)) (= ($generated@@165 ($generated@@182 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@182 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@228 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@227 $generated@@166)) (= (type $generated@@463) $generated@@67)) (= (type $generated@@464) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@226 $generated@@462))) ($generated@@213 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@81 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@82 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@82 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@468 ($generated@@199 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@199 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@67) (= ($generated@@77 ($generated@@199 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@472 ($generated@@204 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@204 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@67) (= ($generated@@77 ($generated@@204 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@67) (= ($generated@@476 ($generated@@174 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@174 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@77 ($generated@@174 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@67) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@77 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@299 $generated@@485 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@256 $generated@@166 $generated@@166)) (= (type $generated@@487) $generated@@67)) (= (type $generated@@488) $generated@@67)) (= ($generated@@150 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@254 $generated@@486) $generated@@489))) (and ($generated@@183 ($generated@@88 ($generated@@341 $generated@@486) $generated@@489) $generated@@488) ($generated@@183 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@88 ($generated@@341 $generated@@486) $generated@@489))
 :pattern ( ($generated@@88 ($generated@@254 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@150 $generated@@486 ($generated@@366 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@274 $generated@@166 $generated@@166)) (= (type $generated@@491) $generated@@67)) (= (type $generated@@492) $generated@@67)) (= ($generated@@150 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@272 $generated@@490) $generated@@493))) (and ($generated@@183 ($generated@@88 ($generated@@349 $generated@@490) $generated@@493) $generated@@492) ($generated@@183 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@88 ($generated@@349 $generated@@490) $generated@@493))
 :pattern ( ($generated@@88 ($generated@@272 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@150 $generated@@490 ($generated@@374 $generated@@491 $generated@@492)))
)))
(assert  (=> true (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@497) $generated@@84)) (or ($generated@@495 $generated@@496 $generated@@497) (and ($generated@@148 $generated@@496) (and (not (= $generated@@497 $generated@@144)) (and ($generated@@150 $generated@@497 $generated@@172) ($generated@@81 $generated@@497 $generated@@172 $generated@@496)))))) (= ($generated@@494 $generated@@496 $generated@@497) ($generated ($generated@@90 ($generated@@88 $generated@@496 $generated@@497) $generated@@147))))
 :pattern ( ($generated@@494 $generated@@496 $generated@@497) ($generated@@148 $generated@@496))
))))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@166) (= (type $generated@@501) $generated@@166)) (< ($generated@@498 $generated@@500) ($generated@@499 ($generated@@182 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@182 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@166) (= (type $generated@@503) $generated@@166)) (< ($generated@@498 $generated@@503) ($generated@@499 ($generated@@182 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@182 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@166) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) ($generated@@183 $generated@@504 ($generated@@366 $generated@@505 $generated@@506))) (and (= ($generated@@233 ($generated@@299 ($generated@@256 $generated@@166 $generated@@166) $generated@@504)) $generated@@504) ($generated@@150 ($generated@@299 ($generated@@256 $generated@@166 $generated@@166) $generated@@504) ($generated@@366 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@183 $generated@@504 ($generated@@366 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) $generated@@166) (= (type $generated@@508) $generated@@67)) (= (type $generated@@509) $generated@@67)) ($generated@@183 $generated@@507 ($generated@@374 $generated@@508 $generated@@509))) (and (= ($generated@@233 ($generated@@299 ($generated@@274 $generated@@166 $generated@@166) $generated@@507)) $generated@@507) ($generated@@150 ($generated@@299 ($generated@@274 $generated@@166 $generated@@166) $generated@@507) ($generated@@374 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@183 $generated@@507 ($generated@@374 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@67) (= (type $generated@@511) $generated@@67)) (= (type $generated@@512) $generated@@166)) ($generated@@183 $generated@@512 ($generated@@156 $generated@@510 $generated@@511))) (and (= ($generated@@233 ($generated@@299 $generated@@157 $generated@@512)) $generated@@512) ($generated@@150 ($generated@@299 $generated@@157 $generated@@512) ($generated@@156 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@183 $generated@@512 ($generated@@156 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
 (not ($generated@@0 ($generated@@88 ($generated@@385 $generated@@514) $generated@@513))))
 :pattern ( (let (($generated@@514 (type $generated@@513)))
($generated@@88 ($generated@@385 $generated@@514) $generated@@513)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@521 T@T) ($generated@@522 T@T) ) (= ($generated@@1 ($generated@@517 $generated@@521 $generated@@522)) 22)) (forall (($generated@@523 T@T) ($generated@@524 T@T) ) (! (= ($generated@@518 ($generated@@517 $generated@@523 $generated@@524)) $generated@@523)
 :pattern ( ($generated@@517 $generated@@523 $generated@@524))
))) (forall (($generated@@525 T@T) ($generated@@526 T@T) ) (! (= ($generated@@519 ($generated@@517 $generated@@525 $generated@@526)) $generated@@526)
 :pattern ( ($generated@@517 $generated@@525 $generated@@526))
))) (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@519 (type $generated@@527))))
(= (type ($generated@@515 $generated@@527 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@515 $generated@@527 $generated@@528 $generated@@529))
))) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(let (($generated@@536 (type $generated@@532)))
(= (type ($generated@@520 $generated@@531 $generated@@532 $generated@@533 $generated@@534)) ($generated@@517 $generated@@536 $generated@@535))))
 :pattern ( ($generated@@520 $generated@@531 $generated@@532 $generated@@533 $generated@@534))
))) (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@519 (type $generated@@537))))
 (=> (= (type $generated@@540) $generated@@541) (= ($generated@@515 ($generated@@520 $generated@@537 $generated@@538 $generated@@539 $generated@@540) $generated@@538 $generated@@539) $generated@@540)))
 :weight 0
))) (and (and (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (or (= $generated@@544 $generated@@546) (= ($generated@@515 ($generated@@520 $generated@@543 $generated@@544 $generated@@545 $generated@@542) $generated@@546 $generated@@547) ($generated@@515 $generated@@543 $generated@@546 $generated@@547)))
 :weight 0
)) (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (or (= $generated@@551 $generated@@553) (= ($generated@@515 ($generated@@520 $generated@@549 $generated@@550 $generated@@551 $generated@@548) $generated@@552 $generated@@553) ($generated@@515 $generated@@549 $generated@@552 $generated@@553)))
 :weight 0
))) (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (or true (= ($generated@@515 ($generated@@520 $generated@@555 $generated@@556 $generated@@557 $generated@@554) $generated@@558 $generated@@559) ($generated@@515 $generated@@555 $generated@@558 $generated@@559)))
 :weight 0
)))) (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (= (type ($generated@@516 $generated@@560 $generated@@561 $generated@@562 $generated@@563)) ($generated@@517 $generated@@84 $generated@@4))
 :pattern ( ($generated@@516 $generated@@560 $generated@@561 $generated@@562 $generated@@563))
))))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@70 (type $generated@@569))))
 (=> (and (and (and (and (and (= (type $generated@@564) $generated@@84) (= (type $generated@@565) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@566) ($generated@@69 $generated@@4))) (= (type $generated@@567) $generated@@84)) (= (type $generated@@568) $generated@@84)) (= (type $generated@@569) ($generated@@69 $generated@@570))) (= ($generated@@0 ($generated@@515 ($generated@@516 $generated@@564 $generated@@565 $generated@@566 $generated@@567) $generated@@568 $generated@@569))  (=> (and (not (= $generated@@568 $generated@@564)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@565 $generated@@568) $generated@@566))) (= $generated@@568 $generated@@567)))))
 :pattern ( ($generated@@515 ($generated@@516 $generated@@564 $generated@@565 $generated@@566 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) $generated@@67)) (and (= ($generated@@77 ($generated@@156 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@171 ($generated@@156 $generated@@571 $generated@@572)) $generated@@64)))
 :pattern ( ($generated@@156 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@575) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@576) $generated@@84)) (=> (and (and (and ($generated@@148 $generated@@574) ($generated@@148 $generated@@575)) (and (not (= $generated@@576 $generated@@144)) ($generated@@150 $generated@@576 $generated@@172))) (and ($generated@@573 $generated@@574) ($generated@@139 $generated@@574 $generated@@575))) (=> (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@70 (type $generated@@578))))
 (=> (and (and (= (type $generated@@577) $generated@@84) (= (type $generated@@578) ($generated@@69 $generated@@579))) (and (not (= $generated@@577 $generated@@144)) (= $generated@@577 $generated@@576))) (= ($generated@@90 ($generated@@88 $generated@@574 $generated@@577) $generated@@578) ($generated@@90 ($generated@@88 $generated@@575 $generated@@577) $generated@@578))))
 :no-pattern (type $generated@@577)
 :no-pattern (type $generated@@578)
 :no-pattern ($generated $generated@@577)
 :no-pattern ($generated@@0 $generated@@577)
 :no-pattern ($generated $generated@@578)
 :no-pattern ($generated@@0 $generated@@578)
)) (= ($generated@@494 $generated@@574 $generated@@576) ($generated@@494 $generated@@575 $generated@@576)))))
 :pattern ( ($generated@@573 $generated@@574) ($generated@@139 $generated@@574 $generated@@575) ($generated@@494 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@157) (= ($generated@@498 ($generated@@233 $generated@@580)) ($generated@@499 $generated@@580)))
 :pattern ( ($generated@@498 ($generated@@233 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@166) ($generated@@183 $generated@@581 ($generated@@82 0))) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@581)) $generated@@581) ($generated@@150 ($generated@@299 ($generated@@83 $generated@@166 $generated@@4) $generated@@581) ($generated@@82 0))))
 :pattern ( ($generated@@183 $generated@@581 ($generated@@82 0)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@166) (= (type $generated@@583) $generated@@67)) ($generated@@183 $generated@@582 ($generated@@199 $generated@@583))) (and (= ($generated@@233 ($generated@@299 ($generated@@83 $generated@@166 $generated@@4) $generated@@582)) $generated@@582) ($generated@@150 ($generated@@299 ($generated@@83 $generated@@166 $generated@@4) $generated@@582) ($generated@@199 $generated@@583))))
 :pattern ( ($generated@@183 $generated@@582 ($generated@@199 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@166) (= (type $generated@@585) $generated@@67)) ($generated@@183 $generated@@584 ($generated@@204 $generated@@585))) (and (= ($generated@@233 ($generated@@299 ($generated@@83 $generated@@166 $generated@@4) $generated@@584)) $generated@@584) ($generated@@150 ($generated@@299 ($generated@@83 $generated@@166 $generated@@4) $generated@@584) ($generated@@204 $generated@@585))))
 :pattern ( ($generated@@183 $generated@@584 ($generated@@204 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@166) (= (type $generated@@587) $generated@@67)) ($generated@@183 $generated@@586 ($generated@@174 $generated@@587))) (and (= ($generated@@233 ($generated@@299 ($generated@@83 $generated@@166 $generated@@2) $generated@@586)) $generated@@586) ($generated@@150 ($generated@@299 ($generated@@83 $generated@@166 $generated@@2) $generated@@586) ($generated@@174 $generated@@587))))
 :pattern ( ($generated@@183 $generated@@586 ($generated@@174 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@166) (= (type $generated@@589) $generated@@67)) ($generated@@183 $generated@@588 ($generated@@456 $generated@@589))) (and (= ($generated@@233 ($generated@@299 ($generated@@227 $generated@@166) $generated@@588)) $generated@@588) ($generated@@150 ($generated@@299 ($generated@@227 $generated@@166) $generated@@588) ($generated@@456 $generated@@589))))
 :pattern ( ($generated@@183 $generated@@588 ($generated@@456 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@590) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@590 ($generated@@174 $generated@@591) $generated@@592) (forall (($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@590 $generated@@593)))) ($generated@@213 $generated@@593 $generated@@591 $generated@@592))
 :pattern ( ($generated@@88 $generated@@590 $generated@@593))
))))
 :pattern ( ($generated@@81 $generated@@590 ($generated@@174 $generated@@591) $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@157) (= (type $generated@@595) $generated@@67)) (= (type $generated@@596) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@596) (and ($generated@@155 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@67) ($generated@@81 $generated@@594 ($generated@@156 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@81 $generated@@594 ($generated@@156 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@213 ($generated@@164 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@213 ($generated@@164 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@157) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@600) (and ($generated@@155 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@67) ($generated@@81 $generated@@598 ($generated@@156 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@81 $generated@@598 ($generated@@156 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@213 ($generated@@165 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@213 ($generated@@165 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@166) (= (type $generated@@603) $generated@@166)) (= ($generated@@182 ($generated@@209 $generated@@602) ($generated@@209 $generated@@603)) ($generated@@209 ($generated@@182 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@182 ($generated@@209 $generated@@602) ($generated@@209 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (! (= ($generated@@233 ($generated@@209 $generated@@604)) ($generated@@209 ($generated@@233 $generated@@604)))
 :pattern ( ($generated@@233 ($generated@@209 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@228 (type $generated@@605))))
 (=> (and (= (type $generated@@605) ($generated@@227 $generated@@606)) (= ($generated@@226 $generated@@605) 0)) (= $generated@@605 ($generated@@225 $generated@@606))))
 :pattern ( ($generated@@226 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@608)))
 (=> (and (and (= (type $generated@@607) ($generated@@83 $generated@@610 $generated@@2)) (= (type $generated@@609) $generated@@2)) (<= 0 ($generated $generated@@609))) (= ($generated@@248 ($generated@@89 $generated@@607 $generated@@608 $generated@@609)) (+ (- ($generated@@248 $generated@@607) ($generated ($generated@@88 $generated@@607 $generated@@608))) ($generated $generated@@609)))))
 :pattern ( ($generated@@248 ($generated@@89 $generated@@607 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@612) $generated@@2)) ($generated@@81 $generated@@612 $generated@@46 $generated@@611))
 :pattern ( ($generated@@81 $generated@@612 $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@614) $generated@@3)) ($generated@@81 $generated@@614 $generated@@47 $generated@@613))
 :pattern ( ($generated@@81 $generated@@614 $generated@@47 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@616) $generated@@4)) ($generated@@81 $generated@@616 $generated@@44 $generated@@615))
 :pattern ( ($generated@@81 $generated@@616 $generated@@44 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@618) $generated@@414)) ($generated@@81 $generated@@618 $generated@@45 $generated@@617))
 :pattern ( ($generated@@81 $generated@@618 $generated@@45 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@620) $generated@@166)) ($generated@@81 $generated@@620 $generated@@48 $generated@@619))
 :pattern ( ($generated@@81 $generated@@620 $generated@@48 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@227 $generated@@166)) (= (type $generated@@622) $generated@@67)) (= ($generated@@150 $generated@@621 ($generated@@456 $generated@@622)) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@226 $generated@@621))) ($generated@@183 ($generated@@457 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@457 $generated@@621 $generated@@623))
))))
 :pattern ( ($generated@@150 $generated@@621 ($generated@@456 $generated@@622)))
)))
(assert  (=> true (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@625) $generated@@84)) (or ($generated@@495 $generated@@624 $generated@@625) (and ($generated@@148 $generated@@624) (and (not (= $generated@@625 $generated@@144)) (and ($generated@@150 $generated@@625 $generated@@172) ($generated@@81 $generated@@625 $generated@@172 $generated@@624)))))) true)
 :pattern ( ($generated@@494 $generated@@624 $generated@@625))
))))
(assert (forall (($generated@@627 T@U) ($generated@@628 Int) ) (!  (=> (= (type $generated@@627) ($generated@@227 $generated@@166)) (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@226 $generated@@627))) (< ($generated@@499 ($generated@@299 $generated@@157 ($generated@@457 $generated@@627 $generated@@628))) ($generated@@626 $generated@@627))))
 :pattern ( ($generated@@499 ($generated@@299 $generated@@157 ($generated@@457 $generated@@627 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@256 $generated@@166 $generated@@166)) (= (type $generated@@630) $generated@@67)) (= (type $generated@@631) $generated@@67)) ($generated@@150 $generated@@629 ($generated@@366 $generated@@630 $generated@@631))) (and (and ($generated@@150 ($generated@@254 $generated@@629) ($generated@@199 $generated@@630)) ($generated@@150 ($generated@@309 $generated@@629) ($generated@@199 $generated@@631))) ($generated@@150 ($generated@@340 $generated@@629) ($generated@@199 ($generated@@156 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@150 $generated@@629 ($generated@@366 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@274 $generated@@166 $generated@@166)) (= (type $generated@@633) $generated@@67)) (= (type $generated@@634) $generated@@67)) ($generated@@150 $generated@@632 ($generated@@374 $generated@@633 $generated@@634))) (and (and ($generated@@150 ($generated@@272 $generated@@632) ($generated@@204 $generated@@633)) ($generated@@150 ($generated@@320 $generated@@632) ($generated@@204 $generated@@634))) ($generated@@150 ($generated@@348 $generated@@632) ($generated@@204 ($generated@@156 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@150 $generated@@632 ($generated@@374 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@2) ($generated@@150 $generated@@635 $generated@@46))
 :pattern ( ($generated@@150 $generated@@635 $generated@@46))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@3) ($generated@@150 $generated@@636 $generated@@47))
 :pattern ( ($generated@@150 $generated@@636 $generated@@47))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@4) ($generated@@150 $generated@@637 $generated@@44))
 :pattern ( ($generated@@150 $generated@@637 $generated@@44))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@414) ($generated@@150 $generated@@638 $generated@@45))
 :pattern ( ($generated@@150 $generated@@638 $generated@@45))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@166) ($generated@@150 $generated@@639 $generated@@48))
 :pattern ( ($generated@@150 $generated@@639 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () Int)
(assert  (and (and (= (type $generated@@640) ($generated@@517 $generated@@84 $generated@@4)) (= (type $generated@@641) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@642) $generated@@84)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@644  (=> (= $generated@@640 ($generated@@516 $generated@@144 $generated@@641 $generated@@60 $generated@@642)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@642 $generated@@144))) (=> (and ($generated@@81 $generated@@642 $generated@@143 $generated@@641) ($generated@@495 $generated@@641 $generated@@642)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@642 $generated@@144))) (=> (and ($generated@@495 $generated@@641 $generated@@642) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@494 $generated@@641 $generated@@642) ($generated ($generated@@90 ($generated@@88 $generated@@641 $generated@@642) $generated@@147))))))))))
(let (($generated@@645  (=> (and ($generated@@148 $generated@@641) ($generated@@573 $generated@@641)) (=> (and (and ($generated@@150 $generated@@642 $generated@@172) ($generated@@81 $generated@@642 $generated@@172 $generated@@641)) (and (= 1 $generated@@643) (= (ControlFlow 0 5) 2))) $generated@@644))))
$generated@@645)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 () Int)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) Int)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 () T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@T T@U T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@232 (T@T) T@U)
(declare-fun $generated@@233 (T@U) Int)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@T T@T) T@U)
(declare-fun $generated@@263 (T@T T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U T@U) Bool)
(declare-fun $generated@@306 (T@T T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@373 (T@U T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@U Int) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Bool)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@540 (T@T) T@U)
(declare-fun $generated@@546 (T@U T@U T@U) T@U)
(declare-fun $generated@@547 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@548 (T@T T@T) T@T)
(declare-fun $generated@@549 (T@T) T@T)
(declare-fun $generated@@550 (T@T) T@T)
(declare-fun $generated@@551 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@602 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@628 (T@U T@U) Bool)
(declare-fun $generated@@668 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@104 $generated@@105)) 13)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@100 ($generated@@87 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@87 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@101 ($generated@@87 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@87 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@101 (type $generated@@110))))
(= (type ($generated@@98 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 (type $generated@@115)))
(let (($generated@@117 (type $generated@@114)))
(= (type ($generated@@102 $generated@@113 $generated@@114 $generated@@115)) ($generated@@87 $generated@@117 $generated@@116))))
 :pattern ( ($generated@@102 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@101 (type $generated@@118))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@98 ($generated@@102 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@98 ($generated@@102 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@98 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@98 ($generated@@102 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@98 $generated@@127 $generated@@129)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@73 (type $generated@@131))))
(= (type ($generated@@97 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@97 $generated@@130 $generated@@131))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= (type ($generated@@103 $generated@@133 $generated@@134 $generated@@135)) $generated@@89)
 :pattern ( ($generated@@103 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@138) $generated@@139) (= ($generated@@97 ($generated@@103 $generated@@136 $generated@@137 $generated@@138) $generated@@137) $generated@@138)))
 :weight 0
))) (and (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@97 ($generated@@103 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@97 $generated@@141 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or true (= ($generated@@97 ($generated@@103 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@97 $generated@@145 $generated@@147)))
 :weight 0
)))) (= (type $generated@@92) $generated@@88)) (= (type $generated@@94) $generated@@70)) (= (type $generated@@99) ($generated@@72 $generated@@2))))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@149) $generated@@88)) (or ($generated@@90 $generated@@148 $generated@@149) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@148) (and (not (= $generated@@149 $generated@@92)) (and ($generated@@93 $generated@@149 $generated@@94) ($generated@@95 $generated@@149 $generated@@94 $generated@@148))))))) (and (=> ($generated@@86 $generated@@148 $generated@@149) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)))) (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@148 $generated@@149))))
 :pattern ( ($generated@@86 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@88) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (= (type $generated@@158) $generated@@70))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@88) (= (type $generated@@160) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@159 $generated@@158 $generated@@160)  (or (= $generated@@159 $generated@@92) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@70)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@164) $generated@@88)) (and ($generated@@91 $generated@@163) (and (not (= $generated@@164 $generated@@92)) (= ($generated@@161 $generated@@164) $generated@@158)))) ($generated@@93 ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99) $generated@@46))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@93 $generated@@165 ($generated@@150 0)))
 :pattern ( ($generated@@93 $generated@@165 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@70)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@70) (= (type $generated@@172) $generated@@70)) (= (type $generated@@173) $generated@@168)) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 17) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@70)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@70)) ($generated@@93 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@93 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@88) (= ($generated@@93 $generated@@187 $generated@@158)  (or (= $generated@@187 $generated@@92) (= ($generated@@161 $generated@@187) $generated@@158))))
 :pattern ( ($generated@@93 $generated@@187 $generated@@158))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (= (type $generated@@188) $generated@@88) (= (type $generated@@189) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@188 $generated@@94 $generated@@189) ($generated@@95 $generated@@188 $generated@@158 $generated@@189)))
 :pattern ( ($generated@@95 $generated@@188 $generated@@94 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@192 $generated@@193)) $generated@@168)
 :pattern ( ($generated@@190 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (and (= (type $generated@@194) $generated@@70) (= (type $generated@@195) $generated@@70)) (= (type $generated@@196) $generated@@177)) (= (type $generated@@197) $generated@@177)) (= ($generated@@93 ($generated@@190 $generated@@196 $generated@@197) ($generated@@167 $generated@@194 $generated@@195))  (and ($generated@@191 $generated@@196 $generated@@194) ($generated@@191 $generated@@197 $generated@@195))))
 :pattern ( ($generated@@93 ($generated@@190 $generated@@196 $generated@@197) ($generated@@167 $generated@@194 $generated@@195)))
)))
(assert (= ($generated@@80 $generated@@99) 0))
(assert (forall (($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= (type ($generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@72 $generated@@199))
 :pattern ( ($generated@@198 $generated@@199 $generated@@200 $generated@@201))
)))
(assert (= ($generated@@198 $generated@@2 $generated@@64 $generated@@69) $generated@@99))
(assert  (not ($generated@@202 $generated@@99)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@168) (= (type $generated@@204) $generated@@168)) (= ($generated@@174 $generated@@203 $generated@@204) (= $generated@@203 $generated@@204)))
 :pattern ( ($generated@@174 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (= (type ($generated@@205 $generated@@206)) $generated@@70)
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@208) $generated@@70)) (= ($generated@@93 $generated@@207 ($generated@@205 $generated@@208)) (forall (($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@209) $generated@@177) ($generated@@0 ($generated@@98 $generated@@207 $generated@@209))) ($generated@@191 $generated@@209 $generated@@208))
 :pattern ( ($generated@@98 $generated@@207 $generated@@209))
))))
 :pattern ( ($generated@@93 $generated@@207 ($generated@@205 $generated@@208)))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@70)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@213) $generated@@70)) (= ($generated@@93 $generated@@212 ($generated@@210 $generated@@213)) (forall (($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@177) ($generated@@0 ($generated@@98 $generated@@212 $generated@@214))) ($generated@@191 $generated@@214 $generated@@213))
 :pattern ( ($generated@@98 $generated@@212 $generated@@214))
))))
 :pattern ( ($generated@@93 $generated@@212 ($generated@@210 $generated@@213)))
)))
(assert (forall (($generated@@215 Int) ) (! (= ($generated@@96 $generated@@215) $generated@@215)
 :pattern ( ($generated@@96 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (let (($generated@@218 (type $generated@@217)))
(= (type ($generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ) (! (= ($generated@@216 $generated@@219) $generated@@219)
 :pattern ( ($generated@@216 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@221) $generated@@70) (= (type $generated@@222) $generated@@70)) (= (type $generated@@223) $generated@@177)) (= (type $generated@@224) $generated@@177)) (= (type $generated@@225) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@91 $generated@@225)) (= ($generated@@95 ($generated@@190 $generated@@223 $generated@@224) ($generated@@167 $generated@@221 $generated@@222) $generated@@225)  (and ($generated@@220 $generated@@223 $generated@@221 $generated@@225) ($generated@@220 $generated@@224 $generated@@222 $generated@@225))))
 :pattern ( ($generated@@95 ($generated@@190 $generated@@223 $generated@@224) ($generated@@167 $generated@@221 $generated@@222) $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@75)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@168) (= ($generated@@166 $generated@@228) (= ($generated@@226 $generated@@228) $generated@@62)))
 :pattern ( ($generated@@166 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@168) ($generated@@166 $generated@@229)) (exists (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (and (and (= (type $generated@@230) $generated@@177) (= (type $generated@@231) $generated@@177)) (= $generated@@229 ($generated@@190 $generated@@230 $generated@@231)))
 :no-pattern (type $generated@@230)
 :no-pattern (type $generated@@231)
 :no-pattern ($generated $generated@@230)
 :no-pattern ($generated@@0 $generated@@230)
 :no-pattern ($generated $generated@@231)
 :no-pattern ($generated@@0 $generated@@231)
)))
 :pattern ( ($generated@@166 $generated@@229))
)))
(assert  (and (and (forall (($generated@@236 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@236)) 18)) (forall (($generated@@237 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@234 $generated@@237))
))) (forall (($generated@@238 T@T) ) (! (= (type ($generated@@232 $generated@@238)) ($generated@@234 $generated@@238))
 :pattern ( ($generated@@232 $generated@@238))
))))
(assert (forall (($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@232 $generated@@239)) 0)
 :pattern ( ($generated@@232 $generated@@239))
)))
(assert ($generated@@202 $generated@@60))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@177)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244) ($generated@@95 $generated@@242 $generated@@243 $generated@@244)))
 :pattern ( ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@246) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@247) $generated@@177)) (= (type $generated@@248) $generated@@70)) ($generated@@154 $generated@@245 $generated@@246)) ($generated@@220 $generated@@247 $generated@@248 $generated@@245)) ($generated@@220 $generated@@247 $generated@@248 $generated@@246))
 :pattern ( ($generated@@154 $generated@@245 $generated@@246) ($generated@@220 $generated@@247 $generated@@248 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@249) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@250) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@252) $generated@@70)) ($generated@@154 $generated@@249 $generated@@250)) ($generated@@95 $generated@@251 $generated@@252 $generated@@249)) ($generated@@95 $generated@@251 $generated@@252 $generated@@250))
 :pattern ( ($generated@@154 $generated@@249 $generated@@250) ($generated@@95 $generated@@251 $generated@@252 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@254) $generated@@88)) (=> (and (and ($generated@@91 $generated@@253) (and (not (= $generated@@254 $generated@@92)) (= ($generated@@161 $generated@@254) $generated@@158))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@253 $generated@@254) $generated@@60))) ($generated@@95 ($generated@@97 ($generated@@98 $generated@@253 $generated@@254) $generated@@99) $generated@@46 $generated@@253)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@253 $generated@@254) $generated@@99))
)))
(assert (forall (($generated@@257 T@T) ) (! (= (type ($generated@@256 $generated@@257)) ($generated@@87 $generated@@257 $generated@@2))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@100 (type $generated@@258))))
 (=> (= (type $generated@@258) ($generated@@87 $generated@@259 $generated@@2)) (and (= (= ($generated@@255 $generated@@258) 0) (= $generated@@258 ($generated@@256 $generated@@259))) (=> (not (= ($generated@@255 $generated@@258) 0)) (exists (($generated@@260 T@U) ) (!  (and (= (type $generated@@260) $generated@@259) (< 0 ($generated ($generated@@98 $generated@@258 $generated@@260))))
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
))))))
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert  (and (and (and (and (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@266 $generated@@267)) 19)) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@268 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@263 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@263 $generated@@270 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@263 $generated@@270 $generated@@271))
))) (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@264 (type $generated@@272))))
(= (type ($generated@@261 $generated@@272)) ($generated@@87 $generated@@273 $generated@@4)))
 :pattern ( ($generated@@261 $generated@@272))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= (type ($generated@@262 $generated@@274 $generated@@275)) ($generated@@263 $generated@@274 $generated@@275))
 :pattern ( ($generated@@262 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@T) ) (! (let (($generated@@278 (type $generated@@276)))
 (not ($generated@@0 ($generated@@98 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276))))
 :pattern ( (let (($generated@@278 (type $generated@@276)))
($generated@@98 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276)))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 20)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@87 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@98 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@98 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@297 $generated@@298 $generated@@299)) (and ($generated@@154 $generated@@298 $generated@@299) (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@73 (type $generated@@301))))
 (=> (and (and (= (type $generated@@300) $generated@@88) (= (type $generated@@301) ($generated@@72 $generated@@302))) (not ($generated@@202 $generated@@301))) (= ($generated@@97 ($generated@@98 $generated@@298 $generated@@300) $generated@@301) ($generated@@97 ($generated@@98 $generated@@299 $generated@@300) $generated@@301))))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@299 $generated@@300) $generated@@301))
))))
 :pattern ( ($generated@@297 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@100 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@87 $generated@@304 $generated@@2)) (= ($generated@@183 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@98 $generated@@303 $generated@@305))) (<= ($generated ($generated@@98 $generated@@303 $generated@@305)) ($generated@@255 $generated@@303))))
 :pattern ( ($generated@@98 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@183 $generated@@303))
)))
(assert (forall (($generated@@307 T@T) ($generated@@308 T@U) ) (! (= (type ($generated@@306 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@177) ($generated@@191 $generated@@309 $generated@@158)) (and (= ($generated@@240 ($generated@@306 $generated@@88 $generated@@309)) $generated@@309) ($generated@@93 ($generated@@306 $generated@@88 $generated@@309) $generated@@158)))
 :pattern ( ($generated@@191 $generated@@309 $generated@@158))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@177) ($generated@@191 $generated@@310 $generated@@94)) (and (= ($generated@@240 ($generated@@306 $generated@@88 $generated@@310)) $generated@@310) ($generated@@93 ($generated@@306 $generated@@88 $generated@@310) $generated@@94)))
 :pattern ( ($generated@@191 $generated@@310 $generated@@94))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@88) (= ($generated@@93 $generated@@311 $generated@@94)  (and ($generated@@93 $generated@@311 $generated@@158) (not (= $generated@@311 $generated@@92)))))
 :pattern ( ($generated@@93 $generated@@311 $generated@@94))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@265 (type $generated@@312))))
(let (($generated@@314 ($generated@@264 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@263 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@262 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) ($generated@@0 ($generated@@98 ($generated@@261 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@261 $generated@@312))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@265 (type $generated@@317))))
(= (type ($generated@@316 $generated@@317)) ($generated@@87 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@265 (type $generated@@319))))
(let (($generated@@321 ($generated@@264 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@263 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@262 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@320) ($generated@@0 ($generated@@98 ($generated@@316 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@283 (type $generated@@323))))
(let (($generated@@325 ($generated@@282 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@281 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@280 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@98 ($generated@@279 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@279 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@283 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@87 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@283 (type $generated@@330))))
(let (($generated@@332 ($generated@@282 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@281 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@280 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@98 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@335) $generated@@70)) (= ($generated@@93 $generated@@334 ($generated@@182 $generated@@335)) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@334 $generated@@336)))) ($generated@@191 $generated@@336 $generated@@335))
 :pattern ( ($generated@@98 $generated@@334 $generated@@336))
))))
 :pattern ( ($generated@@93 $generated@@334 ($generated@@182 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@338) $generated@@70)) (= (type $generated@@339) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@337 ($generated@@205 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@177) ($generated@@0 ($generated@@98 $generated@@337 $generated@@340))) ($generated@@220 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@98 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@95 $generated@@337 ($generated@@205 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@342) $generated@@70)) (= (type $generated@@343) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@341 ($generated@@210 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@177) ($generated@@0 ($generated@@98 $generated@@341 $generated@@344))) ($generated@@220 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@98 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@95 $generated@@341 ($generated@@210 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 (type $generated@@345)))
(= ($generated ($generated@@98 ($generated@@256 $generated@@346) $generated@@345)) 0))
 :pattern ( (let (($generated@@346 (type $generated@@345)))
($generated@@98 ($generated@@256 $generated@@346) $generated@@345)))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@265 (type $generated@@350))))
(let (($generated@@352 ($generated@@264 (type $generated@@350))))
(= (type ($generated@@348 $generated@@350)) ($generated@@87 $generated@@352 $generated@@351))))
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@263 $generated@@177 $generated@@177)) (= (type $generated@@354) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@347 $generated@@353) $generated@@354))  (and ($generated@@0 ($generated@@98 ($generated@@261 $generated@@353) ($generated@@175 ($generated@@306 $generated@@168 $generated@@354)))) (= ($generated@@98 ($generated@@348 $generated@@353) ($generated@@175 ($generated@@306 $generated@@168 $generated@@354))) ($generated@@176 ($generated@@306 $generated@@168 $generated@@354))))))
 :pattern ( ($generated@@98 ($generated@@347 $generated@@353) $generated@@354))
)))
(assert  (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@357)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@355 $generated@@357))
)) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@283 (type $generated@@358))))
(let (($generated@@360 ($generated@@282 (type $generated@@358))))
(= (type ($generated@@356 $generated@@358)) ($generated@@87 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@356 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@281 $generated@@177 $generated@@177)) (= (type $generated@@362) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@355 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@98 ($generated@@279 $generated@@361) ($generated@@175 ($generated@@306 $generated@@168 $generated@@362)))) (= ($generated@@98 ($generated@@356 $generated@@361) ($generated@@175 ($generated@@306 $generated@@168 $generated@@362))) ($generated@@176 ($generated@@306 $generated@@168 $generated@@362))))))
 :pattern ( ($generated@@98 ($generated@@355 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@264 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@263 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@98 ($generated@@316 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@98 ($generated@@261 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@98 ($generated@@348 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@98 ($generated@@261 $generated@@363) $generated@@367))
 :pattern ( ($generated@@98 ($generated@@348 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@98 ($generated@@316 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@282 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@281 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@98 ($generated@@327 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@98 ($generated@@279 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@98 ($generated@@356 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@98 ($generated@@279 $generated@@368) $generated@@372))
 :pattern ( ($generated@@98 ($generated@@356 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@98 ($generated@@327 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@70)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (and (= (type $generated@@376) ($generated@@263 $generated@@177 $generated@@177)) (= (type $generated@@377) $generated@@70)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@261 $generated@@376) $generated@@380))) (and ($generated@@220 ($generated@@98 ($generated@@348 $generated@@376) $generated@@380) $generated@@378 $generated@@379) ($generated@@220 $generated@@380 $generated@@377 $generated@@379)))
 :pattern ( ($generated@@98 ($generated@@348 $generated@@376) $generated@@380))
 :pattern ( ($generated@@98 ($generated@@261 $generated@@376) $generated@@380))
))))
 :pattern ( ($generated@@95 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@70)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@281 $generated@@177 $generated@@177)) (= (type $generated@@385) $generated@@70)) (= (type $generated@@386) $generated@@70)) (= (type $generated@@387) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@279 $generated@@384) $generated@@388))) (and ($generated@@220 ($generated@@98 ($generated@@356 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@220 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@98 ($generated@@356 $generated@@384) $generated@@388))
 :pattern ( ($generated@@98 ($generated@@279 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@95 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= (type ($generated@@389 $generated@@390 $generated@@391)) ($generated@@87 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@394)))
 (=> (and (and (= (type $generated@@393) ($generated@@87 $generated@@396 $generated@@4)) (= (type $generated@@395) $generated@@396)) ($generated@@0 ($generated@@98 $generated@@393 $generated@@395))) ($generated@@0 ($generated@@98 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))))
 :pattern ( ($generated@@389 $generated@@393 $generated@@394) ($generated@@98 $generated@@393 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@398)))
 (=> (and (= (type $generated@@397) ($generated@@87 $generated@@400 $generated@@4)) (= (type $generated@@399) $generated@@400)) (= ($generated@@0 ($generated@@98 ($generated@@389 $generated@@397 $generated@@398) $generated@@399))  (or (= $generated@@399 $generated@@398) ($generated@@0 ($generated@@98 $generated@@397 $generated@@399))))))
 :pattern ( ($generated@@98 ($generated@@389 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@401) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@402) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@403) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@401 $generated@@403))) (and ($generated@@154 $generated@@401 $generated@@402) ($generated@@154 $generated@@402 $generated@@403))) ($generated@@154 $generated@@401 $generated@@403))
 :pattern ( ($generated@@154 $generated@@401 $generated@@402) ($generated@@154 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@87 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@283 (type $generated@@406))))
(let (($generated@@408 ($generated@@282 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@281 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@280 $generated@@408 $generated@@407)) (= ($generated@@279 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@279 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@283 (type $generated@@409))))
(let (($generated@@411 ($generated@@282 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@281 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@280 $generated@@411 $generated@@410)) (= ($generated@@327 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@327 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@283 (type $generated@@412))))
(let (($generated@@414 ($generated@@282 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@281 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@280 $generated@@414 $generated@@413)) (= ($generated@@355 $generated@@412) ($generated@@404 $generated@@177))))))
 :pattern ( ($generated@@355 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@265 (type $generated@@415))))
(let (($generated@@417 ($generated@@264 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@263 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@262 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@177) (= (type $generated@@419) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@347 $generated@@415) ($generated@@240 ($generated@@190 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@347 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@283 (type $generated@@420))))
(let (($generated@@422 ($generated@@282 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@281 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@280 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@177) (= (type $generated@@424) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@355 $generated@@420) ($generated@@240 ($generated@@190 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@355 $generated@@420))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@76)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@T) ) (!  (=> (and (= (type $generated@@427) $generated@@76) (= (type $generated@@428) $generated@@74)) (and (= ($generated@@425 ($generated@@198 $generated@@429 $generated@@427 $generated@@428)) $generated@@427) (= ($generated@@83 ($generated@@198 $generated@@429 $generated@@427 $generated@@428)) $generated@@428)))
 :pattern ( ($generated@@198 $generated@@429 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@177) ($generated@@191 $generated@@430 $generated@@46)) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@430)) $generated@@430) ($generated@@93 ($generated@@306 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@191 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@177) ($generated@@191 $generated@@431 $generated@@47)) (and (= ($generated@@240 ($generated@@306 $generated@@3 $generated@@431)) $generated@@431) ($generated@@93 ($generated@@306 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@191 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@177) ($generated@@191 $generated@@432 $generated@@44)) (and (= ($generated@@240 ($generated@@306 $generated@@4 $generated@@432)) $generated@@432) ($generated@@93 ($generated@@306 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@191 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 21))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@177) ($generated@@191 $generated@@434 $generated@@45)) (and (= ($generated@@240 ($generated@@306 $generated@@433 $generated@@434)) $generated@@434) ($generated@@93 ($generated@@306 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@191 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@70) (= ($generated@@191 ($generated@@240 $generated@@435) $generated@@436) ($generated@@93 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@191 ($generated@@240 $generated@@435) $generated@@436))
)))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@437) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@438) $generated@@88)) (or ($generated@@90 $generated@@437 $generated@@438) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@437) (and (not (= $generated@@438 $generated@@92)) (and ($generated@@93 $generated@@438 $generated@@94) ($generated@@95 $generated@@438 $generated@@94 $generated@@437))))))) (= ($generated@@86 $generated@@437 $generated@@438) (= ($generated ($generated@@97 ($generated@@98 $generated@@437 $generated@@438) $generated@@99)) ($generated@@96 8))))
 :pattern ( ($generated@@86 $generated@@437 $generated@@438) ($generated@@91 $generated@@437))
))))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@100 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@87 $generated@@440 $generated@@2)) (<= 0 ($generated@@255 $generated@@439))))
 :pattern ( ($generated@@255 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@235 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@234 $generated@@442)) (<= 0 ($generated@@233 $generated@@441))))
 :pattern ( ($generated@@233 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@70)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@70) (= (type $generated@@446) $generated@@70)) (= ($generated@@443 ($generated@@373 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@373 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@70)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@70) (= (type $generated@@450) $generated@@70)) (= ($generated@@447 ($generated@@373 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@373 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@70) (= (type $generated@@452) $generated@@70)) (= ($generated@@81 ($generated@@373 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@373 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@70)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@70) (= (type $generated@@456) $generated@@70)) (= ($generated@@453 ($generated@@381 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@381 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@70)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@70) (= (type $generated@@460) $generated@@70)) (= ($generated@@457 ($generated@@381 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@381 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@70) (= (type $generated@@462) $generated@@70)) (= ($generated@@81 ($generated@@381 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@381 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@177) (= (type $generated@@464) $generated@@177)) (= ($generated@@226 ($generated@@190 $generated@@463 $generated@@464)) $generated@@62))
 :pattern ( ($generated@@190 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@70)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@70) (= (type $generated@@468) $generated@@70)) (= ($generated@@465 ($generated@@167 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@167 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@70) (= (type $generated@@472) $generated@@70)) (= ($generated@@469 ($generated@@167 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@167 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@177) (= (type $generated@@474) $generated@@177)) (= ($generated@@175 ($generated@@190 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@190 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@177) (= (type $generated@@476) $generated@@177)) (= ($generated@@176 ($generated@@190 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@190 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@479))
)) (forall (($generated@@480 T@U) ($generated@@481 Int) ) (! (let (($generated@@482 ($generated@@235 (type $generated@@480))))
(= (type ($generated@@478 $generated@@480 $generated@@481)) $generated@@482))
 :pattern ( ($generated@@478 $generated@@480 $generated@@481))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@234 $generated@@177)) (= (type $generated@@484) $generated@@70)) (= (type $generated@@485) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@483 ($generated@@477 $generated@@484) $generated@@485) (forall (($generated@@486 Int) ) (!  (=> (and (<= 0 $generated@@486) (< $generated@@486 ($generated@@233 $generated@@483))) ($generated@@220 ($generated@@478 $generated@@483 $generated@@486) $generated@@484 $generated@@485))
 :pattern ( ($generated@@478 $generated@@483 $generated@@486))
))))
 :pattern ( ($generated@@95 $generated@@483 ($generated@@477 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
 (=> (= (type $generated@@487) ($generated@@87 $generated@@489 $generated@@4)) ($generated@@0 ($generated@@98 ($generated@@389 $generated@@487 $generated@@488) $generated@@488))))
 :pattern ( ($generated@@389 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@491 Int) ) (! (= ($generated@@490 ($generated@@150 $generated@@491)) $generated@@491)
 :pattern ( ($generated@@150 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@70) (= ($generated@@492 ($generated@@205 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@205 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@70) (= ($generated@@81 ($generated@@205 $generated@@495)) $generated@@54))
 :pattern ( ($generated@@205 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@70) (= ($generated@@496 ($generated@@210 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@210 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@70) (= ($generated@@81 ($generated@@210 $generated@@499)) $generated@@55))
 :pattern ( ($generated@@210 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@70) (= ($generated@@500 ($generated@@182 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@182 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@70) (= ($generated@@81 ($generated@@182 $generated@@503)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@70) (= ($generated@@504 ($generated@@477 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@477 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@70) (= ($generated@@81 ($generated@@477 $generated@@507)) $generated@@57))
 :pattern ( ($generated@@477 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(= ($generated@@306 $generated@@509 ($generated@@240 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@240 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@263 $generated@@177 $generated@@177)) (= (type $generated@@511) $generated@@70)) (= (type $generated@@512) $generated@@70)) (= ($generated@@93 $generated@@510 ($generated@@373 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@261 $generated@@510) $generated@@513))) (and ($generated@@191 ($generated@@98 ($generated@@348 $generated@@510) $generated@@513) $generated@@512) ($generated@@191 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@98 ($generated@@348 $generated@@510) $generated@@513))
 :pattern ( ($generated@@98 ($generated@@261 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@93 $generated@@510 ($generated@@373 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@281 $generated@@177 $generated@@177)) (= (type $generated@@515) $generated@@70)) (= (type $generated@@516) $generated@@70)) (= ($generated@@93 $generated@@514 ($generated@@381 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@279 $generated@@514) $generated@@517))) (and ($generated@@191 ($generated@@98 ($generated@@356 $generated@@514) $generated@@517) $generated@@516) ($generated@@191 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@98 ($generated@@356 $generated@@514) $generated@@517))
 :pattern ( ($generated@@98 ($generated@@279 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@93 $generated@@514 ($generated@@381 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@520) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@521) $generated@@88)) (=> (and (and (and ($generated@@91 $generated@@519) ($generated@@91 $generated@@520)) (and (not (= $generated@@521 $generated@@92)) ($generated@@93 $generated@@521 $generated@@94))) (and ($generated@@518 $generated@@519) ($generated@@154 $generated@@519 $generated@@520))) (=> (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@73 (type $generated@@523))))
 (=> (and (and (= (type $generated@@522) $generated@@88) (= (type $generated@@523) ($generated@@72 $generated@@524))) (and (not (= $generated@@522 $generated@@92)) (= $generated@@522 $generated@@521))) (= ($generated@@97 ($generated@@98 $generated@@519 $generated@@522) $generated@@523) ($generated@@97 ($generated@@98 $generated@@520 $generated@@522) $generated@@523))))
 :no-pattern (type $generated@@522)
 :no-pattern (type $generated@@523)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
 :no-pattern ($generated $generated@@523)
 :no-pattern ($generated@@0 $generated@@523)
)) (= ($generated@@86 $generated@@519 $generated@@521) ($generated@@86 $generated@@520 $generated@@521)))))
 :pattern ( ($generated@@518 $generated@@519) ($generated@@154 $generated@@519 $generated@@520) ($generated@@86 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@177) (= (type $generated@@528) $generated@@177)) (< ($generated@@525 $generated@@527) ($generated@@526 ($generated@@190 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@190 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@177) (= (type $generated@@530) $generated@@177)) (< ($generated@@525 $generated@@530) ($generated@@526 ($generated@@190 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@190 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@177) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@70)) ($generated@@191 $generated@@531 ($generated@@373 $generated@@532 $generated@@533))) (and (= ($generated@@240 ($generated@@306 ($generated@@263 $generated@@177 $generated@@177) $generated@@531)) $generated@@531) ($generated@@93 ($generated@@306 ($generated@@263 $generated@@177 $generated@@177) $generated@@531) ($generated@@373 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@191 $generated@@531 ($generated@@373 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@177) (= (type $generated@@535) $generated@@70)) (= (type $generated@@536) $generated@@70)) ($generated@@191 $generated@@534 ($generated@@381 $generated@@535 $generated@@536))) (and (= ($generated@@240 ($generated@@306 ($generated@@281 $generated@@177 $generated@@177) $generated@@534)) $generated@@534) ($generated@@93 ($generated@@306 ($generated@@281 $generated@@177 $generated@@177) $generated@@534) ($generated@@381 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@191 $generated@@534 ($generated@@381 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@70) (= (type $generated@@538) $generated@@70)) (= (type $generated@@539) $generated@@177)) ($generated@@191 $generated@@539 ($generated@@167 $generated@@537 $generated@@538))) (and (= ($generated@@240 ($generated@@306 $generated@@168 $generated@@539)) $generated@@539) ($generated@@93 ($generated@@306 $generated@@168 $generated@@539) ($generated@@167 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@191 $generated@@539 ($generated@@167 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@541 T@T) ) (! (= (type ($generated@@540 $generated@@541)) ($generated@@87 $generated@@541 $generated@@4))
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@98 ($generated@@540 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@98 ($generated@@540 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@98 ($generated@@404 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@98 ($generated@@404 $generated@@545) $generated@@544)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@552 T@T) ($generated@@553 T@T) ) (= ($generated@@1 ($generated@@548 $generated@@552 $generated@@553)) 22)) (forall (($generated@@554 T@T) ($generated@@555 T@T) ) (! (= ($generated@@549 ($generated@@548 $generated@@554 $generated@@555)) $generated@@554)
 :pattern ( ($generated@@548 $generated@@554 $generated@@555))
))) (forall (($generated@@556 T@T) ($generated@@557 T@T) ) (! (= ($generated@@550 ($generated@@548 $generated@@556 $generated@@557)) $generated@@557)
 :pattern ( ($generated@@548 $generated@@556 $generated@@557))
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@550 (type $generated@@558))))
(= (type ($generated@@546 $generated@@558 $generated@@559 $generated@@560)) $generated@@561))
 :pattern ( ($generated@@546 $generated@@558 $generated@@559 $generated@@560))
))) (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
(let (($generated@@567 (type $generated@@563)))
(= (type ($generated@@551 $generated@@562 $generated@@563 $generated@@564 $generated@@565)) ($generated@@548 $generated@@567 $generated@@566))))
 :pattern ( ($generated@@551 $generated@@562 $generated@@563 $generated@@564 $generated@@565))
))) (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@550 (type $generated@@568))))
 (=> (= (type $generated@@571) $generated@@572) (= ($generated@@546 ($generated@@551 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@569 $generated@@570) $generated@@571)))
 :weight 0
))) (and (and (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (or (= $generated@@575 $generated@@577) (= ($generated@@546 ($generated@@551 $generated@@574 $generated@@575 $generated@@576 $generated@@573) $generated@@577 $generated@@578) ($generated@@546 $generated@@574 $generated@@577 $generated@@578)))
 :weight 0
)) (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (or (= $generated@@582 $generated@@584) (= ($generated@@546 ($generated@@551 $generated@@580 $generated@@581 $generated@@582 $generated@@579) $generated@@583 $generated@@584) ($generated@@546 $generated@@580 $generated@@583 $generated@@584)))
 :weight 0
))) (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (or true (= ($generated@@546 ($generated@@551 $generated@@586 $generated@@587 $generated@@588 $generated@@585) $generated@@589 $generated@@590) ($generated@@546 $generated@@586 $generated@@589 $generated@@590)))
 :weight 0
)))) (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (= (type ($generated@@547 $generated@@591 $generated@@592 $generated@@593 $generated@@594)) ($generated@@548 $generated@@88 $generated@@4))
 :pattern ( ($generated@@547 $generated@@591 $generated@@592 $generated@@593 $generated@@594))
))))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@73 (type $generated@@600))))
 (=> (and (and (and (and (and (= (type $generated@@595) $generated@@88) (= (type $generated@@596) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@597) ($generated@@72 $generated@@4))) (= (type $generated@@598) $generated@@88)) (= (type $generated@@599) $generated@@88)) (= (type $generated@@600) ($generated@@72 $generated@@601))) (= ($generated@@0 ($generated@@546 ($generated@@547 $generated@@595 $generated@@596 $generated@@597 $generated@@598) $generated@@599 $generated@@600))  (=> (and (not (= $generated@@599 $generated@@595)) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@596 $generated@@599) $generated@@597))) (= $generated@@599 $generated@@598)))))
 :pattern ( ($generated@@546 ($generated@@547 $generated@@595 $generated@@596 $generated@@597 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (= (type ($generated@@602 $generated@@603 $generated@@604 $generated@@605 $generated@@606)) ($generated@@548 $generated@@88 $generated@@4))
 :pattern ( ($generated@@602 $generated@@603 $generated@@604 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@73 (type $generated@@612))))
 (=> (and (and (and (and (and (= (type $generated@@607) $generated@@88) (= (type $generated@@608) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@609) ($generated@@72 $generated@@4))) (= (type $generated@@610) $generated@@88)) (= (type $generated@@611) $generated@@88)) (= (type $generated@@612) ($generated@@72 $generated@@613))) (= ($generated@@0 ($generated@@546 ($generated@@602 $generated@@607 $generated@@608 $generated@@609 $generated@@610) $generated@@611 $generated@@612))  (=> (and (not (= $generated@@611 $generated@@607)) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@608 $generated@@611) $generated@@609))) (= $generated@@611 $generated@@610)))))
 :pattern ( ($generated@@546 ($generated@@602 $generated@@607 $generated@@608 $generated@@609 $generated@@610) $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@77)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@70) (= (type $generated@@617) $generated@@70)) (and (= ($generated@@81 ($generated@@167 $generated@@616 $generated@@617)) $generated@@63) (= ($generated@@614 ($generated@@167 $generated@@616 $generated@@617)) $generated@@67)))
 :pattern ( ($generated@@167 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@168) (= ($generated@@525 ($generated@@240 $generated@@618)) ($generated@@526 $generated@@618)))
 :pattern ( ($generated@@525 ($generated@@240 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@177) ($generated@@191 $generated@@619 ($generated@@150 0))) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@619)) $generated@@619) ($generated@@93 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@619) ($generated@@150 0))))
 :pattern ( ($generated@@191 $generated@@619 ($generated@@150 0)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@177) (= (type $generated@@621) $generated@@70)) ($generated@@191 $generated@@620 ($generated@@205 $generated@@621))) (and (= ($generated@@240 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@620)) $generated@@620) ($generated@@93 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@620) ($generated@@205 $generated@@621))))
 :pattern ( ($generated@@191 $generated@@620 ($generated@@205 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@177) (= (type $generated@@623) $generated@@70)) ($generated@@191 $generated@@622 ($generated@@210 $generated@@623))) (and (= ($generated@@240 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@622)) $generated@@622) ($generated@@93 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@622) ($generated@@210 $generated@@623))))
 :pattern ( ($generated@@191 $generated@@622 ($generated@@210 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@177) (= (type $generated@@625) $generated@@70)) ($generated@@191 $generated@@624 ($generated@@182 $generated@@625))) (and (= ($generated@@240 ($generated@@306 ($generated@@87 $generated@@177 $generated@@2) $generated@@624)) $generated@@624) ($generated@@93 ($generated@@306 ($generated@@87 $generated@@177 $generated@@2) $generated@@624) ($generated@@182 $generated@@625))))
 :pattern ( ($generated@@191 $generated@@624 ($generated@@182 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@177) (= (type $generated@@627) $generated@@70)) ($generated@@191 $generated@@626 ($generated@@477 $generated@@627))) (and (= ($generated@@240 ($generated@@306 ($generated@@234 $generated@@177) $generated@@626)) $generated@@626) ($generated@@93 ($generated@@306 ($generated@@234 $generated@@177) $generated@@626) ($generated@@477 $generated@@627))))
 :pattern ( ($generated@@191 $generated@@626 ($generated@@477 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@100 (type $generated@@629))))
 (=> (and (= (type $generated@@629) ($generated@@87 $generated@@631 $generated@@4)) (= (type $generated@@630) ($generated@@87 $generated@@631 $generated@@4))) (= ($generated@@628 $generated@@629 $generated@@630) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@631) ($generated@@0 ($generated@@98 $generated@@629 $generated@@632))) ($generated@@0 ($generated@@98 $generated@@630 $generated@@632)))
 :pattern ( ($generated@@98 $generated@@629 $generated@@632))
 :pattern ( ($generated@@98 $generated@@630 $generated@@632))
)))))
 :pattern ( ($generated@@628 $generated@@629 $generated@@630))
)))
(assert (= ($generated@@81 $generated@@158) $generated@@65))
(assert (= ($generated@@614 $generated@@158) $generated@@68))
(assert (= ($generated@@81 $generated@@94) $generated@@66))
(assert (= ($generated@@614 $generated@@94) $generated@@68))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@633) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@634) $generated@@70)) (= (type $generated@@635) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@633 ($generated@@182 $generated@@634) $generated@@635) (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@633 $generated@@636)))) ($generated@@220 $generated@@636 $generated@@634 $generated@@635))
 :pattern ( ($generated@@98 $generated@@633 $generated@@636))
))))
 :pattern ( ($generated@@95 $generated@@633 ($generated@@182 $generated@@634) $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@168) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@639) (and ($generated@@166 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@70) ($generated@@95 $generated@@637 ($generated@@167 $generated@@638 $generated@@640) $generated@@639))
 :pattern ( ($generated@@95 $generated@@637 ($generated@@167 $generated@@638 $generated@@640) $generated@@639))
))))) ($generated@@220 ($generated@@175 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@220 ($generated@@175 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@168) (= (type $generated@@642) $generated@@70)) (= (type $generated@@643) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@643) (and ($generated@@166 $generated@@641) (exists (($generated@@644 T@U) ) (!  (and (= (type $generated@@644) $generated@@70) ($generated@@95 $generated@@641 ($generated@@167 $generated@@644 $generated@@642) $generated@@643))
 :pattern ( ($generated@@95 $generated@@641 ($generated@@167 $generated@@644 $generated@@642) $generated@@643))
))))) ($generated@@220 ($generated@@176 $generated@@641) $generated@@642 $generated@@643))
 :pattern ( ($generated@@220 ($generated@@176 $generated@@641) $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@177) (= (type $generated@@646) $generated@@177)) (= ($generated@@190 ($generated@@216 $generated@@645) ($generated@@216 $generated@@646)) ($generated@@216 ($generated@@190 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@190 ($generated@@216 $generated@@645) ($generated@@216 $generated@@646)))
)))
(assert (forall (($generated@@647 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@96 $generated@@647))) ($generated@@216 ($generated@@240 ($generated@@8 $generated@@647))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@96 $generated@@647))))
)))
(assert (forall (($generated@@648 T@U) ) (! (= ($generated@@240 ($generated@@216 $generated@@648)) ($generated@@216 ($generated@@240 $generated@@648)))
 :pattern ( ($generated@@240 ($generated@@216 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (! (let (($generated@@650 ($generated@@235 (type $generated@@649))))
 (=> (and (= (type $generated@@649) ($generated@@234 $generated@@650)) (= ($generated@@233 $generated@@649) 0)) (= $generated@@649 ($generated@@232 $generated@@650))))
 :pattern ( ($generated@@233 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@652)))
 (=> (and (and (= (type $generated@@651) ($generated@@87 $generated@@654 $generated@@2)) (= (type $generated@@653) $generated@@2)) (<= 0 ($generated $generated@@653))) (= ($generated@@255 ($generated@@102 $generated@@651 $generated@@652 $generated@@653)) (+ (- ($generated@@255 $generated@@651) ($generated ($generated@@98 $generated@@651 $generated@@652))) ($generated $generated@@653)))))
 :pattern ( ($generated@@255 ($generated@@102 $generated@@651 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@656) $generated@@2)) ($generated@@95 $generated@@656 $generated@@46 $generated@@655))
 :pattern ( ($generated@@95 $generated@@656 $generated@@46 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@658) $generated@@3)) ($generated@@95 $generated@@658 $generated@@47 $generated@@657))
 :pattern ( ($generated@@95 $generated@@658 $generated@@47 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@660) $generated@@4)) ($generated@@95 $generated@@660 $generated@@44 $generated@@659))
 :pattern ( ($generated@@95 $generated@@660 $generated@@44 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@662) $generated@@433)) ($generated@@95 $generated@@662 $generated@@45 $generated@@661))
 :pattern ( ($generated@@95 $generated@@662 $generated@@45 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@664) $generated@@177)) ($generated@@95 $generated@@664 $generated@@48 $generated@@663))
 :pattern ( ($generated@@95 $generated@@664 $generated@@48 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@234 $generated@@177)) (= (type $generated@@666) $generated@@70)) (= ($generated@@93 $generated@@665 ($generated@@477 $generated@@666)) (forall (($generated@@667 Int) ) (!  (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@233 $generated@@665))) ($generated@@191 ($generated@@478 $generated@@665 $generated@@667) $generated@@666))
 :pattern ( ($generated@@478 $generated@@665 $generated@@667))
))))
 :pattern ( ($generated@@93 $generated@@665 ($generated@@477 $generated@@666)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 Int) ) (!  (=> (= (type $generated@@669) ($generated@@234 $generated@@177)) (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@233 $generated@@669))) (< ($generated@@526 ($generated@@306 $generated@@168 ($generated@@478 $generated@@669 $generated@@670))) ($generated@@668 $generated@@669))))
 :pattern ( ($generated@@526 ($generated@@306 $generated@@168 ($generated@@478 $generated@@669 $generated@@670))))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) ($generated@@263 $generated@@177 $generated@@177)) (= (type $generated@@672) $generated@@70)) (= (type $generated@@673) $generated@@70)) ($generated@@93 $generated@@671 ($generated@@373 $generated@@672 $generated@@673))) (and (and ($generated@@93 ($generated@@261 $generated@@671) ($generated@@205 $generated@@672)) ($generated@@93 ($generated@@316 $generated@@671) ($generated@@205 $generated@@673))) ($generated@@93 ($generated@@347 $generated@@671) ($generated@@205 ($generated@@167 $generated@@672 $generated@@673)))))
 :pattern ( ($generated@@93 $generated@@671 ($generated@@373 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@281 $generated@@177 $generated@@177)) (= (type $generated@@675) $generated@@70)) (= (type $generated@@676) $generated@@70)) ($generated@@93 $generated@@674 ($generated@@381 $generated@@675 $generated@@676))) (and (and ($generated@@93 ($generated@@279 $generated@@674) ($generated@@210 $generated@@675)) ($generated@@93 ($generated@@327 $generated@@674) ($generated@@210 $generated@@676))) ($generated@@93 ($generated@@355 $generated@@674) ($generated@@210 ($generated@@167 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@93 $generated@@674 ($generated@@381 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@2) ($generated@@93 $generated@@677 $generated@@46))
 :pattern ( ($generated@@93 $generated@@677 $generated@@46))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@3) ($generated@@93 $generated@@678 $generated@@47))
 :pattern ( ($generated@@93 $generated@@678 $generated@@47))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@4) ($generated@@93 $generated@@679 $generated@@44))
 :pattern ( ($generated@@93 $generated@@679 $generated@@44))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@433) ($generated@@93 $generated@@680 $generated@@45))
 :pattern ( ($generated@@93 $generated@@680 $generated@@45))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@177) ($generated@@93 $generated@@681 $generated@@48))
 :pattern ( ($generated@@93 $generated@@681 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () Bool)
(declare-fun $generated@@686 () T@U)
(assert  (and (and (and (= (type $generated@@682) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@683) $generated@@88)) (= (type $generated@@684) ($generated@@548 $generated@@88 $generated@@4))) (= (type $generated@@686) ($generated@@548 $generated@@88 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@687  (and (=> (= (ControlFlow 0 9) (- 0 10)) (=> ($generated@@86 $generated@@682 $generated@@683) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@682 $generated@@683) $generated@@99))))) (=> (=> ($generated@@86 $generated@@682 $generated@@683) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@682 $generated@@683) $generated@@99)))) (=> (= (ControlFlow 0 9) (- 0 8)) (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@682 $generated@@683) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@682 $generated@@683)))))))
(let (($generated@@688  (=> (and (and (= $generated@@684 ($generated@@602 $generated@@92 $generated@@682 $generated@@60 $generated@@683)) (= $generated@@685 ($generated@@0 ($generated@@546 $generated@@686 $generated@@683 $generated@@99)))) (and (= ($generated@@86 $generated@@682 $generated@@683) (= ($generated ($generated@@97 ($generated@@98 $generated@@682 $generated@@683) $generated@@99)) ($generated@@96 8))) ($generated@@93 ($generated@@11 ($generated@@86 $generated@@682 $generated@@683)) $generated@@44))) (and (=> (= (ControlFlow 0 11) (- 0 12)) $generated@@685) (=> $generated@@685 (=> (= (ControlFlow 0 11) 9) $generated@@687))))))
(let (($generated@@689 true))
(let (($generated@@690  (=> (and (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@682 $generated@@683) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@682 $generated@@683)) (= (ControlFlow 0 4) 1)) $generated@@689)))
(let (($generated@@691  (=> (and (= ($generated ($generated@@97 ($generated@@98 $generated@@682 $generated@@683) $generated@@99)) ($generated@@96 8)) ($generated@@95 $generated@@683 $generated@@158 $generated@@682)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@683 $generated@@683) (and ($generated@@628 ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683)) ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683))) (not ($generated@@628 ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683)) ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683))))))) (=> (or (= $generated@@683 $generated@@683) (and ($generated@@628 ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683)) ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683))) (not ($generated@@628 ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683)) ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683)))))) (=> (or (= $generated@@683 $generated@@683) ($generated@@90 $generated@@682 $generated@@683)) (=> (and ($generated@@86 $generated@@682 $generated@@683) (= (ControlFlow 0 2) 1)) $generated@@689)))))))
(let (($generated@@692  (=> (=> ($generated@@86 $generated@@682 $generated@@683) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@682 $generated@@683) $generated@@99)))) (and (=> (= (ControlFlow 0 7) 2) $generated@@691) (=> (= (ControlFlow 0 7) 4) $generated@@690)))))
(let (($generated@@693  (=> ($generated@@95 $generated@@683 $generated@@158 $generated@@682) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (= $generated@@683 $generated@@683) (and ($generated@@628 ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683)) ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683))) (not ($generated@@628 ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683)) ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683))))))) (=> (or (= $generated@@683 $generated@@683) (and ($generated@@628 ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683)) ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683))) (not ($generated@@628 ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683)) ($generated@@389 ($generated@@540 $generated@@177) ($generated@@240 $generated@@683)))))) (=> (or (= $generated@@683 $generated@@683) ($generated@@90 $generated@@682 $generated@@683)) (=> (and ($generated@@86 $generated@@682 $generated@@683) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@682 $generated@@683) $generated@@99)))) (and (=> (= (ControlFlow 0 5) 2) $generated@@691) (=> (= (ControlFlow 0 5) 4) $generated@@690)))))))))
(let (($generated@@694  (=> (= $generated@@686 ($generated@@547 $generated@@92 $generated@@682 $generated@@60 $generated@@683)) (and (and (=> (= (ControlFlow 0 13) 11) $generated@@688) (=> (= (ControlFlow 0 13) 5) $generated@@693)) (=> (= (ControlFlow 0 13) 7) $generated@@692)))))
(let (($generated@@695  (=> (and ($generated@@91 $generated@@682) ($generated@@518 $generated@@682)) (=> (and (and (not (= $generated@@683 $generated@@92)) (and ($generated@@93 $generated@@683 $generated@@94) ($generated@@95 $generated@@683 $generated@@94 $generated@@682))) (and (= 0 $generated@@85) (= (ControlFlow 0 14) 13))) $generated@@694))))
$generated@@695))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 () Int)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) Int)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 () T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@T T@U T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@232 (T@T) T@U)
(declare-fun $generated@@233 (T@U) Int)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@T T@T) T@U)
(declare-fun $generated@@263 (T@T T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U T@U) Bool)
(declare-fun $generated@@306 (T@T T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@373 (T@U T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@T) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@421 () T@T)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@464 (T@U Int) T@U)
(declare-fun $generated@@473 (T@U) Int)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@501 (T@U) Bool)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U T@U T@U) T@U)
(declare-fun $generated@@526 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@527 (T@T T@T) T@T)
(declare-fun $generated@@528 (T@T) T@T)
(declare-fun $generated@@529 (T@T) T@T)
(declare-fun $generated@@530 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@630 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@104 $generated@@105)) 13)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@100 ($generated@@87 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@87 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@101 ($generated@@87 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@87 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@101 (type $generated@@110))))
(= (type ($generated@@98 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 (type $generated@@115)))
(let (($generated@@117 (type $generated@@114)))
(= (type ($generated@@102 $generated@@113 $generated@@114 $generated@@115)) ($generated@@87 $generated@@117 $generated@@116))))
 :pattern ( ($generated@@102 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@101 (type $generated@@118))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@98 ($generated@@102 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@98 ($generated@@102 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@98 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@98 ($generated@@102 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@98 $generated@@127 $generated@@129)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@73 (type $generated@@131))))
(= (type ($generated@@97 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@97 $generated@@130 $generated@@131))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= (type ($generated@@103 $generated@@133 $generated@@134 $generated@@135)) $generated@@89)
 :pattern ( ($generated@@103 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@138) $generated@@139) (= ($generated@@97 ($generated@@103 $generated@@136 $generated@@137 $generated@@138) $generated@@137) $generated@@138)))
 :weight 0
))) (and (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@97 ($generated@@103 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@97 $generated@@141 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or true (= ($generated@@97 ($generated@@103 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@97 $generated@@145 $generated@@147)))
 :weight 0
)))) (= (type $generated@@92) $generated@@88)) (= (type $generated@@94) $generated@@70)) (= (type $generated@@99) ($generated@@72 $generated@@2))))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@149) $generated@@88)) (or ($generated@@90 $generated@@148 $generated@@149) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@148) (and (not (= $generated@@149 $generated@@92)) (and ($generated@@93 $generated@@149 $generated@@94) ($generated@@95 $generated@@149 $generated@@94 $generated@@148))))))) (and (=> ($generated@@86 $generated@@148 $generated@@149) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)))) (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@148 $generated@@149))))
 :pattern ( ($generated@@86 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@88) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (= (type $generated@@158) $generated@@70))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@88) (= (type $generated@@160) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@159 $generated@@158 $generated@@160)  (or (= $generated@@159 $generated@@92) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@70)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@164) $generated@@88)) (and ($generated@@91 $generated@@163) (and (not (= $generated@@164 $generated@@92)) (= ($generated@@161 $generated@@164) $generated@@158)))) ($generated@@93 ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99) $generated@@46))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@93 $generated@@165 ($generated@@150 0)))
 :pattern ( ($generated@@93 $generated@@165 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@70)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@70) (= (type $generated@@172) $generated@@70)) (= (type $generated@@173) $generated@@168)) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 17) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@70)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@70)) ($generated@@93 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@93 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@88) (= ($generated@@93 $generated@@187 $generated@@158)  (or (= $generated@@187 $generated@@92) (= ($generated@@161 $generated@@187) $generated@@158))))
 :pattern ( ($generated@@93 $generated@@187 $generated@@158))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (= (type $generated@@188) $generated@@88) (= (type $generated@@189) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@188 $generated@@94 $generated@@189) ($generated@@95 $generated@@188 $generated@@158 $generated@@189)))
 :pattern ( ($generated@@95 $generated@@188 $generated@@94 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@192 $generated@@193)) $generated@@168)
 :pattern ( ($generated@@190 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (and (= (type $generated@@194) $generated@@70) (= (type $generated@@195) $generated@@70)) (= (type $generated@@196) $generated@@177)) (= (type $generated@@197) $generated@@177)) (= ($generated@@93 ($generated@@190 $generated@@196 $generated@@197) ($generated@@167 $generated@@194 $generated@@195))  (and ($generated@@191 $generated@@196 $generated@@194) ($generated@@191 $generated@@197 $generated@@195))))
 :pattern ( ($generated@@93 ($generated@@190 $generated@@196 $generated@@197) ($generated@@167 $generated@@194 $generated@@195)))
)))
(assert (= ($generated@@80 $generated@@99) 0))
(assert (forall (($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= (type ($generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@72 $generated@@199))
 :pattern ( ($generated@@198 $generated@@199 $generated@@200 $generated@@201))
)))
(assert (= ($generated@@198 $generated@@2 $generated@@64 $generated@@69) $generated@@99))
(assert  (not ($generated@@202 $generated@@99)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@168) (= (type $generated@@204) $generated@@168)) (= ($generated@@174 $generated@@203 $generated@@204) (= $generated@@203 $generated@@204)))
 :pattern ( ($generated@@174 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (= (type ($generated@@205 $generated@@206)) $generated@@70)
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@208) $generated@@70)) (= ($generated@@93 $generated@@207 ($generated@@205 $generated@@208)) (forall (($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@209) $generated@@177) ($generated@@0 ($generated@@98 $generated@@207 $generated@@209))) ($generated@@191 $generated@@209 $generated@@208))
 :pattern ( ($generated@@98 $generated@@207 $generated@@209))
))))
 :pattern ( ($generated@@93 $generated@@207 ($generated@@205 $generated@@208)))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@70)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@213) $generated@@70)) (= ($generated@@93 $generated@@212 ($generated@@210 $generated@@213)) (forall (($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@177) ($generated@@0 ($generated@@98 $generated@@212 $generated@@214))) ($generated@@191 $generated@@214 $generated@@213))
 :pattern ( ($generated@@98 $generated@@212 $generated@@214))
))))
 :pattern ( ($generated@@93 $generated@@212 ($generated@@210 $generated@@213)))
)))
(assert (forall (($generated@@215 Int) ) (! (= ($generated@@96 $generated@@215) $generated@@215)
 :pattern ( ($generated@@96 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (let (($generated@@218 (type $generated@@217)))
(= (type ($generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ) (! (= ($generated@@216 $generated@@219) $generated@@219)
 :pattern ( ($generated@@216 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@221) $generated@@70) (= (type $generated@@222) $generated@@70)) (= (type $generated@@223) $generated@@177)) (= (type $generated@@224) $generated@@177)) (= (type $generated@@225) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@91 $generated@@225)) (= ($generated@@95 ($generated@@190 $generated@@223 $generated@@224) ($generated@@167 $generated@@221 $generated@@222) $generated@@225)  (and ($generated@@220 $generated@@223 $generated@@221 $generated@@225) ($generated@@220 $generated@@224 $generated@@222 $generated@@225))))
 :pattern ( ($generated@@95 ($generated@@190 $generated@@223 $generated@@224) ($generated@@167 $generated@@221 $generated@@222) $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@75)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@168) (= ($generated@@166 $generated@@228) (= ($generated@@226 $generated@@228) $generated@@62)))
 :pattern ( ($generated@@166 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@168) ($generated@@166 $generated@@229)) (exists (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (and (and (= (type $generated@@230) $generated@@177) (= (type $generated@@231) $generated@@177)) (= $generated@@229 ($generated@@190 $generated@@230 $generated@@231)))
 :no-pattern (type $generated@@230)
 :no-pattern (type $generated@@231)
 :no-pattern ($generated $generated@@230)
 :no-pattern ($generated@@0 $generated@@230)
 :no-pattern ($generated $generated@@231)
 :no-pattern ($generated@@0 $generated@@231)
)))
 :pattern ( ($generated@@166 $generated@@229))
)))
(assert  (and (and (forall (($generated@@236 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@236)) 18)) (forall (($generated@@237 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@234 $generated@@237))
))) (forall (($generated@@238 T@T) ) (! (= (type ($generated@@232 $generated@@238)) ($generated@@234 $generated@@238))
 :pattern ( ($generated@@232 $generated@@238))
))))
(assert (forall (($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@232 $generated@@239)) 0)
 :pattern ( ($generated@@232 $generated@@239))
)))
(assert ($generated@@202 $generated@@60))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@177)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@70) (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244) ($generated@@95 $generated@@242 $generated@@243 $generated@@244)))
 :pattern ( ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@246) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@247) $generated@@177)) (= (type $generated@@248) $generated@@70)) ($generated@@154 $generated@@245 $generated@@246)) ($generated@@220 $generated@@247 $generated@@248 $generated@@245)) ($generated@@220 $generated@@247 $generated@@248 $generated@@246))
 :pattern ( ($generated@@154 $generated@@245 $generated@@246) ($generated@@220 $generated@@247 $generated@@248 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@249) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@250) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@252) $generated@@70)) ($generated@@154 $generated@@249 $generated@@250)) ($generated@@95 $generated@@251 $generated@@252 $generated@@249)) ($generated@@95 $generated@@251 $generated@@252 $generated@@250))
 :pattern ( ($generated@@154 $generated@@249 $generated@@250) ($generated@@95 $generated@@251 $generated@@252 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@254) $generated@@88)) (=> (and (and ($generated@@91 $generated@@253) (and (not (= $generated@@254 $generated@@92)) (= ($generated@@161 $generated@@254) $generated@@158))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@253 $generated@@254) $generated@@60))) ($generated@@95 ($generated@@97 ($generated@@98 $generated@@253 $generated@@254) $generated@@99) $generated@@46 $generated@@253)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@253 $generated@@254) $generated@@99))
)))
(assert (forall (($generated@@257 T@T) ) (! (= (type ($generated@@256 $generated@@257)) ($generated@@87 $generated@@257 $generated@@2))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@100 (type $generated@@258))))
 (=> (= (type $generated@@258) ($generated@@87 $generated@@259 $generated@@2)) (and (= (= ($generated@@255 $generated@@258) 0) (= $generated@@258 ($generated@@256 $generated@@259))) (=> (not (= ($generated@@255 $generated@@258) 0)) (exists (($generated@@260 T@U) ) (!  (and (= (type $generated@@260) $generated@@259) (< 0 ($generated ($generated@@98 $generated@@258 $generated@@260))))
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
))))))
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert  (and (and (and (and (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@266 $generated@@267)) 19)) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@268 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@263 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@263 $generated@@270 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@263 $generated@@270 $generated@@271))
))) (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@264 (type $generated@@272))))
(= (type ($generated@@261 $generated@@272)) ($generated@@87 $generated@@273 $generated@@4)))
 :pattern ( ($generated@@261 $generated@@272))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= (type ($generated@@262 $generated@@274 $generated@@275)) ($generated@@263 $generated@@274 $generated@@275))
 :pattern ( ($generated@@262 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@T) ) (! (let (($generated@@278 (type $generated@@276)))
 (not ($generated@@0 ($generated@@98 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276))))
 :pattern ( (let (($generated@@278 (type $generated@@276)))
($generated@@98 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276)))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 20)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@87 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@98 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@98 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@297 $generated@@298 $generated@@299)) (and ($generated@@154 $generated@@298 $generated@@299) (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@73 (type $generated@@301))))
 (=> (and (and (= (type $generated@@300) $generated@@88) (= (type $generated@@301) ($generated@@72 $generated@@302))) (not ($generated@@202 $generated@@301))) (= ($generated@@97 ($generated@@98 $generated@@298 $generated@@300) $generated@@301) ($generated@@97 ($generated@@98 $generated@@299 $generated@@300) $generated@@301))))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@299 $generated@@300) $generated@@301))
))))
 :pattern ( ($generated@@297 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@100 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@87 $generated@@304 $generated@@2)) (= ($generated@@183 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@98 $generated@@303 $generated@@305))) (<= ($generated ($generated@@98 $generated@@303 $generated@@305)) ($generated@@255 $generated@@303))))
 :pattern ( ($generated@@98 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@183 $generated@@303))
)))
(assert (forall (($generated@@307 T@T) ($generated@@308 T@U) ) (! (= (type ($generated@@306 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@177) ($generated@@191 $generated@@309 $generated@@158)) (and (= ($generated@@240 ($generated@@306 $generated@@88 $generated@@309)) $generated@@309) ($generated@@93 ($generated@@306 $generated@@88 $generated@@309) $generated@@158)))
 :pattern ( ($generated@@191 $generated@@309 $generated@@158))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@177) ($generated@@191 $generated@@310 $generated@@94)) (and (= ($generated@@240 ($generated@@306 $generated@@88 $generated@@310)) $generated@@310) ($generated@@93 ($generated@@306 $generated@@88 $generated@@310) $generated@@94)))
 :pattern ( ($generated@@191 $generated@@310 $generated@@94))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@88) (= ($generated@@93 $generated@@311 $generated@@94)  (and ($generated@@93 $generated@@311 $generated@@158) (not (= $generated@@311 $generated@@92)))))
 :pattern ( ($generated@@93 $generated@@311 $generated@@94))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@265 (type $generated@@312))))
(let (($generated@@314 ($generated@@264 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@263 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@262 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) ($generated@@0 ($generated@@98 ($generated@@261 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@261 $generated@@312))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@265 (type $generated@@317))))
(= (type ($generated@@316 $generated@@317)) ($generated@@87 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@265 (type $generated@@319))))
(let (($generated@@321 ($generated@@264 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@263 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@262 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@320) ($generated@@0 ($generated@@98 ($generated@@316 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@283 (type $generated@@323))))
(let (($generated@@325 ($generated@@282 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@281 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@280 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@98 ($generated@@279 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@279 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@283 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@87 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@283 (type $generated@@330))))
(let (($generated@@332 ($generated@@282 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@281 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@280 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@98 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@335) $generated@@70)) (= ($generated@@93 $generated@@334 ($generated@@182 $generated@@335)) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@334 $generated@@336)))) ($generated@@191 $generated@@336 $generated@@335))
 :pattern ( ($generated@@98 $generated@@334 $generated@@336))
))))
 :pattern ( ($generated@@93 $generated@@334 ($generated@@182 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@338) $generated@@70)) (= (type $generated@@339) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@337 ($generated@@205 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@177) ($generated@@0 ($generated@@98 $generated@@337 $generated@@340))) ($generated@@220 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@98 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@95 $generated@@337 ($generated@@205 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@342) $generated@@70)) (= (type $generated@@343) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@341 ($generated@@210 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@177) ($generated@@0 ($generated@@98 $generated@@341 $generated@@344))) ($generated@@220 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@98 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@95 $generated@@341 ($generated@@210 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 (type $generated@@345)))
(= ($generated ($generated@@98 ($generated@@256 $generated@@346) $generated@@345)) 0))
 :pattern ( (let (($generated@@346 (type $generated@@345)))
($generated@@98 ($generated@@256 $generated@@346) $generated@@345)))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@265 (type $generated@@350))))
(let (($generated@@352 ($generated@@264 (type $generated@@350))))
(= (type ($generated@@348 $generated@@350)) ($generated@@87 $generated@@352 $generated@@351))))
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@263 $generated@@177 $generated@@177)) (= (type $generated@@354) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@347 $generated@@353) $generated@@354))  (and ($generated@@0 ($generated@@98 ($generated@@261 $generated@@353) ($generated@@175 ($generated@@306 $generated@@168 $generated@@354)))) (= ($generated@@98 ($generated@@348 $generated@@353) ($generated@@175 ($generated@@306 $generated@@168 $generated@@354))) ($generated@@176 ($generated@@306 $generated@@168 $generated@@354))))))
 :pattern ( ($generated@@98 ($generated@@347 $generated@@353) $generated@@354))
)))
(assert  (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@357)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@355 $generated@@357))
)) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@283 (type $generated@@358))))
(let (($generated@@360 ($generated@@282 (type $generated@@358))))
(= (type ($generated@@356 $generated@@358)) ($generated@@87 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@356 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@281 $generated@@177 $generated@@177)) (= (type $generated@@362) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@355 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@98 ($generated@@279 $generated@@361) ($generated@@175 ($generated@@306 $generated@@168 $generated@@362)))) (= ($generated@@98 ($generated@@356 $generated@@361) ($generated@@175 ($generated@@306 $generated@@168 $generated@@362))) ($generated@@176 ($generated@@306 $generated@@168 $generated@@362))))))
 :pattern ( ($generated@@98 ($generated@@355 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@264 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@263 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@98 ($generated@@316 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@98 ($generated@@261 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@98 ($generated@@348 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@98 ($generated@@261 $generated@@363) $generated@@367))
 :pattern ( ($generated@@98 ($generated@@348 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@98 ($generated@@316 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@282 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@281 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@98 ($generated@@327 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@98 ($generated@@279 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@98 ($generated@@356 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@98 ($generated@@279 $generated@@368) $generated@@372))
 :pattern ( ($generated@@98 ($generated@@356 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@98 ($generated@@327 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@70)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (and (= (type $generated@@376) ($generated@@263 $generated@@177 $generated@@177)) (= (type $generated@@377) $generated@@70)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@261 $generated@@376) $generated@@380))) (and ($generated@@220 ($generated@@98 ($generated@@348 $generated@@376) $generated@@380) $generated@@378 $generated@@379) ($generated@@220 $generated@@380 $generated@@377 $generated@@379)))
 :pattern ( ($generated@@98 ($generated@@348 $generated@@376) $generated@@380))
 :pattern ( ($generated@@98 ($generated@@261 $generated@@376) $generated@@380))
))))
 :pattern ( ($generated@@95 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@70)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@281 $generated@@177 $generated@@177)) (= (type $generated@@385) $generated@@70)) (= (type $generated@@386) $generated@@70)) (= (type $generated@@387) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@279 $generated@@384) $generated@@388))) (and ($generated@@220 ($generated@@98 ($generated@@356 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@220 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@98 ($generated@@356 $generated@@384) $generated@@388))
 :pattern ( ($generated@@98 ($generated@@279 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@95 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@389) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@390) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@391) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@389 $generated@@391))) (and ($generated@@154 $generated@@389 $generated@@390) ($generated@@154 $generated@@390 $generated@@391))) ($generated@@154 $generated@@389 $generated@@391))
 :pattern ( ($generated@@154 $generated@@389 $generated@@390) ($generated@@154 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@T) ) (! (= (type ($generated@@392 $generated@@393)) ($generated@@87 $generated@@393 $generated@@4))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@283 (type $generated@@394))))
(let (($generated@@396 ($generated@@282 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@281 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@280 $generated@@396 $generated@@395)) (= ($generated@@279 $generated@@394) ($generated@@392 $generated@@396))))))
 :pattern ( ($generated@@279 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@283 (type $generated@@397))))
(let (($generated@@399 ($generated@@282 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@281 $generated@@399 $generated@@398)) (= (= $generated@@397 ($generated@@280 $generated@@399 $generated@@398)) (= ($generated@@327 $generated@@397) ($generated@@392 $generated@@398))))))
 :pattern ( ($generated@@327 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@283 (type $generated@@400))))
(let (($generated@@402 ($generated@@282 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@281 $generated@@402 $generated@@401)) (= (= $generated@@400 ($generated@@280 $generated@@402 $generated@@401)) (= ($generated@@355 $generated@@400) ($generated@@392 $generated@@177))))))
 :pattern ( ($generated@@355 $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@265 (type $generated@@403))))
(let (($generated@@405 ($generated@@264 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@263 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@262 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (and (and (= (type $generated@@406) $generated@@177) (= (type $generated@@407) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@347 $generated@@403) ($generated@@240 ($generated@@190 $generated@@406 $generated@@407)))))
 :no-pattern (type $generated@@406)
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@347 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@283 (type $generated@@408))))
(let (($generated@@410 ($generated@@282 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@281 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@280 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (and (and (= (type $generated@@411) $generated@@177) (= (type $generated@@412) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@355 $generated@@408) ($generated@@240 ($generated@@190 $generated@@411 $generated@@412)))))
 :no-pattern (type $generated@@411)
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@355 $generated@@408))
)))
(assert (forall (($generated@@414 T@U) ) (! (= (type ($generated@@413 $generated@@414)) $generated@@76)
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@T) ) (!  (=> (and (= (type $generated@@415) $generated@@76) (= (type $generated@@416) $generated@@74)) (and (= ($generated@@413 ($generated@@198 $generated@@417 $generated@@415 $generated@@416)) $generated@@415) (= ($generated@@83 ($generated@@198 $generated@@417 $generated@@415 $generated@@416)) $generated@@416)))
 :pattern ( ($generated@@198 $generated@@417 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@177) ($generated@@191 $generated@@418 $generated@@46)) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@418)) $generated@@418) ($generated@@93 ($generated@@306 $generated@@2 $generated@@418) $generated@@46)))
 :pattern ( ($generated@@191 $generated@@418 $generated@@46))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@177) ($generated@@191 $generated@@419 $generated@@47)) (and (= ($generated@@240 ($generated@@306 $generated@@3 $generated@@419)) $generated@@419) ($generated@@93 ($generated@@306 $generated@@3 $generated@@419) $generated@@47)))
 :pattern ( ($generated@@191 $generated@@419 $generated@@47))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@177) ($generated@@191 $generated@@420 $generated@@44)) (and (= ($generated@@240 ($generated@@306 $generated@@4 $generated@@420)) $generated@@420) ($generated@@93 ($generated@@306 $generated@@4 $generated@@420) $generated@@44)))
 :pattern ( ($generated@@191 $generated@@420 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@421) 21))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@177) ($generated@@191 $generated@@422 $generated@@45)) (and (= ($generated@@240 ($generated@@306 $generated@@421 $generated@@422)) $generated@@422) ($generated@@93 ($generated@@306 $generated@@421 $generated@@422) $generated@@45)))
 :pattern ( ($generated@@191 $generated@@422 $generated@@45))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@70) (= ($generated@@191 ($generated@@240 $generated@@423) $generated@@424) ($generated@@93 $generated@@423 $generated@@424)))
 :pattern ( ($generated@@191 ($generated@@240 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@100 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@87 $generated@@426 $generated@@2)) (<= 0 ($generated@@255 $generated@@425))))
 :pattern ( ($generated@@255 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@235 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@234 $generated@@428)) (<= 0 ($generated@@233 $generated@@427))))
 :pattern ( ($generated@@233 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (= (type ($generated@@429 $generated@@430)) $generated@@70)
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@70) (= (type $generated@@432) $generated@@70)) (= ($generated@@429 ($generated@@373 $generated@@431 $generated@@432)) $generated@@431))
 :pattern ( ($generated@@373 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@70)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@70) (= (type $generated@@436) $generated@@70)) (= ($generated@@433 ($generated@@373 $generated@@435 $generated@@436)) $generated@@436))
 :pattern ( ($generated@@373 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@70) (= (type $generated@@438) $generated@@70)) (= ($generated@@81 ($generated@@373 $generated@@437 $generated@@438)) $generated@@58))
 :pattern ( ($generated@@373 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@70)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@70) (= (type $generated@@442) $generated@@70)) (= ($generated@@439 ($generated@@381 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@381 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@70)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@70) (= (type $generated@@446) $generated@@70)) (= ($generated@@443 ($generated@@381 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@381 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@70) (= (type $generated@@448) $generated@@70)) (= ($generated@@81 ($generated@@381 $generated@@447 $generated@@448)) $generated@@59))
 :pattern ( ($generated@@381 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@177) (= (type $generated@@450) $generated@@177)) (= ($generated@@226 ($generated@@190 $generated@@449 $generated@@450)) $generated@@62))
 :pattern ( ($generated@@190 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@70)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@70) (= (type $generated@@454) $generated@@70)) (= ($generated@@451 ($generated@@167 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@167 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@70)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@70) (= (type $generated@@458) $generated@@70)) (= ($generated@@455 ($generated@@167 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@167 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@177) (= (type $generated@@460) $generated@@177)) (= ($generated@@175 ($generated@@190 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@190 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@177) (= (type $generated@@462) $generated@@177)) (= ($generated@@176 ($generated@@190 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@190 $generated@@461 $generated@@462))
)))
(assert  (and (forall (($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@465)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@465))
)) (forall (($generated@@466 T@U) ($generated@@467 Int) ) (! (let (($generated@@468 ($generated@@235 (type $generated@@466))))
(= (type ($generated@@464 $generated@@466 $generated@@467)) $generated@@468))
 :pattern ( ($generated@@464 $generated@@466 $generated@@467))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@469) ($generated@@234 $generated@@177)) (= (type $generated@@470) $generated@@70)) (= (type $generated@@471) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@469 ($generated@@463 $generated@@470) $generated@@471) (forall (($generated@@472 Int) ) (!  (=> (and (<= 0 $generated@@472) (< $generated@@472 ($generated@@233 $generated@@469))) ($generated@@220 ($generated@@464 $generated@@469 $generated@@472) $generated@@470 $generated@@471))
 :pattern ( ($generated@@464 $generated@@469 $generated@@472))
))))
 :pattern ( ($generated@@95 $generated@@469 ($generated@@463 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@474 Int) ) (! (= ($generated@@473 ($generated@@150 $generated@@474)) $generated@@474)
 :pattern ( ($generated@@150 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@70)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@70) (= ($generated@@475 ($generated@@205 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@205 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@70) (= ($generated@@81 ($generated@@205 $generated@@478)) $generated@@54))
 :pattern ( ($generated@@205 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@70) (= ($generated@@479 ($generated@@210 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@210 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@70) (= ($generated@@81 ($generated@@210 $generated@@482)) $generated@@55))
 :pattern ( ($generated@@210 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@70) (= ($generated@@483 ($generated@@182 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@182 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@70) (= ($generated@@81 ($generated@@182 $generated@@486)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@70) (= ($generated@@487 ($generated@@463 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@463 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@70) (= ($generated@@81 ($generated@@463 $generated@@490)) $generated@@57))
 :pattern ( ($generated@@463 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 (type $generated@@491)))
(= ($generated@@306 $generated@@492 ($generated@@240 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@240 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@263 $generated@@177 $generated@@177)) (= (type $generated@@494) $generated@@70)) (= (type $generated@@495) $generated@@70)) (= ($generated@@93 $generated@@493 ($generated@@373 $generated@@494 $generated@@495)) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@261 $generated@@493) $generated@@496))) (and ($generated@@191 ($generated@@98 ($generated@@348 $generated@@493) $generated@@496) $generated@@495) ($generated@@191 $generated@@496 $generated@@494)))
 :pattern ( ($generated@@98 ($generated@@348 $generated@@493) $generated@@496))
 :pattern ( ($generated@@98 ($generated@@261 $generated@@493) $generated@@496))
))))
 :pattern ( ($generated@@93 $generated@@493 ($generated@@373 $generated@@494 $generated@@495)))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@281 $generated@@177 $generated@@177)) (= (type $generated@@498) $generated@@70)) (= (type $generated@@499) $generated@@70)) (= ($generated@@93 $generated@@497 ($generated@@381 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@279 $generated@@497) $generated@@500))) (and ($generated@@191 ($generated@@98 ($generated@@356 $generated@@497) $generated@@500) $generated@@499) ($generated@@191 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@98 ($generated@@356 $generated@@497) $generated@@500))
 :pattern ( ($generated@@98 ($generated@@279 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@93 $generated@@497 ($generated@@381 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@503) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@504) $generated@@88)) (=> (and (and (and ($generated@@91 $generated@@502) ($generated@@91 $generated@@503)) (and (not (= $generated@@504 $generated@@92)) ($generated@@93 $generated@@504 $generated@@94))) (and ($generated@@501 $generated@@502) ($generated@@154 $generated@@502 $generated@@503))) (=> (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@73 (type $generated@@506))))
 (=> (and (and (= (type $generated@@505) $generated@@88) (= (type $generated@@506) ($generated@@72 $generated@@507))) (and (not (= $generated@@505 $generated@@92)) (= $generated@@505 $generated@@504))) (= ($generated@@97 ($generated@@98 $generated@@502 $generated@@505) $generated@@506) ($generated@@97 ($generated@@98 $generated@@503 $generated@@505) $generated@@506))))
 :no-pattern (type $generated@@505)
 :no-pattern (type $generated@@506)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
)) (= ($generated@@86 $generated@@502 $generated@@504) ($generated@@86 $generated@@503 $generated@@504)))))
 :pattern ( ($generated@@501 $generated@@502) ($generated@@154 $generated@@502 $generated@@503) ($generated@@86 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@177) (= (type $generated@@511) $generated@@177)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@190 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@190 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@177) (= (type $generated@@513) $generated@@177)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@190 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@190 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@177) (= (type $generated@@515) $generated@@70)) (= (type $generated@@516) $generated@@70)) ($generated@@191 $generated@@514 ($generated@@373 $generated@@515 $generated@@516))) (and (= ($generated@@240 ($generated@@306 ($generated@@263 $generated@@177 $generated@@177) $generated@@514)) $generated@@514) ($generated@@93 ($generated@@306 ($generated@@263 $generated@@177 $generated@@177) $generated@@514) ($generated@@373 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@191 $generated@@514 ($generated@@373 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@177) (= (type $generated@@518) $generated@@70)) (= (type $generated@@519) $generated@@70)) ($generated@@191 $generated@@517 ($generated@@381 $generated@@518 $generated@@519))) (and (= ($generated@@240 ($generated@@306 ($generated@@281 $generated@@177 $generated@@177) $generated@@517)) $generated@@517) ($generated@@93 ($generated@@306 ($generated@@281 $generated@@177 $generated@@177) $generated@@517) ($generated@@381 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@191 $generated@@517 ($generated@@381 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@70) (= (type $generated@@521) $generated@@70)) (= (type $generated@@522) $generated@@177)) ($generated@@191 $generated@@522 ($generated@@167 $generated@@520 $generated@@521))) (and (= ($generated@@240 ($generated@@306 $generated@@168 $generated@@522)) $generated@@522) ($generated@@93 ($generated@@306 $generated@@168 $generated@@522) ($generated@@167 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@191 $generated@@522 ($generated@@167 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@98 ($generated@@392 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@98 ($generated@@392 $generated@@524) $generated@@523)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@531 T@T) ($generated@@532 T@T) ) (= ($generated@@1 ($generated@@527 $generated@@531 $generated@@532)) 22)) (forall (($generated@@533 T@T) ($generated@@534 T@T) ) (! (= ($generated@@528 ($generated@@527 $generated@@533 $generated@@534)) $generated@@533)
 :pattern ( ($generated@@527 $generated@@533 $generated@@534))
))) (forall (($generated@@535 T@T) ($generated@@536 T@T) ) (! (= ($generated@@529 ($generated@@527 $generated@@535 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@527 $generated@@535 $generated@@536))
))) (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@529 (type $generated@@537))))
(= (type ($generated@@525 $generated@@537 $generated@@538 $generated@@539)) $generated@@540))
 :pattern ( ($generated@@525 $generated@@537 $generated@@538 $generated@@539))
))) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(let (($generated@@546 (type $generated@@542)))
(= (type ($generated@@530 $generated@@541 $generated@@542 $generated@@543 $generated@@544)) ($generated@@527 $generated@@546 $generated@@545))))
 :pattern ( ($generated@@530 $generated@@541 $generated@@542 $generated@@543 $generated@@544))
))) (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@529 (type $generated@@547))))
 (=> (= (type $generated@@550) $generated@@551) (= ($generated@@525 ($generated@@530 $generated@@547 $generated@@548 $generated@@549 $generated@@550) $generated@@548 $generated@@549) $generated@@550)))
 :weight 0
))) (and (and (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or (= $generated@@554 $generated@@556) (= ($generated@@525 ($generated@@530 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@525 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
)) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (or (= $generated@@561 $generated@@563) (= ($generated@@525 ($generated@@530 $generated@@559 $generated@@560 $generated@@561 $generated@@558) $generated@@562 $generated@@563) ($generated@@525 $generated@@559 $generated@@562 $generated@@563)))
 :weight 0
))) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (or true (= ($generated@@525 ($generated@@530 $generated@@565 $generated@@566 $generated@@567 $generated@@564) $generated@@568 $generated@@569) ($generated@@525 $generated@@565 $generated@@568 $generated@@569)))
 :weight 0
)))) (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (= (type ($generated@@526 $generated@@570 $generated@@571 $generated@@572 $generated@@573)) ($generated@@527 $generated@@88 $generated@@4))
 :pattern ( ($generated@@526 $generated@@570 $generated@@571 $generated@@572 $generated@@573))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@73 (type $generated@@579))))
 (=> (and (and (and (and (and (= (type $generated@@574) $generated@@88) (= (type $generated@@575) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@576) ($generated@@72 $generated@@4))) (= (type $generated@@577) $generated@@88)) (= (type $generated@@578) $generated@@88)) (= (type $generated@@579) ($generated@@72 $generated@@580))) (= ($generated@@0 ($generated@@525 ($generated@@526 $generated@@574 $generated@@575 $generated@@576 $generated@@577) $generated@@578 $generated@@579))  (=> (and (not (= $generated@@578 $generated@@574)) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@575 $generated@@578) $generated@@576))) (= $generated@@578 $generated@@577)))))
 :pattern ( ($generated@@525 ($generated@@526 $generated@@574 $generated@@575 $generated@@576 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@77)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@70) (= (type $generated@@584) $generated@@70)) (and (= ($generated@@81 ($generated@@167 $generated@@583 $generated@@584)) $generated@@63) (= ($generated@@581 ($generated@@167 $generated@@583 $generated@@584)) $generated@@67)))
 :pattern ( ($generated@@167 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@168) (= ($generated@@508 ($generated@@240 $generated@@585)) ($generated@@509 $generated@@585)))
 :pattern ( ($generated@@508 ($generated@@240 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@177) ($generated@@191 $generated@@586 ($generated@@150 0))) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@586)) $generated@@586) ($generated@@93 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@586) ($generated@@150 0))))
 :pattern ( ($generated@@191 $generated@@586 ($generated@@150 0)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@177) (= (type $generated@@588) $generated@@70)) ($generated@@191 $generated@@587 ($generated@@205 $generated@@588))) (and (= ($generated@@240 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@587)) $generated@@587) ($generated@@93 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@587) ($generated@@205 $generated@@588))))
 :pattern ( ($generated@@191 $generated@@587 ($generated@@205 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@177) (= (type $generated@@590) $generated@@70)) ($generated@@191 $generated@@589 ($generated@@210 $generated@@590))) (and (= ($generated@@240 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@589)) $generated@@589) ($generated@@93 ($generated@@306 ($generated@@87 $generated@@177 $generated@@4) $generated@@589) ($generated@@210 $generated@@590))))
 :pattern ( ($generated@@191 $generated@@589 ($generated@@210 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@177) (= (type $generated@@592) $generated@@70)) ($generated@@191 $generated@@591 ($generated@@182 $generated@@592))) (and (= ($generated@@240 ($generated@@306 ($generated@@87 $generated@@177 $generated@@2) $generated@@591)) $generated@@591) ($generated@@93 ($generated@@306 ($generated@@87 $generated@@177 $generated@@2) $generated@@591) ($generated@@182 $generated@@592))))
 :pattern ( ($generated@@191 $generated@@591 ($generated@@182 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@177) (= (type $generated@@594) $generated@@70)) ($generated@@191 $generated@@593 ($generated@@463 $generated@@594))) (and (= ($generated@@240 ($generated@@306 ($generated@@234 $generated@@177) $generated@@593)) $generated@@593) ($generated@@93 ($generated@@306 ($generated@@234 $generated@@177) $generated@@593) ($generated@@463 $generated@@594))))
 :pattern ( ($generated@@191 $generated@@593 ($generated@@463 $generated@@594)))
)))
(assert (= ($generated@@81 $generated@@158) $generated@@65))
(assert (= ($generated@@581 $generated@@158) $generated@@68))
(assert (= ($generated@@81 $generated@@94) $generated@@66))
(assert (= ($generated@@581 $generated@@94) $generated@@68))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@595 ($generated@@182 $generated@@596) $generated@@597) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@595 $generated@@598)))) ($generated@@220 $generated@@598 $generated@@596 $generated@@597))
 :pattern ( ($generated@@98 $generated@@595 $generated@@598))
))))
 :pattern ( ($generated@@95 $generated@@595 ($generated@@182 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@168) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@601) (and ($generated@@166 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@70) ($generated@@95 $generated@@599 ($generated@@167 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@95 $generated@@599 ($generated@@167 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@220 ($generated@@175 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@220 ($generated@@175 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@168) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@605) (and ($generated@@166 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@70) ($generated@@95 $generated@@603 ($generated@@167 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@95 $generated@@603 ($generated@@167 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@220 ($generated@@176 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@220 ($generated@@176 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@177) (= (type $generated@@608) $generated@@177)) (= ($generated@@190 ($generated@@216 $generated@@607) ($generated@@216 $generated@@608)) ($generated@@216 ($generated@@190 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@190 ($generated@@216 $generated@@607) ($generated@@216 $generated@@608)))
)))
(assert (forall (($generated@@609 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@96 $generated@@609))) ($generated@@216 ($generated@@240 ($generated@@8 $generated@@609))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@96 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ) (! (= ($generated@@240 ($generated@@216 $generated@@610)) ($generated@@216 ($generated@@240 $generated@@610)))
 :pattern ( ($generated@@240 ($generated@@216 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 ($generated@@235 (type $generated@@611))))
 (=> (and (= (type $generated@@611) ($generated@@234 $generated@@612)) (= ($generated@@233 $generated@@611) 0)) (= $generated@@611 ($generated@@232 $generated@@612))))
 :pattern ( ($generated@@233 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (! (let (($generated@@616 (type $generated@@614)))
 (=> (and (and (= (type $generated@@613) ($generated@@87 $generated@@616 $generated@@2)) (= (type $generated@@615) $generated@@2)) (<= 0 ($generated $generated@@615))) (= ($generated@@255 ($generated@@102 $generated@@613 $generated@@614 $generated@@615)) (+ (- ($generated@@255 $generated@@613) ($generated ($generated@@98 $generated@@613 $generated@@614))) ($generated $generated@@615)))))
 :pattern ( ($generated@@255 ($generated@@102 $generated@@613 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@618) $generated@@2)) ($generated@@95 $generated@@618 $generated@@46 $generated@@617))
 :pattern ( ($generated@@95 $generated@@618 $generated@@46 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@620) $generated@@3)) ($generated@@95 $generated@@620 $generated@@47 $generated@@619))
 :pattern ( ($generated@@95 $generated@@620 $generated@@47 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@622) $generated@@4)) ($generated@@95 $generated@@622 $generated@@44 $generated@@621))
 :pattern ( ($generated@@95 $generated@@622 $generated@@44 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@624) $generated@@421)) ($generated@@95 $generated@@624 $generated@@45 $generated@@623))
 :pattern ( ($generated@@95 $generated@@624 $generated@@45 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@626) $generated@@177)) ($generated@@95 $generated@@626 $generated@@48 $generated@@625))
 :pattern ( ($generated@@95 $generated@@626 $generated@@48 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@234 $generated@@177)) (= (type $generated@@628) $generated@@70)) (= ($generated@@93 $generated@@627 ($generated@@463 $generated@@628)) (forall (($generated@@629 Int) ) (!  (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@233 $generated@@627))) ($generated@@191 ($generated@@464 $generated@@627 $generated@@629) $generated@@628))
 :pattern ( ($generated@@464 $generated@@627 $generated@@629))
))))
 :pattern ( ($generated@@93 $generated@@627 ($generated@@463 $generated@@628)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 Int) ) (!  (=> (= (type $generated@@631) ($generated@@234 $generated@@177)) (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@233 $generated@@631))) (< ($generated@@509 ($generated@@306 $generated@@168 ($generated@@464 $generated@@631 $generated@@632))) ($generated@@630 $generated@@631))))
 :pattern ( ($generated@@509 ($generated@@306 $generated@@168 ($generated@@464 $generated@@631 $generated@@632))))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@263 $generated@@177 $generated@@177)) (= (type $generated@@634) $generated@@70)) (= (type $generated@@635) $generated@@70)) ($generated@@93 $generated@@633 ($generated@@373 $generated@@634 $generated@@635))) (and (and ($generated@@93 ($generated@@261 $generated@@633) ($generated@@205 $generated@@634)) ($generated@@93 ($generated@@316 $generated@@633) ($generated@@205 $generated@@635))) ($generated@@93 ($generated@@347 $generated@@633) ($generated@@205 ($generated@@167 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@93 $generated@@633 ($generated@@373 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) ($generated@@281 $generated@@177 $generated@@177)) (= (type $generated@@637) $generated@@70)) (= (type $generated@@638) $generated@@70)) ($generated@@93 $generated@@636 ($generated@@381 $generated@@637 $generated@@638))) (and (and ($generated@@93 ($generated@@279 $generated@@636) ($generated@@210 $generated@@637)) ($generated@@93 ($generated@@327 $generated@@636) ($generated@@210 $generated@@638))) ($generated@@93 ($generated@@355 $generated@@636) ($generated@@210 ($generated@@167 $generated@@637 $generated@@638)))))
 :pattern ( ($generated@@93 $generated@@636 ($generated@@381 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@2) ($generated@@93 $generated@@639 $generated@@46))
 :pattern ( ($generated@@93 $generated@@639 $generated@@46))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@3) ($generated@@93 $generated@@640 $generated@@47))
 :pattern ( ($generated@@93 $generated@@640 $generated@@47))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@4) ($generated@@93 $generated@@641 $generated@@44))
 :pattern ( ($generated@@93 $generated@@641 $generated@@44))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@421) ($generated@@93 $generated@@642 $generated@@45))
 :pattern ( ($generated@@93 $generated@@642 $generated@@45))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@177) ($generated@@93 $generated@@643 $generated@@48))
 :pattern ( ($generated@@93 $generated@@643 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 () Int)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) Int)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 () T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@154 (Int) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@178 (T@U T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 () T@T)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U) Bool)
(declare-fun $generated@@202 (T@T T@U T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@236 (T@T) T@U)
(declare-fun $generated@@237 (T@U) Int)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 (T@T T@T) T@U)
(declare-fun $generated@@267 (T@T T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U T@U) Bool)
(declare-fun $generated@@310 (T@T T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@377 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@T) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@425 () T@T)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 (T@U Int) T@U)
(declare-fun $generated@@481 (T@U) Int)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Bool)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@539 (T@U T@U T@U) T@U)
(declare-fun $generated@@540 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@541 (T@T T@T) T@T)
(declare-fun $generated@@542 (T@T) T@T)
(declare-fun $generated@@543 (T@T) T@T)
(declare-fun $generated@@544 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@595 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@656 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@104 $generated@@105)) 13)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@100 ($generated@@87 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@87 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@101 ($generated@@87 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@87 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@101 (type $generated@@110))))
(= (type ($generated@@98 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 (type $generated@@115)))
(let (($generated@@117 (type $generated@@114)))
(= (type ($generated@@102 $generated@@113 $generated@@114 $generated@@115)) ($generated@@87 $generated@@117 $generated@@116))))
 :pattern ( ($generated@@102 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@101 (type $generated@@118))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@98 ($generated@@102 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@98 ($generated@@102 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@98 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@98 ($generated@@102 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@98 $generated@@127 $generated@@129)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@73 (type $generated@@131))))
(= (type ($generated@@97 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@97 $generated@@130 $generated@@131))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= (type ($generated@@103 $generated@@133 $generated@@134 $generated@@135)) $generated@@89)
 :pattern ( ($generated@@103 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@138) $generated@@139) (= ($generated@@97 ($generated@@103 $generated@@136 $generated@@137 $generated@@138) $generated@@137) $generated@@138)))
 :weight 0
))) (and (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@97 ($generated@@103 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@97 $generated@@141 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or true (= ($generated@@97 ($generated@@103 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@97 $generated@@145 $generated@@147)))
 :weight 0
)))) (= (type $generated@@92) $generated@@88)) (= (type $generated@@94) $generated@@70)) (= (type $generated@@99) ($generated@@72 $generated@@2))))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@149) $generated@@88)) (or ($generated@@90 $generated@@148 $generated@@149) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@148) (and (not (= $generated@@149 $generated@@92)) (and ($generated@@93 $generated@@149 $generated@@94) ($generated@@95 $generated@@149 $generated@@94 $generated@@148))))))) (and (=> ($generated@@86 $generated@@148 $generated@@149) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)))) (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@148 $generated@@149))))
 :pattern ( ($generated@@86 $generated@@148 $generated@@149))
))))
(assert  (=> (<= 1 $generated@@85) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@153) $generated@@88)) (or ($generated@@151 $generated@@152 $generated@@153) (and (not (= 1 $generated@@85)) (and ($generated@@91 $generated@@152) (and (not (= $generated@@153 $generated@@92)) (and ($generated@@93 $generated@@153 $generated@@94) ($generated@@95 $generated@@153 $generated@@94 $generated@@152))))))) (and (=> ($generated@@86 $generated@@152 $generated@@153) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@152 $generated@@153) $generated@@99)))) (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@152 $generated@@153) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@152 $generated@@153))))
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@155 Int) ) (! (= (type ($generated@@154 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@2) (= (type $generated@@157) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@95 $generated@@156 ($generated@@154 0) $generated@@157))
 :pattern ( ($generated@@95 $generated@@156 ($generated@@154 0) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@160) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@158 $generated@@159 $generated@@160)) (forall (($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@88) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@159 $generated@@161) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@160 $generated@@161) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@160 $generated@@161) $generated@@60))
)))
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (= (type $generated@@162) $generated@@70))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@88) (= (type $generated@@164) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@163 $generated@@162 $generated@@164)  (or (= $generated@@163 $generated@@92) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@164 $generated@@163) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@163 $generated@@162 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@165 $generated@@166)) $generated@@70)
 :pattern ( ($generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@168) $generated@@88)) (and ($generated@@91 $generated@@167) (and (not (= $generated@@168 $generated@@92)) (= ($generated@@165 $generated@@168) $generated@@162)))) ($generated@@93 ($generated@@97 ($generated@@98 $generated@@167 $generated@@168) $generated@@99) $generated@@46))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@167 $generated@@168) $generated@@99))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@2) ($generated@@93 $generated@@169 ($generated@@154 0)))
 :pattern ( ($generated@@93 $generated@@169 ($generated@@154 0)))
)))
(assert  (and (= ($generated@@1 $generated@@172) 16) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@173 $generated@@174)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@173 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (and (= (type $generated@@175) $generated@@70) (= (type $generated@@176) $generated@@70)) (= (type $generated@@177) $generated@@172)) ($generated@@93 $generated@@177 ($generated@@171 $generated@@175 $generated@@176))) ($generated@@170 $generated@@177))
 :pattern ( ($generated@@170 $generated@@177) ($generated@@93 $generated@@177 ($generated@@171 $generated@@175 $generated@@176)))
)))
(assert  (and (and (= ($generated@@1 $generated@@181) 17) (forall (($generated@@182 T@U) ) (! (= (type ($generated@@179 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@179 $generated@@182))
))) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@183)) $generated@@181)
 :pattern ( ($generated@@180 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@172) (= (type $generated@@185) $generated@@172)) true) (= ($generated@@178 $generated@@184 $generated@@185)  (and (= ($generated@@179 $generated@@184) ($generated@@179 $generated@@185)) (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)))))
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@70)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@87 $generated@@181 $generated@@2)) (= (type $generated@@190) $generated@@70)) ($generated@@93 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@93 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (= (type $generated@@191) $generated@@88) (= ($generated@@93 $generated@@191 $generated@@162)  (or (= $generated@@191 $generated@@92) (= ($generated@@165 $generated@@191) $generated@@162))))
 :pattern ( ($generated@@93 $generated@@191 $generated@@162))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (= (type $generated@@192) $generated@@88) (= (type $generated@@193) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@192 $generated@@94 $generated@@193) ($generated@@95 $generated@@192 $generated@@162 $generated@@193)))
 :pattern ( ($generated@@95 $generated@@192 $generated@@94 $generated@@193))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@196 $generated@@197)) $generated@@172)
 :pattern ( ($generated@@194 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (and (= (type $generated@@198) $generated@@70) (= (type $generated@@199) $generated@@70)) (= (type $generated@@200) $generated@@181)) (= (type $generated@@201) $generated@@181)) (= ($generated@@93 ($generated@@194 $generated@@200 $generated@@201) ($generated@@171 $generated@@198 $generated@@199))  (and ($generated@@195 $generated@@200 $generated@@198) ($generated@@195 $generated@@201 $generated@@199))))
 :pattern ( ($generated@@93 ($generated@@194 $generated@@200 $generated@@201) ($generated@@171 $generated@@198 $generated@@199)))
)))
(assert (= ($generated@@80 $generated@@99) 0))
(assert (forall (($generated@@203 T@T) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= (type ($generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@72 $generated@@203))
 :pattern ( ($generated@@202 $generated@@203 $generated@@204 $generated@@205))
)))
(assert (= ($generated@@202 $generated@@2 $generated@@64 $generated@@69) $generated@@99))
(assert  (not ($generated@@206 $generated@@99)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) $generated@@172) (= (type $generated@@208) $generated@@172)) (= ($generated@@178 $generated@@207 $generated@@208) (= $generated@@207 $generated@@208)))
 :pattern ( ($generated@@178 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ) (! (= (type ($generated@@209 $generated@@210)) $generated@@70)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (= (type $generated@@211) ($generated@@87 $generated@@181 $generated@@4)) (= (type $generated@@212) $generated@@70)) (= ($generated@@93 $generated@@211 ($generated@@209 $generated@@212)) (forall (($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@181) ($generated@@0 ($generated@@98 $generated@@211 $generated@@213))) ($generated@@195 $generated@@213 $generated@@212))
 :pattern ( ($generated@@98 $generated@@211 $generated@@213))
))))
 :pattern ( ($generated@@93 $generated@@211 ($generated@@209 $generated@@212)))
)))
(assert (forall (($generated@@215 T@U) ) (! (= (type ($generated@@214 $generated@@215)) $generated@@70)
 :pattern ( ($generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (= (type $generated@@216) ($generated@@87 $generated@@181 $generated@@4)) (= (type $generated@@217) $generated@@70)) (= ($generated@@93 $generated@@216 ($generated@@214 $generated@@217)) (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@181) ($generated@@0 ($generated@@98 $generated@@216 $generated@@218))) ($generated@@195 $generated@@218 $generated@@217))
 :pattern ( ($generated@@98 $generated@@216 $generated@@218))
))))
 :pattern ( ($generated@@93 $generated@@216 ($generated@@214 $generated@@217)))
)))
(assert (forall (($generated@@219 Int) ) (! (= ($generated@@96 $generated@@219) $generated@@219)
 :pattern ( ($generated@@96 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (! (let (($generated@@222 (type $generated@@221)))
(= (type ($generated@@220 $generated@@221)) $generated@@222))
 :pattern ( ($generated@@220 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@220 $generated@@223) $generated@@223)
 :pattern ( ($generated@@220 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@225) $generated@@70) (= (type $generated@@226) $generated@@70)) (= (type $generated@@227) $generated@@181)) (= (type $generated@@228) $generated@@181)) (= (type $generated@@229) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@91 $generated@@229)) (= ($generated@@95 ($generated@@194 $generated@@227 $generated@@228) ($generated@@171 $generated@@225 $generated@@226) $generated@@229)  (and ($generated@@224 $generated@@227 $generated@@225 $generated@@229) ($generated@@224 $generated@@228 $generated@@226 $generated@@229))))
 :pattern ( ($generated@@95 ($generated@@194 $generated@@227 $generated@@228) ($generated@@171 $generated@@225 $generated@@226) $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@75)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@172) (= ($generated@@170 $generated@@232) (= ($generated@@230 $generated@@232) $generated@@62)))
 :pattern ( ($generated@@170 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@172) ($generated@@170 $generated@@233)) (exists (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (and (and (= (type $generated@@234) $generated@@181) (= (type $generated@@235) $generated@@181)) (= $generated@@233 ($generated@@194 $generated@@234 $generated@@235)))
 :no-pattern (type $generated@@234)
 :no-pattern (type $generated@@235)
 :no-pattern ($generated $generated@@234)
 :no-pattern ($generated@@0 $generated@@234)
 :no-pattern ($generated $generated@@235)
 :no-pattern ($generated@@0 $generated@@235)
)))
 :pattern ( ($generated@@170 $generated@@233))
)))
(assert  (and (and (forall (($generated@@240 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@240)) 18)) (forall (($generated@@241 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@241)) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
))) (forall (($generated@@242 T@T) ) (! (= (type ($generated@@236 $generated@@242)) ($generated@@238 $generated@@242))
 :pattern ( ($generated@@236 $generated@@242))
))))
(assert (forall (($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@236 $generated@@243)) 0)
 :pattern ( ($generated@@236 $generated@@243))
)))
(assert ($generated@@206 $generated@@60))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@181)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@70) (= (type $generated@@248) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@224 ($generated@@244 $generated@@246) $generated@@247 $generated@@248) ($generated@@95 $generated@@246 $generated@@247 $generated@@248)))
 :pattern ( ($generated@@224 ($generated@@244 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@250) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@251) $generated@@181)) (= (type $generated@@252) $generated@@70)) ($generated@@158 $generated@@249 $generated@@250)) ($generated@@224 $generated@@251 $generated@@252 $generated@@249)) ($generated@@224 $generated@@251 $generated@@252 $generated@@250))
 :pattern ( ($generated@@158 $generated@@249 $generated@@250) ($generated@@224 $generated@@251 $generated@@252 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@253) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@254) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@256) $generated@@70)) ($generated@@158 $generated@@253 $generated@@254)) ($generated@@95 $generated@@255 $generated@@256 $generated@@253)) ($generated@@95 $generated@@255 $generated@@256 $generated@@254))
 :pattern ( ($generated@@158 $generated@@253 $generated@@254) ($generated@@95 $generated@@255 $generated@@256 $generated@@253))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@258) $generated@@88)) (=> (and (and ($generated@@91 $generated@@257) (and (not (= $generated@@258 $generated@@92)) (= ($generated@@165 $generated@@258) $generated@@162))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@257 $generated@@258) $generated@@60))) ($generated@@95 ($generated@@97 ($generated@@98 $generated@@257 $generated@@258) $generated@@99) $generated@@46 $generated@@257)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@257 $generated@@258) $generated@@99))
)))
(assert (forall (($generated@@261 T@T) ) (! (= (type ($generated@@260 $generated@@261)) ($generated@@87 $generated@@261 $generated@@2))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@100 (type $generated@@262))))
 (=> (= (type $generated@@262) ($generated@@87 $generated@@263 $generated@@2)) (and (= (= ($generated@@259 $generated@@262) 0) (= $generated@@262 ($generated@@260 $generated@@263))) (=> (not (= ($generated@@259 $generated@@262) 0)) (exists (($generated@@264 T@U) ) (!  (and (= (type $generated@@264) $generated@@263) (< 0 ($generated ($generated@@98 $generated@@262 $generated@@264))))
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
))))))
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert  (and (and (and (and (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@270 $generated@@271)) 19)) (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@272 $generated@@273)) $generated@@272)
 :pattern ( ($generated@@267 $generated@@272 $generated@@273))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@267 $generated@@274 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@267 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@268 (type $generated@@276))))
(= (type ($generated@@265 $generated@@276)) ($generated@@87 $generated@@277 $generated@@4)))
 :pattern ( ($generated@@265 $generated@@276))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= (type ($generated@@266 $generated@@278 $generated@@279)) ($generated@@267 $generated@@278 $generated@@279))
 :pattern ( ($generated@@266 $generated@@278 $generated@@279))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@T) ) (! (let (($generated@@282 (type $generated@@280)))
 (not ($generated@@0 ($generated@@98 ($generated@@265 ($generated@@266 $generated@@282 $generated@@281)) $generated@@280))))
 :pattern ( (let (($generated@@282 (type $generated@@280)))
($generated@@98 ($generated@@265 ($generated@@266 $generated@@282 $generated@@281)) $generated@@280)))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 20)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@87 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@98 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@98 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@303) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@301 $generated@@302 $generated@@303)) (and ($generated@@158 $generated@@302 $generated@@303) (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@73 (type $generated@@305))))
 (=> (and (and (= (type $generated@@304) $generated@@88) (= (type $generated@@305) ($generated@@72 $generated@@306))) (not ($generated@@206 $generated@@305))) (= ($generated@@97 ($generated@@98 $generated@@302 $generated@@304) $generated@@305) ($generated@@97 ($generated@@98 $generated@@303 $generated@@304) $generated@@305))))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@303 $generated@@304) $generated@@305))
))))
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@100 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@87 $generated@@308 $generated@@2)) (= ($generated@@187 $generated@@307) (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@308) (and (<= 0 ($generated ($generated@@98 $generated@@307 $generated@@309))) (<= ($generated ($generated@@98 $generated@@307 $generated@@309)) ($generated@@259 $generated@@307))))
 :pattern ( ($generated@@98 $generated@@307 $generated@@309))
)))))
 :pattern ( ($generated@@187 $generated@@307))
)))
(assert (forall (($generated@@311 T@T) ($generated@@312 T@U) ) (! (= (type ($generated@@310 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@310 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@181) ($generated@@195 $generated@@313 $generated@@162)) (and (= ($generated@@244 ($generated@@310 $generated@@88 $generated@@313)) $generated@@313) ($generated@@93 ($generated@@310 $generated@@88 $generated@@313) $generated@@162)))
 :pattern ( ($generated@@195 $generated@@313 $generated@@162))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@181) ($generated@@195 $generated@@314 $generated@@94)) (and (= ($generated@@244 ($generated@@310 $generated@@88 $generated@@314)) $generated@@314) ($generated@@93 ($generated@@310 $generated@@88 $generated@@314) $generated@@94)))
 :pattern ( ($generated@@195 $generated@@314 $generated@@94))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@88) (= ($generated@@93 $generated@@315 $generated@@94)  (and ($generated@@93 $generated@@315 $generated@@162) (not (= $generated@@315 $generated@@92)))))
 :pattern ( ($generated@@93 $generated@@315 $generated@@94))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@269 (type $generated@@316))))
(let (($generated@@318 ($generated@@268 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@267 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@266 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@98 ($generated@@265 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@265 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@269 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@87 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@269 (type $generated@@323))))
(let (($generated@@325 ($generated@@268 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@267 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@266 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@98 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@287 (type $generated@@327))))
(let (($generated@@329 ($generated@@286 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@285 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@284 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@98 ($generated@@283 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@283 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@287 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@87 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@287 (type $generated@@334))))
(let (($generated@@336 ($generated@@286 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@285 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@284 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@98 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) ($generated@@87 $generated@@181 $generated@@2)) (= (type $generated@@339) $generated@@70)) (= ($generated@@93 $generated@@338 ($generated@@186 $generated@@339)) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@181) (< 0 ($generated ($generated@@98 $generated@@338 $generated@@340)))) ($generated@@195 $generated@@340 $generated@@339))
 :pattern ( ($generated@@98 $generated@@338 $generated@@340))
))))
 :pattern ( ($generated@@93 $generated@@338 ($generated@@186 $generated@@339)))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@87 $generated@@181 $generated@@4)) (= (type $generated@@342) $generated@@70)) (= (type $generated@@343) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@341 ($generated@@209 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@181) ($generated@@0 ($generated@@98 $generated@@341 $generated@@344))) ($generated@@224 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@98 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@95 $generated@@341 ($generated@@209 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@87 $generated@@181 $generated@@4)) (= (type $generated@@346) $generated@@70)) (= (type $generated@@347) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@345 ($generated@@214 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@181) ($generated@@0 ($generated@@98 $generated@@345 $generated@@348))) ($generated@@224 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@98 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@95 $generated@@345 ($generated@@214 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
(= ($generated ($generated@@98 ($generated@@260 $generated@@350) $generated@@349)) 0))
 :pattern ( (let (($generated@@350 (type $generated@@349)))
($generated@@98 ($generated@@260 $generated@@350) $generated@@349)))
)))
(assert  (and (forall (($generated@@353 T@U) ) (! (= (type ($generated@@351 $generated@@353)) ($generated@@87 $generated@@181 $generated@@4))
 :pattern ( ($generated@@351 $generated@@353))
)) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@269 (type $generated@@354))))
(let (($generated@@356 ($generated@@268 (type $generated@@354))))
(= (type ($generated@@352 $generated@@354)) ($generated@@87 $generated@@356 $generated@@355))))
 :pattern ( ($generated@@352 $generated@@354))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@267 $generated@@181 $generated@@181)) (= (type $generated@@358) $generated@@181)) (= ($generated@@0 ($generated@@98 ($generated@@351 $generated@@357) $generated@@358))  (and ($generated@@0 ($generated@@98 ($generated@@265 $generated@@357) ($generated@@179 ($generated@@310 $generated@@172 $generated@@358)))) (= ($generated@@98 ($generated@@352 $generated@@357) ($generated@@179 ($generated@@310 $generated@@172 $generated@@358))) ($generated@@180 ($generated@@310 $generated@@172 $generated@@358))))))
 :pattern ( ($generated@@98 ($generated@@351 $generated@@357) $generated@@358))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@87 $generated@@181 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@287 (type $generated@@362))))
(let (($generated@@364 ($generated@@286 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@87 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@285 $generated@@181 $generated@@181)) (= (type $generated@@366) $generated@@181)) (= ($generated@@0 ($generated@@98 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@98 ($generated@@283 $generated@@365) ($generated@@179 ($generated@@310 $generated@@172 $generated@@366)))) (= ($generated@@98 ($generated@@360 $generated@@365) ($generated@@179 ($generated@@310 $generated@@172 $generated@@366))) ($generated@@180 ($generated@@310 $generated@@172 $generated@@366))))))
 :pattern ( ($generated@@98 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@268 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@267 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@98 ($generated@@320 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@98 ($generated@@265 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@98 ($generated@@352 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@98 ($generated@@265 $generated@@367) $generated@@371))
 :pattern ( ($generated@@98 ($generated@@352 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@98 ($generated@@320 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@286 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@285 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@98 ($generated@@331 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@98 ($generated@@283 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@98 ($generated@@360 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@98 ($generated@@283 $generated@@372) $generated@@376))
 :pattern ( ($generated@@98 ($generated@@360 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@98 ($generated@@331 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@70)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (and (= (type $generated@@380) ($generated@@267 $generated@@181 $generated@@181)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) $generated@@70)) (= (type $generated@@383) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@181) ($generated@@0 ($generated@@98 ($generated@@265 $generated@@380) $generated@@384))) (and ($generated@@224 ($generated@@98 ($generated@@352 $generated@@380) $generated@@384) $generated@@382 $generated@@383) ($generated@@224 $generated@@384 $generated@@381 $generated@@383)))
 :pattern ( ($generated@@98 ($generated@@352 $generated@@380) $generated@@384))
 :pattern ( ($generated@@98 ($generated@@265 $generated@@380) $generated@@384))
))))
 :pattern ( ($generated@@95 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@70)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@285 $generated@@181 $generated@@181)) (= (type $generated@@389) $generated@@70)) (= (type $generated@@390) $generated@@70)) (= (type $generated@@391) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@181) ($generated@@0 ($generated@@98 ($generated@@283 $generated@@388) $generated@@392))) (and ($generated@@224 ($generated@@98 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@224 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@98 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@98 ($generated@@283 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@95 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@393) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@394) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@395) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@393 $generated@@395))) (and ($generated@@158 $generated@@393 $generated@@394) ($generated@@158 $generated@@394 $generated@@395))) ($generated@@158 $generated@@393 $generated@@395))
 :pattern ( ($generated@@158 $generated@@393 $generated@@394) ($generated@@158 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@T) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@87 $generated@@397 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@287 (type $generated@@398))))
(let (($generated@@400 ($generated@@286 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@285 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@284 $generated@@400 $generated@@399)) (= ($generated@@283 $generated@@398) ($generated@@396 $generated@@400))))))
 :pattern ( ($generated@@283 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@287 (type $generated@@401))))
(let (($generated@@403 ($generated@@286 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@285 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@284 $generated@@403 $generated@@402)) (= ($generated@@331 $generated@@401) ($generated@@396 $generated@@402))))))
 :pattern ( ($generated@@331 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@287 (type $generated@@404))))
(let (($generated@@406 ($generated@@286 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@285 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@284 $generated@@406 $generated@@405)) (= ($generated@@359 $generated@@404) ($generated@@396 $generated@@181))))))
 :pattern ( ($generated@@359 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@269 (type $generated@@407))))
(let (($generated@@409 ($generated@@268 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@267 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@266 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@181) (= (type $generated@@411) $generated@@181)) ($generated@@0 ($generated@@98 ($generated@@351 $generated@@407) ($generated@@244 ($generated@@194 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@351 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@287 (type $generated@@412))))
(let (($generated@@414 ($generated@@286 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@285 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@284 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@181) (= (type $generated@@416) $generated@@181)) ($generated@@0 ($generated@@98 ($generated@@359 $generated@@412) ($generated@@244 ($generated@@194 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@76)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@T) ) (!  (=> (and (= (type $generated@@419) $generated@@76) (= (type $generated@@420) $generated@@74)) (and (= ($generated@@417 ($generated@@202 $generated@@421 $generated@@419 $generated@@420)) $generated@@419) (= ($generated@@83 ($generated@@202 $generated@@421 $generated@@419 $generated@@420)) $generated@@420)))
 :pattern ( ($generated@@202 $generated@@421 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@181) ($generated@@195 $generated@@422 $generated@@46)) (and (= ($generated@@244 ($generated@@310 $generated@@2 $generated@@422)) $generated@@422) ($generated@@93 ($generated@@310 $generated@@2 $generated@@422) $generated@@46)))
 :pattern ( ($generated@@195 $generated@@422 $generated@@46))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@181) ($generated@@195 $generated@@423 $generated@@47)) (and (= ($generated@@244 ($generated@@310 $generated@@3 $generated@@423)) $generated@@423) ($generated@@93 ($generated@@310 $generated@@3 $generated@@423) $generated@@47)))
 :pattern ( ($generated@@195 $generated@@423 $generated@@47))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@181) ($generated@@195 $generated@@424 $generated@@44)) (and (= ($generated@@244 ($generated@@310 $generated@@4 $generated@@424)) $generated@@424) ($generated@@93 ($generated@@310 $generated@@4 $generated@@424) $generated@@44)))
 :pattern ( ($generated@@195 $generated@@424 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@425) 21))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@181) ($generated@@195 $generated@@426 $generated@@45)) (and (= ($generated@@244 ($generated@@310 $generated@@425 $generated@@426)) $generated@@426) ($generated@@93 ($generated@@310 $generated@@425 $generated@@426) $generated@@45)))
 :pattern ( ($generated@@195 $generated@@426 $generated@@45))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (= (type $generated@@428) $generated@@70) (= ($generated@@195 ($generated@@244 $generated@@427) $generated@@428) ($generated@@93 $generated@@427 $generated@@428)))
 :pattern ( ($generated@@195 ($generated@@244 $generated@@427) $generated@@428))
)))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@430) $generated@@88)) (or ($generated@@90 $generated@@429 $generated@@430) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@429) (and (not (= $generated@@430 $generated@@92)) (and ($generated@@93 $generated@@430 $generated@@94) ($generated@@95 $generated@@430 $generated@@94 $generated@@429))))))) (= ($generated@@86 $generated@@429 $generated@@430) (= ($generated ($generated@@97 ($generated@@98 $generated@@429 $generated@@430) $generated@@99)) ($generated@@96 8))))
 :pattern ( ($generated@@86 $generated@@429 $generated@@430) ($generated@@91 $generated@@429))
))))
(assert  (=> (<= 1 $generated@@85) (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@431) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@432) $generated@@88)) (or ($generated@@151 $generated@@431 $generated@@432) (and (not (= 1 $generated@@85)) (and ($generated@@91 $generated@@431) (and (not (= $generated@@432 $generated@@92)) (and ($generated@@93 $generated@@432 $generated@@94) ($generated@@95 $generated@@432 $generated@@94 $generated@@431))))))) (= ($generated@@150 $generated@@431 $generated@@432) (= ($generated ($generated@@97 ($generated@@98 $generated@@431 $generated@@432) $generated@@99)) ($generated@@96 8))))
 :pattern ( ($generated@@150 $generated@@431 $generated@@432) ($generated@@91 $generated@@431))
))))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@100 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@87 $generated@@434 $generated@@2)) (<= 0 ($generated@@259 $generated@@433))))
 :pattern ( ($generated@@259 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@239 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@238 $generated@@436)) (<= 0 ($generated@@237 $generated@@435))))
 :pattern ( ($generated@@237 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@70)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@70) (= (type $generated@@440) $generated@@70)) (= ($generated@@437 ($generated@@377 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@377 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@70)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@70) (= (type $generated@@444) $generated@@70)) (= ($generated@@441 ($generated@@377 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@377 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@70) (= (type $generated@@446) $generated@@70)) (= ($generated@@81 ($generated@@377 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@377 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@70)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@70) (= (type $generated@@450) $generated@@70)) (= ($generated@@447 ($generated@@385 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@385 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@70)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@70) (= (type $generated@@454) $generated@@70)) (= ($generated@@451 ($generated@@385 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@385 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@70) (= (type $generated@@456) $generated@@70)) (= ($generated@@81 ($generated@@385 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@385 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@181) (= (type $generated@@458) $generated@@181)) (= ($generated@@230 ($generated@@194 $generated@@457 $generated@@458)) $generated@@62))
 :pattern ( ($generated@@194 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@70)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@70) (= (type $generated@@462) $generated@@70)) (= ($generated@@459 ($generated@@171 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@171 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@70) (= (type $generated@@466) $generated@@70)) (= ($generated@@463 ($generated@@171 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@171 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@181) (= (type $generated@@468) $generated@@181)) (= ($generated@@179 ($generated@@194 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@194 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@181) (= (type $generated@@470) $generated@@181)) (= ($generated@@180 ($generated@@194 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@194 $generated@@469 $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@471 $generated@@473))
)) (forall (($generated@@474 T@U) ($generated@@475 Int) ) (! (let (($generated@@476 ($generated@@239 (type $generated@@474))))
(= (type ($generated@@472 $generated@@474 $generated@@475)) $generated@@476))
 :pattern ( ($generated@@472 $generated@@474 $generated@@475))
))))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@477) ($generated@@238 $generated@@181)) (= (type $generated@@478) $generated@@70)) (= (type $generated@@479) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@477 ($generated@@471 $generated@@478) $generated@@479) (forall (($generated@@480 Int) ) (!  (=> (and (<= 0 $generated@@480) (< $generated@@480 ($generated@@237 $generated@@477))) ($generated@@224 ($generated@@472 $generated@@477 $generated@@480) $generated@@478 $generated@@479))
 :pattern ( ($generated@@472 $generated@@477 $generated@@480))
))))
 :pattern ( ($generated@@95 $generated@@477 ($generated@@471 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 Int) ) (! (= ($generated@@481 ($generated@@154 $generated@@482)) $generated@@482)
 :pattern ( ($generated@@154 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@70) (= ($generated@@483 ($generated@@209 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@209 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@70) (= ($generated@@81 ($generated@@209 $generated@@486)) $generated@@54))
 :pattern ( ($generated@@209 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@70) (= ($generated@@487 ($generated@@214 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@214 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@70) (= ($generated@@81 ($generated@@214 $generated@@490)) $generated@@55))
 :pattern ( ($generated@@214 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@70) (= ($generated@@491 ($generated@@186 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@186 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@70) (= ($generated@@81 ($generated@@186 $generated@@494)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@70) (= ($generated@@495 ($generated@@471 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@471 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@70) (= ($generated@@81 ($generated@@471 $generated@@498)) $generated@@57))
 :pattern ( ($generated@@471 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 (type $generated@@499)))
(= ($generated@@310 $generated@@500 ($generated@@244 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@244 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@267 $generated@@181 $generated@@181)) (= (type $generated@@502) $generated@@70)) (= (type $generated@@503) $generated@@70)) (= ($generated@@93 $generated@@501 ($generated@@377 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@181) ($generated@@0 ($generated@@98 ($generated@@265 $generated@@501) $generated@@504))) (and ($generated@@195 ($generated@@98 ($generated@@352 $generated@@501) $generated@@504) $generated@@503) ($generated@@195 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@98 ($generated@@352 $generated@@501) $generated@@504))
 :pattern ( ($generated@@98 ($generated@@265 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@93 $generated@@501 ($generated@@377 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@285 $generated@@181 $generated@@181)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) $generated@@70)) (= ($generated@@93 $generated@@505 ($generated@@385 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@181) ($generated@@0 ($generated@@98 ($generated@@283 $generated@@505) $generated@@508))) (and ($generated@@195 ($generated@@98 ($generated@@360 $generated@@505) $generated@@508) $generated@@507) ($generated@@195 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@98 ($generated@@360 $generated@@505) $generated@@508))
 :pattern ( ($generated@@98 ($generated@@283 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@93 $generated@@505 ($generated@@385 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@511) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@512) $generated@@88)) (=> (and (and (and ($generated@@91 $generated@@510) ($generated@@91 $generated@@511)) (and (not (= $generated@@512 $generated@@92)) ($generated@@93 $generated@@512 $generated@@94))) (and ($generated@@509 $generated@@510) ($generated@@158 $generated@@510 $generated@@511))) (=> (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@73 (type $generated@@514))))
 (=> (and (and (= (type $generated@@513) $generated@@88) (= (type $generated@@514) ($generated@@72 $generated@@515))) (and (not (= $generated@@513 $generated@@92)) (= $generated@@513 $generated@@512))) (= ($generated@@97 ($generated@@98 $generated@@510 $generated@@513) $generated@@514) ($generated@@97 ($generated@@98 $generated@@511 $generated@@513) $generated@@514))))
 :no-pattern (type $generated@@513)
 :no-pattern (type $generated@@514)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
)) (= ($generated@@86 $generated@@510 $generated@@512) ($generated@@86 $generated@@511 $generated@@512)))))
 :pattern ( ($generated@@509 $generated@@510) ($generated@@158 $generated@@510 $generated@@511) ($generated@@86 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@517) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@518) $generated@@88)) (=> (and (and (and ($generated@@91 $generated@@516) ($generated@@91 $generated@@517)) (and (not (= $generated@@518 $generated@@92)) ($generated@@93 $generated@@518 $generated@@94))) (and ($generated@@509 $generated@@516) ($generated@@158 $generated@@516 $generated@@517))) (=> (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@73 (type $generated@@520))))
 (=> (and (and (= (type $generated@@519) $generated@@88) (= (type $generated@@520) ($generated@@72 $generated@@521))) (and (not (= $generated@@519 $generated@@92)) (= $generated@@519 $generated@@518))) (= ($generated@@97 ($generated@@98 $generated@@516 $generated@@519) $generated@@520) ($generated@@97 ($generated@@98 $generated@@517 $generated@@519) $generated@@520))))
 :no-pattern (type $generated@@519)
 :no-pattern (type $generated@@520)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
 :no-pattern ($generated $generated@@520)
 :no-pattern ($generated@@0 $generated@@520)
)) (= ($generated@@150 $generated@@516 $generated@@518) ($generated@@150 $generated@@517 $generated@@518)))))
 :pattern ( ($generated@@509 $generated@@516) ($generated@@158 $generated@@516 $generated@@517) ($generated@@150 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@181) (= (type $generated@@525) $generated@@181)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@194 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@194 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@181) (= (type $generated@@527) $generated@@181)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@194 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@194 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@181) (= (type $generated@@529) $generated@@70)) (= (type $generated@@530) $generated@@70)) ($generated@@195 $generated@@528 ($generated@@377 $generated@@529 $generated@@530))) (and (= ($generated@@244 ($generated@@310 ($generated@@267 $generated@@181 $generated@@181) $generated@@528)) $generated@@528) ($generated@@93 ($generated@@310 ($generated@@267 $generated@@181 $generated@@181) $generated@@528) ($generated@@377 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@195 $generated@@528 ($generated@@377 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@181) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) $generated@@70)) ($generated@@195 $generated@@531 ($generated@@385 $generated@@532 $generated@@533))) (and (= ($generated@@244 ($generated@@310 ($generated@@285 $generated@@181 $generated@@181) $generated@@531)) $generated@@531) ($generated@@93 ($generated@@310 ($generated@@285 $generated@@181 $generated@@181) $generated@@531) ($generated@@385 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@195 $generated@@531 ($generated@@385 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@70) (= (type $generated@@535) $generated@@70)) (= (type $generated@@536) $generated@@181)) ($generated@@195 $generated@@536 ($generated@@171 $generated@@534 $generated@@535))) (and (= ($generated@@244 ($generated@@310 $generated@@172 $generated@@536)) $generated@@536) ($generated@@93 ($generated@@310 $generated@@172 $generated@@536) ($generated@@171 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@195 $generated@@536 ($generated@@171 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@98 ($generated@@396 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@98 ($generated@@396 $generated@@538) $generated@@537)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@545 T@T) ($generated@@546 T@T) ) (= ($generated@@1 ($generated@@541 $generated@@545 $generated@@546)) 22)) (forall (($generated@@547 T@T) ($generated@@548 T@T) ) (! (= ($generated@@542 ($generated@@541 $generated@@547 $generated@@548)) $generated@@547)
 :pattern ( ($generated@@541 $generated@@547 $generated@@548))
))) (forall (($generated@@549 T@T) ($generated@@550 T@T) ) (! (= ($generated@@543 ($generated@@541 $generated@@549 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@541 $generated@@549 $generated@@550))
))) (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@543 (type $generated@@551))))
(= (type ($generated@@539 $generated@@551 $generated@@552 $generated@@553)) $generated@@554))
 :pattern ( ($generated@@539 $generated@@551 $generated@@552 $generated@@553))
))) (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
(let (($generated@@560 (type $generated@@556)))
(= (type ($generated@@544 $generated@@555 $generated@@556 $generated@@557 $generated@@558)) ($generated@@541 $generated@@560 $generated@@559))))
 :pattern ( ($generated@@544 $generated@@555 $generated@@556 $generated@@557 $generated@@558))
))) (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@543 (type $generated@@561))))
 (=> (= (type $generated@@564) $generated@@565) (= ($generated@@539 ($generated@@544 $generated@@561 $generated@@562 $generated@@563 $generated@@564) $generated@@562 $generated@@563) $generated@@564)))
 :weight 0
))) (and (and (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (or (= $generated@@568 $generated@@570) (= ($generated@@539 ($generated@@544 $generated@@567 $generated@@568 $generated@@569 $generated@@566) $generated@@570 $generated@@571) ($generated@@539 $generated@@567 $generated@@570 $generated@@571)))
 :weight 0
)) (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (or (= $generated@@575 $generated@@577) (= ($generated@@539 ($generated@@544 $generated@@573 $generated@@574 $generated@@575 $generated@@572) $generated@@576 $generated@@577) ($generated@@539 $generated@@573 $generated@@576 $generated@@577)))
 :weight 0
))) (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (or true (= ($generated@@539 ($generated@@544 $generated@@579 $generated@@580 $generated@@581 $generated@@578) $generated@@582 $generated@@583) ($generated@@539 $generated@@579 $generated@@582 $generated@@583)))
 :weight 0
)))) (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (= (type ($generated@@540 $generated@@584 $generated@@585 $generated@@586 $generated@@587)) ($generated@@541 $generated@@88 $generated@@4))
 :pattern ( ($generated@@540 $generated@@584 $generated@@585 $generated@@586 $generated@@587))
))))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@73 (type $generated@@593))))
 (=> (and (and (and (and (and (= (type $generated@@588) $generated@@88) (= (type $generated@@589) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@590) ($generated@@72 $generated@@4))) (= (type $generated@@591) $generated@@88)) (= (type $generated@@592) $generated@@88)) (= (type $generated@@593) ($generated@@72 $generated@@594))) (= ($generated@@0 ($generated@@539 ($generated@@540 $generated@@588 $generated@@589 $generated@@590 $generated@@591) $generated@@592 $generated@@593))  (=> (and (not (= $generated@@592 $generated@@588)) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@589 $generated@@592) $generated@@590))) (= $generated@@592 $generated@@591)))))
 :pattern ( ($generated@@539 ($generated@@540 $generated@@588 $generated@@589 $generated@@590 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (= (type ($generated@@595 $generated@@596 $generated@@597 $generated@@598 $generated@@599)) ($generated@@541 $generated@@88 $generated@@4))
 :pattern ( ($generated@@595 $generated@@596 $generated@@597 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@73 (type $generated@@605))))
 (=> (and (and (and (and (and (= (type $generated@@600) $generated@@88) (= (type $generated@@601) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@602) ($generated@@72 $generated@@4))) (= (type $generated@@603) $generated@@88)) (= (type $generated@@604) $generated@@88)) (= (type $generated@@605) ($generated@@72 $generated@@606))) (= ($generated@@0 ($generated@@539 ($generated@@595 $generated@@600 $generated@@601 $generated@@602 $generated@@603) $generated@@604 $generated@@605))  (=> (and (not (= $generated@@604 $generated@@600)) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@601 $generated@@604) $generated@@602))) (= $generated@@604 $generated@@603)))))
 :pattern ( ($generated@@539 ($generated@@595 $generated@@600 $generated@@601 $generated@@602 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@77)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@70) (= (type $generated@@610) $generated@@70)) (and (= ($generated@@81 ($generated@@171 $generated@@609 $generated@@610)) $generated@@63) (= ($generated@@607 ($generated@@171 $generated@@609 $generated@@610)) $generated@@67)))
 :pattern ( ($generated@@171 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@172) (= ($generated@@522 ($generated@@244 $generated@@611)) ($generated@@523 $generated@@611)))
 :pattern ( ($generated@@522 ($generated@@244 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@181) ($generated@@195 $generated@@612 ($generated@@154 0))) (and (= ($generated@@244 ($generated@@310 $generated@@2 $generated@@612)) $generated@@612) ($generated@@93 ($generated@@310 ($generated@@87 $generated@@181 $generated@@4) $generated@@612) ($generated@@154 0))))
 :pattern ( ($generated@@195 $generated@@612 ($generated@@154 0)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@181) (= (type $generated@@614) $generated@@70)) ($generated@@195 $generated@@613 ($generated@@209 $generated@@614))) (and (= ($generated@@244 ($generated@@310 ($generated@@87 $generated@@181 $generated@@4) $generated@@613)) $generated@@613) ($generated@@93 ($generated@@310 ($generated@@87 $generated@@181 $generated@@4) $generated@@613) ($generated@@209 $generated@@614))))
 :pattern ( ($generated@@195 $generated@@613 ($generated@@209 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@181) (= (type $generated@@616) $generated@@70)) ($generated@@195 $generated@@615 ($generated@@214 $generated@@616))) (and (= ($generated@@244 ($generated@@310 ($generated@@87 $generated@@181 $generated@@4) $generated@@615)) $generated@@615) ($generated@@93 ($generated@@310 ($generated@@87 $generated@@181 $generated@@4) $generated@@615) ($generated@@214 $generated@@616))))
 :pattern ( ($generated@@195 $generated@@615 ($generated@@214 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@181) (= (type $generated@@618) $generated@@70)) ($generated@@195 $generated@@617 ($generated@@186 $generated@@618))) (and (= ($generated@@244 ($generated@@310 ($generated@@87 $generated@@181 $generated@@2) $generated@@617)) $generated@@617) ($generated@@93 ($generated@@310 ($generated@@87 $generated@@181 $generated@@2) $generated@@617) ($generated@@186 $generated@@618))))
 :pattern ( ($generated@@195 $generated@@617 ($generated@@186 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@181) (= (type $generated@@620) $generated@@70)) ($generated@@195 $generated@@619 ($generated@@471 $generated@@620))) (and (= ($generated@@244 ($generated@@310 ($generated@@238 $generated@@181) $generated@@619)) $generated@@619) ($generated@@93 ($generated@@310 ($generated@@238 $generated@@181) $generated@@619) ($generated@@471 $generated@@620))))
 :pattern ( ($generated@@195 $generated@@619 ($generated@@471 $generated@@620)))
)))
(assert (= ($generated@@81 $generated@@162) $generated@@65))
(assert (= ($generated@@607 $generated@@162) $generated@@68))
(assert (= ($generated@@81 $generated@@94) $generated@@66))
(assert (= ($generated@@607 $generated@@94) $generated@@68))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@87 $generated@@181 $generated@@2)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@621 ($generated@@186 $generated@@622) $generated@@623) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@181) (< 0 ($generated ($generated@@98 $generated@@621 $generated@@624)))) ($generated@@224 $generated@@624 $generated@@622 $generated@@623))
 :pattern ( ($generated@@98 $generated@@621 $generated@@624))
))))
 :pattern ( ($generated@@95 $generated@@621 ($generated@@186 $generated@@622) $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@172) (= (type $generated@@626) $generated@@70)) (= (type $generated@@627) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@627) (and ($generated@@170 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@70) ($generated@@95 $generated@@625 ($generated@@171 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@95 $generated@@625 ($generated@@171 $generated@@626 $generated@@628) $generated@@627))
))))) ($generated@@224 ($generated@@179 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@224 ($generated@@179 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@172) (= (type $generated@@630) $generated@@70)) (= (type $generated@@631) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@631) (and ($generated@@170 $generated@@629) (exists (($generated@@632 T@U) ) (!  (and (= (type $generated@@632) $generated@@70) ($generated@@95 $generated@@629 ($generated@@171 $generated@@632 $generated@@630) $generated@@631))
 :pattern ( ($generated@@95 $generated@@629 ($generated@@171 $generated@@632 $generated@@630) $generated@@631))
))))) ($generated@@224 ($generated@@180 $generated@@629) $generated@@630 $generated@@631))
 :pattern ( ($generated@@224 ($generated@@180 $generated@@629) $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@181) (= (type $generated@@634) $generated@@181)) (= ($generated@@194 ($generated@@220 $generated@@633) ($generated@@220 $generated@@634)) ($generated@@220 ($generated@@194 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@194 ($generated@@220 $generated@@633) ($generated@@220 $generated@@634)))
)))
(assert (forall (($generated@@635 Int) ) (! (= ($generated@@244 ($generated@@8 ($generated@@96 $generated@@635))) ($generated@@220 ($generated@@244 ($generated@@8 $generated@@635))))
 :pattern ( ($generated@@244 ($generated@@8 ($generated@@96 $generated@@635))))
)))
(assert (forall (($generated@@636 T@U) ) (! (= ($generated@@244 ($generated@@220 $generated@@636)) ($generated@@220 ($generated@@244 $generated@@636)))
 :pattern ( ($generated@@244 ($generated@@220 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (! (let (($generated@@638 ($generated@@239 (type $generated@@637))))
 (=> (and (= (type $generated@@637) ($generated@@238 $generated@@638)) (= ($generated@@237 $generated@@637) 0)) (= $generated@@637 ($generated@@236 $generated@@638))))
 :pattern ( ($generated@@237 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (! (let (($generated@@642 (type $generated@@640)))
 (=> (and (and (= (type $generated@@639) ($generated@@87 $generated@@642 $generated@@2)) (= (type $generated@@641) $generated@@2)) (<= 0 ($generated $generated@@641))) (= ($generated@@259 ($generated@@102 $generated@@639 $generated@@640 $generated@@641)) (+ (- ($generated@@259 $generated@@639) ($generated ($generated@@98 $generated@@639 $generated@@640))) ($generated $generated@@641)))))
 :pattern ( ($generated@@259 ($generated@@102 $generated@@639 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@644) $generated@@2)) ($generated@@95 $generated@@644 $generated@@46 $generated@@643))
 :pattern ( ($generated@@95 $generated@@644 $generated@@46 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@646) $generated@@3)) ($generated@@95 $generated@@646 $generated@@47 $generated@@645))
 :pattern ( ($generated@@95 $generated@@646 $generated@@47 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@648) $generated@@4)) ($generated@@95 $generated@@648 $generated@@44 $generated@@647))
 :pattern ( ($generated@@95 $generated@@648 $generated@@44 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@650) $generated@@425)) ($generated@@95 $generated@@650 $generated@@45 $generated@@649))
 :pattern ( ($generated@@95 $generated@@650 $generated@@45 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@652) $generated@@181)) ($generated@@95 $generated@@652 $generated@@48 $generated@@651))
 :pattern ( ($generated@@95 $generated@@652 $generated@@48 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@238 $generated@@181)) (= (type $generated@@654) $generated@@70)) (= ($generated@@93 $generated@@653 ($generated@@471 $generated@@654)) (forall (($generated@@655 Int) ) (!  (=> (and (<= 0 $generated@@655) (< $generated@@655 ($generated@@237 $generated@@653))) ($generated@@195 ($generated@@472 $generated@@653 $generated@@655) $generated@@654))
 :pattern ( ($generated@@472 $generated@@653 $generated@@655))
))))
 :pattern ( ($generated@@93 $generated@@653 ($generated@@471 $generated@@654)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 Int) ) (!  (=> (= (type $generated@@657) ($generated@@238 $generated@@181)) (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@237 $generated@@657))) (< ($generated@@523 ($generated@@310 $generated@@172 ($generated@@472 $generated@@657 $generated@@658))) ($generated@@656 $generated@@657))))
 :pattern ( ($generated@@523 ($generated@@310 $generated@@172 ($generated@@472 $generated@@657 $generated@@658))))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@267 $generated@@181 $generated@@181)) (= (type $generated@@660) $generated@@70)) (= (type $generated@@661) $generated@@70)) ($generated@@93 $generated@@659 ($generated@@377 $generated@@660 $generated@@661))) (and (and ($generated@@93 ($generated@@265 $generated@@659) ($generated@@209 $generated@@660)) ($generated@@93 ($generated@@320 $generated@@659) ($generated@@209 $generated@@661))) ($generated@@93 ($generated@@351 $generated@@659) ($generated@@209 ($generated@@171 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@93 $generated@@659 ($generated@@377 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) ($generated@@285 $generated@@181 $generated@@181)) (= (type $generated@@663) $generated@@70)) (= (type $generated@@664) $generated@@70)) ($generated@@93 $generated@@662 ($generated@@385 $generated@@663 $generated@@664))) (and (and ($generated@@93 ($generated@@283 $generated@@662) ($generated@@214 $generated@@663)) ($generated@@93 ($generated@@331 $generated@@662) ($generated@@214 $generated@@664))) ($generated@@93 ($generated@@359 $generated@@662) ($generated@@214 ($generated@@171 $generated@@663 $generated@@664)))))
 :pattern ( ($generated@@93 $generated@@662 ($generated@@385 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@2) ($generated@@93 $generated@@665 $generated@@46))
 :pattern ( ($generated@@93 $generated@@665 $generated@@46))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@3) ($generated@@93 $generated@@666 $generated@@47))
 :pattern ( ($generated@@93 $generated@@666 $generated@@47))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@4) ($generated@@93 $generated@@667 $generated@@44))
 :pattern ( ($generated@@93 $generated@@667 $generated@@44))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@425) ($generated@@93 $generated@@668 $generated@@45))
 :pattern ( ($generated@@93 $generated@@668 $generated@@45))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@181) ($generated@@93 $generated@@669 $generated@@48))
 :pattern ( ($generated@@93 $generated@@669 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Bool)
(declare-fun $generated@@674 () T@U)
(assert  (and (and (and (= (type $generated@@670) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@671) $generated@@88)) (= (type $generated@@672) ($generated@@541 $generated@@88 $generated@@4))) (= (type $generated@@674) ($generated@@541 $generated@@88 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@675  (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> ($generated@@86 $generated@@670 $generated@@671) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@670 $generated@@671) $generated@@99))))) (=> (=> ($generated@@86 $generated@@670 $generated@@671) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@670 $generated@@671) $generated@@99)))) (=> (= (ControlFlow 0 7) (- 0 6)) (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@670 $generated@@671) $generated@@99)) ($generated@@96 8)) (=> ($generated@@90 $generated@@670 $generated@@671) (or ($generated@@86 $generated@@670 $generated@@671) (= ($generated ($generated@@97 ($generated@@98 $generated@@670 $generated@@671) $generated@@99)) ($generated@@96 8))))))))))
(let (($generated@@676  (=> (and (and (= $generated@@672 ($generated@@595 $generated@@92 $generated@@670 $generated@@60 $generated@@671)) (= $generated@@673 ($generated@@0 ($generated@@539 $generated@@674 $generated@@671 $generated@@99)))) (and (= ($generated@@150 $generated@@670 $generated@@671) (= ($generated ($generated@@97 ($generated@@98 $generated@@670 $generated@@671) $generated@@99)) ($generated@@96 8))) ($generated@@93 ($generated@@11 ($generated@@150 $generated@@670 $generated@@671)) $generated@@44))) (and (=> (= (ControlFlow 0 9) (- 0 10)) $generated@@673) (=> $generated@@673 (=> (= (ControlFlow 0 9) 7) $generated@@675))))))
(let (($generated@@677 true))
(let (($generated@@678  (=> (and (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@670 $generated@@671) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@670 $generated@@671)) (= (ControlFlow 0 3) 1)) $generated@@677)))
(let (($generated@@679  (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@670 $generated@@671) $generated@@99)) ($generated@@96 8)) (=> (and (and ($generated@@95 $generated@@671 $generated@@162 $generated@@670) ($generated@@90 $generated@@670 $generated@@671)) (and ($generated@@86 $generated@@670 $generated@@671) (= (ControlFlow 0 2) 1))) $generated@@677))))
(let (($generated@@680  (=> (=> ($generated@@86 $generated@@670 $generated@@671) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@670 $generated@@671) $generated@@99)))) (and (=> (= (ControlFlow 0 5) 2) $generated@@679) (=> (= (ControlFlow 0 5) 3) $generated@@678)))))
(let (($generated@@681  (=> (and (and ($generated@@95 $generated@@671 $generated@@162 $generated@@670) ($generated@@90 $generated@@670 $generated@@671)) (and ($generated@@86 $generated@@670 $generated@@671) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@670 $generated@@671) $generated@@99))))) (and (=> (= (ControlFlow 0 4) 2) $generated@@679) (=> (= (ControlFlow 0 4) 3) $generated@@678)))))
(let (($generated@@682  (=> (= $generated@@674 ($generated@@540 $generated@@92 $generated@@670 $generated@@60 $generated@@671)) (and (and (=> (= (ControlFlow 0 11) 9) $generated@@676) (=> (= (ControlFlow 0 11) 4) $generated@@681)) (=> (= (ControlFlow 0 11) 5) $generated@@680)))))
(let (($generated@@683  (=> (and ($generated@@91 $generated@@670) ($generated@@509 $generated@@670)) (=> (and (and (not (= $generated@@671 $generated@@92)) (and ($generated@@93 $generated@@671 $generated@@94) ($generated@@95 $generated@@671 $generated@@94 $generated@@670))) (and (= 1 $generated@@85) (= (ControlFlow 0 12) 11))) $generated@@682))))
$generated@@683))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@225 (T@T) T@U)
(declare-fun $generated@@226 (T@U) Int)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@T) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@299 (T@T T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@366 (T@U T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@382 () Int)
(declare-fun $generated@@383 (T@U T@U) Int)
(declare-fun $generated@@384 (T@U T@U) Bool)
(declare-fun $generated@@390 (T@T) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@419 () T@T)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@462 (T@U Int) T@U)
(declare-fun $generated@@471 (T@U) Int)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@516 (T@U T@U T@U) T@U)
(declare-fun $generated@@517 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@518 (T@T T@T) T@T)
(declare-fun $generated@@519 (T@T) T@T)
(declare-fun $generated@@520 (T@T) T@T)
(declare-fun $generated@@521 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@572 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Bool)
(declare-fun $generated@@641 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@181) $generated@@70))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@88) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 $generated@@181 $generated@@183) ($generated@@85 $generated@@182 $generated@@147 $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 $generated@@181 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@186 $generated@@187)) $generated@@161)
 :pattern ( ($generated@@184 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@170)) (= (type $generated@@191) $generated@@170)) (= ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189))  (and ($generated@@185 $generated@@190 $generated@@188) ($generated@@185 $generated@@191 $generated@@189))))
 :pattern ( ($generated@@154 ($generated@@184 $generated@@190 $generated@@191) ($generated@@160 $generated@@188 $generated@@189)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@72 $generated@@193))
 :pattern ( ($generated@@192 $generated@@193 $generated@@194 $generated@@195))
)))
(assert (= ($generated@@192 $generated@@2 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@196 $generated@@151)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@161) (= (type $generated@@198) $generated@@161)) (= ($generated@@167 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@167 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@70)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@202) $generated@@70)) (= ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@170) ($generated@@0 ($generated@@92 $generated@@201 $generated@@203))) ($generated@@185 $generated@@203 $generated@@202))
 :pattern ( ($generated@@92 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@154 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@185 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@214) $generated@@70) (= (type $generated@@215) $generated@@70)) (= (type $generated@@216) $generated@@170)) (= (type $generated@@217) $generated@@170)) (= (type $generated@@218) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@218)) (= ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218)  (and ($generated@@213 $generated@@216 $generated@@214 $generated@@218) ($generated@@213 $generated@@217 $generated@@215 $generated@@218))))
 :pattern ( ($generated@@85 ($generated@@184 $generated@@216 $generated@@217) ($generated@@160 $generated@@214 $generated@@215) $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@219 $generated@@220)) $generated@@75)
 :pattern ( ($generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@161) (= ($generated@@159 $generated@@221) (= ($generated@@219 $generated@@221) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@161) ($generated@@159 $generated@@222)) (exists (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (and (and (= (type $generated@@223) $generated@@170) (= (type $generated@@224) $generated@@170)) (= $generated@@222 ($generated@@184 $generated@@223 $generated@@224)))
 :no-pattern (type $generated@@223)
 :no-pattern (type $generated@@224)
 :no-pattern ($generated $generated@@223)
 :no-pattern ($generated@@0 $generated@@223)
 :no-pattern ($generated $generated@@224)
 :no-pattern ($generated@@0 $generated@@224)
)))
 :pattern ( ($generated@@159 $generated@@222))
)))
(assert  (and (and (forall (($generated@@229 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@229)) 18)) (forall (($generated@@230 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@227 $generated@@230))
))) (forall (($generated@@231 T@T) ) (! (= (type ($generated@@225 $generated@@231)) ($generated@@227 $generated@@231))
 :pattern ( ($generated@@225 $generated@@231))
))))
(assert (forall (($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@225 $generated@@232)) 0)
 :pattern ( ($generated@@225 $generated@@232))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@170)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@70) (= (type $generated@@237) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237) ($generated@@85 $generated@@235 $generated@@236 $generated@@237)))
 :pattern ( ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@238) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@239) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@240) $generated@@170)) (= (type $generated@@241) $generated@@70)) ($generated@@143 $generated@@238 $generated@@239)) ($generated@@213 $generated@@240 $generated@@241 $generated@@238)) ($generated@@213 $generated@@240 $generated@@241 $generated@@239))
 :pattern ( ($generated@@143 $generated@@238 $generated@@239) ($generated@@213 $generated@@240 $generated@@241 $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@242) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@243) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@245) $generated@@70)) ($generated@@143 $generated@@242 $generated@@243)) ($generated@@85 $generated@@244 $generated@@245 $generated@@242)) ($generated@@85 $generated@@244 $generated@@245 $generated@@243))
 :pattern ( ($generated@@143 $generated@@242 $generated@@243) ($generated@@85 $generated@@244 $generated@@245 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@247) $generated@@88)) (=> (and (and ($generated@@152 $generated@@246) (and (not (= $generated@@247 $generated@@148)) (= ($generated@@153 $generated@@247) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151) $generated@@46 $generated@@246)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@246 $generated@@247) $generated@@151))
)))
(assert (forall (($generated@@250 T@T) ) (! (= (type ($generated@@249 $generated@@250)) ($generated@@87 $generated@@250 $generated@@2))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@90 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@87 $generated@@252 $generated@@2)) (and (= (= ($generated@@248 $generated@@251) 0) (= $generated@@251 ($generated@@249 $generated@@252))) (=> (not (= ($generated@@248 $generated@@251) 0)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) (< 0 ($generated ($generated@@92 $generated@@251 $generated@@253))))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 19)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@87 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@92 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 20)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@87 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@92 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@292) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@290 $generated@@291 $generated@@292)) (and ($generated@@143 $generated@@291 $generated@@292) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@73 (type $generated@@294))))
 (=> (and (and (= (type $generated@@293) $generated@@88) (= (type $generated@@294) ($generated@@72 $generated@@295))) (not ($generated@@196 $generated@@294))) (= ($generated@@94 ($generated@@92 $generated@@291 $generated@@293) $generated@@294) ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@292 $generated@@293) $generated@@294))
))))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@90 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@87 $generated@@297 $generated@@2)) (= ($generated@@176 $generated@@296) (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@297) (and (<= 0 ($generated ($generated@@92 $generated@@296 $generated@@298))) (<= ($generated ($generated@@92 $generated@@296 $generated@@298)) ($generated@@248 $generated@@296))))
 :pattern ( ($generated@@92 $generated@@296 $generated@@298))
)))))
 :pattern ( ($generated@@176 $generated@@296))
)))
(assert (forall (($generated@@300 T@T) ($generated@@301 T@U) ) (! (= (type ($generated@@299 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@170) ($generated@@185 $generated@@302 $generated@@147)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@302)) $generated@@302) ($generated@@154 ($generated@@299 $generated@@88 $generated@@302) $generated@@147)))
 :pattern ( ($generated@@185 $generated@@302 $generated@@147))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@170) ($generated@@185 $generated@@303 $generated@@181)) (and (= ($generated@@233 ($generated@@299 $generated@@88 $generated@@303)) $generated@@303) ($generated@@154 ($generated@@299 $generated@@88 $generated@@303) $generated@@181)))
 :pattern ( ($generated@@185 $generated@@303 $generated@@181))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@88) (= ($generated@@154 $generated@@304 $generated@@181)  (and ($generated@@154 $generated@@304 $generated@@147) (not (= $generated@@304 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@304 $generated@@181))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@258 (type $generated@@305))))
(let (($generated@@307 ($generated@@257 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@256 $generated@@307 $generated@@306)) (or (= $generated@@305 ($generated@@255 $generated@@307 $generated@@306)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@305) $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@254 $generated@@305))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@258 (type $generated@@310))))
(= (type ($generated@@309 $generated@@310)) ($generated@@87 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@258 (type $generated@@312))))
(let (($generated@@314 ($generated@@257 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@256 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@255 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@313) ($generated@@0 ($generated@@92 ($generated@@309 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(let (($generated@@318 ($generated@@275 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@274 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@273 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@272 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@276 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@87 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@276 (type $generated@@323))))
(let (($generated@@325 ($generated@@275 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@274 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@273 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@92 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@328) $generated@@70)) (= ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@327 $generated@@329)))) ($generated@@185 $generated@@329 $generated@@328))
 :pattern ( ($generated@@92 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@154 $generated@@327 ($generated@@175 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@330) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@331) $generated@@70)) (= (type $generated@@332) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@170) ($generated@@0 ($generated@@92 $generated@@330 $generated@@333))) ($generated@@213 $generated@@333 $generated@@331 $generated@@332))
 :pattern ( ($generated@@92 $generated@@330 $generated@@333))
))))
 :pattern ( ($generated@@85 $generated@@330 ($generated@@199 $generated@@331) $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@335) $generated@@70)) (= (type $generated@@336) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@170) ($generated@@0 ($generated@@92 $generated@@334 $generated@@337))) ($generated@@213 $generated@@337 $generated@@335 $generated@@336))
 :pattern ( ($generated@@92 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@85 $generated@@334 ($generated@@204 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= ($generated ($generated@@92 ($generated@@249 $generated@@339) $generated@@338)) 0))
 :pattern ( (let (($generated@@339 (type $generated@@338)))
($generated@@92 ($generated@@249 $generated@@339) $generated@@338)))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@340 $generated@@342))
)) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@258 (type $generated@@343))))
(let (($generated@@345 ($generated@@257 (type $generated@@343))))
(= (type ($generated@@341 $generated@@343)) ($generated@@87 $generated@@345 $generated@@344))))
 :pattern ( ($generated@@341 $generated@@343))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@347) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))  (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347)))) (= ($generated@@92 ($generated@@341 $generated@@346) ($generated@@168 ($generated@@299 $generated@@161 $generated@@347))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@347))))))
 :pattern ( ($generated@@92 ($generated@@340 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@276 (type $generated@@351))))
(let (($generated@@353 ($generated@@275 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351)) ($generated@@87 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@355) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355)))) (= ($generated@@92 ($generated@@349 $generated@@354) ($generated@@168 ($generated@@299 $generated@@161 $generated@@355))) ($generated@@169 ($generated@@299 $generated@@161 $generated@@355))))))
 :pattern ( ($generated@@92 ($generated@@348 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(let (($generated@@359 ($generated@@257 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@256 $generated@@359 $generated@@358)) (= ($generated@@0 ($generated@@92 ($generated@@309 $generated@@356) $generated@@357)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) (and ($generated@@0 ($generated@@92 ($generated@@254 $generated@@356) $generated@@360)) (= $generated@@357 ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@356) $generated@@360))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@356) $generated@@360))
))))))
 :pattern ( ($generated@@92 ($generated@@309 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(let (($generated@@364 ($generated@@275 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@274 $generated@@364 $generated@@363)) (= ($generated@@0 ($generated@@92 ($generated@@320 $generated@@361) $generated@@362)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (and ($generated@@0 ($generated@@92 ($generated@@272 $generated@@361) $generated@@365)) (= $generated@@362 ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@361) $generated@@365))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@361) $generated@@365))
))))))
 :pattern ( ($generated@@92 ($generated@@320 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@367 $generated@@368)) $generated@@70)
 :pattern ( ($generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (and (= (type $generated@@369) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@370) $generated@@70)) (= (type $generated@@371) $generated@@70)) (= (type $generated@@372) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))) (and ($generated@@213 ($generated@@92 ($generated@@341 $generated@@369) $generated@@373) $generated@@371 $generated@@372) ($generated@@213 $generated@@373 $generated@@370 $generated@@372)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@369) $generated@@373))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@369) $generated@@373))
))))
 :pattern ( ($generated@@85 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@70)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@378) $generated@@70)) (= (type $generated@@379) $generated@@70)) (= (type $generated@@380) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))) (and ($generated@@213 ($generated@@92 ($generated@@349 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@213 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@377) $generated@@381))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@85 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert  (=> (<= 0 $generated@@382) (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@386) $generated@@88)) (or ($generated@@384 $generated@@385 $generated@@386) (and (not (= 0 $generated@@382)) (and ($generated@@152 $generated@@385) (and (not (= $generated@@386 $generated@@148)) (and ($generated@@154 $generated@@386 $generated@@181) ($generated@@85 $generated@@386 $generated@@181 $generated@@385))))))) (= ($generated@@383 $generated@@385 $generated@@386) ($generated ($generated@@94 ($generated@@92 $generated@@385 $generated@@386) $generated@@151))))
 :pattern ( ($generated@@383 $generated@@385 $generated@@386) ($generated@@152 $generated@@385))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@387) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@388) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@389) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@387 $generated@@389))) (and ($generated@@143 $generated@@387 $generated@@388) ($generated@@143 $generated@@388 $generated@@389))) ($generated@@143 $generated@@387 $generated@@389))
 :pattern ( ($generated@@143 $generated@@387 $generated@@388) ($generated@@143 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@T) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@87 $generated@@391 $generated@@4))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@276 (type $generated@@392))))
(let (($generated@@394 ($generated@@275 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@274 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@273 $generated@@394 $generated@@393)) (= ($generated@@272 $generated@@392) ($generated@@390 $generated@@394))))))
 :pattern ( ($generated@@272 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@276 (type $generated@@395))))
(let (($generated@@397 ($generated@@275 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@274 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@273 $generated@@397 $generated@@396)) (= ($generated@@320 $generated@@395) ($generated@@390 $generated@@396))))))
 :pattern ( ($generated@@320 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@276 (type $generated@@398))))
(let (($generated@@400 ($generated@@275 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@274 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@273 $generated@@400 $generated@@399)) (= ($generated@@348 $generated@@398) ($generated@@390 $generated@@170))))))
 :pattern ( ($generated@@348 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@258 (type $generated@@401))))
(let (($generated@@403 ($generated@@257 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@256 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@255 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@170) (= (type $generated@@405) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@340 $generated@@401) ($generated@@233 ($generated@@184 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@340 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@276 (type $generated@@406))))
(let (($generated@@408 ($generated@@275 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@274 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@273 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@170) (= (type $generated@@410) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@348 $generated@@406) ($generated@@233 ($generated@@184 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@348 $generated@@406))
)))
(assert (forall (($generated@@412 T@U) ) (! (= (type ($generated@@411 $generated@@412)) $generated@@76)
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@T) ) (!  (=> (and (= (type $generated@@413) $generated@@76) (= (type $generated@@414) $generated@@74)) (and (= ($generated@@411 ($generated@@192 $generated@@415 $generated@@413 $generated@@414)) $generated@@413) (= ($generated@@83 ($generated@@192 $generated@@415 $generated@@413 $generated@@414)) $generated@@414)))
 :pattern ( ($generated@@192 $generated@@415 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@170) ($generated@@185 $generated@@416 $generated@@46)) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@416)) $generated@@416) ($generated@@154 ($generated@@299 $generated@@2 $generated@@416) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@416 $generated@@46))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@170) ($generated@@185 $generated@@417 $generated@@47)) (and (= ($generated@@233 ($generated@@299 $generated@@3 $generated@@417)) $generated@@417) ($generated@@154 ($generated@@299 $generated@@3 $generated@@417) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@417 $generated@@47))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@170) ($generated@@185 $generated@@418 $generated@@44)) (and (= ($generated@@233 ($generated@@299 $generated@@4 $generated@@418)) $generated@@418) ($generated@@154 ($generated@@299 $generated@@4 $generated@@418) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@418 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@419) 21))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@170) ($generated@@185 $generated@@420 $generated@@45)) (and (= ($generated@@233 ($generated@@299 $generated@@419 $generated@@420)) $generated@@420) ($generated@@154 ($generated@@299 $generated@@419 $generated@@420) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@420 $generated@@45))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (= (type $generated@@422) $generated@@70) (= ($generated@@185 ($generated@@233 $generated@@421) $generated@@422) ($generated@@154 $generated@@421 $generated@@422)))
 :pattern ( ($generated@@185 ($generated@@233 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@90 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@87 $generated@@424 $generated@@2)) (<= 0 ($generated@@248 $generated@@423))))
 :pattern ( ($generated@@248 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@228 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@227 $generated@@426)) (<= 0 ($generated@@226 $generated@@425))))
 :pattern ( ($generated@@226 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@70)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@70) (= (type $generated@@430) $generated@@70)) (= ($generated@@427 ($generated@@366 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@366 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@70)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@70) (= (type $generated@@434) $generated@@70)) (= ($generated@@431 ($generated@@366 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@366 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@70) (= (type $generated@@436) $generated@@70)) (= ($generated@@81 ($generated@@366 $generated@@435 $generated@@436)) $generated@@58))
 :pattern ( ($generated@@366 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@70)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@70) (= (type $generated@@440) $generated@@70)) (= ($generated@@437 ($generated@@374 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@374 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@70)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@70) (= (type $generated@@444) $generated@@70)) (= ($generated@@441 ($generated@@374 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@374 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@70) (= (type $generated@@446) $generated@@70)) (= ($generated@@81 ($generated@@374 $generated@@445 $generated@@446)) $generated@@59))
 :pattern ( ($generated@@374 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@170) (= (type $generated@@448) $generated@@170)) (= ($generated@@219 ($generated@@184 $generated@@447 $generated@@448)) $generated@@62))
 :pattern ( ($generated@@184 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@70)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@70) (= (type $generated@@452) $generated@@70)) (= ($generated@@449 ($generated@@160 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@160 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@70)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@70) (= (type $generated@@456) $generated@@70)) (= ($generated@@453 ($generated@@160 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@160 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@170) (= (type $generated@@458) $generated@@170)) (= ($generated@@168 ($generated@@184 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@184 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@170) (= (type $generated@@460) $generated@@170)) (= ($generated@@169 ($generated@@184 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@184 $generated@@459 $generated@@460))
)))
(assert  (and (forall (($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@463)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@463))
)) (forall (($generated@@464 T@U) ($generated@@465 Int) ) (! (let (($generated@@466 ($generated@@228 (type $generated@@464))))
(= (type ($generated@@462 $generated@@464 $generated@@465)) $generated@@466))
 :pattern ( ($generated@@462 $generated@@464 $generated@@465))
))))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@227 $generated@@170)) (= (type $generated@@468) $generated@@70)) (= (type $generated@@469) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@467 ($generated@@461 $generated@@468) $generated@@469) (forall (($generated@@470 Int) ) (!  (=> (and (<= 0 $generated@@470) (< $generated@@470 ($generated@@226 $generated@@467))) ($generated@@213 ($generated@@462 $generated@@467 $generated@@470) $generated@@468 $generated@@469))
 :pattern ( ($generated@@462 $generated@@467 $generated@@470))
))))
 :pattern ( ($generated@@85 $generated@@467 ($generated@@461 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@472 Int) ) (! (= ($generated@@471 ($generated@@86 $generated@@472)) $generated@@472)
 :pattern ( ($generated@@86 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@70) (= ($generated@@473 ($generated@@199 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@199 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@70) (= ($generated@@81 ($generated@@199 $generated@@476)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@70) (= ($generated@@477 ($generated@@204 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@204 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@480)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@70)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@70) (= ($generated@@481 ($generated@@175 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@175 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@484)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@70) (= ($generated@@485 ($generated@@461 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@461 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@70) (= ($generated@@81 ($generated@@461 $generated@@488)) $generated@@57))
 :pattern ( ($generated@@461 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(= ($generated@@299 $generated@@490 ($generated@@233 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@233 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@492) $generated@@70)) (= (type $generated@@493) $generated@@70)) (= ($generated@@154 $generated@@491 ($generated@@366 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@254 $generated@@491) $generated@@494))) (and ($generated@@185 ($generated@@92 ($generated@@341 $generated@@491) $generated@@494) $generated@@493) ($generated@@185 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@92 ($generated@@341 $generated@@491) $generated@@494))
 :pattern ( ($generated@@92 ($generated@@254 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@154 $generated@@491 ($generated@@366 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@496) $generated@@70)) (= (type $generated@@497) $generated@@70)) (= ($generated@@154 $generated@@495 ($generated@@374 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@272 $generated@@495) $generated@@498))) (and ($generated@@185 ($generated@@92 ($generated@@349 $generated@@495) $generated@@498) $generated@@497) ($generated@@185 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@92 ($generated@@349 $generated@@495) $generated@@498))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@154 $generated@@495 ($generated@@374 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@170) (= (type $generated@@502) $generated@@170)) (< ($generated@@499 $generated@@501) ($generated@@500 ($generated@@184 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@184 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@170) (= (type $generated@@504) $generated@@170)) (< ($generated@@499 $generated@@504) ($generated@@500 ($generated@@184 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@184 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@170) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) $generated@@70)) ($generated@@185 $generated@@505 ($generated@@366 $generated@@506 $generated@@507))) (and (= ($generated@@233 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@505)) $generated@@505) ($generated@@154 ($generated@@299 ($generated@@256 $generated@@170 $generated@@170) $generated@@505) ($generated@@366 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@185 $generated@@505 ($generated@@366 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@170) (= (type $generated@@509) $generated@@70)) (= (type $generated@@510) $generated@@70)) ($generated@@185 $generated@@508 ($generated@@374 $generated@@509 $generated@@510))) (and (= ($generated@@233 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@508)) $generated@@508) ($generated@@154 ($generated@@299 ($generated@@274 $generated@@170 $generated@@170) $generated@@508) ($generated@@374 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@185 $generated@@508 ($generated@@374 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= (type $generated@@513) $generated@@170)) ($generated@@185 $generated@@513 ($generated@@160 $generated@@511 $generated@@512))) (and (= ($generated@@233 ($generated@@299 $generated@@161 $generated@@513)) $generated@@513) ($generated@@154 ($generated@@299 $generated@@161 $generated@@513) ($generated@@160 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@185 $generated@@513 ($generated@@160 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
 (not ($generated@@0 ($generated@@92 ($generated@@390 $generated@@515) $generated@@514))))
 :pattern ( (let (($generated@@515 (type $generated@@514)))
($generated@@92 ($generated@@390 $generated@@515) $generated@@514)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@522 T@T) ($generated@@523 T@T) ) (= ($generated@@1 ($generated@@518 $generated@@522 $generated@@523)) 22)) (forall (($generated@@524 T@T) ($generated@@525 T@T) ) (! (= ($generated@@519 ($generated@@518 $generated@@524 $generated@@525)) $generated@@524)
 :pattern ( ($generated@@518 $generated@@524 $generated@@525))
))) (forall (($generated@@526 T@T) ($generated@@527 T@T) ) (! (= ($generated@@520 ($generated@@518 $generated@@526 $generated@@527)) $generated@@527)
 :pattern ( ($generated@@518 $generated@@526 $generated@@527))
))) (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@520 (type $generated@@528))))
(= (type ($generated@@516 $generated@@528 $generated@@529 $generated@@530)) $generated@@531))
 :pattern ( ($generated@@516 $generated@@528 $generated@@529 $generated@@530))
))) (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
(let (($generated@@537 (type $generated@@533)))
(= (type ($generated@@521 $generated@@532 $generated@@533 $generated@@534 $generated@@535)) ($generated@@518 $generated@@537 $generated@@536))))
 :pattern ( ($generated@@521 $generated@@532 $generated@@533 $generated@@534 $generated@@535))
))) (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@520 (type $generated@@538))))
 (=> (= (type $generated@@541) $generated@@542) (= ($generated@@516 ($generated@@521 $generated@@538 $generated@@539 $generated@@540 $generated@@541) $generated@@539 $generated@@540) $generated@@541)))
 :weight 0
))) (and (and (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (or (= $generated@@545 $generated@@547) (= ($generated@@516 ($generated@@521 $generated@@544 $generated@@545 $generated@@546 $generated@@543) $generated@@547 $generated@@548) ($generated@@516 $generated@@544 $generated@@547 $generated@@548)))
 :weight 0
)) (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (or (= $generated@@552 $generated@@554) (= ($generated@@516 ($generated@@521 $generated@@550 $generated@@551 $generated@@552 $generated@@549) $generated@@553 $generated@@554) ($generated@@516 $generated@@550 $generated@@553 $generated@@554)))
 :weight 0
))) (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (or true (= ($generated@@516 ($generated@@521 $generated@@556 $generated@@557 $generated@@558 $generated@@555) $generated@@559 $generated@@560) ($generated@@516 $generated@@556 $generated@@559 $generated@@560)))
 :weight 0
)))) (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (= (type ($generated@@517 $generated@@561 $generated@@562 $generated@@563 $generated@@564)) ($generated@@518 $generated@@88 $generated@@4))
 :pattern ( ($generated@@517 $generated@@561 $generated@@562 $generated@@563 $generated@@564))
))))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@73 (type $generated@@570))))
 (=> (and (and (and (and (and (= (type $generated@@565) $generated@@88) (= (type $generated@@566) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@567) ($generated@@72 $generated@@4))) (= (type $generated@@568) $generated@@88)) (= (type $generated@@569) $generated@@88)) (= (type $generated@@570) ($generated@@72 $generated@@571))) (= ($generated@@0 ($generated@@516 ($generated@@517 $generated@@565 $generated@@566 $generated@@567 $generated@@568) $generated@@569 $generated@@570))  (=> (and (not (= $generated@@569 $generated@@565)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@566 $generated@@569) $generated@@567))) (= $generated@@569 $generated@@568)))))
 :pattern ( ($generated@@516 ($generated@@517 $generated@@565 $generated@@566 $generated@@567 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (= (type ($generated@@572 $generated@@573 $generated@@574 $generated@@575 $generated@@576)) ($generated@@518 $generated@@88 $generated@@4))
 :pattern ( ($generated@@572 $generated@@573 $generated@@574 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@73 (type $generated@@582))))
 (=> (and (and (and (and (and (= (type $generated@@577) $generated@@88) (= (type $generated@@578) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@579) ($generated@@72 $generated@@4))) (= (type $generated@@580) $generated@@88)) (= (type $generated@@581) $generated@@88)) (= (type $generated@@582) ($generated@@72 $generated@@583))) (= ($generated@@0 ($generated@@516 ($generated@@572 $generated@@577 $generated@@578 $generated@@579 $generated@@580) $generated@@581 $generated@@582))  (=> (and (not (= $generated@@581 $generated@@577)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@578 $generated@@581) $generated@@579))) (= $generated@@581 $generated@@580)))))
 :pattern ( ($generated@@516 ($generated@@572 $generated@@577 $generated@@578 $generated@@579 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@77)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@70) (= (type $generated@@587) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@586 $generated@@587)) $generated@@63) (= ($generated@@584 ($generated@@160 $generated@@586 $generated@@587)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@590) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@591) $generated@@88)) (=> (and (and (and ($generated@@152 $generated@@589) ($generated@@152 $generated@@590)) (and (not (= $generated@@591 $generated@@148)) ($generated@@154 $generated@@591 $generated@@181))) (and ($generated@@588 $generated@@589) ($generated@@143 $generated@@589 $generated@@590))) (=> (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@73 (type $generated@@593))))
 (=> (and (and (= (type $generated@@592) $generated@@88) (= (type $generated@@593) ($generated@@72 $generated@@594))) (and (not (= $generated@@592 $generated@@148)) (= $generated@@592 $generated@@591))) (= ($generated@@94 ($generated@@92 $generated@@589 $generated@@592) $generated@@593) ($generated@@94 ($generated@@92 $generated@@590 $generated@@592) $generated@@593))))
 :no-pattern (type $generated@@592)
 :no-pattern (type $generated@@593)
 :no-pattern ($generated $generated@@592)
 :no-pattern ($generated@@0 $generated@@592)
 :no-pattern ($generated $generated@@593)
 :no-pattern ($generated@@0 $generated@@593)
)) (= ($generated@@383 $generated@@589 $generated@@591) ($generated@@383 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@588 $generated@@589) ($generated@@143 $generated@@589 $generated@@590) ($generated@@383 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@161) (= ($generated@@499 ($generated@@233 $generated@@595)) ($generated@@500 $generated@@595)))
 :pattern ( ($generated@@499 ($generated@@233 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@170) ($generated@@185 $generated@@596 ($generated@@86 0))) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@596)) $generated@@596) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@596) ($generated@@86 0))))
 :pattern ( ($generated@@185 $generated@@596 ($generated@@86 0)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@170) (= (type $generated@@598) $generated@@70)) ($generated@@185 $generated@@597 ($generated@@199 $generated@@598))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@597)) $generated@@597) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@597) ($generated@@199 $generated@@598))))
 :pattern ( ($generated@@185 $generated@@597 ($generated@@199 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@170) (= (type $generated@@600) $generated@@70)) ($generated@@185 $generated@@599 ($generated@@204 $generated@@600))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@599)) $generated@@599) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@4) $generated@@599) ($generated@@204 $generated@@600))))
 :pattern ( ($generated@@185 $generated@@599 ($generated@@204 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@170) (= (type $generated@@602) $generated@@70)) ($generated@@185 $generated@@601 ($generated@@175 $generated@@602))) (and (= ($generated@@233 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@601)) $generated@@601) ($generated@@154 ($generated@@299 ($generated@@87 $generated@@170 $generated@@2) $generated@@601) ($generated@@175 $generated@@602))))
 :pattern ( ($generated@@185 $generated@@601 ($generated@@175 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@170) (= (type $generated@@604) $generated@@70)) ($generated@@185 $generated@@603 ($generated@@461 $generated@@604))) (and (= ($generated@@233 ($generated@@299 ($generated@@227 $generated@@170) $generated@@603)) $generated@@603) ($generated@@154 ($generated@@299 ($generated@@227 $generated@@170) $generated@@603) ($generated@@461 $generated@@604))))
 :pattern ( ($generated@@185 $generated@@603 ($generated@@461 $generated@@604)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@584 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@181) $generated@@66))
(assert (= ($generated@@584 $generated@@181) $generated@@68))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@605) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@606) $generated@@70)) (= (type $generated@@607) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@605 ($generated@@175 $generated@@606) $generated@@607) (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@605 $generated@@608)))) ($generated@@213 $generated@@608 $generated@@606 $generated@@607))
 :pattern ( ($generated@@92 $generated@@605 $generated@@608))
))))
 :pattern ( ($generated@@85 $generated@@605 ($generated@@175 $generated@@606) $generated@@607))
)))
(assert  (=> (<= 0 $generated@@382) (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@610) $generated@@88)) (or ($generated@@384 $generated@@609 $generated@@610) (and (not (= 0 $generated@@382)) (and ($generated@@152 $generated@@609) (and (not (= $generated@@610 $generated@@148)) (and ($generated@@154 $generated@@610 $generated@@181) ($generated@@85 $generated@@610 $generated@@181 $generated@@609))))))) true)
 :pattern ( ($generated@@383 $generated@@609 $generated@@610))
))))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@161) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@613) (and ($generated@@159 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@70) ($generated@@85 $generated@@611 ($generated@@160 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@85 $generated@@611 ($generated@@160 $generated@@612 $generated@@614) $generated@@613))
))))) ($generated@@213 ($generated@@168 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@213 ($generated@@168 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@161) (= (type $generated@@616) $generated@@70)) (= (type $generated@@617) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@617) (and ($generated@@159 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@70) ($generated@@85 $generated@@615 ($generated@@160 $generated@@618 $generated@@616) $generated@@617))
 :pattern ( ($generated@@85 $generated@@615 ($generated@@160 $generated@@618 $generated@@616) $generated@@617))
))))) ($generated@@213 ($generated@@169 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@213 ($generated@@169 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@170) (= (type $generated@@620) $generated@@170)) (= ($generated@@184 ($generated@@209 $generated@@619) ($generated@@209 $generated@@620)) ($generated@@209 ($generated@@184 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@184 ($generated@@209 $generated@@619) ($generated@@209 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (! (= ($generated@@233 ($generated@@209 $generated@@621)) ($generated@@209 ($generated@@233 $generated@@621)))
 :pattern ( ($generated@@233 ($generated@@209 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (! (let (($generated@@623 ($generated@@228 (type $generated@@622))))
 (=> (and (= (type $generated@@622) ($generated@@227 $generated@@623)) (= ($generated@@226 $generated@@622) 0)) (= $generated@@622 ($generated@@225 $generated@@623))))
 :pattern ( ($generated@@226 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@625)))
 (=> (and (and (= (type $generated@@624) ($generated@@87 $generated@@627 $generated@@2)) (= (type $generated@@626) $generated@@2)) (<= 0 ($generated $generated@@626))) (= ($generated@@248 ($generated@@93 $generated@@624 $generated@@625 $generated@@626)) (+ (- ($generated@@248 $generated@@624) ($generated ($generated@@92 $generated@@624 $generated@@625))) ($generated $generated@@626)))))
 :pattern ( ($generated@@248 ($generated@@93 $generated@@624 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@629) $generated@@2)) ($generated@@85 $generated@@629 $generated@@46 $generated@@628))
 :pattern ( ($generated@@85 $generated@@629 $generated@@46 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@631) $generated@@3)) ($generated@@85 $generated@@631 $generated@@47 $generated@@630))
 :pattern ( ($generated@@85 $generated@@631 $generated@@47 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@633) $generated@@4)) ($generated@@85 $generated@@633 $generated@@44 $generated@@632))
 :pattern ( ($generated@@85 $generated@@633 $generated@@44 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@635) $generated@@419)) ($generated@@85 $generated@@635 $generated@@45 $generated@@634))
 :pattern ( ($generated@@85 $generated@@635 $generated@@45 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@637) $generated@@170)) ($generated@@85 $generated@@637 $generated@@48 $generated@@636))
 :pattern ( ($generated@@85 $generated@@637 $generated@@48 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@227 $generated@@170)) (= (type $generated@@639) $generated@@70)) (= ($generated@@154 $generated@@638 ($generated@@461 $generated@@639)) (forall (($generated@@640 Int) ) (!  (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@226 $generated@@638))) ($generated@@185 ($generated@@462 $generated@@638 $generated@@640) $generated@@639))
 :pattern ( ($generated@@462 $generated@@638 $generated@@640))
))))
 :pattern ( ($generated@@154 $generated@@638 ($generated@@461 $generated@@639)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 Int) ) (!  (=> (= (type $generated@@642) ($generated@@227 $generated@@170)) (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@226 $generated@@642))) (< ($generated@@500 ($generated@@299 $generated@@161 ($generated@@462 $generated@@642 $generated@@643))) ($generated@@641 $generated@@642))))
 :pattern ( ($generated@@500 ($generated@@299 $generated@@161 ($generated@@462 $generated@@642 $generated@@643))))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@256 $generated@@170 $generated@@170)) (= (type $generated@@645) $generated@@70)) (= (type $generated@@646) $generated@@70)) ($generated@@154 $generated@@644 ($generated@@366 $generated@@645 $generated@@646))) (and (and ($generated@@154 ($generated@@254 $generated@@644) ($generated@@199 $generated@@645)) ($generated@@154 ($generated@@309 $generated@@644) ($generated@@199 $generated@@646))) ($generated@@154 ($generated@@340 $generated@@644) ($generated@@199 ($generated@@160 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@154 $generated@@644 ($generated@@366 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@274 $generated@@170 $generated@@170)) (= (type $generated@@648) $generated@@70)) (= (type $generated@@649) $generated@@70)) ($generated@@154 $generated@@647 ($generated@@374 $generated@@648 $generated@@649))) (and (and ($generated@@154 ($generated@@272 $generated@@647) ($generated@@204 $generated@@648)) ($generated@@154 ($generated@@320 $generated@@647) ($generated@@204 $generated@@649))) ($generated@@154 ($generated@@348 $generated@@647) ($generated@@204 ($generated@@160 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@154 $generated@@647 ($generated@@374 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@2) ($generated@@154 $generated@@650 $generated@@46))
 :pattern ( ($generated@@154 $generated@@650 $generated@@46))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@3) ($generated@@154 $generated@@651 $generated@@47))
 :pattern ( ($generated@@154 $generated@@651 $generated@@47))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@4) ($generated@@154 $generated@@652 $generated@@44))
 :pattern ( ($generated@@154 $generated@@652 $generated@@44))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@419) ($generated@@154 $generated@@653 $generated@@45))
 :pattern ( ($generated@@154 $generated@@653 $generated@@45))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@170) ($generated@@154 $generated@@654 $generated@@48))
 :pattern ( ($generated@@154 $generated@@654 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Bool)
(declare-fun $generated@@659 () T@U)
(assert  (and (and (and (= (type $generated@@655) ($generated@@518 $generated@@88 $generated@@4)) (= (type $generated@@656) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@657) $generated@@88)) (= (type $generated@@659) ($generated@@518 $generated@@88 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@660  (=> (= $generated@@655 ($generated@@572 $generated@@148 $generated@@656 $generated@@60 $generated@@657)) (=> (and (and (= $generated@@658 ($generated@@0 ($generated@@516 $generated@@659 $generated@@657 $generated@@151))) (= ($generated@@383 $generated@@656 $generated@@657) ($generated ($generated@@94 ($generated@@92 $generated@@656 $generated@@657) $generated@@151)))) (and ($generated@@154 ($generated@@8 ($generated@@383 $generated@@656 $generated@@657)) $generated@@46) (= (ControlFlow 0 3) (- 0 2)))) $generated@@658))))
(let (($generated@@661 true))
(let (($generated@@662  (=> (= $generated@@659 ($generated@@517 $generated@@148 $generated@@656 $generated@@60 $generated@@657)) (and (=> (= (ControlFlow 0 4) 1) $generated@@661) (=> (= (ControlFlow 0 4) 3) $generated@@660)))))
(let (($generated@@663  (=> (and ($generated@@152 $generated@@656) ($generated@@588 $generated@@656)) (=> (and (and (not (= $generated@@657 $generated@@148)) (and ($generated@@154 $generated@@657 $generated@@181) ($generated@@85 $generated@@657 $generated@@181 $generated@@656))) (and (= 0 $generated@@382) (= (ControlFlow 0 5) 4))) $generated@@662))))
$generated@@663)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 () Int)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) Int)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 () T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@T T@U T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@353 (T@U T@U) Bool)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@U T@U) Int)
(declare-fun $generated@@446 (T@U T@U) Bool)
(declare-fun $generated@@452 (T@T) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 () T@T)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@563 (T@U) Bool)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@644 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@104 $generated@@105)) 13)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@100 ($generated@@87 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@87 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@101 ($generated@@87 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@87 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@101 (type $generated@@110))))
(= (type ($generated@@98 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 (type $generated@@115)))
(let (($generated@@117 (type $generated@@114)))
(= (type ($generated@@102 $generated@@113 $generated@@114 $generated@@115)) ($generated@@87 $generated@@117 $generated@@116))))
 :pattern ( ($generated@@102 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@101 (type $generated@@118))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@98 ($generated@@102 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@98 ($generated@@102 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@98 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@98 ($generated@@102 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@98 $generated@@127 $generated@@129)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@73 (type $generated@@131))))
(= (type ($generated@@97 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@97 $generated@@130 $generated@@131))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= (type ($generated@@103 $generated@@133 $generated@@134 $generated@@135)) $generated@@89)
 :pattern ( ($generated@@103 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@138) $generated@@139) (= ($generated@@97 ($generated@@103 $generated@@136 $generated@@137 $generated@@138) $generated@@137) $generated@@138)))
 :weight 0
))) (and (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@97 ($generated@@103 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@97 $generated@@141 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or true (= ($generated@@97 ($generated@@103 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@97 $generated@@145 $generated@@147)))
 :weight 0
)))) (= (type $generated@@92) $generated@@88)) (= (type $generated@@94) $generated@@70)) (= (type $generated@@99) ($generated@@72 $generated@@2))))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@149) $generated@@88)) (or ($generated@@90 $generated@@148 $generated@@149) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@148) (and (not (= $generated@@149 $generated@@92)) (and ($generated@@93 $generated@@149 $generated@@94) ($generated@@95 $generated@@149 $generated@@94 $generated@@148))))))) (and (=> ($generated@@86 $generated@@148 $generated@@149) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)))) (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@148 $generated@@149))))
 :pattern ( ($generated@@86 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@88) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (= (type $generated@@158) $generated@@70))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@88) (= (type $generated@@160) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@159 $generated@@158 $generated@@160)  (or (= $generated@@159 $generated@@92) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@70)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@164) $generated@@88)) (and ($generated@@91 $generated@@163) (and (not (= $generated@@164 $generated@@92)) (= ($generated@@161 $generated@@164) $generated@@158)))) ($generated@@93 ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99) $generated@@46))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@93 $generated@@165 ($generated@@150 0)))
 :pattern ( ($generated@@93 $generated@@165 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@70)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@70) (= (type $generated@@172) $generated@@70)) (= (type $generated@@173) $generated@@168)) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 17) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@70)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@70)) ($generated@@93 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@93 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@88) (= ($generated@@93 $generated@@187 $generated@@158)  (or (= $generated@@187 $generated@@92) (= ($generated@@161 $generated@@187) $generated@@158))))
 :pattern ( ($generated@@93 $generated@@187 $generated@@158))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 18)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@88 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@73 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@88) (= (type $generated@@238) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@239) ($generated@@72 $generated@@4))) (= (type $generated@@241) $generated@@88)) (= (type $generated@@242) ($generated@@72 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@88) (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@244 $generated@@94 $generated@@245) ($generated@@95 $generated@@244 $generated@@158 $generated@@245)))
 :pattern ( ($generated@@95 $generated@@244 $generated@@94 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@168)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@70) (= (type $generated@@251) $generated@@70)) (= (type $generated@@252) $generated@@177)) (= (type $generated@@253) $generated@@177)) (= ($generated@@93 ($generated@@246 $generated@@252 $generated@@253) ($generated@@167 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@93 ($generated@@246 $generated@@252 $generated@@253) ($generated@@167 $generated@@250 $generated@@251)))
)))
(assert (= ($generated@@80 $generated@@99) 0))
(assert (forall (($generated@@255 T@T) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@255 $generated@@256 $generated@@257)) ($generated@@72 $generated@@255))
 :pattern ( ($generated@@254 $generated@@255 $generated@@256 $generated@@257))
)))
(assert (= ($generated@@254 $generated@@2 $generated@@64 $generated@@69) $generated@@99))
(assert  (not ($generated@@258 $generated@@99)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@168) (= (type $generated@@260) $generated@@168)) (= ($generated@@174 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@174 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@264) $generated@@70)) (= ($generated@@93 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@177) ($generated@@0 ($generated@@98 $generated@@263 $generated@@265))) ($generated@@247 $generated@@265 $generated@@264))
 :pattern ( ($generated@@98 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@93 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@269) $generated@@70)) (= ($generated@@93 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@177) ($generated@@0 ($generated@@98 $generated@@268 $generated@@270))) ($generated@@247 $generated@@270 $generated@@269))
 :pattern ( ($generated@@98 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@93 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@96 $generated@@271) $generated@@271)
 :pattern ( ($generated@@96 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@70) (= (type $generated@@278) $generated@@70)) (= (type $generated@@279) $generated@@177)) (= (type $generated@@280) $generated@@177)) (= (type $generated@@281) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@91 $generated@@281)) (= ($generated@@95 ($generated@@246 $generated@@279 $generated@@280) ($generated@@167 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@95 ($generated@@246 $generated@@279 $generated@@280) ($generated@@167 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@75)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@168) (= ($generated@@166 $generated@@284) (= ($generated@@282 $generated@@284) $generated@@62)))
 :pattern ( ($generated@@166 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@168) ($generated@@166 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@177) (= (type $generated@@287) $generated@@177)) (= $generated@@285 ($generated@@246 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@166 $generated@@285))
)))
(assert  (and (and (forall (($generated@@292 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@292)) 19)) (forall (($generated@@293 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
))) (forall (($generated@@294 T@T) ) (! (= (type ($generated@@288 $generated@@294)) ($generated@@290 $generated@@294))
 :pattern ( ($generated@@288 $generated@@294))
))))
(assert (forall (($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@295)) 0)
 :pattern ( ($generated@@288 $generated@@295))
)))
(assert ($generated@@258 $generated@@60))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@177)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@70) (= (type $generated@@300) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@276 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@95 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@276 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@303) $generated@@177)) (= (type $generated@@304) $generated@@70)) ($generated@@154 $generated@@301 $generated@@302)) ($generated@@276 $generated@@303 $generated@@304 $generated@@301)) ($generated@@276 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@154 $generated@@301 $generated@@302) ($generated@@276 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@305) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@306) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@308) $generated@@70)) ($generated@@154 $generated@@305 $generated@@306)) ($generated@@95 $generated@@307 $generated@@308 $generated@@305)) ($generated@@95 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@154 $generated@@305 $generated@@306) ($generated@@95 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@310) $generated@@88)) (=> (and (and ($generated@@91 $generated@@309) (and (not (= $generated@@310 $generated@@92)) (= ($generated@@161 $generated@@310) $generated@@158))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@309 $generated@@310) $generated@@60))) ($generated@@95 ($generated@@97 ($generated@@98 $generated@@309 $generated@@310) $generated@@99) $generated@@46 $generated@@309)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@309 $generated@@310) $generated@@99))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@87 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@100 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@87 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@98 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 20)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@87 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@98 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@98 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 21)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@87 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@98 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@98 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@355) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@353 $generated@@354 $generated@@355)) (and ($generated@@154 $generated@@354 $generated@@355) (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@73 (type $generated@@357))))
 (=> (and (and (= (type $generated@@356) $generated@@88) (= (type $generated@@357) ($generated@@72 $generated@@358))) (not ($generated@@258 $generated@@357))) (= ($generated@@97 ($generated@@98 $generated@@354 $generated@@356) $generated@@357) ($generated@@97 ($generated@@98 $generated@@355 $generated@@356) $generated@@357))))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@355 $generated@@356) $generated@@357))
))))
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@100 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@87 $generated@@360 $generated@@2)) (= ($generated@@183 $generated@@359) (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@360) (and (<= 0 ($generated ($generated@@98 $generated@@359 $generated@@361))) (<= ($generated ($generated@@98 $generated@@359 $generated@@361)) ($generated@@311 $generated@@359))))
 :pattern ( ($generated@@98 $generated@@359 $generated@@361))
)))))
 :pattern ( ($generated@@183 $generated@@359))
)))
(assert (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@177) ($generated@@247 $generated@@365 $generated@@158)) (and (= ($generated@@296 ($generated@@362 $generated@@88 $generated@@365)) $generated@@365) ($generated@@93 ($generated@@362 $generated@@88 $generated@@365) $generated@@158)))
 :pattern ( ($generated@@247 $generated@@365 $generated@@158))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@177) ($generated@@247 $generated@@366 $generated@@94)) (and (= ($generated@@296 ($generated@@362 $generated@@88 $generated@@366)) $generated@@366) ($generated@@93 ($generated@@362 $generated@@88 $generated@@366) $generated@@94)))
 :pattern ( ($generated@@247 $generated@@366 $generated@@94))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@88) (= ($generated@@93 $generated@@367 $generated@@94)  (and ($generated@@93 $generated@@367 $generated@@158) (not (= $generated@@367 $generated@@92)))))
 :pattern ( ($generated@@93 $generated@@367 $generated@@94))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@321 (type $generated@@368))))
(let (($generated@@370 ($generated@@320 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@319 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@318 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@98 ($generated@@317 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@317 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@321 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@321 (type $generated@@375))))
(let (($generated@@377 ($generated@@320 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@319 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@318 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@98 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@339 (type $generated@@379))))
(let (($generated@@381 ($generated@@338 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@337 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@336 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@98 ($generated@@335 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@335 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@339 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@87 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@339 (type $generated@@386))))
(let (($generated@@388 ($generated@@338 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@337 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@336 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@98 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@391) $generated@@70)) (= ($generated@@93 $generated@@390 ($generated@@182 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@390 $generated@@392)))) ($generated@@247 $generated@@392 $generated@@391))
 :pattern ( ($generated@@98 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@93 $generated@@390 ($generated@@182 $generated@@391)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@394) $generated@@70)) (= (type $generated@@395) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@393 ($generated@@261 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@177) ($generated@@0 ($generated@@98 $generated@@393 $generated@@396))) ($generated@@276 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@98 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@95 $generated@@393 ($generated@@261 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@398) $generated@@70)) (= (type $generated@@399) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@397 ($generated@@266 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@177) ($generated@@0 ($generated@@98 $generated@@397 $generated@@400))) ($generated@@276 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@98 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@95 $generated@@397 ($generated@@266 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@98 ($generated@@312 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@98 ($generated@@312 $generated@@402) $generated@@401)))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@321 (type $generated@@406))))
(let (($generated@@408 ($generated@@320 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@87 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@410) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@98 ($generated@@317 $generated@@409) ($generated@@175 ($generated@@362 $generated@@168 $generated@@410)))) (= ($generated@@98 ($generated@@404 $generated@@409) ($generated@@175 ($generated@@362 $generated@@168 $generated@@410))) ($generated@@176 ($generated@@362 $generated@@168 $generated@@410))))))
 :pattern ( ($generated@@98 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@339 (type $generated@@414))))
(let (($generated@@416 ($generated@@338 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@87 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@418) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@98 ($generated@@335 $generated@@417) ($generated@@175 ($generated@@362 $generated@@168 $generated@@418)))) (= ($generated@@98 ($generated@@412 $generated@@417) ($generated@@175 ($generated@@362 $generated@@168 $generated@@418))) ($generated@@176 ($generated@@362 $generated@@168 $generated@@418))))))
 :pattern ( ($generated@@98 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@320 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@319 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@98 ($generated@@372 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@98 ($generated@@317 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@98 ($generated@@404 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@98 ($generated@@317 $generated@@419) $generated@@423))
 :pattern ( ($generated@@98 ($generated@@404 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@98 ($generated@@372 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@338 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@337 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@98 ($generated@@383 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@98 ($generated@@335 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@98 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@98 ($generated@@335 $generated@@424) $generated@@428))
 :pattern ( ($generated@@98 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@70)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@317 $generated@@432) $generated@@436))) (and ($generated@@276 ($generated@@98 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@276 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@98 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@98 ($generated@@317 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@95 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@441) $generated@@70)) (= (type $generated@@442) $generated@@70)) (= (type $generated@@443) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@335 $generated@@440) $generated@@444))) (and ($generated@@276 ($generated@@98 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@276 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@98 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@98 ($generated@@335 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@95 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (= (type $generated@@447) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@448) $generated@@88)) (or ($generated@@446 $generated@@447 $generated@@448) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@447) (and (not (= $generated@@448 $generated@@92)) (and ($generated@@93 $generated@@448 $generated@@94) ($generated@@95 $generated@@448 $generated@@94 $generated@@447))))))) (= ($generated@@445 $generated@@447 $generated@@448) ($generated ($generated@@97 ($generated@@98 $generated@@447 $generated@@448) $generated@@99))))
 :pattern ( ($generated@@445 $generated@@447 $generated@@448) ($generated@@91 $generated@@447))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@449) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@450) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@451) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@449 $generated@@451))) (and ($generated@@154 $generated@@449 $generated@@450) ($generated@@154 $generated@@450 $generated@@451))) ($generated@@154 $generated@@449 $generated@@451))
 :pattern ( ($generated@@154 $generated@@449 $generated@@450) ($generated@@154 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@T) ) (! (= (type ($generated@@452 $generated@@453)) ($generated@@87 $generated@@453 $generated@@4))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@339 (type $generated@@454))))
(let (($generated@@456 ($generated@@338 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@337 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@336 $generated@@456 $generated@@455)) (= ($generated@@335 $generated@@454) ($generated@@452 $generated@@456))))))
 :pattern ( ($generated@@335 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@339 (type $generated@@457))))
(let (($generated@@459 ($generated@@338 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@337 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@336 $generated@@459 $generated@@458)) (= ($generated@@383 $generated@@457) ($generated@@452 $generated@@458))))))
 :pattern ( ($generated@@383 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@339 (type $generated@@460))))
(let (($generated@@462 ($generated@@338 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@337 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@336 $generated@@462 $generated@@461)) (= ($generated@@411 $generated@@460) ($generated@@452 $generated@@177))))))
 :pattern ( ($generated@@411 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@321 (type $generated@@463))))
(let (($generated@@465 ($generated@@320 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@319 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@318 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@177) (= (type $generated@@467) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@403 $generated@@463) ($generated@@296 ($generated@@246 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@403 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@339 (type $generated@@468))))
(let (($generated@@470 ($generated@@338 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@337 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@336 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@177) (= (type $generated@@472) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@411 $generated@@468) ($generated@@296 ($generated@@246 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@411 $generated@@468))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@76)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@T) ) (!  (=> (and (= (type $generated@@475) $generated@@76) (= (type $generated@@476) $generated@@74)) (and (= ($generated@@473 ($generated@@254 $generated@@477 $generated@@475 $generated@@476)) $generated@@475) (= ($generated@@83 ($generated@@254 $generated@@477 $generated@@475 $generated@@476)) $generated@@476)))
 :pattern ( ($generated@@254 $generated@@477 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@177) ($generated@@247 $generated@@478 $generated@@46)) (and (= ($generated@@296 ($generated@@362 $generated@@2 $generated@@478)) $generated@@478) ($generated@@93 ($generated@@362 $generated@@2 $generated@@478) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@478 $generated@@46))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@177) ($generated@@247 $generated@@479 $generated@@47)) (and (= ($generated@@296 ($generated@@362 $generated@@3 $generated@@479)) $generated@@479) ($generated@@93 ($generated@@362 $generated@@3 $generated@@479) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@479 $generated@@47))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@177) ($generated@@247 $generated@@480 $generated@@44)) (and (= ($generated@@296 ($generated@@362 $generated@@4 $generated@@480)) $generated@@480) ($generated@@93 ($generated@@362 $generated@@4 $generated@@480) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@480 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@481) 22))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@177) ($generated@@247 $generated@@482 $generated@@45)) (and (= ($generated@@296 ($generated@@362 $generated@@481 $generated@@482)) $generated@@482) ($generated@@93 ($generated@@362 $generated@@481 $generated@@482) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@482 $generated@@45))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@70) (= ($generated@@247 ($generated@@296 $generated@@483) $generated@@484) ($generated@@93 $generated@@483 $generated@@484)))
 :pattern ( ($generated@@247 ($generated@@296 $generated@@483) $generated@@484))
)))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@486) $generated@@88)) (or ($generated@@90 $generated@@485 $generated@@486) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@485) (and (not (= $generated@@486 $generated@@92)) (and ($generated@@93 $generated@@486 $generated@@94) ($generated@@95 $generated@@486 $generated@@94 $generated@@485))))))) (= ($generated@@86 $generated@@485 $generated@@486) (= ($generated ($generated@@97 ($generated@@98 $generated@@485 $generated@@486) $generated@@99)) ($generated@@96 8))))
 :pattern ( ($generated@@86 $generated@@485 $generated@@486) ($generated@@91 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@100 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@87 $generated@@488 $generated@@2)) (<= 0 ($generated@@311 $generated@@487))))
 :pattern ( ($generated@@311 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@291 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@290 $generated@@490)) (<= 0 ($generated@@289 $generated@@489))))
 :pattern ( ($generated@@289 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@429 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@429 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@429 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@429 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@70) (= (type $generated@@500) $generated@@70)) (= ($generated@@81 ($generated@@429 $generated@@499 $generated@@500)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@70) (= (type $generated@@504) $generated@@70)) (= ($generated@@501 ($generated@@437 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@437 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@70) (= (type $generated@@508) $generated@@70)) (= ($generated@@505 ($generated@@437 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@437 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@70) (= (type $generated@@510) $generated@@70)) (= ($generated@@81 ($generated@@437 $generated@@509 $generated@@510)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@177) (= (type $generated@@512) $generated@@177)) (= ($generated@@282 ($generated@@246 $generated@@511 $generated@@512)) $generated@@62))
 :pattern ( ($generated@@246 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@167 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@167 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@70) (= (type $generated@@520) $generated@@70)) (= ($generated@@517 ($generated@@167 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@167 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@177) (= (type $generated@@522) $generated@@177)) (= ($generated@@175 ($generated@@246 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@246 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@177) (= (type $generated@@524) $generated@@177)) (= ($generated@@176 ($generated@@246 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@246 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@291 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@290 $generated@@177)) (= (type $generated@@532) $generated@@70)) (= (type $generated@@533) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@289 $generated@@531))) ($generated@@276 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@95 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@150 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@150 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@537 ($generated@@261 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@261 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@81 ($generated@@261 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@70)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@70) (= ($generated@@541 ($generated@@266 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@266 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@70) (= ($generated@@81 ($generated@@266 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@70)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@70) (= ($generated@@545 ($generated@@182 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@182 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@70) (= ($generated@@81 ($generated@@182 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@70)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@70) (= ($generated@@549 ($generated@@525 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@525 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@70) (= ($generated@@81 ($generated@@525 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
(= ($generated@@362 $generated@@554 ($generated@@296 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@296 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@556) $generated@@70)) (= (type $generated@@557) $generated@@70)) (= ($generated@@93 $generated@@555 ($generated@@429 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@317 $generated@@555) $generated@@558))) (and ($generated@@247 ($generated@@98 ($generated@@404 $generated@@555) $generated@@558) $generated@@557) ($generated@@247 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@98 ($generated@@404 $generated@@555) $generated@@558))
 :pattern ( ($generated@@98 ($generated@@317 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@93 $generated@@555 ($generated@@429 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@560) $generated@@70)) (= (type $generated@@561) $generated@@70)) (= ($generated@@93 $generated@@559 ($generated@@437 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@335 $generated@@559) $generated@@562))) (and ($generated@@247 ($generated@@98 ($generated@@412 $generated@@559) $generated@@562) $generated@@561) ($generated@@247 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@98 ($generated@@412 $generated@@559) $generated@@562))
 :pattern ( ($generated@@98 ($generated@@335 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@93 $generated@@559 ($generated@@437 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@565) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@566) $generated@@88)) (=> (and (and (and ($generated@@91 $generated@@564) ($generated@@91 $generated@@565)) (and (not (= $generated@@566 $generated@@92)) ($generated@@93 $generated@@566 $generated@@94))) (and ($generated@@563 $generated@@564) ($generated@@154 $generated@@564 $generated@@565))) (=> (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@73 (type $generated@@568))))
 (=> (and (and (= (type $generated@@567) $generated@@88) (= (type $generated@@568) ($generated@@72 $generated@@569))) (and (not (= $generated@@567 $generated@@92)) (= $generated@@567 $generated@@566))) (= ($generated@@97 ($generated@@98 $generated@@564 $generated@@567) $generated@@568) ($generated@@97 ($generated@@98 $generated@@565 $generated@@567) $generated@@568))))
 :no-pattern (type $generated@@567)
 :no-pattern (type $generated@@568)
 :no-pattern ($generated $generated@@567)
 :no-pattern ($generated@@0 $generated@@567)
 :no-pattern ($generated $generated@@568)
 :no-pattern ($generated@@0 $generated@@568)
)) (= ($generated@@86 $generated@@564 $generated@@566) ($generated@@86 $generated@@565 $generated@@566)))))
 :pattern ( ($generated@@563 $generated@@564) ($generated@@154 $generated@@564 $generated@@565) ($generated@@86 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@177) (= (type $generated@@573) $generated@@177)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@246 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@246 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@177) (= (type $generated@@575) $generated@@177)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@246 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@246 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@177) (= (type $generated@@577) $generated@@70)) (= (type $generated@@578) $generated@@70)) ($generated@@247 $generated@@576 ($generated@@429 $generated@@577 $generated@@578))) (and (= ($generated@@296 ($generated@@362 ($generated@@319 $generated@@177 $generated@@177) $generated@@576)) $generated@@576) ($generated@@93 ($generated@@362 ($generated@@319 $generated@@177 $generated@@177) $generated@@576) ($generated@@429 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@247 $generated@@576 ($generated@@429 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@177) (= (type $generated@@580) $generated@@70)) (= (type $generated@@581) $generated@@70)) ($generated@@247 $generated@@579 ($generated@@437 $generated@@580 $generated@@581))) (and (= ($generated@@296 ($generated@@362 ($generated@@337 $generated@@177 $generated@@177) $generated@@579)) $generated@@579) ($generated@@93 ($generated@@362 ($generated@@337 $generated@@177 $generated@@177) $generated@@579) ($generated@@437 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@247 $generated@@579 ($generated@@437 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@70) (= (type $generated@@583) $generated@@70)) (= (type $generated@@584) $generated@@177)) ($generated@@247 $generated@@584 ($generated@@167 $generated@@582 $generated@@583))) (and (= ($generated@@296 ($generated@@362 $generated@@168 $generated@@584)) $generated@@584) ($generated@@93 ($generated@@362 $generated@@168 $generated@@584) ($generated@@167 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@247 $generated@@584 ($generated@@167 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@98 ($generated@@452 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@98 ($generated@@452 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@77)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@70) (= (type $generated@@590) $generated@@70)) (and (= ($generated@@81 ($generated@@167 $generated@@589 $generated@@590)) $generated@@63) (= ($generated@@587 ($generated@@167 $generated@@589 $generated@@590)) $generated@@67)))
 :pattern ( ($generated@@167 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@592) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@593) $generated@@88)) (=> (and (and (and ($generated@@91 $generated@@591) ($generated@@91 $generated@@592)) (and (not (= $generated@@593 $generated@@92)) ($generated@@93 $generated@@593 $generated@@94))) (and ($generated@@563 $generated@@591) ($generated@@154 $generated@@591 $generated@@592))) (=> (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@73 (type $generated@@595))))
 (=> (and (and (= (type $generated@@594) $generated@@88) (= (type $generated@@595) ($generated@@72 $generated@@596))) (and (not (= $generated@@594 $generated@@92)) (= $generated@@594 $generated@@593))) (= ($generated@@97 ($generated@@98 $generated@@591 $generated@@594) $generated@@595) ($generated@@97 ($generated@@98 $generated@@592 $generated@@594) $generated@@595))))
 :no-pattern (type $generated@@594)
 :no-pattern (type $generated@@595)
 :no-pattern ($generated $generated@@594)
 :no-pattern ($generated@@0 $generated@@594)
 :no-pattern ($generated $generated@@595)
 :no-pattern ($generated@@0 $generated@@595)
)) (= ($generated@@445 $generated@@591 $generated@@593) ($generated@@445 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@563 $generated@@591) ($generated@@154 $generated@@591 $generated@@592) ($generated@@445 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@168) (= ($generated@@570 ($generated@@296 $generated@@597)) ($generated@@571 $generated@@597)))
 :pattern ( ($generated@@570 ($generated@@296 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@177) ($generated@@247 $generated@@598 ($generated@@150 0))) (and (= ($generated@@296 ($generated@@362 $generated@@2 $generated@@598)) $generated@@598) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@598) ($generated@@150 0))))
 :pattern ( ($generated@@247 $generated@@598 ($generated@@150 0)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@177) (= (type $generated@@600) $generated@@70)) ($generated@@247 $generated@@599 ($generated@@261 $generated@@600))) (and (= ($generated@@296 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@599)) $generated@@599) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@599) ($generated@@261 $generated@@600))))
 :pattern ( ($generated@@247 $generated@@599 ($generated@@261 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@177) (= (type $generated@@602) $generated@@70)) ($generated@@247 $generated@@601 ($generated@@266 $generated@@602))) (and (= ($generated@@296 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@601)) $generated@@601) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@601) ($generated@@266 $generated@@602))))
 :pattern ( ($generated@@247 $generated@@601 ($generated@@266 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@177) (= (type $generated@@604) $generated@@70)) ($generated@@247 $generated@@603 ($generated@@182 $generated@@604))) (and (= ($generated@@296 ($generated@@362 ($generated@@87 $generated@@177 $generated@@2) $generated@@603)) $generated@@603) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@2) $generated@@603) ($generated@@182 $generated@@604))))
 :pattern ( ($generated@@247 $generated@@603 ($generated@@182 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@177) (= (type $generated@@606) $generated@@70)) ($generated@@247 $generated@@605 ($generated@@525 $generated@@606))) (and (= ($generated@@296 ($generated@@362 ($generated@@290 $generated@@177) $generated@@605)) $generated@@605) ($generated@@93 ($generated@@362 ($generated@@290 $generated@@177) $generated@@605) ($generated@@525 $generated@@606))))
 :pattern ( ($generated@@247 $generated@@605 ($generated@@525 $generated@@606)))
)))
(assert (= ($generated@@81 $generated@@158) $generated@@65))
(assert (= ($generated@@587 $generated@@158) $generated@@68))
(assert (= ($generated@@81 $generated@@94) $generated@@66))
(assert (= ($generated@@587 $generated@@94) $generated@@68))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@608) $generated@@70)) (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@607 ($generated@@182 $generated@@608) $generated@@609) (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@607 $generated@@610)))) ($generated@@276 $generated@@610 $generated@@608 $generated@@609))
 :pattern ( ($generated@@98 $generated@@607 $generated@@610))
))))
 :pattern ( ($generated@@95 $generated@@607 ($generated@@182 $generated@@608) $generated@@609))
)))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@612) $generated@@88)) (or ($generated@@446 $generated@@611 $generated@@612) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@611) (and (not (= $generated@@612 $generated@@92)) (and ($generated@@93 $generated@@612 $generated@@94) ($generated@@95 $generated@@612 $generated@@94 $generated@@611))))))) true)
 :pattern ( ($generated@@445 $generated@@611 $generated@@612))
))))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@168) (= (type $generated@@614) $generated@@70)) (= (type $generated@@615) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@615) (and ($generated@@166 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@70) ($generated@@95 $generated@@613 ($generated@@167 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@95 $generated@@613 ($generated@@167 $generated@@614 $generated@@616) $generated@@615))
))))) ($generated@@276 ($generated@@175 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@276 ($generated@@175 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@168) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@619) (and ($generated@@166 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@70) ($generated@@95 $generated@@617 ($generated@@167 $generated@@620 $generated@@618) $generated@@619))
 :pattern ( ($generated@@95 $generated@@617 ($generated@@167 $generated@@620 $generated@@618) $generated@@619))
))))) ($generated@@276 ($generated@@176 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@276 ($generated@@176 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@177) (= (type $generated@@622) $generated@@177)) (= ($generated@@246 ($generated@@272 $generated@@621) ($generated@@272 $generated@@622)) ($generated@@272 ($generated@@246 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@246 ($generated@@272 $generated@@621) ($generated@@272 $generated@@622)))
)))
(assert (forall (($generated@@623 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@96 $generated@@623))) ($generated@@272 ($generated@@296 ($generated@@8 $generated@@623))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@96 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ) (! (= ($generated@@296 ($generated@@272 $generated@@624)) ($generated@@272 ($generated@@296 $generated@@624)))
 :pattern ( ($generated@@296 ($generated@@272 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@291 (type $generated@@625))))
 (=> (and (= (type $generated@@625) ($generated@@290 $generated@@626)) (= ($generated@@289 $generated@@625) 0)) (= $generated@@625 ($generated@@288 $generated@@626))))
 :pattern ( ($generated@@289 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@628)))
 (=> (and (and (= (type $generated@@627) ($generated@@87 $generated@@630 $generated@@2)) (= (type $generated@@629) $generated@@2)) (<= 0 ($generated $generated@@629))) (= ($generated@@311 ($generated@@102 $generated@@627 $generated@@628 $generated@@629)) (+ (- ($generated@@311 $generated@@627) ($generated ($generated@@98 $generated@@627 $generated@@628))) ($generated $generated@@629)))))
 :pattern ( ($generated@@311 ($generated@@102 $generated@@627 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@632) $generated@@2)) ($generated@@95 $generated@@632 $generated@@46 $generated@@631))
 :pattern ( ($generated@@95 $generated@@632 $generated@@46 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@634) $generated@@3)) ($generated@@95 $generated@@634 $generated@@47 $generated@@633))
 :pattern ( ($generated@@95 $generated@@634 $generated@@47 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@636) $generated@@4)) ($generated@@95 $generated@@636 $generated@@44 $generated@@635))
 :pattern ( ($generated@@95 $generated@@636 $generated@@44 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@638) $generated@@481)) ($generated@@95 $generated@@638 $generated@@45 $generated@@637))
 :pattern ( ($generated@@95 $generated@@638 $generated@@45 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@640) $generated@@177)) ($generated@@95 $generated@@640 $generated@@48 $generated@@639))
 :pattern ( ($generated@@95 $generated@@640 $generated@@48 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@290 $generated@@177)) (= (type $generated@@642) $generated@@70)) (= ($generated@@93 $generated@@641 ($generated@@525 $generated@@642)) (forall (($generated@@643 Int) ) (!  (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@289 $generated@@641))) ($generated@@247 ($generated@@526 $generated@@641 $generated@@643) $generated@@642))
 :pattern ( ($generated@@526 $generated@@641 $generated@@643))
))))
 :pattern ( ($generated@@93 $generated@@641 ($generated@@525 $generated@@642)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 Int) ) (!  (=> (= (type $generated@@645) ($generated@@290 $generated@@177)) (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@289 $generated@@645))) (< ($generated@@571 ($generated@@362 $generated@@168 ($generated@@526 $generated@@645 $generated@@646))) ($generated@@644 $generated@@645))))
 :pattern ( ($generated@@571 ($generated@@362 $generated@@168 ($generated@@526 $generated@@645 $generated@@646))))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@648) $generated@@70)) (= (type $generated@@649) $generated@@70)) ($generated@@93 $generated@@647 ($generated@@429 $generated@@648 $generated@@649))) (and (and ($generated@@93 ($generated@@317 $generated@@647) ($generated@@261 $generated@@648)) ($generated@@93 ($generated@@372 $generated@@647) ($generated@@261 $generated@@649))) ($generated@@93 ($generated@@403 $generated@@647) ($generated@@261 ($generated@@167 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@93 $generated@@647 ($generated@@429 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@651) $generated@@70)) (= (type $generated@@652) $generated@@70)) ($generated@@93 $generated@@650 ($generated@@437 $generated@@651 $generated@@652))) (and (and ($generated@@93 ($generated@@335 $generated@@650) ($generated@@266 $generated@@651)) ($generated@@93 ($generated@@383 $generated@@650) ($generated@@266 $generated@@652))) ($generated@@93 ($generated@@411 $generated@@650) ($generated@@266 ($generated@@167 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@93 $generated@@650 ($generated@@437 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@2) ($generated@@93 $generated@@653 $generated@@46))
 :pattern ( ($generated@@93 $generated@@653 $generated@@46))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@3) ($generated@@93 $generated@@654 $generated@@47))
 :pattern ( ($generated@@93 $generated@@654 $generated@@47))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@4) ($generated@@93 $generated@@655 $generated@@44))
 :pattern ( ($generated@@93 $generated@@655 $generated@@44))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@481) ($generated@@93 $generated@@656 $generated@@45))
 :pattern ( ($generated@@93 $generated@@656 $generated@@45))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@177) ($generated@@93 $generated@@657 $generated@@48))
 :pattern ( ($generated@@93 $generated@@657 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(assert  (and (and (= (type $generated@@658) ($generated@@190 $generated@@88 $generated@@4)) (= (type $generated@@659) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@660) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@661  (=> (and (and (= $generated@@658 ($generated@@189 $generated@@92 $generated@@659 $generated@@60 false)) ($generated@@95 $generated@@660 $generated@@158 $generated@@659)) (and ($generated@@446 $generated@@659 $generated@@660) ($generated@@446 $generated@@659 $generated@@660))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@445 $generated@@659 $generated@@660) ($generated ($generated@@97 ($generated@@98 $generated@@659 $generated@@660) $generated@@99)))) (=> (= ($generated@@445 $generated@@659 $generated@@660) ($generated ($generated@@97 ($generated@@98 $generated@@659 $generated@@660) $generated@@99))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated ($generated@@97 ($generated@@98 $generated@@659 $generated@@660) $generated@@99)) ($generated@@96 8))))))))
(let (($generated@@662  (=> (and ($generated@@91 $generated@@659) ($generated@@563 $generated@@659)) (=> (and (and (and (not (= $generated@@660 $generated@@92)) (and ($generated@@93 $generated@@660 $generated@@94) ($generated@@95 $generated@@660 $generated@@94 $generated@@659))) (= 1 $generated@@85)) (and (and ($generated@@90 $generated@@659 $generated@@660) (and ($generated@@86 $generated@@659 $generated@@660) (= ($generated ($generated@@97 ($generated@@98 $generated@@659 $generated@@660) $generated@@99)) ($generated@@96 8)))) (= (ControlFlow 0 4) 2))) $generated@@661))))
$generated@@662)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 () Int)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) Int)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 () T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@T T@U T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@353 (T@U T@U) Bool)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@T) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@522 (T@U Int) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@559 (T@U) Bool)
(declare-fun $generated@@566 (T@U) Int)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@637 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@104 $generated@@105)) 13)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@100 ($generated@@87 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@87 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@101 ($generated@@87 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@87 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@101 (type $generated@@110))))
(= (type ($generated@@98 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 (type $generated@@115)))
(let (($generated@@117 (type $generated@@114)))
(= (type ($generated@@102 $generated@@113 $generated@@114 $generated@@115)) ($generated@@87 $generated@@117 $generated@@116))))
 :pattern ( ($generated@@102 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@101 (type $generated@@118))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@98 ($generated@@102 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@98 ($generated@@102 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@98 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@98 ($generated@@102 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@98 $generated@@127 $generated@@129)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@73 (type $generated@@131))))
(= (type ($generated@@97 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@97 $generated@@130 $generated@@131))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= (type ($generated@@103 $generated@@133 $generated@@134 $generated@@135)) $generated@@89)
 :pattern ( ($generated@@103 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@138) $generated@@139) (= ($generated@@97 ($generated@@103 $generated@@136 $generated@@137 $generated@@138) $generated@@137) $generated@@138)))
 :weight 0
))) (and (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@97 ($generated@@103 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@97 $generated@@141 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or true (= ($generated@@97 ($generated@@103 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@97 $generated@@145 $generated@@147)))
 :weight 0
)))) (= (type $generated@@92) $generated@@88)) (= (type $generated@@94) $generated@@70)) (= (type $generated@@99) ($generated@@72 $generated@@2))))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@149) $generated@@88)) (or ($generated@@90 $generated@@148 $generated@@149) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@148) (and (not (= $generated@@149 $generated@@92)) (and ($generated@@93 $generated@@149 $generated@@94) ($generated@@95 $generated@@149 $generated@@94 $generated@@148))))))) (and (=> ($generated@@86 $generated@@148 $generated@@149) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)))) (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@148 $generated@@149))))
 :pattern ( ($generated@@86 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@88) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (= (type $generated@@158) $generated@@70))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@88) (= (type $generated@@160) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@159 $generated@@158 $generated@@160)  (or (= $generated@@159 $generated@@92) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@70)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@164) $generated@@88)) (and ($generated@@91 $generated@@163) (and (not (= $generated@@164 $generated@@92)) (= ($generated@@161 $generated@@164) $generated@@158)))) ($generated@@93 ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99) $generated@@46))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@93 $generated@@165 ($generated@@150 0)))
 :pattern ( ($generated@@93 $generated@@165 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@70)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@70) (= (type $generated@@172) $generated@@70)) (= (type $generated@@173) $generated@@168)) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 17) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@70)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@70)) ($generated@@93 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@93 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@88) (= ($generated@@93 $generated@@187 $generated@@158)  (or (= $generated@@187 $generated@@92) (= ($generated@@161 $generated@@187) $generated@@158))))
 :pattern ( ($generated@@93 $generated@@187 $generated@@158))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 18)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@88 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@73 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@88) (= (type $generated@@238) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@239) ($generated@@72 $generated@@4))) (= (type $generated@@241) $generated@@88)) (= (type $generated@@242) ($generated@@72 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@88) (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@244 $generated@@94 $generated@@245) ($generated@@95 $generated@@244 $generated@@158 $generated@@245)))
 :pattern ( ($generated@@95 $generated@@244 $generated@@94 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@168)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@70) (= (type $generated@@251) $generated@@70)) (= (type $generated@@252) $generated@@177)) (= (type $generated@@253) $generated@@177)) (= ($generated@@93 ($generated@@246 $generated@@252 $generated@@253) ($generated@@167 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@93 ($generated@@246 $generated@@252 $generated@@253) ($generated@@167 $generated@@250 $generated@@251)))
)))
(assert (= ($generated@@80 $generated@@99) 0))
(assert (forall (($generated@@255 T@T) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@255 $generated@@256 $generated@@257)) ($generated@@72 $generated@@255))
 :pattern ( ($generated@@254 $generated@@255 $generated@@256 $generated@@257))
)))
(assert (= ($generated@@254 $generated@@2 $generated@@64 $generated@@69) $generated@@99))
(assert  (not ($generated@@258 $generated@@99)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@168) (= (type $generated@@260) $generated@@168)) (= ($generated@@174 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@174 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@264) $generated@@70)) (= ($generated@@93 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@177) ($generated@@0 ($generated@@98 $generated@@263 $generated@@265))) ($generated@@247 $generated@@265 $generated@@264))
 :pattern ( ($generated@@98 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@93 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@269) $generated@@70)) (= ($generated@@93 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@177) ($generated@@0 ($generated@@98 $generated@@268 $generated@@270))) ($generated@@247 $generated@@270 $generated@@269))
 :pattern ( ($generated@@98 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@93 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@96 $generated@@271) $generated@@271)
 :pattern ( ($generated@@96 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@70) (= (type $generated@@278) $generated@@70)) (= (type $generated@@279) $generated@@177)) (= (type $generated@@280) $generated@@177)) (= (type $generated@@281) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@91 $generated@@281)) (= ($generated@@95 ($generated@@246 $generated@@279 $generated@@280) ($generated@@167 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@95 ($generated@@246 $generated@@279 $generated@@280) ($generated@@167 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@75)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@168) (= ($generated@@166 $generated@@284) (= ($generated@@282 $generated@@284) $generated@@62)))
 :pattern ( ($generated@@166 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@168) ($generated@@166 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@177) (= (type $generated@@287) $generated@@177)) (= $generated@@285 ($generated@@246 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@166 $generated@@285))
)))
(assert  (and (and (forall (($generated@@292 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@292)) 19)) (forall (($generated@@293 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
))) (forall (($generated@@294 T@T) ) (! (= (type ($generated@@288 $generated@@294)) ($generated@@290 $generated@@294))
 :pattern ( ($generated@@288 $generated@@294))
))))
(assert (forall (($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@295)) 0)
 :pattern ( ($generated@@288 $generated@@295))
)))
(assert ($generated@@258 $generated@@60))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@177)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@70) (= (type $generated@@300) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@276 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@95 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@276 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@303) $generated@@177)) (= (type $generated@@304) $generated@@70)) ($generated@@154 $generated@@301 $generated@@302)) ($generated@@276 $generated@@303 $generated@@304 $generated@@301)) ($generated@@276 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@154 $generated@@301 $generated@@302) ($generated@@276 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@305) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@306) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@308) $generated@@70)) ($generated@@154 $generated@@305 $generated@@306)) ($generated@@95 $generated@@307 $generated@@308 $generated@@305)) ($generated@@95 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@154 $generated@@305 $generated@@306) ($generated@@95 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@310) $generated@@88)) (=> (and (and ($generated@@91 $generated@@309) (and (not (= $generated@@310 $generated@@92)) (= ($generated@@161 $generated@@310) $generated@@158))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@309 $generated@@310) $generated@@60))) ($generated@@95 ($generated@@97 ($generated@@98 $generated@@309 $generated@@310) $generated@@99) $generated@@46 $generated@@309)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@309 $generated@@310) $generated@@99))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@87 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@100 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@87 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@98 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 20)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@87 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@98 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@98 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 21)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@87 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@98 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@98 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@355) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@353 $generated@@354 $generated@@355)) (and ($generated@@154 $generated@@354 $generated@@355) (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@73 (type $generated@@357))))
 (=> (and (and (= (type $generated@@356) $generated@@88) (= (type $generated@@357) ($generated@@72 $generated@@358))) (not ($generated@@258 $generated@@357))) (= ($generated@@97 ($generated@@98 $generated@@354 $generated@@356) $generated@@357) ($generated@@97 ($generated@@98 $generated@@355 $generated@@356) $generated@@357))))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@355 $generated@@356) $generated@@357))
))))
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@100 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@87 $generated@@360 $generated@@2)) (= ($generated@@183 $generated@@359) (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@360) (and (<= 0 ($generated ($generated@@98 $generated@@359 $generated@@361))) (<= ($generated ($generated@@98 $generated@@359 $generated@@361)) ($generated@@311 $generated@@359))))
 :pattern ( ($generated@@98 $generated@@359 $generated@@361))
)))))
 :pattern ( ($generated@@183 $generated@@359))
)))
(assert (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@177) ($generated@@247 $generated@@365 $generated@@158)) (and (= ($generated@@296 ($generated@@362 $generated@@88 $generated@@365)) $generated@@365) ($generated@@93 ($generated@@362 $generated@@88 $generated@@365) $generated@@158)))
 :pattern ( ($generated@@247 $generated@@365 $generated@@158))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@177) ($generated@@247 $generated@@366 $generated@@94)) (and (= ($generated@@296 ($generated@@362 $generated@@88 $generated@@366)) $generated@@366) ($generated@@93 ($generated@@362 $generated@@88 $generated@@366) $generated@@94)))
 :pattern ( ($generated@@247 $generated@@366 $generated@@94))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@88) (= ($generated@@93 $generated@@367 $generated@@94)  (and ($generated@@93 $generated@@367 $generated@@158) (not (= $generated@@367 $generated@@92)))))
 :pattern ( ($generated@@93 $generated@@367 $generated@@94))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@321 (type $generated@@368))))
(let (($generated@@370 ($generated@@320 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@319 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@318 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@98 ($generated@@317 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@317 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@321 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@321 (type $generated@@375))))
(let (($generated@@377 ($generated@@320 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@319 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@318 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@98 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@339 (type $generated@@379))))
(let (($generated@@381 ($generated@@338 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@337 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@336 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@98 ($generated@@335 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@335 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@339 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@87 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@339 (type $generated@@386))))
(let (($generated@@388 ($generated@@338 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@337 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@336 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@98 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@391) $generated@@70)) (= ($generated@@93 $generated@@390 ($generated@@182 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@390 $generated@@392)))) ($generated@@247 $generated@@392 $generated@@391))
 :pattern ( ($generated@@98 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@93 $generated@@390 ($generated@@182 $generated@@391)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@394) $generated@@70)) (= (type $generated@@395) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@393 ($generated@@261 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@177) ($generated@@0 ($generated@@98 $generated@@393 $generated@@396))) ($generated@@276 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@98 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@95 $generated@@393 ($generated@@261 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@398) $generated@@70)) (= (type $generated@@399) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@397 ($generated@@266 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@177) ($generated@@0 ($generated@@98 $generated@@397 $generated@@400))) ($generated@@276 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@98 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@95 $generated@@397 ($generated@@266 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@98 ($generated@@312 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@98 ($generated@@312 $generated@@402) $generated@@401)))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@321 (type $generated@@406))))
(let (($generated@@408 ($generated@@320 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@87 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@410) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@98 ($generated@@317 $generated@@409) ($generated@@175 ($generated@@362 $generated@@168 $generated@@410)))) (= ($generated@@98 ($generated@@404 $generated@@409) ($generated@@175 ($generated@@362 $generated@@168 $generated@@410))) ($generated@@176 ($generated@@362 $generated@@168 $generated@@410))))))
 :pattern ( ($generated@@98 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@339 (type $generated@@414))))
(let (($generated@@416 ($generated@@338 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@87 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@418) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@98 ($generated@@335 $generated@@417) ($generated@@175 ($generated@@362 $generated@@168 $generated@@418)))) (= ($generated@@98 ($generated@@412 $generated@@417) ($generated@@175 ($generated@@362 $generated@@168 $generated@@418))) ($generated@@176 ($generated@@362 $generated@@168 $generated@@418))))))
 :pattern ( ($generated@@98 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@320 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@319 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@98 ($generated@@372 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@98 ($generated@@317 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@98 ($generated@@404 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@98 ($generated@@317 $generated@@419) $generated@@423))
 :pattern ( ($generated@@98 ($generated@@404 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@98 ($generated@@372 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@338 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@337 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@98 ($generated@@383 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@98 ($generated@@335 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@98 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@98 ($generated@@335 $generated@@424) $generated@@428))
 :pattern ( ($generated@@98 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@70)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@317 $generated@@432) $generated@@436))) (and ($generated@@276 ($generated@@98 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@276 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@98 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@98 ($generated@@317 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@95 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@441) $generated@@70)) (= (type $generated@@442) $generated@@70)) (= (type $generated@@443) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@335 $generated@@440) $generated@@444))) (and ($generated@@276 ($generated@@98 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@276 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@98 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@98 ($generated@@335 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@95 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@445) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@446) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@447) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@445 $generated@@447))) (and ($generated@@154 $generated@@445 $generated@@446) ($generated@@154 $generated@@446 $generated@@447))) ($generated@@154 $generated@@445 $generated@@447))
 :pattern ( ($generated@@154 $generated@@445 $generated@@446) ($generated@@154 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@T) ) (! (= (type ($generated@@448 $generated@@449)) ($generated@@87 $generated@@449 $generated@@4))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@339 (type $generated@@450))))
(let (($generated@@452 ($generated@@338 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@337 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@336 $generated@@452 $generated@@451)) (= ($generated@@335 $generated@@450) ($generated@@448 $generated@@452))))))
 :pattern ( ($generated@@335 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@339 (type $generated@@453))))
(let (($generated@@455 ($generated@@338 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@337 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@336 $generated@@455 $generated@@454)) (= ($generated@@383 $generated@@453) ($generated@@448 $generated@@454))))))
 :pattern ( ($generated@@383 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@339 (type $generated@@456))))
(let (($generated@@458 ($generated@@338 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@337 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@336 $generated@@458 $generated@@457)) (= ($generated@@411 $generated@@456) ($generated@@448 $generated@@177))))))
 :pattern ( ($generated@@411 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@321 (type $generated@@459))))
(let (($generated@@461 ($generated@@320 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@319 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@318 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@177) (= (type $generated@@463) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@403 $generated@@459) ($generated@@296 ($generated@@246 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@403 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@339 (type $generated@@464))))
(let (($generated@@466 ($generated@@338 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@337 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@336 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@177) (= (type $generated@@468) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@411 $generated@@464) ($generated@@296 ($generated@@246 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@411 $generated@@464))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@76)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@T) ) (!  (=> (and (= (type $generated@@471) $generated@@76) (= (type $generated@@472) $generated@@74)) (and (= ($generated@@469 ($generated@@254 $generated@@473 $generated@@471 $generated@@472)) $generated@@471) (= ($generated@@83 ($generated@@254 $generated@@473 $generated@@471 $generated@@472)) $generated@@472)))
 :pattern ( ($generated@@254 $generated@@473 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@177) ($generated@@247 $generated@@474 $generated@@46)) (and (= ($generated@@296 ($generated@@362 $generated@@2 $generated@@474)) $generated@@474) ($generated@@93 ($generated@@362 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@177) ($generated@@247 $generated@@475 $generated@@47)) (and (= ($generated@@296 ($generated@@362 $generated@@3 $generated@@475)) $generated@@475) ($generated@@93 ($generated@@362 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@177) ($generated@@247 $generated@@476 $generated@@44)) (and (= ($generated@@296 ($generated@@362 $generated@@4 $generated@@476)) $generated@@476) ($generated@@93 ($generated@@362 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 22))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@177) ($generated@@247 $generated@@478 $generated@@45)) (and (= ($generated@@296 ($generated@@362 $generated@@477 $generated@@478)) $generated@@478) ($generated@@93 ($generated@@362 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@70) (= ($generated@@247 ($generated@@296 $generated@@479) $generated@@480) ($generated@@93 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@247 ($generated@@296 $generated@@479) $generated@@480))
)))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@482) $generated@@88)) (or ($generated@@90 $generated@@481 $generated@@482) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@481) (and (not (= $generated@@482 $generated@@92)) (and ($generated@@93 $generated@@482 $generated@@94) ($generated@@95 $generated@@482 $generated@@94 $generated@@481))))))) (= ($generated@@86 $generated@@481 $generated@@482) (= ($generated ($generated@@97 ($generated@@98 $generated@@481 $generated@@482) $generated@@99)) ($generated@@96 8))))
 :pattern ( ($generated@@86 $generated@@481 $generated@@482) ($generated@@91 $generated@@481))
))))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@100 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@87 $generated@@484 $generated@@2)) (<= 0 ($generated@@311 $generated@@483))))
 :pattern ( ($generated@@311 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@291 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@290 $generated@@486)) (<= 0 ($generated@@289 $generated@@485))))
 :pattern ( ($generated@@289 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@429 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@429 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@70)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@491 ($generated@@429 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@429 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@81 ($generated@@429 $generated@@495 $generated@@496)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@70)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@70) (= (type $generated@@500) $generated@@70)) (= ($generated@@497 ($generated@@437 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@437 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@70) (= (type $generated@@504) $generated@@70)) (= ($generated@@501 ($generated@@437 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@437 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@81 ($generated@@437 $generated@@505 $generated@@506)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@177) (= (type $generated@@508) $generated@@177)) (= ($generated@@282 ($generated@@246 $generated@@507 $generated@@508)) $generated@@62))
 :pattern ( ($generated@@246 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@70)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@70) (= (type $generated@@512) $generated@@70)) (= ($generated@@509 ($generated@@167 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@167 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@70) (= (type $generated@@516) $generated@@70)) (= ($generated@@513 ($generated@@167 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@167 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@177) (= (type $generated@@518) $generated@@177)) (= ($generated@@175 ($generated@@246 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@246 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@177) (= (type $generated@@520) $generated@@177)) (= ($generated@@176 ($generated@@246 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@246 $generated@@519 $generated@@520))
)))
(assert  (and (forall (($generated@@523 T@U) ) (! (= (type ($generated@@521 $generated@@523)) $generated@@70)
 :pattern ( ($generated@@521 $generated@@523))
)) (forall (($generated@@524 T@U) ($generated@@525 Int) ) (! (let (($generated@@526 ($generated@@291 (type $generated@@524))))
(= (type ($generated@@522 $generated@@524 $generated@@525)) $generated@@526))
 :pattern ( ($generated@@522 $generated@@524 $generated@@525))
))))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@290 $generated@@177)) (= (type $generated@@528) $generated@@70)) (= (type $generated@@529) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@527 ($generated@@521 $generated@@528) $generated@@529) (forall (($generated@@530 Int) ) (!  (=> (and (<= 0 $generated@@530) (< $generated@@530 ($generated@@289 $generated@@527))) ($generated@@276 ($generated@@522 $generated@@527 $generated@@530) $generated@@528 $generated@@529))
 :pattern ( ($generated@@522 $generated@@527 $generated@@530))
))))
 :pattern ( ($generated@@95 $generated@@527 ($generated@@521 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@532 Int) ) (! (= ($generated@@531 ($generated@@150 $generated@@532)) $generated@@532)
 :pattern ( ($generated@@150 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@533 ($generated@@261 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@261 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@81 ($generated@@261 $generated@@536)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@537 ($generated@@266 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@266 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@81 ($generated@@266 $generated@@540)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@70)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@70) (= ($generated@@541 ($generated@@182 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@182 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@70) (= ($generated@@81 ($generated@@182 $generated@@544)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@70)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@70) (= ($generated@@545 ($generated@@521 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@521 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@70) (= ($generated@@81 ($generated@@521 $generated@@548)) $generated@@57))
 :pattern ( ($generated@@521 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
(= ($generated@@362 $generated@@550 ($generated@@296 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@296 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@70)) (= ($generated@@93 $generated@@551 ($generated@@429 $generated@@552 $generated@@553)) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@317 $generated@@551) $generated@@554))) (and ($generated@@247 ($generated@@98 ($generated@@404 $generated@@551) $generated@@554) $generated@@553) ($generated@@247 $generated@@554 $generated@@552)))
 :pattern ( ($generated@@98 ($generated@@404 $generated@@551) $generated@@554))
 :pattern ( ($generated@@98 ($generated@@317 $generated@@551) $generated@@554))
))))
 :pattern ( ($generated@@93 $generated@@551 ($generated@@429 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@556) $generated@@70)) (= (type $generated@@557) $generated@@70)) (= ($generated@@93 $generated@@555 ($generated@@437 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@335 $generated@@555) $generated@@558))) (and ($generated@@247 ($generated@@98 ($generated@@412 $generated@@555) $generated@@558) $generated@@557) ($generated@@247 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@98 ($generated@@412 $generated@@555) $generated@@558))
 :pattern ( ($generated@@98 ($generated@@335 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@93 $generated@@555 ($generated@@437 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@561) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@562) $generated@@88)) (=> (and (and (and ($generated@@91 $generated@@560) ($generated@@91 $generated@@561)) (and (not (= $generated@@562 $generated@@92)) ($generated@@93 $generated@@562 $generated@@94))) (and ($generated@@559 $generated@@560) ($generated@@154 $generated@@560 $generated@@561))) (=> (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@73 (type $generated@@564))))
 (=> (and (and (= (type $generated@@563) $generated@@88) (= (type $generated@@564) ($generated@@72 $generated@@565))) (and (not (= $generated@@563 $generated@@92)) (= $generated@@563 $generated@@562))) (= ($generated@@97 ($generated@@98 $generated@@560 $generated@@563) $generated@@564) ($generated@@97 ($generated@@98 $generated@@561 $generated@@563) $generated@@564))))
 :no-pattern (type $generated@@563)
 :no-pattern (type $generated@@564)
 :no-pattern ($generated $generated@@563)
 :no-pattern ($generated@@0 $generated@@563)
 :no-pattern ($generated $generated@@564)
 :no-pattern ($generated@@0 $generated@@564)
)) (= ($generated@@86 $generated@@560 $generated@@562) ($generated@@86 $generated@@561 $generated@@562)))))
 :pattern ( ($generated@@559 $generated@@560) ($generated@@154 $generated@@560 $generated@@561) ($generated@@86 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@177) (= (type $generated@@569) $generated@@177)) (< ($generated@@566 $generated@@568) ($generated@@567 ($generated@@246 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@246 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@177) (= (type $generated@@571) $generated@@177)) (< ($generated@@566 $generated@@571) ($generated@@567 ($generated@@246 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@246 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@177) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) $generated@@70)) ($generated@@247 $generated@@572 ($generated@@429 $generated@@573 $generated@@574))) (and (= ($generated@@296 ($generated@@362 ($generated@@319 $generated@@177 $generated@@177) $generated@@572)) $generated@@572) ($generated@@93 ($generated@@362 ($generated@@319 $generated@@177 $generated@@177) $generated@@572) ($generated@@429 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@247 $generated@@572 ($generated@@429 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@177) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) $generated@@70)) ($generated@@247 $generated@@575 ($generated@@437 $generated@@576 $generated@@577))) (and (= ($generated@@296 ($generated@@362 ($generated@@337 $generated@@177 $generated@@177) $generated@@575)) $generated@@575) ($generated@@93 ($generated@@362 ($generated@@337 $generated@@177 $generated@@177) $generated@@575) ($generated@@437 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@247 $generated@@575 ($generated@@437 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@70) (= (type $generated@@579) $generated@@70)) (= (type $generated@@580) $generated@@177)) ($generated@@247 $generated@@580 ($generated@@167 $generated@@578 $generated@@579))) (and (= ($generated@@296 ($generated@@362 $generated@@168 $generated@@580)) $generated@@580) ($generated@@93 ($generated@@362 $generated@@168 $generated@@580) ($generated@@167 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@247 $generated@@580 ($generated@@167 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
 (not ($generated@@0 ($generated@@98 ($generated@@448 $generated@@582) $generated@@581))))
 :pattern ( (let (($generated@@582 (type $generated@@581)))
($generated@@98 ($generated@@448 $generated@@582) $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@77)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@70) (= (type $generated@@586) $generated@@70)) (and (= ($generated@@81 ($generated@@167 $generated@@585 $generated@@586)) $generated@@63) (= ($generated@@583 ($generated@@167 $generated@@585 $generated@@586)) $generated@@67)))
 :pattern ( ($generated@@167 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@168) (= ($generated@@566 ($generated@@296 $generated@@587)) ($generated@@567 $generated@@587)))
 :pattern ( ($generated@@566 ($generated@@296 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@177) ($generated@@247 $generated@@588 ($generated@@150 0))) (and (= ($generated@@296 ($generated@@362 $generated@@2 $generated@@588)) $generated@@588) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@588) ($generated@@150 0))))
 :pattern ( ($generated@@247 $generated@@588 ($generated@@150 0)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@177) (= (type $generated@@590) $generated@@70)) ($generated@@247 $generated@@589 ($generated@@261 $generated@@590))) (and (= ($generated@@296 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@589)) $generated@@589) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@589) ($generated@@261 $generated@@590))))
 :pattern ( ($generated@@247 $generated@@589 ($generated@@261 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@177) (= (type $generated@@592) $generated@@70)) ($generated@@247 $generated@@591 ($generated@@266 $generated@@592))) (and (= ($generated@@296 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@591)) $generated@@591) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@591) ($generated@@266 $generated@@592))))
 :pattern ( ($generated@@247 $generated@@591 ($generated@@266 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@177) (= (type $generated@@594) $generated@@70)) ($generated@@247 $generated@@593 ($generated@@182 $generated@@594))) (and (= ($generated@@296 ($generated@@362 ($generated@@87 $generated@@177 $generated@@2) $generated@@593)) $generated@@593) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@2) $generated@@593) ($generated@@182 $generated@@594))))
 :pattern ( ($generated@@247 $generated@@593 ($generated@@182 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@177) (= (type $generated@@596) $generated@@70)) ($generated@@247 $generated@@595 ($generated@@521 $generated@@596))) (and (= ($generated@@296 ($generated@@362 ($generated@@290 $generated@@177) $generated@@595)) $generated@@595) ($generated@@93 ($generated@@362 ($generated@@290 $generated@@177) $generated@@595) ($generated@@521 $generated@@596))))
 :pattern ( ($generated@@247 $generated@@595 ($generated@@521 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
 (=> (and (and (and (= (type $generated@@597) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@598) $generated@@88)) (= (type $generated@@599) ($generated@@72 $generated@@601))) ($generated@@91 ($generated@@102 $generated@@597 $generated@@598 ($generated@@103 ($generated@@98 $generated@@597 $generated@@598) $generated@@599 $generated@@600)))) ($generated@@154 $generated@@597 ($generated@@102 $generated@@597 $generated@@598 ($generated@@103 ($generated@@98 $generated@@597 $generated@@598) $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@102 $generated@@597 $generated@@598 ($generated@@103 ($generated@@98 $generated@@597 $generated@@598) $generated@@599 $generated@@600)))
)))
(assert (= ($generated@@81 $generated@@158) $generated@@65))
(assert (= ($generated@@583 $generated@@158) $generated@@68))
(assert (= ($generated@@81 $generated@@94) $generated@@66))
(assert (= ($generated@@583 $generated@@94) $generated@@68))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@603) $generated@@70)) (= (type $generated@@604) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@602 ($generated@@182 $generated@@603) $generated@@604) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@602 $generated@@605)))) ($generated@@276 $generated@@605 $generated@@603 $generated@@604))
 :pattern ( ($generated@@98 $generated@@602 $generated@@605))
))))
 :pattern ( ($generated@@95 $generated@@602 ($generated@@182 $generated@@603) $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@168) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@608) (and ($generated@@166 $generated@@606) (exists (($generated@@609 T@U) ) (!  (and (= (type $generated@@609) $generated@@70) ($generated@@95 $generated@@606 ($generated@@167 $generated@@607 $generated@@609) $generated@@608))
 :pattern ( ($generated@@95 $generated@@606 ($generated@@167 $generated@@607 $generated@@609) $generated@@608))
))))) ($generated@@276 ($generated@@175 $generated@@606) $generated@@607 $generated@@608))
 :pattern ( ($generated@@276 ($generated@@175 $generated@@606) $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@168) (= (type $generated@@611) $generated@@70)) (= (type $generated@@612) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@612) (and ($generated@@166 $generated@@610) (exists (($generated@@613 T@U) ) (!  (and (= (type $generated@@613) $generated@@70) ($generated@@95 $generated@@610 ($generated@@167 $generated@@613 $generated@@611) $generated@@612))
 :pattern ( ($generated@@95 $generated@@610 ($generated@@167 $generated@@613 $generated@@611) $generated@@612))
))))) ($generated@@276 ($generated@@176 $generated@@610) $generated@@611 $generated@@612))
 :pattern ( ($generated@@276 ($generated@@176 $generated@@610) $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@177) (= (type $generated@@615) $generated@@177)) (= ($generated@@246 ($generated@@272 $generated@@614) ($generated@@272 $generated@@615)) ($generated@@272 ($generated@@246 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@246 ($generated@@272 $generated@@614) ($generated@@272 $generated@@615)))
)))
(assert (forall (($generated@@616 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@96 $generated@@616))) ($generated@@272 ($generated@@296 ($generated@@8 $generated@@616))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@96 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ) (! (= ($generated@@296 ($generated@@272 $generated@@617)) ($generated@@272 ($generated@@296 $generated@@617)))
 :pattern ( ($generated@@296 ($generated@@272 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (! (let (($generated@@619 ($generated@@291 (type $generated@@618))))
 (=> (and (= (type $generated@@618) ($generated@@290 $generated@@619)) (= ($generated@@289 $generated@@618) 0)) (= $generated@@618 ($generated@@288 $generated@@619))))
 :pattern ( ($generated@@289 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (! (let (($generated@@623 (type $generated@@621)))
 (=> (and (and (= (type $generated@@620) ($generated@@87 $generated@@623 $generated@@2)) (= (type $generated@@622) $generated@@2)) (<= 0 ($generated $generated@@622))) (= ($generated@@311 ($generated@@102 $generated@@620 $generated@@621 $generated@@622)) (+ (- ($generated@@311 $generated@@620) ($generated ($generated@@98 $generated@@620 $generated@@621))) ($generated $generated@@622)))))
 :pattern ( ($generated@@311 ($generated@@102 $generated@@620 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@625) $generated@@2)) ($generated@@95 $generated@@625 $generated@@46 $generated@@624))
 :pattern ( ($generated@@95 $generated@@625 $generated@@46 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@627) $generated@@3)) ($generated@@95 $generated@@627 $generated@@47 $generated@@626))
 :pattern ( ($generated@@95 $generated@@627 $generated@@47 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@629) $generated@@4)) ($generated@@95 $generated@@629 $generated@@44 $generated@@628))
 :pattern ( ($generated@@95 $generated@@629 $generated@@44 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@631) $generated@@477)) ($generated@@95 $generated@@631 $generated@@45 $generated@@630))
 :pattern ( ($generated@@95 $generated@@631 $generated@@45 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@633) $generated@@177)) ($generated@@95 $generated@@633 $generated@@48 $generated@@632))
 :pattern ( ($generated@@95 $generated@@633 $generated@@48 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@290 $generated@@177)) (= (type $generated@@635) $generated@@70)) (= ($generated@@93 $generated@@634 ($generated@@521 $generated@@635)) (forall (($generated@@636 Int) ) (!  (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@289 $generated@@634))) ($generated@@247 ($generated@@522 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@522 $generated@@634 $generated@@636))
))))
 :pattern ( ($generated@@93 $generated@@634 ($generated@@521 $generated@@635)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 Int) ) (!  (=> (= (type $generated@@638) ($generated@@290 $generated@@177)) (=> (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@289 $generated@@638))) (< ($generated@@567 ($generated@@362 $generated@@168 ($generated@@522 $generated@@638 $generated@@639))) ($generated@@637 $generated@@638))))
 :pattern ( ($generated@@567 ($generated@@362 $generated@@168 ($generated@@522 $generated@@638 $generated@@639))))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) $generated@@70)) ($generated@@93 $generated@@640 ($generated@@429 $generated@@641 $generated@@642))) (and (and ($generated@@93 ($generated@@317 $generated@@640) ($generated@@261 $generated@@641)) ($generated@@93 ($generated@@372 $generated@@640) ($generated@@261 $generated@@642))) ($generated@@93 ($generated@@403 $generated@@640) ($generated@@261 ($generated@@167 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@93 $generated@@640 ($generated@@429 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@644) $generated@@70)) (= (type $generated@@645) $generated@@70)) ($generated@@93 $generated@@643 ($generated@@437 $generated@@644 $generated@@645))) (and (and ($generated@@93 ($generated@@335 $generated@@643) ($generated@@266 $generated@@644)) ($generated@@93 ($generated@@383 $generated@@643) ($generated@@266 $generated@@645))) ($generated@@93 ($generated@@411 $generated@@643) ($generated@@266 ($generated@@167 $generated@@644 $generated@@645)))))
 :pattern ( ($generated@@93 $generated@@643 ($generated@@437 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@2) ($generated@@93 $generated@@646 $generated@@46))
 :pattern ( ($generated@@93 $generated@@646 $generated@@46))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@3) ($generated@@93 $generated@@647 $generated@@47))
 :pattern ( ($generated@@93 $generated@@647 $generated@@47))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@4) ($generated@@93 $generated@@648 $generated@@44))
 :pattern ( ($generated@@93 $generated@@648 $generated@@44))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@477) ($generated@@93 $generated@@649 $generated@@45))
 :pattern ( ($generated@@93 $generated@@649 $generated@@45))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@177) ($generated@@93 $generated@@650 $generated@@48))
 :pattern ( ($generated@@93 $generated@@650 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(assert  (and (and (and (= (type $generated@@651) ($generated@@190 $generated@@88 $generated@@4)) (= (type $generated@@652) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@654) $generated@@88)) (= (type $generated@@655) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@656  (=> (and (= $generated@@651 ($generated@@189 $generated@@92 $generated@@652 $generated@@60 false)) (= $generated@@653 ($generated@@96 8))) (=> (and (and (and (not ($generated@@0 ($generated@@97 ($generated@@98 $generated@@652 $generated@@654) $generated@@60))) (= ($generated ($generated@@97 ($generated@@98 $generated@@652 $generated@@654) $generated@@99)) $generated@@653)) (and (= $generated@@655 ($generated@@102 $generated@@652 $generated@@654 ($generated@@103 ($generated@@98 $generated@@652 $generated@@654) $generated@@60 ($generated@@11 true)))) ($generated@@91 $generated@@655))) (and (and ($generated@@559 $generated@@655) (= (ControlFlow 0 2) (- 0 1))) false)) ($generated@@86 $generated@@655 $generated@@654)))))
(let (($generated@@657  (=> (and ($generated@@91 $generated@@652) ($generated@@559 $generated@@652)) (=> (and (and (not (= $generated@@654 $generated@@92)) ($generated@@93 $generated@@654 $generated@@94)) (and (= 1 $generated@@85) (= (ControlFlow 0 3) 2))) $generated@@656))))
$generated@@657)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 () Int)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) Int)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 () T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@T T@U T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@353 (T@U T@U) Bool)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@T) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@520 (T@U Int) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@557 (T@U) Bool)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@635 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@104 $generated@@105)) 13)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@100 ($generated@@87 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@87 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@101 ($generated@@87 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@87 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@101 (type $generated@@110))))
(= (type ($generated@@98 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 (type $generated@@115)))
(let (($generated@@117 (type $generated@@114)))
(= (type ($generated@@102 $generated@@113 $generated@@114 $generated@@115)) ($generated@@87 $generated@@117 $generated@@116))))
 :pattern ( ($generated@@102 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@101 (type $generated@@118))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@98 ($generated@@102 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@98 ($generated@@102 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@98 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@98 ($generated@@102 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@98 $generated@@127 $generated@@129)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@73 (type $generated@@131))))
(= (type ($generated@@97 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@97 $generated@@130 $generated@@131))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= (type ($generated@@103 $generated@@133 $generated@@134 $generated@@135)) $generated@@89)
 :pattern ( ($generated@@103 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@138) $generated@@139) (= ($generated@@97 ($generated@@103 $generated@@136 $generated@@137 $generated@@138) $generated@@137) $generated@@138)))
 :weight 0
))) (and (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@97 ($generated@@103 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@97 $generated@@141 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or true (= ($generated@@97 ($generated@@103 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@97 $generated@@145 $generated@@147)))
 :weight 0
)))) (= (type $generated@@92) $generated@@88)) (= (type $generated@@94) $generated@@70)) (= (type $generated@@99) ($generated@@72 $generated@@2))))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@149) $generated@@88)) (or ($generated@@90 $generated@@148 $generated@@149) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@148) (and (not (= $generated@@149 $generated@@92)) (and ($generated@@93 $generated@@149 $generated@@94) ($generated@@95 $generated@@149 $generated@@94 $generated@@148))))))) (and (=> ($generated@@86 $generated@@148 $generated@@149) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)))) (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@148 $generated@@149))))
 :pattern ( ($generated@@86 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@88) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (= (type $generated@@158) $generated@@70))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@88) (= (type $generated@@160) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@159 $generated@@158 $generated@@160)  (or (= $generated@@159 $generated@@92) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@70)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@164) $generated@@88)) (and ($generated@@91 $generated@@163) (and (not (= $generated@@164 $generated@@92)) (= ($generated@@161 $generated@@164) $generated@@158)))) ($generated@@93 ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99) $generated@@46))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@93 $generated@@165 ($generated@@150 0)))
 :pattern ( ($generated@@93 $generated@@165 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@70)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@70) (= (type $generated@@172) $generated@@70)) (= (type $generated@@173) $generated@@168)) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 17) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@70)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@70)) ($generated@@93 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@93 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@88) (= ($generated@@93 $generated@@187 $generated@@158)  (or (= $generated@@187 $generated@@92) (= ($generated@@161 $generated@@187) $generated@@158))))
 :pattern ( ($generated@@93 $generated@@187 $generated@@158))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 18)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@88 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@73 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@88) (= (type $generated@@238) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@239) ($generated@@72 $generated@@4))) (= (type $generated@@241) $generated@@88)) (= (type $generated@@242) ($generated@@72 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@88) (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@244 $generated@@94 $generated@@245) ($generated@@95 $generated@@244 $generated@@158 $generated@@245)))
 :pattern ( ($generated@@95 $generated@@244 $generated@@94 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@168)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@70) (= (type $generated@@251) $generated@@70)) (= (type $generated@@252) $generated@@177)) (= (type $generated@@253) $generated@@177)) (= ($generated@@93 ($generated@@246 $generated@@252 $generated@@253) ($generated@@167 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@93 ($generated@@246 $generated@@252 $generated@@253) ($generated@@167 $generated@@250 $generated@@251)))
)))
(assert (= ($generated@@80 $generated@@99) 0))
(assert (forall (($generated@@255 T@T) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@255 $generated@@256 $generated@@257)) ($generated@@72 $generated@@255))
 :pattern ( ($generated@@254 $generated@@255 $generated@@256 $generated@@257))
)))
(assert (= ($generated@@254 $generated@@2 $generated@@64 $generated@@69) $generated@@99))
(assert  (not ($generated@@258 $generated@@99)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@168) (= (type $generated@@260) $generated@@168)) (= ($generated@@174 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@174 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@264) $generated@@70)) (= ($generated@@93 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@177) ($generated@@0 ($generated@@98 $generated@@263 $generated@@265))) ($generated@@247 $generated@@265 $generated@@264))
 :pattern ( ($generated@@98 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@93 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@269) $generated@@70)) (= ($generated@@93 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@177) ($generated@@0 ($generated@@98 $generated@@268 $generated@@270))) ($generated@@247 $generated@@270 $generated@@269))
 :pattern ( ($generated@@98 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@93 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@96 $generated@@271) $generated@@271)
 :pattern ( ($generated@@96 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@70) (= (type $generated@@278) $generated@@70)) (= (type $generated@@279) $generated@@177)) (= (type $generated@@280) $generated@@177)) (= (type $generated@@281) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@91 $generated@@281)) (= ($generated@@95 ($generated@@246 $generated@@279 $generated@@280) ($generated@@167 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@95 ($generated@@246 $generated@@279 $generated@@280) ($generated@@167 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@75)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@168) (= ($generated@@166 $generated@@284) (= ($generated@@282 $generated@@284) $generated@@62)))
 :pattern ( ($generated@@166 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@168) ($generated@@166 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@177) (= (type $generated@@287) $generated@@177)) (= $generated@@285 ($generated@@246 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@166 $generated@@285))
)))
(assert  (and (and (forall (($generated@@292 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@292)) 19)) (forall (($generated@@293 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
))) (forall (($generated@@294 T@T) ) (! (= (type ($generated@@288 $generated@@294)) ($generated@@290 $generated@@294))
 :pattern ( ($generated@@288 $generated@@294))
))))
(assert (forall (($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@295)) 0)
 :pattern ( ($generated@@288 $generated@@295))
)))
(assert ($generated@@258 $generated@@60))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@177)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@70) (= (type $generated@@300) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@276 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@95 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@276 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@303) $generated@@177)) (= (type $generated@@304) $generated@@70)) ($generated@@154 $generated@@301 $generated@@302)) ($generated@@276 $generated@@303 $generated@@304 $generated@@301)) ($generated@@276 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@154 $generated@@301 $generated@@302) ($generated@@276 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@305) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@306) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@308) $generated@@70)) ($generated@@154 $generated@@305 $generated@@306)) ($generated@@95 $generated@@307 $generated@@308 $generated@@305)) ($generated@@95 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@154 $generated@@305 $generated@@306) ($generated@@95 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@310) $generated@@88)) (=> (and (and ($generated@@91 $generated@@309) (and (not (= $generated@@310 $generated@@92)) (= ($generated@@161 $generated@@310) $generated@@158))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@309 $generated@@310) $generated@@60))) ($generated@@95 ($generated@@97 ($generated@@98 $generated@@309 $generated@@310) $generated@@99) $generated@@46 $generated@@309)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@309 $generated@@310) $generated@@99))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@87 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@100 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@87 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@98 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 20)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@87 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@98 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@98 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 21)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@87 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@98 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@98 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@355) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@353 $generated@@354 $generated@@355)) (and ($generated@@154 $generated@@354 $generated@@355) (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@73 (type $generated@@357))))
 (=> (and (and (= (type $generated@@356) $generated@@88) (= (type $generated@@357) ($generated@@72 $generated@@358))) (not ($generated@@258 $generated@@357))) (= ($generated@@97 ($generated@@98 $generated@@354 $generated@@356) $generated@@357) ($generated@@97 ($generated@@98 $generated@@355 $generated@@356) $generated@@357))))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@355 $generated@@356) $generated@@357))
))))
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@100 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@87 $generated@@360 $generated@@2)) (= ($generated@@183 $generated@@359) (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@360) (and (<= 0 ($generated ($generated@@98 $generated@@359 $generated@@361))) (<= ($generated ($generated@@98 $generated@@359 $generated@@361)) ($generated@@311 $generated@@359))))
 :pattern ( ($generated@@98 $generated@@359 $generated@@361))
)))))
 :pattern ( ($generated@@183 $generated@@359))
)))
(assert (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@177) ($generated@@247 $generated@@365 $generated@@158)) (and (= ($generated@@296 ($generated@@362 $generated@@88 $generated@@365)) $generated@@365) ($generated@@93 ($generated@@362 $generated@@88 $generated@@365) $generated@@158)))
 :pattern ( ($generated@@247 $generated@@365 $generated@@158))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@177) ($generated@@247 $generated@@366 $generated@@94)) (and (= ($generated@@296 ($generated@@362 $generated@@88 $generated@@366)) $generated@@366) ($generated@@93 ($generated@@362 $generated@@88 $generated@@366) $generated@@94)))
 :pattern ( ($generated@@247 $generated@@366 $generated@@94))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@88) (= ($generated@@93 $generated@@367 $generated@@94)  (and ($generated@@93 $generated@@367 $generated@@158) (not (= $generated@@367 $generated@@92)))))
 :pattern ( ($generated@@93 $generated@@367 $generated@@94))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@321 (type $generated@@368))))
(let (($generated@@370 ($generated@@320 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@319 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@318 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@98 ($generated@@317 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@317 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@321 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@321 (type $generated@@375))))
(let (($generated@@377 ($generated@@320 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@319 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@318 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@98 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@339 (type $generated@@379))))
(let (($generated@@381 ($generated@@338 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@337 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@336 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@98 ($generated@@335 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@335 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@339 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@87 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@339 (type $generated@@386))))
(let (($generated@@388 ($generated@@338 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@337 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@336 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@98 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@391) $generated@@70)) (= ($generated@@93 $generated@@390 ($generated@@182 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@390 $generated@@392)))) ($generated@@247 $generated@@392 $generated@@391))
 :pattern ( ($generated@@98 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@93 $generated@@390 ($generated@@182 $generated@@391)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@394) $generated@@70)) (= (type $generated@@395) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@393 ($generated@@261 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@177) ($generated@@0 ($generated@@98 $generated@@393 $generated@@396))) ($generated@@276 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@98 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@95 $generated@@393 ($generated@@261 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@398) $generated@@70)) (= (type $generated@@399) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@397 ($generated@@266 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@177) ($generated@@0 ($generated@@98 $generated@@397 $generated@@400))) ($generated@@276 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@98 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@95 $generated@@397 ($generated@@266 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@98 ($generated@@312 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@98 ($generated@@312 $generated@@402) $generated@@401)))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@321 (type $generated@@406))))
(let (($generated@@408 ($generated@@320 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@87 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@410) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@98 ($generated@@317 $generated@@409) ($generated@@175 ($generated@@362 $generated@@168 $generated@@410)))) (= ($generated@@98 ($generated@@404 $generated@@409) ($generated@@175 ($generated@@362 $generated@@168 $generated@@410))) ($generated@@176 ($generated@@362 $generated@@168 $generated@@410))))))
 :pattern ( ($generated@@98 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@339 (type $generated@@414))))
(let (($generated@@416 ($generated@@338 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@87 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@418) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@98 ($generated@@335 $generated@@417) ($generated@@175 ($generated@@362 $generated@@168 $generated@@418)))) (= ($generated@@98 ($generated@@412 $generated@@417) ($generated@@175 ($generated@@362 $generated@@168 $generated@@418))) ($generated@@176 ($generated@@362 $generated@@168 $generated@@418))))))
 :pattern ( ($generated@@98 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@320 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@319 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@98 ($generated@@372 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@98 ($generated@@317 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@98 ($generated@@404 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@98 ($generated@@317 $generated@@419) $generated@@423))
 :pattern ( ($generated@@98 ($generated@@404 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@98 ($generated@@372 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@338 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@337 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@98 ($generated@@383 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@98 ($generated@@335 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@98 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@98 ($generated@@335 $generated@@424) $generated@@428))
 :pattern ( ($generated@@98 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@70)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@317 $generated@@432) $generated@@436))) (and ($generated@@276 ($generated@@98 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@276 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@98 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@98 ($generated@@317 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@95 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@441) $generated@@70)) (= (type $generated@@442) $generated@@70)) (= (type $generated@@443) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@335 $generated@@440) $generated@@444))) (and ($generated@@276 ($generated@@98 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@276 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@98 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@98 ($generated@@335 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@95 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@445) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@446) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@447) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@445 $generated@@447))) (and ($generated@@154 $generated@@445 $generated@@446) ($generated@@154 $generated@@446 $generated@@447))) ($generated@@154 $generated@@445 $generated@@447))
 :pattern ( ($generated@@154 $generated@@445 $generated@@446) ($generated@@154 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@T) ) (! (= (type ($generated@@448 $generated@@449)) ($generated@@87 $generated@@449 $generated@@4))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@339 (type $generated@@450))))
(let (($generated@@452 ($generated@@338 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@337 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@336 $generated@@452 $generated@@451)) (= ($generated@@335 $generated@@450) ($generated@@448 $generated@@452))))))
 :pattern ( ($generated@@335 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@339 (type $generated@@453))))
(let (($generated@@455 ($generated@@338 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@337 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@336 $generated@@455 $generated@@454)) (= ($generated@@383 $generated@@453) ($generated@@448 $generated@@454))))))
 :pattern ( ($generated@@383 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@339 (type $generated@@456))))
(let (($generated@@458 ($generated@@338 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@337 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@336 $generated@@458 $generated@@457)) (= ($generated@@411 $generated@@456) ($generated@@448 $generated@@177))))))
 :pattern ( ($generated@@411 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@321 (type $generated@@459))))
(let (($generated@@461 ($generated@@320 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@319 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@318 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@177) (= (type $generated@@463) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@403 $generated@@459) ($generated@@296 ($generated@@246 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@403 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@339 (type $generated@@464))))
(let (($generated@@466 ($generated@@338 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@337 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@336 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@177) (= (type $generated@@468) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@411 $generated@@464) ($generated@@296 ($generated@@246 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@411 $generated@@464))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@76)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@T) ) (!  (=> (and (= (type $generated@@471) $generated@@76) (= (type $generated@@472) $generated@@74)) (and (= ($generated@@469 ($generated@@254 $generated@@473 $generated@@471 $generated@@472)) $generated@@471) (= ($generated@@83 ($generated@@254 $generated@@473 $generated@@471 $generated@@472)) $generated@@472)))
 :pattern ( ($generated@@254 $generated@@473 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@177) ($generated@@247 $generated@@474 $generated@@46)) (and (= ($generated@@296 ($generated@@362 $generated@@2 $generated@@474)) $generated@@474) ($generated@@93 ($generated@@362 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@177) ($generated@@247 $generated@@475 $generated@@47)) (and (= ($generated@@296 ($generated@@362 $generated@@3 $generated@@475)) $generated@@475) ($generated@@93 ($generated@@362 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@177) ($generated@@247 $generated@@476 $generated@@44)) (and (= ($generated@@296 ($generated@@362 $generated@@4 $generated@@476)) $generated@@476) ($generated@@93 ($generated@@362 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 22))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@177) ($generated@@247 $generated@@478 $generated@@45)) (and (= ($generated@@296 ($generated@@362 $generated@@477 $generated@@478)) $generated@@478) ($generated@@93 ($generated@@362 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@70) (= ($generated@@247 ($generated@@296 $generated@@479) $generated@@480) ($generated@@93 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@247 ($generated@@296 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@100 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@87 $generated@@482 $generated@@2)) (<= 0 ($generated@@311 $generated@@481))))
 :pattern ( ($generated@@311 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@291 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@290 $generated@@484)) (<= 0 ($generated@@289 $generated@@483))))
 :pattern ( ($generated@@289 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@70)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@485 ($generated@@429 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@429 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@429 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@429 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@70) (= (type $generated@@494) $generated@@70)) (= ($generated@@81 ($generated@@429 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@437 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@437 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@499 ($generated@@437 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@437 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@70) (= (type $generated@@504) $generated@@70)) (= ($generated@@81 ($generated@@437 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@177) (= (type $generated@@506) $generated@@177)) (= ($generated@@282 ($generated@@246 $generated@@505 $generated@@506)) $generated@@62))
 :pattern ( ($generated@@246 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@70) (= (type $generated@@510) $generated@@70)) (= ($generated@@507 ($generated@@167 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@167 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@70) (= (type $generated@@514) $generated@@70)) (= ($generated@@511 ($generated@@167 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@167 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@177) (= (type $generated@@516) $generated@@177)) (= ($generated@@175 ($generated@@246 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@246 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@177) (= (type $generated@@518) $generated@@177)) (= ($generated@@176 ($generated@@246 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@246 $generated@@517 $generated@@518))
)))
(assert  (and (forall (($generated@@521 T@U) ) (! (= (type ($generated@@519 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@521))
)) (forall (($generated@@522 T@U) ($generated@@523 Int) ) (! (let (($generated@@524 ($generated@@291 (type $generated@@522))))
(= (type ($generated@@520 $generated@@522 $generated@@523)) $generated@@524))
 :pattern ( ($generated@@520 $generated@@522 $generated@@523))
))))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@290 $generated@@177)) (= (type $generated@@526) $generated@@70)) (= (type $generated@@527) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@525 ($generated@@519 $generated@@526) $generated@@527) (forall (($generated@@528 Int) ) (!  (=> (and (<= 0 $generated@@528) (< $generated@@528 ($generated@@289 $generated@@525))) ($generated@@276 ($generated@@520 $generated@@525 $generated@@528) $generated@@526 $generated@@527))
 :pattern ( ($generated@@520 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@95 $generated@@525 ($generated@@519 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@529 ($generated@@150 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@150 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@531 ($generated@@261 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@261 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@81 ($generated@@261 $generated@@534)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@535 ($generated@@266 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@266 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@81 ($generated@@266 $generated@@538)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@539 ($generated@@182 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@182 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@81 ($generated@@182 $generated@@542)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@543 ($generated@@519 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@519 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@70) (= ($generated@@81 ($generated@@519 $generated@@546)) $generated@@57))
 :pattern ( ($generated@@519 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
(= ($generated@@362 $generated@@548 ($generated@@296 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@296 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@70)) (= ($generated@@93 $generated@@549 ($generated@@429 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@317 $generated@@549) $generated@@552))) (and ($generated@@247 ($generated@@98 ($generated@@404 $generated@@549) $generated@@552) $generated@@551) ($generated@@247 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@98 ($generated@@404 $generated@@549) $generated@@552))
 :pattern ( ($generated@@98 ($generated@@317 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@93 $generated@@549 ($generated@@429 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@554) $generated@@70)) (= (type $generated@@555) $generated@@70)) (= ($generated@@93 $generated@@553 ($generated@@437 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@335 $generated@@553) $generated@@556))) (and ($generated@@247 ($generated@@98 ($generated@@412 $generated@@553) $generated@@556) $generated@@555) ($generated@@247 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@98 ($generated@@412 $generated@@553) $generated@@556))
 :pattern ( ($generated@@98 ($generated@@335 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@93 $generated@@553 ($generated@@437 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@559) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@560) $generated@@88)) (=> (and (and (and ($generated@@91 $generated@@558) ($generated@@91 $generated@@559)) (and (not (= $generated@@560 $generated@@92)) ($generated@@93 $generated@@560 $generated@@94))) (and ($generated@@557 $generated@@558) ($generated@@154 $generated@@558 $generated@@559))) (=> (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@73 (type $generated@@562))))
 (=> (and (and (= (type $generated@@561) $generated@@88) (= (type $generated@@562) ($generated@@72 $generated@@563))) (and (not (= $generated@@561 $generated@@92)) (= $generated@@561 $generated@@560))) (= ($generated@@97 ($generated@@98 $generated@@558 $generated@@561) $generated@@562) ($generated@@97 ($generated@@98 $generated@@559 $generated@@561) $generated@@562))))
 :no-pattern (type $generated@@561)
 :no-pattern (type $generated@@562)
 :no-pattern ($generated $generated@@561)
 :no-pattern ($generated@@0 $generated@@561)
 :no-pattern ($generated $generated@@562)
 :no-pattern ($generated@@0 $generated@@562)
)) (= ($generated@@86 $generated@@558 $generated@@560) ($generated@@86 $generated@@559 $generated@@560)))))
 :pattern ( ($generated@@557 $generated@@558) ($generated@@154 $generated@@558 $generated@@559) ($generated@@86 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@177) (= (type $generated@@567) $generated@@177)) (< ($generated@@564 $generated@@566) ($generated@@565 ($generated@@246 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@246 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@177) (= (type $generated@@569) $generated@@177)) (< ($generated@@564 $generated@@569) ($generated@@565 ($generated@@246 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@246 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@177) (= (type $generated@@571) $generated@@70)) (= (type $generated@@572) $generated@@70)) ($generated@@247 $generated@@570 ($generated@@429 $generated@@571 $generated@@572))) (and (= ($generated@@296 ($generated@@362 ($generated@@319 $generated@@177 $generated@@177) $generated@@570)) $generated@@570) ($generated@@93 ($generated@@362 ($generated@@319 $generated@@177 $generated@@177) $generated@@570) ($generated@@429 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@247 $generated@@570 ($generated@@429 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@177) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) $generated@@70)) ($generated@@247 $generated@@573 ($generated@@437 $generated@@574 $generated@@575))) (and (= ($generated@@296 ($generated@@362 ($generated@@337 $generated@@177 $generated@@177) $generated@@573)) $generated@@573) ($generated@@93 ($generated@@362 ($generated@@337 $generated@@177 $generated@@177) $generated@@573) ($generated@@437 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@247 $generated@@573 ($generated@@437 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@70) (= (type $generated@@577) $generated@@70)) (= (type $generated@@578) $generated@@177)) ($generated@@247 $generated@@578 ($generated@@167 $generated@@576 $generated@@577))) (and (= ($generated@@296 ($generated@@362 $generated@@168 $generated@@578)) $generated@@578) ($generated@@93 ($generated@@362 $generated@@168 $generated@@578) ($generated@@167 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@247 $generated@@578 ($generated@@167 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
 (not ($generated@@0 ($generated@@98 ($generated@@448 $generated@@580) $generated@@579))))
 :pattern ( (let (($generated@@580 (type $generated@@579)))
($generated@@98 ($generated@@448 $generated@@580) $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@77)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@70) (= (type $generated@@584) $generated@@70)) (and (= ($generated@@81 ($generated@@167 $generated@@583 $generated@@584)) $generated@@63) (= ($generated@@581 ($generated@@167 $generated@@583 $generated@@584)) $generated@@67)))
 :pattern ( ($generated@@167 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@168) (= ($generated@@564 ($generated@@296 $generated@@585)) ($generated@@565 $generated@@585)))
 :pattern ( ($generated@@564 ($generated@@296 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@177) ($generated@@247 $generated@@586 ($generated@@150 0))) (and (= ($generated@@296 ($generated@@362 $generated@@2 $generated@@586)) $generated@@586) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@586) ($generated@@150 0))))
 :pattern ( ($generated@@247 $generated@@586 ($generated@@150 0)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@177) (= (type $generated@@588) $generated@@70)) ($generated@@247 $generated@@587 ($generated@@261 $generated@@588))) (and (= ($generated@@296 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@587)) $generated@@587) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@587) ($generated@@261 $generated@@588))))
 :pattern ( ($generated@@247 $generated@@587 ($generated@@261 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@177) (= (type $generated@@590) $generated@@70)) ($generated@@247 $generated@@589 ($generated@@266 $generated@@590))) (and (= ($generated@@296 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@589)) $generated@@589) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@589) ($generated@@266 $generated@@590))))
 :pattern ( ($generated@@247 $generated@@589 ($generated@@266 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@177) (= (type $generated@@592) $generated@@70)) ($generated@@247 $generated@@591 ($generated@@182 $generated@@592))) (and (= ($generated@@296 ($generated@@362 ($generated@@87 $generated@@177 $generated@@2) $generated@@591)) $generated@@591) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@2) $generated@@591) ($generated@@182 $generated@@592))))
 :pattern ( ($generated@@247 $generated@@591 ($generated@@182 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@177) (= (type $generated@@594) $generated@@70)) ($generated@@247 $generated@@593 ($generated@@519 $generated@@594))) (and (= ($generated@@296 ($generated@@362 ($generated@@290 $generated@@177) $generated@@593)) $generated@@593) ($generated@@93 ($generated@@362 ($generated@@290 $generated@@177) $generated@@593) ($generated@@519 $generated@@594))))
 :pattern ( ($generated@@247 $generated@@593 ($generated@@519 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
 (=> (and (and (and (= (type $generated@@595) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@596) $generated@@88)) (= (type $generated@@597) ($generated@@72 $generated@@599))) ($generated@@91 ($generated@@102 $generated@@595 $generated@@596 ($generated@@103 ($generated@@98 $generated@@595 $generated@@596) $generated@@597 $generated@@598)))) ($generated@@154 $generated@@595 ($generated@@102 $generated@@595 $generated@@596 ($generated@@103 ($generated@@98 $generated@@595 $generated@@596) $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@102 $generated@@595 $generated@@596 ($generated@@103 ($generated@@98 $generated@@595 $generated@@596) $generated@@597 $generated@@598)))
)))
(assert (= ($generated@@81 $generated@@158) $generated@@65))
(assert (= ($generated@@581 $generated@@158) $generated@@68))
(assert (= ($generated@@81 $generated@@94) $generated@@66))
(assert (= ($generated@@581 $generated@@94) $generated@@68))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@600) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@601) $generated@@70)) (= (type $generated@@602) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@600 ($generated@@182 $generated@@601) $generated@@602) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@600 $generated@@603)))) ($generated@@276 $generated@@603 $generated@@601 $generated@@602))
 :pattern ( ($generated@@98 $generated@@600 $generated@@603))
))))
 :pattern ( ($generated@@95 $generated@@600 ($generated@@182 $generated@@601) $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@168) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@606) (and ($generated@@166 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@70) ($generated@@95 $generated@@604 ($generated@@167 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@95 $generated@@604 ($generated@@167 $generated@@605 $generated@@607) $generated@@606))
))))) ($generated@@276 ($generated@@175 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@276 ($generated@@175 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@168) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@610) (and ($generated@@166 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@70) ($generated@@95 $generated@@608 ($generated@@167 $generated@@611 $generated@@609) $generated@@610))
 :pattern ( ($generated@@95 $generated@@608 ($generated@@167 $generated@@611 $generated@@609) $generated@@610))
))))) ($generated@@276 ($generated@@176 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@276 ($generated@@176 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@177) (= (type $generated@@613) $generated@@177)) (= ($generated@@246 ($generated@@272 $generated@@612) ($generated@@272 $generated@@613)) ($generated@@272 ($generated@@246 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@246 ($generated@@272 $generated@@612) ($generated@@272 $generated@@613)))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@96 $generated@@614))) ($generated@@272 ($generated@@296 ($generated@@8 $generated@@614))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@96 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ) (! (= ($generated@@296 ($generated@@272 $generated@@615)) ($generated@@272 ($generated@@296 $generated@@615)))
 :pattern ( ($generated@@296 ($generated@@272 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@291 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@290 $generated@@617)) (= ($generated@@289 $generated@@616) 0)) (= $generated@@616 ($generated@@288 $generated@@617))))
 :pattern ( ($generated@@289 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@87 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@311 ($generated@@102 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@311 $generated@@618) ($generated ($generated@@98 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@311 ($generated@@102 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@623) $generated@@2)) ($generated@@95 $generated@@623 $generated@@46 $generated@@622))
 :pattern ( ($generated@@95 $generated@@623 $generated@@46 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@625) $generated@@3)) ($generated@@95 $generated@@625 $generated@@47 $generated@@624))
 :pattern ( ($generated@@95 $generated@@625 $generated@@47 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@627) $generated@@4)) ($generated@@95 $generated@@627 $generated@@44 $generated@@626))
 :pattern ( ($generated@@95 $generated@@627 $generated@@44 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@629) $generated@@477)) ($generated@@95 $generated@@629 $generated@@45 $generated@@628))
 :pattern ( ($generated@@95 $generated@@629 $generated@@45 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@631) $generated@@177)) ($generated@@95 $generated@@631 $generated@@48 $generated@@630))
 :pattern ( ($generated@@95 $generated@@631 $generated@@48 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@290 $generated@@177)) (= (type $generated@@633) $generated@@70)) (= ($generated@@93 $generated@@632 ($generated@@519 $generated@@633)) (forall (($generated@@634 Int) ) (!  (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@289 $generated@@632))) ($generated@@247 ($generated@@520 $generated@@632 $generated@@634) $generated@@633))
 :pattern ( ($generated@@520 $generated@@632 $generated@@634))
))))
 :pattern ( ($generated@@93 $generated@@632 ($generated@@519 $generated@@633)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 Int) ) (!  (=> (= (type $generated@@636) ($generated@@290 $generated@@177)) (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@289 $generated@@636))) (< ($generated@@565 ($generated@@362 $generated@@168 ($generated@@520 $generated@@636 $generated@@637))) ($generated@@635 $generated@@636))))
 :pattern ( ($generated@@565 ($generated@@362 $generated@@168 ($generated@@520 $generated@@636 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@639) $generated@@70)) (= (type $generated@@640) $generated@@70)) ($generated@@93 $generated@@638 ($generated@@429 $generated@@639 $generated@@640))) (and (and ($generated@@93 ($generated@@317 $generated@@638) ($generated@@261 $generated@@639)) ($generated@@93 ($generated@@372 $generated@@638) ($generated@@261 $generated@@640))) ($generated@@93 ($generated@@403 $generated@@638) ($generated@@261 ($generated@@167 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@93 $generated@@638 ($generated@@429 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@642) $generated@@70)) (= (type $generated@@643) $generated@@70)) ($generated@@93 $generated@@641 ($generated@@437 $generated@@642 $generated@@643))) (and (and ($generated@@93 ($generated@@335 $generated@@641) ($generated@@266 $generated@@642)) ($generated@@93 ($generated@@383 $generated@@641) ($generated@@266 $generated@@643))) ($generated@@93 ($generated@@411 $generated@@641) ($generated@@266 ($generated@@167 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@93 $generated@@641 ($generated@@437 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@2) ($generated@@93 $generated@@644 $generated@@46))
 :pattern ( ($generated@@93 $generated@@644 $generated@@46))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@3) ($generated@@93 $generated@@645 $generated@@47))
 :pattern ( ($generated@@93 $generated@@645 $generated@@47))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@4) ($generated@@93 $generated@@646 $generated@@44))
 :pattern ( ($generated@@93 $generated@@646 $generated@@44))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@477) ($generated@@93 $generated@@647 $generated@@45))
 :pattern ( ($generated@@93 $generated@@647 $generated@@45))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@177) ($generated@@93 $generated@@648 $generated@@48))
 :pattern ( ($generated@@93 $generated@@648 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(assert  (and (and (and (= (type $generated@@649) ($generated@@190 $generated@@88 $generated@@4)) (= (type $generated@@650) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@652) $generated@@88)) (= (type $generated@@653) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@654  (=> (and (and (and (= $generated@@649 ($generated@@189 $generated@@92 $generated@@650 $generated@@60 false)) (= $generated@@651 ($generated@@96 8))) (and (not ($generated@@0 ($generated@@97 ($generated@@98 $generated@@650 $generated@@652) $generated@@60))) (= ($generated ($generated@@97 ($generated@@98 $generated@@650 $generated@@652) $generated@@99)) $generated@@651))) (and (and (= $generated@@653 ($generated@@102 $generated@@650 $generated@@652 ($generated@@103 ($generated@@98 $generated@@650 $generated@@652) $generated@@60 ($generated@@11 true)))) ($generated@@91 $generated@@653)) (and ($generated@@557 $generated@@653) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@86 $generated@@653 $generated@@652))))
(let (($generated@@655  (=> (and ($generated@@91 $generated@@650) ($generated@@557 $generated@@650)) (=> (and (and (not (= $generated@@652 $generated@@92)) ($generated@@93 $generated@@652 $generated@@94)) (and (= 1 $generated@@85) (= (ControlFlow 0 3) 2))) $generated@@654))))
$generated@@655)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 () Int)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) Int)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 () T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@T T@U T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@353 (T@U T@U) Bool)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@U T@U) Int)
(declare-fun $generated@@446 (T@U T@U) Bool)
(declare-fun $generated@@452 (T@T) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 () T@T)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@524 (T@U Int) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Bool)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@642 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@104 $generated@@105)) 13)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@100 ($generated@@87 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@87 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@101 ($generated@@87 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@87 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@101 (type $generated@@110))))
(= (type ($generated@@98 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 (type $generated@@115)))
(let (($generated@@117 (type $generated@@114)))
(= (type ($generated@@102 $generated@@113 $generated@@114 $generated@@115)) ($generated@@87 $generated@@117 $generated@@116))))
 :pattern ( ($generated@@102 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@101 (type $generated@@118))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@98 ($generated@@102 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@98 ($generated@@102 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@98 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@98 ($generated@@102 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@98 $generated@@127 $generated@@129)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@73 (type $generated@@131))))
(= (type ($generated@@97 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@97 $generated@@130 $generated@@131))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= (type ($generated@@103 $generated@@133 $generated@@134 $generated@@135)) $generated@@89)
 :pattern ( ($generated@@103 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@73 (type $generated@@137))))
 (=> (= (type $generated@@138) $generated@@139) (= ($generated@@97 ($generated@@103 $generated@@136 $generated@@137 $generated@@138) $generated@@137) $generated@@138)))
 :weight 0
))) (and (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@97 ($generated@@103 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@97 $generated@@141 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or true (= ($generated@@97 ($generated@@103 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@97 $generated@@145 $generated@@147)))
 :weight 0
)))) (= (type $generated@@92) $generated@@88)) (= (type $generated@@94) $generated@@70)) (= (type $generated@@99) ($generated@@72 $generated@@2))))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@149) $generated@@88)) (or ($generated@@90 $generated@@148 $generated@@149) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@148) (and (not (= $generated@@149 $generated@@92)) (and ($generated@@93 $generated@@149 $generated@@94) ($generated@@95 $generated@@149 $generated@@94 $generated@@148))))))) (and (=> ($generated@@86 $generated@@148 $generated@@149) (<= ($generated@@96 0) ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)))) (=> (= ($generated ($generated@@97 ($generated@@98 $generated@@148 $generated@@149) $generated@@99)) ($generated@@96 8)) ($generated@@86 $generated@@148 $generated@@149))))
 :pattern ( ($generated@@86 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@95 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@88) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (= (type $generated@@158) $generated@@70))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@88) (= (type $generated@@160) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@159 $generated@@158 $generated@@160)  (or (= $generated@@159 $generated@@92) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@70)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@164) $generated@@88)) (and ($generated@@91 $generated@@163) (and (not (= $generated@@164 $generated@@92)) (= ($generated@@161 $generated@@164) $generated@@158)))) ($generated@@93 ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99) $generated@@46))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@163 $generated@@164) $generated@@99))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@93 $generated@@165 ($generated@@150 0)))
 :pattern ( ($generated@@93 $generated@@165 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@70)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@70) (= (type $generated@@172) $generated@@70)) (= (type $generated@@173) $generated@@168)) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@93 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 17) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@70)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@70)) ($generated@@93 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@93 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= (type $generated@@187) $generated@@88) (= ($generated@@93 $generated@@187 $generated@@158)  (or (= $generated@@187 $generated@@92) (= ($generated@@161 $generated@@187) $generated@@158))))
 :pattern ( ($generated@@93 $generated@@187 $generated@@158))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 18)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@88 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@73 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@88) (= (type $generated@@238) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@239) ($generated@@72 $generated@@4))) (= (type $generated@@241) $generated@@88)) (= (type $generated@@242) ($generated@@72 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@88) (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@244 $generated@@94 $generated@@245) ($generated@@95 $generated@@244 $generated@@158 $generated@@245)))
 :pattern ( ($generated@@95 $generated@@244 $generated@@94 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@168)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@70) (= (type $generated@@251) $generated@@70)) (= (type $generated@@252) $generated@@177)) (= (type $generated@@253) $generated@@177)) (= ($generated@@93 ($generated@@246 $generated@@252 $generated@@253) ($generated@@167 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@93 ($generated@@246 $generated@@252 $generated@@253) ($generated@@167 $generated@@250 $generated@@251)))
)))
(assert (= ($generated@@80 $generated@@99) 0))
(assert (forall (($generated@@255 T@T) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (= (type ($generated@@254 $generated@@255 $generated@@256 $generated@@257)) ($generated@@72 $generated@@255))
 :pattern ( ($generated@@254 $generated@@255 $generated@@256 $generated@@257))
)))
(assert (= ($generated@@254 $generated@@2 $generated@@64 $generated@@69) $generated@@99))
(assert  (not ($generated@@258 $generated@@99)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@168) (= (type $generated@@260) $generated@@168)) (= ($generated@@174 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@174 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@264) $generated@@70)) (= ($generated@@93 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@177) ($generated@@0 ($generated@@98 $generated@@263 $generated@@265))) ($generated@@247 $generated@@265 $generated@@264))
 :pattern ( ($generated@@98 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@93 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@269) $generated@@70)) (= ($generated@@93 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@177) ($generated@@0 ($generated@@98 $generated@@268 $generated@@270))) ($generated@@247 $generated@@270 $generated@@269))
 :pattern ( ($generated@@98 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@93 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@96 $generated@@271) $generated@@271)
 :pattern ( ($generated@@96 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@70) (= (type $generated@@278) $generated@@70)) (= (type $generated@@279) $generated@@177)) (= (type $generated@@280) $generated@@177)) (= (type $generated@@281) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@91 $generated@@281)) (= ($generated@@95 ($generated@@246 $generated@@279 $generated@@280) ($generated@@167 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@95 ($generated@@246 $generated@@279 $generated@@280) ($generated@@167 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@75)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@168) (= ($generated@@166 $generated@@284) (= ($generated@@282 $generated@@284) $generated@@62)))
 :pattern ( ($generated@@166 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@168) ($generated@@166 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@177) (= (type $generated@@287) $generated@@177)) (= $generated@@285 ($generated@@246 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@166 $generated@@285))
)))
(assert  (and (and (forall (($generated@@292 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@292)) 19)) (forall (($generated@@293 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
))) (forall (($generated@@294 T@T) ) (! (= (type ($generated@@288 $generated@@294)) ($generated@@290 $generated@@294))
 :pattern ( ($generated@@288 $generated@@294))
))))
(assert (forall (($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@295)) 0)
 :pattern ( ($generated@@288 $generated@@295))
)))
(assert ($generated@@258 $generated@@60))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@177)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@70) (= (type $generated@@300) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@276 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@95 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@276 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@302) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@303) $generated@@177)) (= (type $generated@@304) $generated@@70)) ($generated@@154 $generated@@301 $generated@@302)) ($generated@@276 $generated@@303 $generated@@304 $generated@@301)) ($generated@@276 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@154 $generated@@301 $generated@@302) ($generated@@276 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@305) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@306) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@308) $generated@@70)) ($generated@@154 $generated@@305 $generated@@306)) ($generated@@95 $generated@@307 $generated@@308 $generated@@305)) ($generated@@95 $generated@@307 $generated@@308 $generated@@306))
 :pattern ( ($generated@@154 $generated@@305 $generated@@306) ($generated@@95 $generated@@307 $generated@@308 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@310) $generated@@88)) (=> (and (and ($generated@@91 $generated@@309) (and (not (= $generated@@310 $generated@@92)) (= ($generated@@161 $generated@@310) $generated@@158))) ($generated@@0 ($generated@@97 ($generated@@98 $generated@@309 $generated@@310) $generated@@60))) ($generated@@95 ($generated@@97 ($generated@@98 $generated@@309 $generated@@310) $generated@@99) $generated@@46 $generated@@309)))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@309 $generated@@310) $generated@@99))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@87 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@100 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@87 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@98 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 20)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@87 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@98 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@98 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 21)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@87 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@98 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@98 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@355) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@353 $generated@@354 $generated@@355)) (and ($generated@@154 $generated@@354 $generated@@355) (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@73 (type $generated@@357))))
 (=> (and (and (= (type $generated@@356) $generated@@88) (= (type $generated@@357) ($generated@@72 $generated@@358))) (not ($generated@@258 $generated@@357))) (= ($generated@@97 ($generated@@98 $generated@@354 $generated@@356) $generated@@357) ($generated@@97 ($generated@@98 $generated@@355 $generated@@356) $generated@@357))))
 :pattern ( ($generated@@97 ($generated@@98 $generated@@355 $generated@@356) $generated@@357))
))))
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@100 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@87 $generated@@360 $generated@@2)) (= ($generated@@183 $generated@@359) (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@360) (and (<= 0 ($generated ($generated@@98 $generated@@359 $generated@@361))) (<= ($generated ($generated@@98 $generated@@359 $generated@@361)) ($generated@@311 $generated@@359))))
 :pattern ( ($generated@@98 $generated@@359 $generated@@361))
)))))
 :pattern ( ($generated@@183 $generated@@359))
)))
(assert (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@177) ($generated@@247 $generated@@365 $generated@@158)) (and (= ($generated@@296 ($generated@@362 $generated@@88 $generated@@365)) $generated@@365) ($generated@@93 ($generated@@362 $generated@@88 $generated@@365) $generated@@158)))
 :pattern ( ($generated@@247 $generated@@365 $generated@@158))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@177) ($generated@@247 $generated@@366 $generated@@94)) (and (= ($generated@@296 ($generated@@362 $generated@@88 $generated@@366)) $generated@@366) ($generated@@93 ($generated@@362 $generated@@88 $generated@@366) $generated@@94)))
 :pattern ( ($generated@@247 $generated@@366 $generated@@94))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@88) (= ($generated@@93 $generated@@367 $generated@@94)  (and ($generated@@93 $generated@@367 $generated@@158) (not (= $generated@@367 $generated@@92)))))
 :pattern ( ($generated@@93 $generated@@367 $generated@@94))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@321 (type $generated@@368))))
(let (($generated@@370 ($generated@@320 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@319 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@318 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@98 ($generated@@317 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@317 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@321 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@321 (type $generated@@375))))
(let (($generated@@377 ($generated@@320 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@319 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@318 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@98 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@339 (type $generated@@379))))
(let (($generated@@381 ($generated@@338 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@337 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@336 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@98 ($generated@@335 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@335 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@339 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@87 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@339 (type $generated@@386))))
(let (($generated@@388 ($generated@@338 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@337 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@336 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@98 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@391) $generated@@70)) (= ($generated@@93 $generated@@390 ($generated@@182 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@390 $generated@@392)))) ($generated@@247 $generated@@392 $generated@@391))
 :pattern ( ($generated@@98 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@93 $generated@@390 ($generated@@182 $generated@@391)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@394) $generated@@70)) (= (type $generated@@395) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@393 ($generated@@261 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@177) ($generated@@0 ($generated@@98 $generated@@393 $generated@@396))) ($generated@@276 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@98 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@95 $generated@@393 ($generated@@261 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@87 $generated@@177 $generated@@4)) (= (type $generated@@398) $generated@@70)) (= (type $generated@@399) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@397 ($generated@@266 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@177) ($generated@@0 ($generated@@98 $generated@@397 $generated@@400))) ($generated@@276 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@98 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@95 $generated@@397 ($generated@@266 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@98 ($generated@@312 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@98 ($generated@@312 $generated@@402) $generated@@401)))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@321 (type $generated@@406))))
(let (($generated@@408 ($generated@@320 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@87 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@410) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@98 ($generated@@317 $generated@@409) ($generated@@175 ($generated@@362 $generated@@168 $generated@@410)))) (= ($generated@@98 ($generated@@404 $generated@@409) ($generated@@175 ($generated@@362 $generated@@168 $generated@@410))) ($generated@@176 ($generated@@362 $generated@@168 $generated@@410))))))
 :pattern ( ($generated@@98 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@87 $generated@@177 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@339 (type $generated@@414))))
(let (($generated@@416 ($generated@@338 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@87 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@418) $generated@@177)) (= ($generated@@0 ($generated@@98 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@98 ($generated@@335 $generated@@417) ($generated@@175 ($generated@@362 $generated@@168 $generated@@418)))) (= ($generated@@98 ($generated@@412 $generated@@417) ($generated@@175 ($generated@@362 $generated@@168 $generated@@418))) ($generated@@176 ($generated@@362 $generated@@168 $generated@@418))))))
 :pattern ( ($generated@@98 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@320 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@319 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@98 ($generated@@372 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@98 ($generated@@317 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@98 ($generated@@404 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@98 ($generated@@317 $generated@@419) $generated@@423))
 :pattern ( ($generated@@98 ($generated@@404 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@98 ($generated@@372 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@338 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@337 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@98 ($generated@@383 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@98 ($generated@@335 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@98 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@98 ($generated@@335 $generated@@424) $generated@@428))
 :pattern ( ($generated@@98 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@98 ($generated@@383 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@70)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@317 $generated@@432) $generated@@436))) (and ($generated@@276 ($generated@@98 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@276 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@98 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@98 ($generated@@317 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@95 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@441) $generated@@70)) (= (type $generated@@442) $generated@@70)) (= (type $generated@@443) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@335 $generated@@440) $generated@@444))) (and ($generated@@276 ($generated@@98 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@276 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@98 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@98 ($generated@@335 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@95 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (= (type $generated@@447) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@448) $generated@@88)) (or ($generated@@446 $generated@@447 $generated@@448) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@447) (and (not (= $generated@@448 $generated@@92)) (and ($generated@@93 $generated@@448 $generated@@94) ($generated@@95 $generated@@448 $generated@@94 $generated@@447))))))) (= ($generated@@445 $generated@@447 $generated@@448) ($generated ($generated@@97 ($generated@@98 $generated@@447 $generated@@448) $generated@@99))))
 :pattern ( ($generated@@445 $generated@@447 $generated@@448) ($generated@@91 $generated@@447))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@449) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@450) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@451) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@449 $generated@@451))) (and ($generated@@154 $generated@@449 $generated@@450) ($generated@@154 $generated@@450 $generated@@451))) ($generated@@154 $generated@@449 $generated@@451))
 :pattern ( ($generated@@154 $generated@@449 $generated@@450) ($generated@@154 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@T) ) (! (= (type ($generated@@452 $generated@@453)) ($generated@@87 $generated@@453 $generated@@4))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@339 (type $generated@@454))))
(let (($generated@@456 ($generated@@338 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@337 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@336 $generated@@456 $generated@@455)) (= ($generated@@335 $generated@@454) ($generated@@452 $generated@@456))))))
 :pattern ( ($generated@@335 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@339 (type $generated@@457))))
(let (($generated@@459 ($generated@@338 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@337 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@336 $generated@@459 $generated@@458)) (= ($generated@@383 $generated@@457) ($generated@@452 $generated@@458))))))
 :pattern ( ($generated@@383 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@339 (type $generated@@460))))
(let (($generated@@462 ($generated@@338 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@337 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@336 $generated@@462 $generated@@461)) (= ($generated@@411 $generated@@460) ($generated@@452 $generated@@177))))))
 :pattern ( ($generated@@411 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@321 (type $generated@@463))))
(let (($generated@@465 ($generated@@320 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@319 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@318 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@177) (= (type $generated@@467) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@403 $generated@@463) ($generated@@296 ($generated@@246 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@403 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@339 (type $generated@@468))))
(let (($generated@@470 ($generated@@338 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@337 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@336 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@177) (= (type $generated@@472) $generated@@177)) ($generated@@0 ($generated@@98 ($generated@@411 $generated@@468) ($generated@@296 ($generated@@246 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@411 $generated@@468))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@76)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@T) ) (!  (=> (and (= (type $generated@@475) $generated@@76) (= (type $generated@@476) $generated@@74)) (and (= ($generated@@473 ($generated@@254 $generated@@477 $generated@@475 $generated@@476)) $generated@@475) (= ($generated@@83 ($generated@@254 $generated@@477 $generated@@475 $generated@@476)) $generated@@476)))
 :pattern ( ($generated@@254 $generated@@477 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@177) ($generated@@247 $generated@@478 $generated@@46)) (and (= ($generated@@296 ($generated@@362 $generated@@2 $generated@@478)) $generated@@478) ($generated@@93 ($generated@@362 $generated@@2 $generated@@478) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@478 $generated@@46))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@177) ($generated@@247 $generated@@479 $generated@@47)) (and (= ($generated@@296 ($generated@@362 $generated@@3 $generated@@479)) $generated@@479) ($generated@@93 ($generated@@362 $generated@@3 $generated@@479) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@479 $generated@@47))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@177) ($generated@@247 $generated@@480 $generated@@44)) (and (= ($generated@@296 ($generated@@362 $generated@@4 $generated@@480)) $generated@@480) ($generated@@93 ($generated@@362 $generated@@4 $generated@@480) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@480 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@481) 22))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@177) ($generated@@247 $generated@@482 $generated@@45)) (and (= ($generated@@296 ($generated@@362 $generated@@481 $generated@@482)) $generated@@482) ($generated@@93 ($generated@@362 $generated@@481 $generated@@482) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@482 $generated@@45))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@70) (= ($generated@@247 ($generated@@296 $generated@@483) $generated@@484) ($generated@@93 $generated@@483 $generated@@484)))
 :pattern ( ($generated@@247 ($generated@@296 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@100 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@87 $generated@@486 $generated@@2)) (<= 0 ($generated@@311 $generated@@485))))
 :pattern ( ($generated@@311 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@291 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@290 $generated@@488)) (<= 0 ($generated@@289 $generated@@487))))
 :pattern ( ($generated@@289 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@429 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@429 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@493 ($generated@@429 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@429 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@81 ($generated@@429 $generated@@497 $generated@@498)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@499 ($generated@@437 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@437 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@503 ($generated@@437 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@437 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@70) (= (type $generated@@508) $generated@@70)) (= ($generated@@81 ($generated@@437 $generated@@507 $generated@@508)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@177) (= (type $generated@@510) $generated@@177)) (= ($generated@@282 ($generated@@246 $generated@@509 $generated@@510)) $generated@@62))
 :pattern ( ($generated@@246 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@70) (= (type $generated@@514) $generated@@70)) (= ($generated@@511 ($generated@@167 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@167 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@70) (= (type $generated@@518) $generated@@70)) (= ($generated@@515 ($generated@@167 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@167 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@177) (= (type $generated@@520) $generated@@177)) (= ($generated@@175 ($generated@@246 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@246 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@177) (= (type $generated@@522) $generated@@177)) (= ($generated@@176 ($generated@@246 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@246 $generated@@521 $generated@@522))
)))
(assert  (and (forall (($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@525))
)) (forall (($generated@@526 T@U) ($generated@@527 Int) ) (! (let (($generated@@528 ($generated@@291 (type $generated@@526))))
(= (type ($generated@@524 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@524 $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@290 $generated@@177)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@529 ($generated@@523 $generated@@530) $generated@@531) (forall (($generated@@532 Int) ) (!  (=> (and (<= 0 $generated@@532) (< $generated@@532 ($generated@@289 $generated@@529))) ($generated@@276 ($generated@@524 $generated@@529 $generated@@532) $generated@@530 $generated@@531))
 :pattern ( ($generated@@524 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@95 $generated@@529 ($generated@@523 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@533 ($generated@@150 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@150 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@535 ($generated@@261 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@261 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@81 ($generated@@261 $generated@@538)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@539 ($generated@@266 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@266 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@81 ($generated@@266 $generated@@542)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@543 ($generated@@182 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@182 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@70) (= ($generated@@81 ($generated@@182 $generated@@546)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@70)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@70) (= ($generated@@547 ($generated@@523 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@523 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@70) (= ($generated@@81 ($generated@@523 $generated@@550)) $generated@@57))
 :pattern ( ($generated@@523 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
(= ($generated@@362 $generated@@552 ($generated@@296 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@296 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@554) $generated@@70)) (= (type $generated@@555) $generated@@70)) (= ($generated@@93 $generated@@553 ($generated@@429 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@317 $generated@@553) $generated@@556))) (and ($generated@@247 ($generated@@98 ($generated@@404 $generated@@553) $generated@@556) $generated@@555) ($generated@@247 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@98 ($generated@@404 $generated@@553) $generated@@556))
 :pattern ( ($generated@@98 ($generated@@317 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@93 $generated@@553 ($generated@@429 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@558) $generated@@70)) (= (type $generated@@559) $generated@@70)) (= ($generated@@93 $generated@@557 ($generated@@437 $generated@@558 $generated@@559)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@177) ($generated@@0 ($generated@@98 ($generated@@335 $generated@@557) $generated@@560))) (and ($generated@@247 ($generated@@98 ($generated@@412 $generated@@557) $generated@@560) $generated@@559) ($generated@@247 $generated@@560 $generated@@558)))
 :pattern ( ($generated@@98 ($generated@@412 $generated@@557) $generated@@560))
 :pattern ( ($generated@@98 ($generated@@335 $generated@@557) $generated@@560))
))))
 :pattern ( ($generated@@93 $generated@@557 ($generated@@437 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@563) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@564) $generated@@88)) (=> (and (and (and ($generated@@91 $generated@@562) ($generated@@91 $generated@@563)) (and (not (= $generated@@564 $generated@@92)) ($generated@@93 $generated@@564 $generated@@94))) (and ($generated@@561 $generated@@562) ($generated@@154 $generated@@562 $generated@@563))) (=> (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@73 (type $generated@@566))))
 (=> (and (and (= (type $generated@@565) $generated@@88) (= (type $generated@@566) ($generated@@72 $generated@@567))) (and (not (= $generated@@565 $generated@@92)) (= $generated@@565 $generated@@564))) (= ($generated@@97 ($generated@@98 $generated@@562 $generated@@565) $generated@@566) ($generated@@97 ($generated@@98 $generated@@563 $generated@@565) $generated@@566))))
 :no-pattern (type $generated@@565)
 :no-pattern (type $generated@@566)
 :no-pattern ($generated $generated@@565)
 :no-pattern ($generated@@0 $generated@@565)
 :no-pattern ($generated $generated@@566)
 :no-pattern ($generated@@0 $generated@@566)
)) (= ($generated@@86 $generated@@562 $generated@@564) ($generated@@86 $generated@@563 $generated@@564)))))
 :pattern ( ($generated@@561 $generated@@562) ($generated@@154 $generated@@562 $generated@@563) ($generated@@86 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@177) (= (type $generated@@571) $generated@@177)) (< ($generated@@568 $generated@@570) ($generated@@569 ($generated@@246 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@246 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@177) (= (type $generated@@573) $generated@@177)) (< ($generated@@568 $generated@@573) ($generated@@569 ($generated@@246 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@246 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@177) (= (type $generated@@575) $generated@@70)) (= (type $generated@@576) $generated@@70)) ($generated@@247 $generated@@574 ($generated@@429 $generated@@575 $generated@@576))) (and (= ($generated@@296 ($generated@@362 ($generated@@319 $generated@@177 $generated@@177) $generated@@574)) $generated@@574) ($generated@@93 ($generated@@362 ($generated@@319 $generated@@177 $generated@@177) $generated@@574) ($generated@@429 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@247 $generated@@574 ($generated@@429 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@177) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) $generated@@70)) ($generated@@247 $generated@@577 ($generated@@437 $generated@@578 $generated@@579))) (and (= ($generated@@296 ($generated@@362 ($generated@@337 $generated@@177 $generated@@177) $generated@@577)) $generated@@577) ($generated@@93 ($generated@@362 ($generated@@337 $generated@@177 $generated@@177) $generated@@577) ($generated@@437 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@247 $generated@@577 ($generated@@437 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@70) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) $generated@@177)) ($generated@@247 $generated@@582 ($generated@@167 $generated@@580 $generated@@581))) (and (= ($generated@@296 ($generated@@362 $generated@@168 $generated@@582)) $generated@@582) ($generated@@93 ($generated@@362 $generated@@168 $generated@@582) ($generated@@167 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@247 $generated@@582 ($generated@@167 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
 (not ($generated@@0 ($generated@@98 ($generated@@452 $generated@@584) $generated@@583))))
 :pattern ( (let (($generated@@584 (type $generated@@583)))
($generated@@98 ($generated@@452 $generated@@584) $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@77)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@70) (= (type $generated@@588) $generated@@70)) (and (= ($generated@@81 ($generated@@167 $generated@@587 $generated@@588)) $generated@@63) (= ($generated@@585 ($generated@@167 $generated@@587 $generated@@588)) $generated@@67)))
 :pattern ( ($generated@@167 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@590) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@591) $generated@@88)) (=> (and (and (and ($generated@@91 $generated@@589) ($generated@@91 $generated@@590)) (and (not (= $generated@@591 $generated@@92)) ($generated@@93 $generated@@591 $generated@@94))) (and ($generated@@561 $generated@@589) ($generated@@154 $generated@@589 $generated@@590))) (=> (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@73 (type $generated@@593))))
 (=> (and (and (= (type $generated@@592) $generated@@88) (= (type $generated@@593) ($generated@@72 $generated@@594))) (and (not (= $generated@@592 $generated@@92)) (= $generated@@592 $generated@@591))) (= ($generated@@97 ($generated@@98 $generated@@589 $generated@@592) $generated@@593) ($generated@@97 ($generated@@98 $generated@@590 $generated@@592) $generated@@593))))
 :no-pattern (type $generated@@592)
 :no-pattern (type $generated@@593)
 :no-pattern ($generated $generated@@592)
 :no-pattern ($generated@@0 $generated@@592)
 :no-pattern ($generated $generated@@593)
 :no-pattern ($generated@@0 $generated@@593)
)) (= ($generated@@445 $generated@@589 $generated@@591) ($generated@@445 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@561 $generated@@589) ($generated@@154 $generated@@589 $generated@@590) ($generated@@445 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@168) (= ($generated@@568 ($generated@@296 $generated@@595)) ($generated@@569 $generated@@595)))
 :pattern ( ($generated@@568 ($generated@@296 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@177) ($generated@@247 $generated@@596 ($generated@@150 0))) (and (= ($generated@@296 ($generated@@362 $generated@@2 $generated@@596)) $generated@@596) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@596) ($generated@@150 0))))
 :pattern ( ($generated@@247 $generated@@596 ($generated@@150 0)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@177) (= (type $generated@@598) $generated@@70)) ($generated@@247 $generated@@597 ($generated@@261 $generated@@598))) (and (= ($generated@@296 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@597)) $generated@@597) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@597) ($generated@@261 $generated@@598))))
 :pattern ( ($generated@@247 $generated@@597 ($generated@@261 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@177) (= (type $generated@@600) $generated@@70)) ($generated@@247 $generated@@599 ($generated@@266 $generated@@600))) (and (= ($generated@@296 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@599)) $generated@@599) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@4) $generated@@599) ($generated@@266 $generated@@600))))
 :pattern ( ($generated@@247 $generated@@599 ($generated@@266 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@177) (= (type $generated@@602) $generated@@70)) ($generated@@247 $generated@@601 ($generated@@182 $generated@@602))) (and (= ($generated@@296 ($generated@@362 ($generated@@87 $generated@@177 $generated@@2) $generated@@601)) $generated@@601) ($generated@@93 ($generated@@362 ($generated@@87 $generated@@177 $generated@@2) $generated@@601) ($generated@@182 $generated@@602))))
 :pattern ( ($generated@@247 $generated@@601 ($generated@@182 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@177) (= (type $generated@@604) $generated@@70)) ($generated@@247 $generated@@603 ($generated@@523 $generated@@604))) (and (= ($generated@@296 ($generated@@362 ($generated@@290 $generated@@177) $generated@@603)) $generated@@603) ($generated@@93 ($generated@@362 ($generated@@290 $generated@@177) $generated@@603) ($generated@@523 $generated@@604))))
 :pattern ( ($generated@@247 $generated@@603 ($generated@@523 $generated@@604)))
)))
(assert (= ($generated@@81 $generated@@158) $generated@@65))
(assert (= ($generated@@585 $generated@@158) $generated@@68))
(assert (= ($generated@@81 $generated@@94) $generated@@66))
(assert (= ($generated@@585 $generated@@94) $generated@@68))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@605) ($generated@@87 $generated@@177 $generated@@2)) (= (type $generated@@606) $generated@@70)) (= (type $generated@@607) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@95 $generated@@605 ($generated@@182 $generated@@606) $generated@@607) (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@177) (< 0 ($generated ($generated@@98 $generated@@605 $generated@@608)))) ($generated@@276 $generated@@608 $generated@@606 $generated@@607))
 :pattern ( ($generated@@98 $generated@@605 $generated@@608))
))))
 :pattern ( ($generated@@95 $generated@@605 ($generated@@182 $generated@@606) $generated@@607))
)))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@610) $generated@@88)) (or ($generated@@446 $generated@@609 $generated@@610) (and (not (= 0 $generated@@85)) (and ($generated@@91 $generated@@609) (and (not (= $generated@@610 $generated@@92)) (and ($generated@@93 $generated@@610 $generated@@94) ($generated@@95 $generated@@610 $generated@@94 $generated@@609))))))) true)
 :pattern ( ($generated@@445 $generated@@609 $generated@@610))
))))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@168) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@613) (and ($generated@@166 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@70) ($generated@@95 $generated@@611 ($generated@@167 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@95 $generated@@611 ($generated@@167 $generated@@612 $generated@@614) $generated@@613))
))))) ($generated@@276 ($generated@@175 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@276 ($generated@@175 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@168) (= (type $generated@@616) $generated@@70)) (= (type $generated@@617) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@91 $generated@@617) (and ($generated@@166 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@70) ($generated@@95 $generated@@615 ($generated@@167 $generated@@618 $generated@@616) $generated@@617))
 :pattern ( ($generated@@95 $generated@@615 ($generated@@167 $generated@@618 $generated@@616) $generated@@617))
))))) ($generated@@276 ($generated@@176 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@276 ($generated@@176 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@177) (= (type $generated@@620) $generated@@177)) (= ($generated@@246 ($generated@@272 $generated@@619) ($generated@@272 $generated@@620)) ($generated@@272 ($generated@@246 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@246 ($generated@@272 $generated@@619) ($generated@@272 $generated@@620)))
)))
(assert (forall (($generated@@621 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@96 $generated@@621))) ($generated@@272 ($generated@@296 ($generated@@8 $generated@@621))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@96 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ) (! (= ($generated@@296 ($generated@@272 $generated@@622)) ($generated@@272 ($generated@@296 $generated@@622)))
 :pattern ( ($generated@@296 ($generated@@272 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 ($generated@@291 (type $generated@@623))))
 (=> (and (= (type $generated@@623) ($generated@@290 $generated@@624)) (= ($generated@@289 $generated@@623) 0)) (= $generated@@623 ($generated@@288 $generated@@624))))
 :pattern ( ($generated@@289 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@626)))
 (=> (and (and (= (type $generated@@625) ($generated@@87 $generated@@628 $generated@@2)) (= (type $generated@@627) $generated@@2)) (<= 0 ($generated $generated@@627))) (= ($generated@@311 ($generated@@102 $generated@@625 $generated@@626 $generated@@627)) (+ (- ($generated@@311 $generated@@625) ($generated ($generated@@98 $generated@@625 $generated@@626))) ($generated $generated@@627)))))
 :pattern ( ($generated@@311 ($generated@@102 $generated@@625 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@630) $generated@@2)) ($generated@@95 $generated@@630 $generated@@46 $generated@@629))
 :pattern ( ($generated@@95 $generated@@630 $generated@@46 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@632) $generated@@3)) ($generated@@95 $generated@@632 $generated@@47 $generated@@631))
 :pattern ( ($generated@@95 $generated@@632 $generated@@47 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@634) $generated@@4)) ($generated@@95 $generated@@634 $generated@@44 $generated@@633))
 :pattern ( ($generated@@95 $generated@@634 $generated@@44 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@636) $generated@@481)) ($generated@@95 $generated@@636 $generated@@45 $generated@@635))
 :pattern ( ($generated@@95 $generated@@636 $generated@@45 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@638) $generated@@177)) ($generated@@95 $generated@@638 $generated@@48 $generated@@637))
 :pattern ( ($generated@@95 $generated@@638 $generated@@48 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@290 $generated@@177)) (= (type $generated@@640) $generated@@70)) (= ($generated@@93 $generated@@639 ($generated@@523 $generated@@640)) (forall (($generated@@641 Int) ) (!  (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@289 $generated@@639))) ($generated@@247 ($generated@@524 $generated@@639 $generated@@641) $generated@@640))
 :pattern ( ($generated@@524 $generated@@639 $generated@@641))
))))
 :pattern ( ($generated@@93 $generated@@639 ($generated@@523 $generated@@640)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 Int) ) (!  (=> (= (type $generated@@643) ($generated@@290 $generated@@177)) (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@289 $generated@@643))) (< ($generated@@569 ($generated@@362 $generated@@168 ($generated@@524 $generated@@643 $generated@@644))) ($generated@@642 $generated@@643))))
 :pattern ( ($generated@@569 ($generated@@362 $generated@@168 ($generated@@524 $generated@@643 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@319 $generated@@177 $generated@@177)) (= (type $generated@@646) $generated@@70)) (= (type $generated@@647) $generated@@70)) ($generated@@93 $generated@@645 ($generated@@429 $generated@@646 $generated@@647))) (and (and ($generated@@93 ($generated@@317 $generated@@645) ($generated@@261 $generated@@646)) ($generated@@93 ($generated@@372 $generated@@645) ($generated@@261 $generated@@647))) ($generated@@93 ($generated@@403 $generated@@645) ($generated@@261 ($generated@@167 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@93 $generated@@645 ($generated@@429 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@337 $generated@@177 $generated@@177)) (= (type $generated@@649) $generated@@70)) (= (type $generated@@650) $generated@@70)) ($generated@@93 $generated@@648 ($generated@@437 $generated@@649 $generated@@650))) (and (and ($generated@@93 ($generated@@335 $generated@@648) ($generated@@266 $generated@@649)) ($generated@@93 ($generated@@383 $generated@@648) ($generated@@266 $generated@@650))) ($generated@@93 ($generated@@411 $generated@@648) ($generated@@266 ($generated@@167 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@93 $generated@@648 ($generated@@437 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@2) ($generated@@93 $generated@@651 $generated@@46))
 :pattern ( ($generated@@93 $generated@@651 $generated@@46))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@3) ($generated@@93 $generated@@652 $generated@@47))
 :pattern ( ($generated@@93 $generated@@652 $generated@@47))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@4) ($generated@@93 $generated@@653 $generated@@44))
 :pattern ( ($generated@@93 $generated@@653 $generated@@44))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@481) ($generated@@93 $generated@@654 $generated@@45))
 :pattern ( ($generated@@93 $generated@@654 $generated@@45))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@177) ($generated@@93 $generated@@655 $generated@@48))
 :pattern ( ($generated@@93 $generated@@655 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(assert  (and (and (= (type $generated@@656) ($generated@@190 $generated@@88 $generated@@4)) (= (type $generated@@657) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@658) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@659  (=> (and (and (= $generated@@656 ($generated@@189 $generated@@92 $generated@@657 $generated@@60 false)) ($generated@@95 $generated@@658 $generated@@158 $generated@@657)) (and ($generated@@446 $generated@@657 $generated@@658) ($generated@@446 $generated@@657 $generated@@658))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@445 $generated@@657 $generated@@658) ($generated ($generated@@97 ($generated@@98 $generated@@657 $generated@@658) $generated@@99)))) (=> (= ($generated@@445 $generated@@657 $generated@@658) ($generated ($generated@@97 ($generated@@98 $generated@@657 $generated@@658) $generated@@99))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated ($generated@@97 ($generated@@98 $generated@@657 $generated@@658) $generated@@99)) ($generated@@96 8))))))))
(let (($generated@@660  (=> (and ($generated@@91 $generated@@657) ($generated@@561 $generated@@657)) (=> (and (and (and (not (= $generated@@658 $generated@@92)) (and ($generated@@93 $generated@@658 $generated@@94) ($generated@@95 $generated@@658 $generated@@94 $generated@@657))) (= 1 $generated@@85)) (and ($generated@@86 $generated@@657 $generated@@658) (= (ControlFlow 0 4) 2))) $generated@@659))))
$generated@@660)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@238 (Int) Int)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@T T@U T@U) T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@T)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U T@U) Bool)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 () T@T)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Bool)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 12)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@70 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@70 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@67)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@141) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@139 $generated@@140 $generated@@141)) (forall (($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@84) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@140 $generated@@142) $generated@@60))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60))
)))
 :pattern ( ($generated@@139 $generated@@140 $generated@@141))
)))
(assert  (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@84)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@84) (= (type $generated@@146) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@145 $generated@@143 $generated@@146))
)))
(assert  (and (= (type $generated@@147) ($generated@@69 $generated@@2)) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@151)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@153) $generated@@84)) (and ($generated@@148 $generated@@152) (and (not (= $generated@@153 $generated@@144)) (= ($generated@@149 $generated@@153) $generated@@143)))) ($generated@@150 ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147) $generated@@46))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@150 $generated@@154 ($generated@@82 0)))
 :pattern ( ($generated@@150 $generated@@154 ($generated@@82 0)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@67) (= (type $generated@@161) $generated@@67)) (= (type $generated@@162) $generated@@157)) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 16) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@73)
 :pattern ( ($generated@@171 $generated@@173))
)) (= (type $generated@@172) $generated@@67)))
(assert (= ($generated@@171 $generated@@172) $generated@@65))
(assert (= ($generated@@171 $generated@@143) $generated@@65))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@178) $generated@@67)) ($generated@@150 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@150 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@84) (= ($generated@@150 $generated@@179 $generated@@143)  (or (= $generated@@179 $generated@@144) (= ($generated@@149 $generated@@179) $generated@@143))))
 :pattern ( ($generated@@150 $generated@@179 $generated@@143))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 17)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@84 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@70 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@84) (= (type $generated@@230) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@231) ($generated@@69 $generated@@4))) (= (type $generated@@233) $generated@@84)) (= (type $generated@@234) ($generated@@69 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (=> true (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (= (type $generated@@239) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@240) $generated@@84)) (or ($generated@@237 $generated@@239 $generated@@240) (and ($generated@@148 $generated@@239) (and (not (= $generated@@240 $generated@@144)) (and ($generated@@150 $generated@@240 $generated@@172) ($generated@@81 $generated@@240 $generated@@172 $generated@@239)))))) (and (=> ($generated@@236 $generated@@239 $generated@@240) (<= ($generated@@238 0) ($generated ($generated@@90 ($generated@@88 $generated@@239 $generated@@240) $generated@@147)))) (=> (= ($generated ($generated@@90 ($generated@@88 $generated@@239 $generated@@240) $generated@@147)) ($generated@@238 8)) ($generated@@236 $generated@@239 $generated@@240))))
 :pattern ( ($generated@@236 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@84) (= (type $generated@@242) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@241 $generated@@172 $generated@@242) ($generated@@81 $generated@@241 $generated@@143 $generated@@242)))
 :pattern ( ($generated@@81 $generated@@241 $generated@@172 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@157)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@166)) (= (type $generated@@250) $generated@@166)) (= ($generated@@150 ($generated@@243 $generated@@249 $generated@@250) ($generated@@156 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@150 ($generated@@243 $generated@@249 $generated@@250) ($generated@@156 $generated@@247 $generated@@248)))
)))
(assert (= ($generated@@76 $generated@@147) 0))
(assert  (and (and (forall (($generated@@254 T@T) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@251 $generated@@254 $generated@@255 $generated@@256)) ($generated@@69 $generated@@254))
 :pattern ( ($generated@@251 $generated@@254 $generated@@255 $generated@@256))
)) (= ($generated@@1 $generated@@253) 18)) (= (type $generated@@252) $generated@@253)))
(assert (= ($generated@@251 $generated@@2 $generated@@252 $generated@@66) $generated@@147))
(assert  (not ($generated@@257 $generated@@147)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@157) (= (type $generated@@259) $generated@@157)) (= ($generated@@163 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@163 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@67)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@263) $generated@@67)) (= ($generated@@150 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@166) ($generated@@0 ($generated@@88 $generated@@262 $generated@@264))) ($generated@@244 $generated@@264 $generated@@263))
 :pattern ( ($generated@@88 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@150 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@67)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@268) $generated@@67)) (= ($generated@@150 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@166) ($generated@@0 ($generated@@88 $generated@@267 $generated@@269))) ($generated@@244 $generated@@269 $generated@@268))
 :pattern ( ($generated@@88 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@150 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@238 $generated@@270) $generated@@270)
 :pattern ( ($generated@@238 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@67) (= (type $generated@@277) $generated@@67)) (= (type $generated@@278) $generated@@166)) (= (type $generated@@279) $generated@@166)) (= (type $generated@@280) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@148 $generated@@280)) (= ($generated@@81 ($generated@@243 $generated@@278 $generated@@279) ($generated@@156 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@81 ($generated@@243 $generated@@278 $generated@@279) ($generated@@156 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@72)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@157) (= ($generated@@155 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@62)))
 :pattern ( ($generated@@155 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@157) ($generated@@155 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@166) (= (type $generated@@286) $generated@@166)) (= $generated@@284 ($generated@@243 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@155 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 19)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert ($generated@@257 $generated@@60))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@166)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@67) (= (type $generated@@299) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@81 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@301) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@302) $generated@@166)) (= (type $generated@@303) $generated@@67)) ($generated@@139 $generated@@300 $generated@@301)) ($generated@@275 $generated@@302 $generated@@303 $generated@@300)) ($generated@@275 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@139 $generated@@300 $generated@@301) ($generated@@275 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@305) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@307) $generated@@67)) ($generated@@139 $generated@@304 $generated@@305)) ($generated@@81 $generated@@306 $generated@@307 $generated@@304)) ($generated@@81 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@139 $generated@@304 $generated@@305) ($generated@@81 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@309) $generated@@84)) (=> (and (and ($generated@@148 $generated@@308) (and (not (= $generated@@309 $generated@@144)) (= ($generated@@149 $generated@@309) $generated@@143))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@308 $generated@@309) $generated@@60))) ($generated@@81 ($generated@@90 ($generated@@88 $generated@@308 $generated@@309) $generated@@147) $generated@@46 $generated@@308)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@308 $generated@@309) $generated@@147))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@83 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@86 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@83 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@88 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 20)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@83 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@88 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@88 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 21)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@83 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@88 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@88 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@354) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@352 $generated@@353 $generated@@354)) (and ($generated@@139 $generated@@353 $generated@@354) (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@70 (type $generated@@356))))
 (=> (and (and (= (type $generated@@355) $generated@@84) (= (type $generated@@356) ($generated@@69 $generated@@357))) (not ($generated@@257 $generated@@356))) (= ($generated@@90 ($generated@@88 $generated@@353 $generated@@355) $generated@@356) ($generated@@90 ($generated@@88 $generated@@354 $generated@@355) $generated@@356))))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@354 $generated@@355) $generated@@356))
))))
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@86 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@83 $generated@@359 $generated@@2)) (= ($generated@@175 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@88 $generated@@358 $generated@@360))) (<= ($generated ($generated@@88 $generated@@358 $generated@@360)) ($generated@@310 $generated@@358))))
 :pattern ( ($generated@@88 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@175 $generated@@358))
)))
(assert (forall (($generated@@362 T@T) ($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@166) ($generated@@244 $generated@@364 $generated@@172)) (and (= ($generated@@295 ($generated@@361 $generated@@84 $generated@@364)) $generated@@364) ($generated@@150 ($generated@@361 $generated@@84 $generated@@364) $generated@@172)))
 :pattern ( ($generated@@244 $generated@@364 $generated@@172))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@166) ($generated@@244 $generated@@365 $generated@@143)) (and (= ($generated@@295 ($generated@@361 $generated@@84 $generated@@365)) $generated@@365) ($generated@@150 ($generated@@361 $generated@@84 $generated@@365) $generated@@143)))
 :pattern ( ($generated@@244 $generated@@365 $generated@@143))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@84) (= ($generated@@150 $generated@@366 $generated@@172)  (and ($generated@@150 $generated@@366 $generated@@143) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@150 $generated@@366 $generated@@172))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@320 (type $generated@@367))))
(let (($generated@@369 ($generated@@319 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@318 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@317 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@88 ($generated@@316 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@316 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@320 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@83 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@320 (type $generated@@374))))
(let (($generated@@376 ($generated@@319 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@318 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@317 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@88 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@338 (type $generated@@378))))
(let (($generated@@380 ($generated@@337 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@336 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@335 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@88 ($generated@@334 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@334 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@338 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@83 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@338 (type $generated@@385))))
(let (($generated@@387 ($generated@@337 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@336 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@335 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@88 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@390) $generated@@67)) (= ($generated@@150 $generated@@389 ($generated@@174 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@389 $generated@@391)))) ($generated@@244 $generated@@391 $generated@@390))
 :pattern ( ($generated@@88 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@150 $generated@@389 ($generated@@174 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@392 ($generated@@260 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@166) ($generated@@0 ($generated@@88 $generated@@392 $generated@@395))) ($generated@@275 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@88 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@81 $generated@@392 ($generated@@260 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@396 ($generated@@265 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@166) ($generated@@0 ($generated@@88 $generated@@396 $generated@@399))) ($generated@@275 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@88 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@81 $generated@@396 ($generated@@265 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@88 ($generated@@311 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@88 ($generated@@311 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@320 (type $generated@@405))))
(let (($generated@@407 ($generated@@319 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@83 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@318 $generated@@166 $generated@@166)) (= (type $generated@@409) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@88 ($generated@@316 $generated@@408) ($generated@@164 ($generated@@361 $generated@@157 $generated@@409)))) (= ($generated@@88 ($generated@@403 $generated@@408) ($generated@@164 ($generated@@361 $generated@@157 $generated@@409))) ($generated@@165 ($generated@@361 $generated@@157 $generated@@409))))))
 :pattern ( ($generated@@88 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@338 (type $generated@@413))))
(let (($generated@@415 ($generated@@337 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@83 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@336 $generated@@166 $generated@@166)) (= (type $generated@@417) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@88 ($generated@@334 $generated@@416) ($generated@@164 ($generated@@361 $generated@@157 $generated@@417)))) (= ($generated@@88 ($generated@@411 $generated@@416) ($generated@@164 ($generated@@361 $generated@@157 $generated@@417))) ($generated@@165 ($generated@@361 $generated@@157 $generated@@417))))))
 :pattern ( ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@319 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@318 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@88 ($generated@@371 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@88 ($generated@@316 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@88 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@88 ($generated@@316 $generated@@418) $generated@@422))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@88 ($generated@@371 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@337 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@336 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@88 ($generated@@382 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@88 ($generated@@334 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@88 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@88 ($generated@@334 $generated@@423) $generated@@427))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@88 ($generated@@382 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@67)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@318 $generated@@166 $generated@@166)) (= (type $generated@@432) $generated@@67)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@316 $generated@@431) $generated@@435))) (and ($generated@@275 ($generated@@88 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@275 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@88 ($generated@@316 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@81 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@336 $generated@@166 $generated@@166)) (= (type $generated@@440) $generated@@67)) (= (type $generated@@441) $generated@@67)) (= (type $generated@@442) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@334 $generated@@439) $generated@@443))) (and ($generated@@275 ($generated@@88 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@275 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@88 ($generated@@334 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@81 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@445) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@446) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@444 $generated@@446))) (and ($generated@@139 $generated@@444 $generated@@445) ($generated@@139 $generated@@445 $generated@@446))) ($generated@@139 $generated@@444 $generated@@446))
 :pattern ( ($generated@@139 $generated@@444 $generated@@445) ($generated@@139 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@83 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@338 (type $generated@@449))))
(let (($generated@@451 ($generated@@337 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@336 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@335 $generated@@451 $generated@@450)) (= ($generated@@334 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@334 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@338 (type $generated@@452))))
(let (($generated@@454 ($generated@@337 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@336 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@335 $generated@@454 $generated@@453)) (= ($generated@@382 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@382 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@338 (type $generated@@455))))
(let (($generated@@457 ($generated@@337 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@336 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@335 $generated@@457 $generated@@456)) (= ($generated@@410 $generated@@455) ($generated@@447 $generated@@166))))))
 :pattern ( ($generated@@410 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@320 (type $generated@@458))))
(let (($generated@@460 ($generated@@319 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@318 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@317 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@166) (= (type $generated@@462) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@402 $generated@@458) ($generated@@295 ($generated@@243 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@402 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@338 (type $generated@@463))))
(let (($generated@@465 ($generated@@337 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@336 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@335 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@166) (= (type $generated@@467) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@410 $generated@@463) ($generated@@295 ($generated@@243 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@410 $generated@@463))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@253)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@T) ) (!  (=> (and (= (type $generated@@470) $generated@@253) (= (type $generated@@471) $generated@@71)) (and (= ($generated@@468 ($generated@@251 $generated@@472 $generated@@470 $generated@@471)) $generated@@470) (= ($generated@@79 ($generated@@251 $generated@@472 $generated@@470 $generated@@471)) $generated@@471)))
 :pattern ( ($generated@@251 $generated@@472 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@166) ($generated@@244 $generated@@473 $generated@@46)) (and (= ($generated@@295 ($generated@@361 $generated@@2 $generated@@473)) $generated@@473) ($generated@@150 ($generated@@361 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@166) ($generated@@244 $generated@@474 $generated@@47)) (and (= ($generated@@295 ($generated@@361 $generated@@3 $generated@@474)) $generated@@474) ($generated@@150 ($generated@@361 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@166) ($generated@@244 $generated@@475 $generated@@44)) (and (= ($generated@@295 ($generated@@361 $generated@@4 $generated@@475)) $generated@@475) ($generated@@150 ($generated@@361 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@475 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@476) 22))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@166) ($generated@@244 $generated@@477 $generated@@45)) (and (= ($generated@@295 ($generated@@361 $generated@@476 $generated@@477)) $generated@@477) ($generated@@150 ($generated@@361 $generated@@476 $generated@@477) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@477 $generated@@45))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@244 ($generated@@295 $generated@@478) $generated@@479) ($generated@@150 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@244 ($generated@@295 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@86 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@83 $generated@@481 $generated@@2)) (<= 0 ($generated@@310 $generated@@480))))
 :pattern ( ($generated@@310 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@290 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@289 $generated@@483)) (<= 0 ($generated@@288 $generated@@482))))
 :pattern ( ($generated@@288 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@67) (= (type $generated@@487) $generated@@67)) (= ($generated@@484 ($generated@@428 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@428 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@428 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@428 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@77 ($generated@@428 $generated@@492 $generated@@493)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@67) (= (type $generated@@497) $generated@@67)) (= ($generated@@494 ($generated@@436 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@436 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@67) (= (type $generated@@501) $generated@@67)) (= ($generated@@498 ($generated@@436 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@436 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@77 ($generated@@436 $generated@@502 $generated@@503)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@166) (= (type $generated@@505) $generated@@166)) (= ($generated@@281 ($generated@@243 $generated@@504 $generated@@505)) $generated@@62))
 :pattern ( ($generated@@243 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@506 ($generated@@156 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@156 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@67) (= (type $generated@@513) $generated@@67)) (= ($generated@@510 ($generated@@156 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@156 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@166) (= (type $generated@@515) $generated@@166)) (= ($generated@@164 ($generated@@243 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@243 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@166) (= (type $generated@@517) $generated@@166)) (= ($generated@@165 ($generated@@243 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@243 $generated@@516 $generated@@517))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@290 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@289 $generated@@166)) (= (type $generated@@525) $generated@@67)) (= (type $generated@@526) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@288 $generated@@524))) ($generated@@275 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@81 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@82 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@82 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@67)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@67) (= ($generated@@530 ($generated@@260 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@260 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@77 ($generated@@260 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@67)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@67) (= ($generated@@534 ($generated@@265 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@265 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@67) (= ($generated@@77 ($generated@@265 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@174 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@174 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@67) (= ($generated@@77 ($generated@@174 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@67)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@67) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@77 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@361 $generated@@547 ($generated@@295 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@295 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@318 $generated@@166 $generated@@166)) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) (= ($generated@@150 $generated@@548 ($generated@@428 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@316 $generated@@548) $generated@@551))) (and ($generated@@244 ($generated@@88 ($generated@@403 $generated@@548) $generated@@551) $generated@@550) ($generated@@244 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@548) $generated@@551))
 :pattern ( ($generated@@88 ($generated@@316 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@150 $generated@@548 ($generated@@428 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@336 $generated@@166 $generated@@166)) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) (= ($generated@@150 $generated@@552 ($generated@@436 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@334 $generated@@552) $generated@@555))) (and ($generated@@244 ($generated@@88 ($generated@@411 $generated@@552) $generated@@555) $generated@@554) ($generated@@244 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@552) $generated@@555))
 :pattern ( ($generated@@88 ($generated@@334 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@150 $generated@@552 ($generated@@436 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@558) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@559) $generated@@84)) (=> (and (and (and ($generated@@148 $generated@@557) ($generated@@148 $generated@@558)) (and (not (= $generated@@559 $generated@@144)) ($generated@@150 $generated@@559 $generated@@172))) (and ($generated@@556 $generated@@557) ($generated@@139 $generated@@557 $generated@@558))) (=> (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@70 (type $generated@@561))))
 (=> (and (and (= (type $generated@@560) $generated@@84) (= (type $generated@@561) ($generated@@69 $generated@@562))) (and (not (= $generated@@560 $generated@@144)) (= $generated@@560 $generated@@559))) (= ($generated@@90 ($generated@@88 $generated@@557 $generated@@560) $generated@@561) ($generated@@90 ($generated@@88 $generated@@558 $generated@@560) $generated@@561))))
 :no-pattern (type $generated@@560)
 :no-pattern (type $generated@@561)
 :no-pattern ($generated $generated@@560)
 :no-pattern ($generated@@0 $generated@@560)
 :no-pattern ($generated $generated@@561)
 :no-pattern ($generated@@0 $generated@@561)
)) (= ($generated@@236 $generated@@557 $generated@@559) ($generated@@236 $generated@@558 $generated@@559)))))
 :pattern ( ($generated@@556 $generated@@557) ($generated@@139 $generated@@557 $generated@@558) ($generated@@236 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@166) (= (type $generated@@566) $generated@@166)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@243 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@243 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@166) (= (type $generated@@568) $generated@@166)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@243 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@243 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@166) (= (type $generated@@570) $generated@@67)) (= (type $generated@@571) $generated@@67)) ($generated@@244 $generated@@569 ($generated@@428 $generated@@570 $generated@@571))) (and (= ($generated@@295 ($generated@@361 ($generated@@318 $generated@@166 $generated@@166) $generated@@569)) $generated@@569) ($generated@@150 ($generated@@361 ($generated@@318 $generated@@166 $generated@@166) $generated@@569) ($generated@@428 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@244 $generated@@569 ($generated@@428 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@166) (= (type $generated@@573) $generated@@67)) (= (type $generated@@574) $generated@@67)) ($generated@@244 $generated@@572 ($generated@@436 $generated@@573 $generated@@574))) (and (= ($generated@@295 ($generated@@361 ($generated@@336 $generated@@166 $generated@@166) $generated@@572)) $generated@@572) ($generated@@150 ($generated@@361 ($generated@@336 $generated@@166 $generated@@166) $generated@@572) ($generated@@436 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@244 $generated@@572 ($generated@@436 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) $generated@@166)) ($generated@@244 $generated@@577 ($generated@@156 $generated@@575 $generated@@576))) (and (= ($generated@@295 ($generated@@361 $generated@@157 $generated@@577)) $generated@@577) ($generated@@150 ($generated@@361 $generated@@157 $generated@@577) ($generated@@156 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@244 $generated@@577 ($generated@@156 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@88 ($generated@@447 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@88 ($generated@@447 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@67) (= (type $generated@@581) $generated@@67)) (and (= ($generated@@77 ($generated@@156 $generated@@580 $generated@@581)) $generated@@63) (= ($generated@@171 ($generated@@156 $generated@@580 $generated@@581)) $generated@@64)))
 :pattern ( ($generated@@156 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@157) (= ($generated@@563 ($generated@@295 $generated@@582)) ($generated@@564 $generated@@582)))
 :pattern ( ($generated@@563 ($generated@@295 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@166) ($generated@@244 $generated@@583 ($generated@@82 0))) (and (= ($generated@@295 ($generated@@361 $generated@@2 $generated@@583)) $generated@@583) ($generated@@150 ($generated@@361 ($generated@@83 $generated@@166 $generated@@4) $generated@@583) ($generated@@82 0))))
 :pattern ( ($generated@@244 $generated@@583 ($generated@@82 0)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@166) (= (type $generated@@585) $generated@@67)) ($generated@@244 $generated@@584 ($generated@@260 $generated@@585))) (and (= ($generated@@295 ($generated@@361 ($generated@@83 $generated@@166 $generated@@4) $generated@@584)) $generated@@584) ($generated@@150 ($generated@@361 ($generated@@83 $generated@@166 $generated@@4) $generated@@584) ($generated@@260 $generated@@585))))
 :pattern ( ($generated@@244 $generated@@584 ($generated@@260 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@166) (= (type $generated@@587) $generated@@67)) ($generated@@244 $generated@@586 ($generated@@265 $generated@@587))) (and (= ($generated@@295 ($generated@@361 ($generated@@83 $generated@@166 $generated@@4) $generated@@586)) $generated@@586) ($generated@@150 ($generated@@361 ($generated@@83 $generated@@166 $generated@@4) $generated@@586) ($generated@@265 $generated@@587))))
 :pattern ( ($generated@@244 $generated@@586 ($generated@@265 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@166) (= (type $generated@@589) $generated@@67)) ($generated@@244 $generated@@588 ($generated@@174 $generated@@589))) (and (= ($generated@@295 ($generated@@361 ($generated@@83 $generated@@166 $generated@@2) $generated@@588)) $generated@@588) ($generated@@150 ($generated@@361 ($generated@@83 $generated@@166 $generated@@2) $generated@@588) ($generated@@174 $generated@@589))))
 :pattern ( ($generated@@244 $generated@@588 ($generated@@174 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@166) (= (type $generated@@591) $generated@@67)) ($generated@@244 $generated@@590 ($generated@@518 $generated@@591))) (and (= ($generated@@295 ($generated@@361 ($generated@@289 $generated@@166) $generated@@590)) $generated@@590) ($generated@@150 ($generated@@361 ($generated@@289 $generated@@166) $generated@@590) ($generated@@518 $generated@@591))))
 :pattern ( ($generated@@244 $generated@@590 ($generated@@518 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@595)))
 (=> (and (and (and (= (type $generated@@592) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@593) $generated@@84)) (= (type $generated@@594) ($generated@@69 $generated@@596))) ($generated@@148 ($generated@@89 $generated@@592 $generated@@593 ($generated@@91 ($generated@@88 $generated@@592 $generated@@593) $generated@@594 $generated@@595)))) ($generated@@139 $generated@@592 ($generated@@89 $generated@@592 $generated@@593 ($generated@@91 ($generated@@88 $generated@@592 $generated@@593) $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@89 $generated@@592 $generated@@593 ($generated@@91 ($generated@@88 $generated@@592 $generated@@593) $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@597 ($generated@@174 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@597 $generated@@600)))) ($generated@@275 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@88 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@81 $generated@@597 ($generated@@174 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@157) (= (type $generated@@602) $generated@@67)) (= (type $generated@@603) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@603) (and ($generated@@155 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@67) ($generated@@81 $generated@@601 ($generated@@156 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@81 $generated@@601 ($generated@@156 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@275 ($generated@@164 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@275 ($generated@@164 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@157) (= (type $generated@@606) $generated@@67)) (= (type $generated@@607) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@607) (and ($generated@@155 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@67) ($generated@@81 $generated@@605 ($generated@@156 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@81 $generated@@605 ($generated@@156 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@275 ($generated@@165 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@275 ($generated@@165 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@166) (= (type $generated@@610) $generated@@166)) (= ($generated@@243 ($generated@@271 $generated@@609) ($generated@@271 $generated@@610)) ($generated@@271 ($generated@@243 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@243 ($generated@@271 $generated@@609) ($generated@@271 $generated@@610)))
)))
(assert (forall (($generated@@611 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@238 $generated@@611))) ($generated@@271 ($generated@@295 ($generated@@8 $generated@@611))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@238 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ) (! (= ($generated@@295 ($generated@@271 $generated@@612)) ($generated@@271 ($generated@@295 $generated@@612)))
 :pattern ( ($generated@@295 ($generated@@271 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@290 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@289 $generated@@614)) (= ($generated@@288 $generated@@613) 0)) (= $generated@@613 ($generated@@287 $generated@@614))))
 :pattern ( ($generated@@288 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@616)))
 (=> (and (and (= (type $generated@@615) ($generated@@83 $generated@@618 $generated@@2)) (= (type $generated@@617) $generated@@2)) (<= 0 ($generated $generated@@617))) (= ($generated@@310 ($generated@@89 $generated@@615 $generated@@616 $generated@@617)) (+ (- ($generated@@310 $generated@@615) ($generated ($generated@@88 $generated@@615 $generated@@616))) ($generated $generated@@617)))))
 :pattern ( ($generated@@310 ($generated@@89 $generated@@615 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@620) $generated@@2)) ($generated@@81 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@81 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@622) $generated@@3)) ($generated@@81 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@81 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@624) $generated@@4)) ($generated@@81 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@81 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@626) $generated@@476)) ($generated@@81 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@81 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@628) $generated@@166)) ($generated@@81 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@81 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@289 $generated@@166)) (= (type $generated@@630) $generated@@67)) (= ($generated@@150 $generated@@629 ($generated@@518 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@288 $generated@@629))) ($generated@@244 ($generated@@519 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@519 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@150 $generated@@629 ($generated@@518 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@289 $generated@@166)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@288 $generated@@633))) (< ($generated@@564 ($generated@@361 $generated@@157 ($generated@@519 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@564 ($generated@@361 $generated@@157 ($generated@@519 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@318 $generated@@166 $generated@@166)) (= (type $generated@@636) $generated@@67)) (= (type $generated@@637) $generated@@67)) ($generated@@150 $generated@@635 ($generated@@428 $generated@@636 $generated@@637))) (and (and ($generated@@150 ($generated@@316 $generated@@635) ($generated@@260 $generated@@636)) ($generated@@150 ($generated@@371 $generated@@635) ($generated@@260 $generated@@637))) ($generated@@150 ($generated@@402 $generated@@635) ($generated@@260 ($generated@@156 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@150 $generated@@635 ($generated@@428 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@336 $generated@@166 $generated@@166)) (= (type $generated@@639) $generated@@67)) (= (type $generated@@640) $generated@@67)) ($generated@@150 $generated@@638 ($generated@@436 $generated@@639 $generated@@640))) (and (and ($generated@@150 ($generated@@334 $generated@@638) ($generated@@265 $generated@@639)) ($generated@@150 ($generated@@382 $generated@@638) ($generated@@265 $generated@@640))) ($generated@@150 ($generated@@410 $generated@@638) ($generated@@265 ($generated@@156 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@150 $generated@@638 ($generated@@436 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@150 $generated@@641 $generated@@46))
 :pattern ( ($generated@@150 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@150 $generated@@642 $generated@@47))
 :pattern ( ($generated@@150 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@150 $generated@@643 $generated@@44))
 :pattern ( ($generated@@150 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@476) ($generated@@150 $generated@@644 $generated@@45))
 :pattern ( ($generated@@150 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@166) ($generated@@150 $generated@@645 $generated@@48))
 :pattern ( ($generated@@150 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Bool)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@646) ($generated@@182 $generated@@84 $generated@@4)) (= (type $generated@@647) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@648) $generated@@84)) (= (type $generated@@649) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@650) $generated@@84)) (= (type $generated@@651) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@653) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@655) $generated@@84)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@657  (=> (= $generated@@646 ($generated@@181 $generated@@144 $generated@@647 $generated@@60 false)) (=> (and (and (not (= $generated@@648 $generated@@144)) (and ($generated@@150 $generated@@648 $generated@@172) ($generated@@81 $generated@@648 $generated@@172 $generated@@647))) (and ($generated@@148 $generated@@649) ($generated@@556 $generated@@649))) (=> (and (and (and (not (= $generated@@650 $generated@@144)) (and ($generated@@150 $generated@@650 $generated@@172) ($generated@@81 $generated@@650 $generated@@172 $generated@@649))) ($generated@@237 $generated@@649 $generated@@650)) (and (and ($generated@@236 $generated@@649 $generated@@650) (not ($generated@@0 ($generated@@90 ($generated@@88 $generated@@647 $generated@@650) $generated@@60)))) (and (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@84) (=> (and (not (= $generated@@658 $generated@@144)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@647 $generated@@658) $generated@@60))) (= ($generated@@88 $generated@@649 $generated@@658) ($generated@@88 $generated@@647 $generated@@658))))
 :pattern ( ($generated@@88 $generated@@649 $generated@@658))
)) ($generated@@139 $generated@@647 $generated@@649)))) (and (=> (= (ControlFlow 0 2) (- 0 12)) true) (and (=> (= (ControlFlow 0 2) (- 0 11)) (not (= $generated@@650 $generated@@144))) (=> (not (= $generated@@650 $generated@@144)) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@236 $generated@@649 $generated@@650)) (=> ($generated@@236 $generated@@649 $generated@@650) (=> (and (and ($generated@@148 $generated@@651) ($generated@@556 $generated@@651)) (and (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@84) (=> (and (not (= $generated@@659 $generated@@144)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@649 $generated@@659) $generated@@60))) (= ($generated@@88 $generated@@651 $generated@@659) ($generated@@88 $generated@@649 $generated@@659))))
 :pattern ( ($generated@@88 $generated@@651 $generated@@659))
)) ($generated@@139 $generated@@649 $generated@@651))) (and (=> (= (ControlFlow 0 2) (- 0 9)) true) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= $generated@@650 $generated@@144))) (=> (not (= $generated@@650 $generated@@144)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@0 ($generated@@180 $generated@@646 $generated@@650 $generated@@147))) (=> ($generated@@0 ($generated@@180 $generated@@646 $generated@@650 $generated@@147)) (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@650 $generated@@144))) (=> (not (= $generated@@650 $generated@@144)) (=> (= $generated@@652 (+ ($generated ($generated@@90 ($generated@@88 $generated@@651 $generated@@650) $generated@@147)) 1)) (=> (and (= $generated@@653 ($generated@@89 $generated@@651 $generated@@650 ($generated@@91 ($generated@@88 $generated@@651 $generated@@650) $generated@@147 ($generated@@8 $generated@@652)))) ($generated@@148 $generated@@653)) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@650 $generated@@144))) (=> (not (= $generated@@650 $generated@@144)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@236 $generated@@653 $generated@@650))))))))))))))))))))))))))
(let (($generated@@660  (=> (and ($generated@@148 $generated@@647) ($generated@@556 $generated@@647)) (=> (and (and (=> $generated@@654 (and ($generated@@150 $generated@@655 $generated@@172) ($generated@@81 $generated@@655 $generated@@172 $generated@@647))) true) (and (= 1 $generated@@656) (= (ControlFlow 0 13) 2))) $generated@@657))))
$generated@@660)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (Int) Int)
(declare-fun $generated@@187 (T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U) Bool)
(declare-fun $generated@@195 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@T)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@231 (T@T) T@U)
(declare-fun $generated@@232 (T@U) Int)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@T T@T) T@U)
(declare-fun $generated@@262 (T@T T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@279 (T@T T@T) T@U)
(declare-fun $generated@@280 (T@T T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@296 (T@U T@U) Bool)
(declare-fun $generated@@305 (T@T T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@T) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@420 () T@T)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@463 (T@U Int) T@U)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Bool)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U T@U T@U) T@U)
(declare-fun $generated@@525 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@526 (T@T T@T) T@T)
(declare-fun $generated@@527 (T@T) T@T)
(declare-fun $generated@@528 (T@T) T@T)
(declare-fun $generated@@529 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@582 (T@U T@U) Int)
(declare-fun $generated@@639 (T@U T@U) Bool)
(declare-fun $generated@@642 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 12)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@70 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@70 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@67)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@141) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@139 $generated@@140 $generated@@141)) (forall (($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@84) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@140 $generated@@142) $generated@@60))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60))
)))
 :pattern ( ($generated@@139 $generated@@140 $generated@@141))
)))
(assert  (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@84)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@84) (= (type $generated@@146) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@145 $generated@@143 $generated@@146))
)))
(assert  (and (= (type $generated@@147) ($generated@@69 $generated@@2)) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@151)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@153) $generated@@84)) (and ($generated@@148 $generated@@152) (and (not (= $generated@@153 $generated@@144)) (= ($generated@@149 $generated@@153) $generated@@143)))) ($generated@@150 ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147) $generated@@46))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@150 $generated@@154 ($generated@@82 0)))
 :pattern ( ($generated@@150 $generated@@154 ($generated@@82 0)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@67) (= (type $generated@@161) $generated@@67)) (= (type $generated@@162) $generated@@157)) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 16) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@73)
 :pattern ( ($generated@@171 $generated@@173))
)) (= (type $generated@@172) $generated@@67)))
(assert (= ($generated@@171 $generated@@172) $generated@@65))
(assert (= ($generated@@171 $generated@@143) $generated@@65))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@178) $generated@@67)) ($generated@@150 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@150 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@84) (= ($generated@@150 $generated@@179 $generated@@143)  (or (= $generated@@179 $generated@@144) (= ($generated@@149 $generated@@179) $generated@@143))))
 :pattern ( ($generated@@150 $generated@@179 $generated@@143))
)))
(assert  (=> true (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@184) $generated@@84)) (or ($generated@@181 $generated@@183 $generated@@184) (and ($generated@@148 $generated@@183) (and (not (= $generated@@184 $generated@@144)) (and ($generated@@150 $generated@@184 $generated@@172) ($generated@@81 $generated@@184 $generated@@172 $generated@@183)))))) (and (=> ($generated@@180 $generated@@183 $generated@@184) (<= ($generated@@182 0) ($generated ($generated@@90 ($generated@@88 $generated@@183 $generated@@184) $generated@@147)))) (=> (= ($generated ($generated@@90 ($generated@@88 $generated@@183 $generated@@184) $generated@@147)) ($generated@@182 8)) ($generated@@180 $generated@@183 $generated@@184))))
 :pattern ( ($generated@@180 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (= (type $generated@@185) $generated@@84) (= (type $generated@@186) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@185 $generated@@172 $generated@@186) ($generated@@81 $generated@@185 $generated@@143 $generated@@186)))
 :pattern ( ($generated@@81 $generated@@185 $generated@@172 $generated@@186))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= (type ($generated@@187 $generated@@189 $generated@@190)) $generated@@157)
 :pattern ( ($generated@@187 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (and (= (type $generated@@191) $generated@@67) (= (type $generated@@192) $generated@@67)) (= (type $generated@@193) $generated@@166)) (= (type $generated@@194) $generated@@166)) (= ($generated@@150 ($generated@@187 $generated@@193 $generated@@194) ($generated@@156 $generated@@191 $generated@@192))  (and ($generated@@188 $generated@@193 $generated@@191) ($generated@@188 $generated@@194 $generated@@192))))
 :pattern ( ($generated@@150 ($generated@@187 $generated@@193 $generated@@194) ($generated@@156 $generated@@191 $generated@@192)))
)))
(assert (= ($generated@@76 $generated@@147) 0))
(assert  (and (and (forall (($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= (type ($generated@@195 $generated@@198 $generated@@199 $generated@@200)) ($generated@@69 $generated@@198))
 :pattern ( ($generated@@195 $generated@@198 $generated@@199 $generated@@200))
)) (= ($generated@@1 $generated@@197) 17)) (= (type $generated@@196) $generated@@197)))
(assert (= ($generated@@195 $generated@@2 $generated@@196 $generated@@66) $generated@@147))
(assert  (not ($generated@@201 $generated@@147)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@157) (= (type $generated@@203) $generated@@157)) (= ($generated@@163 $generated@@202 $generated@@203) (= $generated@@202 $generated@@203)))
 :pattern ( ($generated@@163 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@67)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@207) $generated@@67)) (= ($generated@@150 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@166) ($generated@@0 ($generated@@88 $generated@@206 $generated@@208))) ($generated@@188 $generated@@208 $generated@@207))
 :pattern ( ($generated@@88 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@150 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (= (type ($generated@@209 $generated@@210)) $generated@@67)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (= (type $generated@@211) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@212) $generated@@67)) (= ($generated@@150 $generated@@211 ($generated@@209 $generated@@212)) (forall (($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@166) ($generated@@0 ($generated@@88 $generated@@211 $generated@@213))) ($generated@@188 $generated@@213 $generated@@212))
 :pattern ( ($generated@@88 $generated@@211 $generated@@213))
))))
 :pattern ( ($generated@@150 $generated@@211 ($generated@@209 $generated@@212)))
)))
(assert (forall (($generated@@214 Int) ) (! (= ($generated@@182 $generated@@214) $generated@@214)
 :pattern ( ($generated@@182 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (let (($generated@@217 (type $generated@@216)))
(= (type ($generated@@215 $generated@@216)) $generated@@217))
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (= ($generated@@215 $generated@@218) $generated@@218)
 :pattern ( ($generated@@215 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@220) $generated@@67) (= (type $generated@@221) $generated@@67)) (= (type $generated@@222) $generated@@166)) (= (type $generated@@223) $generated@@166)) (= (type $generated@@224) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@148 $generated@@224)) (= ($generated@@81 ($generated@@187 $generated@@222 $generated@@223) ($generated@@156 $generated@@220 $generated@@221) $generated@@224)  (and ($generated@@219 $generated@@222 $generated@@220 $generated@@224) ($generated@@219 $generated@@223 $generated@@221 $generated@@224))))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@222 $generated@@223) ($generated@@156 $generated@@220 $generated@@221) $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@72)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@157) (= ($generated@@155 $generated@@227) (= ($generated@@225 $generated@@227) $generated@@62)))
 :pattern ( ($generated@@155 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@157) ($generated@@155 $generated@@228)) (exists (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (and (and (= (type $generated@@229) $generated@@166) (= (type $generated@@230) $generated@@166)) (= $generated@@228 ($generated@@187 $generated@@229 $generated@@230)))
 :no-pattern (type $generated@@229)
 :no-pattern (type $generated@@230)
 :no-pattern ($generated $generated@@229)
 :no-pattern ($generated@@0 $generated@@229)
 :no-pattern ($generated $generated@@230)
 :no-pattern ($generated@@0 $generated@@230)
)))
 :pattern ( ($generated@@155 $generated@@228))
)))
(assert  (and (and (forall (($generated@@235 T@T) ) (= ($generated@@1 ($generated@@233 $generated@@235)) 18)) (forall (($generated@@236 T@T) ) (! (= ($generated@@234 ($generated@@233 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
))) (forall (($generated@@237 T@T) ) (! (= (type ($generated@@231 $generated@@237)) ($generated@@233 $generated@@237))
 :pattern ( ($generated@@231 $generated@@237))
))))
(assert (forall (($generated@@238 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@238)) 0)
 :pattern ( ($generated@@231 $generated@@238))
)))
(assert ($generated@@201 $generated@@60))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@166)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@219 ($generated@@239 $generated@@241) $generated@@242 $generated@@243) ($generated@@81 $generated@@241 $generated@@242 $generated@@243)))
 :pattern ( ($generated@@219 ($generated@@239 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@245) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@246) $generated@@166)) (= (type $generated@@247) $generated@@67)) ($generated@@139 $generated@@244 $generated@@245)) ($generated@@219 $generated@@246 $generated@@247 $generated@@244)) ($generated@@219 $generated@@246 $generated@@247 $generated@@245))
 :pattern ( ($generated@@139 $generated@@244 $generated@@245) ($generated@@219 $generated@@246 $generated@@247 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@248) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@249) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@251) $generated@@67)) ($generated@@139 $generated@@248 $generated@@249)) ($generated@@81 $generated@@250 $generated@@251 $generated@@248)) ($generated@@81 $generated@@250 $generated@@251 $generated@@249))
 :pattern ( ($generated@@139 $generated@@248 $generated@@249) ($generated@@81 $generated@@250 $generated@@251 $generated@@248))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@253) $generated@@84)) (=> (and (and ($generated@@148 $generated@@252) (and (not (= $generated@@253 $generated@@144)) (= ($generated@@149 $generated@@253) $generated@@143))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@252 $generated@@253) $generated@@60))) ($generated@@81 ($generated@@90 ($generated@@88 $generated@@252 $generated@@253) $generated@@147) $generated@@46 $generated@@252)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@252 $generated@@253) $generated@@147))
)))
(assert (forall (($generated@@256 T@T) ) (! (= (type ($generated@@255 $generated@@256)) ($generated@@83 $generated@@256 $generated@@2))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@86 (type $generated@@257))))
 (=> (= (type $generated@@257) ($generated@@83 $generated@@258 $generated@@2)) (and (= (= ($generated@@254 $generated@@257) 0) (= $generated@@257 ($generated@@255 $generated@@258))) (=> (not (= ($generated@@254 $generated@@257) 0)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) (< 0 ($generated ($generated@@88 $generated@@257 $generated@@259))))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert  (and (and (and (and (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@265 $generated@@266)) 19)) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@267 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@262 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@262 $generated@@269 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@262 $generated@@269 $generated@@270))
))) (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@263 (type $generated@@271))))
(= (type ($generated@@260 $generated@@271)) ($generated@@83 $generated@@272 $generated@@4)))
 :pattern ( ($generated@@260 $generated@@271))
))) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= (type ($generated@@261 $generated@@273 $generated@@274)) ($generated@@262 $generated@@273 $generated@@274))
 :pattern ( ($generated@@261 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@T) ) (! (let (($generated@@277 (type $generated@@275)))
 (not ($generated@@0 ($generated@@88 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275))))
 :pattern ( (let (($generated@@277 (type $generated@@275)))
($generated@@88 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275)))
)))
(assert  (and (and (and (and (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@283 $generated@@284)) 20)) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@285 $generated@@286)) $generated@@285)
 :pattern ( ($generated@@280 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@280 $generated@@287 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@280 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@281 (type $generated@@289))))
(= (type ($generated@@278 $generated@@289)) ($generated@@83 $generated@@290 $generated@@4)))
 :pattern ( ($generated@@278 $generated@@289))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= (type ($generated@@279 $generated@@291 $generated@@292)) ($generated@@280 $generated@@291 $generated@@292))
 :pattern ( ($generated@@279 $generated@@291 $generated@@292))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@T) ) (! (let (($generated@@295 (type $generated@@293)))
 (not ($generated@@0 ($generated@@88 ($generated@@278 ($generated@@279 $generated@@295 $generated@@294)) $generated@@293))))
 :pattern ( (let (($generated@@295 (type $generated@@293)))
($generated@@88 ($generated@@278 ($generated@@279 $generated@@295 $generated@@294)) $generated@@293)))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (= (type $generated@@297) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@298) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@296 $generated@@297 $generated@@298)) (and ($generated@@139 $generated@@297 $generated@@298) (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@70 (type $generated@@300))))
 (=> (and (and (= (type $generated@@299) $generated@@84) (= (type $generated@@300) ($generated@@69 $generated@@301))) (not ($generated@@201 $generated@@300))) (= ($generated@@90 ($generated@@88 $generated@@297 $generated@@299) $generated@@300) ($generated@@90 ($generated@@88 $generated@@298 $generated@@299) $generated@@300))))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@298 $generated@@299) $generated@@300))
))))
 :pattern ( ($generated@@296 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@86 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@83 $generated@@303 $generated@@2)) (= ($generated@@175 $generated@@302) (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@303) (and (<= 0 ($generated ($generated@@88 $generated@@302 $generated@@304))) (<= ($generated ($generated@@88 $generated@@302 $generated@@304)) ($generated@@254 $generated@@302))))
 :pattern ( ($generated@@88 $generated@@302 $generated@@304))
)))))
 :pattern ( ($generated@@175 $generated@@302))
)))
(assert (forall (($generated@@306 T@T) ($generated@@307 T@U) ) (! (= (type ($generated@@305 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@305 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@166) ($generated@@188 $generated@@308 $generated@@172)) (and (= ($generated@@239 ($generated@@305 $generated@@84 $generated@@308)) $generated@@308) ($generated@@150 ($generated@@305 $generated@@84 $generated@@308) $generated@@172)))
 :pattern ( ($generated@@188 $generated@@308 $generated@@172))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@166) ($generated@@188 $generated@@309 $generated@@143)) (and (= ($generated@@239 ($generated@@305 $generated@@84 $generated@@309)) $generated@@309) ($generated@@150 ($generated@@305 $generated@@84 $generated@@309) $generated@@143)))
 :pattern ( ($generated@@188 $generated@@309 $generated@@143))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@84) (= ($generated@@150 $generated@@310 $generated@@172)  (and ($generated@@150 $generated@@310 $generated@@143) (not (= $generated@@310 $generated@@144)))))
 :pattern ( ($generated@@150 $generated@@310 $generated@@172))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@264 (type $generated@@311))))
(let (($generated@@313 ($generated@@263 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@262 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@261 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@88 ($generated@@260 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@260 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@264 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@83 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@264 (type $generated@@318))))
(let (($generated@@320 ($generated@@263 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@262 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@261 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@88 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@282 (type $generated@@322))))
(let (($generated@@324 ($generated@@281 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@280 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@279 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@88 ($generated@@278 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@278 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@282 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@83 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@282 (type $generated@@329))))
(let (($generated@@331 ($generated@@281 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@280 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@279 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@88 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@334) $generated@@67)) (= ($generated@@150 $generated@@333 ($generated@@174 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@333 $generated@@335)))) ($generated@@188 $generated@@335 $generated@@334))
 :pattern ( ($generated@@88 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@150 $generated@@333 ($generated@@174 $generated@@334)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@337) $generated@@67)) (= (type $generated@@338) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@336 ($generated@@204 $generated@@337) $generated@@338) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@166) ($generated@@0 ($generated@@88 $generated@@336 $generated@@339))) ($generated@@219 $generated@@339 $generated@@337 $generated@@338))
 :pattern ( ($generated@@88 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@81 $generated@@336 ($generated@@204 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@341) $generated@@67)) (= (type $generated@@342) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@340 ($generated@@209 $generated@@341) $generated@@342) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@0 ($generated@@88 $generated@@340 $generated@@343))) ($generated@@219 $generated@@343 $generated@@341 $generated@@342))
 :pattern ( ($generated@@88 $generated@@340 $generated@@343))
))))
 :pattern ( ($generated@@81 $generated@@340 ($generated@@209 $generated@@341) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 (type $generated@@344)))
(= ($generated ($generated@@88 ($generated@@255 $generated@@345) $generated@@344)) 0))
 :pattern ( (let (($generated@@345 (type $generated@@344)))
($generated@@88 ($generated@@255 $generated@@345) $generated@@344)))
)))
(assert  (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@348)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@346 $generated@@348))
)) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@264 (type $generated@@349))))
(let (($generated@@351 ($generated@@263 (type $generated@@349))))
(= (type ($generated@@347 $generated@@349)) ($generated@@83 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@347 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@262 $generated@@166 $generated@@166)) (= (type $generated@@353) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@346 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@88 ($generated@@260 $generated@@352) ($generated@@164 ($generated@@305 $generated@@157 $generated@@353)))) (= ($generated@@88 ($generated@@347 $generated@@352) ($generated@@164 ($generated@@305 $generated@@157 $generated@@353))) ($generated@@165 ($generated@@305 $generated@@157 $generated@@353))))))
 :pattern ( ($generated@@88 ($generated@@346 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@282 (type $generated@@357))))
(let (($generated@@359 ($generated@@281 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@83 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@280 $generated@@166 $generated@@166)) (= (type $generated@@361) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@88 ($generated@@278 $generated@@360) ($generated@@164 ($generated@@305 $generated@@157 $generated@@361)))) (= ($generated@@88 ($generated@@355 $generated@@360) ($generated@@164 ($generated@@305 $generated@@157 $generated@@361))) ($generated@@165 ($generated@@305 $generated@@157 $generated@@361))))))
 :pattern ( ($generated@@88 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@263 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@262 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@88 ($generated@@315 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@88 ($generated@@260 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@88 ($generated@@347 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@88 ($generated@@260 $generated@@362) $generated@@366))
 :pattern ( ($generated@@88 ($generated@@347 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@88 ($generated@@315 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@281 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@280 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@88 ($generated@@326 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@88 ($generated@@278 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@88 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@88 ($generated@@278 $generated@@367) $generated@@371))
 :pattern ( ($generated@@88 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@88 ($generated@@326 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@67)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@262 $generated@@166 $generated@@166)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@260 $generated@@375) $generated@@379))) (and ($generated@@219 ($generated@@88 ($generated@@347 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@219 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@88 ($generated@@347 $generated@@375) $generated@@379))
 :pattern ( ($generated@@88 ($generated@@260 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@81 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@67)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@280 $generated@@166 $generated@@166)) (= (type $generated@@384) $generated@@67)) (= (type $generated@@385) $generated@@67)) (= (type $generated@@386) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@278 $generated@@383) $generated@@387))) (and ($generated@@219 ($generated@@88 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@219 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@88 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@88 ($generated@@278 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@81 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@388) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@389) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@390) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@388 $generated@@390))) (and ($generated@@139 $generated@@388 $generated@@389) ($generated@@139 $generated@@389 $generated@@390))) ($generated@@139 $generated@@388 $generated@@390))
 :pattern ( ($generated@@139 $generated@@388 $generated@@389) ($generated@@139 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@T) ) (! (= (type ($generated@@391 $generated@@392)) ($generated@@83 $generated@@392 $generated@@4))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@282 (type $generated@@393))))
(let (($generated@@395 ($generated@@281 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@280 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@279 $generated@@395 $generated@@394)) (= ($generated@@278 $generated@@393) ($generated@@391 $generated@@395))))))
 :pattern ( ($generated@@278 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@282 (type $generated@@396))))
(let (($generated@@398 ($generated@@281 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@280 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@279 $generated@@398 $generated@@397)) (= ($generated@@326 $generated@@396) ($generated@@391 $generated@@397))))))
 :pattern ( ($generated@@326 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@282 (type $generated@@399))))
(let (($generated@@401 ($generated@@281 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@280 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@279 $generated@@401 $generated@@400)) (= ($generated@@354 $generated@@399) ($generated@@391 $generated@@166))))))
 :pattern ( ($generated@@354 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@264 (type $generated@@402))))
(let (($generated@@404 ($generated@@263 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@262 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@261 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@166) (= (type $generated@@406) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@346 $generated@@402) ($generated@@239 ($generated@@187 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@346 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@282 (type $generated@@407))))
(let (($generated@@409 ($generated@@281 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@280 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@279 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@166) (= (type $generated@@411) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@354 $generated@@407) ($generated@@239 ($generated@@187 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@354 $generated@@407))
)))
(assert (forall (($generated@@413 T@U) ) (! (= (type ($generated@@412 $generated@@413)) $generated@@197)
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@T) ) (!  (=> (and (= (type $generated@@414) $generated@@197) (= (type $generated@@415) $generated@@71)) (and (= ($generated@@412 ($generated@@195 $generated@@416 $generated@@414 $generated@@415)) $generated@@414) (= ($generated@@79 ($generated@@195 $generated@@416 $generated@@414 $generated@@415)) $generated@@415)))
 :pattern ( ($generated@@195 $generated@@416 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@166) ($generated@@188 $generated@@417 $generated@@46)) (and (= ($generated@@239 ($generated@@305 $generated@@2 $generated@@417)) $generated@@417) ($generated@@150 ($generated@@305 $generated@@2 $generated@@417) $generated@@46)))
 :pattern ( ($generated@@188 $generated@@417 $generated@@46))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@166) ($generated@@188 $generated@@418 $generated@@47)) (and (= ($generated@@239 ($generated@@305 $generated@@3 $generated@@418)) $generated@@418) ($generated@@150 ($generated@@305 $generated@@3 $generated@@418) $generated@@47)))
 :pattern ( ($generated@@188 $generated@@418 $generated@@47))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@166) ($generated@@188 $generated@@419 $generated@@44)) (and (= ($generated@@239 ($generated@@305 $generated@@4 $generated@@419)) $generated@@419) ($generated@@150 ($generated@@305 $generated@@4 $generated@@419) $generated@@44)))
 :pattern ( ($generated@@188 $generated@@419 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@420) 21))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@166) ($generated@@188 $generated@@421 $generated@@45)) (and (= ($generated@@239 ($generated@@305 $generated@@420 $generated@@421)) $generated@@421) ($generated@@150 ($generated@@305 $generated@@420 $generated@@421) $generated@@45)))
 :pattern ( ($generated@@188 $generated@@421 $generated@@45))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@67) (= ($generated@@188 ($generated@@239 $generated@@422) $generated@@423) ($generated@@150 $generated@@422 $generated@@423)))
 :pattern ( ($generated@@188 ($generated@@239 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@86 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@83 $generated@@425 $generated@@2)) (<= 0 ($generated@@254 $generated@@424))))
 :pattern ( ($generated@@254 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@234 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@233 $generated@@427)) (<= 0 ($generated@@232 $generated@@426))))
 :pattern ( ($generated@@232 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@67)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@67) (= (type $generated@@431) $generated@@67)) (= ($generated@@428 ($generated@@372 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@372 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@67)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@67) (= (type $generated@@435) $generated@@67)) (= ($generated@@432 ($generated@@372 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@372 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) $generated@@67)) (= ($generated@@77 ($generated@@372 $generated@@436 $generated@@437)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@67)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@67) (= (type $generated@@441) $generated@@67)) (= ($generated@@438 ($generated@@380 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@380 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@380 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@380 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@77 ($generated@@380 $generated@@446 $generated@@447)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@166) (= (type $generated@@449) $generated@@166)) (= ($generated@@225 ($generated@@187 $generated@@448 $generated@@449)) $generated@@62))
 :pattern ( ($generated@@187 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@156 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@156 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@454 ($generated@@156 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@156 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@166) (= (type $generated@@459) $generated@@166)) (= ($generated@@164 ($generated@@187 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@187 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@166) (= (type $generated@@461) $generated@@166)) (= ($generated@@165 ($generated@@187 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@187 $generated@@460 $generated@@461))
)))
(assert  (and (forall (($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@464))
)) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (! (let (($generated@@467 ($generated@@234 (type $generated@@465))))
(= (type ($generated@@463 $generated@@465 $generated@@466)) $generated@@467))
 :pattern ( ($generated@@463 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@233 $generated@@166)) (= (type $generated@@469) $generated@@67)) (= (type $generated@@470) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@468 ($generated@@462 $generated@@469) $generated@@470) (forall (($generated@@471 Int) ) (!  (=> (and (<= 0 $generated@@471) (< $generated@@471 ($generated@@232 $generated@@468))) ($generated@@219 ($generated@@463 $generated@@468 $generated@@471) $generated@@469 $generated@@470))
 :pattern ( ($generated@@463 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@81 $generated@@468 ($generated@@462 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 Int) ) (! (= ($generated@@472 ($generated@@82 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@82 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@67) (= ($generated@@474 ($generated@@204 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@204 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@77 ($generated@@204 $generated@@477)) $generated@@54))
 :pattern ( ($generated@@204 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@67) (= ($generated@@478 ($generated@@209 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@209 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@67) (= ($generated@@77 ($generated@@209 $generated@@481)) $generated@@55))
 :pattern ( ($generated@@209 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@174 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@174 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@77 ($generated@@174 $generated@@485)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@462 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@462 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@77 ($generated@@462 $generated@@489)) $generated@@57))
 :pattern ( ($generated@@462 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(= ($generated@@305 $generated@@491 ($generated@@239 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@239 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@262 $generated@@166 $generated@@166)) (= (type $generated@@493) $generated@@67)) (= (type $generated@@494) $generated@@67)) (= ($generated@@150 $generated@@492 ($generated@@372 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@260 $generated@@492) $generated@@495))) (and ($generated@@188 ($generated@@88 ($generated@@347 $generated@@492) $generated@@495) $generated@@494) ($generated@@188 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@88 ($generated@@347 $generated@@492) $generated@@495))
 :pattern ( ($generated@@88 ($generated@@260 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@150 $generated@@492 ($generated@@372 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@280 $generated@@166 $generated@@166)) (= (type $generated@@497) $generated@@67)) (= (type $generated@@498) $generated@@67)) (= ($generated@@150 $generated@@496 ($generated@@380 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@278 $generated@@496) $generated@@499))) (and ($generated@@188 ($generated@@88 ($generated@@355 $generated@@496) $generated@@499) $generated@@498) ($generated@@188 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@88 ($generated@@355 $generated@@496) $generated@@499))
 :pattern ( ($generated@@88 ($generated@@278 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@150 $generated@@496 ($generated@@380 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@502) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@503) $generated@@84)) (=> (and (and (and ($generated@@148 $generated@@501) ($generated@@148 $generated@@502)) (and (not (= $generated@@503 $generated@@144)) ($generated@@150 $generated@@503 $generated@@172))) (and ($generated@@500 $generated@@501) ($generated@@139 $generated@@501 $generated@@502))) (=> (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@70 (type $generated@@505))))
 (=> (and (and (= (type $generated@@504) $generated@@84) (= (type $generated@@505) ($generated@@69 $generated@@506))) (and (not (= $generated@@504 $generated@@144)) (= $generated@@504 $generated@@503))) (= ($generated@@90 ($generated@@88 $generated@@501 $generated@@504) $generated@@505) ($generated@@90 ($generated@@88 $generated@@502 $generated@@504) $generated@@505))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
)) (= ($generated@@180 $generated@@501 $generated@@503) ($generated@@180 $generated@@502 $generated@@503)))))
 :pattern ( ($generated@@500 $generated@@501) ($generated@@139 $generated@@501 $generated@@502) ($generated@@180 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@166) (= (type $generated@@510) $generated@@166)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@187 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@187 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@166) (= (type $generated@@512) $generated@@166)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@187 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@187 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@166) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) $generated@@67)) ($generated@@188 $generated@@513 ($generated@@372 $generated@@514 $generated@@515))) (and (= ($generated@@239 ($generated@@305 ($generated@@262 $generated@@166 $generated@@166) $generated@@513)) $generated@@513) ($generated@@150 ($generated@@305 ($generated@@262 $generated@@166 $generated@@166) $generated@@513) ($generated@@372 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@188 $generated@@513 ($generated@@372 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@166) (= (type $generated@@517) $generated@@67)) (= (type $generated@@518) $generated@@67)) ($generated@@188 $generated@@516 ($generated@@380 $generated@@517 $generated@@518))) (and (= ($generated@@239 ($generated@@305 ($generated@@280 $generated@@166 $generated@@166) $generated@@516)) $generated@@516) ($generated@@150 ($generated@@305 ($generated@@280 $generated@@166 $generated@@166) $generated@@516) ($generated@@380 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@188 $generated@@516 ($generated@@380 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@67) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@166)) ($generated@@188 $generated@@521 ($generated@@156 $generated@@519 $generated@@520))) (and (= ($generated@@239 ($generated@@305 $generated@@157 $generated@@521)) $generated@@521) ($generated@@150 ($generated@@305 $generated@@157 $generated@@521) ($generated@@156 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@188 $generated@@521 ($generated@@156 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@88 ($generated@@391 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@88 ($generated@@391 $generated@@523) $generated@@522)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@530 T@T) ($generated@@531 T@T) ) (= ($generated@@1 ($generated@@526 $generated@@530 $generated@@531)) 22)) (forall (($generated@@532 T@T) ($generated@@533 T@T) ) (! (= ($generated@@527 ($generated@@526 $generated@@532 $generated@@533)) $generated@@532)
 :pattern ( ($generated@@526 $generated@@532 $generated@@533))
))) (forall (($generated@@534 T@T) ($generated@@535 T@T) ) (! (= ($generated@@528 ($generated@@526 $generated@@534 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@526 $generated@@534 $generated@@535))
))) (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@528 (type $generated@@536))))
(= (type ($generated@@524 $generated@@536 $generated@@537 $generated@@538)) $generated@@539))
 :pattern ( ($generated@@524 $generated@@536 $generated@@537 $generated@@538))
))) (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(let (($generated@@545 (type $generated@@541)))
(= (type ($generated@@529 $generated@@540 $generated@@541 $generated@@542 $generated@@543)) ($generated@@526 $generated@@545 $generated@@544))))
 :pattern ( ($generated@@529 $generated@@540 $generated@@541 $generated@@542 $generated@@543))
))) (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (! (let (($generated@@550 ($generated@@528 (type $generated@@546))))
 (=> (= (type $generated@@549) $generated@@550) (= ($generated@@524 ($generated@@529 $generated@@546 $generated@@547 $generated@@548 $generated@@549) $generated@@547 $generated@@548) $generated@@549)))
 :weight 0
))) (and (and (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (or (= $generated@@553 $generated@@555) (= ($generated@@524 ($generated@@529 $generated@@552 $generated@@553 $generated@@554 $generated@@551) $generated@@555 $generated@@556) ($generated@@524 $generated@@552 $generated@@555 $generated@@556)))
 :weight 0
)) (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (or (= $generated@@560 $generated@@562) (= ($generated@@524 ($generated@@529 $generated@@558 $generated@@559 $generated@@560 $generated@@557) $generated@@561 $generated@@562) ($generated@@524 $generated@@558 $generated@@561 $generated@@562)))
 :weight 0
))) (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (or true (= ($generated@@524 ($generated@@529 $generated@@564 $generated@@565 $generated@@566 $generated@@563) $generated@@567 $generated@@568) ($generated@@524 $generated@@564 $generated@@567 $generated@@568)))
 :weight 0
)))) (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (= (type ($generated@@525 $generated@@569 $generated@@570 $generated@@571 $generated@@572)) ($generated@@526 $generated@@84 $generated@@4))
 :pattern ( ($generated@@525 $generated@@569 $generated@@570 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@70 (type $generated@@578))))
 (=> (and (and (and (and (and (= (type $generated@@573) $generated@@84) (= (type $generated@@574) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@575) ($generated@@69 $generated@@4))) (= (type $generated@@576) $generated@@84)) (= (type $generated@@577) $generated@@84)) (= (type $generated@@578) ($generated@@69 $generated@@579))) (= ($generated@@0 ($generated@@524 ($generated@@525 $generated@@573 $generated@@574 $generated@@575 $generated@@576) $generated@@577 $generated@@578))  (=> (and (not (= $generated@@577 $generated@@573)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@574 $generated@@577) $generated@@575))) (= $generated@@577 $generated@@576)))))
 :pattern ( ($generated@@524 ($generated@@525 $generated@@573 $generated@@574 $generated@@575 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@67) (= (type $generated@@581) $generated@@67)) (and (= ($generated@@77 ($generated@@156 $generated@@580 $generated@@581)) $generated@@63) (= ($generated@@171 ($generated@@156 $generated@@580 $generated@@581)) $generated@@64)))
 :pattern ( ($generated@@156 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@584) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@585) $generated@@84)) (=> (and (and (and ($generated@@148 $generated@@583) ($generated@@148 $generated@@584)) (and (not (= $generated@@585 $generated@@144)) ($generated@@150 $generated@@585 $generated@@172))) (and ($generated@@500 $generated@@583) ($generated@@139 $generated@@583 $generated@@584))) (=> (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@70 (type $generated@@587))))
 (=> (and (and (= (type $generated@@586) $generated@@84) (= (type $generated@@587) ($generated@@69 $generated@@588))) (and (not (= $generated@@586 $generated@@144)) (= $generated@@586 $generated@@585))) (= ($generated@@90 ($generated@@88 $generated@@583 $generated@@586) $generated@@587) ($generated@@90 ($generated@@88 $generated@@584 $generated@@586) $generated@@587))))
 :no-pattern (type $generated@@586)
 :no-pattern (type $generated@@587)
 :no-pattern ($generated $generated@@586)
 :no-pattern ($generated@@0 $generated@@586)
 :no-pattern ($generated $generated@@587)
 :no-pattern ($generated@@0 $generated@@587)
)) (= ($generated@@582 $generated@@583 $generated@@585) ($generated@@582 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@500 $generated@@583) ($generated@@139 $generated@@583 $generated@@584) ($generated@@582 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@157) (= ($generated@@507 ($generated@@239 $generated@@589)) ($generated@@508 $generated@@589)))
 :pattern ( ($generated@@507 ($generated@@239 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@166) ($generated@@188 $generated@@590 ($generated@@82 0))) (and (= ($generated@@239 ($generated@@305 $generated@@2 $generated@@590)) $generated@@590) ($generated@@150 ($generated@@305 ($generated@@83 $generated@@166 $generated@@4) $generated@@590) ($generated@@82 0))))
 :pattern ( ($generated@@188 $generated@@590 ($generated@@82 0)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@166) (= (type $generated@@592) $generated@@67)) ($generated@@188 $generated@@591 ($generated@@204 $generated@@592))) (and (= ($generated@@239 ($generated@@305 ($generated@@83 $generated@@166 $generated@@4) $generated@@591)) $generated@@591) ($generated@@150 ($generated@@305 ($generated@@83 $generated@@166 $generated@@4) $generated@@591) ($generated@@204 $generated@@592))))
 :pattern ( ($generated@@188 $generated@@591 ($generated@@204 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@166) (= (type $generated@@594) $generated@@67)) ($generated@@188 $generated@@593 ($generated@@209 $generated@@594))) (and (= ($generated@@239 ($generated@@305 ($generated@@83 $generated@@166 $generated@@4) $generated@@593)) $generated@@593) ($generated@@150 ($generated@@305 ($generated@@83 $generated@@166 $generated@@4) $generated@@593) ($generated@@209 $generated@@594))))
 :pattern ( ($generated@@188 $generated@@593 ($generated@@209 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@166) (= (type $generated@@596) $generated@@67)) ($generated@@188 $generated@@595 ($generated@@174 $generated@@596))) (and (= ($generated@@239 ($generated@@305 ($generated@@83 $generated@@166 $generated@@2) $generated@@595)) $generated@@595) ($generated@@150 ($generated@@305 ($generated@@83 $generated@@166 $generated@@2) $generated@@595) ($generated@@174 $generated@@596))))
 :pattern ( ($generated@@188 $generated@@595 ($generated@@174 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@166) (= (type $generated@@598) $generated@@67)) ($generated@@188 $generated@@597 ($generated@@462 $generated@@598))) (and (= ($generated@@239 ($generated@@305 ($generated@@233 $generated@@166) $generated@@597)) $generated@@597) ($generated@@150 ($generated@@305 ($generated@@233 $generated@@166) $generated@@597) ($generated@@462 $generated@@598))))
 :pattern ( ($generated@@188 $generated@@597 ($generated@@462 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
 (=> (and (and (and (= (type $generated@@599) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@600) $generated@@84)) (= (type $generated@@601) ($generated@@69 $generated@@603))) ($generated@@148 ($generated@@89 $generated@@599 $generated@@600 ($generated@@91 ($generated@@88 $generated@@599 $generated@@600) $generated@@601 $generated@@602)))) ($generated@@139 $generated@@599 ($generated@@89 $generated@@599 $generated@@600 ($generated@@91 ($generated@@88 $generated@@599 $generated@@600) $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@89 $generated@@599 $generated@@600 ($generated@@91 ($generated@@88 $generated@@599 $generated@@600) $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@604) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@604 ($generated@@174 $generated@@605) $generated@@606) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@604 $generated@@607)))) ($generated@@219 $generated@@607 $generated@@605 $generated@@606))
 :pattern ( ($generated@@88 $generated@@604 $generated@@607))
))))
 :pattern ( ($generated@@81 $generated@@604 ($generated@@174 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@157) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@610) (and ($generated@@155 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@67) ($generated@@81 $generated@@608 ($generated@@156 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@81 $generated@@608 ($generated@@156 $generated@@609 $generated@@611) $generated@@610))
))))) ($generated@@219 ($generated@@164 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@219 ($generated@@164 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@157) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@614) (and ($generated@@155 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@67) ($generated@@81 $generated@@612 ($generated@@156 $generated@@615 $generated@@613) $generated@@614))
 :pattern ( ($generated@@81 $generated@@612 ($generated@@156 $generated@@615 $generated@@613) $generated@@614))
))))) ($generated@@219 ($generated@@165 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@219 ($generated@@165 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@166) (= (type $generated@@617) $generated@@166)) (= ($generated@@187 ($generated@@215 $generated@@616) ($generated@@215 $generated@@617)) ($generated@@215 ($generated@@187 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@187 ($generated@@215 $generated@@616) ($generated@@215 $generated@@617)))
)))
(assert (forall (($generated@@618 Int) ) (! (= ($generated@@239 ($generated@@8 ($generated@@182 $generated@@618))) ($generated@@215 ($generated@@239 ($generated@@8 $generated@@618))))
 :pattern ( ($generated@@239 ($generated@@8 ($generated@@182 $generated@@618))))
)))
(assert (forall (($generated@@619 T@U) ) (! (= ($generated@@239 ($generated@@215 $generated@@619)) ($generated@@215 ($generated@@239 $generated@@619)))
 :pattern ( ($generated@@239 ($generated@@215 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@234 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@233 $generated@@621)) (= ($generated@@232 $generated@@620) 0)) (= $generated@@620 ($generated@@231 $generated@@621))))
 :pattern ( ($generated@@232 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@623)))
 (=> (and (and (= (type $generated@@622) ($generated@@83 $generated@@625 $generated@@2)) (= (type $generated@@624) $generated@@2)) (<= 0 ($generated $generated@@624))) (= ($generated@@254 ($generated@@89 $generated@@622 $generated@@623 $generated@@624)) (+ (- ($generated@@254 $generated@@622) ($generated ($generated@@88 $generated@@622 $generated@@623))) ($generated $generated@@624)))))
 :pattern ( ($generated@@254 ($generated@@89 $generated@@622 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@627) $generated@@2)) ($generated@@81 $generated@@627 $generated@@46 $generated@@626))
 :pattern ( ($generated@@81 $generated@@627 $generated@@46 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@629) $generated@@3)) ($generated@@81 $generated@@629 $generated@@47 $generated@@628))
 :pattern ( ($generated@@81 $generated@@629 $generated@@47 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@631) $generated@@4)) ($generated@@81 $generated@@631 $generated@@44 $generated@@630))
 :pattern ( ($generated@@81 $generated@@631 $generated@@44 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@633) $generated@@420)) ($generated@@81 $generated@@633 $generated@@45 $generated@@632))
 :pattern ( ($generated@@81 $generated@@633 $generated@@45 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@635) $generated@@166)) ($generated@@81 $generated@@635 $generated@@48 $generated@@634))
 :pattern ( ($generated@@81 $generated@@635 $generated@@48 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@233 $generated@@166)) (= (type $generated@@637) $generated@@67)) (= ($generated@@150 $generated@@636 ($generated@@462 $generated@@637)) (forall (($generated@@638 Int) ) (!  (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@232 $generated@@636))) ($generated@@188 ($generated@@463 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@463 $generated@@636 $generated@@638))
))))
 :pattern ( ($generated@@150 $generated@@636 ($generated@@462 $generated@@637)))
)))
(assert  (=> true (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@641) $generated@@84)) (or ($generated@@639 $generated@@640 $generated@@641) (and ($generated@@148 $generated@@640) (and (not (= $generated@@641 $generated@@144)) (and ($generated@@150 $generated@@641 $generated@@172) ($generated@@81 $generated@@641 $generated@@172 $generated@@640)))))) true)
 :pattern ( ($generated@@582 $generated@@640 $generated@@641))
))))
(assert (forall (($generated@@643 T@U) ($generated@@644 Int) ) (!  (=> (= (type $generated@@643) ($generated@@233 $generated@@166)) (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@232 $generated@@643))) (< ($generated@@508 ($generated@@305 $generated@@157 ($generated@@463 $generated@@643 $generated@@644))) ($generated@@642 $generated@@643))))
 :pattern ( ($generated@@508 ($generated@@305 $generated@@157 ($generated@@463 $generated@@643 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@262 $generated@@166 $generated@@166)) (= (type $generated@@646) $generated@@67)) (= (type $generated@@647) $generated@@67)) ($generated@@150 $generated@@645 ($generated@@372 $generated@@646 $generated@@647))) (and (and ($generated@@150 ($generated@@260 $generated@@645) ($generated@@204 $generated@@646)) ($generated@@150 ($generated@@315 $generated@@645) ($generated@@204 $generated@@647))) ($generated@@150 ($generated@@346 $generated@@645) ($generated@@204 ($generated@@156 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@150 $generated@@645 ($generated@@372 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@280 $generated@@166 $generated@@166)) (= (type $generated@@649) $generated@@67)) (= (type $generated@@650) $generated@@67)) ($generated@@150 $generated@@648 ($generated@@380 $generated@@649 $generated@@650))) (and (and ($generated@@150 ($generated@@278 $generated@@648) ($generated@@209 $generated@@649)) ($generated@@150 ($generated@@326 $generated@@648) ($generated@@209 $generated@@650))) ($generated@@150 ($generated@@354 $generated@@648) ($generated@@209 ($generated@@156 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@150 $generated@@648 ($generated@@380 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@2) ($generated@@150 $generated@@651 $generated@@46))
 :pattern ( ($generated@@150 $generated@@651 $generated@@46))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@3) ($generated@@150 $generated@@652 $generated@@47))
 :pattern ( ($generated@@150 $generated@@652 $generated@@47))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@4) ($generated@@150 $generated@@653 $generated@@44))
 :pattern ( ($generated@@150 $generated@@653 $generated@@44))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@420) ($generated@@150 $generated@@654 $generated@@45))
 :pattern ( ($generated@@150 $generated@@654 $generated@@45))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@166) ($generated@@150 $generated@@655 $generated@@48))
 :pattern ( ($generated@@150 $generated@@655 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(assert  (and (and (and (and (= (type $generated@@656) $generated@@84) (= (type $generated@@660) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@657) ($generated@@526 $generated@@84 $generated@@4))) (= (type $generated@@662) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@659) ($generated@@83 $generated@@84 $generated@@85))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@664  (and (=> (= (ControlFlow 0 10) (- 0 13)) (not (= $generated@@656 $generated@@144))) (=> (not (= $generated@@656 $generated@@144)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@0 ($generated@@524 $generated@@657 $generated@@656 $generated@@147))) (=> ($generated@@0 ($generated@@524 $generated@@657 $generated@@656 $generated@@147)) (=> (= $generated@@658 ($generated@@182 8)) (=> (and (= $generated@@659 ($generated@@89 $generated@@660 $generated@@656 ($generated@@91 ($generated@@88 $generated@@660 $generated@@656) $generated@@147 ($generated@@8 $generated@@658)))) ($generated@@148 $generated@@659)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (not (= $generated@@656 $generated@@144))) (=> (and (and ($generated@@81 $generated@@656 $generated@@143 $generated@@659) ($generated@@181 $generated@@659 $generated@@656)) (and ($generated@@181 $generated@@659 $generated@@656) (= (ControlFlow 0 10) (- 0 9)))) ($generated@@180 $generated@@659 $generated@@656)))))))))))
(let (($generated@@665  (and (=> (= (ControlFlow 0 5) (- 0 8)) (not (= $generated@@656 $generated@@144))) (=> (not (= $generated@@656 $generated@@144)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@0 ($generated@@524 $generated@@657 $generated@@656 $generated@@147))) (=> ($generated@@0 ($generated@@524 $generated@@657 $generated@@656 $generated@@147)) (=> (= $generated@@661 ($generated@@182 7)) (=> (and (= $generated@@662 ($generated@@89 $generated@@660 $generated@@656 ($generated@@91 ($generated@@88 $generated@@660 $generated@@656) $generated@@147 ($generated@@8 $generated@@661)))) ($generated@@148 $generated@@662)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= $generated@@656 $generated@@144))) (=> (and (and ($generated@@81 $generated@@656 $generated@@143 $generated@@662) ($generated@@181 $generated@@662 $generated@@656)) (and ($generated@@181 $generated@@662 $generated@@656) (= (ControlFlow 0 5) (- 0 4)))) ($generated@@180 $generated@@662 $generated@@656)))))))))))
(let (($generated@@666  (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@656 $generated@@144))) (=> (and (and ($generated@@81 $generated@@656 $generated@@143 $generated@@660) ($generated@@181 $generated@@660 $generated@@656)) (and ($generated@@181 $generated@@660 $generated@@656) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@180 $generated@@660 $generated@@656)))))
(let (($generated@@667  (=> (= $generated@@657 ($generated@@525 $generated@@144 $generated@@660 $generated@@60 $generated@@656)) (and (=> (= (ControlFlow 0 14) (- 0 17)) (not (= $generated@@656 $generated@@144))) (=> (and ($generated@@81 $generated@@656 $generated@@143 $generated@@660) ($generated@@639 $generated@@660 $generated@@656)) (and (=> (= (ControlFlow 0 14) (- 0 16)) (not (= $generated@@656 $generated@@144))) (=> ($generated@@639 $generated@@660 $generated@@656) (and (=> (= (ControlFlow 0 14) (- 0 15)) (= ($generated@@582 $generated@@660 $generated@@656) ($generated ($generated@@90 ($generated@@88 $generated@@660 $generated@@656) $generated@@147)))) (=> (= ($generated@@582 $generated@@660 $generated@@656) ($generated ($generated@@90 ($generated@@88 $generated@@660 $generated@@656) $generated@@147))) (and (and (=> (= (ControlFlow 0 14) 2) $generated@@666) (=> (= (ControlFlow 0 14) 5) $generated@@665)) (=> (= (ControlFlow 0 14) 10) $generated@@664)))))))))))
(let (($generated@@668  (=> (and ($generated@@148 $generated@@660) ($generated@@500 $generated@@660)) (=> (and (and ($generated@@150 $generated@@656 $generated@@172) ($generated@@81 $generated@@656 $generated@@172 $generated@@660)) (and (= 1 $generated@@663) (= (ControlFlow 0 18) 14))) $generated@@667))))
$generated@@668))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 14) (- 15))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@T T@U T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U T@U) Bool)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 () T@T)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Bool)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@634 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@66) $generated@@76)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 18)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@88 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@88) (= (type $generated@@231) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@88)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (= (type $generated@@239) $generated@@70))
(assert  (=> true (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (= (type $generated@@241) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@242) $generated@@88)) (or ($generated@@238 $generated@@241 $generated@@242) (and ($generated@@152 $generated@@241) (and (not (= $generated@@242 $generated@@148)) (and ($generated@@154 $generated@@242 $generated@@239) ($generated@@85 $generated@@242 $generated@@239 $generated@@241)))))) (and (=> ($generated@@237 $generated@@241 $generated@@242) (<= ($generated@@240 0) ($generated ($generated@@94 ($generated@@92 $generated@@241 $generated@@242) $generated@@151)))) (=> (= ($generated ($generated@@94 ($generated@@92 $generated@@241 $generated@@242) $generated@@151)) ($generated@@240 8)) ($generated@@237 $generated@@241 $generated@@242))))
 :pattern ( ($generated@@237 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@88) (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@243 $generated@@239 $generated@@244) ($generated@@85 $generated@@243 $generated@@147 $generated@@244)))
 :pattern ( ($generated@@85 $generated@@243 $generated@@239 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@161)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@70) (= (type $generated@@250) $generated@@70)) (= (type $generated@@251) $generated@@170)) (= (type $generated@@252) $generated@@170)) (= ($generated@@154 ($generated@@245 $generated@@251 $generated@@252) ($generated@@160 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@154 ($generated@@245 $generated@@251 $generated@@252) ($generated@@160 $generated@@249 $generated@@250)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@254 T@T) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@253 $generated@@254 $generated@@255 $generated@@256)) ($generated@@72 $generated@@254))
 :pattern ( ($generated@@253 $generated@@254 $generated@@255 $generated@@256))
)))
(assert (= ($generated@@253 $generated@@2 $generated@@66 $generated@@69) $generated@@151))
(assert  (not ($generated@@257 $generated@@151)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@161) (= (type $generated@@259) $generated@@161)) (= ($generated@@167 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@167 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@70)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@263) $generated@@70)) (= ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@170) ($generated@@0 ($generated@@92 $generated@@262 $generated@@264))) ($generated@@246 $generated@@264 $generated@@263))
 :pattern ( ($generated@@92 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@70)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@268) $generated@@70)) (= ($generated@@154 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@170) ($generated@@0 ($generated@@92 $generated@@267 $generated@@269))) ($generated@@246 $generated@@269 $generated@@268))
 :pattern ( ($generated@@92 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@154 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@240 $generated@@270) $generated@@270)
 :pattern ( ($generated@@240 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@70) (= (type $generated@@277) $generated@@70)) (= (type $generated@@278) $generated@@170)) (= (type $generated@@279) $generated@@170)) (= (type $generated@@280) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@280)) (= ($generated@@85 ($generated@@245 $generated@@278 $generated@@279) ($generated@@160 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@85 ($generated@@245 $generated@@278 $generated@@279) ($generated@@160 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@75)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@161) (= ($generated@@159 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@161) ($generated@@159 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@170) (= (type $generated@@286) $generated@@170)) (= $generated@@284 ($generated@@245 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@159 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 19)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert ($generated@@257 $generated@@60))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@170)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@70) (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@85 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@301) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@302) $generated@@170)) (= (type $generated@@303) $generated@@70)) ($generated@@143 $generated@@300 $generated@@301)) ($generated@@275 $generated@@302 $generated@@303 $generated@@300)) ($generated@@275 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@143 $generated@@300 $generated@@301) ($generated@@275 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@305) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@307) $generated@@70)) ($generated@@143 $generated@@304 $generated@@305)) ($generated@@85 $generated@@306 $generated@@307 $generated@@304)) ($generated@@85 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@143 $generated@@304 $generated@@305) ($generated@@85 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@309) $generated@@88)) (=> (and (and ($generated@@152 $generated@@308) (and (not (= $generated@@309 $generated@@148)) (= ($generated@@153 $generated@@309) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@308 $generated@@309) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@308 $generated@@309) $generated@@151) $generated@@46 $generated@@308)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@308 $generated@@309) $generated@@151))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@87 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@90 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@87 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@92 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 20)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@87 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@92 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@92 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 21)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@87 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@92 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@92 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@354) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@352 $generated@@353 $generated@@354)) (and ($generated@@143 $generated@@353 $generated@@354) (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@73 (type $generated@@356))))
 (=> (and (and (= (type $generated@@355) $generated@@88) (= (type $generated@@356) ($generated@@72 $generated@@357))) (not ($generated@@257 $generated@@356))) (= ($generated@@94 ($generated@@92 $generated@@353 $generated@@355) $generated@@356) ($generated@@94 ($generated@@92 $generated@@354 $generated@@355) $generated@@356))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@354 $generated@@355) $generated@@356))
))))
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@90 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@87 $generated@@359 $generated@@2)) (= ($generated@@176 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@92 $generated@@358 $generated@@360))) (<= ($generated ($generated@@92 $generated@@358 $generated@@360)) ($generated@@310 $generated@@358))))
 :pattern ( ($generated@@92 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@176 $generated@@358))
)))
(assert (forall (($generated@@362 T@T) ($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@170) ($generated@@246 $generated@@364 $generated@@239)) (and (= ($generated@@295 ($generated@@361 $generated@@88 $generated@@364)) $generated@@364) ($generated@@154 ($generated@@361 $generated@@88 $generated@@364) $generated@@239)))
 :pattern ( ($generated@@246 $generated@@364 $generated@@239))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@170) ($generated@@246 $generated@@365 $generated@@147)) (and (= ($generated@@295 ($generated@@361 $generated@@88 $generated@@365)) $generated@@365) ($generated@@154 ($generated@@361 $generated@@88 $generated@@365) $generated@@147)))
 :pattern ( ($generated@@246 $generated@@365 $generated@@147))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@88) (= ($generated@@154 $generated@@366 $generated@@239)  (and ($generated@@154 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@366 $generated@@239))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@320 (type $generated@@367))))
(let (($generated@@369 ($generated@@319 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@318 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@317 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@92 ($generated@@316 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@316 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@320 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@87 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@320 (type $generated@@374))))
(let (($generated@@376 ($generated@@319 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@318 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@317 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@92 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@338 (type $generated@@378))))
(let (($generated@@380 ($generated@@337 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@336 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@335 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@92 ($generated@@334 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@334 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@338 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@87 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@338 (type $generated@@385))))
(let (($generated@@387 ($generated@@337 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@336 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@335 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@92 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@390) $generated@@70)) (= ($generated@@154 $generated@@389 ($generated@@175 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@389 $generated@@391)))) ($generated@@246 $generated@@391 $generated@@390))
 :pattern ( ($generated@@92 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@154 $generated@@389 ($generated@@175 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@393) $generated@@70)) (= (type $generated@@394) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@392 ($generated@@260 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@170) ($generated@@0 ($generated@@92 $generated@@392 $generated@@395))) ($generated@@275 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@92 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@85 $generated@@392 ($generated@@260 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@397) $generated@@70)) (= (type $generated@@398) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@396 ($generated@@265 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@170) ($generated@@0 ($generated@@92 $generated@@396 $generated@@399))) ($generated@@275 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@92 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@85 $generated@@396 ($generated@@265 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@92 ($generated@@311 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@92 ($generated@@311 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@320 (type $generated@@405))))
(let (($generated@@407 ($generated@@319 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@87 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@409) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@92 ($generated@@316 $generated@@408) ($generated@@168 ($generated@@361 $generated@@161 $generated@@409)))) (= ($generated@@92 ($generated@@403 $generated@@408) ($generated@@168 ($generated@@361 $generated@@161 $generated@@409))) ($generated@@169 ($generated@@361 $generated@@161 $generated@@409))))))
 :pattern ( ($generated@@92 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@338 (type $generated@@413))))
(let (($generated@@415 ($generated@@337 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@87 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@417) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@92 ($generated@@334 $generated@@416) ($generated@@168 ($generated@@361 $generated@@161 $generated@@417)))) (= ($generated@@92 ($generated@@411 $generated@@416) ($generated@@168 ($generated@@361 $generated@@161 $generated@@417))) ($generated@@169 ($generated@@361 $generated@@161 $generated@@417))))))
 :pattern ( ($generated@@92 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@319 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@318 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@92 ($generated@@371 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@92 ($generated@@316 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@92 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@92 ($generated@@316 $generated@@418) $generated@@422))
 :pattern ( ($generated@@92 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@92 ($generated@@371 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@337 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@336 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@92 ($generated@@382 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@92 ($generated@@334 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@92 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@92 ($generated@@334 $generated@@423) $generated@@427))
 :pattern ( ($generated@@92 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@92 ($generated@@382 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@316 $generated@@431) $generated@@435))) (and ($generated@@275 ($generated@@92 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@275 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@92 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@92 ($generated@@316 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@85 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@440) $generated@@70)) (= (type $generated@@441) $generated@@70)) (= (type $generated@@442) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@334 $generated@@439) $generated@@443))) (and ($generated@@275 ($generated@@92 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@275 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@92 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@92 ($generated@@334 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@85 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@445) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@446) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@444 $generated@@446))) (and ($generated@@143 $generated@@444 $generated@@445) ($generated@@143 $generated@@445 $generated@@446))) ($generated@@143 $generated@@444 $generated@@446))
 :pattern ( ($generated@@143 $generated@@444 $generated@@445) ($generated@@143 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@87 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@338 (type $generated@@449))))
(let (($generated@@451 ($generated@@337 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@336 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@335 $generated@@451 $generated@@450)) (= ($generated@@334 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@334 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@338 (type $generated@@452))))
(let (($generated@@454 ($generated@@337 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@336 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@335 $generated@@454 $generated@@453)) (= ($generated@@382 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@382 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@338 (type $generated@@455))))
(let (($generated@@457 ($generated@@337 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@336 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@335 $generated@@457 $generated@@456)) (= ($generated@@410 $generated@@455) ($generated@@447 $generated@@170))))))
 :pattern ( ($generated@@410 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@320 (type $generated@@458))))
(let (($generated@@460 ($generated@@319 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@318 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@317 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@170) (= (type $generated@@462) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@402 $generated@@458) ($generated@@295 ($generated@@245 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@402 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@338 (type $generated@@463))))
(let (($generated@@465 ($generated@@337 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@336 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@335 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@170) (= (type $generated@@467) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@410 $generated@@463) ($generated@@295 ($generated@@245 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@410 $generated@@463))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@76)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@T) ) (!  (=> (and (= (type $generated@@470) $generated@@76) (= (type $generated@@471) $generated@@74)) (and (= ($generated@@468 ($generated@@253 $generated@@472 $generated@@470 $generated@@471)) $generated@@470) (= ($generated@@83 ($generated@@253 $generated@@472 $generated@@470 $generated@@471)) $generated@@471)))
 :pattern ( ($generated@@253 $generated@@472 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@170) ($generated@@246 $generated@@473 $generated@@46)) (and (= ($generated@@295 ($generated@@361 $generated@@2 $generated@@473)) $generated@@473) ($generated@@154 ($generated@@361 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@170) ($generated@@246 $generated@@474 $generated@@47)) (and (= ($generated@@295 ($generated@@361 $generated@@3 $generated@@474)) $generated@@474) ($generated@@154 ($generated@@361 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@170) ($generated@@246 $generated@@475 $generated@@44)) (and (= ($generated@@295 ($generated@@361 $generated@@4 $generated@@475)) $generated@@475) ($generated@@154 ($generated@@361 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@475 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@476) 22))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@170) ($generated@@246 $generated@@477 $generated@@45)) (and (= ($generated@@295 ($generated@@361 $generated@@476 $generated@@477)) $generated@@477) ($generated@@154 ($generated@@361 $generated@@476 $generated@@477) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@477 $generated@@45))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@70) (= ($generated@@246 ($generated@@295 $generated@@478) $generated@@479) ($generated@@154 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@246 ($generated@@295 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@90 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@87 $generated@@481 $generated@@2)) (<= 0 ($generated@@310 $generated@@480))))
 :pattern ( ($generated@@310 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@290 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@289 $generated@@483)) (<= 0 ($generated@@288 $generated@@482))))
 :pattern ( ($generated@@288 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@428 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@428 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@428 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@428 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@81 ($generated@@428 $generated@@492 $generated@@493)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@494 ($generated@@436 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@436 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@70) (= (type $generated@@501) $generated@@70)) (= ($generated@@498 ($generated@@436 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@436 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@81 ($generated@@436 $generated@@502 $generated@@503)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@170) (= (type $generated@@505) $generated@@170)) (= ($generated@@281 ($generated@@245 $generated@@504 $generated@@505)) $generated@@62))
 :pattern ( ($generated@@245 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= ($generated@@506 ($generated@@160 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@160 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@70) (= (type $generated@@513) $generated@@70)) (= ($generated@@510 ($generated@@160 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@160 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@170) (= (type $generated@@515) $generated@@170)) (= ($generated@@168 ($generated@@245 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@245 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@170) (= (type $generated@@517) $generated@@170)) (= ($generated@@169 ($generated@@245 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@245 $generated@@516 $generated@@517))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@290 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@289 $generated@@170)) (= (type $generated@@525) $generated@@70)) (= (type $generated@@526) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@288 $generated@@524))) ($generated@@275 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@85 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@86 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@86 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@70)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@530 ($generated@@260 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@260 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@81 ($generated@@260 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@534 ($generated@@265 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@265 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@81 ($generated@@265 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@70)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@538 ($generated@@175 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@175 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@70)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@70) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@81 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@361 $generated@@547 ($generated@@295 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@295 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) (= ($generated@@154 $generated@@548 ($generated@@428 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@316 $generated@@548) $generated@@551))) (and ($generated@@246 ($generated@@92 ($generated@@403 $generated@@548) $generated@@551) $generated@@550) ($generated@@246 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@92 ($generated@@403 $generated@@548) $generated@@551))
 :pattern ( ($generated@@92 ($generated@@316 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@154 $generated@@548 ($generated@@428 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@553) $generated@@70)) (= (type $generated@@554) $generated@@70)) (= ($generated@@154 $generated@@552 ($generated@@436 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@334 $generated@@552) $generated@@555))) (and ($generated@@246 ($generated@@92 ($generated@@411 $generated@@552) $generated@@555) $generated@@554) ($generated@@246 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@92 ($generated@@411 $generated@@552) $generated@@555))
 :pattern ( ($generated@@92 ($generated@@334 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@154 $generated@@552 ($generated@@436 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@558) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@559) $generated@@88)) (=> (and (and (and ($generated@@152 $generated@@557) ($generated@@152 $generated@@558)) (and (not (= $generated@@559 $generated@@148)) ($generated@@154 $generated@@559 $generated@@239))) (and ($generated@@556 $generated@@557) ($generated@@143 $generated@@557 $generated@@558))) (=> (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@73 (type $generated@@561))))
 (=> (and (and (= (type $generated@@560) $generated@@88) (= (type $generated@@561) ($generated@@72 $generated@@562))) (and (not (= $generated@@560 $generated@@148)) (= $generated@@560 $generated@@559))) (= ($generated@@94 ($generated@@92 $generated@@557 $generated@@560) $generated@@561) ($generated@@94 ($generated@@92 $generated@@558 $generated@@560) $generated@@561))))
 :no-pattern (type $generated@@560)
 :no-pattern (type $generated@@561)
 :no-pattern ($generated $generated@@560)
 :no-pattern ($generated@@0 $generated@@560)
 :no-pattern ($generated $generated@@561)
 :no-pattern ($generated@@0 $generated@@561)
)) (= ($generated@@237 $generated@@557 $generated@@559) ($generated@@237 $generated@@558 $generated@@559)))))
 :pattern ( ($generated@@556 $generated@@557) ($generated@@143 $generated@@557 $generated@@558) ($generated@@237 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@170) (= (type $generated@@566) $generated@@170)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@245 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@245 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@170) (= (type $generated@@568) $generated@@170)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@245 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@245 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@170) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) $generated@@70)) ($generated@@246 $generated@@569 ($generated@@428 $generated@@570 $generated@@571))) (and (= ($generated@@295 ($generated@@361 ($generated@@318 $generated@@170 $generated@@170) $generated@@569)) $generated@@569) ($generated@@154 ($generated@@361 ($generated@@318 $generated@@170 $generated@@170) $generated@@569) ($generated@@428 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@246 $generated@@569 ($generated@@428 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@170) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) $generated@@70)) ($generated@@246 $generated@@572 ($generated@@436 $generated@@573 $generated@@574))) (and (= ($generated@@295 ($generated@@361 ($generated@@336 $generated@@170 $generated@@170) $generated@@572)) $generated@@572) ($generated@@154 ($generated@@361 ($generated@@336 $generated@@170 $generated@@170) $generated@@572) ($generated@@436 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@246 $generated@@572 ($generated@@436 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@70) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) $generated@@170)) ($generated@@246 $generated@@577 ($generated@@160 $generated@@575 $generated@@576))) (and (= ($generated@@295 ($generated@@361 $generated@@161 $generated@@577)) $generated@@577) ($generated@@154 ($generated@@361 $generated@@161 $generated@@577) ($generated@@160 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@246 $generated@@577 ($generated@@160 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@92 ($generated@@447 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@92 ($generated@@447 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@77)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@70) (= (type $generated@@583) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@582 $generated@@583)) $generated@@63) (= ($generated@@580 ($generated@@160 $generated@@582 $generated@@583)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@161) (= ($generated@@563 ($generated@@295 $generated@@584)) ($generated@@564 $generated@@584)))
 :pattern ( ($generated@@563 ($generated@@295 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@170) ($generated@@246 $generated@@585 ($generated@@86 0))) (and (= ($generated@@295 ($generated@@361 $generated@@2 $generated@@585)) $generated@@585) ($generated@@154 ($generated@@361 ($generated@@87 $generated@@170 $generated@@4) $generated@@585) ($generated@@86 0))))
 :pattern ( ($generated@@246 $generated@@585 ($generated@@86 0)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@170) (= (type $generated@@587) $generated@@70)) ($generated@@246 $generated@@586 ($generated@@260 $generated@@587))) (and (= ($generated@@295 ($generated@@361 ($generated@@87 $generated@@170 $generated@@4) $generated@@586)) $generated@@586) ($generated@@154 ($generated@@361 ($generated@@87 $generated@@170 $generated@@4) $generated@@586) ($generated@@260 $generated@@587))))
 :pattern ( ($generated@@246 $generated@@586 ($generated@@260 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@170) (= (type $generated@@589) $generated@@70)) ($generated@@246 $generated@@588 ($generated@@265 $generated@@589))) (and (= ($generated@@295 ($generated@@361 ($generated@@87 $generated@@170 $generated@@4) $generated@@588)) $generated@@588) ($generated@@154 ($generated@@361 ($generated@@87 $generated@@170 $generated@@4) $generated@@588) ($generated@@265 $generated@@589))))
 :pattern ( ($generated@@246 $generated@@588 ($generated@@265 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@170) (= (type $generated@@591) $generated@@70)) ($generated@@246 $generated@@590 ($generated@@175 $generated@@591))) (and (= ($generated@@295 ($generated@@361 ($generated@@87 $generated@@170 $generated@@2) $generated@@590)) $generated@@590) ($generated@@154 ($generated@@361 ($generated@@87 $generated@@170 $generated@@2) $generated@@590) ($generated@@175 $generated@@591))))
 :pattern ( ($generated@@246 $generated@@590 ($generated@@175 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@170) (= (type $generated@@593) $generated@@70)) ($generated@@246 $generated@@592 ($generated@@518 $generated@@593))) (and (= ($generated@@295 ($generated@@361 ($generated@@289 $generated@@170) $generated@@592)) $generated@@592) ($generated@@154 ($generated@@361 ($generated@@289 $generated@@170) $generated@@592) ($generated@@518 $generated@@593))))
 :pattern ( ($generated@@246 $generated@@592 ($generated@@518 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
 (=> (and (and (and (= (type $generated@@594) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@595) $generated@@88)) (= (type $generated@@596) ($generated@@72 $generated@@598))) ($generated@@152 ($generated@@93 $generated@@594 $generated@@595 ($generated@@95 ($generated@@92 $generated@@594 $generated@@595) $generated@@596 $generated@@597)))) ($generated@@143 $generated@@594 ($generated@@93 $generated@@594 $generated@@595 ($generated@@95 ($generated@@92 $generated@@594 $generated@@595) $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@93 $generated@@594 $generated@@595 ($generated@@95 ($generated@@92 $generated@@594 $generated@@595) $generated@@596 $generated@@597)))
)))
(assert (= ($generated@@81 $generated@@239) $generated@@64))
(assert (= ($generated@@580 $generated@@239) $generated@@68))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@580 $generated@@147) $generated@@68))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@599 ($generated@@175 $generated@@600) $generated@@601) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@599 $generated@@602)))) ($generated@@275 $generated@@602 $generated@@600 $generated@@601))
 :pattern ( ($generated@@92 $generated@@599 $generated@@602))
))))
 :pattern ( ($generated@@85 $generated@@599 ($generated@@175 $generated@@600) $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@161) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@605) (and ($generated@@159 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@70) ($generated@@85 $generated@@603 ($generated@@160 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@85 $generated@@603 ($generated@@160 $generated@@604 $generated@@606) $generated@@605))
))))) ($generated@@275 ($generated@@168 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@275 ($generated@@168 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@161) (= (type $generated@@608) $generated@@70)) (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@609) (and ($generated@@159 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@70) ($generated@@85 $generated@@607 ($generated@@160 $generated@@610 $generated@@608) $generated@@609))
 :pattern ( ($generated@@85 $generated@@607 ($generated@@160 $generated@@610 $generated@@608) $generated@@609))
))))) ($generated@@275 ($generated@@169 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@275 ($generated@@169 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@170) (= (type $generated@@612) $generated@@170)) (= ($generated@@245 ($generated@@271 $generated@@611) ($generated@@271 $generated@@612)) ($generated@@271 ($generated@@245 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@245 ($generated@@271 $generated@@611) ($generated@@271 $generated@@612)))
)))
(assert (forall (($generated@@613 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@240 $generated@@613))) ($generated@@271 ($generated@@295 ($generated@@8 $generated@@613))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@240 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ) (! (= ($generated@@295 ($generated@@271 $generated@@614)) ($generated@@271 ($generated@@295 $generated@@614)))
 :pattern ( ($generated@@295 ($generated@@271 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 ($generated@@290 (type $generated@@615))))
 (=> (and (= (type $generated@@615) ($generated@@289 $generated@@616)) (= ($generated@@288 $generated@@615) 0)) (= $generated@@615 ($generated@@287 $generated@@616))))
 :pattern ( ($generated@@288 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@618)))
 (=> (and (and (= (type $generated@@617) ($generated@@87 $generated@@620 $generated@@2)) (= (type $generated@@619) $generated@@2)) (<= 0 ($generated $generated@@619))) (= ($generated@@310 ($generated@@93 $generated@@617 $generated@@618 $generated@@619)) (+ (- ($generated@@310 $generated@@617) ($generated ($generated@@92 $generated@@617 $generated@@618))) ($generated $generated@@619)))))
 :pattern ( ($generated@@310 ($generated@@93 $generated@@617 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@622) $generated@@2)) ($generated@@85 $generated@@622 $generated@@46 $generated@@621))
 :pattern ( ($generated@@85 $generated@@622 $generated@@46 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@624) $generated@@3)) ($generated@@85 $generated@@624 $generated@@47 $generated@@623))
 :pattern ( ($generated@@85 $generated@@624 $generated@@47 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@626) $generated@@4)) ($generated@@85 $generated@@626 $generated@@44 $generated@@625))
 :pattern ( ($generated@@85 $generated@@626 $generated@@44 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@628) $generated@@476)) ($generated@@85 $generated@@628 $generated@@45 $generated@@627))
 :pattern ( ($generated@@85 $generated@@628 $generated@@45 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@630) $generated@@170)) ($generated@@85 $generated@@630 $generated@@48 $generated@@629))
 :pattern ( ($generated@@85 $generated@@630 $generated@@48 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@289 $generated@@170)) (= (type $generated@@632) $generated@@70)) (= ($generated@@154 $generated@@631 ($generated@@518 $generated@@632)) (forall (($generated@@633 Int) ) (!  (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@288 $generated@@631))) ($generated@@246 ($generated@@519 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@519 $generated@@631 $generated@@633))
))))
 :pattern ( ($generated@@154 $generated@@631 ($generated@@518 $generated@@632)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 Int) ) (!  (=> (= (type $generated@@635) ($generated@@289 $generated@@170)) (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@288 $generated@@635))) (< ($generated@@564 ($generated@@361 $generated@@161 ($generated@@519 $generated@@635 $generated@@636))) ($generated@@634 $generated@@635))))
 :pattern ( ($generated@@564 ($generated@@361 $generated@@161 ($generated@@519 $generated@@635 $generated@@636))))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) $generated@@70)) ($generated@@154 $generated@@637 ($generated@@428 $generated@@638 $generated@@639))) (and (and ($generated@@154 ($generated@@316 $generated@@637) ($generated@@260 $generated@@638)) ($generated@@154 ($generated@@371 $generated@@637) ($generated@@260 $generated@@639))) ($generated@@154 ($generated@@402 $generated@@637) ($generated@@260 ($generated@@160 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@154 $generated@@637 ($generated@@428 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) $generated@@70)) ($generated@@154 $generated@@640 ($generated@@436 $generated@@641 $generated@@642))) (and (and ($generated@@154 ($generated@@334 $generated@@640) ($generated@@265 $generated@@641)) ($generated@@154 ($generated@@382 $generated@@640) ($generated@@265 $generated@@642))) ($generated@@154 ($generated@@410 $generated@@640) ($generated@@265 ($generated@@160 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@154 $generated@@640 ($generated@@436 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@2) ($generated@@154 $generated@@643 $generated@@46))
 :pattern ( ($generated@@154 $generated@@643 $generated@@46))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@3) ($generated@@154 $generated@@644 $generated@@47))
 :pattern ( ($generated@@154 $generated@@644 $generated@@47))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@4) ($generated@@154 $generated@@645 $generated@@44))
 :pattern ( ($generated@@154 $generated@@645 $generated@@44))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@476) ($generated@@154 $generated@@646 $generated@@45))
 :pattern ( ($generated@@154 $generated@@646 $generated@@45))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@170) ($generated@@154 $generated@@647 $generated@@48))
 :pattern ( ($generated@@154 $generated@@647 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Bool)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@648) $generated@@88) (= (type $generated@@649) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@650) ($generated@@183 $generated@@88 $generated@@4))) (= (type $generated@@651) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@652) $generated@@88)) (= (type $generated@@653) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@654) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@657) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@659  (and (=> (= (ControlFlow 0 6) (- 0 8)) true) (and (=> (= (ControlFlow 0 6) (- 0 7)) (not (= $generated@@648 $generated@@148))) (=> (not (= $generated@@648 $generated@@148)) (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@237 $generated@@649 $generated@@648)))))))
(let (($generated@@660  (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@648 $generated@@148))) (=> (and (and ($generated@@85 $generated@@648 $generated@@147 $generated@@649) ($generated@@238 $generated@@649 $generated@@648)) (and ($generated@@238 $generated@@649 $generated@@648) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@237 $generated@@649 $generated@@648))))))
(let (($generated@@661  (=> (= $generated@@650 ($generated@@182 $generated@@148 $generated@@651 $generated@@60 false)) (=> (and (and (not (= $generated@@652 $generated@@148)) (and ($generated@@154 $generated@@652 $generated@@239) ($generated@@85 $generated@@652 $generated@@239 $generated@@651))) (and ($generated@@152 $generated@@653) ($generated@@556 $generated@@653))) (=> (and (and (and (not (= $generated@@648 $generated@@148)) (and ($generated@@154 $generated@@648 $generated@@239) ($generated@@85 $generated@@648 $generated@@239 $generated@@653))) ($generated@@238 $generated@@653 $generated@@648)) (and (and ($generated@@237 $generated@@653 $generated@@648) (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@651 $generated@@648) $generated@@60)))) (and (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@88) (=> (and (not (= $generated@@662 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@651 $generated@@662) $generated@@60))) (= ($generated@@92 $generated@@653 $generated@@662) ($generated@@92 $generated@@651 $generated@@662))))
 :pattern ( ($generated@@92 $generated@@653 $generated@@662))
)) ($generated@@143 $generated@@651 $generated@@653)))) (and (=> (= (ControlFlow 0 9) (- 0 17)) true) (and (=> (= (ControlFlow 0 9) (- 0 16)) (not (= $generated@@648 $generated@@148))) (=> (not (= $generated@@648 $generated@@148)) (and (=> (= (ControlFlow 0 9) (- 0 15)) ($generated@@237 $generated@@653 $generated@@648)) (=> ($generated@@237 $generated@@653 $generated@@648) (=> (and (and ($generated@@152 $generated@@654) ($generated@@556 $generated@@654)) (and (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@88) (=> (and (not (= $generated@@663 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@653 $generated@@663) $generated@@60))) (= ($generated@@92 $generated@@654 $generated@@663) ($generated@@92 $generated@@653 $generated@@663))))
 :pattern ( ($generated@@92 $generated@@654 $generated@@663))
)) ($generated@@143 $generated@@653 $generated@@654))) (and (=> (= (ControlFlow 0 9) (- 0 14)) true) (and (=> (= (ControlFlow 0 9) (- 0 13)) (not (= $generated@@648 $generated@@148))) (=> (not (= $generated@@648 $generated@@148)) (and (=> (= (ControlFlow 0 9) (- 0 12)) ($generated@@0 ($generated@@181 $generated@@650 $generated@@648 $generated@@151))) (=> ($generated@@0 ($generated@@181 $generated@@650 $generated@@648 $generated@@151)) (and (=> (= (ControlFlow 0 9) (- 0 11)) true) (and (=> (= (ControlFlow 0 9) (- 0 10)) (not (= $generated@@648 $generated@@148))) (=> (not (= $generated@@648 $generated@@148)) (=> (= $generated@@655 (+ ($generated ($generated@@94 ($generated@@92 $generated@@654 $generated@@648) $generated@@151)) 1)) (=> (and (= $generated@@649 ($generated@@93 $generated@@654 $generated@@648 ($generated@@95 ($generated@@92 $generated@@654 $generated@@648) $generated@@151 ($generated@@8 $generated@@655)))) ($generated@@152 $generated@@649)) (and (=> (= (ControlFlow 0 9) 2) $generated@@660) (=> (= (ControlFlow 0 9) 6) $generated@@659)))))))))))))))))))))))
(let (($generated@@664  (=> (and ($generated@@152 $generated@@651) ($generated@@556 $generated@@651)) (=> (and (and (=> $generated@@656 (and ($generated@@154 $generated@@657 $generated@@239) ($generated@@85 $generated@@657 $generated@@239 $generated@@651))) true) (and (= 1 $generated@@658) (= (ControlFlow 0 18) 9))) $generated@@661))))
$generated@@664)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 (Int) Int)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U) Bool)
(declare-fun $generated@@197 (T@T T@U T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@231 (T@T) T@U)
(declare-fun $generated@@232 (T@U) Int)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@T T@T) T@U)
(declare-fun $generated@@262 (T@T T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@279 (T@T T@T) T@U)
(declare-fun $generated@@280 (T@T T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@296 (T@U T@U) Bool)
(declare-fun $generated@@305 (T@T T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@T) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@420 () T@T)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@463 (T@U Int) T@U)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Bool)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U T@U T@U) T@U)
(declare-fun $generated@@525 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@526 (T@T T@T) T@T)
(declare-fun $generated@@527 (T@T) T@T)
(declare-fun $generated@@528 (T@T) T@T)
(declare-fun $generated@@529 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U T@U) Int)
(declare-fun $generated@@641 (T@U T@U) Bool)
(declare-fun $generated@@644 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@66) $generated@@76)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert (= (type $generated@@183) $generated@@70))
(assert  (=> true (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@186) $generated@@88)) (or ($generated@@182 $generated@@185 $generated@@186) (and ($generated@@152 $generated@@185) (and (not (= $generated@@186 $generated@@148)) (and ($generated@@154 $generated@@186 $generated@@183) ($generated@@85 $generated@@186 $generated@@183 $generated@@185)))))) (and (=> ($generated@@181 $generated@@185 $generated@@186) (<= ($generated@@184 0) ($generated ($generated@@94 ($generated@@92 $generated@@185 $generated@@186) $generated@@151)))) (=> (= ($generated ($generated@@94 ($generated@@92 $generated@@185 $generated@@186) $generated@@151)) ($generated@@184 8)) ($generated@@181 $generated@@185 $generated@@186))))
 :pattern ( ($generated@@181 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (= (type $generated@@187) $generated@@88) (= (type $generated@@188) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@187 $generated@@183 $generated@@188) ($generated@@85 $generated@@187 $generated@@147 $generated@@188)))
 :pattern ( ($generated@@85 $generated@@187 $generated@@183 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= (type ($generated@@189 $generated@@191 $generated@@192)) $generated@@161)
 :pattern ( ($generated@@189 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (and (= (type $generated@@193) $generated@@70) (= (type $generated@@194) $generated@@70)) (= (type $generated@@195) $generated@@170)) (= (type $generated@@196) $generated@@170)) (= ($generated@@154 ($generated@@189 $generated@@195 $generated@@196) ($generated@@160 $generated@@193 $generated@@194))  (and ($generated@@190 $generated@@195 $generated@@193) ($generated@@190 $generated@@196 $generated@@194))))
 :pattern ( ($generated@@154 ($generated@@189 $generated@@195 $generated@@196) ($generated@@160 $generated@@193 $generated@@194)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= (type ($generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@72 $generated@@198))
 :pattern ( ($generated@@197 $generated@@198 $generated@@199 $generated@@200))
)))
(assert (= ($generated@@197 $generated@@2 $generated@@66 $generated@@69) $generated@@151))
(assert  (not ($generated@@201 $generated@@151)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@161) (= (type $generated@@203) $generated@@161)) (= ($generated@@167 $generated@@202 $generated@@203) (= $generated@@202 $generated@@203)))
 :pattern ( ($generated@@167 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@70)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@207) $generated@@70)) (= ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@170) ($generated@@0 ($generated@@92 $generated@@206 $generated@@208))) ($generated@@190 $generated@@208 $generated@@207))
 :pattern ( ($generated@@92 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@154 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (= (type ($generated@@209 $generated@@210)) $generated@@70)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (= (type $generated@@211) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@212) $generated@@70)) (= ($generated@@154 $generated@@211 ($generated@@209 $generated@@212)) (forall (($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@170) ($generated@@0 ($generated@@92 $generated@@211 $generated@@213))) ($generated@@190 $generated@@213 $generated@@212))
 :pattern ( ($generated@@92 $generated@@211 $generated@@213))
))))
 :pattern ( ($generated@@154 $generated@@211 ($generated@@209 $generated@@212)))
)))
(assert (forall (($generated@@214 Int) ) (! (= ($generated@@184 $generated@@214) $generated@@214)
 :pattern ( ($generated@@184 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (let (($generated@@217 (type $generated@@216)))
(= (type ($generated@@215 $generated@@216)) $generated@@217))
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (= ($generated@@215 $generated@@218) $generated@@218)
 :pattern ( ($generated@@215 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@220) $generated@@70) (= (type $generated@@221) $generated@@70)) (= (type $generated@@222) $generated@@170)) (= (type $generated@@223) $generated@@170)) (= (type $generated@@224) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@224)) (= ($generated@@85 ($generated@@189 $generated@@222 $generated@@223) ($generated@@160 $generated@@220 $generated@@221) $generated@@224)  (and ($generated@@219 $generated@@222 $generated@@220 $generated@@224) ($generated@@219 $generated@@223 $generated@@221 $generated@@224))))
 :pattern ( ($generated@@85 ($generated@@189 $generated@@222 $generated@@223) ($generated@@160 $generated@@220 $generated@@221) $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@75)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@161) (= ($generated@@159 $generated@@227) (= ($generated@@225 $generated@@227) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@161) ($generated@@159 $generated@@228)) (exists (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (and (and (= (type $generated@@229) $generated@@170) (= (type $generated@@230) $generated@@170)) (= $generated@@228 ($generated@@189 $generated@@229 $generated@@230)))
 :no-pattern (type $generated@@229)
 :no-pattern (type $generated@@230)
 :no-pattern ($generated $generated@@229)
 :no-pattern ($generated@@0 $generated@@229)
 :no-pattern ($generated $generated@@230)
 :no-pattern ($generated@@0 $generated@@230)
)))
 :pattern ( ($generated@@159 $generated@@228))
)))
(assert  (and (and (forall (($generated@@235 T@T) ) (= ($generated@@1 ($generated@@233 $generated@@235)) 18)) (forall (($generated@@236 T@T) ) (! (= ($generated@@234 ($generated@@233 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
))) (forall (($generated@@237 T@T) ) (! (= (type ($generated@@231 $generated@@237)) ($generated@@233 $generated@@237))
 :pattern ( ($generated@@231 $generated@@237))
))))
(assert (forall (($generated@@238 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@238)) 0)
 :pattern ( ($generated@@231 $generated@@238))
)))
(assert ($generated@@201 $generated@@60))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@170)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@70) (= (type $generated@@243) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@219 ($generated@@239 $generated@@241) $generated@@242 $generated@@243) ($generated@@85 $generated@@241 $generated@@242 $generated@@243)))
 :pattern ( ($generated@@219 ($generated@@239 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@245) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@246) $generated@@170)) (= (type $generated@@247) $generated@@70)) ($generated@@143 $generated@@244 $generated@@245)) ($generated@@219 $generated@@246 $generated@@247 $generated@@244)) ($generated@@219 $generated@@246 $generated@@247 $generated@@245))
 :pattern ( ($generated@@143 $generated@@244 $generated@@245) ($generated@@219 $generated@@246 $generated@@247 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@248) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@249) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@251) $generated@@70)) ($generated@@143 $generated@@248 $generated@@249)) ($generated@@85 $generated@@250 $generated@@251 $generated@@248)) ($generated@@85 $generated@@250 $generated@@251 $generated@@249))
 :pattern ( ($generated@@143 $generated@@248 $generated@@249) ($generated@@85 $generated@@250 $generated@@251 $generated@@248))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@253) $generated@@88)) (=> (and (and ($generated@@152 $generated@@252) (and (not (= $generated@@253 $generated@@148)) (= ($generated@@153 $generated@@253) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@252 $generated@@253) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@252 $generated@@253) $generated@@151) $generated@@46 $generated@@252)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@252 $generated@@253) $generated@@151))
)))
(assert (forall (($generated@@256 T@T) ) (! (= (type ($generated@@255 $generated@@256)) ($generated@@87 $generated@@256 $generated@@2))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@90 (type $generated@@257))))
 (=> (= (type $generated@@257) ($generated@@87 $generated@@258 $generated@@2)) (and (= (= ($generated@@254 $generated@@257) 0) (= $generated@@257 ($generated@@255 $generated@@258))) (=> (not (= ($generated@@254 $generated@@257) 0)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) (< 0 ($generated ($generated@@92 $generated@@257 $generated@@259))))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert  (and (and (and (and (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@265 $generated@@266)) 19)) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@267 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@262 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@262 $generated@@269 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@262 $generated@@269 $generated@@270))
))) (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@263 (type $generated@@271))))
(= (type ($generated@@260 $generated@@271)) ($generated@@87 $generated@@272 $generated@@4)))
 :pattern ( ($generated@@260 $generated@@271))
))) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= (type ($generated@@261 $generated@@273 $generated@@274)) ($generated@@262 $generated@@273 $generated@@274))
 :pattern ( ($generated@@261 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@T) ) (! (let (($generated@@277 (type $generated@@275)))
 (not ($generated@@0 ($generated@@92 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275))))
 :pattern ( (let (($generated@@277 (type $generated@@275)))
($generated@@92 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275)))
)))
(assert  (and (and (and (and (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@283 $generated@@284)) 20)) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@285 $generated@@286)) $generated@@285)
 :pattern ( ($generated@@280 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@280 $generated@@287 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@280 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@281 (type $generated@@289))))
(= (type ($generated@@278 $generated@@289)) ($generated@@87 $generated@@290 $generated@@4)))
 :pattern ( ($generated@@278 $generated@@289))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= (type ($generated@@279 $generated@@291 $generated@@292)) ($generated@@280 $generated@@291 $generated@@292))
 :pattern ( ($generated@@279 $generated@@291 $generated@@292))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@T) ) (! (let (($generated@@295 (type $generated@@293)))
 (not ($generated@@0 ($generated@@92 ($generated@@278 ($generated@@279 $generated@@295 $generated@@294)) $generated@@293))))
 :pattern ( (let (($generated@@295 (type $generated@@293)))
($generated@@92 ($generated@@278 ($generated@@279 $generated@@295 $generated@@294)) $generated@@293)))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (= (type $generated@@297) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@298) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@296 $generated@@297 $generated@@298)) (and ($generated@@143 $generated@@297 $generated@@298) (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@73 (type $generated@@300))))
 (=> (and (and (= (type $generated@@299) $generated@@88) (= (type $generated@@300) ($generated@@72 $generated@@301))) (not ($generated@@201 $generated@@300))) (= ($generated@@94 ($generated@@92 $generated@@297 $generated@@299) $generated@@300) ($generated@@94 ($generated@@92 $generated@@298 $generated@@299) $generated@@300))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@298 $generated@@299) $generated@@300))
))))
 :pattern ( ($generated@@296 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@90 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@87 $generated@@303 $generated@@2)) (= ($generated@@176 $generated@@302) (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@303) (and (<= 0 ($generated ($generated@@92 $generated@@302 $generated@@304))) (<= ($generated ($generated@@92 $generated@@302 $generated@@304)) ($generated@@254 $generated@@302))))
 :pattern ( ($generated@@92 $generated@@302 $generated@@304))
)))))
 :pattern ( ($generated@@176 $generated@@302))
)))
(assert (forall (($generated@@306 T@T) ($generated@@307 T@U) ) (! (= (type ($generated@@305 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@305 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@170) ($generated@@190 $generated@@308 $generated@@183)) (and (= ($generated@@239 ($generated@@305 $generated@@88 $generated@@308)) $generated@@308) ($generated@@154 ($generated@@305 $generated@@88 $generated@@308) $generated@@183)))
 :pattern ( ($generated@@190 $generated@@308 $generated@@183))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@170) ($generated@@190 $generated@@309 $generated@@147)) (and (= ($generated@@239 ($generated@@305 $generated@@88 $generated@@309)) $generated@@309) ($generated@@154 ($generated@@305 $generated@@88 $generated@@309) $generated@@147)))
 :pattern ( ($generated@@190 $generated@@309 $generated@@147))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@88) (= ($generated@@154 $generated@@310 $generated@@183)  (and ($generated@@154 $generated@@310 $generated@@147) (not (= $generated@@310 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@310 $generated@@183))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@264 (type $generated@@311))))
(let (($generated@@313 ($generated@@263 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@262 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@261 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@92 ($generated@@260 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@260 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@264 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@87 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@264 (type $generated@@318))))
(let (($generated@@320 ($generated@@263 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@262 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@261 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@92 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@282 (type $generated@@322))))
(let (($generated@@324 ($generated@@281 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@280 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@279 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@92 ($generated@@278 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@278 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@282 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@87 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@282 (type $generated@@329))))
(let (($generated@@331 ($generated@@281 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@280 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@279 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@92 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@334) $generated@@70)) (= ($generated@@154 $generated@@333 ($generated@@175 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@333 $generated@@335)))) ($generated@@190 $generated@@335 $generated@@334))
 :pattern ( ($generated@@92 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@154 $generated@@333 ($generated@@175 $generated@@334)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@337) $generated@@70)) (= (type $generated@@338) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@336 ($generated@@204 $generated@@337) $generated@@338) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@170) ($generated@@0 ($generated@@92 $generated@@336 $generated@@339))) ($generated@@219 $generated@@339 $generated@@337 $generated@@338))
 :pattern ( ($generated@@92 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@85 $generated@@336 ($generated@@204 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@341) $generated@@70)) (= (type $generated@@342) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@340 ($generated@@209 $generated@@341) $generated@@342) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@170) ($generated@@0 ($generated@@92 $generated@@340 $generated@@343))) ($generated@@219 $generated@@343 $generated@@341 $generated@@342))
 :pattern ( ($generated@@92 $generated@@340 $generated@@343))
))))
 :pattern ( ($generated@@85 $generated@@340 ($generated@@209 $generated@@341) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 (type $generated@@344)))
(= ($generated ($generated@@92 ($generated@@255 $generated@@345) $generated@@344)) 0))
 :pattern ( (let (($generated@@345 (type $generated@@344)))
($generated@@92 ($generated@@255 $generated@@345) $generated@@344)))
)))
(assert  (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@348)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@346 $generated@@348))
)) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@264 (type $generated@@349))))
(let (($generated@@351 ($generated@@263 (type $generated@@349))))
(= (type ($generated@@347 $generated@@349)) ($generated@@87 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@347 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@262 $generated@@170 $generated@@170)) (= (type $generated@@353) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@346 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@92 ($generated@@260 $generated@@352) ($generated@@168 ($generated@@305 $generated@@161 $generated@@353)))) (= ($generated@@92 ($generated@@347 $generated@@352) ($generated@@168 ($generated@@305 $generated@@161 $generated@@353))) ($generated@@169 ($generated@@305 $generated@@161 $generated@@353))))))
 :pattern ( ($generated@@92 ($generated@@346 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@282 (type $generated@@357))))
(let (($generated@@359 ($generated@@281 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@87 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@280 $generated@@170 $generated@@170)) (= (type $generated@@361) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@92 ($generated@@278 $generated@@360) ($generated@@168 ($generated@@305 $generated@@161 $generated@@361)))) (= ($generated@@92 ($generated@@355 $generated@@360) ($generated@@168 ($generated@@305 $generated@@161 $generated@@361))) ($generated@@169 ($generated@@305 $generated@@161 $generated@@361))))))
 :pattern ( ($generated@@92 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@263 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@262 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@92 ($generated@@315 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@92 ($generated@@260 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@92 ($generated@@347 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@92 ($generated@@260 $generated@@362) $generated@@366))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@92 ($generated@@315 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@281 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@280 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@92 ($generated@@326 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@92 ($generated@@278 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@92 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@92 ($generated@@278 $generated@@367) $generated@@371))
 :pattern ( ($generated@@92 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@92 ($generated@@326 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@70)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@262 $generated@@170 $generated@@170)) (= (type $generated@@376) $generated@@70)) (= (type $generated@@377) $generated@@70)) (= (type $generated@@378) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@260 $generated@@375) $generated@@379))) (and ($generated@@219 ($generated@@92 ($generated@@347 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@219 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@375) $generated@@379))
 :pattern ( ($generated@@92 ($generated@@260 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@85 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@70)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@280 $generated@@170 $generated@@170)) (= (type $generated@@384) $generated@@70)) (= (type $generated@@385) $generated@@70)) (= (type $generated@@386) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@278 $generated@@383) $generated@@387))) (and ($generated@@219 ($generated@@92 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@219 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@92 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@92 ($generated@@278 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@85 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@388) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@389) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@390) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@388 $generated@@390))) (and ($generated@@143 $generated@@388 $generated@@389) ($generated@@143 $generated@@389 $generated@@390))) ($generated@@143 $generated@@388 $generated@@390))
 :pattern ( ($generated@@143 $generated@@388 $generated@@389) ($generated@@143 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@T) ) (! (= (type ($generated@@391 $generated@@392)) ($generated@@87 $generated@@392 $generated@@4))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@282 (type $generated@@393))))
(let (($generated@@395 ($generated@@281 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@280 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@279 $generated@@395 $generated@@394)) (= ($generated@@278 $generated@@393) ($generated@@391 $generated@@395))))))
 :pattern ( ($generated@@278 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@282 (type $generated@@396))))
(let (($generated@@398 ($generated@@281 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@280 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@279 $generated@@398 $generated@@397)) (= ($generated@@326 $generated@@396) ($generated@@391 $generated@@397))))))
 :pattern ( ($generated@@326 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@282 (type $generated@@399))))
(let (($generated@@401 ($generated@@281 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@280 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@279 $generated@@401 $generated@@400)) (= ($generated@@354 $generated@@399) ($generated@@391 $generated@@170))))))
 :pattern ( ($generated@@354 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@264 (type $generated@@402))))
(let (($generated@@404 ($generated@@263 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@262 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@261 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@170) (= (type $generated@@406) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@346 $generated@@402) ($generated@@239 ($generated@@189 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@346 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@282 (type $generated@@407))))
(let (($generated@@409 ($generated@@281 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@280 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@279 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@170) (= (type $generated@@411) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@354 $generated@@407) ($generated@@239 ($generated@@189 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@354 $generated@@407))
)))
(assert (forall (($generated@@413 T@U) ) (! (= (type ($generated@@412 $generated@@413)) $generated@@76)
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@T) ) (!  (=> (and (= (type $generated@@414) $generated@@76) (= (type $generated@@415) $generated@@74)) (and (= ($generated@@412 ($generated@@197 $generated@@416 $generated@@414 $generated@@415)) $generated@@414) (= ($generated@@83 ($generated@@197 $generated@@416 $generated@@414 $generated@@415)) $generated@@415)))
 :pattern ( ($generated@@197 $generated@@416 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@170) ($generated@@190 $generated@@417 $generated@@46)) (and (= ($generated@@239 ($generated@@305 $generated@@2 $generated@@417)) $generated@@417) ($generated@@154 ($generated@@305 $generated@@2 $generated@@417) $generated@@46)))
 :pattern ( ($generated@@190 $generated@@417 $generated@@46))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@170) ($generated@@190 $generated@@418 $generated@@47)) (and (= ($generated@@239 ($generated@@305 $generated@@3 $generated@@418)) $generated@@418) ($generated@@154 ($generated@@305 $generated@@3 $generated@@418) $generated@@47)))
 :pattern ( ($generated@@190 $generated@@418 $generated@@47))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@170) ($generated@@190 $generated@@419 $generated@@44)) (and (= ($generated@@239 ($generated@@305 $generated@@4 $generated@@419)) $generated@@419) ($generated@@154 ($generated@@305 $generated@@4 $generated@@419) $generated@@44)))
 :pattern ( ($generated@@190 $generated@@419 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@420) 21))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@170) ($generated@@190 $generated@@421 $generated@@45)) (and (= ($generated@@239 ($generated@@305 $generated@@420 $generated@@421)) $generated@@421) ($generated@@154 ($generated@@305 $generated@@420 $generated@@421) $generated@@45)))
 :pattern ( ($generated@@190 $generated@@421 $generated@@45))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@70) (= ($generated@@190 ($generated@@239 $generated@@422) $generated@@423) ($generated@@154 $generated@@422 $generated@@423)))
 :pattern ( ($generated@@190 ($generated@@239 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@90 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@87 $generated@@425 $generated@@2)) (<= 0 ($generated@@254 $generated@@424))))
 :pattern ( ($generated@@254 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@234 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@233 $generated@@427)) (<= 0 ($generated@@232 $generated@@426))))
 :pattern ( ($generated@@232 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@70) (= (type $generated@@431) $generated@@70)) (= ($generated@@428 ($generated@@372 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@372 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@70) (= (type $generated@@435) $generated@@70)) (= ($generated@@432 ($generated@@372 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@372 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@70) (= (type $generated@@437) $generated@@70)) (= ($generated@@81 ($generated@@372 $generated@@436 $generated@@437)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@70)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@70) (= (type $generated@@441) $generated@@70)) (= ($generated@@438 ($generated@@380 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@380 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@70)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@70) (= (type $generated@@445) $generated@@70)) (= ($generated@@442 ($generated@@380 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@380 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@70) (= (type $generated@@447) $generated@@70)) (= ($generated@@81 ($generated@@380 $generated@@446 $generated@@447)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@170) (= (type $generated@@449) $generated@@170)) (= ($generated@@225 ($generated@@189 $generated@@448 $generated@@449)) $generated@@62))
 :pattern ( ($generated@@189 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@70)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@70) (= (type $generated@@453) $generated@@70)) (= ($generated@@450 ($generated@@160 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@160 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@70)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@70) (= (type $generated@@457) $generated@@70)) (= ($generated@@454 ($generated@@160 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@160 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@170) (= (type $generated@@459) $generated@@170)) (= ($generated@@168 ($generated@@189 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@189 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@170) (= (type $generated@@461) $generated@@170)) (= ($generated@@169 ($generated@@189 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@189 $generated@@460 $generated@@461))
)))
(assert  (and (forall (($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@464)) $generated@@70)
 :pattern ( ($generated@@462 $generated@@464))
)) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (! (let (($generated@@467 ($generated@@234 (type $generated@@465))))
(= (type ($generated@@463 $generated@@465 $generated@@466)) $generated@@467))
 :pattern ( ($generated@@463 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@233 $generated@@170)) (= (type $generated@@469) $generated@@70)) (= (type $generated@@470) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@468 ($generated@@462 $generated@@469) $generated@@470) (forall (($generated@@471 Int) ) (!  (=> (and (<= 0 $generated@@471) (< $generated@@471 ($generated@@232 $generated@@468))) ($generated@@219 ($generated@@463 $generated@@468 $generated@@471) $generated@@469 $generated@@470))
 :pattern ( ($generated@@463 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@85 $generated@@468 ($generated@@462 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 Int) ) (! (= ($generated@@472 ($generated@@86 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@86 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@70) (= ($generated@@474 ($generated@@204 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@204 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@70) (= ($generated@@81 ($generated@@204 $generated@@477)) $generated@@54))
 :pattern ( ($generated@@204 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@70) (= ($generated@@478 ($generated@@209 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@209 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@70) (= ($generated@@81 ($generated@@209 $generated@@481)) $generated@@55))
 :pattern ( ($generated@@209 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@70) (= ($generated@@482 ($generated@@175 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@175 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@485)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@70)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@70) (= ($generated@@486 ($generated@@462 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@462 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@70) (= ($generated@@81 ($generated@@462 $generated@@489)) $generated@@57))
 :pattern ( ($generated@@462 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(= ($generated@@305 $generated@@491 ($generated@@239 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@239 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@262 $generated@@170 $generated@@170)) (= (type $generated@@493) $generated@@70)) (= (type $generated@@494) $generated@@70)) (= ($generated@@154 $generated@@492 ($generated@@372 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@260 $generated@@492) $generated@@495))) (and ($generated@@190 ($generated@@92 ($generated@@347 $generated@@492) $generated@@495) $generated@@494) ($generated@@190 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@492) $generated@@495))
 :pattern ( ($generated@@92 ($generated@@260 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@154 $generated@@492 ($generated@@372 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@280 $generated@@170 $generated@@170)) (= (type $generated@@497) $generated@@70)) (= (type $generated@@498) $generated@@70)) (= ($generated@@154 $generated@@496 ($generated@@380 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@278 $generated@@496) $generated@@499))) (and ($generated@@190 ($generated@@92 ($generated@@355 $generated@@496) $generated@@499) $generated@@498) ($generated@@190 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@92 ($generated@@355 $generated@@496) $generated@@499))
 :pattern ( ($generated@@92 ($generated@@278 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@154 $generated@@496 ($generated@@380 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@502) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@503) $generated@@88)) (=> (and (and (and ($generated@@152 $generated@@501) ($generated@@152 $generated@@502)) (and (not (= $generated@@503 $generated@@148)) ($generated@@154 $generated@@503 $generated@@183))) (and ($generated@@500 $generated@@501) ($generated@@143 $generated@@501 $generated@@502))) (=> (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@73 (type $generated@@505))))
 (=> (and (and (= (type $generated@@504) $generated@@88) (= (type $generated@@505) ($generated@@72 $generated@@506))) (and (not (= $generated@@504 $generated@@148)) (= $generated@@504 $generated@@503))) (= ($generated@@94 ($generated@@92 $generated@@501 $generated@@504) $generated@@505) ($generated@@94 ($generated@@92 $generated@@502 $generated@@504) $generated@@505))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
)) (= ($generated@@181 $generated@@501 $generated@@503) ($generated@@181 $generated@@502 $generated@@503)))))
 :pattern ( ($generated@@500 $generated@@501) ($generated@@143 $generated@@501 $generated@@502) ($generated@@181 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@170) (= (type $generated@@510) $generated@@170)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@189 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@189 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@170) (= (type $generated@@512) $generated@@170)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@189 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@189 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@170) (= (type $generated@@514) $generated@@70)) (= (type $generated@@515) $generated@@70)) ($generated@@190 $generated@@513 ($generated@@372 $generated@@514 $generated@@515))) (and (= ($generated@@239 ($generated@@305 ($generated@@262 $generated@@170 $generated@@170) $generated@@513)) $generated@@513) ($generated@@154 ($generated@@305 ($generated@@262 $generated@@170 $generated@@170) $generated@@513) ($generated@@372 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@190 $generated@@513 ($generated@@372 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@170) (= (type $generated@@517) $generated@@70)) (= (type $generated@@518) $generated@@70)) ($generated@@190 $generated@@516 ($generated@@380 $generated@@517 $generated@@518))) (and (= ($generated@@239 ($generated@@305 ($generated@@280 $generated@@170 $generated@@170) $generated@@516)) $generated@@516) ($generated@@154 ($generated@@305 ($generated@@280 $generated@@170 $generated@@170) $generated@@516) ($generated@@380 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@190 $generated@@516 ($generated@@380 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@70) (= (type $generated@@520) $generated@@70)) (= (type $generated@@521) $generated@@170)) ($generated@@190 $generated@@521 ($generated@@160 $generated@@519 $generated@@520))) (and (= ($generated@@239 ($generated@@305 $generated@@161 $generated@@521)) $generated@@521) ($generated@@154 ($generated@@305 $generated@@161 $generated@@521) ($generated@@160 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@190 $generated@@521 ($generated@@160 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@92 ($generated@@391 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@92 ($generated@@391 $generated@@523) $generated@@522)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@530 T@T) ($generated@@531 T@T) ) (= ($generated@@1 ($generated@@526 $generated@@530 $generated@@531)) 22)) (forall (($generated@@532 T@T) ($generated@@533 T@T) ) (! (= ($generated@@527 ($generated@@526 $generated@@532 $generated@@533)) $generated@@532)
 :pattern ( ($generated@@526 $generated@@532 $generated@@533))
))) (forall (($generated@@534 T@T) ($generated@@535 T@T) ) (! (= ($generated@@528 ($generated@@526 $generated@@534 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@526 $generated@@534 $generated@@535))
))) (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@528 (type $generated@@536))))
(= (type ($generated@@524 $generated@@536 $generated@@537 $generated@@538)) $generated@@539))
 :pattern ( ($generated@@524 $generated@@536 $generated@@537 $generated@@538))
))) (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(let (($generated@@545 (type $generated@@541)))
(= (type ($generated@@529 $generated@@540 $generated@@541 $generated@@542 $generated@@543)) ($generated@@526 $generated@@545 $generated@@544))))
 :pattern ( ($generated@@529 $generated@@540 $generated@@541 $generated@@542 $generated@@543))
))) (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (! (let (($generated@@550 ($generated@@528 (type $generated@@546))))
 (=> (= (type $generated@@549) $generated@@550) (= ($generated@@524 ($generated@@529 $generated@@546 $generated@@547 $generated@@548 $generated@@549) $generated@@547 $generated@@548) $generated@@549)))
 :weight 0
))) (and (and (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (or (= $generated@@553 $generated@@555) (= ($generated@@524 ($generated@@529 $generated@@552 $generated@@553 $generated@@554 $generated@@551) $generated@@555 $generated@@556) ($generated@@524 $generated@@552 $generated@@555 $generated@@556)))
 :weight 0
)) (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (or (= $generated@@560 $generated@@562) (= ($generated@@524 ($generated@@529 $generated@@558 $generated@@559 $generated@@560 $generated@@557) $generated@@561 $generated@@562) ($generated@@524 $generated@@558 $generated@@561 $generated@@562)))
 :weight 0
))) (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (or true (= ($generated@@524 ($generated@@529 $generated@@564 $generated@@565 $generated@@566 $generated@@563) $generated@@567 $generated@@568) ($generated@@524 $generated@@564 $generated@@567 $generated@@568)))
 :weight 0
)))) (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (= (type ($generated@@525 $generated@@569 $generated@@570 $generated@@571 $generated@@572)) ($generated@@526 $generated@@88 $generated@@4))
 :pattern ( ($generated@@525 $generated@@569 $generated@@570 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@73 (type $generated@@578))))
 (=> (and (and (and (and (and (= (type $generated@@573) $generated@@88) (= (type $generated@@574) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@575) ($generated@@72 $generated@@4))) (= (type $generated@@576) $generated@@88)) (= (type $generated@@577) $generated@@88)) (= (type $generated@@578) ($generated@@72 $generated@@579))) (= ($generated@@0 ($generated@@524 ($generated@@525 $generated@@573 $generated@@574 $generated@@575 $generated@@576) $generated@@577 $generated@@578))  (=> (and (not (= $generated@@577 $generated@@573)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@574 $generated@@577) $generated@@575))) (= $generated@@577 $generated@@576)))))
 :pattern ( ($generated@@524 ($generated@@525 $generated@@573 $generated@@574 $generated@@575 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@77)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@70) (= (type $generated@@583) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@582 $generated@@583)) $generated@@63) (= ($generated@@580 ($generated@@160 $generated@@582 $generated@@583)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@586) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@587) $generated@@88)) (=> (and (and (and ($generated@@152 $generated@@585) ($generated@@152 $generated@@586)) (and (not (= $generated@@587 $generated@@148)) ($generated@@154 $generated@@587 $generated@@183))) (and ($generated@@500 $generated@@585) ($generated@@143 $generated@@585 $generated@@586))) (=> (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@73 (type $generated@@589))))
 (=> (and (and (= (type $generated@@588) $generated@@88) (= (type $generated@@589) ($generated@@72 $generated@@590))) (and (not (= $generated@@588 $generated@@148)) (= $generated@@588 $generated@@587))) (= ($generated@@94 ($generated@@92 $generated@@585 $generated@@588) $generated@@589) ($generated@@94 ($generated@@92 $generated@@586 $generated@@588) $generated@@589))))
 :no-pattern (type $generated@@588)
 :no-pattern (type $generated@@589)
 :no-pattern ($generated $generated@@588)
 :no-pattern ($generated@@0 $generated@@588)
 :no-pattern ($generated $generated@@589)
 :no-pattern ($generated@@0 $generated@@589)
)) (= ($generated@@584 $generated@@585 $generated@@587) ($generated@@584 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@500 $generated@@585) ($generated@@143 $generated@@585 $generated@@586) ($generated@@584 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@161) (= ($generated@@507 ($generated@@239 $generated@@591)) ($generated@@508 $generated@@591)))
 :pattern ( ($generated@@507 ($generated@@239 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@170) ($generated@@190 $generated@@592 ($generated@@86 0))) (and (= ($generated@@239 ($generated@@305 $generated@@2 $generated@@592)) $generated@@592) ($generated@@154 ($generated@@305 ($generated@@87 $generated@@170 $generated@@4) $generated@@592) ($generated@@86 0))))
 :pattern ( ($generated@@190 $generated@@592 ($generated@@86 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@170) (= (type $generated@@594) $generated@@70)) ($generated@@190 $generated@@593 ($generated@@204 $generated@@594))) (and (= ($generated@@239 ($generated@@305 ($generated@@87 $generated@@170 $generated@@4) $generated@@593)) $generated@@593) ($generated@@154 ($generated@@305 ($generated@@87 $generated@@170 $generated@@4) $generated@@593) ($generated@@204 $generated@@594))))
 :pattern ( ($generated@@190 $generated@@593 ($generated@@204 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@170) (= (type $generated@@596) $generated@@70)) ($generated@@190 $generated@@595 ($generated@@209 $generated@@596))) (and (= ($generated@@239 ($generated@@305 ($generated@@87 $generated@@170 $generated@@4) $generated@@595)) $generated@@595) ($generated@@154 ($generated@@305 ($generated@@87 $generated@@170 $generated@@4) $generated@@595) ($generated@@209 $generated@@596))))
 :pattern ( ($generated@@190 $generated@@595 ($generated@@209 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@170) (= (type $generated@@598) $generated@@70)) ($generated@@190 $generated@@597 ($generated@@175 $generated@@598))) (and (= ($generated@@239 ($generated@@305 ($generated@@87 $generated@@170 $generated@@2) $generated@@597)) $generated@@597) ($generated@@154 ($generated@@305 ($generated@@87 $generated@@170 $generated@@2) $generated@@597) ($generated@@175 $generated@@598))))
 :pattern ( ($generated@@190 $generated@@597 ($generated@@175 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@170) (= (type $generated@@600) $generated@@70)) ($generated@@190 $generated@@599 ($generated@@462 $generated@@600))) (and (= ($generated@@239 ($generated@@305 ($generated@@233 $generated@@170) $generated@@599)) $generated@@599) ($generated@@154 ($generated@@305 ($generated@@233 $generated@@170) $generated@@599) ($generated@@462 $generated@@600))))
 :pattern ( ($generated@@190 $generated@@599 ($generated@@462 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@604)))
 (=> (and (and (and (= (type $generated@@601) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@602) $generated@@88)) (= (type $generated@@603) ($generated@@72 $generated@@605))) ($generated@@152 ($generated@@93 $generated@@601 $generated@@602 ($generated@@95 ($generated@@92 $generated@@601 $generated@@602) $generated@@603 $generated@@604)))) ($generated@@143 $generated@@601 ($generated@@93 $generated@@601 $generated@@602 ($generated@@95 ($generated@@92 $generated@@601 $generated@@602) $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@93 $generated@@601 $generated@@602 ($generated@@95 ($generated@@92 $generated@@601 $generated@@602) $generated@@603 $generated@@604)))
)))
(assert (= ($generated@@81 $generated@@183) $generated@@64))
(assert (= ($generated@@580 $generated@@183) $generated@@68))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@580 $generated@@147) $generated@@68))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@606) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@606 ($generated@@175 $generated@@607) $generated@@608) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@606 $generated@@609)))) ($generated@@219 $generated@@609 $generated@@607 $generated@@608))
 :pattern ( ($generated@@92 $generated@@606 $generated@@609))
))))
 :pattern ( ($generated@@85 $generated@@606 ($generated@@175 $generated@@607) $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@161) (= (type $generated@@611) $generated@@70)) (= (type $generated@@612) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@612) (and ($generated@@159 $generated@@610) (exists (($generated@@613 T@U) ) (!  (and (= (type $generated@@613) $generated@@70) ($generated@@85 $generated@@610 ($generated@@160 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@85 $generated@@610 ($generated@@160 $generated@@611 $generated@@613) $generated@@612))
))))) ($generated@@219 ($generated@@168 $generated@@610) $generated@@611 $generated@@612))
 :pattern ( ($generated@@219 ($generated@@168 $generated@@610) $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@161) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@616) (and ($generated@@159 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@70) ($generated@@85 $generated@@614 ($generated@@160 $generated@@617 $generated@@615) $generated@@616))
 :pattern ( ($generated@@85 $generated@@614 ($generated@@160 $generated@@617 $generated@@615) $generated@@616))
))))) ($generated@@219 ($generated@@169 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@219 ($generated@@169 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@170) (= (type $generated@@619) $generated@@170)) (= ($generated@@189 ($generated@@215 $generated@@618) ($generated@@215 $generated@@619)) ($generated@@215 ($generated@@189 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@189 ($generated@@215 $generated@@618) ($generated@@215 $generated@@619)))
)))
(assert (forall (($generated@@620 Int) ) (! (= ($generated@@239 ($generated@@8 ($generated@@184 $generated@@620))) ($generated@@215 ($generated@@239 ($generated@@8 $generated@@620))))
 :pattern ( ($generated@@239 ($generated@@8 ($generated@@184 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ) (! (= ($generated@@239 ($generated@@215 $generated@@621)) ($generated@@215 ($generated@@239 $generated@@621)))
 :pattern ( ($generated@@239 ($generated@@215 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (! (let (($generated@@623 ($generated@@234 (type $generated@@622))))
 (=> (and (= (type $generated@@622) ($generated@@233 $generated@@623)) (= ($generated@@232 $generated@@622) 0)) (= $generated@@622 ($generated@@231 $generated@@623))))
 :pattern ( ($generated@@232 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@625)))
 (=> (and (and (= (type $generated@@624) ($generated@@87 $generated@@627 $generated@@2)) (= (type $generated@@626) $generated@@2)) (<= 0 ($generated $generated@@626))) (= ($generated@@254 ($generated@@93 $generated@@624 $generated@@625 $generated@@626)) (+ (- ($generated@@254 $generated@@624) ($generated ($generated@@92 $generated@@624 $generated@@625))) ($generated $generated@@626)))))
 :pattern ( ($generated@@254 ($generated@@93 $generated@@624 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@629) $generated@@2)) ($generated@@85 $generated@@629 $generated@@46 $generated@@628))
 :pattern ( ($generated@@85 $generated@@629 $generated@@46 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@631) $generated@@3)) ($generated@@85 $generated@@631 $generated@@47 $generated@@630))
 :pattern ( ($generated@@85 $generated@@631 $generated@@47 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@633) $generated@@4)) ($generated@@85 $generated@@633 $generated@@44 $generated@@632))
 :pattern ( ($generated@@85 $generated@@633 $generated@@44 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@635) $generated@@420)) ($generated@@85 $generated@@635 $generated@@45 $generated@@634))
 :pattern ( ($generated@@85 $generated@@635 $generated@@45 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@637) $generated@@170)) ($generated@@85 $generated@@637 $generated@@48 $generated@@636))
 :pattern ( ($generated@@85 $generated@@637 $generated@@48 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@233 $generated@@170)) (= (type $generated@@639) $generated@@70)) (= ($generated@@154 $generated@@638 ($generated@@462 $generated@@639)) (forall (($generated@@640 Int) ) (!  (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@232 $generated@@638))) ($generated@@190 ($generated@@463 $generated@@638 $generated@@640) $generated@@639))
 :pattern ( ($generated@@463 $generated@@638 $generated@@640))
))))
 :pattern ( ($generated@@154 $generated@@638 ($generated@@462 $generated@@639)))
)))
(assert  (=> true (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@642) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@643) $generated@@88)) (or ($generated@@641 $generated@@642 $generated@@643) (and ($generated@@152 $generated@@642) (and (not (= $generated@@643 $generated@@148)) (and ($generated@@154 $generated@@643 $generated@@183) ($generated@@85 $generated@@643 $generated@@183 $generated@@642)))))) true)
 :pattern ( ($generated@@584 $generated@@642 $generated@@643))
))))
(assert (forall (($generated@@645 T@U) ($generated@@646 Int) ) (!  (=> (= (type $generated@@645) ($generated@@233 $generated@@170)) (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@232 $generated@@645))) (< ($generated@@508 ($generated@@305 $generated@@161 ($generated@@463 $generated@@645 $generated@@646))) ($generated@@644 $generated@@645))))
 :pattern ( ($generated@@508 ($generated@@305 $generated@@161 ($generated@@463 $generated@@645 $generated@@646))))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@262 $generated@@170 $generated@@170)) (= (type $generated@@648) $generated@@70)) (= (type $generated@@649) $generated@@70)) ($generated@@154 $generated@@647 ($generated@@372 $generated@@648 $generated@@649))) (and (and ($generated@@154 ($generated@@260 $generated@@647) ($generated@@204 $generated@@648)) ($generated@@154 ($generated@@315 $generated@@647) ($generated@@204 $generated@@649))) ($generated@@154 ($generated@@346 $generated@@647) ($generated@@204 ($generated@@160 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@154 $generated@@647 ($generated@@372 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@280 $generated@@170 $generated@@170)) (= (type $generated@@651) $generated@@70)) (= (type $generated@@652) $generated@@70)) ($generated@@154 $generated@@650 ($generated@@380 $generated@@651 $generated@@652))) (and (and ($generated@@154 ($generated@@278 $generated@@650) ($generated@@209 $generated@@651)) ($generated@@154 ($generated@@326 $generated@@650) ($generated@@209 $generated@@652))) ($generated@@154 ($generated@@354 $generated@@650) ($generated@@209 ($generated@@160 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@154 $generated@@650 ($generated@@380 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@2) ($generated@@154 $generated@@653 $generated@@46))
 :pattern ( ($generated@@154 $generated@@653 $generated@@46))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@3) ($generated@@154 $generated@@654 $generated@@47))
 :pattern ( ($generated@@154 $generated@@654 $generated@@47))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@4) ($generated@@154 $generated@@655 $generated@@44))
 :pattern ( ($generated@@154 $generated@@655 $generated@@44))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@420) ($generated@@154 $generated@@656 $generated@@45))
 :pattern ( ($generated@@154 $generated@@656 $generated@@45))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@170) ($generated@@154 $generated@@657 $generated@@48))
 :pattern ( ($generated@@154 $generated@@657 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () Int)
(assert  (and (and (and (and (= (type $generated@@659) $generated@@88) (= (type $generated@@658) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@660) ($generated@@526 $generated@@88 $generated@@4))) (= (type $generated@@664) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@662) ($generated@@87 $generated@@88 $generated@@89))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@666  (=> (and (and ($generated@@182 $generated@@658 $generated@@659) (= (ControlFlow 0 15) (- 0 14))) ($generated@@181 $generated@@658 $generated@@659)) (= ($generated ($generated@@94 ($generated@@92 $generated@@658 $generated@@659) $generated@@151)) ($generated@@184 8)))))
(let (($generated@@667  (=> (and (not ($generated@@181 $generated@@658 $generated@@659)) (= (ControlFlow 0 18) 15)) $generated@@666)))
(let (($generated@@668  (=> ($generated@@181 $generated@@658 $generated@@659) (and (=> (= (ControlFlow 0 16) (- 0 17)) (not (= $generated@@659 $generated@@148))) (=> (= (ControlFlow 0 16) 15) $generated@@666)))))
(let (($generated@@669  (and (=> (= (ControlFlow 0 19) (- 0 20)) (not (= $generated@@659 $generated@@148))) (=> (and ($generated@@85 $generated@@659 $generated@@147 $generated@@658) ($generated@@182 $generated@@658 $generated@@659)) (and (=> (= (ControlFlow 0 19) 16) $generated@@668) (=> (= (ControlFlow 0 19) 18) $generated@@667))))))
(let (($generated@@670  (and (=> (= (ControlFlow 0 10) (- 0 13)) (not (= $generated@@659 $generated@@148))) (=> (not (= $generated@@659 $generated@@148)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@0 ($generated@@524 $generated@@660 $generated@@659 $generated@@151))) (=> ($generated@@0 ($generated@@524 $generated@@660 $generated@@659 $generated@@151)) (=> (= $generated@@661 ($generated@@184 8)) (=> (and (= $generated@@662 ($generated@@93 $generated@@658 $generated@@659 ($generated@@95 ($generated@@92 $generated@@658 $generated@@659) $generated@@151 ($generated@@8 $generated@@661)))) ($generated@@152 $generated@@662)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (not (= $generated@@659 $generated@@148))) (=> (and (and ($generated@@85 $generated@@659 $generated@@147 $generated@@662) ($generated@@182 $generated@@662 $generated@@659)) (and ($generated@@182 $generated@@662 $generated@@659) (= (ControlFlow 0 10) (- 0 9)))) ($generated@@181 $generated@@662 $generated@@659)))))))))))
(let (($generated@@671  (and (=> (= (ControlFlow 0 5) (- 0 8)) (not (= $generated@@659 $generated@@148))) (=> (not (= $generated@@659 $generated@@148)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@0 ($generated@@524 $generated@@660 $generated@@659 $generated@@151))) (=> ($generated@@0 ($generated@@524 $generated@@660 $generated@@659 $generated@@151)) (=> (= $generated@@663 ($generated@@184 7)) (=> (and (= $generated@@664 ($generated@@93 $generated@@658 $generated@@659 ($generated@@95 ($generated@@92 $generated@@658 $generated@@659) $generated@@151 ($generated@@8 $generated@@663)))) ($generated@@152 $generated@@664)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= $generated@@659 $generated@@148))) (=> (and (and ($generated@@85 $generated@@659 $generated@@147 $generated@@664) ($generated@@182 $generated@@664 $generated@@659)) (and ($generated@@182 $generated@@664 $generated@@659) (= (ControlFlow 0 5) (- 0 4)))) ($generated@@181 $generated@@664 $generated@@659)))))))))))
(let (($generated@@672  (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@659 $generated@@148))) (=> (and (and ($generated@@85 $generated@@659 $generated@@147 $generated@@658) ($generated@@182 $generated@@658 $generated@@659)) (and ($generated@@182 $generated@@658 $generated@@659) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@181 $generated@@658 $generated@@659)))))
(let (($generated@@673  (=> (= $generated@@660 ($generated@@525 $generated@@148 $generated@@658 $generated@@60 $generated@@659)) (and (=> (= (ControlFlow 0 21) (- 0 24)) (not (= $generated@@659 $generated@@148))) (=> (and ($generated@@85 $generated@@659 $generated@@147 $generated@@658) ($generated@@641 $generated@@658 $generated@@659)) (and (=> (= (ControlFlow 0 21) (- 0 23)) (not (= $generated@@659 $generated@@148))) (=> ($generated@@641 $generated@@658 $generated@@659) (and (=> (= (ControlFlow 0 21) (- 0 22)) (= ($generated@@584 $generated@@658 $generated@@659) ($generated ($generated@@94 ($generated@@92 $generated@@658 $generated@@659) $generated@@151)))) (=> (= ($generated@@584 $generated@@658 $generated@@659) ($generated ($generated@@94 ($generated@@92 $generated@@658 $generated@@659) $generated@@151))) (and (and (and (=> (= (ControlFlow 0 21) 2) $generated@@672) (=> (= (ControlFlow 0 21) 5) $generated@@671)) (=> (= (ControlFlow 0 21) 10) $generated@@670)) (=> (= (ControlFlow 0 21) 19) $generated@@669)))))))))))
(let (($generated@@674  (=> (and ($generated@@152 $generated@@658) ($generated@@500 $generated@@658)) (=> (and (and ($generated@@154 $generated@@659 $generated@@183) ($generated@@85 $generated@@659 $generated@@183 $generated@@658)) (and (= 1 $generated@@665) (= (ControlFlow 0 25) 21))) $generated@@673))))
$generated@@674))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 21) (- 22))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 15) (- 14))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@T T@U T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U T@U) Bool)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 () T@T)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Bool)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@634 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@66) $generated@@76)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (= (type $generated@@151) ($generated@@72 $generated@@2)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@157) $generated@@88)) (and ($generated@@152 $generated@@156) (and (not (= $generated@@157 $generated@@148)) (= ($generated@@153 $generated@@157) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151) $generated@@46))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@151))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@154 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@154 $generated@@158 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@70)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@70) (= (type $generated@@165) $generated@@70)) (= (type $generated@@166) $generated@@161)) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@154 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@154 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@154 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@88) (= ($generated@@154 $generated@@180 $generated@@147)  (or (= $generated@@180 $generated@@148) (= ($generated@@153 $generated@@180) $generated@@147))))
 :pattern ( ($generated@@154 $generated@@180 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 18)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@88 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@73 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@88) (= (type $generated@@231) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@232) ($generated@@72 $generated@@4))) (= (type $generated@@234) $generated@@88)) (= (type $generated@@235) ($generated@@72 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (= (type $generated@@239) $generated@@70))
(assert  (=> true (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (= (type $generated@@241) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@242) $generated@@88)) (or ($generated@@238 $generated@@241 $generated@@242) (and ($generated@@152 $generated@@241) (and (not (= $generated@@242 $generated@@148)) (and ($generated@@154 $generated@@242 $generated@@239) ($generated@@85 $generated@@242 $generated@@239 $generated@@241)))))) (and (=> ($generated@@237 $generated@@241 $generated@@242) (<= ($generated@@240 0) ($generated ($generated@@94 ($generated@@92 $generated@@241 $generated@@242) $generated@@151)))) (=> (= ($generated ($generated@@94 ($generated@@92 $generated@@241 $generated@@242) $generated@@151)) ($generated@@240 8)) ($generated@@237 $generated@@241 $generated@@242))))
 :pattern ( ($generated@@237 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@88) (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@243 $generated@@239 $generated@@244) ($generated@@85 $generated@@243 $generated@@147 $generated@@244)))
 :pattern ( ($generated@@85 $generated@@243 $generated@@239 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@161)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@70) (= (type $generated@@250) $generated@@70)) (= (type $generated@@251) $generated@@170)) (= (type $generated@@252) $generated@@170)) (= ($generated@@154 ($generated@@245 $generated@@251 $generated@@252) ($generated@@160 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@154 ($generated@@245 $generated@@251 $generated@@252) ($generated@@160 $generated@@249 $generated@@250)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@254 T@T) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@253 $generated@@254 $generated@@255 $generated@@256)) ($generated@@72 $generated@@254))
 :pattern ( ($generated@@253 $generated@@254 $generated@@255 $generated@@256))
)))
(assert (= ($generated@@253 $generated@@2 $generated@@66 $generated@@69) $generated@@151))
(assert  (not ($generated@@257 $generated@@151)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@161) (= (type $generated@@259) $generated@@161)) (= ($generated@@167 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@167 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@70)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@263) $generated@@70)) (= ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@170) ($generated@@0 ($generated@@92 $generated@@262 $generated@@264))) ($generated@@246 $generated@@264 $generated@@263))
 :pattern ( ($generated@@92 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@154 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@70)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@268) $generated@@70)) (= ($generated@@154 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@170) ($generated@@0 ($generated@@92 $generated@@267 $generated@@269))) ($generated@@246 $generated@@269 $generated@@268))
 :pattern ( ($generated@@92 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@154 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@240 $generated@@270) $generated@@270)
 :pattern ( ($generated@@240 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@70) (= (type $generated@@277) $generated@@70)) (= (type $generated@@278) $generated@@170)) (= (type $generated@@279) $generated@@170)) (= (type $generated@@280) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@280)) (= ($generated@@85 ($generated@@245 $generated@@278 $generated@@279) ($generated@@160 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@85 ($generated@@245 $generated@@278 $generated@@279) ($generated@@160 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@75)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@161) (= ($generated@@159 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@62)))
 :pattern ( ($generated@@159 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@161) ($generated@@159 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@170) (= (type $generated@@286) $generated@@170)) (= $generated@@284 ($generated@@245 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@159 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 19)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert ($generated@@257 $generated@@60))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@170)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@70) (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@85 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@301) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@302) $generated@@170)) (= (type $generated@@303) $generated@@70)) ($generated@@143 $generated@@300 $generated@@301)) ($generated@@275 $generated@@302 $generated@@303 $generated@@300)) ($generated@@275 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@143 $generated@@300 $generated@@301) ($generated@@275 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@305) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@307) $generated@@70)) ($generated@@143 $generated@@304 $generated@@305)) ($generated@@85 $generated@@306 $generated@@307 $generated@@304)) ($generated@@85 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@143 $generated@@304 $generated@@305) ($generated@@85 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@309) $generated@@88)) (=> (and (and ($generated@@152 $generated@@308) (and (not (= $generated@@309 $generated@@148)) (= ($generated@@153 $generated@@309) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@308 $generated@@309) $generated@@60))) ($generated@@85 ($generated@@94 ($generated@@92 $generated@@308 $generated@@309) $generated@@151) $generated@@46 $generated@@308)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@308 $generated@@309) $generated@@151))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@87 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@90 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@87 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@92 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 20)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@87 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@92 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@92 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 21)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@87 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@92 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@92 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@354) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@352 $generated@@353 $generated@@354)) (and ($generated@@143 $generated@@353 $generated@@354) (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@73 (type $generated@@356))))
 (=> (and (and (= (type $generated@@355) $generated@@88) (= (type $generated@@356) ($generated@@72 $generated@@357))) (not ($generated@@257 $generated@@356))) (= ($generated@@94 ($generated@@92 $generated@@353 $generated@@355) $generated@@356) ($generated@@94 ($generated@@92 $generated@@354 $generated@@355) $generated@@356))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@354 $generated@@355) $generated@@356))
))))
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@90 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@87 $generated@@359 $generated@@2)) (= ($generated@@176 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@92 $generated@@358 $generated@@360))) (<= ($generated ($generated@@92 $generated@@358 $generated@@360)) ($generated@@310 $generated@@358))))
 :pattern ( ($generated@@92 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@176 $generated@@358))
)))
(assert (forall (($generated@@362 T@T) ($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@170) ($generated@@246 $generated@@364 $generated@@239)) (and (= ($generated@@295 ($generated@@361 $generated@@88 $generated@@364)) $generated@@364) ($generated@@154 ($generated@@361 $generated@@88 $generated@@364) $generated@@239)))
 :pattern ( ($generated@@246 $generated@@364 $generated@@239))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@170) ($generated@@246 $generated@@365 $generated@@147)) (and (= ($generated@@295 ($generated@@361 $generated@@88 $generated@@365)) $generated@@365) ($generated@@154 ($generated@@361 $generated@@88 $generated@@365) $generated@@147)))
 :pattern ( ($generated@@246 $generated@@365 $generated@@147))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@88) (= ($generated@@154 $generated@@366 $generated@@239)  (and ($generated@@154 $generated@@366 $generated@@147) (not (= $generated@@366 $generated@@148)))))
 :pattern ( ($generated@@154 $generated@@366 $generated@@239))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@320 (type $generated@@367))))
(let (($generated@@369 ($generated@@319 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@318 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@317 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@92 ($generated@@316 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@316 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@320 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@87 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@320 (type $generated@@374))))
(let (($generated@@376 ($generated@@319 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@318 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@317 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@92 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@338 (type $generated@@378))))
(let (($generated@@380 ($generated@@337 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@336 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@335 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@92 ($generated@@334 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@334 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@338 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@87 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@338 (type $generated@@385))))
(let (($generated@@387 ($generated@@337 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@336 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@335 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@92 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@390) $generated@@70)) (= ($generated@@154 $generated@@389 ($generated@@175 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@389 $generated@@391)))) ($generated@@246 $generated@@391 $generated@@390))
 :pattern ( ($generated@@92 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@154 $generated@@389 ($generated@@175 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@393) $generated@@70)) (= (type $generated@@394) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@392 ($generated@@260 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@170) ($generated@@0 ($generated@@92 $generated@@392 $generated@@395))) ($generated@@275 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@92 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@85 $generated@@392 ($generated@@260 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@87 $generated@@170 $generated@@4)) (= (type $generated@@397) $generated@@70)) (= (type $generated@@398) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@396 ($generated@@265 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@170) ($generated@@0 ($generated@@92 $generated@@396 $generated@@399))) ($generated@@275 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@92 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@85 $generated@@396 ($generated@@265 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@92 ($generated@@311 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@92 ($generated@@311 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@320 (type $generated@@405))))
(let (($generated@@407 ($generated@@319 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@87 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@409) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@92 ($generated@@316 $generated@@408) ($generated@@168 ($generated@@361 $generated@@161 $generated@@409)))) (= ($generated@@92 ($generated@@403 $generated@@408) ($generated@@168 ($generated@@361 $generated@@161 $generated@@409))) ($generated@@169 ($generated@@361 $generated@@161 $generated@@409))))))
 :pattern ( ($generated@@92 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@87 $generated@@170 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@338 (type $generated@@413))))
(let (($generated@@415 ($generated@@337 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@87 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@417) $generated@@170)) (= ($generated@@0 ($generated@@92 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@92 ($generated@@334 $generated@@416) ($generated@@168 ($generated@@361 $generated@@161 $generated@@417)))) (= ($generated@@92 ($generated@@411 $generated@@416) ($generated@@168 ($generated@@361 $generated@@161 $generated@@417))) ($generated@@169 ($generated@@361 $generated@@161 $generated@@417))))))
 :pattern ( ($generated@@92 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@319 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@318 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@92 ($generated@@371 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@92 ($generated@@316 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@92 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@92 ($generated@@316 $generated@@418) $generated@@422))
 :pattern ( ($generated@@92 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@92 ($generated@@371 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@337 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@336 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@92 ($generated@@382 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@92 ($generated@@334 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@92 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@92 ($generated@@334 $generated@@423) $generated@@427))
 :pattern ( ($generated@@92 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@92 ($generated@@382 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@316 $generated@@431) $generated@@435))) (and ($generated@@275 ($generated@@92 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@275 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@92 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@92 ($generated@@316 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@85 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@440) $generated@@70)) (= (type $generated@@441) $generated@@70)) (= (type $generated@@442) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@334 $generated@@439) $generated@@443))) (and ($generated@@275 ($generated@@92 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@275 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@92 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@92 ($generated@@334 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@85 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@445) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@446) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@444 $generated@@446))) (and ($generated@@143 $generated@@444 $generated@@445) ($generated@@143 $generated@@445 $generated@@446))) ($generated@@143 $generated@@444 $generated@@446))
 :pattern ( ($generated@@143 $generated@@444 $generated@@445) ($generated@@143 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@87 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@338 (type $generated@@449))))
(let (($generated@@451 ($generated@@337 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@336 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@335 $generated@@451 $generated@@450)) (= ($generated@@334 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@334 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@338 (type $generated@@452))))
(let (($generated@@454 ($generated@@337 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@336 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@335 $generated@@454 $generated@@453)) (= ($generated@@382 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@382 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@338 (type $generated@@455))))
(let (($generated@@457 ($generated@@337 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@336 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@335 $generated@@457 $generated@@456)) (= ($generated@@410 $generated@@455) ($generated@@447 $generated@@170))))))
 :pattern ( ($generated@@410 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@320 (type $generated@@458))))
(let (($generated@@460 ($generated@@319 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@318 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@317 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@170) (= (type $generated@@462) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@402 $generated@@458) ($generated@@295 ($generated@@245 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@402 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@338 (type $generated@@463))))
(let (($generated@@465 ($generated@@337 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@336 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@335 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@170) (= (type $generated@@467) $generated@@170)) ($generated@@0 ($generated@@92 ($generated@@410 $generated@@463) ($generated@@295 ($generated@@245 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@410 $generated@@463))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@76)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@T) ) (!  (=> (and (= (type $generated@@470) $generated@@76) (= (type $generated@@471) $generated@@74)) (and (= ($generated@@468 ($generated@@253 $generated@@472 $generated@@470 $generated@@471)) $generated@@470) (= ($generated@@83 ($generated@@253 $generated@@472 $generated@@470 $generated@@471)) $generated@@471)))
 :pattern ( ($generated@@253 $generated@@472 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@170) ($generated@@246 $generated@@473 $generated@@46)) (and (= ($generated@@295 ($generated@@361 $generated@@2 $generated@@473)) $generated@@473) ($generated@@154 ($generated@@361 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@170) ($generated@@246 $generated@@474 $generated@@47)) (and (= ($generated@@295 ($generated@@361 $generated@@3 $generated@@474)) $generated@@474) ($generated@@154 ($generated@@361 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@170) ($generated@@246 $generated@@475 $generated@@44)) (and (= ($generated@@295 ($generated@@361 $generated@@4 $generated@@475)) $generated@@475) ($generated@@154 ($generated@@361 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@475 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@476) 22))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@170) ($generated@@246 $generated@@477 $generated@@45)) (and (= ($generated@@295 ($generated@@361 $generated@@476 $generated@@477)) $generated@@477) ($generated@@154 ($generated@@361 $generated@@476 $generated@@477) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@477 $generated@@45))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@70) (= ($generated@@246 ($generated@@295 $generated@@478) $generated@@479) ($generated@@154 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@246 ($generated@@295 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@90 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@87 $generated@@481 $generated@@2)) (<= 0 ($generated@@310 $generated@@480))))
 :pattern ( ($generated@@310 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@290 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@289 $generated@@483)) (<= 0 ($generated@@288 $generated@@482))))
 :pattern ( ($generated@@288 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@428 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@428 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@428 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@428 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@81 ($generated@@428 $generated@@492 $generated@@493)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@494 ($generated@@436 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@436 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@70) (= (type $generated@@501) $generated@@70)) (= ($generated@@498 ($generated@@436 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@436 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@81 ($generated@@436 $generated@@502 $generated@@503)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@170) (= (type $generated@@505) $generated@@170)) (= ($generated@@281 ($generated@@245 $generated@@504 $generated@@505)) $generated@@62))
 :pattern ( ($generated@@245 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@70) (= (type $generated@@509) $generated@@70)) (= ($generated@@506 ($generated@@160 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@160 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@70)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@70) (= (type $generated@@513) $generated@@70)) (= ($generated@@510 ($generated@@160 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@160 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@170) (= (type $generated@@515) $generated@@170)) (= ($generated@@168 ($generated@@245 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@245 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@170) (= (type $generated@@517) $generated@@170)) (= ($generated@@169 ($generated@@245 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@245 $generated@@516 $generated@@517))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@290 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@289 $generated@@170)) (= (type $generated@@525) $generated@@70)) (= (type $generated@@526) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@288 $generated@@524))) ($generated@@275 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@85 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@86 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@86 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@70)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@530 ($generated@@260 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@260 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@81 ($generated@@260 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@534 ($generated@@265 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@265 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@81 ($generated@@265 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@70)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@538 ($generated@@175 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@175 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@81 ($generated@@175 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@70)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@70) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@81 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@361 $generated@@547 ($generated@@295 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@295 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) (= ($generated@@154 $generated@@548 ($generated@@428 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@316 $generated@@548) $generated@@551))) (and ($generated@@246 ($generated@@92 ($generated@@403 $generated@@548) $generated@@551) $generated@@550) ($generated@@246 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@92 ($generated@@403 $generated@@548) $generated@@551))
 :pattern ( ($generated@@92 ($generated@@316 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@154 $generated@@548 ($generated@@428 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@553) $generated@@70)) (= (type $generated@@554) $generated@@70)) (= ($generated@@154 $generated@@552 ($generated@@436 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@170) ($generated@@0 ($generated@@92 ($generated@@334 $generated@@552) $generated@@555))) (and ($generated@@246 ($generated@@92 ($generated@@411 $generated@@552) $generated@@555) $generated@@554) ($generated@@246 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@92 ($generated@@411 $generated@@552) $generated@@555))
 :pattern ( ($generated@@92 ($generated@@334 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@154 $generated@@552 ($generated@@436 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@558) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@559) $generated@@88)) (=> (and (and (and ($generated@@152 $generated@@557) ($generated@@152 $generated@@558)) (and (not (= $generated@@559 $generated@@148)) ($generated@@154 $generated@@559 $generated@@239))) (and ($generated@@556 $generated@@557) ($generated@@143 $generated@@557 $generated@@558))) (=> (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@73 (type $generated@@561))))
 (=> (and (and (= (type $generated@@560) $generated@@88) (= (type $generated@@561) ($generated@@72 $generated@@562))) (and (not (= $generated@@560 $generated@@148)) (= $generated@@560 $generated@@559))) (= ($generated@@94 ($generated@@92 $generated@@557 $generated@@560) $generated@@561) ($generated@@94 ($generated@@92 $generated@@558 $generated@@560) $generated@@561))))
 :no-pattern (type $generated@@560)
 :no-pattern (type $generated@@561)
 :no-pattern ($generated $generated@@560)
 :no-pattern ($generated@@0 $generated@@560)
 :no-pattern ($generated $generated@@561)
 :no-pattern ($generated@@0 $generated@@561)
)) (= ($generated@@237 $generated@@557 $generated@@559) ($generated@@237 $generated@@558 $generated@@559)))))
 :pattern ( ($generated@@556 $generated@@557) ($generated@@143 $generated@@557 $generated@@558) ($generated@@237 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@170) (= (type $generated@@566) $generated@@170)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@245 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@245 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@170) (= (type $generated@@568) $generated@@170)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@245 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@245 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@170) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) $generated@@70)) ($generated@@246 $generated@@569 ($generated@@428 $generated@@570 $generated@@571))) (and (= ($generated@@295 ($generated@@361 ($generated@@318 $generated@@170 $generated@@170) $generated@@569)) $generated@@569) ($generated@@154 ($generated@@361 ($generated@@318 $generated@@170 $generated@@170) $generated@@569) ($generated@@428 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@246 $generated@@569 ($generated@@428 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@170) (= (type $generated@@573) $generated@@70)) (= (type $generated@@574) $generated@@70)) ($generated@@246 $generated@@572 ($generated@@436 $generated@@573 $generated@@574))) (and (= ($generated@@295 ($generated@@361 ($generated@@336 $generated@@170 $generated@@170) $generated@@572)) $generated@@572) ($generated@@154 ($generated@@361 ($generated@@336 $generated@@170 $generated@@170) $generated@@572) ($generated@@436 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@246 $generated@@572 ($generated@@436 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@70) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) $generated@@170)) ($generated@@246 $generated@@577 ($generated@@160 $generated@@575 $generated@@576))) (and (= ($generated@@295 ($generated@@361 $generated@@161 $generated@@577)) $generated@@577) ($generated@@154 ($generated@@361 $generated@@161 $generated@@577) ($generated@@160 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@246 $generated@@577 ($generated@@160 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@92 ($generated@@447 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@92 ($generated@@447 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@77)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@70) (= (type $generated@@583) $generated@@70)) (and (= ($generated@@81 ($generated@@160 $generated@@582 $generated@@583)) $generated@@63) (= ($generated@@580 ($generated@@160 $generated@@582 $generated@@583)) $generated@@67)))
 :pattern ( ($generated@@160 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@161) (= ($generated@@563 ($generated@@295 $generated@@584)) ($generated@@564 $generated@@584)))
 :pattern ( ($generated@@563 ($generated@@295 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@170) ($generated@@246 $generated@@585 ($generated@@86 0))) (and (= ($generated@@295 ($generated@@361 $generated@@2 $generated@@585)) $generated@@585) ($generated@@154 ($generated@@361 ($generated@@87 $generated@@170 $generated@@4) $generated@@585) ($generated@@86 0))))
 :pattern ( ($generated@@246 $generated@@585 ($generated@@86 0)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@170) (= (type $generated@@587) $generated@@70)) ($generated@@246 $generated@@586 ($generated@@260 $generated@@587))) (and (= ($generated@@295 ($generated@@361 ($generated@@87 $generated@@170 $generated@@4) $generated@@586)) $generated@@586) ($generated@@154 ($generated@@361 ($generated@@87 $generated@@170 $generated@@4) $generated@@586) ($generated@@260 $generated@@587))))
 :pattern ( ($generated@@246 $generated@@586 ($generated@@260 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@170) (= (type $generated@@589) $generated@@70)) ($generated@@246 $generated@@588 ($generated@@265 $generated@@589))) (and (= ($generated@@295 ($generated@@361 ($generated@@87 $generated@@170 $generated@@4) $generated@@588)) $generated@@588) ($generated@@154 ($generated@@361 ($generated@@87 $generated@@170 $generated@@4) $generated@@588) ($generated@@265 $generated@@589))))
 :pattern ( ($generated@@246 $generated@@588 ($generated@@265 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@170) (= (type $generated@@591) $generated@@70)) ($generated@@246 $generated@@590 ($generated@@175 $generated@@591))) (and (= ($generated@@295 ($generated@@361 ($generated@@87 $generated@@170 $generated@@2) $generated@@590)) $generated@@590) ($generated@@154 ($generated@@361 ($generated@@87 $generated@@170 $generated@@2) $generated@@590) ($generated@@175 $generated@@591))))
 :pattern ( ($generated@@246 $generated@@590 ($generated@@175 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@170) (= (type $generated@@593) $generated@@70)) ($generated@@246 $generated@@592 ($generated@@518 $generated@@593))) (and (= ($generated@@295 ($generated@@361 ($generated@@289 $generated@@170) $generated@@592)) $generated@@592) ($generated@@154 ($generated@@361 ($generated@@289 $generated@@170) $generated@@592) ($generated@@518 $generated@@593))))
 :pattern ( ($generated@@246 $generated@@592 ($generated@@518 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
 (=> (and (and (and (= (type $generated@@594) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@595) $generated@@88)) (= (type $generated@@596) ($generated@@72 $generated@@598))) ($generated@@152 ($generated@@93 $generated@@594 $generated@@595 ($generated@@95 ($generated@@92 $generated@@594 $generated@@595) $generated@@596 $generated@@597)))) ($generated@@143 $generated@@594 ($generated@@93 $generated@@594 $generated@@595 ($generated@@95 ($generated@@92 $generated@@594 $generated@@595) $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@93 $generated@@594 $generated@@595 ($generated@@95 ($generated@@92 $generated@@594 $generated@@595) $generated@@596 $generated@@597)))
)))
(assert (= ($generated@@81 $generated@@239) $generated@@64))
(assert (= ($generated@@580 $generated@@239) $generated@@68))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@580 $generated@@147) $generated@@68))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@87 $generated@@170 $generated@@2)) (= (type $generated@@600) $generated@@70)) (= (type $generated@@601) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@599 ($generated@@175 $generated@@600) $generated@@601) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@170) (< 0 ($generated ($generated@@92 $generated@@599 $generated@@602)))) ($generated@@275 $generated@@602 $generated@@600 $generated@@601))
 :pattern ( ($generated@@92 $generated@@599 $generated@@602))
))))
 :pattern ( ($generated@@85 $generated@@599 ($generated@@175 $generated@@600) $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@161) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@605) (and ($generated@@159 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@70) ($generated@@85 $generated@@603 ($generated@@160 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@85 $generated@@603 ($generated@@160 $generated@@604 $generated@@606) $generated@@605))
))))) ($generated@@275 ($generated@@168 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@275 ($generated@@168 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@161) (= (type $generated@@608) $generated@@70)) (= (type $generated@@609) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@609) (and ($generated@@159 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@70) ($generated@@85 $generated@@607 ($generated@@160 $generated@@610 $generated@@608) $generated@@609))
 :pattern ( ($generated@@85 $generated@@607 ($generated@@160 $generated@@610 $generated@@608) $generated@@609))
))))) ($generated@@275 ($generated@@169 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@275 ($generated@@169 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@170) (= (type $generated@@612) $generated@@170)) (= ($generated@@245 ($generated@@271 $generated@@611) ($generated@@271 $generated@@612)) ($generated@@271 ($generated@@245 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@245 ($generated@@271 $generated@@611) ($generated@@271 $generated@@612)))
)))
(assert (forall (($generated@@613 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@240 $generated@@613))) ($generated@@271 ($generated@@295 ($generated@@8 $generated@@613))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@240 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ) (! (= ($generated@@295 ($generated@@271 $generated@@614)) ($generated@@271 ($generated@@295 $generated@@614)))
 :pattern ( ($generated@@295 ($generated@@271 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 ($generated@@290 (type $generated@@615))))
 (=> (and (= (type $generated@@615) ($generated@@289 $generated@@616)) (= ($generated@@288 $generated@@615) 0)) (= $generated@@615 ($generated@@287 $generated@@616))))
 :pattern ( ($generated@@288 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@618)))
 (=> (and (and (= (type $generated@@617) ($generated@@87 $generated@@620 $generated@@2)) (= (type $generated@@619) $generated@@2)) (<= 0 ($generated $generated@@619))) (= ($generated@@310 ($generated@@93 $generated@@617 $generated@@618 $generated@@619)) (+ (- ($generated@@310 $generated@@617) ($generated ($generated@@92 $generated@@617 $generated@@618))) ($generated $generated@@619)))))
 :pattern ( ($generated@@310 ($generated@@93 $generated@@617 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@622) $generated@@2)) ($generated@@85 $generated@@622 $generated@@46 $generated@@621))
 :pattern ( ($generated@@85 $generated@@622 $generated@@46 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@624) $generated@@3)) ($generated@@85 $generated@@624 $generated@@47 $generated@@623))
 :pattern ( ($generated@@85 $generated@@624 $generated@@47 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@626) $generated@@4)) ($generated@@85 $generated@@626 $generated@@44 $generated@@625))
 :pattern ( ($generated@@85 $generated@@626 $generated@@44 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@628) $generated@@476)) ($generated@@85 $generated@@628 $generated@@45 $generated@@627))
 :pattern ( ($generated@@85 $generated@@628 $generated@@45 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@630) $generated@@170)) ($generated@@85 $generated@@630 $generated@@48 $generated@@629))
 :pattern ( ($generated@@85 $generated@@630 $generated@@48 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@289 $generated@@170)) (= (type $generated@@632) $generated@@70)) (= ($generated@@154 $generated@@631 ($generated@@518 $generated@@632)) (forall (($generated@@633 Int) ) (!  (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@288 $generated@@631))) ($generated@@246 ($generated@@519 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@519 $generated@@631 $generated@@633))
))))
 :pattern ( ($generated@@154 $generated@@631 ($generated@@518 $generated@@632)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 Int) ) (!  (=> (= (type $generated@@635) ($generated@@289 $generated@@170)) (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@288 $generated@@635))) (< ($generated@@564 ($generated@@361 $generated@@161 ($generated@@519 $generated@@635 $generated@@636))) ($generated@@634 $generated@@635))))
 :pattern ( ($generated@@564 ($generated@@361 $generated@@161 ($generated@@519 $generated@@635 $generated@@636))))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) $generated@@70)) ($generated@@154 $generated@@637 ($generated@@428 $generated@@638 $generated@@639))) (and (and ($generated@@154 ($generated@@316 $generated@@637) ($generated@@260 $generated@@638)) ($generated@@154 ($generated@@371 $generated@@637) ($generated@@260 $generated@@639))) ($generated@@154 ($generated@@402 $generated@@637) ($generated@@260 ($generated@@160 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@154 $generated@@637 ($generated@@428 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) $generated@@70)) ($generated@@154 $generated@@640 ($generated@@436 $generated@@641 $generated@@642))) (and (and ($generated@@154 ($generated@@334 $generated@@640) ($generated@@265 $generated@@641)) ($generated@@154 ($generated@@382 $generated@@640) ($generated@@265 $generated@@642))) ($generated@@154 ($generated@@410 $generated@@640) ($generated@@265 ($generated@@160 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@154 $generated@@640 ($generated@@436 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@2) ($generated@@154 $generated@@643 $generated@@46))
 :pattern ( ($generated@@154 $generated@@643 $generated@@46))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@3) ($generated@@154 $generated@@644 $generated@@47))
 :pattern ( ($generated@@154 $generated@@644 $generated@@47))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@4) ($generated@@154 $generated@@645 $generated@@44))
 :pattern ( ($generated@@154 $generated@@645 $generated@@44))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@476) ($generated@@154 $generated@@646 $generated@@45))
 :pattern ( ($generated@@154 $generated@@646 $generated@@45))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@170) ($generated@@154 $generated@@647 $generated@@48))
 :pattern ( ($generated@@154 $generated@@647 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (T@U Int) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@187 (Int) Bool)
(declare-fun $generated@@188 (Int) Int)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@199 (T@T) T@U)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 () T@T)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@217 (T@T T@T) T@U)
(declare-fun $generated@@218 (T@T T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@235 (T@T T@T) T@U)
(declare-fun $generated@@236 (T@T T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@284 (T@U T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 () T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@U Int) T@U)
(declare-fun $generated@@340 (T@U) Int)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert  (and (= ($generated@@1 $generated@@186) 13) (forall (($generated@@189 T@U) ) (! (= (type ($generated@@185 $generated@@189)) $generated@@186)
 :pattern ( ($generated@@185 $generated@@189))
))))
(assert  (=> (<= 0 $generated@@183) (forall (($generated@@190 T@U) ($generated@@191 Int) ) (!  (=> (and (= (type $generated@@190) $generated@@186) (or ($generated@@187 $generated@@191) (not (= 0 $generated@@183)))) (= ($generated@@184 ($generated@@185 $generated@@190) $generated@@191)  (and (<= ($generated@@188 0) $generated@@191) (< $generated@@191 100))))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@190) $generated@@191))
))))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@188 $generated@@192) $generated@@192)
 :pattern ( ($generated@@188 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(= (type ($generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@193 $generated@@196) $generated@@196)
 :pattern ( ($generated@@193 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@183) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@186) (or ($generated@@187 $generated@@198) (not (= 0 $generated@@183)))) true)
 :pattern ( ($generated@@184 $generated@@197 $generated@@198))
))))
(assert  (and (and (forall (($generated@@203 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@203)) 14)) (forall (($generated@@204 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@201 $generated@@204))
))) (forall (($generated@@205 T@T) ) (! (= (type ($generated@@199 $generated@@205)) ($generated@@201 $generated@@205))
 :pattern ( ($generated@@199 $generated@@205))
))))
(assert (forall (($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@206)) 0)
 :pattern ( ($generated@@199 $generated@@206))
)))
(assert  (=> (<= 0 $generated@@183) (forall (($generated@@207 T@U) ($generated@@208 Int) ) (!  (=> (and (= (type $generated@@207) $generated@@186) (or ($generated@@187 ($generated@@188 $generated@@208)) (not (= 0 $generated@@183)))) (= ($generated@@184 ($generated@@185 $generated@@207) ($generated@@188 $generated@@208))  (and (<= ($generated@@188 0) ($generated@@188 $generated@@208)) (< $generated@@208 100))))
 :weight 3
 :pattern ( ($generated@@184 ($generated@@185 $generated@@207) ($generated@@188 $generated@@208)))
))))
(assert  (and (= ($generated@@1 $generated@@211) 15) (forall (($generated@@212 T@U) ) (! (= (type ($generated@@210 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@210 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@61) (= (type $generated@@215) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@209 ($generated@@210 $generated@@213) $generated@@214 $generated@@215) ($generated@@69 $generated@@213 $generated@@214 $generated@@215)))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@213) $generated@@214 $generated@@215))
)))
(assert  (and (and (and (and (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (= ($generated@@1 ($generated@@218 $generated@@221 $generated@@222)) 16)) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@223 $generated@@224)) $generated@@223)
 :pattern ( ($generated@@218 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (! (= ($generated@@220 ($generated@@218 $generated@@225 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@218 $generated@@225 $generated@@226))
))) (forall (($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@219 (type $generated@@227))))
(= (type ($generated@@216 $generated@@227)) ($generated@@71 $generated@@228 $generated@@4)))
 :pattern ( ($generated@@216 $generated@@227))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= (type ($generated@@217 $generated@@229 $generated@@230)) ($generated@@218 $generated@@229 $generated@@230))
 :pattern ( ($generated@@217 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@T) ) (! (let (($generated@@233 (type $generated@@231)))
 (not ($generated@@0 ($generated@@76 ($generated@@216 ($generated@@217 $generated@@233 $generated@@232)) $generated@@231))))
 :pattern ( (let (($generated@@233 (type $generated@@231)))
($generated@@76 ($generated@@216 ($generated@@217 $generated@@233 $generated@@232)) $generated@@231)))
)))
(assert  (and (and (and (and (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (= ($generated@@1 ($generated@@236 $generated@@239 $generated@@240)) 17)) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@237 ($generated@@236 $generated@@241 $generated@@242)) $generated@@241)
 :pattern ( ($generated@@236 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@238 ($generated@@236 $generated@@243 $generated@@244)) $generated@@244)
 :pattern ( ($generated@@236 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@237 (type $generated@@245))))
(= (type ($generated@@234 $generated@@245)) ($generated@@71 $generated@@246 $generated@@4)))
 :pattern ( ($generated@@234 $generated@@245))
))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= (type ($generated@@235 $generated@@247 $generated@@248)) ($generated@@236 $generated@@247 $generated@@248))
 :pattern ( ($generated@@235 $generated@@247 $generated@@248))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@T) ) (! (let (($generated@@251 (type $generated@@249)))
 (not ($generated@@0 ($generated@@76 ($generated@@234 ($generated@@235 $generated@@251 $generated@@250)) $generated@@249))))
 :pattern ( (let (($generated@@251 (type $generated@@249)))
($generated@@76 ($generated@@234 ($generated@@235 $generated@@251 $generated@@250)) $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@220 (type $generated@@252))))
(let (($generated@@254 ($generated@@219 (type $generated@@252))))
 (=> (= (type $generated@@252) ($generated@@218 $generated@@254 $generated@@253)) (or (= $generated@@252 ($generated@@217 $generated@@254 $generated@@253)) (exists (($generated@@255 T@U) ) (!  (and (= (type $generated@@255) $generated@@254) ($generated@@0 ($generated@@76 ($generated@@216 $generated@@252) $generated@@255)))
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
))))))
 :pattern ( ($generated@@216 $generated@@252))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@238 (type $generated@@256))))
(let (($generated@@258 ($generated@@237 (type $generated@@256))))
 (=> (= (type $generated@@256) ($generated@@236 $generated@@258 $generated@@257)) (or (= $generated@@256 ($generated@@235 $generated@@258 $generated@@257)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) ($generated@@0 ($generated@@76 ($generated@@234 $generated@@256) $generated@@259)))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@234 $generated@@256))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@61)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@262) ($generated@@71 $generated@@211 $generated@@4)) (= (type $generated@@263) $generated@@61)) (= (type $generated@@264) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@262 ($generated@@260 $generated@@263) $generated@@264) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@211) ($generated@@0 ($generated@@76 $generated@@262 $generated@@265))) ($generated@@209 $generated@@265 $generated@@263 $generated@@264))
 :pattern ( ($generated@@76 $generated@@262 $generated@@265))
))))
 :pattern ( ($generated@@69 $generated@@262 ($generated@@260 $generated@@263) $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@268) ($generated@@71 $generated@@211 $generated@@4)) (= (type $generated@@269) $generated@@61)) (= (type $generated@@270) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@268 ($generated@@266 $generated@@269) $generated@@270) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@211) ($generated@@0 ($generated@@76 $generated@@268 $generated@@271))) ($generated@@209 $generated@@271 $generated@@269 $generated@@270))
 :pattern ( ($generated@@76 $generated@@268 $generated@@271))
))))
 :pattern ( ($generated@@69 $generated@@268 ($generated@@266 $generated@@269) $generated@@270))
)))
(assert  (and (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@61)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@220 (type $generated@@276))))
(let (($generated@@278 ($generated@@219 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276)) ($generated@@71 $generated@@278 $generated@@277))))
 :pattern ( ($generated@@273 $generated@@276))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) ($generated@@218 $generated@@211 $generated@@211)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) $generated@@61)) (= (type $generated@@282) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@211) ($generated@@0 ($generated@@76 ($generated@@216 $generated@@279) $generated@@283))) (and ($generated@@209 ($generated@@76 ($generated@@273 $generated@@279) $generated@@283) $generated@@281 $generated@@282) ($generated@@209 $generated@@283 $generated@@280 $generated@@282)))
 :pattern ( ($generated@@76 ($generated@@273 $generated@@279) $generated@@283))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@279) $generated@@283))
))))
 :pattern ( ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282))
)))
(assert  (and (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@284 $generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@284 $generated@@286 $generated@@287))
)) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@238 (type $generated@@288))))
(let (($generated@@290 ($generated@@237 (type $generated@@288))))
(= (type ($generated@@285 $generated@@288)) ($generated@@71 $generated@@290 $generated@@289))))
 :pattern ( ($generated@@285 $generated@@288))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (= (type $generated@@291) ($generated@@236 $generated@@211 $generated@@211)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) $generated@@61)) (= (type $generated@@294) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@291 ($generated@@284 $generated@@292 $generated@@293) $generated@@294) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@211) ($generated@@0 ($generated@@76 ($generated@@234 $generated@@291) $generated@@295))) (and ($generated@@209 ($generated@@76 ($generated@@285 $generated@@291) $generated@@295) $generated@@293 $generated@@294) ($generated@@209 $generated@@295 $generated@@292 $generated@@294)))
 :pattern ( ($generated@@76 ($generated@@285 $generated@@291) $generated@@295))
 :pattern ( ($generated@@76 ($generated@@234 $generated@@291) $generated@@295))
))))
 :pattern ( ($generated@@69 $generated@@291 ($generated@@284 $generated@@292 $generated@@293) $generated@@294))
)))
(assert  (and (forall (($generated@@298 T@U) ) (! (= (type ($generated@@296 $generated@@298)) $generated@@186)
 :pattern ( ($generated@@296 $generated@@298))
)) (= (type $generated@@297) $generated@@186)))
(assert (forall (($generated@@299 T@U) ($generated@@300 Int) ) (!  (=> (= (type $generated@@299) $generated@@186) (= ($generated@@184 $generated@@299 $generated@@300) ($generated@@184 $generated@@297 $generated@@300)))
 :pattern ( ($generated@@184 ($generated@@296 $generated@@299) $generated@@300))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@71 $generated@@302 $generated@@4))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@238 (type $generated@@303))))
(let (($generated@@305 ($generated@@237 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@236 $generated@@305 $generated@@304)) (= (= $generated@@303 ($generated@@235 $generated@@305 $generated@@304)) (= ($generated@@234 $generated@@303) ($generated@@301 $generated@@305))))))
 :pattern ( ($generated@@234 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 Int) ) (!  (=> (= (type $generated@@306) $generated@@186) (= ($generated@@184 ($generated@@185 $generated@@306) $generated@@307) ($generated@@184 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@306) $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@202 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@201 $generated@@309)) (<= 0 ($generated@@200 $generated@@308))))
 :pattern ( ($generated@@200 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@61) (= (type $generated@@313) $generated@@61)) (= ($generated@@310 ($generated@@272 $generated@@312 $generated@@313)) $generated@@312))
 :pattern ( ($generated@@272 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@61) (= (type $generated@@317) $generated@@61)) (= ($generated@@314 ($generated@@272 $generated@@316 $generated@@317)) $generated@@317))
 :pattern ( ($generated@@272 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@67 ($generated@@272 $generated@@318 $generated@@319)) $generated@@58))
 :pattern ( ($generated@@272 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@61)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@61) (= (type $generated@@323) $generated@@61)) (= ($generated@@320 ($generated@@284 $generated@@322 $generated@@323)) $generated@@322))
 :pattern ( ($generated@@284 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@61)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@61) (= (type $generated@@327) $generated@@61)) (= ($generated@@324 ($generated@@284 $generated@@326 $generated@@327)) $generated@@327))
 :pattern ( ($generated@@284 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@67 ($generated@@284 $generated@@328 $generated@@329)) $generated@@59))
 :pattern ( ($generated@@284 $generated@@328 $generated@@329))
)))
(assert  (and (forall (($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@330 $generated@@332))
)) (forall (($generated@@333 T@U) ($generated@@334 Int) ) (! (let (($generated@@335 ($generated@@202 (type $generated@@333))))
(= (type ($generated@@331 $generated@@333 $generated@@334)) $generated@@335))
 :pattern ( ($generated@@331 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@201 $generated@@211)) (= (type $generated@@337) $generated@@61)) (= (type $generated@@338) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@336 ($generated@@330 $generated@@337) $generated@@338) (forall (($generated@@339 Int) ) (!  (=> (and (<= 0 $generated@@339) (< $generated@@339 ($generated@@200 $generated@@336))) ($generated@@209 ($generated@@331 $generated@@336 $generated@@339) $generated@@337 $generated@@338))
 :pattern ( ($generated@@331 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@69 $generated@@336 ($generated@@330 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@341 Int) ) (! (= ($generated@@340 ($generated@@70 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@70 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@342 ($generated@@260 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@260 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@67 ($generated@@260 $generated@@345)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (= (type ($generated@@346 $generated@@347)) $generated@@61)
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@61) (= ($generated@@346 ($generated@@266 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@266 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@61) (= ($generated@@67 ($generated@@266 $generated@@349)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@349))
)))
(assert  (and (forall (($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@352)) $generated@@61)
 :pattern ( ($generated@@350 $generated@@352))
)) (forall (($generated@@353 T@U) ) (! (= (type ($generated@@351 $generated@@353)) $generated@@61)
 :pattern ( ($generated@@351 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@61) (= ($generated@@351 ($generated@@350 $generated@@354)) $generated@@354))
 :pattern ( ($generated@@350 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@67 ($generated@@350 $generated@@355)) $generated@@56))
 :pattern ( ($generated@@350 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (= (type ($generated@@356 $generated@@357)) $generated@@61)
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@356 ($generated@@330 $generated@@358)) $generated@@358))
 :pattern ( ($generated@@330 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@61) (= ($generated@@67 ($generated@@330 $generated@@359)) $generated@@57))
 :pattern ( ($generated@@330 $generated@@359))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated@@360 $generated@@364 ($generated@@210 $generated@@363)) $generated@@363))
 :pattern ( ($generated@@210 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@76 ($generated@@301 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@76 ($generated@@301 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@71 $generated@@211 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@350 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@211) (< 0 ($generated ($generated@@76 $generated@@367 $generated@@370)))) ($generated@@209 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@76 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@350 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@210 ($generated@@8 ($generated@@188 $generated@@371))) ($generated@@193 ($generated@@210 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@210 ($generated@@8 ($generated@@188 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@210 ($generated@@193 $generated@@372)) ($generated@@193 ($generated@@210 $generated@@372)))
 :pattern ( ($generated@@210 ($generated@@193 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@202 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@201 $generated@@374)) (= ($generated@@200 $generated@@373) 0)) (= $generated@@373 ($generated@@199 $generated@@374))))
 :pattern ( ($generated@@200 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 18))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@211)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () Int)
(declare-fun $generated@@392 (T@U) Bool)
(declare-fun $generated@@393 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@386) $generated@@186) (= (type $generated@@387) $generated@@186)) (= (type $generated@@388) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@389) $generated@@72)) (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@394  (=> (and (and (and (= ($generated@@296 $generated@@386) $generated@@386) (= ($generated@@296 $generated@@387) $generated@@387)) (and (= $generated@@388 ($generated@@128 $generated@@389 $generated@@390 $generated@@60 false)) (= $generated@@391 ($generated@@188 18)))) (and (and ($generated@@69 ($generated@@8 $generated@@391) $generated@@46 $generated@@390) ($generated@@187 $generated@@391)) (and ($generated@@187 $generated@@391) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@184 $generated@@387 $generated@@391))))
(let (($generated@@395  (=> (and (and ($generated@@392 $generated@@390) ($generated@@393 $generated@@390)) (and (= 1 $generated@@183) (= (ControlFlow 0 3) 2))) $generated@@394)))
$generated@@395)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 (T@U Int) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@187 (Int) Bool)
(declare-fun $generated@@188 (Int) Int)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@199 (T@T) T@U)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 () T@T)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@217 (T@T T@T) T@U)
(declare-fun $generated@@218 (T@T T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@235 (T@T T@T) T@U)
(declare-fun $generated@@236 (T@T T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@284 (T@U T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 () T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@U Int) T@U)
(declare-fun $generated@@340 (T@U) Int)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert  (and (= ($generated@@1 $generated@@186) 13) (forall (($generated@@189 T@U) ) (! (= (type ($generated@@185 $generated@@189)) $generated@@186)
 :pattern ( ($generated@@185 $generated@@189))
))))
(assert  (=> (<= 0 $generated@@183) (forall (($generated@@190 T@U) ($generated@@191 Int) ) (!  (=> (and (= (type $generated@@190) $generated@@186) (or ($generated@@187 $generated@@191) (not (= 0 $generated@@183)))) (= ($generated@@184 ($generated@@185 $generated@@190) $generated@@191)  (and (<= ($generated@@188 0) $generated@@191) (< $generated@@191 100))))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@190) $generated@@191))
))))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@188 $generated@@192) $generated@@192)
 :pattern ( ($generated@@188 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(= (type ($generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@193 $generated@@196) $generated@@196)
 :pattern ( ($generated@@193 $generated@@196))
)))
(assert  (=> (<= 0 $generated@@183) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@186) (or ($generated@@187 $generated@@198) (not (= 0 $generated@@183)))) true)
 :pattern ( ($generated@@184 $generated@@197 $generated@@198))
))))
(assert  (and (and (forall (($generated@@203 T@T) ) (= ($generated@@1 ($generated@@201 $generated@@203)) 14)) (forall (($generated@@204 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@201 $generated@@204))
))) (forall (($generated@@205 T@T) ) (! (= (type ($generated@@199 $generated@@205)) ($generated@@201 $generated@@205))
 :pattern ( ($generated@@199 $generated@@205))
))))
(assert (forall (($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@206)) 0)
 :pattern ( ($generated@@199 $generated@@206))
)))
(assert  (=> (<= 0 $generated@@183) (forall (($generated@@207 T@U) ($generated@@208 Int) ) (!  (=> (and (= (type $generated@@207) $generated@@186) (or ($generated@@187 ($generated@@188 $generated@@208)) (not (= 0 $generated@@183)))) (= ($generated@@184 ($generated@@185 $generated@@207) ($generated@@188 $generated@@208))  (and (<= ($generated@@188 0) ($generated@@188 $generated@@208)) (< $generated@@208 100))))
 :weight 3
 :pattern ( ($generated@@184 ($generated@@185 $generated@@207) ($generated@@188 $generated@@208)))
))))
(assert  (and (= ($generated@@1 $generated@@211) 15) (forall (($generated@@212 T@U) ) (! (= (type ($generated@@210 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@210 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@61) (= (type $generated@@215) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@209 ($generated@@210 $generated@@213) $generated@@214 $generated@@215) ($generated@@69 $generated@@213 $generated@@214 $generated@@215)))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@213) $generated@@214 $generated@@215))
)))
(assert  (and (and (and (and (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (= ($generated@@1 ($generated@@218 $generated@@221 $generated@@222)) 16)) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@223 $generated@@224)) $generated@@223)
 :pattern ( ($generated@@218 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (! (= ($generated@@220 ($generated@@218 $generated@@225 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@218 $generated@@225 $generated@@226))
))) (forall (($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@219 (type $generated@@227))))
(= (type ($generated@@216 $generated@@227)) ($generated@@71 $generated@@228 $generated@@4)))
 :pattern ( ($generated@@216 $generated@@227))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= (type ($generated@@217 $generated@@229 $generated@@230)) ($generated@@218 $generated@@229 $generated@@230))
 :pattern ( ($generated@@217 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@T) ) (! (let (($generated@@233 (type $generated@@231)))
 (not ($generated@@0 ($generated@@76 ($generated@@216 ($generated@@217 $generated@@233 $generated@@232)) $generated@@231))))
 :pattern ( (let (($generated@@233 (type $generated@@231)))
($generated@@76 ($generated@@216 ($generated@@217 $generated@@233 $generated@@232)) $generated@@231)))
)))
(assert  (and (and (and (and (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (= ($generated@@1 ($generated@@236 $generated@@239 $generated@@240)) 17)) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@237 ($generated@@236 $generated@@241 $generated@@242)) $generated@@241)
 :pattern ( ($generated@@236 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@238 ($generated@@236 $generated@@243 $generated@@244)) $generated@@244)
 :pattern ( ($generated@@236 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@237 (type $generated@@245))))
(= (type ($generated@@234 $generated@@245)) ($generated@@71 $generated@@246 $generated@@4)))
 :pattern ( ($generated@@234 $generated@@245))
))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= (type ($generated@@235 $generated@@247 $generated@@248)) ($generated@@236 $generated@@247 $generated@@248))
 :pattern ( ($generated@@235 $generated@@247 $generated@@248))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@T) ) (! (let (($generated@@251 (type $generated@@249)))
 (not ($generated@@0 ($generated@@76 ($generated@@234 ($generated@@235 $generated@@251 $generated@@250)) $generated@@249))))
 :pattern ( (let (($generated@@251 (type $generated@@249)))
($generated@@76 ($generated@@234 ($generated@@235 $generated@@251 $generated@@250)) $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@220 (type $generated@@252))))
(let (($generated@@254 ($generated@@219 (type $generated@@252))))
 (=> (= (type $generated@@252) ($generated@@218 $generated@@254 $generated@@253)) (or (= $generated@@252 ($generated@@217 $generated@@254 $generated@@253)) (exists (($generated@@255 T@U) ) (!  (and (= (type $generated@@255) $generated@@254) ($generated@@0 ($generated@@76 ($generated@@216 $generated@@252) $generated@@255)))
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
))))))
 :pattern ( ($generated@@216 $generated@@252))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@238 (type $generated@@256))))
(let (($generated@@258 ($generated@@237 (type $generated@@256))))
 (=> (= (type $generated@@256) ($generated@@236 $generated@@258 $generated@@257)) (or (= $generated@@256 ($generated@@235 $generated@@258 $generated@@257)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) ($generated@@0 ($generated@@76 ($generated@@234 $generated@@256) $generated@@259)))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@234 $generated@@256))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@61)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@262) ($generated@@71 $generated@@211 $generated@@4)) (= (type $generated@@263) $generated@@61)) (= (type $generated@@264) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@262 ($generated@@260 $generated@@263) $generated@@264) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@211) ($generated@@0 ($generated@@76 $generated@@262 $generated@@265))) ($generated@@209 $generated@@265 $generated@@263 $generated@@264))
 :pattern ( ($generated@@76 $generated@@262 $generated@@265))
))))
 :pattern ( ($generated@@69 $generated@@262 ($generated@@260 $generated@@263) $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@268) ($generated@@71 $generated@@211 $generated@@4)) (= (type $generated@@269) $generated@@61)) (= (type $generated@@270) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@268 ($generated@@266 $generated@@269) $generated@@270) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@211) ($generated@@0 ($generated@@76 $generated@@268 $generated@@271))) ($generated@@209 $generated@@271 $generated@@269 $generated@@270))
 :pattern ( ($generated@@76 $generated@@268 $generated@@271))
))))
 :pattern ( ($generated@@69 $generated@@268 ($generated@@266 $generated@@269) $generated@@270))
)))
(assert  (and (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@61)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@220 (type $generated@@276))))
(let (($generated@@278 ($generated@@219 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276)) ($generated@@71 $generated@@278 $generated@@277))))
 :pattern ( ($generated@@273 $generated@@276))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) ($generated@@218 $generated@@211 $generated@@211)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) $generated@@61)) (= (type $generated@@282) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@211) ($generated@@0 ($generated@@76 ($generated@@216 $generated@@279) $generated@@283))) (and ($generated@@209 ($generated@@76 ($generated@@273 $generated@@279) $generated@@283) $generated@@281 $generated@@282) ($generated@@209 $generated@@283 $generated@@280 $generated@@282)))
 :pattern ( ($generated@@76 ($generated@@273 $generated@@279) $generated@@283))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@279) $generated@@283))
))))
 :pattern ( ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282))
)))
(assert  (and (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@284 $generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@284 $generated@@286 $generated@@287))
)) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@238 (type $generated@@288))))
(let (($generated@@290 ($generated@@237 (type $generated@@288))))
(= (type ($generated@@285 $generated@@288)) ($generated@@71 $generated@@290 $generated@@289))))
 :pattern ( ($generated@@285 $generated@@288))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (= (type $generated@@291) ($generated@@236 $generated@@211 $generated@@211)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) $generated@@61)) (= (type $generated@@294) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@291 ($generated@@284 $generated@@292 $generated@@293) $generated@@294) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@211) ($generated@@0 ($generated@@76 ($generated@@234 $generated@@291) $generated@@295))) (and ($generated@@209 ($generated@@76 ($generated@@285 $generated@@291) $generated@@295) $generated@@293 $generated@@294) ($generated@@209 $generated@@295 $generated@@292 $generated@@294)))
 :pattern ( ($generated@@76 ($generated@@285 $generated@@291) $generated@@295))
 :pattern ( ($generated@@76 ($generated@@234 $generated@@291) $generated@@295))
))))
 :pattern ( ($generated@@69 $generated@@291 ($generated@@284 $generated@@292 $generated@@293) $generated@@294))
)))
(assert  (and (forall (($generated@@298 T@U) ) (! (= (type ($generated@@296 $generated@@298)) $generated@@186)
 :pattern ( ($generated@@296 $generated@@298))
)) (= (type $generated@@297) $generated@@186)))
(assert (forall (($generated@@299 T@U) ($generated@@300 Int) ) (!  (=> (= (type $generated@@299) $generated@@186) (= ($generated@@184 $generated@@299 $generated@@300) ($generated@@184 $generated@@297 $generated@@300)))
 :pattern ( ($generated@@184 ($generated@@296 $generated@@299) $generated@@300))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@71 $generated@@302 $generated@@4))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@238 (type $generated@@303))))
(let (($generated@@305 ($generated@@237 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@236 $generated@@305 $generated@@304)) (= (= $generated@@303 ($generated@@235 $generated@@305 $generated@@304)) (= ($generated@@234 $generated@@303) ($generated@@301 $generated@@305))))))
 :pattern ( ($generated@@234 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 Int) ) (!  (=> (= (type $generated@@306) $generated@@186) (= ($generated@@184 ($generated@@185 $generated@@306) $generated@@307) ($generated@@184 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@306) $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@202 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@201 $generated@@309)) (<= 0 ($generated@@200 $generated@@308))))
 :pattern ( ($generated@@200 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@61)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@61) (= (type $generated@@313) $generated@@61)) (= ($generated@@310 ($generated@@272 $generated@@312 $generated@@313)) $generated@@312))
 :pattern ( ($generated@@272 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@61)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@61) (= (type $generated@@317) $generated@@61)) (= ($generated@@314 ($generated@@272 $generated@@316 $generated@@317)) $generated@@317))
 :pattern ( ($generated@@272 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@61) (= (type $generated@@319) $generated@@61)) (= ($generated@@67 ($generated@@272 $generated@@318 $generated@@319)) $generated@@58))
 :pattern ( ($generated@@272 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@61)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@61) (= (type $generated@@323) $generated@@61)) (= ($generated@@320 ($generated@@284 $generated@@322 $generated@@323)) $generated@@322))
 :pattern ( ($generated@@284 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@61)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@61) (= (type $generated@@327) $generated@@61)) (= ($generated@@324 ($generated@@284 $generated@@326 $generated@@327)) $generated@@327))
 :pattern ( ($generated@@284 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@67 ($generated@@284 $generated@@328 $generated@@329)) $generated@@59))
 :pattern ( ($generated@@284 $generated@@328 $generated@@329))
)))
(assert  (and (forall (($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@330 $generated@@332))
)) (forall (($generated@@333 T@U) ($generated@@334 Int) ) (! (let (($generated@@335 ($generated@@202 (type $generated@@333))))
(= (type ($generated@@331 $generated@@333 $generated@@334)) $generated@@335))
 :pattern ( ($generated@@331 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@201 $generated@@211)) (= (type $generated@@337) $generated@@61)) (= (type $generated@@338) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@336 ($generated@@330 $generated@@337) $generated@@338) (forall (($generated@@339 Int) ) (!  (=> (and (<= 0 $generated@@339) (< $generated@@339 ($generated@@200 $generated@@336))) ($generated@@209 ($generated@@331 $generated@@336 $generated@@339) $generated@@337 $generated@@338))
 :pattern ( ($generated@@331 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@69 $generated@@336 ($generated@@330 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@341 Int) ) (! (= ($generated@@340 ($generated@@70 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@70 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@61)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@61) (= ($generated@@342 ($generated@@260 $generated@@344)) $generated@@344))
 :pattern ( ($generated@@260 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@61) (= ($generated@@67 ($generated@@260 $generated@@345)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (= (type ($generated@@346 $generated@@347)) $generated@@61)
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@61) (= ($generated@@346 ($generated@@266 $generated@@348)) $generated@@348))
 :pattern ( ($generated@@266 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@61) (= ($generated@@67 ($generated@@266 $generated@@349)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@349))
)))
(assert  (and (forall (($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@352)) $generated@@61)
 :pattern ( ($generated@@350 $generated@@352))
)) (forall (($generated@@353 T@U) ) (! (= (type ($generated@@351 $generated@@353)) $generated@@61)
 :pattern ( ($generated@@351 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@61) (= ($generated@@351 ($generated@@350 $generated@@354)) $generated@@354))
 :pattern ( ($generated@@350 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@61) (= ($generated@@67 ($generated@@350 $generated@@355)) $generated@@56))
 :pattern ( ($generated@@350 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (= (type ($generated@@356 $generated@@357)) $generated@@61)
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@356 ($generated@@330 $generated@@358)) $generated@@358))
 :pattern ( ($generated@@330 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@61) (= ($generated@@67 ($generated@@330 $generated@@359)) $generated@@57))
 :pattern ( ($generated@@330 $generated@@359))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated@@360 $generated@@364 ($generated@@210 $generated@@363)) $generated@@363))
 :pattern ( ($generated@@210 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@76 ($generated@@301 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@76 ($generated@@301 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@71 $generated@@211 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@367 ($generated@@350 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@211) (< 0 ($generated ($generated@@76 $generated@@367 $generated@@370)))) ($generated@@209 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@76 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@69 $generated@@367 ($generated@@350 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@210 ($generated@@8 ($generated@@188 $generated@@371))) ($generated@@193 ($generated@@210 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@210 ($generated@@8 ($generated@@188 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@210 ($generated@@193 $generated@@372)) ($generated@@193 ($generated@@210 $generated@@372)))
 :pattern ( ($generated@@210 ($generated@@193 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@202 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@201 $generated@@374)) (= ($generated@@200 $generated@@373) 0)) (= $generated@@373 ($generated@@199 $generated@@374))))
 :pattern ( ($generated@@200 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@376) $generated@@2)) ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@69 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@378) $generated@@3)) ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@69 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@380) $generated@@4)) ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@69 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 18))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@381)) ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@385) $generated@@211)) ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@69 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 () T@U)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 () T@U)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () Int)
(declare-fun $generated@@392 (T@U) Bool)
(declare-fun $generated@@393 () T@U)
(declare-fun $generated@@394 (T@U) Bool)
(declare-fun $generated@@395 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@386) $generated@@186) (= (type $generated@@387) $generated@@186)) (= (type $generated@@388) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@389) $generated@@72)) (= (type $generated@@390) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@393) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@395) $generated@@186)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@396  (=> (and (= ($generated@@296 $generated@@386) $generated@@386) (= ($generated@@296 $generated@@387) $generated@@387)) (=> (and (and (= $generated@@388 ($generated@@128 $generated@@389 $generated@@390 $generated@@60 false)) (= $generated@@391 ($generated@@188 18))) (and ($generated@@392 $generated@@393) ($generated@@394 $generated@@393))) (=> (and (and (and (= $generated@@390 $generated@@393) (= $generated@@386 ($generated@@185 $generated@@395))) (and (= $generated@@387 ($generated@@185 ($generated@@185 $generated@@395))) (= ($generated@@296 $generated@@395) $generated@@395))) (and (and ($generated@@69 ($generated@@8 $generated@@391) $generated@@46 $generated@@393) ($generated@@187 $generated@@391)) (and ($generated@@187 $generated@@391) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@184 $generated@@387 $generated@@391))))))
(let (($generated@@397  (=> (and (and ($generated@@392 $generated@@390) ($generated@@394 $generated@@390)) (and (= 1 $generated@@183) (= (ControlFlow 0 3) 2))) $generated@@396)))
$generated@@397)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@238 (Int) Int)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@T T@U T@U) T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@T)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U T@U) Bool)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 () T@T)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Bool)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 12)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@70 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@70 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@67)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@141) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@139 $generated@@140 $generated@@141)) (forall (($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@84) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@140 $generated@@142) $generated@@60))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60))
)))
 :pattern ( ($generated@@139 $generated@@140 $generated@@141))
)))
(assert  (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@84)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@84) (= (type $generated@@146) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@145 $generated@@143 $generated@@146))
)))
(assert  (and (= (type $generated@@147) ($generated@@69 $generated@@2)) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@151)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@153) $generated@@84)) (and ($generated@@148 $generated@@152) (and (not (= $generated@@153 $generated@@144)) (= ($generated@@149 $generated@@153) $generated@@143)))) ($generated@@150 ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147) $generated@@46))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@150 $generated@@154 ($generated@@82 0)))
 :pattern ( ($generated@@150 $generated@@154 ($generated@@82 0)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@67) (= (type $generated@@161) $generated@@67)) (= (type $generated@@162) $generated@@157)) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 16) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@73)
 :pattern ( ($generated@@171 $generated@@173))
)) (= (type $generated@@172) $generated@@67)))
(assert (= ($generated@@171 $generated@@172) $generated@@65))
(assert (= ($generated@@171 $generated@@143) $generated@@65))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@178) $generated@@67)) ($generated@@150 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@150 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@84) (= ($generated@@150 $generated@@179 $generated@@143)  (or (= $generated@@179 $generated@@144) (= ($generated@@149 $generated@@179) $generated@@143))))
 :pattern ( ($generated@@150 $generated@@179 $generated@@143))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 17)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@84 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@70 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@84) (= (type $generated@@230) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@231) ($generated@@69 $generated@@4))) (= (type $generated@@233) $generated@@84)) (= (type $generated@@234) ($generated@@69 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (=> true (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (= (type $generated@@239) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@240) $generated@@84)) (or ($generated@@237 $generated@@239 $generated@@240) (and ($generated@@148 $generated@@239) (and (not (= $generated@@240 $generated@@144)) (and ($generated@@150 $generated@@240 $generated@@172) ($generated@@81 $generated@@240 $generated@@172 $generated@@239)))))) (and (=> ($generated@@236 $generated@@239 $generated@@240) (<= ($generated@@238 0) ($generated ($generated@@90 ($generated@@88 $generated@@239 $generated@@240) $generated@@147)))) (=> (= ($generated ($generated@@90 ($generated@@88 $generated@@239 $generated@@240) $generated@@147)) ($generated@@238 8)) ($generated@@236 $generated@@239 $generated@@240))))
 :pattern ( ($generated@@236 $generated@@239 $generated@@240))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@84) (= (type $generated@@242) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@241 $generated@@172 $generated@@242) ($generated@@81 $generated@@241 $generated@@143 $generated@@242)))
 :pattern ( ($generated@@81 $generated@@241 $generated@@172 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@157)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) $generated@@67)) (= (type $generated@@249) $generated@@166)) (= (type $generated@@250) $generated@@166)) (= ($generated@@150 ($generated@@243 $generated@@249 $generated@@250) ($generated@@156 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@150 ($generated@@243 $generated@@249 $generated@@250) ($generated@@156 $generated@@247 $generated@@248)))
)))
(assert (= ($generated@@76 $generated@@147) 0))
(assert  (and (and (forall (($generated@@254 T@T) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@251 $generated@@254 $generated@@255 $generated@@256)) ($generated@@69 $generated@@254))
 :pattern ( ($generated@@251 $generated@@254 $generated@@255 $generated@@256))
)) (= ($generated@@1 $generated@@253) 18)) (= (type $generated@@252) $generated@@253)))
(assert (= ($generated@@251 $generated@@2 $generated@@252 $generated@@66) $generated@@147))
(assert  (not ($generated@@257 $generated@@147)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@157) (= (type $generated@@259) $generated@@157)) (= ($generated@@163 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@163 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@67)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@263) $generated@@67)) (= ($generated@@150 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@166) ($generated@@0 ($generated@@88 $generated@@262 $generated@@264))) ($generated@@244 $generated@@264 $generated@@263))
 :pattern ( ($generated@@88 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@150 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@67)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@268) $generated@@67)) (= ($generated@@150 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@166) ($generated@@0 ($generated@@88 $generated@@267 $generated@@269))) ($generated@@244 $generated@@269 $generated@@268))
 :pattern ( ($generated@@88 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@150 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@238 $generated@@270) $generated@@270)
 :pattern ( ($generated@@238 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@67) (= (type $generated@@277) $generated@@67)) (= (type $generated@@278) $generated@@166)) (= (type $generated@@279) $generated@@166)) (= (type $generated@@280) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@148 $generated@@280)) (= ($generated@@81 ($generated@@243 $generated@@278 $generated@@279) ($generated@@156 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@81 ($generated@@243 $generated@@278 $generated@@279) ($generated@@156 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@72)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@157) (= ($generated@@155 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@62)))
 :pattern ( ($generated@@155 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@157) ($generated@@155 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@166) (= (type $generated@@286) $generated@@166)) (= $generated@@284 ($generated@@243 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@155 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 19)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert ($generated@@257 $generated@@60))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@166)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@67) (= (type $generated@@299) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@81 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@301) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@302) $generated@@166)) (= (type $generated@@303) $generated@@67)) ($generated@@139 $generated@@300 $generated@@301)) ($generated@@275 $generated@@302 $generated@@303 $generated@@300)) ($generated@@275 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@139 $generated@@300 $generated@@301) ($generated@@275 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@305) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@307) $generated@@67)) ($generated@@139 $generated@@304 $generated@@305)) ($generated@@81 $generated@@306 $generated@@307 $generated@@304)) ($generated@@81 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@139 $generated@@304 $generated@@305) ($generated@@81 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@309) $generated@@84)) (=> (and (and ($generated@@148 $generated@@308) (and (not (= $generated@@309 $generated@@144)) (= ($generated@@149 $generated@@309) $generated@@143))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@308 $generated@@309) $generated@@60))) ($generated@@81 ($generated@@90 ($generated@@88 $generated@@308 $generated@@309) $generated@@147) $generated@@46 $generated@@308)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@308 $generated@@309) $generated@@147))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@83 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@86 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@83 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@88 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 20)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@83 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@88 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@88 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 21)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@83 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@88 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@88 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@354) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@352 $generated@@353 $generated@@354)) (and ($generated@@139 $generated@@353 $generated@@354) (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@70 (type $generated@@356))))
 (=> (and (and (= (type $generated@@355) $generated@@84) (= (type $generated@@356) ($generated@@69 $generated@@357))) (not ($generated@@257 $generated@@356))) (= ($generated@@90 ($generated@@88 $generated@@353 $generated@@355) $generated@@356) ($generated@@90 ($generated@@88 $generated@@354 $generated@@355) $generated@@356))))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@354 $generated@@355) $generated@@356))
))))
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@86 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@83 $generated@@359 $generated@@2)) (= ($generated@@175 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@88 $generated@@358 $generated@@360))) (<= ($generated ($generated@@88 $generated@@358 $generated@@360)) ($generated@@310 $generated@@358))))
 :pattern ( ($generated@@88 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@175 $generated@@358))
)))
(assert (forall (($generated@@362 T@T) ($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@166) ($generated@@244 $generated@@364 $generated@@172)) (and (= ($generated@@295 ($generated@@361 $generated@@84 $generated@@364)) $generated@@364) ($generated@@150 ($generated@@361 $generated@@84 $generated@@364) $generated@@172)))
 :pattern ( ($generated@@244 $generated@@364 $generated@@172))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@166) ($generated@@244 $generated@@365 $generated@@143)) (and (= ($generated@@295 ($generated@@361 $generated@@84 $generated@@365)) $generated@@365) ($generated@@150 ($generated@@361 $generated@@84 $generated@@365) $generated@@143)))
 :pattern ( ($generated@@244 $generated@@365 $generated@@143))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@84) (= ($generated@@150 $generated@@366 $generated@@172)  (and ($generated@@150 $generated@@366 $generated@@143) (not (= $generated@@366 $generated@@144)))))
 :pattern ( ($generated@@150 $generated@@366 $generated@@172))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@320 (type $generated@@367))))
(let (($generated@@369 ($generated@@319 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@318 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@317 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@88 ($generated@@316 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@316 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@320 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@83 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@320 (type $generated@@374))))
(let (($generated@@376 ($generated@@319 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@318 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@317 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@88 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@338 (type $generated@@378))))
(let (($generated@@380 ($generated@@337 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@336 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@335 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@88 ($generated@@334 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@334 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@338 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@83 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@338 (type $generated@@385))))
(let (($generated@@387 ($generated@@337 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@336 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@335 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@88 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@390) $generated@@67)) (= ($generated@@150 $generated@@389 ($generated@@174 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@389 $generated@@391)))) ($generated@@244 $generated@@391 $generated@@390))
 :pattern ( ($generated@@88 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@150 $generated@@389 ($generated@@174 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@392 ($generated@@260 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@166) ($generated@@0 ($generated@@88 $generated@@392 $generated@@395))) ($generated@@275 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@88 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@81 $generated@@392 ($generated@@260 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@396 ($generated@@265 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@166) ($generated@@0 ($generated@@88 $generated@@396 $generated@@399))) ($generated@@275 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@88 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@81 $generated@@396 ($generated@@265 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@88 ($generated@@311 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@88 ($generated@@311 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@320 (type $generated@@405))))
(let (($generated@@407 ($generated@@319 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@83 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@318 $generated@@166 $generated@@166)) (= (type $generated@@409) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@88 ($generated@@316 $generated@@408) ($generated@@164 ($generated@@361 $generated@@157 $generated@@409)))) (= ($generated@@88 ($generated@@403 $generated@@408) ($generated@@164 ($generated@@361 $generated@@157 $generated@@409))) ($generated@@165 ($generated@@361 $generated@@157 $generated@@409))))))
 :pattern ( ($generated@@88 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@338 (type $generated@@413))))
(let (($generated@@415 ($generated@@337 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@83 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@336 $generated@@166 $generated@@166)) (= (type $generated@@417) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@88 ($generated@@334 $generated@@416) ($generated@@164 ($generated@@361 $generated@@157 $generated@@417)))) (= ($generated@@88 ($generated@@411 $generated@@416) ($generated@@164 ($generated@@361 $generated@@157 $generated@@417))) ($generated@@165 ($generated@@361 $generated@@157 $generated@@417))))))
 :pattern ( ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@319 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@318 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@88 ($generated@@371 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@88 ($generated@@316 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@88 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@88 ($generated@@316 $generated@@418) $generated@@422))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@88 ($generated@@371 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@337 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@336 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@88 ($generated@@382 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@88 ($generated@@334 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@88 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@88 ($generated@@334 $generated@@423) $generated@@427))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@88 ($generated@@382 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@67)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@318 $generated@@166 $generated@@166)) (= (type $generated@@432) $generated@@67)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@316 $generated@@431) $generated@@435))) (and ($generated@@275 ($generated@@88 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@275 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@88 ($generated@@316 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@81 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@67)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@336 $generated@@166 $generated@@166)) (= (type $generated@@440) $generated@@67)) (= (type $generated@@441) $generated@@67)) (= (type $generated@@442) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@334 $generated@@439) $generated@@443))) (and ($generated@@275 ($generated@@88 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@275 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@88 ($generated@@334 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@81 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@445) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@446) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@444 $generated@@446))) (and ($generated@@139 $generated@@444 $generated@@445) ($generated@@139 $generated@@445 $generated@@446))) ($generated@@139 $generated@@444 $generated@@446))
 :pattern ( ($generated@@139 $generated@@444 $generated@@445) ($generated@@139 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@83 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@338 (type $generated@@449))))
(let (($generated@@451 ($generated@@337 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@336 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@335 $generated@@451 $generated@@450)) (= ($generated@@334 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@334 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@338 (type $generated@@452))))
(let (($generated@@454 ($generated@@337 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@336 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@335 $generated@@454 $generated@@453)) (= ($generated@@382 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@382 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@338 (type $generated@@455))))
(let (($generated@@457 ($generated@@337 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@336 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@335 $generated@@457 $generated@@456)) (= ($generated@@410 $generated@@455) ($generated@@447 $generated@@166))))))
 :pattern ( ($generated@@410 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@320 (type $generated@@458))))
(let (($generated@@460 ($generated@@319 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@318 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@317 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@166) (= (type $generated@@462) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@402 $generated@@458) ($generated@@295 ($generated@@243 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@402 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@338 (type $generated@@463))))
(let (($generated@@465 ($generated@@337 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@336 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@335 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@166) (= (type $generated@@467) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@410 $generated@@463) ($generated@@295 ($generated@@243 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@410 $generated@@463))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@253)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@T) ) (!  (=> (and (= (type $generated@@470) $generated@@253) (= (type $generated@@471) $generated@@71)) (and (= ($generated@@468 ($generated@@251 $generated@@472 $generated@@470 $generated@@471)) $generated@@470) (= ($generated@@79 ($generated@@251 $generated@@472 $generated@@470 $generated@@471)) $generated@@471)))
 :pattern ( ($generated@@251 $generated@@472 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@166) ($generated@@244 $generated@@473 $generated@@46)) (and (= ($generated@@295 ($generated@@361 $generated@@2 $generated@@473)) $generated@@473) ($generated@@150 ($generated@@361 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@166) ($generated@@244 $generated@@474 $generated@@47)) (and (= ($generated@@295 ($generated@@361 $generated@@3 $generated@@474)) $generated@@474) ($generated@@150 ($generated@@361 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@166) ($generated@@244 $generated@@475 $generated@@44)) (and (= ($generated@@295 ($generated@@361 $generated@@4 $generated@@475)) $generated@@475) ($generated@@150 ($generated@@361 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@475 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@476) 22))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@166) ($generated@@244 $generated@@477 $generated@@45)) (and (= ($generated@@295 ($generated@@361 $generated@@476 $generated@@477)) $generated@@477) ($generated@@150 ($generated@@361 $generated@@476 $generated@@477) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@477 $generated@@45))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@244 ($generated@@295 $generated@@478) $generated@@479) ($generated@@150 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@244 ($generated@@295 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@86 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@83 $generated@@481 $generated@@2)) (<= 0 ($generated@@310 $generated@@480))))
 :pattern ( ($generated@@310 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@290 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@289 $generated@@483)) (<= 0 ($generated@@288 $generated@@482))))
 :pattern ( ($generated@@288 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@67) (= (type $generated@@487) $generated@@67)) (= ($generated@@484 ($generated@@428 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@428 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@428 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@428 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@77 ($generated@@428 $generated@@492 $generated@@493)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@67) (= (type $generated@@497) $generated@@67)) (= ($generated@@494 ($generated@@436 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@436 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@67) (= (type $generated@@501) $generated@@67)) (= ($generated@@498 ($generated@@436 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@436 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@77 ($generated@@436 $generated@@502 $generated@@503)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@166) (= (type $generated@@505) $generated@@166)) (= ($generated@@281 ($generated@@243 $generated@@504 $generated@@505)) $generated@@62))
 :pattern ( ($generated@@243 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@506 ($generated@@156 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@156 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@67) (= (type $generated@@513) $generated@@67)) (= ($generated@@510 ($generated@@156 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@156 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@166) (= (type $generated@@515) $generated@@166)) (= ($generated@@164 ($generated@@243 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@243 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@166) (= (type $generated@@517) $generated@@166)) (= ($generated@@165 ($generated@@243 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@243 $generated@@516 $generated@@517))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@290 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@289 $generated@@166)) (= (type $generated@@525) $generated@@67)) (= (type $generated@@526) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@288 $generated@@524))) ($generated@@275 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@81 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@82 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@82 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@67)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@67) (= ($generated@@530 ($generated@@260 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@260 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@77 ($generated@@260 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@67)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@67) (= ($generated@@534 ($generated@@265 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@265 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@67) (= ($generated@@77 ($generated@@265 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@174 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@174 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@67) (= ($generated@@77 ($generated@@174 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@67)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@67) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@77 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@361 $generated@@547 ($generated@@295 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@295 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@318 $generated@@166 $generated@@166)) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) (= ($generated@@150 $generated@@548 ($generated@@428 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@316 $generated@@548) $generated@@551))) (and ($generated@@244 ($generated@@88 ($generated@@403 $generated@@548) $generated@@551) $generated@@550) ($generated@@244 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@548) $generated@@551))
 :pattern ( ($generated@@88 ($generated@@316 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@150 $generated@@548 ($generated@@428 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@336 $generated@@166 $generated@@166)) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) (= ($generated@@150 $generated@@552 ($generated@@436 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@334 $generated@@552) $generated@@555))) (and ($generated@@244 ($generated@@88 ($generated@@411 $generated@@552) $generated@@555) $generated@@554) ($generated@@244 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@552) $generated@@555))
 :pattern ( ($generated@@88 ($generated@@334 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@150 $generated@@552 ($generated@@436 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@558) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@559) $generated@@84)) (=> (and (and (and ($generated@@148 $generated@@557) ($generated@@148 $generated@@558)) (and (not (= $generated@@559 $generated@@144)) ($generated@@150 $generated@@559 $generated@@172))) (and ($generated@@556 $generated@@557) ($generated@@139 $generated@@557 $generated@@558))) (=> (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@70 (type $generated@@561))))
 (=> (and (and (= (type $generated@@560) $generated@@84) (= (type $generated@@561) ($generated@@69 $generated@@562))) (and (not (= $generated@@560 $generated@@144)) (= $generated@@560 $generated@@559))) (= ($generated@@90 ($generated@@88 $generated@@557 $generated@@560) $generated@@561) ($generated@@90 ($generated@@88 $generated@@558 $generated@@560) $generated@@561))))
 :no-pattern (type $generated@@560)
 :no-pattern (type $generated@@561)
 :no-pattern ($generated $generated@@560)
 :no-pattern ($generated@@0 $generated@@560)
 :no-pattern ($generated $generated@@561)
 :no-pattern ($generated@@0 $generated@@561)
)) (= ($generated@@236 $generated@@557 $generated@@559) ($generated@@236 $generated@@558 $generated@@559)))))
 :pattern ( ($generated@@556 $generated@@557) ($generated@@139 $generated@@557 $generated@@558) ($generated@@236 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@166) (= (type $generated@@566) $generated@@166)) (< ($generated@@563 $generated@@565) ($generated@@564 ($generated@@243 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@243 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@166) (= (type $generated@@568) $generated@@166)) (< ($generated@@563 $generated@@568) ($generated@@564 ($generated@@243 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@243 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@166) (= (type $generated@@570) $generated@@67)) (= (type $generated@@571) $generated@@67)) ($generated@@244 $generated@@569 ($generated@@428 $generated@@570 $generated@@571))) (and (= ($generated@@295 ($generated@@361 ($generated@@318 $generated@@166 $generated@@166) $generated@@569)) $generated@@569) ($generated@@150 ($generated@@361 ($generated@@318 $generated@@166 $generated@@166) $generated@@569) ($generated@@428 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@244 $generated@@569 ($generated@@428 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@166) (= (type $generated@@573) $generated@@67)) (= (type $generated@@574) $generated@@67)) ($generated@@244 $generated@@572 ($generated@@436 $generated@@573 $generated@@574))) (and (= ($generated@@295 ($generated@@361 ($generated@@336 $generated@@166 $generated@@166) $generated@@572)) $generated@@572) ($generated@@150 ($generated@@361 ($generated@@336 $generated@@166 $generated@@166) $generated@@572) ($generated@@436 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@244 $generated@@572 ($generated@@436 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) $generated@@166)) ($generated@@244 $generated@@577 ($generated@@156 $generated@@575 $generated@@576))) (and (= ($generated@@295 ($generated@@361 $generated@@157 $generated@@577)) $generated@@577) ($generated@@150 ($generated@@361 $generated@@157 $generated@@577) ($generated@@156 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@244 $generated@@577 ($generated@@156 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@88 ($generated@@447 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@88 ($generated@@447 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@67) (= (type $generated@@581) $generated@@67)) (and (= ($generated@@77 ($generated@@156 $generated@@580 $generated@@581)) $generated@@63) (= ($generated@@171 ($generated@@156 $generated@@580 $generated@@581)) $generated@@64)))
 :pattern ( ($generated@@156 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@157) (= ($generated@@563 ($generated@@295 $generated@@582)) ($generated@@564 $generated@@582)))
 :pattern ( ($generated@@563 ($generated@@295 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@166) ($generated@@244 $generated@@583 ($generated@@82 0))) (and (= ($generated@@295 ($generated@@361 $generated@@2 $generated@@583)) $generated@@583) ($generated@@150 ($generated@@361 ($generated@@83 $generated@@166 $generated@@4) $generated@@583) ($generated@@82 0))))
 :pattern ( ($generated@@244 $generated@@583 ($generated@@82 0)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@166) (= (type $generated@@585) $generated@@67)) ($generated@@244 $generated@@584 ($generated@@260 $generated@@585))) (and (= ($generated@@295 ($generated@@361 ($generated@@83 $generated@@166 $generated@@4) $generated@@584)) $generated@@584) ($generated@@150 ($generated@@361 ($generated@@83 $generated@@166 $generated@@4) $generated@@584) ($generated@@260 $generated@@585))))
 :pattern ( ($generated@@244 $generated@@584 ($generated@@260 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@166) (= (type $generated@@587) $generated@@67)) ($generated@@244 $generated@@586 ($generated@@265 $generated@@587))) (and (= ($generated@@295 ($generated@@361 ($generated@@83 $generated@@166 $generated@@4) $generated@@586)) $generated@@586) ($generated@@150 ($generated@@361 ($generated@@83 $generated@@166 $generated@@4) $generated@@586) ($generated@@265 $generated@@587))))
 :pattern ( ($generated@@244 $generated@@586 ($generated@@265 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@166) (= (type $generated@@589) $generated@@67)) ($generated@@244 $generated@@588 ($generated@@174 $generated@@589))) (and (= ($generated@@295 ($generated@@361 ($generated@@83 $generated@@166 $generated@@2) $generated@@588)) $generated@@588) ($generated@@150 ($generated@@361 ($generated@@83 $generated@@166 $generated@@2) $generated@@588) ($generated@@174 $generated@@589))))
 :pattern ( ($generated@@244 $generated@@588 ($generated@@174 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@166) (= (type $generated@@591) $generated@@67)) ($generated@@244 $generated@@590 ($generated@@518 $generated@@591))) (and (= ($generated@@295 ($generated@@361 ($generated@@289 $generated@@166) $generated@@590)) $generated@@590) ($generated@@150 ($generated@@361 ($generated@@289 $generated@@166) $generated@@590) ($generated@@518 $generated@@591))))
 :pattern ( ($generated@@244 $generated@@590 ($generated@@518 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@595)))
 (=> (and (and (and (= (type $generated@@592) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@593) $generated@@84)) (= (type $generated@@594) ($generated@@69 $generated@@596))) ($generated@@148 ($generated@@89 $generated@@592 $generated@@593 ($generated@@91 ($generated@@88 $generated@@592 $generated@@593) $generated@@594 $generated@@595)))) ($generated@@139 $generated@@592 ($generated@@89 $generated@@592 $generated@@593 ($generated@@91 ($generated@@88 $generated@@592 $generated@@593) $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@89 $generated@@592 $generated@@593 ($generated@@91 ($generated@@88 $generated@@592 $generated@@593) $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@597 ($generated@@174 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@597 $generated@@600)))) ($generated@@275 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@88 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@81 $generated@@597 ($generated@@174 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@157) (= (type $generated@@602) $generated@@67)) (= (type $generated@@603) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@603) (and ($generated@@155 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@67) ($generated@@81 $generated@@601 ($generated@@156 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@81 $generated@@601 ($generated@@156 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@275 ($generated@@164 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@275 ($generated@@164 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@157) (= (type $generated@@606) $generated@@67)) (= (type $generated@@607) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@607) (and ($generated@@155 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@67) ($generated@@81 $generated@@605 ($generated@@156 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@81 $generated@@605 ($generated@@156 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@275 ($generated@@165 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@275 ($generated@@165 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@166) (= (type $generated@@610) $generated@@166)) (= ($generated@@243 ($generated@@271 $generated@@609) ($generated@@271 $generated@@610)) ($generated@@271 ($generated@@243 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@243 ($generated@@271 $generated@@609) ($generated@@271 $generated@@610)))
)))
(assert (forall (($generated@@611 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@238 $generated@@611))) ($generated@@271 ($generated@@295 ($generated@@8 $generated@@611))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@238 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ) (! (= ($generated@@295 ($generated@@271 $generated@@612)) ($generated@@271 ($generated@@295 $generated@@612)))
 :pattern ( ($generated@@295 ($generated@@271 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@290 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@289 $generated@@614)) (= ($generated@@288 $generated@@613) 0)) (= $generated@@613 ($generated@@287 $generated@@614))))
 :pattern ( ($generated@@288 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@616)))
 (=> (and (and (= (type $generated@@615) ($generated@@83 $generated@@618 $generated@@2)) (= (type $generated@@617) $generated@@2)) (<= 0 ($generated $generated@@617))) (= ($generated@@310 ($generated@@89 $generated@@615 $generated@@616 $generated@@617)) (+ (- ($generated@@310 $generated@@615) ($generated ($generated@@88 $generated@@615 $generated@@616))) ($generated $generated@@617)))))
 :pattern ( ($generated@@310 ($generated@@89 $generated@@615 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@620) $generated@@2)) ($generated@@81 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@81 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@622) $generated@@3)) ($generated@@81 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@81 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@624) $generated@@4)) ($generated@@81 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@81 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@626) $generated@@476)) ($generated@@81 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@81 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@628) $generated@@166)) ($generated@@81 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@81 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@289 $generated@@166)) (= (type $generated@@630) $generated@@67)) (= ($generated@@150 $generated@@629 ($generated@@518 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@288 $generated@@629))) ($generated@@244 ($generated@@519 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@519 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@150 $generated@@629 ($generated@@518 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@289 $generated@@166)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@288 $generated@@633))) (< ($generated@@564 ($generated@@361 $generated@@157 ($generated@@519 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@564 ($generated@@361 $generated@@157 ($generated@@519 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@318 $generated@@166 $generated@@166)) (= (type $generated@@636) $generated@@67)) (= (type $generated@@637) $generated@@67)) ($generated@@150 $generated@@635 ($generated@@428 $generated@@636 $generated@@637))) (and (and ($generated@@150 ($generated@@316 $generated@@635) ($generated@@260 $generated@@636)) ($generated@@150 ($generated@@371 $generated@@635) ($generated@@260 $generated@@637))) ($generated@@150 ($generated@@402 $generated@@635) ($generated@@260 ($generated@@156 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@150 $generated@@635 ($generated@@428 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@336 $generated@@166 $generated@@166)) (= (type $generated@@639) $generated@@67)) (= (type $generated@@640) $generated@@67)) ($generated@@150 $generated@@638 ($generated@@436 $generated@@639 $generated@@640))) (and (and ($generated@@150 ($generated@@334 $generated@@638) ($generated@@265 $generated@@639)) ($generated@@150 ($generated@@382 $generated@@638) ($generated@@265 $generated@@640))) ($generated@@150 ($generated@@410 $generated@@638) ($generated@@265 ($generated@@156 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@150 $generated@@638 ($generated@@436 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@150 $generated@@641 $generated@@46))
 :pattern ( ($generated@@150 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@150 $generated@@642 $generated@@47))
 :pattern ( ($generated@@150 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@150 $generated@@643 $generated@@44))
 :pattern ( ($generated@@150 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@476) ($generated@@150 $generated@@644 $generated@@45))
 :pattern ( ($generated@@150 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@166) ($generated@@150 $generated@@645 $generated@@48))
 :pattern ( ($generated@@150 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Bool)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@646) $generated@@84) (= (type $generated@@648) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@647) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@649) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@650) ($generated@@182 $generated@@84 $generated@@4))) (= (type $generated@@652) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@653) $generated@@84)) (= (type $generated@@655) $generated@@84)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@657  (and (=> (= (ControlFlow 0 13) (- 0 15)) true) (and (=> (= (ControlFlow 0 13) (- 0 14)) (not (= $generated@@646 $generated@@144))) (=> (not (= $generated@@646 $generated@@144)) (=> (= (ControlFlow 0 13) (- 0 12)) ($generated@@236 $generated@@647 $generated@@646)))))))
(let (($generated@@658  (and (=> (= (ControlFlow 0 9) (- 0 11)) true) (and (=> (= (ControlFlow 0 9) (- 0 10)) (not (= $generated@@646 $generated@@144))) (=> (and (and ($generated@@81 $generated@@646 $generated@@143 $generated@@647) ($generated@@237 $generated@@647 $generated@@646)) (and ($generated@@237 $generated@@647 $generated@@646) (= (ControlFlow 0 9) (- 0 8)))) ($generated@@236 $generated@@647 $generated@@646))))))
(let (($generated@@659  (and (=> (= (ControlFlow 0 16) (- 0 24)) true) (and (=> (= (ControlFlow 0 16) (- 0 23)) (not (= $generated@@646 $generated@@144))) (=> (not (= $generated@@646 $generated@@144)) (and (=> (= (ControlFlow 0 16) (- 0 22)) ($generated@@236 $generated@@648 $generated@@646)) (=> ($generated@@236 $generated@@648 $generated@@646) (=> (and (and ($generated@@148 $generated@@649) ($generated@@556 $generated@@649)) (and (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@84) (=> (and (not (= $generated@@660 $generated@@144)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@648 $generated@@660) $generated@@60))) (= ($generated@@88 $generated@@649 $generated@@660) ($generated@@88 $generated@@648 $generated@@660))))
 :pattern ( ($generated@@88 $generated@@649 $generated@@660))
)) ($generated@@139 $generated@@648 $generated@@649))) (and (=> (= (ControlFlow 0 16) (- 0 21)) true) (and (=> (= (ControlFlow 0 16) (- 0 20)) (not (= $generated@@646 $generated@@144))) (=> (not (= $generated@@646 $generated@@144)) (and (=> (= (ControlFlow 0 16) (- 0 19)) ($generated@@0 ($generated@@180 $generated@@650 $generated@@646 $generated@@147))) (=> ($generated@@0 ($generated@@180 $generated@@650 $generated@@646 $generated@@147)) (and (=> (= (ControlFlow 0 16) (- 0 18)) true) (and (=> (= (ControlFlow 0 16) (- 0 17)) (not (= $generated@@646 $generated@@144))) (=> (not (= $generated@@646 $generated@@144)) (=> (= $generated@@651 (+ ($generated ($generated@@90 ($generated@@88 $generated@@649 $generated@@646) $generated@@147)) 1)) (=> (and (= $generated@@647 ($generated@@89 $generated@@649 $generated@@646 ($generated@@91 ($generated@@88 $generated@@649 $generated@@646) $generated@@147 ($generated@@8 $generated@@651)))) ($generated@@148 $generated@@647)) (and (=> (= (ControlFlow 0 16) 9) $generated@@658) (=> (= (ControlFlow 0 16) 13) $generated@@657))))))))))))))))))))
(let (($generated@@661  (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@646 $generated@@144))) (=> ($generated@@81 $generated@@646 $generated@@143 $generated@@648) (=> (and ($generated@@237 $generated@@648 $generated@@646) ($generated@@237 $generated@@648 $generated@@646)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@236 $generated@@648 $generated@@646)) (=> ($generated@@236 $generated@@648 $generated@@646) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@646 $generated@@144))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated ($generated@@90 ($generated@@88 $generated@@648 $generated@@646) $generated@@147)) ($generated@@238 8)))))))))))))
(let (($generated@@662  (=> (= $generated@@650 ($generated@@181 $generated@@144 $generated@@652 $generated@@60 false)) (=> (and (and (not (= $generated@@653 $generated@@144)) (and ($generated@@150 $generated@@653 $generated@@172) ($generated@@81 $generated@@653 $generated@@172 $generated@@652))) (and ($generated@@148 $generated@@648) ($generated@@556 $generated@@648))) (=> (and (and (and (not (= $generated@@646 $generated@@144)) (and ($generated@@150 $generated@@646 $generated@@172) ($generated@@81 $generated@@646 $generated@@172 $generated@@648))) ($generated@@237 $generated@@648 $generated@@646)) (and (and ($generated@@236 $generated@@648 $generated@@646) (not ($generated@@0 ($generated@@90 ($generated@@88 $generated@@652 $generated@@646) $generated@@60)))) (and (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@84) (=> (and (not (= $generated@@663 $generated@@144)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@652 $generated@@663) $generated@@60))) (= ($generated@@88 $generated@@648 $generated@@663) ($generated@@88 $generated@@652 $generated@@663))))
 :pattern ( ($generated@@88 $generated@@648 $generated@@663))
)) ($generated@@139 $generated@@652 $generated@@648)))) (and (=> (= (ControlFlow 0 25) 16) $generated@@659) (=> (= (ControlFlow 0 25) 2) $generated@@661)))))))
(let (($generated@@664  (=> (and ($generated@@148 $generated@@652) ($generated@@556 $generated@@652)) (=> (and (and (=> $generated@@654 (and ($generated@@150 $generated@@655 $generated@@172) ($generated@@81 $generated@@655 $generated@@172 $generated@@652))) true) (and (= 1 $generated@@656) (= (ControlFlow 0 26) 25))) $generated@@662))))
$generated@@664)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 8))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 13) (- 12))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (Int) Int)
(declare-fun $generated@@187 (T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U) Bool)
(declare-fun $generated@@195 (T@T T@U T@U) T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@T)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@231 (T@T) T@U)
(declare-fun $generated@@232 (T@U) Int)
(declare-fun $generated@@233 (T@T) T@T)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@T T@T) T@U)
(declare-fun $generated@@262 (T@T T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@279 (T@T T@T) T@U)
(declare-fun $generated@@280 (T@T T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@296 (T@U T@U) Bool)
(declare-fun $generated@@305 (T@T T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@391 (T@T) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@420 () T@T)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@463 (T@U Int) T@U)
(declare-fun $generated@@472 (T@U) Int)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Bool)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U T@U T@U) T@U)
(declare-fun $generated@@525 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@526 (T@T T@T) T@T)
(declare-fun $generated@@527 (T@T) T@T)
(declare-fun $generated@@528 (T@T) T@T)
(declare-fun $generated@@529 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@582 (T@U T@U) Int)
(declare-fun $generated@@639 (T@U T@U) Bool)
(declare-fun $generated@@642 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 12)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@70 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@70 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@67)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@141) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@139 $generated@@140 $generated@@141)) (forall (($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@84) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@140 $generated@@142) $generated@@60))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60))
)))
 :pattern ( ($generated@@139 $generated@@140 $generated@@141))
)))
(assert  (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@84)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@84) (= (type $generated@@146) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@145 $generated@@143 $generated@@146))
)))
(assert  (and (= (type $generated@@147) ($generated@@69 $generated@@2)) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@151)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@153) $generated@@84)) (and ($generated@@148 $generated@@152) (and (not (= $generated@@153 $generated@@144)) (= ($generated@@149 $generated@@153) $generated@@143)))) ($generated@@150 ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147) $generated@@46))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@150 $generated@@154 ($generated@@82 0)))
 :pattern ( ($generated@@150 $generated@@154 ($generated@@82 0)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@67) (= (type $generated@@161) $generated@@67)) (= (type $generated@@162) $generated@@157)) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 16) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@73)
 :pattern ( ($generated@@171 $generated@@173))
)) (= (type $generated@@172) $generated@@67)))
(assert (= ($generated@@171 $generated@@172) $generated@@65))
(assert (= ($generated@@171 $generated@@143) $generated@@65))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@178) $generated@@67)) ($generated@@150 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@150 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@84) (= ($generated@@150 $generated@@179 $generated@@143)  (or (= $generated@@179 $generated@@144) (= ($generated@@149 $generated@@179) $generated@@143))))
 :pattern ( ($generated@@150 $generated@@179 $generated@@143))
)))
(assert  (=> true (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@184) $generated@@84)) (or ($generated@@181 $generated@@183 $generated@@184) (and ($generated@@148 $generated@@183) (and (not (= $generated@@184 $generated@@144)) (and ($generated@@150 $generated@@184 $generated@@172) ($generated@@81 $generated@@184 $generated@@172 $generated@@183)))))) (and (=> ($generated@@180 $generated@@183 $generated@@184) (<= ($generated@@182 0) ($generated ($generated@@90 ($generated@@88 $generated@@183 $generated@@184) $generated@@147)))) (=> (= ($generated ($generated@@90 ($generated@@88 $generated@@183 $generated@@184) $generated@@147)) ($generated@@182 8)) ($generated@@180 $generated@@183 $generated@@184))))
 :pattern ( ($generated@@180 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (= (type $generated@@185) $generated@@84) (= (type $generated@@186) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@185 $generated@@172 $generated@@186) ($generated@@81 $generated@@185 $generated@@143 $generated@@186)))
 :pattern ( ($generated@@81 $generated@@185 $generated@@172 $generated@@186))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= (type ($generated@@187 $generated@@189 $generated@@190)) $generated@@157)
 :pattern ( ($generated@@187 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (and (= (type $generated@@191) $generated@@67) (= (type $generated@@192) $generated@@67)) (= (type $generated@@193) $generated@@166)) (= (type $generated@@194) $generated@@166)) (= ($generated@@150 ($generated@@187 $generated@@193 $generated@@194) ($generated@@156 $generated@@191 $generated@@192))  (and ($generated@@188 $generated@@193 $generated@@191) ($generated@@188 $generated@@194 $generated@@192))))
 :pattern ( ($generated@@150 ($generated@@187 $generated@@193 $generated@@194) ($generated@@156 $generated@@191 $generated@@192)))
)))
(assert (= ($generated@@76 $generated@@147) 0))
(assert  (and (and (forall (($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= (type ($generated@@195 $generated@@198 $generated@@199 $generated@@200)) ($generated@@69 $generated@@198))
 :pattern ( ($generated@@195 $generated@@198 $generated@@199 $generated@@200))
)) (= ($generated@@1 $generated@@197) 17)) (= (type $generated@@196) $generated@@197)))
(assert (= ($generated@@195 $generated@@2 $generated@@196 $generated@@66) $generated@@147))
(assert  (not ($generated@@201 $generated@@147)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@157) (= (type $generated@@203) $generated@@157)) (= ($generated@@163 $generated@@202 $generated@@203) (= $generated@@202 $generated@@203)))
 :pattern ( ($generated@@163 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@67)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@207) $generated@@67)) (= ($generated@@150 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@166) ($generated@@0 ($generated@@88 $generated@@206 $generated@@208))) ($generated@@188 $generated@@208 $generated@@207))
 :pattern ( ($generated@@88 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@150 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (= (type ($generated@@209 $generated@@210)) $generated@@67)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (= (type $generated@@211) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@212) $generated@@67)) (= ($generated@@150 $generated@@211 ($generated@@209 $generated@@212)) (forall (($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@166) ($generated@@0 ($generated@@88 $generated@@211 $generated@@213))) ($generated@@188 $generated@@213 $generated@@212))
 :pattern ( ($generated@@88 $generated@@211 $generated@@213))
))))
 :pattern ( ($generated@@150 $generated@@211 ($generated@@209 $generated@@212)))
)))
(assert (forall (($generated@@214 Int) ) (! (= ($generated@@182 $generated@@214) $generated@@214)
 :pattern ( ($generated@@182 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (let (($generated@@217 (type $generated@@216)))
(= (type ($generated@@215 $generated@@216)) $generated@@217))
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (= ($generated@@215 $generated@@218) $generated@@218)
 :pattern ( ($generated@@215 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@220) $generated@@67) (= (type $generated@@221) $generated@@67)) (= (type $generated@@222) $generated@@166)) (= (type $generated@@223) $generated@@166)) (= (type $generated@@224) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@148 $generated@@224)) (= ($generated@@81 ($generated@@187 $generated@@222 $generated@@223) ($generated@@156 $generated@@220 $generated@@221) $generated@@224)  (and ($generated@@219 $generated@@222 $generated@@220 $generated@@224) ($generated@@219 $generated@@223 $generated@@221 $generated@@224))))
 :pattern ( ($generated@@81 ($generated@@187 $generated@@222 $generated@@223) ($generated@@156 $generated@@220 $generated@@221) $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@72)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= (type $generated@@227) $generated@@157) (= ($generated@@155 $generated@@227) (= ($generated@@225 $generated@@227) $generated@@62)))
 :pattern ( ($generated@@155 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@157) ($generated@@155 $generated@@228)) (exists (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (and (and (= (type $generated@@229) $generated@@166) (= (type $generated@@230) $generated@@166)) (= $generated@@228 ($generated@@187 $generated@@229 $generated@@230)))
 :no-pattern (type $generated@@229)
 :no-pattern (type $generated@@230)
 :no-pattern ($generated $generated@@229)
 :no-pattern ($generated@@0 $generated@@229)
 :no-pattern ($generated $generated@@230)
 :no-pattern ($generated@@0 $generated@@230)
)))
 :pattern ( ($generated@@155 $generated@@228))
)))
(assert  (and (and (forall (($generated@@235 T@T) ) (= ($generated@@1 ($generated@@233 $generated@@235)) 18)) (forall (($generated@@236 T@T) ) (! (= ($generated@@234 ($generated@@233 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
))) (forall (($generated@@237 T@T) ) (! (= (type ($generated@@231 $generated@@237)) ($generated@@233 $generated@@237))
 :pattern ( ($generated@@231 $generated@@237))
))))
(assert (forall (($generated@@238 T@T) ) (! (= ($generated@@232 ($generated@@231 $generated@@238)) 0)
 :pattern ( ($generated@@231 $generated@@238))
)))
(assert ($generated@@201 $generated@@60))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@166)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@219 ($generated@@239 $generated@@241) $generated@@242 $generated@@243) ($generated@@81 $generated@@241 $generated@@242 $generated@@243)))
 :pattern ( ($generated@@219 ($generated@@239 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@245) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@246) $generated@@166)) (= (type $generated@@247) $generated@@67)) ($generated@@139 $generated@@244 $generated@@245)) ($generated@@219 $generated@@246 $generated@@247 $generated@@244)) ($generated@@219 $generated@@246 $generated@@247 $generated@@245))
 :pattern ( ($generated@@139 $generated@@244 $generated@@245) ($generated@@219 $generated@@246 $generated@@247 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@248) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@249) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@251) $generated@@67)) ($generated@@139 $generated@@248 $generated@@249)) ($generated@@81 $generated@@250 $generated@@251 $generated@@248)) ($generated@@81 $generated@@250 $generated@@251 $generated@@249))
 :pattern ( ($generated@@139 $generated@@248 $generated@@249) ($generated@@81 $generated@@250 $generated@@251 $generated@@248))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@253) $generated@@84)) (=> (and (and ($generated@@148 $generated@@252) (and (not (= $generated@@253 $generated@@144)) (= ($generated@@149 $generated@@253) $generated@@143))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@252 $generated@@253) $generated@@60))) ($generated@@81 ($generated@@90 ($generated@@88 $generated@@252 $generated@@253) $generated@@147) $generated@@46 $generated@@252)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@252 $generated@@253) $generated@@147))
)))
(assert (forall (($generated@@256 T@T) ) (! (= (type ($generated@@255 $generated@@256)) ($generated@@83 $generated@@256 $generated@@2))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@86 (type $generated@@257))))
 (=> (= (type $generated@@257) ($generated@@83 $generated@@258 $generated@@2)) (and (= (= ($generated@@254 $generated@@257) 0) (= $generated@@257 ($generated@@255 $generated@@258))) (=> (not (= ($generated@@254 $generated@@257) 0)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) (< 0 ($generated ($generated@@88 $generated@@257 $generated@@259))))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert  (and (and (and (and (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@265 $generated@@266)) 19)) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@267 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@262 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= ($generated@@264 ($generated@@262 $generated@@269 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@262 $generated@@269 $generated@@270))
))) (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@263 (type $generated@@271))))
(= (type ($generated@@260 $generated@@271)) ($generated@@83 $generated@@272 $generated@@4)))
 :pattern ( ($generated@@260 $generated@@271))
))) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= (type ($generated@@261 $generated@@273 $generated@@274)) ($generated@@262 $generated@@273 $generated@@274))
 :pattern ( ($generated@@261 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@T) ) (! (let (($generated@@277 (type $generated@@275)))
 (not ($generated@@0 ($generated@@88 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275))))
 :pattern ( (let (($generated@@277 (type $generated@@275)))
($generated@@88 ($generated@@260 ($generated@@261 $generated@@277 $generated@@276)) $generated@@275)))
)))
(assert  (and (and (and (and (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@283 $generated@@284)) 20)) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@285 $generated@@286)) $generated@@285)
 :pattern ( ($generated@@280 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@280 $generated@@287 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@280 $generated@@287 $generated@@288))
))) (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@281 (type $generated@@289))))
(= (type ($generated@@278 $generated@@289)) ($generated@@83 $generated@@290 $generated@@4)))
 :pattern ( ($generated@@278 $generated@@289))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= (type ($generated@@279 $generated@@291 $generated@@292)) ($generated@@280 $generated@@291 $generated@@292))
 :pattern ( ($generated@@279 $generated@@291 $generated@@292))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@T) ) (! (let (($generated@@295 (type $generated@@293)))
 (not ($generated@@0 ($generated@@88 ($generated@@278 ($generated@@279 $generated@@295 $generated@@294)) $generated@@293))))
 :pattern ( (let (($generated@@295 (type $generated@@293)))
($generated@@88 ($generated@@278 ($generated@@279 $generated@@295 $generated@@294)) $generated@@293)))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (= (type $generated@@297) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@298) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@296 $generated@@297 $generated@@298)) (and ($generated@@139 $generated@@297 $generated@@298) (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@70 (type $generated@@300))))
 (=> (and (and (= (type $generated@@299) $generated@@84) (= (type $generated@@300) ($generated@@69 $generated@@301))) (not ($generated@@201 $generated@@300))) (= ($generated@@90 ($generated@@88 $generated@@297 $generated@@299) $generated@@300) ($generated@@90 ($generated@@88 $generated@@298 $generated@@299) $generated@@300))))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@298 $generated@@299) $generated@@300))
))))
 :pattern ( ($generated@@296 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@86 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@83 $generated@@303 $generated@@2)) (= ($generated@@175 $generated@@302) (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@303) (and (<= 0 ($generated ($generated@@88 $generated@@302 $generated@@304))) (<= ($generated ($generated@@88 $generated@@302 $generated@@304)) ($generated@@254 $generated@@302))))
 :pattern ( ($generated@@88 $generated@@302 $generated@@304))
)))))
 :pattern ( ($generated@@175 $generated@@302))
)))
(assert (forall (($generated@@306 T@T) ($generated@@307 T@U) ) (! (= (type ($generated@@305 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@305 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@166) ($generated@@188 $generated@@308 $generated@@172)) (and (= ($generated@@239 ($generated@@305 $generated@@84 $generated@@308)) $generated@@308) ($generated@@150 ($generated@@305 $generated@@84 $generated@@308) $generated@@172)))
 :pattern ( ($generated@@188 $generated@@308 $generated@@172))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@166) ($generated@@188 $generated@@309 $generated@@143)) (and (= ($generated@@239 ($generated@@305 $generated@@84 $generated@@309)) $generated@@309) ($generated@@150 ($generated@@305 $generated@@84 $generated@@309) $generated@@143)))
 :pattern ( ($generated@@188 $generated@@309 $generated@@143))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@84) (= ($generated@@150 $generated@@310 $generated@@172)  (and ($generated@@150 $generated@@310 $generated@@143) (not (= $generated@@310 $generated@@144)))))
 :pattern ( ($generated@@150 $generated@@310 $generated@@172))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@264 (type $generated@@311))))
(let (($generated@@313 ($generated@@263 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@262 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@261 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@88 ($generated@@260 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@260 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@264 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@83 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@264 (type $generated@@318))))
(let (($generated@@320 ($generated@@263 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@262 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@261 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@88 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@282 (type $generated@@322))))
(let (($generated@@324 ($generated@@281 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@280 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@279 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@88 ($generated@@278 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@278 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@282 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@83 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@282 (type $generated@@329))))
(let (($generated@@331 ($generated@@281 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@280 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@279 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@88 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@334) $generated@@67)) (= ($generated@@150 $generated@@333 ($generated@@174 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@333 $generated@@335)))) ($generated@@188 $generated@@335 $generated@@334))
 :pattern ( ($generated@@88 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@150 $generated@@333 ($generated@@174 $generated@@334)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@337) $generated@@67)) (= (type $generated@@338) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@336 ($generated@@204 $generated@@337) $generated@@338) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@166) ($generated@@0 ($generated@@88 $generated@@336 $generated@@339))) ($generated@@219 $generated@@339 $generated@@337 $generated@@338))
 :pattern ( ($generated@@88 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@81 $generated@@336 ($generated@@204 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@341) $generated@@67)) (= (type $generated@@342) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@340 ($generated@@209 $generated@@341) $generated@@342) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@166) ($generated@@0 ($generated@@88 $generated@@340 $generated@@343))) ($generated@@219 $generated@@343 $generated@@341 $generated@@342))
 :pattern ( ($generated@@88 $generated@@340 $generated@@343))
))))
 :pattern ( ($generated@@81 $generated@@340 ($generated@@209 $generated@@341) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 (type $generated@@344)))
(= ($generated ($generated@@88 ($generated@@255 $generated@@345) $generated@@344)) 0))
 :pattern ( (let (($generated@@345 (type $generated@@344)))
($generated@@88 ($generated@@255 $generated@@345) $generated@@344)))
)))
(assert  (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@348)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@346 $generated@@348))
)) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@264 (type $generated@@349))))
(let (($generated@@351 ($generated@@263 (type $generated@@349))))
(= (type ($generated@@347 $generated@@349)) ($generated@@83 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@347 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@262 $generated@@166 $generated@@166)) (= (type $generated@@353) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@346 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@88 ($generated@@260 $generated@@352) ($generated@@164 ($generated@@305 $generated@@157 $generated@@353)))) (= ($generated@@88 ($generated@@347 $generated@@352) ($generated@@164 ($generated@@305 $generated@@157 $generated@@353))) ($generated@@165 ($generated@@305 $generated@@157 $generated@@353))))))
 :pattern ( ($generated@@88 ($generated@@346 $generated@@352) $generated@@353))
)))
(assert  (and (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@354 $generated@@356))
)) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@282 (type $generated@@357))))
(let (($generated@@359 ($generated@@281 (type $generated@@357))))
(= (type ($generated@@355 $generated@@357)) ($generated@@83 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@355 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@280 $generated@@166 $generated@@166)) (= (type $generated@@361) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@354 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@88 ($generated@@278 $generated@@360) ($generated@@164 ($generated@@305 $generated@@157 $generated@@361)))) (= ($generated@@88 ($generated@@355 $generated@@360) ($generated@@164 ($generated@@305 $generated@@157 $generated@@361))) ($generated@@165 ($generated@@305 $generated@@157 $generated@@361))))))
 :pattern ( ($generated@@88 ($generated@@354 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(let (($generated@@365 ($generated@@263 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@262 $generated@@365 $generated@@364)) (= ($generated@@0 ($generated@@88 ($generated@@315 $generated@@362) $generated@@363)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) (and ($generated@@0 ($generated@@88 ($generated@@260 $generated@@362) $generated@@366)) (= $generated@@363 ($generated@@88 ($generated@@347 $generated@@362) $generated@@366))))
 :pattern ( ($generated@@88 ($generated@@260 $generated@@362) $generated@@366))
 :pattern ( ($generated@@88 ($generated@@347 $generated@@362) $generated@@366))
))))))
 :pattern ( ($generated@@88 ($generated@@315 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@281 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@280 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@88 ($generated@@326 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@88 ($generated@@278 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@88 ($generated@@355 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@88 ($generated@@278 $generated@@367) $generated@@371))
 :pattern ( ($generated@@88 ($generated@@355 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@88 ($generated@@326 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@67)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@262 $generated@@166 $generated@@166)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@260 $generated@@375) $generated@@379))) (and ($generated@@219 ($generated@@88 ($generated@@347 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@219 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@88 ($generated@@347 $generated@@375) $generated@@379))
 :pattern ( ($generated@@88 ($generated@@260 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@81 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@67)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@280 $generated@@166 $generated@@166)) (= (type $generated@@384) $generated@@67)) (= (type $generated@@385) $generated@@67)) (= (type $generated@@386) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@278 $generated@@383) $generated@@387))) (and ($generated@@219 ($generated@@88 ($generated@@355 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@219 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@88 ($generated@@355 $generated@@383) $generated@@387))
 :pattern ( ($generated@@88 ($generated@@278 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@81 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@388) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@389) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@390) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@388 $generated@@390))) (and ($generated@@139 $generated@@388 $generated@@389) ($generated@@139 $generated@@389 $generated@@390))) ($generated@@139 $generated@@388 $generated@@390))
 :pattern ( ($generated@@139 $generated@@388 $generated@@389) ($generated@@139 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@T) ) (! (= (type ($generated@@391 $generated@@392)) ($generated@@83 $generated@@392 $generated@@4))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@282 (type $generated@@393))))
(let (($generated@@395 ($generated@@281 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@280 $generated@@395 $generated@@394)) (= (= $generated@@393 ($generated@@279 $generated@@395 $generated@@394)) (= ($generated@@278 $generated@@393) ($generated@@391 $generated@@395))))))
 :pattern ( ($generated@@278 $generated@@393))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@282 (type $generated@@396))))
(let (($generated@@398 ($generated@@281 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@280 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@279 $generated@@398 $generated@@397)) (= ($generated@@326 $generated@@396) ($generated@@391 $generated@@397))))))
 :pattern ( ($generated@@326 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@282 (type $generated@@399))))
(let (($generated@@401 ($generated@@281 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@280 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@279 $generated@@401 $generated@@400)) (= ($generated@@354 $generated@@399) ($generated@@391 $generated@@166))))))
 :pattern ( ($generated@@354 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@264 (type $generated@@402))))
(let (($generated@@404 ($generated@@263 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@262 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@261 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (and (and (= (type $generated@@405) $generated@@166) (= (type $generated@@406) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@346 $generated@@402) ($generated@@239 ($generated@@187 $generated@@405 $generated@@406)))))
 :no-pattern (type $generated@@405)
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@346 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@282 (type $generated@@407))))
(let (($generated@@409 ($generated@@281 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@280 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@279 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@166) (= (type $generated@@411) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@354 $generated@@407) ($generated@@239 ($generated@@187 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@354 $generated@@407))
)))
(assert (forall (($generated@@413 T@U) ) (! (= (type ($generated@@412 $generated@@413)) $generated@@197)
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@T) ) (!  (=> (and (= (type $generated@@414) $generated@@197) (= (type $generated@@415) $generated@@71)) (and (= ($generated@@412 ($generated@@195 $generated@@416 $generated@@414 $generated@@415)) $generated@@414) (= ($generated@@79 ($generated@@195 $generated@@416 $generated@@414 $generated@@415)) $generated@@415)))
 :pattern ( ($generated@@195 $generated@@416 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@166) ($generated@@188 $generated@@417 $generated@@46)) (and (= ($generated@@239 ($generated@@305 $generated@@2 $generated@@417)) $generated@@417) ($generated@@150 ($generated@@305 $generated@@2 $generated@@417) $generated@@46)))
 :pattern ( ($generated@@188 $generated@@417 $generated@@46))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@166) ($generated@@188 $generated@@418 $generated@@47)) (and (= ($generated@@239 ($generated@@305 $generated@@3 $generated@@418)) $generated@@418) ($generated@@150 ($generated@@305 $generated@@3 $generated@@418) $generated@@47)))
 :pattern ( ($generated@@188 $generated@@418 $generated@@47))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@166) ($generated@@188 $generated@@419 $generated@@44)) (and (= ($generated@@239 ($generated@@305 $generated@@4 $generated@@419)) $generated@@419) ($generated@@150 ($generated@@305 $generated@@4 $generated@@419) $generated@@44)))
 :pattern ( ($generated@@188 $generated@@419 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@420) 21))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@166) ($generated@@188 $generated@@421 $generated@@45)) (and (= ($generated@@239 ($generated@@305 $generated@@420 $generated@@421)) $generated@@421) ($generated@@150 ($generated@@305 $generated@@420 $generated@@421) $generated@@45)))
 :pattern ( ($generated@@188 $generated@@421 $generated@@45))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (= (type $generated@@423) $generated@@67) (= ($generated@@188 ($generated@@239 $generated@@422) $generated@@423) ($generated@@150 $generated@@422 $generated@@423)))
 :pattern ( ($generated@@188 ($generated@@239 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@86 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@83 $generated@@425 $generated@@2)) (<= 0 ($generated@@254 $generated@@424))))
 :pattern ( ($generated@@254 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@234 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@233 $generated@@427)) (<= 0 ($generated@@232 $generated@@426))))
 :pattern ( ($generated@@232 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@67)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@67) (= (type $generated@@431) $generated@@67)) (= ($generated@@428 ($generated@@372 $generated@@430 $generated@@431)) $generated@@430))
 :pattern ( ($generated@@372 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@67)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@67) (= (type $generated@@435) $generated@@67)) (= ($generated@@432 ($generated@@372 $generated@@434 $generated@@435)) $generated@@435))
 :pattern ( ($generated@@372 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) $generated@@67)) (= ($generated@@77 ($generated@@372 $generated@@436 $generated@@437)) $generated@@58))
 :pattern ( ($generated@@372 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@67)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@67) (= (type $generated@@441) $generated@@67)) (= ($generated@@438 ($generated@@380 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@380 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@67)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@67) (= (type $generated@@445) $generated@@67)) (= ($generated@@442 ($generated@@380 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@380 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@77 ($generated@@380 $generated@@446 $generated@@447)) $generated@@59))
 :pattern ( ($generated@@380 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@166) (= (type $generated@@449) $generated@@166)) (= ($generated@@225 ($generated@@187 $generated@@448 $generated@@449)) $generated@@62))
 :pattern ( ($generated@@187 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@156 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@156 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@454 ($generated@@156 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@156 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@166) (= (type $generated@@459) $generated@@166)) (= ($generated@@164 ($generated@@187 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@187 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@166) (= (type $generated@@461) $generated@@166)) (= ($generated@@165 ($generated@@187 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@187 $generated@@460 $generated@@461))
)))
(assert  (and (forall (($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@464))
)) (forall (($generated@@465 T@U) ($generated@@466 Int) ) (! (let (($generated@@467 ($generated@@234 (type $generated@@465))))
(= (type ($generated@@463 $generated@@465 $generated@@466)) $generated@@467))
 :pattern ( ($generated@@463 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@233 $generated@@166)) (= (type $generated@@469) $generated@@67)) (= (type $generated@@470) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@468 ($generated@@462 $generated@@469) $generated@@470) (forall (($generated@@471 Int) ) (!  (=> (and (<= 0 $generated@@471) (< $generated@@471 ($generated@@232 $generated@@468))) ($generated@@219 ($generated@@463 $generated@@468 $generated@@471) $generated@@469 $generated@@470))
 :pattern ( ($generated@@463 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@81 $generated@@468 ($generated@@462 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 Int) ) (! (= ($generated@@472 ($generated@@82 $generated@@473)) $generated@@473)
 :pattern ( ($generated@@82 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@67) (= ($generated@@474 ($generated@@204 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@204 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@77 ($generated@@204 $generated@@477)) $generated@@54))
 :pattern ( ($generated@@204 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@67) (= ($generated@@478 ($generated@@209 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@209 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@67) (= ($generated@@77 ($generated@@209 $generated@@481)) $generated@@55))
 :pattern ( ($generated@@209 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@174 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@174 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@77 ($generated@@174 $generated@@485)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@462 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@462 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@77 ($generated@@462 $generated@@489)) $generated@@57))
 :pattern ( ($generated@@462 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(= ($generated@@305 $generated@@491 ($generated@@239 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@239 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@262 $generated@@166 $generated@@166)) (= (type $generated@@493) $generated@@67)) (= (type $generated@@494) $generated@@67)) (= ($generated@@150 $generated@@492 ($generated@@372 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@260 $generated@@492) $generated@@495))) (and ($generated@@188 ($generated@@88 ($generated@@347 $generated@@492) $generated@@495) $generated@@494) ($generated@@188 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@88 ($generated@@347 $generated@@492) $generated@@495))
 :pattern ( ($generated@@88 ($generated@@260 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@150 $generated@@492 ($generated@@372 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@280 $generated@@166 $generated@@166)) (= (type $generated@@497) $generated@@67)) (= (type $generated@@498) $generated@@67)) (= ($generated@@150 $generated@@496 ($generated@@380 $generated@@497 $generated@@498)) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@278 $generated@@496) $generated@@499))) (and ($generated@@188 ($generated@@88 ($generated@@355 $generated@@496) $generated@@499) $generated@@498) ($generated@@188 $generated@@499 $generated@@497)))
 :pattern ( ($generated@@88 ($generated@@355 $generated@@496) $generated@@499))
 :pattern ( ($generated@@88 ($generated@@278 $generated@@496) $generated@@499))
))))
 :pattern ( ($generated@@150 $generated@@496 ($generated@@380 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@502) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@503) $generated@@84)) (=> (and (and (and ($generated@@148 $generated@@501) ($generated@@148 $generated@@502)) (and (not (= $generated@@503 $generated@@144)) ($generated@@150 $generated@@503 $generated@@172))) (and ($generated@@500 $generated@@501) ($generated@@139 $generated@@501 $generated@@502))) (=> (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@70 (type $generated@@505))))
 (=> (and (and (= (type $generated@@504) $generated@@84) (= (type $generated@@505) ($generated@@69 $generated@@506))) (and (not (= $generated@@504 $generated@@144)) (= $generated@@504 $generated@@503))) (= ($generated@@90 ($generated@@88 $generated@@501 $generated@@504) $generated@@505) ($generated@@90 ($generated@@88 $generated@@502 $generated@@504) $generated@@505))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
)) (= ($generated@@180 $generated@@501 $generated@@503) ($generated@@180 $generated@@502 $generated@@503)))))
 :pattern ( ($generated@@500 $generated@@501) ($generated@@139 $generated@@501 $generated@@502) ($generated@@180 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@166) (= (type $generated@@510) $generated@@166)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@187 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@187 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@166) (= (type $generated@@512) $generated@@166)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@187 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@187 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@166) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) $generated@@67)) ($generated@@188 $generated@@513 ($generated@@372 $generated@@514 $generated@@515))) (and (= ($generated@@239 ($generated@@305 ($generated@@262 $generated@@166 $generated@@166) $generated@@513)) $generated@@513) ($generated@@150 ($generated@@305 ($generated@@262 $generated@@166 $generated@@166) $generated@@513) ($generated@@372 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@188 $generated@@513 ($generated@@372 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@166) (= (type $generated@@517) $generated@@67)) (= (type $generated@@518) $generated@@67)) ($generated@@188 $generated@@516 ($generated@@380 $generated@@517 $generated@@518))) (and (= ($generated@@239 ($generated@@305 ($generated@@280 $generated@@166 $generated@@166) $generated@@516)) $generated@@516) ($generated@@150 ($generated@@305 ($generated@@280 $generated@@166 $generated@@166) $generated@@516) ($generated@@380 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@188 $generated@@516 ($generated@@380 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@67) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@166)) ($generated@@188 $generated@@521 ($generated@@156 $generated@@519 $generated@@520))) (and (= ($generated@@239 ($generated@@305 $generated@@157 $generated@@521)) $generated@@521) ($generated@@150 ($generated@@305 $generated@@157 $generated@@521) ($generated@@156 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@188 $generated@@521 ($generated@@156 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@88 ($generated@@391 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@88 ($generated@@391 $generated@@523) $generated@@522)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@530 T@T) ($generated@@531 T@T) ) (= ($generated@@1 ($generated@@526 $generated@@530 $generated@@531)) 22)) (forall (($generated@@532 T@T) ($generated@@533 T@T) ) (! (= ($generated@@527 ($generated@@526 $generated@@532 $generated@@533)) $generated@@532)
 :pattern ( ($generated@@526 $generated@@532 $generated@@533))
))) (forall (($generated@@534 T@T) ($generated@@535 T@T) ) (! (= ($generated@@528 ($generated@@526 $generated@@534 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@526 $generated@@534 $generated@@535))
))) (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@528 (type $generated@@536))))
(= (type ($generated@@524 $generated@@536 $generated@@537 $generated@@538)) $generated@@539))
 :pattern ( ($generated@@524 $generated@@536 $generated@@537 $generated@@538))
))) (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(let (($generated@@545 (type $generated@@541)))
(= (type ($generated@@529 $generated@@540 $generated@@541 $generated@@542 $generated@@543)) ($generated@@526 $generated@@545 $generated@@544))))
 :pattern ( ($generated@@529 $generated@@540 $generated@@541 $generated@@542 $generated@@543))
))) (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (! (let (($generated@@550 ($generated@@528 (type $generated@@546))))
 (=> (= (type $generated@@549) $generated@@550) (= ($generated@@524 ($generated@@529 $generated@@546 $generated@@547 $generated@@548 $generated@@549) $generated@@547 $generated@@548) $generated@@549)))
 :weight 0
))) (and (and (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (or (= $generated@@553 $generated@@555) (= ($generated@@524 ($generated@@529 $generated@@552 $generated@@553 $generated@@554 $generated@@551) $generated@@555 $generated@@556) ($generated@@524 $generated@@552 $generated@@555 $generated@@556)))
 :weight 0
)) (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (or (= $generated@@560 $generated@@562) (= ($generated@@524 ($generated@@529 $generated@@558 $generated@@559 $generated@@560 $generated@@557) $generated@@561 $generated@@562) ($generated@@524 $generated@@558 $generated@@561 $generated@@562)))
 :weight 0
))) (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (or true (= ($generated@@524 ($generated@@529 $generated@@564 $generated@@565 $generated@@566 $generated@@563) $generated@@567 $generated@@568) ($generated@@524 $generated@@564 $generated@@567 $generated@@568)))
 :weight 0
)))) (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (= (type ($generated@@525 $generated@@569 $generated@@570 $generated@@571 $generated@@572)) ($generated@@526 $generated@@84 $generated@@4))
 :pattern ( ($generated@@525 $generated@@569 $generated@@570 $generated@@571 $generated@@572))
))))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@70 (type $generated@@578))))
 (=> (and (and (and (and (and (= (type $generated@@573) $generated@@84) (= (type $generated@@574) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@575) ($generated@@69 $generated@@4))) (= (type $generated@@576) $generated@@84)) (= (type $generated@@577) $generated@@84)) (= (type $generated@@578) ($generated@@69 $generated@@579))) (= ($generated@@0 ($generated@@524 ($generated@@525 $generated@@573 $generated@@574 $generated@@575 $generated@@576) $generated@@577 $generated@@578))  (=> (and (not (= $generated@@577 $generated@@573)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@574 $generated@@577) $generated@@575))) (= $generated@@577 $generated@@576)))))
 :pattern ( ($generated@@524 ($generated@@525 $generated@@573 $generated@@574 $generated@@575 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@67) (= (type $generated@@581) $generated@@67)) (and (= ($generated@@77 ($generated@@156 $generated@@580 $generated@@581)) $generated@@63) (= ($generated@@171 ($generated@@156 $generated@@580 $generated@@581)) $generated@@64)))
 :pattern ( ($generated@@156 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@584) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@585) $generated@@84)) (=> (and (and (and ($generated@@148 $generated@@583) ($generated@@148 $generated@@584)) (and (not (= $generated@@585 $generated@@144)) ($generated@@150 $generated@@585 $generated@@172))) (and ($generated@@500 $generated@@583) ($generated@@139 $generated@@583 $generated@@584))) (=> (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@70 (type $generated@@587))))
 (=> (and (and (= (type $generated@@586) $generated@@84) (= (type $generated@@587) ($generated@@69 $generated@@588))) (and (not (= $generated@@586 $generated@@144)) (= $generated@@586 $generated@@585))) (= ($generated@@90 ($generated@@88 $generated@@583 $generated@@586) $generated@@587) ($generated@@90 ($generated@@88 $generated@@584 $generated@@586) $generated@@587))))
 :no-pattern (type $generated@@586)
 :no-pattern (type $generated@@587)
 :no-pattern ($generated $generated@@586)
 :no-pattern ($generated@@0 $generated@@586)
 :no-pattern ($generated $generated@@587)
 :no-pattern ($generated@@0 $generated@@587)
)) (= ($generated@@582 $generated@@583 $generated@@585) ($generated@@582 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@500 $generated@@583) ($generated@@139 $generated@@583 $generated@@584) ($generated@@582 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@157) (= ($generated@@507 ($generated@@239 $generated@@589)) ($generated@@508 $generated@@589)))
 :pattern ( ($generated@@507 ($generated@@239 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@166) ($generated@@188 $generated@@590 ($generated@@82 0))) (and (= ($generated@@239 ($generated@@305 $generated@@2 $generated@@590)) $generated@@590) ($generated@@150 ($generated@@305 ($generated@@83 $generated@@166 $generated@@4) $generated@@590) ($generated@@82 0))))
 :pattern ( ($generated@@188 $generated@@590 ($generated@@82 0)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@166) (= (type $generated@@592) $generated@@67)) ($generated@@188 $generated@@591 ($generated@@204 $generated@@592))) (and (= ($generated@@239 ($generated@@305 ($generated@@83 $generated@@166 $generated@@4) $generated@@591)) $generated@@591) ($generated@@150 ($generated@@305 ($generated@@83 $generated@@166 $generated@@4) $generated@@591) ($generated@@204 $generated@@592))))
 :pattern ( ($generated@@188 $generated@@591 ($generated@@204 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@166) (= (type $generated@@594) $generated@@67)) ($generated@@188 $generated@@593 ($generated@@209 $generated@@594))) (and (= ($generated@@239 ($generated@@305 ($generated@@83 $generated@@166 $generated@@4) $generated@@593)) $generated@@593) ($generated@@150 ($generated@@305 ($generated@@83 $generated@@166 $generated@@4) $generated@@593) ($generated@@209 $generated@@594))))
 :pattern ( ($generated@@188 $generated@@593 ($generated@@209 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@166) (= (type $generated@@596) $generated@@67)) ($generated@@188 $generated@@595 ($generated@@174 $generated@@596))) (and (= ($generated@@239 ($generated@@305 ($generated@@83 $generated@@166 $generated@@2) $generated@@595)) $generated@@595) ($generated@@150 ($generated@@305 ($generated@@83 $generated@@166 $generated@@2) $generated@@595) ($generated@@174 $generated@@596))))
 :pattern ( ($generated@@188 $generated@@595 ($generated@@174 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@166) (= (type $generated@@598) $generated@@67)) ($generated@@188 $generated@@597 ($generated@@462 $generated@@598))) (and (= ($generated@@239 ($generated@@305 ($generated@@233 $generated@@166) $generated@@597)) $generated@@597) ($generated@@150 ($generated@@305 ($generated@@233 $generated@@166) $generated@@597) ($generated@@462 $generated@@598))))
 :pattern ( ($generated@@188 $generated@@597 ($generated@@462 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
 (=> (and (and (and (= (type $generated@@599) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@600) $generated@@84)) (= (type $generated@@601) ($generated@@69 $generated@@603))) ($generated@@148 ($generated@@89 $generated@@599 $generated@@600 ($generated@@91 ($generated@@88 $generated@@599 $generated@@600) $generated@@601 $generated@@602)))) ($generated@@139 $generated@@599 ($generated@@89 $generated@@599 $generated@@600 ($generated@@91 ($generated@@88 $generated@@599 $generated@@600) $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@89 $generated@@599 $generated@@600 ($generated@@91 ($generated@@88 $generated@@599 $generated@@600) $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@604) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@604 ($generated@@174 $generated@@605) $generated@@606) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@604 $generated@@607)))) ($generated@@219 $generated@@607 $generated@@605 $generated@@606))
 :pattern ( ($generated@@88 $generated@@604 $generated@@607))
))))
 :pattern ( ($generated@@81 $generated@@604 ($generated@@174 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@157) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@610) (and ($generated@@155 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@67) ($generated@@81 $generated@@608 ($generated@@156 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@81 $generated@@608 ($generated@@156 $generated@@609 $generated@@611) $generated@@610))
))))) ($generated@@219 ($generated@@164 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@219 ($generated@@164 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@157) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@614) (and ($generated@@155 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@67) ($generated@@81 $generated@@612 ($generated@@156 $generated@@615 $generated@@613) $generated@@614))
 :pattern ( ($generated@@81 $generated@@612 ($generated@@156 $generated@@615 $generated@@613) $generated@@614))
))))) ($generated@@219 ($generated@@165 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@219 ($generated@@165 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@166) (= (type $generated@@617) $generated@@166)) (= ($generated@@187 ($generated@@215 $generated@@616) ($generated@@215 $generated@@617)) ($generated@@215 ($generated@@187 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@187 ($generated@@215 $generated@@616) ($generated@@215 $generated@@617)))
)))
(assert (forall (($generated@@618 Int) ) (! (= ($generated@@239 ($generated@@8 ($generated@@182 $generated@@618))) ($generated@@215 ($generated@@239 ($generated@@8 $generated@@618))))
 :pattern ( ($generated@@239 ($generated@@8 ($generated@@182 $generated@@618))))
)))
(assert (forall (($generated@@619 T@U) ) (! (= ($generated@@239 ($generated@@215 $generated@@619)) ($generated@@215 ($generated@@239 $generated@@619)))
 :pattern ( ($generated@@239 ($generated@@215 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@234 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@233 $generated@@621)) (= ($generated@@232 $generated@@620) 0)) (= $generated@@620 ($generated@@231 $generated@@621))))
 :pattern ( ($generated@@232 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@623)))
 (=> (and (and (= (type $generated@@622) ($generated@@83 $generated@@625 $generated@@2)) (= (type $generated@@624) $generated@@2)) (<= 0 ($generated $generated@@624))) (= ($generated@@254 ($generated@@89 $generated@@622 $generated@@623 $generated@@624)) (+ (- ($generated@@254 $generated@@622) ($generated ($generated@@88 $generated@@622 $generated@@623))) ($generated $generated@@624)))))
 :pattern ( ($generated@@254 ($generated@@89 $generated@@622 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@627) $generated@@2)) ($generated@@81 $generated@@627 $generated@@46 $generated@@626))
 :pattern ( ($generated@@81 $generated@@627 $generated@@46 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@629) $generated@@3)) ($generated@@81 $generated@@629 $generated@@47 $generated@@628))
 :pattern ( ($generated@@81 $generated@@629 $generated@@47 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@631) $generated@@4)) ($generated@@81 $generated@@631 $generated@@44 $generated@@630))
 :pattern ( ($generated@@81 $generated@@631 $generated@@44 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@633) $generated@@420)) ($generated@@81 $generated@@633 $generated@@45 $generated@@632))
 :pattern ( ($generated@@81 $generated@@633 $generated@@45 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@635) $generated@@166)) ($generated@@81 $generated@@635 $generated@@48 $generated@@634))
 :pattern ( ($generated@@81 $generated@@635 $generated@@48 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@233 $generated@@166)) (= (type $generated@@637) $generated@@67)) (= ($generated@@150 $generated@@636 ($generated@@462 $generated@@637)) (forall (($generated@@638 Int) ) (!  (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@232 $generated@@636))) ($generated@@188 ($generated@@463 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@463 $generated@@636 $generated@@638))
))))
 :pattern ( ($generated@@150 $generated@@636 ($generated@@462 $generated@@637)))
)))
(assert  (=> true (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@641) $generated@@84)) (or ($generated@@639 $generated@@640 $generated@@641) (and ($generated@@148 $generated@@640) (and (not (= $generated@@641 $generated@@144)) (and ($generated@@150 $generated@@641 $generated@@172) ($generated@@81 $generated@@641 $generated@@172 $generated@@640)))))) true)
 :pattern ( ($generated@@582 $generated@@640 $generated@@641))
))))
(assert (forall (($generated@@643 T@U) ($generated@@644 Int) ) (!  (=> (= (type $generated@@643) ($generated@@233 $generated@@166)) (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@232 $generated@@643))) (< ($generated@@508 ($generated@@305 $generated@@157 ($generated@@463 $generated@@643 $generated@@644))) ($generated@@642 $generated@@643))))
 :pattern ( ($generated@@508 ($generated@@305 $generated@@157 ($generated@@463 $generated@@643 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@262 $generated@@166 $generated@@166)) (= (type $generated@@646) $generated@@67)) (= (type $generated@@647) $generated@@67)) ($generated@@150 $generated@@645 ($generated@@372 $generated@@646 $generated@@647))) (and (and ($generated@@150 ($generated@@260 $generated@@645) ($generated@@204 $generated@@646)) ($generated@@150 ($generated@@315 $generated@@645) ($generated@@204 $generated@@647))) ($generated@@150 ($generated@@346 $generated@@645) ($generated@@204 ($generated@@156 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@150 $generated@@645 ($generated@@372 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@280 $generated@@166 $generated@@166)) (= (type $generated@@649) $generated@@67)) (= (type $generated@@650) $generated@@67)) ($generated@@150 $generated@@648 ($generated@@380 $generated@@649 $generated@@650))) (and (and ($generated@@150 ($generated@@278 $generated@@648) ($generated@@209 $generated@@649)) ($generated@@150 ($generated@@326 $generated@@648) ($generated@@209 $generated@@650))) ($generated@@150 ($generated@@354 $generated@@648) ($generated@@209 ($generated@@156 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@150 $generated@@648 ($generated@@380 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@2) ($generated@@150 $generated@@651 $generated@@46))
 :pattern ( ($generated@@150 $generated@@651 $generated@@46))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@3) ($generated@@150 $generated@@652 $generated@@47))
 :pattern ( ($generated@@150 $generated@@652 $generated@@47))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@4) ($generated@@150 $generated@@653 $generated@@44))
 :pattern ( ($generated@@150 $generated@@653 $generated@@44))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@420) ($generated@@150 $generated@@654 $generated@@45))
 :pattern ( ($generated@@150 $generated@@654 $generated@@45))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@166) ($generated@@150 $generated@@655 $generated@@48))
 :pattern ( ($generated@@150 $generated@@655 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(assert  (and (and (and (and (= (type $generated@@656) $generated@@84) (= (type $generated@@660) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@657) ($generated@@526 $generated@@84 $generated@@4))) (= (type $generated@@662) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@659) ($generated@@83 $generated@@84 $generated@@85))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@664  (and (=> (= (ControlFlow 0 10) (- 0 13)) (not (= $generated@@656 $generated@@144))) (=> (not (= $generated@@656 $generated@@144)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@0 ($generated@@524 $generated@@657 $generated@@656 $generated@@147))) (=> ($generated@@0 ($generated@@524 $generated@@657 $generated@@656 $generated@@147)) (=> (= $generated@@658 ($generated@@182 8)) (=> (and (= $generated@@659 ($generated@@89 $generated@@660 $generated@@656 ($generated@@91 ($generated@@88 $generated@@660 $generated@@656) $generated@@147 ($generated@@8 $generated@@658)))) ($generated@@148 $generated@@659)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (not (= $generated@@656 $generated@@144))) (=> (and (and ($generated@@81 $generated@@656 $generated@@143 $generated@@659) ($generated@@181 $generated@@659 $generated@@656)) (and ($generated@@181 $generated@@659 $generated@@656) (= (ControlFlow 0 10) (- 0 9)))) ($generated@@180 $generated@@659 $generated@@656)))))))))))
(let (($generated@@665  (and (=> (= (ControlFlow 0 5) (- 0 8)) (not (= $generated@@656 $generated@@144))) (=> (not (= $generated@@656 $generated@@144)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@0 ($generated@@524 $generated@@657 $generated@@656 $generated@@147))) (=> ($generated@@0 ($generated@@524 $generated@@657 $generated@@656 $generated@@147)) (=> (= $generated@@661 ($generated@@182 7)) (=> (and (= $generated@@662 ($generated@@89 $generated@@660 $generated@@656 ($generated@@91 ($generated@@88 $generated@@660 $generated@@656) $generated@@147 ($generated@@8 $generated@@661)))) ($generated@@148 $generated@@662)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= $generated@@656 $generated@@144))) (=> (and (and ($generated@@81 $generated@@656 $generated@@143 $generated@@662) ($generated@@181 $generated@@662 $generated@@656)) (and ($generated@@181 $generated@@662 $generated@@656) (= (ControlFlow 0 5) (- 0 4)))) ($generated@@180 $generated@@662 $generated@@656)))))))))))
(let (($generated@@666  (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@656 $generated@@144))) (=> (and (and ($generated@@81 $generated@@656 $generated@@143 $generated@@660) ($generated@@181 $generated@@660 $generated@@656)) (and ($generated@@181 $generated@@660 $generated@@656) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@180 $generated@@660 $generated@@656)))))
(let (($generated@@667  (=> (= $generated@@657 ($generated@@525 $generated@@144 $generated@@660 $generated@@60 $generated@@656)) (and (=> (= (ControlFlow 0 14) (- 0 17)) (not (= $generated@@656 $generated@@144))) (=> (and ($generated@@81 $generated@@656 $generated@@143 $generated@@660) ($generated@@639 $generated@@660 $generated@@656)) (and (=> (= (ControlFlow 0 14) (- 0 16)) (not (= $generated@@656 $generated@@144))) (=> ($generated@@639 $generated@@660 $generated@@656) (and (=> (= (ControlFlow 0 14) (- 0 15)) (= ($generated@@582 $generated@@660 $generated@@656) ($generated ($generated@@90 ($generated@@88 $generated@@660 $generated@@656) $generated@@147)))) (=> (= ($generated@@582 $generated@@660 $generated@@656) ($generated ($generated@@90 ($generated@@88 $generated@@660 $generated@@656) $generated@@147))) (and (and (=> (= (ControlFlow 0 14) 2) $generated@@666) (=> (= (ControlFlow 0 14) 5) $generated@@665)) (=> (= (ControlFlow 0 14) 10) $generated@@664)))))))))))
(let (($generated@@668  (=> (and ($generated@@148 $generated@@660) ($generated@@500 $generated@@660)) (=> (and (and ($generated@@150 $generated@@656 $generated@@172) ($generated@@81 $generated@@656 $generated@@172 $generated@@660)) (and (= 1 $generated@@663) (= (ControlFlow 0 18) 14))) $generated@@667))))
$generated@@668))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 14) (- 15))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@238 (Int) Int)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@T T@U T@U) T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@T)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@356 (T@U T@U) Bool)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@T) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 () T@T)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@523 (T@U Int) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Bool)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@639 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 12)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@70 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@70 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@67)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@141) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@139 $generated@@140 $generated@@141)) (forall (($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@84) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@140 $generated@@142) $generated@@60))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60))
)))
 :pattern ( ($generated@@139 $generated@@140 $generated@@141))
)))
(assert  (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@84)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@84) (= (type $generated@@146) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@145 $generated@@143 $generated@@146))
)))
(assert  (and (= (type $generated@@147) ($generated@@69 $generated@@2)) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@151)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@153) $generated@@84)) (and ($generated@@148 $generated@@152) (and (not (= $generated@@153 $generated@@144)) (= ($generated@@149 $generated@@153) $generated@@143)))) ($generated@@150 ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147) $generated@@46))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@150 $generated@@154 ($generated@@82 0)))
 :pattern ( ($generated@@150 $generated@@154 ($generated@@82 0)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@67) (= (type $generated@@161) $generated@@67)) (= (type $generated@@162) $generated@@157)) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 16) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@73)
 :pattern ( ($generated@@171 $generated@@173))
)) (= (type $generated@@172) $generated@@67)))
(assert (= ($generated@@171 $generated@@172) $generated@@65))
(assert (= ($generated@@171 $generated@@143) $generated@@65))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@178) $generated@@67)) ($generated@@150 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@150 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@84) (= ($generated@@150 $generated@@179 $generated@@143)  (or (= $generated@@179 $generated@@144) (= ($generated@@149 $generated@@179) $generated@@143))))
 :pattern ( ($generated@@150 $generated@@179 $generated@@143))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 17)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@84 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@70 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@84) (= (type $generated@@230) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@231) ($generated@@69 $generated@@4))) (= (type $generated@@233) $generated@@84)) (= (type $generated@@234) ($generated@@69 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (=> true (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (= (type $generated@@239) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@240) $generated@@84)) (or ($generated@@237 $generated@@239 $generated@@240) (and ($generated@@148 $generated@@239) (and (not (= $generated@@240 $generated@@144)) (and ($generated@@150 $generated@@240 $generated@@172) ($generated@@81 $generated@@240 $generated@@172 $generated@@239)))))) (and (=> ($generated@@236 $generated@@239 $generated@@240) (<= ($generated@@238 0) ($generated ($generated@@90 ($generated@@88 $generated@@239 $generated@@240) $generated@@147)))) (=> (= ($generated ($generated@@90 ($generated@@88 $generated@@239 $generated@@240) $generated@@147)) ($generated@@238 8)) ($generated@@236 $generated@@239 $generated@@240))))
 :pattern ( ($generated@@236 $generated@@239 $generated@@240))
))))
(assert  (=> true (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (= (type $generated@@243) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@244) $generated@@84)) (or ($generated@@242 $generated@@243 $generated@@244) (and ($generated@@148 $generated@@243) (and (not (= $generated@@244 $generated@@144)) (and ($generated@@150 $generated@@244 $generated@@172) ($generated@@81 $generated@@244 $generated@@172 $generated@@243)))))) (and (=> ($generated@@236 $generated@@243 $generated@@244) (<= ($generated@@238 0) ($generated ($generated@@90 ($generated@@88 $generated@@243 $generated@@244) $generated@@147)))) (=> (= ($generated ($generated@@90 ($generated@@88 $generated@@243 $generated@@244) $generated@@147)) ($generated@@238 8)) ($generated@@236 $generated@@243 $generated@@244))))
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@84) (= (type $generated@@246) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@245 $generated@@172 $generated@@246) ($generated@@81 $generated@@245 $generated@@143 $generated@@246)))
 :pattern ( ($generated@@81 $generated@@245 $generated@@172 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@157)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@67) (= (type $generated@@252) $generated@@67)) (= (type $generated@@253) $generated@@166)) (= (type $generated@@254) $generated@@166)) (= ($generated@@150 ($generated@@247 $generated@@253 $generated@@254) ($generated@@156 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@150 ($generated@@247 $generated@@253 $generated@@254) ($generated@@156 $generated@@251 $generated@@252)))
)))
(assert (= ($generated@@76 $generated@@147) 0))
(assert  (and (and (forall (($generated@@258 T@T) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (= (type ($generated@@255 $generated@@258 $generated@@259 $generated@@260)) ($generated@@69 $generated@@258))
 :pattern ( ($generated@@255 $generated@@258 $generated@@259 $generated@@260))
)) (= ($generated@@1 $generated@@257) 18)) (= (type $generated@@256) $generated@@257)))
(assert (= ($generated@@255 $generated@@2 $generated@@256 $generated@@66) $generated@@147))
(assert  (not ($generated@@261 $generated@@147)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@157) (= (type $generated@@263) $generated@@157)) (= ($generated@@163 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@163 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@67)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@267) $generated@@67)) (= ($generated@@150 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@166) ($generated@@0 ($generated@@88 $generated@@266 $generated@@268))) ($generated@@248 $generated@@268 $generated@@267))
 :pattern ( ($generated@@88 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@150 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@67)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@272) $generated@@67)) (= ($generated@@150 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@166) ($generated@@0 ($generated@@88 $generated@@271 $generated@@273))) ($generated@@248 $generated@@273 $generated@@272))
 :pattern ( ($generated@@88 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@150 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@274 Int) ) (! (= ($generated@@238 $generated@@274) $generated@@274)
 :pattern ( ($generated@@238 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@275 $generated@@278) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@67) (= (type $generated@@281) $generated@@67)) (= (type $generated@@282) $generated@@166)) (= (type $generated@@283) $generated@@166)) (= (type $generated@@284) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@148 $generated@@284)) (= ($generated@@81 ($generated@@247 $generated@@282 $generated@@283) ($generated@@156 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@81 ($generated@@247 $generated@@282 $generated@@283) ($generated@@156 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@72)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@157) (= ($generated@@155 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@62)))
 :pattern ( ($generated@@155 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@157) ($generated@@155 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@166) (= (type $generated@@290) $generated@@166)) (= $generated@@288 ($generated@@247 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@155 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 19)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert ($generated@@261 $generated@@60))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@166)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@67) (= (type $generated@@303) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@279 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@81 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@279 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@304) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@305) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@306) $generated@@166)) (= (type $generated@@307) $generated@@67)) ($generated@@139 $generated@@304 $generated@@305)) ($generated@@279 $generated@@306 $generated@@307 $generated@@304)) ($generated@@279 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@139 $generated@@304 $generated@@305) ($generated@@279 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@308) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@309) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@311) $generated@@67)) ($generated@@139 $generated@@308 $generated@@309)) ($generated@@81 $generated@@310 $generated@@311 $generated@@308)) ($generated@@81 $generated@@310 $generated@@311 $generated@@309))
 :pattern ( ($generated@@139 $generated@@308 $generated@@309) ($generated@@81 $generated@@310 $generated@@311 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@313) $generated@@84)) (=> (and (and ($generated@@148 $generated@@312) (and (not (= $generated@@313 $generated@@144)) (= ($generated@@149 $generated@@313) $generated@@143))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@312 $generated@@313) $generated@@60))) ($generated@@81 ($generated@@90 ($generated@@88 $generated@@312 $generated@@313) $generated@@147) $generated@@46 $generated@@312)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@312 $generated@@313) $generated@@147))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@83 $generated@@316 $generated@@2))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@86 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@83 $generated@@318 $generated@@2)) (and (= (= ($generated@@314 $generated@@317) 0) (= $generated@@317 ($generated@@315 $generated@@318))) (=> (not (= ($generated@@314 $generated@@317) 0)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) (< 0 ($generated ($generated@@88 $generated@@317 $generated@@319))))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 20)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@83 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@88 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@88 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 21)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@83 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@88 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@88 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@358) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@356 $generated@@357 $generated@@358)) (and ($generated@@139 $generated@@357 $generated@@358) (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@70 (type $generated@@360))))
 (=> (and (and (= (type $generated@@359) $generated@@84) (= (type $generated@@360) ($generated@@69 $generated@@361))) (not ($generated@@261 $generated@@360))) (= ($generated@@90 ($generated@@88 $generated@@357 $generated@@359) $generated@@360) ($generated@@90 ($generated@@88 $generated@@358 $generated@@359) $generated@@360))))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@358 $generated@@359) $generated@@360))
))))
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@86 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@83 $generated@@363 $generated@@2)) (= ($generated@@175 $generated@@362) (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@363) (and (<= 0 ($generated ($generated@@88 $generated@@362 $generated@@364))) (<= ($generated ($generated@@88 $generated@@362 $generated@@364)) ($generated@@314 $generated@@362))))
 :pattern ( ($generated@@88 $generated@@362 $generated@@364))
)))))
 :pattern ( ($generated@@175 $generated@@362))
)))
(assert (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@365 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@166) ($generated@@248 $generated@@368 $generated@@172)) (and (= ($generated@@299 ($generated@@365 $generated@@84 $generated@@368)) $generated@@368) ($generated@@150 ($generated@@365 $generated@@84 $generated@@368) $generated@@172)))
 :pattern ( ($generated@@248 $generated@@368 $generated@@172))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@166) ($generated@@248 $generated@@369 $generated@@143)) (and (= ($generated@@299 ($generated@@365 $generated@@84 $generated@@369)) $generated@@369) ($generated@@150 ($generated@@365 $generated@@84 $generated@@369) $generated@@143)))
 :pattern ( ($generated@@248 $generated@@369 $generated@@143))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@84) (= ($generated@@150 $generated@@370 $generated@@172)  (and ($generated@@150 $generated@@370 $generated@@143) (not (= $generated@@370 $generated@@144)))))
 :pattern ( ($generated@@150 $generated@@370 $generated@@172))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@324 (type $generated@@371))))
(let (($generated@@373 ($generated@@323 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@322 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@321 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@320 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@324 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@83 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@324 (type $generated@@378))))
(let (($generated@@380 ($generated@@323 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@322 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@321 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@88 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@342 (type $generated@@382))))
(let (($generated@@384 ($generated@@341 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@340 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@339 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@88 ($generated@@338 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@338 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@342 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@83 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@342 (type $generated@@389))))
(let (($generated@@391 ($generated@@341 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@340 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@339 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@88 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@394) $generated@@67)) (= ($generated@@150 $generated@@393 ($generated@@174 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@393 $generated@@395)))) ($generated@@248 $generated@@395 $generated@@394))
 :pattern ( ($generated@@88 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@150 $generated@@393 ($generated@@174 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@396 ($generated@@264 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@166) ($generated@@0 ($generated@@88 $generated@@396 $generated@@399))) ($generated@@279 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@88 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@81 $generated@@396 ($generated@@264 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@400 ($generated@@269 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@166) ($generated@@0 ($generated@@88 $generated@@400 $generated@@403))) ($generated@@279 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@88 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@81 $generated@@400 ($generated@@269 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@88 ($generated@@315 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@88 ($generated@@315 $generated@@405) $generated@@404)))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@324 (type $generated@@409))))
(let (($generated@@411 ($generated@@323 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@83 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@413) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@88 ($generated@@320 $generated@@412) ($generated@@164 ($generated@@365 $generated@@157 $generated@@413)))) (= ($generated@@88 ($generated@@407 $generated@@412) ($generated@@164 ($generated@@365 $generated@@157 $generated@@413))) ($generated@@165 ($generated@@365 $generated@@157 $generated@@413))))))
 :pattern ( ($generated@@88 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@342 (type $generated@@417))))
(let (($generated@@419 ($generated@@341 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@83 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@340 $generated@@166 $generated@@166)) (= (type $generated@@421) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@88 ($generated@@338 $generated@@420) ($generated@@164 ($generated@@365 $generated@@157 $generated@@421)))) (= ($generated@@88 ($generated@@415 $generated@@420) ($generated@@164 ($generated@@365 $generated@@157 $generated@@421))) ($generated@@165 ($generated@@365 $generated@@157 $generated@@421))))))
 :pattern ( ($generated@@88 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@323 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@322 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@88 ($generated@@375 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@88 ($generated@@320 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@88 ($generated@@407 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@422) $generated@@426))
 :pattern ( ($generated@@88 ($generated@@407 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@88 ($generated@@375 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@341 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@340 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@88 ($generated@@386 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@88 ($generated@@338 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@88 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@88 ($generated@@338 $generated@@427) $generated@@431))
 :pattern ( ($generated@@88 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@88 ($generated@@386 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@67)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@436) $generated@@67)) (= (type $generated@@437) $generated@@67)) (= (type $generated@@438) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@435) $generated@@439))) (and ($generated@@279 ($generated@@88 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@279 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@88 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@81 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@340 $generated@@166 $generated@@166)) (= (type $generated@@444) $generated@@67)) (= (type $generated@@445) $generated@@67)) (= (type $generated@@446) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@338 $generated@@443) $generated@@447))) (and ($generated@@279 ($generated@@88 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@279 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@88 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@88 ($generated@@338 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@81 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@448) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@449) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@450) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@448 $generated@@450))) (and ($generated@@139 $generated@@448 $generated@@449) ($generated@@139 $generated@@449 $generated@@450))) ($generated@@139 $generated@@448 $generated@@450))
 :pattern ( ($generated@@139 $generated@@448 $generated@@449) ($generated@@139 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@T) ) (! (= (type ($generated@@451 $generated@@452)) ($generated@@83 $generated@@452 $generated@@4))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@342 (type $generated@@453))))
(let (($generated@@455 ($generated@@341 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@340 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@339 $generated@@455 $generated@@454)) (= ($generated@@338 $generated@@453) ($generated@@451 $generated@@455))))))
 :pattern ( ($generated@@338 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@342 (type $generated@@456))))
(let (($generated@@458 ($generated@@341 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@340 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@339 $generated@@458 $generated@@457)) (= ($generated@@386 $generated@@456) ($generated@@451 $generated@@457))))))
 :pattern ( ($generated@@386 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@342 (type $generated@@459))))
(let (($generated@@461 ($generated@@341 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@340 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@339 $generated@@461 $generated@@460)) (= ($generated@@414 $generated@@459) ($generated@@451 $generated@@166))))))
 :pattern ( ($generated@@414 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@324 (type $generated@@462))))
(let (($generated@@464 ($generated@@323 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@322 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@321 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@166) (= (type $generated@@466) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@406 $generated@@462) ($generated@@299 ($generated@@247 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@406 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@342 (type $generated@@467))))
(let (($generated@@469 ($generated@@341 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@340 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@339 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@166) (= (type $generated@@471) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@414 $generated@@467) ($generated@@299 ($generated@@247 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@414 $generated@@467))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@257)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@T) ) (!  (=> (and (= (type $generated@@474) $generated@@257) (= (type $generated@@475) $generated@@71)) (and (= ($generated@@472 ($generated@@255 $generated@@476 $generated@@474 $generated@@475)) $generated@@474) (= ($generated@@79 ($generated@@255 $generated@@476 $generated@@474 $generated@@475)) $generated@@475)))
 :pattern ( ($generated@@255 $generated@@476 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@166) ($generated@@248 $generated@@477 $generated@@46)) (and (= ($generated@@299 ($generated@@365 $generated@@2 $generated@@477)) $generated@@477) ($generated@@150 ($generated@@365 $generated@@2 $generated@@477) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@477 $generated@@46))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@166) ($generated@@248 $generated@@478 $generated@@47)) (and (= ($generated@@299 ($generated@@365 $generated@@3 $generated@@478)) $generated@@478) ($generated@@150 ($generated@@365 $generated@@3 $generated@@478) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@478 $generated@@47))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@166) ($generated@@248 $generated@@479 $generated@@44)) (and (= ($generated@@299 ($generated@@365 $generated@@4 $generated@@479)) $generated@@479) ($generated@@150 ($generated@@365 $generated@@4 $generated@@479) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@479 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@480) 22))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@166) ($generated@@248 $generated@@481 $generated@@45)) (and (= ($generated@@299 ($generated@@365 $generated@@480 $generated@@481)) $generated@@481) ($generated@@150 ($generated@@365 $generated@@480 $generated@@481) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@481 $generated@@45))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@248 ($generated@@299 $generated@@482) $generated@@483) ($generated@@150 $generated@@482 $generated@@483)))
 :pattern ( ($generated@@248 ($generated@@299 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@86 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@83 $generated@@485 $generated@@2)) (<= 0 ($generated@@314 $generated@@484))))
 :pattern ( ($generated@@314 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@294 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@293 $generated@@487)) (<= 0 ($generated@@292 $generated@@486))))
 :pattern ( ($generated@@292 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@432 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@432 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@432 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@432 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@67) (= (type $generated@@497) $generated@@67)) (= ($generated@@77 ($generated@@432 $generated@@496 $generated@@497)) $generated@@58))
 :pattern ( ($generated@@432 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@67) (= (type $generated@@501) $generated@@67)) (= ($generated@@498 ($generated@@440 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@440 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@67) (= (type $generated@@505) $generated@@67)) (= ($generated@@502 ($generated@@440 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@440 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@77 ($generated@@440 $generated@@506 $generated@@507)) $generated@@59))
 :pattern ( ($generated@@440 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@166) (= (type $generated@@509) $generated@@166)) (= ($generated@@285 ($generated@@247 $generated@@508 $generated@@509)) $generated@@62))
 :pattern ( ($generated@@247 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@67) (= (type $generated@@513) $generated@@67)) (= ($generated@@510 ($generated@@156 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@156 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@67) (= (type $generated@@517) $generated@@67)) (= ($generated@@514 ($generated@@156 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@156 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@166) (= (type $generated@@519) $generated@@166)) (= ($generated@@164 ($generated@@247 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@247 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@166) (= (type $generated@@521) $generated@@166)) (= ($generated@@165 ($generated@@247 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@247 $generated@@520 $generated@@521))
)))
(assert  (and (forall (($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@524))
)) (forall (($generated@@525 T@U) ($generated@@526 Int) ) (! (let (($generated@@527 ($generated@@294 (type $generated@@525))))
(= (type ($generated@@523 $generated@@525 $generated@@526)) $generated@@527))
 :pattern ( ($generated@@523 $generated@@525 $generated@@526))
))))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@293 $generated@@166)) (= (type $generated@@529) $generated@@67)) (= (type $generated@@530) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@528 ($generated@@522 $generated@@529) $generated@@530) (forall (($generated@@531 Int) ) (!  (=> (and (<= 0 $generated@@531) (< $generated@@531 ($generated@@292 $generated@@528))) ($generated@@279 ($generated@@523 $generated@@528 $generated@@531) $generated@@529 $generated@@530))
 :pattern ( ($generated@@523 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@81 $generated@@528 ($generated@@522 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@532 ($generated@@82 $generated@@533)) $generated@@533)
 :pattern ( ($generated@@82 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@67)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@67) (= ($generated@@534 ($generated@@264 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@264 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@67) (= ($generated@@77 ($generated@@264 $generated@@537)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@269 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@269 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@67) (= ($generated@@77 ($generated@@269 $generated@@541)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@67)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@67) (= ($generated@@542 ($generated@@174 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@174 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@77 ($generated@@174 $generated@@545)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@67)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@67) (= ($generated@@546 ($generated@@522 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@522 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@67) (= ($generated@@77 ($generated@@522 $generated@@549)) $generated@@57))
 :pattern ( ($generated@@522 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
(= ($generated@@365 $generated@@551 ($generated@@299 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@299 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) (= ($generated@@150 $generated@@552 ($generated@@432 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@552) $generated@@555))) (and ($generated@@248 ($generated@@88 ($generated@@407 $generated@@552) $generated@@555) $generated@@554) ($generated@@248 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@88 ($generated@@407 $generated@@552) $generated@@555))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@150 $generated@@552 ($generated@@432 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@340 $generated@@166 $generated@@166)) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@67)) (= ($generated@@150 $generated@@556 ($generated@@440 $generated@@557 $generated@@558)) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@338 $generated@@556) $generated@@559))) (and ($generated@@248 ($generated@@88 ($generated@@415 $generated@@556) $generated@@559) $generated@@558) ($generated@@248 $generated@@559 $generated@@557)))
 :pattern ( ($generated@@88 ($generated@@415 $generated@@556) $generated@@559))
 :pattern ( ($generated@@88 ($generated@@338 $generated@@556) $generated@@559))
))))
 :pattern ( ($generated@@150 $generated@@556 ($generated@@440 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@562) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@563) $generated@@84)) (=> (and (and (and ($generated@@148 $generated@@561) ($generated@@148 $generated@@562)) (and (not (= $generated@@563 $generated@@144)) ($generated@@150 $generated@@563 $generated@@172))) (and ($generated@@560 $generated@@561) ($generated@@139 $generated@@561 $generated@@562))) (=> (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@70 (type $generated@@565))))
 (=> (and (and (= (type $generated@@564) $generated@@84) (= (type $generated@@565) ($generated@@69 $generated@@566))) (and (not (= $generated@@564 $generated@@144)) (= $generated@@564 $generated@@563))) (= ($generated@@90 ($generated@@88 $generated@@561 $generated@@564) $generated@@565) ($generated@@90 ($generated@@88 $generated@@562 $generated@@564) $generated@@565))))
 :no-pattern (type $generated@@564)
 :no-pattern (type $generated@@565)
 :no-pattern ($generated $generated@@564)
 :no-pattern ($generated@@0 $generated@@564)
 :no-pattern ($generated $generated@@565)
 :no-pattern ($generated@@0 $generated@@565)
)) (= ($generated@@236 $generated@@561 $generated@@563) ($generated@@236 $generated@@562 $generated@@563)))))
 :pattern ( ($generated@@560 $generated@@561) ($generated@@139 $generated@@561 $generated@@562) ($generated@@236 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@568) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@569) $generated@@84)) (=> (and (and (and ($generated@@148 $generated@@567) ($generated@@148 $generated@@568)) (and (not (= $generated@@569 $generated@@144)) ($generated@@150 $generated@@569 $generated@@172))) (and ($generated@@560 $generated@@567) ($generated@@139 $generated@@567 $generated@@568))) (=> (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@70 (type $generated@@571))))
 (=> (and (and (= (type $generated@@570) $generated@@84) (= (type $generated@@571) ($generated@@69 $generated@@572))) (and (not (= $generated@@570 $generated@@144)) (= $generated@@570 $generated@@569))) (= ($generated@@90 ($generated@@88 $generated@@567 $generated@@570) $generated@@571) ($generated@@90 ($generated@@88 $generated@@568 $generated@@570) $generated@@571))))
 :no-pattern (type $generated@@570)
 :no-pattern (type $generated@@571)
 :no-pattern ($generated $generated@@570)
 :no-pattern ($generated@@0 $generated@@570)
 :no-pattern ($generated $generated@@571)
 :no-pattern ($generated@@0 $generated@@571)
)) (= ($generated@@241 $generated@@567 $generated@@569) ($generated@@241 $generated@@568 $generated@@569)))))
 :pattern ( ($generated@@560 $generated@@567) ($generated@@139 $generated@@567 $generated@@568) ($generated@@241 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@166) (= (type $generated@@576) $generated@@166)) (< ($generated@@573 $generated@@575) ($generated@@574 ($generated@@247 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@247 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@166) (= (type $generated@@578) $generated@@166)) (< ($generated@@573 $generated@@578) ($generated@@574 ($generated@@247 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@247 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@166) (= (type $generated@@580) $generated@@67)) (= (type $generated@@581) $generated@@67)) ($generated@@248 $generated@@579 ($generated@@432 $generated@@580 $generated@@581))) (and (= ($generated@@299 ($generated@@365 ($generated@@322 $generated@@166 $generated@@166) $generated@@579)) $generated@@579) ($generated@@150 ($generated@@365 ($generated@@322 $generated@@166 $generated@@166) $generated@@579) ($generated@@432 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@248 $generated@@579 ($generated@@432 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@166) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) $generated@@67)) ($generated@@248 $generated@@582 ($generated@@440 $generated@@583 $generated@@584))) (and (= ($generated@@299 ($generated@@365 ($generated@@340 $generated@@166 $generated@@166) $generated@@582)) $generated@@582) ($generated@@150 ($generated@@365 ($generated@@340 $generated@@166 $generated@@166) $generated@@582) ($generated@@440 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@248 $generated@@582 ($generated@@440 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@67) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) $generated@@166)) ($generated@@248 $generated@@587 ($generated@@156 $generated@@585 $generated@@586))) (and (= ($generated@@299 ($generated@@365 $generated@@157 $generated@@587)) $generated@@587) ($generated@@150 ($generated@@365 $generated@@157 $generated@@587) ($generated@@156 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@248 $generated@@587 ($generated@@156 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
 (not ($generated@@0 ($generated@@88 ($generated@@451 $generated@@589) $generated@@588))))
 :pattern ( (let (($generated@@589 (type $generated@@588)))
($generated@@88 ($generated@@451 $generated@@589) $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@67) (= (type $generated@@591) $generated@@67)) (and (= ($generated@@77 ($generated@@156 $generated@@590 $generated@@591)) $generated@@63) (= ($generated@@171 ($generated@@156 $generated@@590 $generated@@591)) $generated@@64)))
 :pattern ( ($generated@@156 $generated@@590 $generated@@591))
)))
(assert  (=> true (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@593) $generated@@84)) (or ($generated@@242 $generated@@592 $generated@@593) (and ($generated@@148 $generated@@592) (and (not (= $generated@@593 $generated@@144)) (and ($generated@@150 $generated@@593 $generated@@172) ($generated@@81 $generated@@593 $generated@@172 $generated@@592)))))) (= ($generated@@241 $generated@@592 $generated@@593) (= ($generated ($generated@@90 ($generated@@88 $generated@@592 $generated@@593) $generated@@147)) ($generated@@238 8))))
 :pattern ( ($generated@@241 $generated@@592 $generated@@593) ($generated@@148 $generated@@592))
))))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@157) (= ($generated@@573 ($generated@@299 $generated@@594)) ($generated@@574 $generated@@594)))
 :pattern ( ($generated@@573 ($generated@@299 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@166) ($generated@@248 $generated@@595 ($generated@@82 0))) (and (= ($generated@@299 ($generated@@365 $generated@@2 $generated@@595)) $generated@@595) ($generated@@150 ($generated@@365 ($generated@@83 $generated@@166 $generated@@4) $generated@@595) ($generated@@82 0))))
 :pattern ( ($generated@@248 $generated@@595 ($generated@@82 0)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@166) (= (type $generated@@597) $generated@@67)) ($generated@@248 $generated@@596 ($generated@@264 $generated@@597))) (and (= ($generated@@299 ($generated@@365 ($generated@@83 $generated@@166 $generated@@4) $generated@@596)) $generated@@596) ($generated@@150 ($generated@@365 ($generated@@83 $generated@@166 $generated@@4) $generated@@596) ($generated@@264 $generated@@597))))
 :pattern ( ($generated@@248 $generated@@596 ($generated@@264 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@166) (= (type $generated@@599) $generated@@67)) ($generated@@248 $generated@@598 ($generated@@269 $generated@@599))) (and (= ($generated@@299 ($generated@@365 ($generated@@83 $generated@@166 $generated@@4) $generated@@598)) $generated@@598) ($generated@@150 ($generated@@365 ($generated@@83 $generated@@166 $generated@@4) $generated@@598) ($generated@@269 $generated@@599))))
 :pattern ( ($generated@@248 $generated@@598 ($generated@@269 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@166) (= (type $generated@@601) $generated@@67)) ($generated@@248 $generated@@600 ($generated@@174 $generated@@601))) (and (= ($generated@@299 ($generated@@365 ($generated@@83 $generated@@166 $generated@@2) $generated@@600)) $generated@@600) ($generated@@150 ($generated@@365 ($generated@@83 $generated@@166 $generated@@2) $generated@@600) ($generated@@174 $generated@@601))))
 :pattern ( ($generated@@248 $generated@@600 ($generated@@174 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@166) (= (type $generated@@603) $generated@@67)) ($generated@@248 $generated@@602 ($generated@@522 $generated@@603))) (and (= ($generated@@299 ($generated@@365 ($generated@@293 $generated@@166) $generated@@602)) $generated@@602) ($generated@@150 ($generated@@365 ($generated@@293 $generated@@166) $generated@@602) ($generated@@522 $generated@@603))))
 :pattern ( ($generated@@248 $generated@@602 ($generated@@522 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@604) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@604 ($generated@@174 $generated@@605) $generated@@606) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@604 $generated@@607)))) ($generated@@279 $generated@@607 $generated@@605 $generated@@606))
 :pattern ( ($generated@@88 $generated@@604 $generated@@607))
))))
 :pattern ( ($generated@@81 $generated@@604 ($generated@@174 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@157) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@610) (and ($generated@@155 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@67) ($generated@@81 $generated@@608 ($generated@@156 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@81 $generated@@608 ($generated@@156 $generated@@609 $generated@@611) $generated@@610))
))))) ($generated@@279 ($generated@@164 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@279 ($generated@@164 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@157) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@614) (and ($generated@@155 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@67) ($generated@@81 $generated@@612 ($generated@@156 $generated@@615 $generated@@613) $generated@@614))
 :pattern ( ($generated@@81 $generated@@612 ($generated@@156 $generated@@615 $generated@@613) $generated@@614))
))))) ($generated@@279 ($generated@@165 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@279 ($generated@@165 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@166) (= (type $generated@@617) $generated@@166)) (= ($generated@@247 ($generated@@275 $generated@@616) ($generated@@275 $generated@@617)) ($generated@@275 ($generated@@247 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@247 ($generated@@275 $generated@@616) ($generated@@275 $generated@@617)))
)))
(assert (forall (($generated@@618 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@238 $generated@@618))) ($generated@@275 ($generated@@299 ($generated@@8 $generated@@618))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@238 $generated@@618))))
)))
(assert (forall (($generated@@619 T@U) ) (! (= ($generated@@299 ($generated@@275 $generated@@619)) ($generated@@275 ($generated@@299 $generated@@619)))
 :pattern ( ($generated@@299 ($generated@@275 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@294 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@293 $generated@@621)) (= ($generated@@292 $generated@@620) 0)) (= $generated@@620 ($generated@@291 $generated@@621))))
 :pattern ( ($generated@@292 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@623)))
 (=> (and (and (= (type $generated@@622) ($generated@@83 $generated@@625 $generated@@2)) (= (type $generated@@624) $generated@@2)) (<= 0 ($generated $generated@@624))) (= ($generated@@314 ($generated@@89 $generated@@622 $generated@@623 $generated@@624)) (+ (- ($generated@@314 $generated@@622) ($generated ($generated@@88 $generated@@622 $generated@@623))) ($generated $generated@@624)))))
 :pattern ( ($generated@@314 ($generated@@89 $generated@@622 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@627) $generated@@2)) ($generated@@81 $generated@@627 $generated@@46 $generated@@626))
 :pattern ( ($generated@@81 $generated@@627 $generated@@46 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@629) $generated@@3)) ($generated@@81 $generated@@629 $generated@@47 $generated@@628))
 :pattern ( ($generated@@81 $generated@@629 $generated@@47 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@631) $generated@@4)) ($generated@@81 $generated@@631 $generated@@44 $generated@@630))
 :pattern ( ($generated@@81 $generated@@631 $generated@@44 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@633) $generated@@480)) ($generated@@81 $generated@@633 $generated@@45 $generated@@632))
 :pattern ( ($generated@@81 $generated@@633 $generated@@45 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@635) $generated@@166)) ($generated@@81 $generated@@635 $generated@@48 $generated@@634))
 :pattern ( ($generated@@81 $generated@@635 $generated@@48 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@293 $generated@@166)) (= (type $generated@@637) $generated@@67)) (= ($generated@@150 $generated@@636 ($generated@@522 $generated@@637)) (forall (($generated@@638 Int) ) (!  (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@292 $generated@@636))) ($generated@@248 ($generated@@523 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@523 $generated@@636 $generated@@638))
))))
 :pattern ( ($generated@@150 $generated@@636 ($generated@@522 $generated@@637)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 Int) ) (!  (=> (= (type $generated@@640) ($generated@@293 $generated@@166)) (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@292 $generated@@640))) (< ($generated@@574 ($generated@@365 $generated@@157 ($generated@@523 $generated@@640 $generated@@641))) ($generated@@639 $generated@@640))))
 :pattern ( ($generated@@574 ($generated@@365 $generated@@157 ($generated@@523 $generated@@640 $generated@@641))))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) ($generated@@322 $generated@@166 $generated@@166)) (= (type $generated@@643) $generated@@67)) (= (type $generated@@644) $generated@@67)) ($generated@@150 $generated@@642 ($generated@@432 $generated@@643 $generated@@644))) (and (and ($generated@@150 ($generated@@320 $generated@@642) ($generated@@264 $generated@@643)) ($generated@@150 ($generated@@375 $generated@@642) ($generated@@264 $generated@@644))) ($generated@@150 ($generated@@406 $generated@@642) ($generated@@264 ($generated@@156 $generated@@643 $generated@@644)))))
 :pattern ( ($generated@@150 $generated@@642 ($generated@@432 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@340 $generated@@166 $generated@@166)) (= (type $generated@@646) $generated@@67)) (= (type $generated@@647) $generated@@67)) ($generated@@150 $generated@@645 ($generated@@440 $generated@@646 $generated@@647))) (and (and ($generated@@150 ($generated@@338 $generated@@645) ($generated@@269 $generated@@646)) ($generated@@150 ($generated@@386 $generated@@645) ($generated@@269 $generated@@647))) ($generated@@150 ($generated@@414 $generated@@645) ($generated@@269 ($generated@@156 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@150 $generated@@645 ($generated@@440 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@2) ($generated@@150 $generated@@648 $generated@@46))
 :pattern ( ($generated@@150 $generated@@648 $generated@@46))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@3) ($generated@@150 $generated@@649 $generated@@47))
 :pattern ( ($generated@@150 $generated@@649 $generated@@47))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@4) ($generated@@150 $generated@@650 $generated@@44))
 :pattern ( ($generated@@150 $generated@@650 $generated@@44))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@480) ($generated@@150 $generated@@651 $generated@@45))
 :pattern ( ($generated@@150 $generated@@651 $generated@@45))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@166) ($generated@@150 $generated@@652 $generated@@48))
 :pattern ( ($generated@@150 $generated@@652 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Int)
(assert  (and (and (= (type $generated@@653) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@654) $generated@@84)) (= (type $generated@@655) ($generated@@182 $generated@@84 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@657  (=> (and (and ($generated@@237 $generated@@653 $generated@@654) (= (ControlFlow 0 9) (- 0 8))) ($generated@@236 $generated@@653 $generated@@654)) (= ($generated ($generated@@90 ($generated@@88 $generated@@653 $generated@@654) $generated@@147)) ($generated@@238 8)))))
(let (($generated@@658  (=> (and (not ($generated@@236 $generated@@653 $generated@@654)) (= (ControlFlow 0 12) 9)) $generated@@657)))
(let (($generated@@659  (=> ($generated@@236 $generated@@653 $generated@@654) (and (=> (= (ControlFlow 0 10) (- 0 11)) (not (= $generated@@654 $generated@@144))) (=> (= (ControlFlow 0 10) 9) $generated@@657)))))
(let (($generated@@660  (and (=> (= (ControlFlow 0 13) (- 0 14)) (not (= $generated@@654 $generated@@144))) (=> (and ($generated@@81 $generated@@654 $generated@@143 $generated@@653) ($generated@@237 $generated@@653 $generated@@654)) (and (=> (= (ControlFlow 0 13) 10) $generated@@659) (=> (= (ControlFlow 0 13) 12) $generated@@658))))))
(let (($generated@@661  (=> (and (and ($generated@@242 $generated@@653 $generated@@654) (= (ControlFlow 0 2) (- 0 1))) ($generated@@241 $generated@@653 $generated@@654)) (= ($generated ($generated@@90 ($generated@@88 $generated@@653 $generated@@654) $generated@@147)) ($generated@@238 8)))))
(let (($generated@@662  (=> (and (not ($generated@@241 $generated@@653 $generated@@654)) (= (ControlFlow 0 5) 2)) $generated@@661)))
(let (($generated@@663  (=> ($generated@@241 $generated@@653 $generated@@654) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= $generated@@654 $generated@@144))) (=> (= (ControlFlow 0 3) 2) $generated@@661)))))
(let (($generated@@664  (and (=> (= (ControlFlow 0 6) (- 0 7)) (not (= $generated@@654 $generated@@144))) (=> (and ($generated@@81 $generated@@654 $generated@@143 $generated@@653) ($generated@@242 $generated@@653 $generated@@654)) (and (=> (= (ControlFlow 0 6) 3) $generated@@663) (=> (= (ControlFlow 0 6) 5) $generated@@662))))))
(let (($generated@@665  (=> (= $generated@@655 ($generated@@181 $generated@@144 $generated@@653 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 13) $generated@@660) (=> (= (ControlFlow 0 15) 6) $generated@@664)))))
(let (($generated@@666  (=> (and ($generated@@148 $generated@@653) ($generated@@560 $generated@@653)) (=> (and (and ($generated@@150 $generated@@654 $generated@@172) ($generated@@81 $generated@@654 $generated@@172 $generated@@653)) (and (= 1 $generated@@656) (= (ControlFlow 0 16) 15))) $generated@@665))))
$generated@@666)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 9) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 () Int)
(declare-fun $generated@@366 (T@U Int) Bool)
(declare-fun $generated@@367 () T@T)
(declare-fun $generated@@368 (Int) Bool)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@414 () T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@141) (= (type $generated@@237) $generated@@141)) (= ($generated@@147 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@147 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@66)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@241) $generated@@66)) (= ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@150) ($generated@@0 ($generated@@83 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@83 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@150)) (= (type $generated@@259) $generated@@150)) (= (type $generated@@260) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@254 $generated@@260)) (= ($generated@@76 ($generated@@228 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@141) (= ($generated@@139 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@141) ($generated@@139 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@150) (= (type $generated@@266) $generated@@150)) (= $generated@@264 ($generated@@228 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@139 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@2) (= ($generated@@137 $generated@@275 $generated@@134) (<= ($generated@@248 0) ($generated $generated@@275))))
 :pattern ( ($generated@@137 $generated@@275 $generated@@134))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@150)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@66) (= (type $generated@@280) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@255 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@76 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@255 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@156 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@156 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@150) ($generated@@229 $generated@@329 $generated@@134)) (and (= ($generated@@276 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@137 ($generated@@326 $generated@@2 $generated@@329) $generated@@134)))
 :pattern ( ($generated@@229 $generated@@329 $generated@@134))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@137 $generated@@352 ($generated@@155 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@229 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@137 $generated@@352 ($generated@@155 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@238 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@150) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@255 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@238 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@243 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@150) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@255 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@243 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert (= ($generated@@1 $generated@@367) 20))
(assert  (=> (<= 1 $generated@@365) (forall (($generated@@369 T@U) ($generated@@370 Int) ) (!  (=> (and (= (type $generated@@369) $generated@@367) (or ($generated@@368 $generated@@370) (and (not (= 1 $generated@@365)) (<= ($generated@@248 0) $generated@@370)))) true)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@291 (type $generated@@374))))
(let (($generated@@376 ($generated@@290 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@289 $generated@@150 $generated@@150)) (= (type $generated@@378) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@377) ($generated@@148 ($generated@@326 $generated@@141 $generated@@378)))) (= ($generated@@83 ($generated@@372 $generated@@377) ($generated@@148 ($generated@@326 $generated@@141 $generated@@378))) ($generated@@149 ($generated@@326 $generated@@141 $generated@@378))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@309 (type $generated@@382))))
(let (($generated@@384 ($generated@@308 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@307 $generated@@150 $generated@@150)) (= (type $generated@@386) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@385) ($generated@@148 ($generated@@326 $generated@@141 $generated@@386)))) (= ($generated@@83 ($generated@@380 $generated@@385) ($generated@@148 ($generated@@326 $generated@@141 $generated@@386))) ($generated@@149 ($generated@@326 $generated@@141 $generated@@386))))))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@290 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@289 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@83 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@387) $generated@@391))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@308 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@307 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@83 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@392) $generated@@396))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@66)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@289 $generated@@150 $generated@@150)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@400) $generated@@404))) (and ($generated@@255 ($generated@@83 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@255 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@66)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@307 $generated@@150 $generated@@150)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@408) $generated@@412))) (and ($generated@@255 ($generated@@83 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@255 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@415)) $generated@@367)
 :pattern ( ($generated@@413 $generated@@415))
)) (= (type $generated@@414) $generated@@367)))
(assert (forall (($generated@@416 T@U) ($generated@@417 Int) ) (!  (=> (= (type $generated@@416) $generated@@367) (= ($generated@@366 $generated@@416 $generated@@417) ($generated@@366 $generated@@414 $generated@@417)))
 :pattern ( ($generated@@366 ($generated@@413 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@78 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@309 (type $generated@@420))))
(let (($generated@@422 ($generated@@308 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@307 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@306 $generated@@422 $generated@@421)) (= ($generated@@305 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@305 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@309 (type $generated@@423))))
(let (($generated@@425 ($generated@@308 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@307 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@306 $generated@@425 $generated@@424)) (= ($generated@@345 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@345 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (= ($generated@@379 $generated@@426) ($generated@@418 $generated@@150))))))
 :pattern ( ($generated@@379 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@291 (type $generated@@429))))
(let (($generated@@431 ($generated@@290 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@289 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@288 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@150) (= (type $generated@@433) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@429) ($generated@@276 ($generated@@228 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@371 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@309 (type $generated@@434))))
(let (($generated@@436 ($generated@@308 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@307 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@306 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@150) (= (type $generated@@438) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@379 $generated@@434) ($generated@@276 ($generated@@228 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@379 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@150) ($generated@@229 $generated@@439 $generated@@46)) (and (= ($generated@@276 ($generated@@326 $generated@@2 $generated@@439)) $generated@@439) ($generated@@137 ($generated@@326 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@150) ($generated@@229 $generated@@440 $generated@@47)) (and (= ($generated@@276 ($generated@@326 $generated@@3 $generated@@440)) $generated@@440) ($generated@@137 ($generated@@326 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@150) ($generated@@229 $generated@@441 $generated@@44)) (and (= ($generated@@276 ($generated@@326 $generated@@4 $generated@@441)) $generated@@441) ($generated@@137 ($generated@@326 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 21))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@150) ($generated@@229 $generated@@443 $generated@@45)) (and (= ($generated@@276 ($generated@@326 $generated@@442 $generated@@443)) $generated@@443) ($generated@@137 ($generated@@326 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@367)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 Int) ) (!  (=> (= (type $generated@@446) $generated@@367) (= ($generated@@366 ($generated@@444 $generated@@446) $generated@@447) ($generated@@366 $generated@@446 $generated@@447)))
 :pattern ( ($generated@@366 ($generated@@444 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@66) (= ($generated@@229 ($generated@@276 $generated@@448) $generated@@449) ($generated@@137 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@229 ($generated@@276 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@81 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@78 $generated@@451 $generated@@2)) (<= 0 ($generated@@281 $generated@@450))))
 :pattern ( ($generated@@281 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@270 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@269 $generated@@453)) (<= 0 ($generated@@268 $generated@@452))))
 :pattern ( ($generated@@268 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@66)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@66) (= (type $generated@@457) $generated@@66)) (= ($generated@@454 ($generated@@397 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@397 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@66)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@458 ($generated@@397 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@397 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@74 ($generated@@397 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@405 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@405 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@405 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@405 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@74 ($generated@@405 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@150) (= (type $generated@@475) $generated@@150)) (= ($generated@@261 ($generated@@228 $generated@@474 $generated@@475)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@66) (= (type $generated@@479) $generated@@66)) (= ($generated@@476 ($generated@@140 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@140 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@66) (= (type $generated@@483) $generated@@66)) (= ($generated@@480 ($generated@@140 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@140 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@150) (= (type $generated@@485) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@150) (= (type $generated@@487) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@228 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@270 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@269 $generated@@150)) (= (type $generated@@495) $generated@@66)) (= (type $generated@@496) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@268 $generated@@494))) ($generated@@255 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@76 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert  (=> (<= 1 $generated@@365) (forall (($generated@@498 T@U) ($generated@@499 Int) ) (!  (=> (and (= (type $generated@@498) $generated@@367) (or ($generated@@368 $generated@@499) (and (not (= 1 $generated@@365)) (<= ($generated@@248 0) $generated@@499)))) (and (=> (not (= $generated@@499 ($generated@@248 0))) ($generated@@368 (- $generated@@499 1))) (= ($generated@@366 ($generated@@444 $generated@@498) $generated@@499) (ite (= $generated@@499 ($generated@@248 0)) true ($generated@@366 $generated@@498 (- $generated@@499 1))))))
 :pattern ( ($generated@@366 ($generated@@444 $generated@@498) $generated@@499))
))))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@77 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@77 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@238 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@238 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@74 ($generated@@238 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@506 ($generated@@243 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@243 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@155 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@155 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@514 ($generated@@488 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@488 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@74 ($generated@@488 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@326 $generated@@519 ($generated@@276 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@276 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@289 $generated@@150 $generated@@150)) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) (= ($generated@@137 $generated@@520 ($generated@@397 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@520) $generated@@523))) (and ($generated@@229 ($generated@@83 ($generated@@372 $generated@@520) $generated@@523) $generated@@522) ($generated@@229 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@520) $generated@@523))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@137 $generated@@520 ($generated@@397 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@307 $generated@@150 $generated@@150)) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) (= ($generated@@137 $generated@@524 ($generated@@405 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@524) $generated@@527))) (and ($generated@@229 ($generated@@83 ($generated@@380 $generated@@524) $generated@@527) $generated@@526) ($generated@@229 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@524) $generated@@527))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@137 $generated@@524 ($generated@@405 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@150) (= (type $generated@@531) $generated@@150)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@228 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@228 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@150) (= (type $generated@@533) $generated@@150)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@228 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@228 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@150) (= (type $generated@@535) $generated@@66)) (= (type $generated@@536) $generated@@66)) ($generated@@229 $generated@@534 ($generated@@397 $generated@@535 $generated@@536))) (and (= ($generated@@276 ($generated@@326 ($generated@@289 $generated@@150 $generated@@150) $generated@@534)) $generated@@534) ($generated@@137 ($generated@@326 ($generated@@289 $generated@@150 $generated@@150) $generated@@534) ($generated@@397 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@534 ($generated@@397 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@66)) (= (type $generated@@539) $generated@@66)) ($generated@@229 $generated@@537 ($generated@@405 $generated@@538 $generated@@539))) (and (= ($generated@@276 ($generated@@326 ($generated@@307 $generated@@150 $generated@@150) $generated@@537)) $generated@@537) ($generated@@137 ($generated@@326 ($generated@@307 $generated@@150 $generated@@150) $generated@@537) ($generated@@405 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@229 $generated@@537 ($generated@@405 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@66) (= (type $generated@@541) $generated@@66)) (= (type $generated@@542) $generated@@150)) ($generated@@229 $generated@@542 ($generated@@140 $generated@@540 $generated@@541))) (and (= ($generated@@276 ($generated@@326 $generated@@141 $generated@@542)) $generated@@542) ($generated@@137 ($generated@@326 $generated@@141 $generated@@542) ($generated@@140 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@229 $generated@@542 ($generated@@140 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@83 ($generated@@418 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@83 ($generated@@418 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@71)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@66) (= (type $generated@@548) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@547 $generated@@548)) $generated@@63) (= ($generated@@545 ($generated@@140 $generated@@547 $generated@@548)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@141) (= ($generated@@528 ($generated@@276 $generated@@549)) ($generated@@529 $generated@@549)))
 :pattern ( ($generated@@528 ($generated@@276 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@150) ($generated@@229 $generated@@550 ($generated@@77 0))) (and (= ($generated@@276 ($generated@@326 $generated@@2 $generated@@550)) $generated@@550) ($generated@@137 ($generated@@326 ($generated@@78 $generated@@150 $generated@@4) $generated@@550) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@77 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@150) (= (type $generated@@552) $generated@@66)) ($generated@@229 $generated@@551 ($generated@@238 $generated@@552))) (and (= ($generated@@276 ($generated@@326 ($generated@@78 $generated@@150 $generated@@4) $generated@@551)) $generated@@551) ($generated@@137 ($generated@@326 ($generated@@78 $generated@@150 $generated@@4) $generated@@551) ($generated@@238 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@238 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@150) (= (type $generated@@554) $generated@@66)) ($generated@@229 $generated@@553 ($generated@@243 $generated@@554))) (and (= ($generated@@276 ($generated@@326 ($generated@@78 $generated@@150 $generated@@4) $generated@@553)) $generated@@553) ($generated@@137 ($generated@@326 ($generated@@78 $generated@@150 $generated@@4) $generated@@553) ($generated@@243 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@243 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@150) (= (type $generated@@556) $generated@@66)) ($generated@@229 $generated@@555 ($generated@@155 $generated@@556))) (and (= ($generated@@276 ($generated@@326 ($generated@@78 $generated@@150 $generated@@2) $generated@@555)) $generated@@555) ($generated@@137 ($generated@@326 ($generated@@78 $generated@@150 $generated@@2) $generated@@555) ($generated@@155 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@155 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@150) (= (type $generated@@558) $generated@@66)) ($generated@@229 $generated@@557 ($generated@@488 $generated@@558))) (and (= ($generated@@276 ($generated@@326 ($generated@@269 $generated@@150) $generated@@557)) $generated@@557) ($generated@@137 ($generated@@326 ($generated@@269 $generated@@150) $generated@@557) ($generated@@488 $generated@@558))))
 :pattern ( ($generated@@229 $generated@@557 ($generated@@488 $generated@@558)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@545 $generated@@134) $generated@@64))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@560) $generated@@66)) (= (type $generated@@561) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@559 ($generated@@155 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@559 $generated@@562)))) ($generated@@255 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@83 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@76 $generated@@559 ($generated@@155 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@141) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@565) (and ($generated@@139 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@66) ($generated@@76 $generated@@563 ($generated@@140 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@76 $generated@@563 ($generated@@140 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@255 ($generated@@148 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@255 ($generated@@148 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@141) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@569) (and ($generated@@139 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@66) ($generated@@76 $generated@@567 ($generated@@140 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@76 $generated@@567 ($generated@@140 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@255 ($generated@@149 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@255 ($generated@@149 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@150) (= (type $generated@@572) $generated@@150)) (= ($generated@@228 ($generated@@250 $generated@@571) ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@228 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@571) ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@276 ($generated@@8 ($generated@@248 $generated@@573))) ($generated@@250 ($generated@@276 ($generated@@8 $generated@@573))))
 :pattern ( ($generated@@276 ($generated@@8 ($generated@@248 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@276 ($generated@@250 $generated@@574)) ($generated@@250 ($generated@@276 $generated@@574)))
 :pattern ( ($generated@@276 ($generated@@250 $generated@@574)))
)))
(assert  (=> (<= 1 $generated@@365) (forall (($generated@@575 T@U) ($generated@@576 Int) ) (!  (=> (and (= (type $generated@@575) $generated@@367) (or ($generated@@368 ($generated@@248 $generated@@576)) (and (not (= 1 $generated@@365)) (<= ($generated@@248 0) $generated@@576)))) (and (=> (not (= ($generated@@248 $generated@@576) ($generated@@248 0))) ($generated@@368 ($generated@@248 (- $generated@@576 1)))) (= ($generated@@366 ($generated@@444 $generated@@575) ($generated@@248 $generated@@576)) (ite (= ($generated@@248 $generated@@576) ($generated@@248 0)) true ($generated@@366 ($generated@@444 $generated@@575) ($generated@@248 (- $generated@@576 1)))))))
 :weight 3
 :pattern ( ($generated@@366 ($generated@@444 $generated@@575) ($generated@@248 $generated@@576)))
))))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@270 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@269 $generated@@578)) (= ($generated@@268 $generated@@577) 0)) (= $generated@@577 ($generated@@267 $generated@@578))))
 :pattern ( ($generated@@268 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@78 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@281 ($generated@@84 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@281 $generated@@579) ($generated ($generated@@83 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@584) $generated@@2)) ($generated@@76 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@76 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) $generated@@3)) ($generated@@76 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@76 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@588) $generated@@4)) ($generated@@76 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@76 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@442)) ($generated@@76 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@150)) ($generated@@76 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@269 $generated@@150)) (= (type $generated@@594) $generated@@66)) (= ($generated@@137 $generated@@593 ($generated@@488 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@268 $generated@@593))) ($generated@@229 ($generated@@489 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@489 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@137 $generated@@593 ($generated@@488 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@269 $generated@@150)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@268 $generated@@597))) (< ($generated@@529 ($generated@@326 $generated@@141 ($generated@@489 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@529 ($generated@@326 $generated@@141 ($generated@@489 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@289 $generated@@150 $generated@@150)) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) $generated@@66)) ($generated@@137 $generated@@599 ($generated@@397 $generated@@600 $generated@@601))) (and (and ($generated@@137 ($generated@@287 $generated@@599) ($generated@@238 $generated@@600)) ($generated@@137 ($generated@@334 $generated@@599) ($generated@@238 $generated@@601))) ($generated@@137 ($generated@@371 $generated@@599) ($generated@@238 ($generated@@140 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@137 $generated@@599 ($generated@@397 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@307 $generated@@150 $generated@@150)) (= (type $generated@@603) $generated@@66)) (= (type $generated@@604) $generated@@66)) ($generated@@137 $generated@@602 ($generated@@405 $generated@@603 $generated@@604))) (and (and ($generated@@137 ($generated@@305 $generated@@602) ($generated@@243 $generated@@603)) ($generated@@137 ($generated@@345 $generated@@602) ($generated@@243 $generated@@604))) ($generated@@137 ($generated@@379 $generated@@602) ($generated@@243 ($generated@@140 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@137 $generated@@602 ($generated@@405 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@137 $generated@@605 $generated@@46))
 :pattern ( ($generated@@137 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@137 $generated@@606 $generated@@47))
 :pattern ( ($generated@@137 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@137 $generated@@607 $generated@@44))
 :pattern ( ($generated@@137 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@442) ($generated@@137 $generated@@608 $generated@@45))
 :pattern ( ($generated@@137 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@150) ($generated@@137 $generated@@609 $generated@@48))
 :pattern ( ($generated@@137 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@612) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@613) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@614) $generated@@79)) (= (type $generated@@615) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@616) $generated@@367)) (= (type $generated@@617) $generated@@367)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@619  (=> (not (= $generated@@610 ($generated@@248 0))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@137 ($generated@@8 (- $generated@@610 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@610 1)) $generated@@134) (=> (and (= $generated@@611 (- $generated@@610 1)) ($generated@@76 ($generated@@8 $generated@@611) $generated@@134 $generated@@612)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@610) (= $generated@@611 $generated@@610))) (=> (or (<= 0 $generated@@610) (= $generated@@611 $generated@@610)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@611 $generated@@610))))))))))
(let (($generated@@620 true))
(let (($generated@@621  (=> (= $generated@@613 ($generated@@216 $generated@@614 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@620) (=> (= (ControlFlow 0 7) 4) $generated@@619)))))
(let (($generated@@622 true))
(let (($generated@@623  (=> (= $generated@@615 ($generated@@161 $generated@@614 $generated@@612 $generated@@60 false)) (=> (and (= ($generated@@413 $generated@@616) $generated@@616) (= ($generated@@413 $generated@@617) $generated@@617)) (and (=> (= (ControlFlow 0 8) 1) $generated@@622) (=> (= (ControlFlow 0 8) 7) $generated@@621))))))
(let (($generated@@624  (=> (and (and (and ($generated@@254 $generated@@612) ($generated@@618 $generated@@612)) (<= ($generated@@248 0) $generated@@610)) (and (= 1 $generated@@365) (= (ControlFlow 0 9) 8))) $generated@@623)))
$generated@@624)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@276 (T@T T@T) T@U)
(declare-fun $generated@@277 (T@T T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@314 (T@T T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@353 () Int)
(declare-fun $generated@@354 (T@U Int) Bool)
(declare-fun $generated@@355 () T@T)
(declare-fun $generated@@356 (Int) Bool)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@430 () T@T)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@2) (= ($generated@@137 $generated@@263 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@263))))
 :pattern ( ($generated@@137 $generated@@263 $generated@@134))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@150)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@66) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268) ($generated@@76 $generated@@266 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@T) ) (! (= (type ($generated@@270 $generated@@271)) ($generated@@78 $generated@@271 $generated@@2))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@81 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@78 $generated@@273 $generated@@2)) (and (= (= ($generated@@269 $generated@@272) 0) (= $generated@@272 ($generated@@270 $generated@@273))) (=> (not (= ($generated@@269 $generated@@272) 0)) (exists (($generated@@274 T@U) ) (!  (and (= (type $generated@@274) $generated@@273) (< 0 ($generated ($generated@@83 $generated@@272 $generated@@274))))
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
))))))
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert  (and (and (and (and (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@280 $generated@@281)) 18)) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@282 $generated@@283)) $generated@@282)
 :pattern ( ($generated@@277 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@277 $generated@@284 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@277 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@278 (type $generated@@286))))
(= (type ($generated@@275 $generated@@286)) ($generated@@78 $generated@@287 $generated@@4)))
 :pattern ( ($generated@@275 $generated@@286))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= (type ($generated@@276 $generated@@288 $generated@@289)) ($generated@@277 $generated@@288 $generated@@289))
 :pattern ( ($generated@@276 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@T) ) (! (let (($generated@@292 (type $generated@@290)))
 (not ($generated@@0 ($generated@@83 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290))))
 :pattern ( (let (($generated@@292 (type $generated@@290)))
($generated@@83 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290)))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 19)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@78 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@81 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@78 $generated@@312 $generated@@2)) (= ($generated@@156 $generated@@311) (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@312) (and (<= 0 ($generated ($generated@@83 $generated@@311 $generated@@313))) (<= ($generated ($generated@@83 $generated@@311 $generated@@313)) ($generated@@269 $generated@@311))))
 :pattern ( ($generated@@83 $generated@@311 $generated@@313))
)))))
 :pattern ( ($generated@@156 $generated@@311))
)))
(assert (forall (($generated@@315 T@T) ($generated@@316 T@U) ) (! (= (type ($generated@@314 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@314 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@150) ($generated@@217 $generated@@317 $generated@@134)) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@317)) $generated@@317) ($generated@@137 ($generated@@314 $generated@@2 $generated@@317) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@317 $generated@@134))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@279 (type $generated@@318))))
(let (($generated@@320 ($generated@@278 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@277 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@276 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@275 $generated@@318))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@279 (type $generated@@323))))
(= (type ($generated@@322 $generated@@323)) ($generated@@78 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@279 (type $generated@@325))))
(let (($generated@@327 ($generated@@278 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@277 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@276 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@326) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@297 (type $generated@@329))))
(let (($generated@@331 ($generated@@296 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@295 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@294 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@293 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@297 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@297 (type $generated@@336))))
(let (($generated@@338 ($generated@@296 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@295 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@294 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@341) $generated@@66)) (= ($generated@@137 $generated@@340 ($generated@@155 $generated@@341)) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@340 $generated@@342)))) ($generated@@217 $generated@@342 $generated@@341))
 :pattern ( ($generated@@83 $generated@@340 $generated@@342))
))))
 :pattern ( ($generated@@137 $generated@@340 ($generated@@155 $generated@@341)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@344) $generated@@66)) (= (type $generated@@345) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@343 ($generated@@226 $generated@@344) $generated@@345) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@150) ($generated@@0 ($generated@@83 $generated@@343 $generated@@346))) ($generated@@243 $generated@@346 $generated@@344 $generated@@345))
 :pattern ( ($generated@@83 $generated@@343 $generated@@346))
))))
 :pattern ( ($generated@@76 $generated@@343 ($generated@@226 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@348) $generated@@66)) (= (type $generated@@349) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@150) ($generated@@0 ($generated@@83 $generated@@347 $generated@@350))) ($generated@@243 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@83 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@76 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
(= ($generated ($generated@@83 ($generated@@270 $generated@@352) $generated@@351)) 0))
 :pattern ( (let (($generated@@352 (type $generated@@351)))
($generated@@83 ($generated@@270 $generated@@352) $generated@@351)))
)))
(assert (= ($generated@@1 $generated@@355) 20))
(assert  (=> (<= 1 $generated@@353) (forall (($generated@@357 T@U) ($generated@@358 Int) ) (!  (=> (and (= (type $generated@@357) $generated@@355) (or ($generated@@356 $generated@@358) (and (not (= 1 $generated@@353)) (<= ($generated@@236 0) $generated@@358)))) true)
 :pattern ( ($generated@@354 $generated@@357 $generated@@358))
))))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@279 (type $generated@@362))))
(let (($generated@@364 ($generated@@278 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@78 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@366) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@83 ($generated@@275 $generated@@365) ($generated@@148 ($generated@@314 $generated@@141 $generated@@366)))) (= ($generated@@83 ($generated@@360 $generated@@365) ($generated@@148 ($generated@@314 $generated@@141 $generated@@366))) ($generated@@149 ($generated@@314 $generated@@141 $generated@@366))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@297 (type $generated@@370))))
(let (($generated@@372 ($generated@@296 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@374) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@373) ($generated@@148 ($generated@@314 $generated@@141 $generated@@374)))) (= ($generated@@83 ($generated@@368 $generated@@373) ($generated@@148 ($generated@@314 $generated@@141 $generated@@374))) ($generated@@149 ($generated@@314 $generated@@141 $generated@@374))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@278 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@277 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@83 ($generated@@322 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@83 ($generated@@275 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@83 ($generated@@360 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@375) $generated@@379))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@296 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@295 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@83 ($generated@@333 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@83 ($generated@@368 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@380) $generated@@384))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@66)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@389) $generated@@66)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@388) $generated@@392))) (and ($generated@@243 ($generated@@83 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@243 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@76 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@396) $generated@@400))) (and ($generated@@243 ($generated@@83 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@243 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) $generated@@355)
 :pattern ( ($generated@@401 $generated@@403))
)) (= (type $generated@@402) $generated@@355)))
(assert (forall (($generated@@404 T@U) ($generated@@405 Int) ) (!  (=> (= (type $generated@@404) $generated@@355) (= ($generated@@354 $generated@@404 $generated@@405) ($generated@@354 $generated@@402 $generated@@405)))
 :pattern ( ($generated@@354 ($generated@@401 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@78 $generated@@407 $generated@@4))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@297 (type $generated@@408))))
(let (($generated@@410 ($generated@@296 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@295 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@294 $generated@@410 $generated@@409)) (= ($generated@@293 $generated@@408) ($generated@@406 $generated@@410))))))
 :pattern ( ($generated@@293 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@297 (type $generated@@411))))
(let (($generated@@413 ($generated@@296 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@295 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@294 $generated@@413 $generated@@412)) (= ($generated@@333 $generated@@411) ($generated@@406 $generated@@412))))))
 :pattern ( ($generated@@333 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@297 (type $generated@@414))))
(let (($generated@@416 ($generated@@296 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@295 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@294 $generated@@416 $generated@@415)) (= ($generated@@367 $generated@@414) ($generated@@406 $generated@@150))))))
 :pattern ( ($generated@@367 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@279 (type $generated@@417))))
(let (($generated@@419 ($generated@@278 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@277 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@276 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@150) (= (type $generated@@421) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@417) ($generated@@264 ($generated@@216 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@359 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@297 (type $generated@@422))))
(let (($generated@@424 ($generated@@296 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@295 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@294 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@150) (= (type $generated@@426) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@422) ($generated@@264 ($generated@@216 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@367 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@150) ($generated@@217 $generated@@427 $generated@@46)) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@427)) $generated@@427) ($generated@@137 ($generated@@314 $generated@@2 $generated@@427) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@427 $generated@@46))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@217 $generated@@428 $generated@@47)) (and (= ($generated@@264 ($generated@@314 $generated@@3 $generated@@428)) $generated@@428) ($generated@@137 ($generated@@314 $generated@@3 $generated@@428) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@428 $generated@@47))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@150) ($generated@@217 $generated@@429 $generated@@44)) (and (= ($generated@@264 ($generated@@314 $generated@@4 $generated@@429)) $generated@@429) ($generated@@137 ($generated@@314 $generated@@4 $generated@@429) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@429 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@430) 21))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@150) ($generated@@217 $generated@@431 $generated@@45)) (and (= ($generated@@264 ($generated@@314 $generated@@430 $generated@@431)) $generated@@431) ($generated@@137 ($generated@@314 $generated@@430 $generated@@431) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@431 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@355)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 Int) ) (!  (=> (= (type $generated@@434) $generated@@355) (= ($generated@@354 ($generated@@432 $generated@@434) $generated@@435) ($generated@@354 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@354 ($generated@@432 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@217 ($generated@@264 $generated@@436) $generated@@437) ($generated@@137 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@217 ($generated@@264 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@269 $generated@@438))))
 :pattern ( ($generated@@269 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@258 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@257 $generated@@441)) (<= 0 ($generated@@256 $generated@@440))))
 :pattern ( ($generated@@256 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@385 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@385 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@385 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@385 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@385 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@393 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@393 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@393 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@393 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@393 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@150) (= (type $generated@@463) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@140 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@140 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@140 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@140 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@150) (= (type $generated@@473) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@216 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@150) (= (type $generated@@475) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@216 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@258 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@257 $generated@@150)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@256 $generated@@482))) ($generated@@243 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert  (=> (<= 1 $generated@@353) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (!  (=> (and (= (type $generated@@486) $generated@@355) (or ($generated@@356 $generated@@487) (and (not (= 1 $generated@@353)) (<= ($generated@@236 0) $generated@@487)))) (and (=> (not (= $generated@@487 ($generated@@236 0))) ($generated@@356 (- $generated@@487 1))) (= ($generated@@354 ($generated@@432 $generated@@486) $generated@@487) (ite (= $generated@@487 ($generated@@236 0)) true ($generated@@354 $generated@@486 (- $generated@@487 1))))))
 :pattern ( ($generated@@354 ($generated@@432 $generated@@486) $generated@@487))
))))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@77 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@77 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@490 ($generated@@226 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@226 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@494 ($generated@@231 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@231 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@498 ($generated@@155 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@155 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@476 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@476 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@314 $generated@@507 ($generated@@264 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@264 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@509) $generated@@66)) (= (type $generated@@510) $generated@@66)) (= ($generated@@137 $generated@@508 ($generated@@385 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@508) $generated@@511))) (and ($generated@@217 ($generated@@83 ($generated@@360 $generated@@508) $generated@@511) $generated@@510) ($generated@@217 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@508) $generated@@511))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@137 $generated@@508 ($generated@@385 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@513) $generated@@66)) (= (type $generated@@514) $generated@@66)) (= ($generated@@137 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@512) $generated@@515))) (and ($generated@@217 ($generated@@83 ($generated@@368 $generated@@512) $generated@@515) $generated@@514) ($generated@@217 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@512) $generated@@515))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@137 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) (= (type $generated@@519) $generated@@150)) (< ($generated@@516 $generated@@518) ($generated@@517 ($generated@@216 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@216 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@150) (= (type $generated@@521) $generated@@150)) (< ($generated@@516 $generated@@521) ($generated@@517 ($generated@@216 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@216 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@385 $generated@@523 $generated@@524))) (and (= ($generated@@264 ($generated@@314 ($generated@@277 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@314 ($generated@@277 $generated@@150 $generated@@150) $generated@@522) ($generated@@385 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@385 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@393 $generated@@526 $generated@@527))) (and (= ($generated@@264 ($generated@@314 ($generated@@295 $generated@@150 $generated@@150) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@314 ($generated@@295 $generated@@150 $generated@@150) $generated@@525) ($generated@@393 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@393 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@150)) ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529))) (and (= ($generated@@264 ($generated@@314 $generated@@141 $generated@@530)) $generated@@530) ($generated@@137 ($generated@@314 $generated@@141 $generated@@530) ($generated@@140 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@83 ($generated@@406 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@83 ($generated@@406 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@535 $generated@@536)) $generated@@63) (= ($generated@@533 ($generated@@140 $generated@@535 $generated@@536)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@141) (= ($generated@@516 ($generated@@264 $generated@@537)) ($generated@@517 $generated@@537)))
 :pattern ( ($generated@@516 ($generated@@264 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@150) ($generated@@217 $generated@@538 ($generated@@77 0))) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@538)) $generated@@538) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@538) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@538 ($generated@@77 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@66)) ($generated@@217 $generated@@539 ($generated@@226 $generated@@540))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@539)) $generated@@539) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@539) ($generated@@226 $generated@@540))))
 :pattern ( ($generated@@217 $generated@@539 ($generated@@226 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@150) (= (type $generated@@542) $generated@@66)) ($generated@@217 $generated@@541 ($generated@@231 $generated@@542))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@541)) $generated@@541) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@231 $generated@@542))))
 :pattern ( ($generated@@217 $generated@@541 ($generated@@231 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@150) (= (type $generated@@544) $generated@@66)) ($generated@@217 $generated@@543 ($generated@@155 $generated@@544))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@2) $generated@@543)) $generated@@543) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@2) $generated@@543) ($generated@@155 $generated@@544))))
 :pattern ( ($generated@@217 $generated@@543 ($generated@@155 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@150) (= (type $generated@@546) $generated@@66)) ($generated@@217 $generated@@545 ($generated@@476 $generated@@546))) (and (= ($generated@@264 ($generated@@314 ($generated@@257 $generated@@150) $generated@@545)) $generated@@545) ($generated@@137 ($generated@@314 ($generated@@257 $generated@@150) $generated@@545) ($generated@@476 $generated@@546))))
 :pattern ( ($generated@@217 $generated@@545 ($generated@@476 $generated@@546)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@533 $generated@@134) $generated@@64))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@547 ($generated@@155 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@547 $generated@@550)))) ($generated@@243 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@83 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@76 $generated@@547 ($generated@@155 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@141) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@553) (and ($generated@@139 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@66) ($generated@@76 $generated@@551 ($generated@@140 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@76 $generated@@551 ($generated@@140 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@243 ($generated@@148 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@141) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@557) (and ($generated@@139 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@66) ($generated@@76 $generated@@555 ($generated@@140 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@76 $generated@@555 ($generated@@140 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@243 ($generated@@149 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@150) (= (type $generated@@560) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@559) ($generated@@238 $generated@@560)) ($generated@@238 ($generated@@216 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@559) ($generated@@238 $generated@@560)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@264 ($generated@@8 ($generated@@236 $generated@@561))) ($generated@@238 ($generated@@264 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@264 ($generated@@8 ($generated@@236 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@264 ($generated@@238 $generated@@562)) ($generated@@238 ($generated@@264 $generated@@562)))
 :pattern ( ($generated@@264 ($generated@@238 $generated@@562)))
)))
(assert  (=> (<= 1 $generated@@353) (forall (($generated@@563 T@U) ($generated@@564 Int) ) (!  (=> (and (= (type $generated@@563) $generated@@355) (or ($generated@@356 ($generated@@236 $generated@@564)) (and (not (= 1 $generated@@353)) (<= ($generated@@236 0) $generated@@564)))) (and (=> (not (= ($generated@@236 $generated@@564) ($generated@@236 0))) ($generated@@356 ($generated@@236 (- $generated@@564 1)))) (= ($generated@@354 ($generated@@432 $generated@@563) ($generated@@236 $generated@@564)) (ite (= ($generated@@236 $generated@@564) ($generated@@236 0)) true ($generated@@354 ($generated@@432 $generated@@563) ($generated@@236 (- $generated@@564 1)))))))
 :weight 3
 :pattern ( ($generated@@354 ($generated@@432 $generated@@563) ($generated@@236 $generated@@564)))
))))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@258 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@257 $generated@@566)) (= ($generated@@256 $generated@@565) 0)) (= $generated@@565 ($generated@@255 $generated@@566))))
 :pattern ( ($generated@@256 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@78 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@269 ($generated@@84 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@269 $generated@@567) ($generated ($generated@@83 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@269 ($generated@@84 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@2)) ($generated@@76 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@3)) ($generated@@76 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@4)) ($generated@@76 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@578) $generated@@430)) ($generated@@76 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@76 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@150)) ($generated@@76 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@257 $generated@@150)) (= (type $generated@@582) $generated@@66)) (= ($generated@@137 $generated@@581 ($generated@@476 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@256 $generated@@581))) ($generated@@217 ($generated@@477 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@477 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@137 $generated@@581 ($generated@@476 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@256 $generated@@585))) (< ($generated@@517 ($generated@@314 $generated@@141 ($generated@@477 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@517 ($generated@@314 $generated@@141 ($generated@@477 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) $generated@@66)) ($generated@@137 $generated@@587 ($generated@@385 $generated@@588 $generated@@589))) (and (and ($generated@@137 ($generated@@275 $generated@@587) ($generated@@226 $generated@@588)) ($generated@@137 ($generated@@322 $generated@@587) ($generated@@226 $generated@@589))) ($generated@@137 ($generated@@359 $generated@@587) ($generated@@226 ($generated@@140 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@137 $generated@@587 ($generated@@385 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@591) $generated@@66)) (= (type $generated@@592) $generated@@66)) ($generated@@137 $generated@@590 ($generated@@393 $generated@@591 $generated@@592))) (and (and ($generated@@137 ($generated@@293 $generated@@590) ($generated@@231 $generated@@591)) ($generated@@137 ($generated@@333 $generated@@590) ($generated@@231 $generated@@592))) ($generated@@137 ($generated@@367 $generated@@590) ($generated@@231 ($generated@@140 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@137 $generated@@590 ($generated@@393 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@137 $generated@@593 $generated@@46))
 :pattern ( ($generated@@137 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@137 $generated@@594 $generated@@47))
 :pattern ( ($generated@@137 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@137 $generated@@595 $generated@@44))
 :pattern ( ($generated@@137 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@430) ($generated@@137 $generated@@596 $generated@@45))
 :pattern ( ($generated@@137 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@150) ($generated@@137 $generated@@597 $generated@@48))
 :pattern ( ($generated@@137 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@598) $generated@@355) (= (type $generated@@599) $generated@@355)) (= (type $generated@@600) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@601) $generated@@79)) (= (type $generated@@602) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@605) $generated@@355)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@607  (=> (= ($generated@@401 $generated@@598) $generated@@598) (=> (and (and (and (= ($generated@@401 $generated@@599) $generated@@599) (= $generated@@600 ($generated@@161 $generated@@601 $generated@@602 $generated@@60 false))) (and ($generated@@242 $generated@@603) ($generated@@604 $generated@@603))) (and (and (= $generated@@602 $generated@@603) (= $generated@@598 ($generated@@432 $generated@@605))) (and (= $generated@@599 ($generated@@432 ($generated@@432 $generated@@605))) (= ($generated@@401 $generated@@605) $generated@@605)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@137 ($generated@@8 ($generated@@236 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@236 1)) $generated@@134) (=> (= $generated@@606 ($generated@@236 1)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@606) $generated@@134 $generated@@603) ($generated@@356 ($generated@@236 1))) (and ($generated@@356 ($generated@@236 1)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@354 $generated@@599 ($generated@@236 1))))))))))
(let (($generated@@608  (=> (and (and ($generated@@242 $generated@@602) ($generated@@604 $generated@@602)) (and (= 2 $generated@@353) (= (ControlFlow 0 4) 2))) $generated@@607)))
$generated@@608)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@276 (T@T T@T) T@U)
(declare-fun $generated@@277 (T@T T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@314 (T@T T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@353 () Int)
(declare-fun $generated@@354 (T@U Int) Bool)
(declare-fun $generated@@355 () T@T)
(declare-fun $generated@@356 (Int) Bool)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@430 () T@T)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@2) (= ($generated@@137 $generated@@263 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@263))))
 :pattern ( ($generated@@137 $generated@@263 $generated@@134))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@150)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@66) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268) ($generated@@76 $generated@@266 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@T) ) (! (= (type ($generated@@270 $generated@@271)) ($generated@@78 $generated@@271 $generated@@2))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@81 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@78 $generated@@273 $generated@@2)) (and (= (= ($generated@@269 $generated@@272) 0) (= $generated@@272 ($generated@@270 $generated@@273))) (=> (not (= ($generated@@269 $generated@@272) 0)) (exists (($generated@@274 T@U) ) (!  (and (= (type $generated@@274) $generated@@273) (< 0 ($generated ($generated@@83 $generated@@272 $generated@@274))))
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
))))))
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert  (and (and (and (and (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@280 $generated@@281)) 18)) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@282 $generated@@283)) $generated@@282)
 :pattern ( ($generated@@277 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@277 $generated@@284 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@277 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@278 (type $generated@@286))))
(= (type ($generated@@275 $generated@@286)) ($generated@@78 $generated@@287 $generated@@4)))
 :pattern ( ($generated@@275 $generated@@286))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= (type ($generated@@276 $generated@@288 $generated@@289)) ($generated@@277 $generated@@288 $generated@@289))
 :pattern ( ($generated@@276 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@T) ) (! (let (($generated@@292 (type $generated@@290)))
 (not ($generated@@0 ($generated@@83 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290))))
 :pattern ( (let (($generated@@292 (type $generated@@290)))
($generated@@83 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290)))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 19)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@78 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@81 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@78 $generated@@312 $generated@@2)) (= ($generated@@156 $generated@@311) (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@312) (and (<= 0 ($generated ($generated@@83 $generated@@311 $generated@@313))) (<= ($generated ($generated@@83 $generated@@311 $generated@@313)) ($generated@@269 $generated@@311))))
 :pattern ( ($generated@@83 $generated@@311 $generated@@313))
)))))
 :pattern ( ($generated@@156 $generated@@311))
)))
(assert (forall (($generated@@315 T@T) ($generated@@316 T@U) ) (! (= (type ($generated@@314 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@314 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@150) ($generated@@217 $generated@@317 $generated@@134)) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@317)) $generated@@317) ($generated@@137 ($generated@@314 $generated@@2 $generated@@317) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@317 $generated@@134))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@279 (type $generated@@318))))
(let (($generated@@320 ($generated@@278 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@277 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@276 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@275 $generated@@318))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@279 (type $generated@@323))))
(= (type ($generated@@322 $generated@@323)) ($generated@@78 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@279 (type $generated@@325))))
(let (($generated@@327 ($generated@@278 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@277 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@276 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@326) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@297 (type $generated@@329))))
(let (($generated@@331 ($generated@@296 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@295 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@294 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@293 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@297 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@297 (type $generated@@336))))
(let (($generated@@338 ($generated@@296 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@295 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@294 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@341) $generated@@66)) (= ($generated@@137 $generated@@340 ($generated@@155 $generated@@341)) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@340 $generated@@342)))) ($generated@@217 $generated@@342 $generated@@341))
 :pattern ( ($generated@@83 $generated@@340 $generated@@342))
))))
 :pattern ( ($generated@@137 $generated@@340 ($generated@@155 $generated@@341)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@344) $generated@@66)) (= (type $generated@@345) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@343 ($generated@@226 $generated@@344) $generated@@345) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@150) ($generated@@0 ($generated@@83 $generated@@343 $generated@@346))) ($generated@@243 $generated@@346 $generated@@344 $generated@@345))
 :pattern ( ($generated@@83 $generated@@343 $generated@@346))
))))
 :pattern ( ($generated@@76 $generated@@343 ($generated@@226 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@348) $generated@@66)) (= (type $generated@@349) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@150) ($generated@@0 ($generated@@83 $generated@@347 $generated@@350))) ($generated@@243 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@83 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@76 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
(= ($generated ($generated@@83 ($generated@@270 $generated@@352) $generated@@351)) 0))
 :pattern ( (let (($generated@@352 (type $generated@@351)))
($generated@@83 ($generated@@270 $generated@@352) $generated@@351)))
)))
(assert (= ($generated@@1 $generated@@355) 20))
(assert  (=> (<= 1 $generated@@353) (forall (($generated@@357 T@U) ($generated@@358 Int) ) (!  (=> (and (= (type $generated@@357) $generated@@355) (or ($generated@@356 $generated@@358) (and (not (= 1 $generated@@353)) (<= ($generated@@236 0) $generated@@358)))) true)
 :pattern ( ($generated@@354 $generated@@357 $generated@@358))
))))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@279 (type $generated@@362))))
(let (($generated@@364 ($generated@@278 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@78 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@366) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@83 ($generated@@275 $generated@@365) ($generated@@148 ($generated@@314 $generated@@141 $generated@@366)))) (= ($generated@@83 ($generated@@360 $generated@@365) ($generated@@148 ($generated@@314 $generated@@141 $generated@@366))) ($generated@@149 ($generated@@314 $generated@@141 $generated@@366))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@297 (type $generated@@370))))
(let (($generated@@372 ($generated@@296 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@374) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@373) ($generated@@148 ($generated@@314 $generated@@141 $generated@@374)))) (= ($generated@@83 ($generated@@368 $generated@@373) ($generated@@148 ($generated@@314 $generated@@141 $generated@@374))) ($generated@@149 ($generated@@314 $generated@@141 $generated@@374))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@278 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@277 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@83 ($generated@@322 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@83 ($generated@@275 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@83 ($generated@@360 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@375) $generated@@379))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@296 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@295 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@83 ($generated@@333 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@83 ($generated@@368 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@380) $generated@@384))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@66)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@389) $generated@@66)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@388) $generated@@392))) (and ($generated@@243 ($generated@@83 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@243 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@76 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@396) $generated@@400))) (and ($generated@@243 ($generated@@83 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@243 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) $generated@@355)
 :pattern ( ($generated@@401 $generated@@403))
)) (= (type $generated@@402) $generated@@355)))
(assert (forall (($generated@@404 T@U) ($generated@@405 Int) ) (!  (=> (= (type $generated@@404) $generated@@355) (= ($generated@@354 $generated@@404 $generated@@405) ($generated@@354 $generated@@402 $generated@@405)))
 :pattern ( ($generated@@354 ($generated@@401 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@78 $generated@@407 $generated@@4))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@297 (type $generated@@408))))
(let (($generated@@410 ($generated@@296 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@295 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@294 $generated@@410 $generated@@409)) (= ($generated@@293 $generated@@408) ($generated@@406 $generated@@410))))))
 :pattern ( ($generated@@293 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@297 (type $generated@@411))))
(let (($generated@@413 ($generated@@296 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@295 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@294 $generated@@413 $generated@@412)) (= ($generated@@333 $generated@@411) ($generated@@406 $generated@@412))))))
 :pattern ( ($generated@@333 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@297 (type $generated@@414))))
(let (($generated@@416 ($generated@@296 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@295 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@294 $generated@@416 $generated@@415)) (= ($generated@@367 $generated@@414) ($generated@@406 $generated@@150))))))
 :pattern ( ($generated@@367 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@279 (type $generated@@417))))
(let (($generated@@419 ($generated@@278 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@277 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@276 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@150) (= (type $generated@@421) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@417) ($generated@@264 ($generated@@216 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@359 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@297 (type $generated@@422))))
(let (($generated@@424 ($generated@@296 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@295 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@294 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@150) (= (type $generated@@426) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@422) ($generated@@264 ($generated@@216 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@367 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@150) ($generated@@217 $generated@@427 $generated@@46)) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@427)) $generated@@427) ($generated@@137 ($generated@@314 $generated@@2 $generated@@427) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@427 $generated@@46))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@217 $generated@@428 $generated@@47)) (and (= ($generated@@264 ($generated@@314 $generated@@3 $generated@@428)) $generated@@428) ($generated@@137 ($generated@@314 $generated@@3 $generated@@428) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@428 $generated@@47))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@150) ($generated@@217 $generated@@429 $generated@@44)) (and (= ($generated@@264 ($generated@@314 $generated@@4 $generated@@429)) $generated@@429) ($generated@@137 ($generated@@314 $generated@@4 $generated@@429) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@429 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@430) 21))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@150) ($generated@@217 $generated@@431 $generated@@45)) (and (= ($generated@@264 ($generated@@314 $generated@@430 $generated@@431)) $generated@@431) ($generated@@137 ($generated@@314 $generated@@430 $generated@@431) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@431 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@355)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 Int) ) (!  (=> (= (type $generated@@434) $generated@@355) (= ($generated@@354 ($generated@@432 $generated@@434) $generated@@435) ($generated@@354 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@354 ($generated@@432 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@217 ($generated@@264 $generated@@436) $generated@@437) ($generated@@137 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@217 ($generated@@264 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@269 $generated@@438))))
 :pattern ( ($generated@@269 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@258 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@257 $generated@@441)) (<= 0 ($generated@@256 $generated@@440))))
 :pattern ( ($generated@@256 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@385 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@385 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@385 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@385 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@385 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@393 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@393 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@393 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@393 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@393 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@150) (= (type $generated@@463) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@140 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@140 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@140 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@140 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@150) (= (type $generated@@473) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@216 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@150) (= (type $generated@@475) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@216 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@258 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@257 $generated@@150)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@256 $generated@@482))) ($generated@@243 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert  (=> (<= 1 $generated@@353) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (!  (=> (and (= (type $generated@@486) $generated@@355) (or ($generated@@356 $generated@@487) (and (not (= 1 $generated@@353)) (<= ($generated@@236 0) $generated@@487)))) (and (=> (not (= $generated@@487 ($generated@@236 0))) ($generated@@356 (- $generated@@487 1))) (= ($generated@@354 ($generated@@432 $generated@@486) $generated@@487) (ite (= $generated@@487 ($generated@@236 0)) true ($generated@@354 $generated@@486 (- $generated@@487 1))))))
 :pattern ( ($generated@@354 ($generated@@432 $generated@@486) $generated@@487))
))))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@77 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@77 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@490 ($generated@@226 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@226 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@494 ($generated@@231 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@231 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@498 ($generated@@155 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@155 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@476 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@476 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@314 $generated@@507 ($generated@@264 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@264 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@509) $generated@@66)) (= (type $generated@@510) $generated@@66)) (= ($generated@@137 $generated@@508 ($generated@@385 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@508) $generated@@511))) (and ($generated@@217 ($generated@@83 ($generated@@360 $generated@@508) $generated@@511) $generated@@510) ($generated@@217 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@508) $generated@@511))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@137 $generated@@508 ($generated@@385 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@513) $generated@@66)) (= (type $generated@@514) $generated@@66)) (= ($generated@@137 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@512) $generated@@515))) (and ($generated@@217 ($generated@@83 ($generated@@368 $generated@@512) $generated@@515) $generated@@514) ($generated@@217 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@512) $generated@@515))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@137 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) (= (type $generated@@519) $generated@@150)) (< ($generated@@516 $generated@@518) ($generated@@517 ($generated@@216 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@216 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@150) (= (type $generated@@521) $generated@@150)) (< ($generated@@516 $generated@@521) ($generated@@517 ($generated@@216 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@216 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@385 $generated@@523 $generated@@524))) (and (= ($generated@@264 ($generated@@314 ($generated@@277 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@314 ($generated@@277 $generated@@150 $generated@@150) $generated@@522) ($generated@@385 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@385 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@393 $generated@@526 $generated@@527))) (and (= ($generated@@264 ($generated@@314 ($generated@@295 $generated@@150 $generated@@150) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@314 ($generated@@295 $generated@@150 $generated@@150) $generated@@525) ($generated@@393 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@393 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@150)) ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529))) (and (= ($generated@@264 ($generated@@314 $generated@@141 $generated@@530)) $generated@@530) ($generated@@137 ($generated@@314 $generated@@141 $generated@@530) ($generated@@140 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@83 ($generated@@406 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@83 ($generated@@406 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@535 $generated@@536)) $generated@@63) (= ($generated@@533 ($generated@@140 $generated@@535 $generated@@536)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@141) (= ($generated@@516 ($generated@@264 $generated@@537)) ($generated@@517 $generated@@537)))
 :pattern ( ($generated@@516 ($generated@@264 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@150) ($generated@@217 $generated@@538 ($generated@@77 0))) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@538)) $generated@@538) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@538) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@538 ($generated@@77 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@66)) ($generated@@217 $generated@@539 ($generated@@226 $generated@@540))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@539)) $generated@@539) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@539) ($generated@@226 $generated@@540))))
 :pattern ( ($generated@@217 $generated@@539 ($generated@@226 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@150) (= (type $generated@@542) $generated@@66)) ($generated@@217 $generated@@541 ($generated@@231 $generated@@542))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@541)) $generated@@541) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@231 $generated@@542))))
 :pattern ( ($generated@@217 $generated@@541 ($generated@@231 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@150) (= (type $generated@@544) $generated@@66)) ($generated@@217 $generated@@543 ($generated@@155 $generated@@544))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@2) $generated@@543)) $generated@@543) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@2) $generated@@543) ($generated@@155 $generated@@544))))
 :pattern ( ($generated@@217 $generated@@543 ($generated@@155 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@150) (= (type $generated@@546) $generated@@66)) ($generated@@217 $generated@@545 ($generated@@476 $generated@@546))) (and (= ($generated@@264 ($generated@@314 ($generated@@257 $generated@@150) $generated@@545)) $generated@@545) ($generated@@137 ($generated@@314 ($generated@@257 $generated@@150) $generated@@545) ($generated@@476 $generated@@546))))
 :pattern ( ($generated@@217 $generated@@545 ($generated@@476 $generated@@546)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@533 $generated@@134) $generated@@64))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@547 ($generated@@155 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@547 $generated@@550)))) ($generated@@243 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@83 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@76 $generated@@547 ($generated@@155 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@141) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@553) (and ($generated@@139 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@66) ($generated@@76 $generated@@551 ($generated@@140 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@76 $generated@@551 ($generated@@140 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@243 ($generated@@148 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@141) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@557) (and ($generated@@139 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@66) ($generated@@76 $generated@@555 ($generated@@140 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@76 $generated@@555 ($generated@@140 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@243 ($generated@@149 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@150) (= (type $generated@@560) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@559) ($generated@@238 $generated@@560)) ($generated@@238 ($generated@@216 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@559) ($generated@@238 $generated@@560)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@264 ($generated@@8 ($generated@@236 $generated@@561))) ($generated@@238 ($generated@@264 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@264 ($generated@@8 ($generated@@236 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@264 ($generated@@238 $generated@@562)) ($generated@@238 ($generated@@264 $generated@@562)))
 :pattern ( ($generated@@264 ($generated@@238 $generated@@562)))
)))
(assert  (=> (<= 1 $generated@@353) (forall (($generated@@563 T@U) ($generated@@564 Int) ) (!  (=> (and (= (type $generated@@563) $generated@@355) (or ($generated@@356 ($generated@@236 $generated@@564)) (and (not (= 1 $generated@@353)) (<= ($generated@@236 0) $generated@@564)))) (and (=> (not (= ($generated@@236 $generated@@564) ($generated@@236 0))) ($generated@@356 ($generated@@236 (- $generated@@564 1)))) (= ($generated@@354 ($generated@@432 $generated@@563) ($generated@@236 $generated@@564)) (ite (= ($generated@@236 $generated@@564) ($generated@@236 0)) true ($generated@@354 ($generated@@432 $generated@@563) ($generated@@236 (- $generated@@564 1)))))))
 :weight 3
 :pattern ( ($generated@@354 ($generated@@432 $generated@@563) ($generated@@236 $generated@@564)))
))))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@258 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@257 $generated@@566)) (= ($generated@@256 $generated@@565) 0)) (= $generated@@565 ($generated@@255 $generated@@566))))
 :pattern ( ($generated@@256 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@78 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@269 ($generated@@84 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@269 $generated@@567) ($generated ($generated@@83 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@269 ($generated@@84 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@2)) ($generated@@76 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@3)) ($generated@@76 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@4)) ($generated@@76 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@578) $generated@@430)) ($generated@@76 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@76 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@150)) ($generated@@76 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@257 $generated@@150)) (= (type $generated@@582) $generated@@66)) (= ($generated@@137 $generated@@581 ($generated@@476 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@256 $generated@@581))) ($generated@@217 ($generated@@477 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@477 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@137 $generated@@581 ($generated@@476 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@256 $generated@@585))) (< ($generated@@517 ($generated@@314 $generated@@141 ($generated@@477 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@517 ($generated@@314 $generated@@141 ($generated@@477 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) $generated@@66)) ($generated@@137 $generated@@587 ($generated@@385 $generated@@588 $generated@@589))) (and (and ($generated@@137 ($generated@@275 $generated@@587) ($generated@@226 $generated@@588)) ($generated@@137 ($generated@@322 $generated@@587) ($generated@@226 $generated@@589))) ($generated@@137 ($generated@@359 $generated@@587) ($generated@@226 ($generated@@140 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@137 $generated@@587 ($generated@@385 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@591) $generated@@66)) (= (type $generated@@592) $generated@@66)) ($generated@@137 $generated@@590 ($generated@@393 $generated@@591 $generated@@592))) (and (and ($generated@@137 ($generated@@293 $generated@@590) ($generated@@231 $generated@@591)) ($generated@@137 ($generated@@333 $generated@@590) ($generated@@231 $generated@@592))) ($generated@@137 ($generated@@367 $generated@@590) ($generated@@231 ($generated@@140 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@137 $generated@@590 ($generated@@393 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@137 $generated@@593 $generated@@46))
 :pattern ( ($generated@@137 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@137 $generated@@594 $generated@@47))
 :pattern ( ($generated@@137 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@137 $generated@@595 $generated@@44))
 :pattern ( ($generated@@137 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@430) ($generated@@137 $generated@@596 $generated@@45))
 :pattern ( ($generated@@137 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@150) ($generated@@137 $generated@@597 $generated@@48))
 :pattern ( ($generated@@137 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@598) $generated@@355) (= (type $generated@@599) $generated@@355)) (= (type $generated@@600) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@601) $generated@@79)) (= (type $generated@@602) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@605  (=> (= ($generated@@401 $generated@@598) $generated@@598) (=> (and (= ($generated@@401 $generated@@599) $generated@@599) (= $generated@@600 ($generated@@161 $generated@@601 $generated@@602 $generated@@60 false))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@137 ($generated@@8 ($generated@@236 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@236 1)) $generated@@134) (=> (= $generated@@603 ($generated@@236 1)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@603) $generated@@134 $generated@@602) ($generated@@356 ($generated@@236 1))) (and ($generated@@356 ($generated@@236 1)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@354 $generated@@599 ($generated@@236 1))))))))))
(let (($generated@@606  (=> (and (and ($generated@@242 $generated@@602) ($generated@@604 $generated@@602)) (and (= 2 $generated@@353) (= (ControlFlow 0 4) 2))) $generated@@605)))
$generated@@606)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@276 (T@T T@T) T@U)
(declare-fun $generated@@277 (T@T T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@314 (T@T T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@353 () Int)
(declare-fun $generated@@354 (T@U Int) Bool)
(declare-fun $generated@@355 () T@T)
(declare-fun $generated@@356 (Int) Bool)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@430 () T@T)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@2) (= ($generated@@137 $generated@@263 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@263))))
 :pattern ( ($generated@@137 $generated@@263 $generated@@134))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@150)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@66) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268) ($generated@@76 $generated@@266 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@T) ) (! (= (type ($generated@@270 $generated@@271)) ($generated@@78 $generated@@271 $generated@@2))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@81 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@78 $generated@@273 $generated@@2)) (and (= (= ($generated@@269 $generated@@272) 0) (= $generated@@272 ($generated@@270 $generated@@273))) (=> (not (= ($generated@@269 $generated@@272) 0)) (exists (($generated@@274 T@U) ) (!  (and (= (type $generated@@274) $generated@@273) (< 0 ($generated ($generated@@83 $generated@@272 $generated@@274))))
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
))))))
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert  (and (and (and (and (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@280 $generated@@281)) 18)) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@282 $generated@@283)) $generated@@282)
 :pattern ( ($generated@@277 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@277 $generated@@284 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@277 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@278 (type $generated@@286))))
(= (type ($generated@@275 $generated@@286)) ($generated@@78 $generated@@287 $generated@@4)))
 :pattern ( ($generated@@275 $generated@@286))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= (type ($generated@@276 $generated@@288 $generated@@289)) ($generated@@277 $generated@@288 $generated@@289))
 :pattern ( ($generated@@276 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@T) ) (! (let (($generated@@292 (type $generated@@290)))
 (not ($generated@@0 ($generated@@83 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290))))
 :pattern ( (let (($generated@@292 (type $generated@@290)))
($generated@@83 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290)))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 19)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@78 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@81 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@78 $generated@@312 $generated@@2)) (= ($generated@@156 $generated@@311) (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@312) (and (<= 0 ($generated ($generated@@83 $generated@@311 $generated@@313))) (<= ($generated ($generated@@83 $generated@@311 $generated@@313)) ($generated@@269 $generated@@311))))
 :pattern ( ($generated@@83 $generated@@311 $generated@@313))
)))))
 :pattern ( ($generated@@156 $generated@@311))
)))
(assert (forall (($generated@@315 T@T) ($generated@@316 T@U) ) (! (= (type ($generated@@314 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@314 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@150) ($generated@@217 $generated@@317 $generated@@134)) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@317)) $generated@@317) ($generated@@137 ($generated@@314 $generated@@2 $generated@@317) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@317 $generated@@134))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@279 (type $generated@@318))))
(let (($generated@@320 ($generated@@278 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@277 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@276 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@275 $generated@@318))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@279 (type $generated@@323))))
(= (type ($generated@@322 $generated@@323)) ($generated@@78 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@279 (type $generated@@325))))
(let (($generated@@327 ($generated@@278 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@277 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@276 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@326) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@297 (type $generated@@329))))
(let (($generated@@331 ($generated@@296 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@295 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@294 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@293 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@297 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@297 (type $generated@@336))))
(let (($generated@@338 ($generated@@296 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@295 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@294 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@341) $generated@@66)) (= ($generated@@137 $generated@@340 ($generated@@155 $generated@@341)) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@340 $generated@@342)))) ($generated@@217 $generated@@342 $generated@@341))
 :pattern ( ($generated@@83 $generated@@340 $generated@@342))
))))
 :pattern ( ($generated@@137 $generated@@340 ($generated@@155 $generated@@341)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@344) $generated@@66)) (= (type $generated@@345) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@343 ($generated@@226 $generated@@344) $generated@@345) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@150) ($generated@@0 ($generated@@83 $generated@@343 $generated@@346))) ($generated@@243 $generated@@346 $generated@@344 $generated@@345))
 :pattern ( ($generated@@83 $generated@@343 $generated@@346))
))))
 :pattern ( ($generated@@76 $generated@@343 ($generated@@226 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@348) $generated@@66)) (= (type $generated@@349) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@150) ($generated@@0 ($generated@@83 $generated@@347 $generated@@350))) ($generated@@243 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@83 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@76 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
(= ($generated ($generated@@83 ($generated@@270 $generated@@352) $generated@@351)) 0))
 :pattern ( (let (($generated@@352 (type $generated@@351)))
($generated@@83 ($generated@@270 $generated@@352) $generated@@351)))
)))
(assert (= ($generated@@1 $generated@@355) 20))
(assert  (=> (<= 1 $generated@@353) (forall (($generated@@357 T@U) ($generated@@358 Int) ) (!  (=> (and (= (type $generated@@357) $generated@@355) (or ($generated@@356 $generated@@358) (and (not (= 1 $generated@@353)) (<= ($generated@@236 0) $generated@@358)))) true)
 :pattern ( ($generated@@354 $generated@@357 $generated@@358))
))))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@279 (type $generated@@362))))
(let (($generated@@364 ($generated@@278 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@78 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@366) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@83 ($generated@@275 $generated@@365) ($generated@@148 ($generated@@314 $generated@@141 $generated@@366)))) (= ($generated@@83 ($generated@@360 $generated@@365) ($generated@@148 ($generated@@314 $generated@@141 $generated@@366))) ($generated@@149 ($generated@@314 $generated@@141 $generated@@366))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@297 (type $generated@@370))))
(let (($generated@@372 ($generated@@296 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@374) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@373) ($generated@@148 ($generated@@314 $generated@@141 $generated@@374)))) (= ($generated@@83 ($generated@@368 $generated@@373) ($generated@@148 ($generated@@314 $generated@@141 $generated@@374))) ($generated@@149 ($generated@@314 $generated@@141 $generated@@374))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@278 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@277 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@83 ($generated@@322 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@83 ($generated@@275 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@83 ($generated@@360 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@375) $generated@@379))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@296 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@295 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@83 ($generated@@333 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@83 ($generated@@368 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@380) $generated@@384))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@66)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@389) $generated@@66)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@388) $generated@@392))) (and ($generated@@243 ($generated@@83 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@243 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@76 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@396) $generated@@400))) (and ($generated@@243 ($generated@@83 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@243 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) $generated@@355)
 :pattern ( ($generated@@401 $generated@@403))
)) (= (type $generated@@402) $generated@@355)))
(assert (forall (($generated@@404 T@U) ($generated@@405 Int) ) (!  (=> (= (type $generated@@404) $generated@@355) (= ($generated@@354 $generated@@404 $generated@@405) ($generated@@354 $generated@@402 $generated@@405)))
 :pattern ( ($generated@@354 ($generated@@401 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@78 $generated@@407 $generated@@4))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@297 (type $generated@@408))))
(let (($generated@@410 ($generated@@296 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@295 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@294 $generated@@410 $generated@@409)) (= ($generated@@293 $generated@@408) ($generated@@406 $generated@@410))))))
 :pattern ( ($generated@@293 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@297 (type $generated@@411))))
(let (($generated@@413 ($generated@@296 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@295 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@294 $generated@@413 $generated@@412)) (= ($generated@@333 $generated@@411) ($generated@@406 $generated@@412))))))
 :pattern ( ($generated@@333 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@297 (type $generated@@414))))
(let (($generated@@416 ($generated@@296 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@295 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@294 $generated@@416 $generated@@415)) (= ($generated@@367 $generated@@414) ($generated@@406 $generated@@150))))))
 :pattern ( ($generated@@367 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@279 (type $generated@@417))))
(let (($generated@@419 ($generated@@278 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@277 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@276 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@150) (= (type $generated@@421) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@417) ($generated@@264 ($generated@@216 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@359 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@297 (type $generated@@422))))
(let (($generated@@424 ($generated@@296 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@295 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@294 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@150) (= (type $generated@@426) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@422) ($generated@@264 ($generated@@216 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@367 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@150) ($generated@@217 $generated@@427 $generated@@46)) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@427)) $generated@@427) ($generated@@137 ($generated@@314 $generated@@2 $generated@@427) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@427 $generated@@46))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@217 $generated@@428 $generated@@47)) (and (= ($generated@@264 ($generated@@314 $generated@@3 $generated@@428)) $generated@@428) ($generated@@137 ($generated@@314 $generated@@3 $generated@@428) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@428 $generated@@47))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@150) ($generated@@217 $generated@@429 $generated@@44)) (and (= ($generated@@264 ($generated@@314 $generated@@4 $generated@@429)) $generated@@429) ($generated@@137 ($generated@@314 $generated@@4 $generated@@429) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@429 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@430) 21))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@150) ($generated@@217 $generated@@431 $generated@@45)) (and (= ($generated@@264 ($generated@@314 $generated@@430 $generated@@431)) $generated@@431) ($generated@@137 ($generated@@314 $generated@@430 $generated@@431) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@431 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@355)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 Int) ) (!  (=> (= (type $generated@@434) $generated@@355) (= ($generated@@354 ($generated@@432 $generated@@434) $generated@@435) ($generated@@354 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@354 ($generated@@432 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@217 ($generated@@264 $generated@@436) $generated@@437) ($generated@@137 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@217 ($generated@@264 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@269 $generated@@438))))
 :pattern ( ($generated@@269 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@258 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@257 $generated@@441)) (<= 0 ($generated@@256 $generated@@440))))
 :pattern ( ($generated@@256 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@385 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@385 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@385 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@385 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@385 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@393 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@393 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@393 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@393 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@393 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@150) (= (type $generated@@463) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@140 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@140 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@140 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@140 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@150) (= (type $generated@@473) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@216 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@150) (= (type $generated@@475) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@216 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@258 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@257 $generated@@150)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@256 $generated@@482))) ($generated@@243 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert  (=> (<= 1 $generated@@353) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (!  (=> (and (= (type $generated@@486) $generated@@355) (or ($generated@@356 $generated@@487) (and (not (= 1 $generated@@353)) (<= ($generated@@236 0) $generated@@487)))) (and (=> (not (= $generated@@487 ($generated@@236 0))) ($generated@@356 (- $generated@@487 1))) (= ($generated@@354 ($generated@@432 $generated@@486) $generated@@487) (ite (= $generated@@487 ($generated@@236 0)) true ($generated@@354 $generated@@486 (- $generated@@487 1))))))
 :pattern ( ($generated@@354 ($generated@@432 $generated@@486) $generated@@487))
))))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@77 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@77 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@490 ($generated@@226 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@226 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@494 ($generated@@231 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@231 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@498 ($generated@@155 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@155 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@476 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@476 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@314 $generated@@507 ($generated@@264 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@264 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@509) $generated@@66)) (= (type $generated@@510) $generated@@66)) (= ($generated@@137 $generated@@508 ($generated@@385 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@508) $generated@@511))) (and ($generated@@217 ($generated@@83 ($generated@@360 $generated@@508) $generated@@511) $generated@@510) ($generated@@217 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@508) $generated@@511))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@137 $generated@@508 ($generated@@385 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@513) $generated@@66)) (= (type $generated@@514) $generated@@66)) (= ($generated@@137 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@512) $generated@@515))) (and ($generated@@217 ($generated@@83 ($generated@@368 $generated@@512) $generated@@515) $generated@@514) ($generated@@217 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@512) $generated@@515))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@137 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) (= (type $generated@@519) $generated@@150)) (< ($generated@@516 $generated@@518) ($generated@@517 ($generated@@216 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@216 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@150) (= (type $generated@@521) $generated@@150)) (< ($generated@@516 $generated@@521) ($generated@@517 ($generated@@216 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@216 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@385 $generated@@523 $generated@@524))) (and (= ($generated@@264 ($generated@@314 ($generated@@277 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@314 ($generated@@277 $generated@@150 $generated@@150) $generated@@522) ($generated@@385 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@385 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@393 $generated@@526 $generated@@527))) (and (= ($generated@@264 ($generated@@314 ($generated@@295 $generated@@150 $generated@@150) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@314 ($generated@@295 $generated@@150 $generated@@150) $generated@@525) ($generated@@393 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@393 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@150)) ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529))) (and (= ($generated@@264 ($generated@@314 $generated@@141 $generated@@530)) $generated@@530) ($generated@@137 ($generated@@314 $generated@@141 $generated@@530) ($generated@@140 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@83 ($generated@@406 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@83 ($generated@@406 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@535 $generated@@536)) $generated@@63) (= ($generated@@533 ($generated@@140 $generated@@535 $generated@@536)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@141) (= ($generated@@516 ($generated@@264 $generated@@537)) ($generated@@517 $generated@@537)))
 :pattern ( ($generated@@516 ($generated@@264 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@150) ($generated@@217 $generated@@538 ($generated@@77 0))) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@538)) $generated@@538) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@538) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@538 ($generated@@77 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@66)) ($generated@@217 $generated@@539 ($generated@@226 $generated@@540))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@539)) $generated@@539) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@539) ($generated@@226 $generated@@540))))
 :pattern ( ($generated@@217 $generated@@539 ($generated@@226 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@150) (= (type $generated@@542) $generated@@66)) ($generated@@217 $generated@@541 ($generated@@231 $generated@@542))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@541)) $generated@@541) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@231 $generated@@542))))
 :pattern ( ($generated@@217 $generated@@541 ($generated@@231 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@150) (= (type $generated@@544) $generated@@66)) ($generated@@217 $generated@@543 ($generated@@155 $generated@@544))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@2) $generated@@543)) $generated@@543) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@2) $generated@@543) ($generated@@155 $generated@@544))))
 :pattern ( ($generated@@217 $generated@@543 ($generated@@155 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@150) (= (type $generated@@546) $generated@@66)) ($generated@@217 $generated@@545 ($generated@@476 $generated@@546))) (and (= ($generated@@264 ($generated@@314 ($generated@@257 $generated@@150) $generated@@545)) $generated@@545) ($generated@@137 ($generated@@314 ($generated@@257 $generated@@150) $generated@@545) ($generated@@476 $generated@@546))))
 :pattern ( ($generated@@217 $generated@@545 ($generated@@476 $generated@@546)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@533 $generated@@134) $generated@@64))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@547 ($generated@@155 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@547 $generated@@550)))) ($generated@@243 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@83 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@76 $generated@@547 ($generated@@155 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@141) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@553) (and ($generated@@139 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@66) ($generated@@76 $generated@@551 ($generated@@140 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@76 $generated@@551 ($generated@@140 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@243 ($generated@@148 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@141) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@557) (and ($generated@@139 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@66) ($generated@@76 $generated@@555 ($generated@@140 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@76 $generated@@555 ($generated@@140 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@243 ($generated@@149 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@150) (= (type $generated@@560) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@559) ($generated@@238 $generated@@560)) ($generated@@238 ($generated@@216 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@559) ($generated@@238 $generated@@560)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@264 ($generated@@8 ($generated@@236 $generated@@561))) ($generated@@238 ($generated@@264 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@264 ($generated@@8 ($generated@@236 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@264 ($generated@@238 $generated@@562)) ($generated@@238 ($generated@@264 $generated@@562)))
 :pattern ( ($generated@@264 ($generated@@238 $generated@@562)))
)))
(assert  (=> (<= 1 $generated@@353) (forall (($generated@@563 T@U) ($generated@@564 Int) ) (!  (=> (and (= (type $generated@@563) $generated@@355) (or ($generated@@356 ($generated@@236 $generated@@564)) (and (not (= 1 $generated@@353)) (<= ($generated@@236 0) $generated@@564)))) (and (=> (not (= ($generated@@236 $generated@@564) ($generated@@236 0))) ($generated@@356 ($generated@@236 (- $generated@@564 1)))) (= ($generated@@354 ($generated@@432 $generated@@563) ($generated@@236 $generated@@564)) (ite (= ($generated@@236 $generated@@564) ($generated@@236 0)) true ($generated@@354 ($generated@@432 $generated@@563) ($generated@@236 (- $generated@@564 1)))))))
 :weight 3
 :pattern ( ($generated@@354 ($generated@@432 $generated@@563) ($generated@@236 $generated@@564)))
))))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@258 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@257 $generated@@566)) (= ($generated@@256 $generated@@565) 0)) (= $generated@@565 ($generated@@255 $generated@@566))))
 :pattern ( ($generated@@256 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@78 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@269 ($generated@@84 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@269 $generated@@567) ($generated ($generated@@83 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@269 ($generated@@84 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@2)) ($generated@@76 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@3)) ($generated@@76 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@4)) ($generated@@76 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@578) $generated@@430)) ($generated@@76 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@76 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@150)) ($generated@@76 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@257 $generated@@150)) (= (type $generated@@582) $generated@@66)) (= ($generated@@137 $generated@@581 ($generated@@476 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@256 $generated@@581))) ($generated@@217 ($generated@@477 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@477 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@137 $generated@@581 ($generated@@476 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@256 $generated@@585))) (< ($generated@@517 ($generated@@314 $generated@@141 ($generated@@477 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@517 ($generated@@314 $generated@@141 ($generated@@477 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) $generated@@66)) ($generated@@137 $generated@@587 ($generated@@385 $generated@@588 $generated@@589))) (and (and ($generated@@137 ($generated@@275 $generated@@587) ($generated@@226 $generated@@588)) ($generated@@137 ($generated@@322 $generated@@587) ($generated@@226 $generated@@589))) ($generated@@137 ($generated@@359 $generated@@587) ($generated@@226 ($generated@@140 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@137 $generated@@587 ($generated@@385 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@591) $generated@@66)) (= (type $generated@@592) $generated@@66)) ($generated@@137 $generated@@590 ($generated@@393 $generated@@591 $generated@@592))) (and (and ($generated@@137 ($generated@@293 $generated@@590) ($generated@@231 $generated@@591)) ($generated@@137 ($generated@@333 $generated@@590) ($generated@@231 $generated@@592))) ($generated@@137 ($generated@@367 $generated@@590) ($generated@@231 ($generated@@140 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@137 $generated@@590 ($generated@@393 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@137 $generated@@593 $generated@@46))
 :pattern ( ($generated@@137 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@137 $generated@@594 $generated@@47))
 :pattern ( ($generated@@137 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@137 $generated@@595 $generated@@44))
 :pattern ( ($generated@@137 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@430) ($generated@@137 $generated@@596 $generated@@45))
 :pattern ( ($generated@@137 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@150) ($generated@@137 $generated@@597 $generated@@48))
 :pattern ( ($generated@@137 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@598) $generated@@355) (= (type $generated@@599) $generated@@355)) (= (type $generated@@600) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@601) $generated@@79)) (= (type $generated@@602) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@605) $generated@@355)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@608  (=> (= ($generated@@401 $generated@@598) $generated@@598) (=> (and (and (and (= ($generated@@401 $generated@@599) $generated@@599) (= $generated@@600 ($generated@@161 $generated@@601 $generated@@602 $generated@@60 false))) (and ($generated@@242 $generated@@603) ($generated@@604 $generated@@603))) (and (and (= $generated@@602 $generated@@603) (= $generated@@598 ($generated@@432 $generated@@605))) (and (= $generated@@599 ($generated@@432 ($generated@@432 $generated@@605))) (= ($generated@@401 $generated@@605) $generated@@605)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@137 ($generated@@8 (+ $generated@@606 $generated@@606)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (+ $generated@@606 $generated@@606)) $generated@@134) (=> (= $generated@@607 (+ $generated@@606 $generated@@606)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@607) $generated@@134 $generated@@603) ($generated@@356 (+ $generated@@606 $generated@@606))) (and ($generated@@356 (+ $generated@@606 $generated@@606)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@354 $generated@@599 (+ $generated@@606 $generated@@606))))))))))
(let (($generated@@609  (=> (and (and (and ($generated@@242 $generated@@602) ($generated@@604 $generated@@602)) (= 2 $generated@@353)) (and (= $generated@@606 ($generated@@236 1)) (= (ControlFlow 0 4) 2))) $generated@@608)))
$generated@@609)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@276 (T@T T@T) T@U)
(declare-fun $generated@@277 (T@T T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@314 (T@T T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@353 () Int)
(declare-fun $generated@@354 (T@U Int) Bool)
(declare-fun $generated@@355 () T@T)
(declare-fun $generated@@356 (Int) Bool)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 () T@U)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@430 () T@T)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@2) (= ($generated@@137 $generated@@263 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@263))))
 :pattern ( ($generated@@137 $generated@@263 $generated@@134))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@150)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@66) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268) ($generated@@76 $generated@@266 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@243 ($generated@@264 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@271 T@T) ) (! (= (type ($generated@@270 $generated@@271)) ($generated@@78 $generated@@271 $generated@@2))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@81 (type $generated@@272))))
 (=> (= (type $generated@@272) ($generated@@78 $generated@@273 $generated@@2)) (and (= (= ($generated@@269 $generated@@272) 0) (= $generated@@272 ($generated@@270 $generated@@273))) (=> (not (= ($generated@@269 $generated@@272) 0)) (exists (($generated@@274 T@U) ) (!  (and (= (type $generated@@274) $generated@@273) (< 0 ($generated ($generated@@83 $generated@@272 $generated@@274))))
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
))))))
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert  (and (and (and (and (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@280 $generated@@281)) 18)) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@282 $generated@@283)) $generated@@282)
 :pattern ( ($generated@@277 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@277 $generated@@284 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@277 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@278 (type $generated@@286))))
(= (type ($generated@@275 $generated@@286)) ($generated@@78 $generated@@287 $generated@@4)))
 :pattern ( ($generated@@275 $generated@@286))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= (type ($generated@@276 $generated@@288 $generated@@289)) ($generated@@277 $generated@@288 $generated@@289))
 :pattern ( ($generated@@276 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@T) ) (! (let (($generated@@292 (type $generated@@290)))
 (not ($generated@@0 ($generated@@83 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290))))
 :pattern ( (let (($generated@@292 (type $generated@@290)))
($generated@@83 ($generated@@275 ($generated@@276 $generated@@292 $generated@@291)) $generated@@290)))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 19)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@78 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@81 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@78 $generated@@312 $generated@@2)) (= ($generated@@156 $generated@@311) (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@312) (and (<= 0 ($generated ($generated@@83 $generated@@311 $generated@@313))) (<= ($generated ($generated@@83 $generated@@311 $generated@@313)) ($generated@@269 $generated@@311))))
 :pattern ( ($generated@@83 $generated@@311 $generated@@313))
)))))
 :pattern ( ($generated@@156 $generated@@311))
)))
(assert (forall (($generated@@315 T@T) ($generated@@316 T@U) ) (! (= (type ($generated@@314 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@314 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@150) ($generated@@217 $generated@@317 $generated@@134)) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@317)) $generated@@317) ($generated@@137 ($generated@@314 $generated@@2 $generated@@317) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@317 $generated@@134))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@279 (type $generated@@318))))
(let (($generated@@320 ($generated@@278 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@277 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@276 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@275 $generated@@318))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@279 (type $generated@@323))))
(= (type ($generated@@322 $generated@@323)) ($generated@@78 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@279 (type $generated@@325))))
(let (($generated@@327 ($generated@@278 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@277 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@276 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@326) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@297 (type $generated@@329))))
(let (($generated@@331 ($generated@@296 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@295 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@294 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@293 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@297 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@297 (type $generated@@336))))
(let (($generated@@338 ($generated@@296 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@295 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@294 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@341) $generated@@66)) (= ($generated@@137 $generated@@340 ($generated@@155 $generated@@341)) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@340 $generated@@342)))) ($generated@@217 $generated@@342 $generated@@341))
 :pattern ( ($generated@@83 $generated@@340 $generated@@342))
))))
 :pattern ( ($generated@@137 $generated@@340 ($generated@@155 $generated@@341)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@343) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@344) $generated@@66)) (= (type $generated@@345) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@343 ($generated@@226 $generated@@344) $generated@@345) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@150) ($generated@@0 ($generated@@83 $generated@@343 $generated@@346))) ($generated@@243 $generated@@346 $generated@@344 $generated@@345))
 :pattern ( ($generated@@83 $generated@@343 $generated@@346))
))))
 :pattern ( ($generated@@76 $generated@@343 ($generated@@226 $generated@@344) $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@348) $generated@@66)) (= (type $generated@@349) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@347 ($generated@@231 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@150) ($generated@@0 ($generated@@83 $generated@@347 $generated@@350))) ($generated@@243 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@83 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@76 $generated@@347 ($generated@@231 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
(= ($generated ($generated@@83 ($generated@@270 $generated@@352) $generated@@351)) 0))
 :pattern ( (let (($generated@@352 (type $generated@@351)))
($generated@@83 ($generated@@270 $generated@@352) $generated@@351)))
)))
(assert (= ($generated@@1 $generated@@355) 20))
(assert  (=> (<= 1 $generated@@353) (forall (($generated@@357 T@U) ($generated@@358 Int) ) (!  (=> (and (= (type $generated@@357) $generated@@355) (or ($generated@@356 $generated@@358) (and (not (= 1 $generated@@353)) (<= ($generated@@236 0) $generated@@358)))) true)
 :pattern ( ($generated@@354 $generated@@357 $generated@@358))
))))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@279 (type $generated@@362))))
(let (($generated@@364 ($generated@@278 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@78 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@366) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@83 ($generated@@275 $generated@@365) ($generated@@148 ($generated@@314 $generated@@141 $generated@@366)))) (= ($generated@@83 ($generated@@360 $generated@@365) ($generated@@148 ($generated@@314 $generated@@141 $generated@@366))) ($generated@@149 ($generated@@314 $generated@@141 $generated@@366))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@297 (type $generated@@370))))
(let (($generated@@372 ($generated@@296 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@374) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@373) ($generated@@148 ($generated@@314 $generated@@141 $generated@@374)))) (= ($generated@@83 ($generated@@368 $generated@@373) ($generated@@148 ($generated@@314 $generated@@141 $generated@@374))) ($generated@@149 ($generated@@314 $generated@@141 $generated@@374))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@278 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@277 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@83 ($generated@@322 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@83 ($generated@@275 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@83 ($generated@@360 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@375) $generated@@379))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@296 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@295 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@83 ($generated@@333 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@83 ($generated@@368 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@380) $generated@@384))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@66)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@389) $generated@@66)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@388) $generated@@392))) (and ($generated@@243 ($generated@@83 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@243 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@76 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@396) $generated@@400))) (and ($generated@@243 ($generated@@83 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@243 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) $generated@@355)
 :pattern ( ($generated@@401 $generated@@403))
)) (= (type $generated@@402) $generated@@355)))
(assert (forall (($generated@@404 T@U) ($generated@@405 Int) ) (!  (=> (= (type $generated@@404) $generated@@355) (= ($generated@@354 $generated@@404 $generated@@405) ($generated@@354 $generated@@402 $generated@@405)))
 :pattern ( ($generated@@354 ($generated@@401 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@78 $generated@@407 $generated@@4))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@297 (type $generated@@408))))
(let (($generated@@410 ($generated@@296 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@295 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@294 $generated@@410 $generated@@409)) (= ($generated@@293 $generated@@408) ($generated@@406 $generated@@410))))))
 :pattern ( ($generated@@293 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@297 (type $generated@@411))))
(let (($generated@@413 ($generated@@296 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@295 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@294 $generated@@413 $generated@@412)) (= ($generated@@333 $generated@@411) ($generated@@406 $generated@@412))))))
 :pattern ( ($generated@@333 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@297 (type $generated@@414))))
(let (($generated@@416 ($generated@@296 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@295 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@294 $generated@@416 $generated@@415)) (= ($generated@@367 $generated@@414) ($generated@@406 $generated@@150))))))
 :pattern ( ($generated@@367 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@279 (type $generated@@417))))
(let (($generated@@419 ($generated@@278 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@277 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@276 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@150) (= (type $generated@@421) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@417) ($generated@@264 ($generated@@216 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@359 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@297 (type $generated@@422))))
(let (($generated@@424 ($generated@@296 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@295 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@294 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@150) (= (type $generated@@426) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@422) ($generated@@264 ($generated@@216 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@367 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@150) ($generated@@217 $generated@@427 $generated@@46)) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@427)) $generated@@427) ($generated@@137 ($generated@@314 $generated@@2 $generated@@427) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@427 $generated@@46))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@217 $generated@@428 $generated@@47)) (and (= ($generated@@264 ($generated@@314 $generated@@3 $generated@@428)) $generated@@428) ($generated@@137 ($generated@@314 $generated@@3 $generated@@428) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@428 $generated@@47))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@150) ($generated@@217 $generated@@429 $generated@@44)) (and (= ($generated@@264 ($generated@@314 $generated@@4 $generated@@429)) $generated@@429) ($generated@@137 ($generated@@314 $generated@@4 $generated@@429) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@429 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@430) 21))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@150) ($generated@@217 $generated@@431 $generated@@45)) (and (= ($generated@@264 ($generated@@314 $generated@@430 $generated@@431)) $generated@@431) ($generated@@137 ($generated@@314 $generated@@430 $generated@@431) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@431 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@355)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 Int) ) (!  (=> (= (type $generated@@434) $generated@@355) (= ($generated@@354 ($generated@@432 $generated@@434) $generated@@435) ($generated@@354 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@354 ($generated@@432 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@217 ($generated@@264 $generated@@436) $generated@@437) ($generated@@137 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@217 ($generated@@264 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@269 $generated@@438))))
 :pattern ( ($generated@@269 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@258 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@257 $generated@@441)) (<= 0 ($generated@@256 $generated@@440))))
 :pattern ( ($generated@@256 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@385 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@385 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@385 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@385 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@385 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@393 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@393 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@393 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@393 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@393 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@150) (= (type $generated@@463) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@140 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@140 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@140 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@140 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@150) (= (type $generated@@473) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@216 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@150) (= (type $generated@@475) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@216 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@258 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@257 $generated@@150)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@256 $generated@@482))) ($generated@@243 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert  (=> (<= 1 $generated@@353) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (!  (=> (and (= (type $generated@@486) $generated@@355) (or ($generated@@356 $generated@@487) (and (not (= 1 $generated@@353)) (<= ($generated@@236 0) $generated@@487)))) (and (=> (not (= $generated@@487 ($generated@@236 0))) ($generated@@356 (- $generated@@487 1))) (= ($generated@@354 ($generated@@432 $generated@@486) $generated@@487) (ite (= $generated@@487 ($generated@@236 0)) true ($generated@@354 $generated@@486 (- $generated@@487 1))))))
 :pattern ( ($generated@@354 ($generated@@432 $generated@@486) $generated@@487))
))))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@77 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@77 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@490 ($generated@@226 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@226 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@494 ($generated@@231 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@231 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@498 ($generated@@155 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@155 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@476 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@476 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@314 $generated@@507 ($generated@@264 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@264 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@509) $generated@@66)) (= (type $generated@@510) $generated@@66)) (= ($generated@@137 $generated@@508 ($generated@@385 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@275 $generated@@508) $generated@@511))) (and ($generated@@217 ($generated@@83 ($generated@@360 $generated@@508) $generated@@511) $generated@@510) ($generated@@217 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@508) $generated@@511))
 :pattern ( ($generated@@83 ($generated@@275 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@137 $generated@@508 ($generated@@385 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@513) $generated@@66)) (= (type $generated@@514) $generated@@66)) (= ($generated@@137 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@512) $generated@@515))) (and ($generated@@217 ($generated@@83 ($generated@@368 $generated@@512) $generated@@515) $generated@@514) ($generated@@217 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@512) $generated@@515))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@137 $generated@@512 ($generated@@393 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) (= (type $generated@@519) $generated@@150)) (< ($generated@@516 $generated@@518) ($generated@@517 ($generated@@216 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@216 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@150) (= (type $generated@@521) $generated@@150)) (< ($generated@@516 $generated@@521) ($generated@@517 ($generated@@216 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@216 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@385 $generated@@523 $generated@@524))) (and (= ($generated@@264 ($generated@@314 ($generated@@277 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@314 ($generated@@277 $generated@@150 $generated@@150) $generated@@522) ($generated@@385 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@385 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@393 $generated@@526 $generated@@527))) (and (= ($generated@@264 ($generated@@314 ($generated@@295 $generated@@150 $generated@@150) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@314 ($generated@@295 $generated@@150 $generated@@150) $generated@@525) ($generated@@393 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@393 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@150)) ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529))) (and (= ($generated@@264 ($generated@@314 $generated@@141 $generated@@530)) $generated@@530) ($generated@@137 ($generated@@314 $generated@@141 $generated@@530) ($generated@@140 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@83 ($generated@@406 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@83 ($generated@@406 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@535 $generated@@536)) $generated@@63) (= ($generated@@533 ($generated@@140 $generated@@535 $generated@@536)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@141) (= ($generated@@516 ($generated@@264 $generated@@537)) ($generated@@517 $generated@@537)))
 :pattern ( ($generated@@516 ($generated@@264 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@150) ($generated@@217 $generated@@538 ($generated@@77 0))) (and (= ($generated@@264 ($generated@@314 $generated@@2 $generated@@538)) $generated@@538) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@538) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@538 ($generated@@77 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@66)) ($generated@@217 $generated@@539 ($generated@@226 $generated@@540))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@539)) $generated@@539) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@539) ($generated@@226 $generated@@540))))
 :pattern ( ($generated@@217 $generated@@539 ($generated@@226 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@150) (= (type $generated@@542) $generated@@66)) ($generated@@217 $generated@@541 ($generated@@231 $generated@@542))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@541)) $generated@@541) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@231 $generated@@542))))
 :pattern ( ($generated@@217 $generated@@541 ($generated@@231 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@150) (= (type $generated@@544) $generated@@66)) ($generated@@217 $generated@@543 ($generated@@155 $generated@@544))) (and (= ($generated@@264 ($generated@@314 ($generated@@78 $generated@@150 $generated@@2) $generated@@543)) $generated@@543) ($generated@@137 ($generated@@314 ($generated@@78 $generated@@150 $generated@@2) $generated@@543) ($generated@@155 $generated@@544))))
 :pattern ( ($generated@@217 $generated@@543 ($generated@@155 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@150) (= (type $generated@@546) $generated@@66)) ($generated@@217 $generated@@545 ($generated@@476 $generated@@546))) (and (= ($generated@@264 ($generated@@314 ($generated@@257 $generated@@150) $generated@@545)) $generated@@545) ($generated@@137 ($generated@@314 ($generated@@257 $generated@@150) $generated@@545) ($generated@@476 $generated@@546))))
 :pattern ( ($generated@@217 $generated@@545 ($generated@@476 $generated@@546)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@533 $generated@@134) $generated@@64))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@547 ($generated@@155 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@547 $generated@@550)))) ($generated@@243 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@83 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@76 $generated@@547 ($generated@@155 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@141) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@553) (and ($generated@@139 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@66) ($generated@@76 $generated@@551 ($generated@@140 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@76 $generated@@551 ($generated@@140 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@243 ($generated@@148 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@141) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@557) (and ($generated@@139 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@66) ($generated@@76 $generated@@555 ($generated@@140 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@76 $generated@@555 ($generated@@140 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@243 ($generated@@149 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@150) (= (type $generated@@560) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@559) ($generated@@238 $generated@@560)) ($generated@@238 ($generated@@216 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@559) ($generated@@238 $generated@@560)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@264 ($generated@@8 ($generated@@236 $generated@@561))) ($generated@@238 ($generated@@264 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@264 ($generated@@8 ($generated@@236 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@264 ($generated@@238 $generated@@562)) ($generated@@238 ($generated@@264 $generated@@562)))
 :pattern ( ($generated@@264 ($generated@@238 $generated@@562)))
)))
(assert  (=> (<= 1 $generated@@353) (forall (($generated@@563 T@U) ($generated@@564 Int) ) (!  (=> (and (= (type $generated@@563) $generated@@355) (or ($generated@@356 ($generated@@236 $generated@@564)) (and (not (= 1 $generated@@353)) (<= ($generated@@236 0) $generated@@564)))) (and (=> (not (= ($generated@@236 $generated@@564) ($generated@@236 0))) ($generated@@356 ($generated@@236 (- $generated@@564 1)))) (= ($generated@@354 ($generated@@432 $generated@@563) ($generated@@236 $generated@@564)) (ite (= ($generated@@236 $generated@@564) ($generated@@236 0)) true ($generated@@354 ($generated@@432 $generated@@563) ($generated@@236 (- $generated@@564 1)))))))
 :weight 3
 :pattern ( ($generated@@354 ($generated@@432 $generated@@563) ($generated@@236 $generated@@564)))
))))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@258 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@257 $generated@@566)) (= ($generated@@256 $generated@@565) 0)) (= $generated@@565 ($generated@@255 $generated@@566))))
 :pattern ( ($generated@@256 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@78 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@269 ($generated@@84 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@269 $generated@@567) ($generated ($generated@@83 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@269 ($generated@@84 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@2)) ($generated@@76 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@3)) ($generated@@76 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@4)) ($generated@@76 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@578) $generated@@430)) ($generated@@76 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@76 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@150)) ($generated@@76 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@257 $generated@@150)) (= (type $generated@@582) $generated@@66)) (= ($generated@@137 $generated@@581 ($generated@@476 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@256 $generated@@581))) ($generated@@217 ($generated@@477 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@477 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@137 $generated@@581 ($generated@@476 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@256 $generated@@585))) (< ($generated@@517 ($generated@@314 $generated@@141 ($generated@@477 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@517 ($generated@@314 $generated@@141 ($generated@@477 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@277 $generated@@150 $generated@@150)) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) $generated@@66)) ($generated@@137 $generated@@587 ($generated@@385 $generated@@588 $generated@@589))) (and (and ($generated@@137 ($generated@@275 $generated@@587) ($generated@@226 $generated@@588)) ($generated@@137 ($generated@@322 $generated@@587) ($generated@@226 $generated@@589))) ($generated@@137 ($generated@@359 $generated@@587) ($generated@@226 ($generated@@140 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@137 $generated@@587 ($generated@@385 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@591) $generated@@66)) (= (type $generated@@592) $generated@@66)) ($generated@@137 $generated@@590 ($generated@@393 $generated@@591 $generated@@592))) (and (and ($generated@@137 ($generated@@293 $generated@@590) ($generated@@231 $generated@@591)) ($generated@@137 ($generated@@333 $generated@@590) ($generated@@231 $generated@@592))) ($generated@@137 ($generated@@367 $generated@@590) ($generated@@231 ($generated@@140 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@137 $generated@@590 ($generated@@393 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@137 $generated@@593 $generated@@46))
 :pattern ( ($generated@@137 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@137 $generated@@594 $generated@@47))
 :pattern ( ($generated@@137 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@137 $generated@@595 $generated@@44))
 :pattern ( ($generated@@137 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@430) ($generated@@137 $generated@@596 $generated@@45))
 :pattern ( ($generated@@137 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@150) ($generated@@137 $generated@@597 $generated@@48))
 :pattern ( ($generated@@137 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@598) $generated@@355) (= (type $generated@@599) $generated@@355)) (= (type $generated@@600) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@601) $generated@@79)) (= (type $generated@@602) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@605) $generated@@355)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@608  (=> (= ($generated@@401 $generated@@598) $generated@@598) (=> (and (and (and (= ($generated@@401 $generated@@599) $generated@@599) (= $generated@@600 ($generated@@161 $generated@@601 $generated@@602 $generated@@60 false))) (and ($generated@@242 $generated@@603) ($generated@@604 $generated@@603))) (and (and (= $generated@@602 $generated@@603) (= $generated@@598 ($generated@@432 $generated@@605))) (and (= $generated@@599 ($generated@@432 ($generated@@432 $generated@@605))) (= ($generated@@401 $generated@@605) $generated@@605)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@137 ($generated@@8 (+ (+ $generated@@606 $generated@@606) $generated@@606)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (+ (+ $generated@@606 $generated@@606) $generated@@606)) $generated@@134) (=> (= $generated@@607 (+ (+ $generated@@606 $generated@@606) $generated@@606)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@607) $generated@@134 $generated@@603) ($generated@@356 (+ (+ $generated@@606 $generated@@606) $generated@@606))) (and ($generated@@356 (+ (+ $generated@@606 $generated@@606) $generated@@606)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@354 $generated@@599 (+ (+ $generated@@606 $generated@@606) $generated@@606))))))))))
(let (($generated@@609  (=> (and (and (and ($generated@@242 $generated@@602) ($generated@@604 $generated@@602)) (= 2 $generated@@353)) (and (= $generated@@606 ($generated@@236 1)) (= (ControlFlow 0 4) 2))) $generated@@608)))
$generated@@609)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U T@U) Bool)
(declare-fun $generated@@273 (Int) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Bool)
(declare-fun $generated@@296 (T@U T@U) T@U)
(declare-fun $generated@@302 (T@U T@U T@U) Bool)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@331 (T@U) Int)
(declare-fun $generated@@332 (T@T) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@418 (T@T T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@464 (T@T) T@U)
(declare-fun $generated@@488 () T@T)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@537 (T@U Int) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@659 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@138)
 :pattern ( ($generated@@137 $generated@@141))
))) (= (type $generated@@140) $generated@@138)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@68) (= (type $generated@@143) $generated@@138)) (= (type $generated@@144) $generated@@139)) (= ($generated@@136 $generated@@142 $generated@@143 $generated@@144) ($generated@@136 $generated@@142 $generated@@140 $generated@@144)))
 :pattern ( ($generated@@136 $generated@@142 ($generated@@137 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@79 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@79 0)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@68) (= (type $generated@@152) $generated@@68)) (= (type $generated@@153) $generated@@139)) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@139) (= (type $generated@@161) $generated@@139)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@138)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@68) (= (type $generated@@165) $generated@@138)) (= (type $generated@@166) $generated@@139)) (= ($generated@@136 $generated@@164 ($generated@@162 $generated@@165) $generated@@166) ($generated@@136 $generated@@164 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@136 $generated@@164 ($generated@@162 $generated@@165) $generated@@166))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@72)
 :pattern ( ($generated@@167 $generated@@169))
)) (= (type $generated@@168) $generated@@139)))
(assert (= ($generated@@167 $generated@@168) $generated@@63))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@68)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@174) $generated@@68)) ($generated@@145 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@145 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 17)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@81 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@71 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@81) (= (type $generated@@225) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@226) ($generated@@70 $generated@@4))) (= (type $generated@@228) $generated@@81)) (= (type $generated@@229) ($generated@@70 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@231 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@177 $generated@@81 $generated@@4))
 :pattern ( ($generated@@231 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@71 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@81) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) ($generated@@70 $generated@@4))) (= (type $generated@@240) $generated@@81)) (= (type $generated@@241) ($generated@@70 $generated@@242))) (= ($generated@@0 ($generated@@175 ($generated@@231 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@175 ($generated@@231 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert  (and (and (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@244 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@244 $generated@@249))
)) (forall (($generated@@251 T@U) ) (! (= (type ($generated@@246 $generated@@251)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@251))
))) (forall (($generated@@252 T@U) ) (! (= (type ($generated@@248 $generated@@252)) $generated@@139)
 :pattern ( ($generated@@248 $generated@@252))
))))
(assert  (=> (<= 1 $generated@@243) (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@68) (= (type $generated@@254) $generated@@138)) (= (type $generated@@255) $generated@@139)) (or ($generated@@245 $generated@@253 ($generated@@244 $generated@@255)) (and (not (= 1 $generated@@243)) ($generated@@145 $generated@@255 ($generated@@246 $generated@@253))))) (and (=> ($generated@@0 ($generated@@244 ($generated@@11 ($generated@@247 ($generated@@244 $generated@@255))))) ($generated@@245 $generated@@253 ($generated@@244 ($generated@@248 ($generated@@244 $generated@@255))))) (= ($generated@@136 $generated@@253 ($generated@@162 $generated@@254) ($generated@@244 $generated@@255)) (ite ($generated@@247 ($generated@@244 $generated@@255)) (+ 1 ($generated@@136 $generated@@253 ($generated@@162 $generated@@254) ($generated@@244 ($generated@@248 ($generated@@244 $generated@@255))))) 0))))
 :weight 3
 :pattern ( ($generated@@136 $generated@@253 ($generated@@162 $generated@@254) ($generated@@244 $generated@@255)))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@68) (= (type $generated@@258) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@256 $generated@@258)) ($generated@@78 $generated@@168 ($generated@@246 $generated@@257) $generated@@258))
 :pattern ( ($generated@@78 $generated@@168 ($generated@@246 $generated@@257) $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (= (type ($generated@@259 $generated@@261 $generated@@262)) $generated@@139)
 :pattern ( ($generated@@259 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) $generated@@68)) (= (type $generated@@265) $generated@@157)) (= (type $generated@@266) $generated@@157)) (= ($generated@@145 ($generated@@259 $generated@@265 $generated@@266) ($generated@@148 $generated@@263 $generated@@264))  (and ($generated@@260 $generated@@265 $generated@@263) ($generated@@260 $generated@@266 $generated@@264))))
 :pattern ( ($generated@@145 ($generated@@259 $generated@@265 $generated@@266) ($generated@@148 $generated@@263 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@68) ($generated@@145 $generated@@168 ($generated@@246 $generated@@267)))
 :pattern ( ($generated@@145 $generated@@168 ($generated@@246 $generated@@267)))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@139) (= (type $generated@@269) $generated@@139)) (= ($generated@@154 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@154 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@139) (= (type $generated@@272) $generated@@139)) (= ($generated@@270 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@270 $generated@@271 $generated@@272))
)))
(assert  (=> (<= 1 $generated@@243) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (= (type $generated@@274) $generated@@68) (= (type $generated@@275) $generated@@138)) (= (type $generated@@276) $generated@@139)) (or ($generated@@245 $generated@@274 $generated@@276) (and (not (= 1 $generated@@243)) ($generated@@145 $generated@@276 ($generated@@246 $generated@@274))))) (<= ($generated@@273 0) ($generated@@136 $generated@@274 $generated@@275 $generated@@276)))
 :pattern ( ($generated@@136 $generated@@274 $generated@@275 $generated@@276))
))))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@157)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@139) (= (type $generated@@280) $generated@@139)) (and ($generated@@247 $generated@@279) ($generated@@247 $generated@@280))) (= ($generated@@270 $generated@@279 $generated@@280)  (and (= ($generated@@277 $generated@@279) ($generated@@277 $generated@@280)) ($generated@@270 ($generated@@248 $generated@@279) ($generated@@248 $generated@@280)))))
 :pattern ( ($generated@@270 $generated@@279 $generated@@280) ($generated@@247 $generated@@279))
 :pattern ( ($generated@@270 $generated@@279 $generated@@280) ($generated@@247 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@68)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@284) $generated@@68)) (= ($generated@@145 $generated@@283 ($generated@@281 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@157) ($generated@@0 ($generated@@85 $generated@@283 $generated@@285))) ($generated@@260 $generated@@285 $generated@@284))
 :pattern ( ($generated@@85 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@145 $generated@@283 ($generated@@281 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@68)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@289) $generated@@68)) (= ($generated@@145 $generated@@288 ($generated@@286 $generated@@289)) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@157) ($generated@@0 ($generated@@85 $generated@@288 $generated@@290))) ($generated@@260 $generated@@290 $generated@@289))
 :pattern ( ($generated@@85 $generated@@288 $generated@@290))
))))
 :pattern ( ($generated@@145 $generated@@288 ($generated@@286 $generated@@289)))
)))
(assert (forall (($generated@@291 Int) ) (! (= ($generated@@273 $generated@@291) $generated@@291)
 :pattern ( ($generated@@273 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (= ($generated@@244 $generated@@292) $generated@@292)
 :pattern ( ($generated@@244 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (= (type $generated@@294) $generated@@139) (= (type $generated@@295) $generated@@139)) (and ($generated@@293 $generated@@294) ($generated@@293 $generated@@295))) (= ($generated@@270 $generated@@294 $generated@@295) true))
 :pattern ( ($generated@@270 $generated@@294 $generated@@295) ($generated@@293 $generated@@294))
 :pattern ( ($generated@@270 $generated@@294 $generated@@295) ($generated@@293 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (! (= (type ($generated@@296 $generated@@297 $generated@@298)) $generated@@139)
 :pattern ( ($generated@@296 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (= (type $generated@@299) $generated@@68) (= (type $generated@@300) $generated@@157)) (= (type $generated@@301) $generated@@139)) (= ($generated@@145 ($generated@@296 $generated@@300 $generated@@301) ($generated@@246 $generated@@299))  (and ($generated@@260 $generated@@300 $generated@@299) ($generated@@145 $generated@@301 ($generated@@246 $generated@@299)))))
 :pattern ( ($generated@@145 ($generated@@296 $generated@@300 $generated@@301) ($generated@@246 $generated@@299)))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) $generated@@68) (= (type $generated@@304) $generated@@68)) (= (type $generated@@305) $generated@@157)) (= (type $generated@@306) $generated@@157)) (= (type $generated@@307) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@256 $generated@@307)) (= ($generated@@78 ($generated@@259 $generated@@305 $generated@@306) ($generated@@148 $generated@@303 $generated@@304) $generated@@307)  (and ($generated@@302 $generated@@305 $generated@@303 $generated@@307) ($generated@@302 $generated@@306 $generated@@304 $generated@@307))))
 :pattern ( ($generated@@78 ($generated@@259 $generated@@305 $generated@@306) ($generated@@148 $generated@@303 $generated@@304) $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@139) (= ($generated@@147 $generated@@308) (= ($generated@@167 $generated@@308) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@139) (= ($generated@@293 $generated@@309) (= ($generated@@167 $generated@@309) $generated@@63)))
 :pattern ( ($generated@@293 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@139) (= ($generated@@247 $generated@@310) (= ($generated@@167 $generated@@310) $generated@@65)))
 :pattern ( ($generated@@247 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@139) ($generated@@147 $generated@@311)) (exists (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (and (and (= (type $generated@@312) $generated@@157) (= (type $generated@@313) $generated@@157)) (= $generated@@311 ($generated@@259 $generated@@312 $generated@@313)))
 :no-pattern (type $generated@@312)
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
)))
 :pattern ( ($generated@@147 $generated@@311))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@139) ($generated@@247 $generated@@314)) (exists (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (and (and (= (type $generated@@315) $generated@@157) (= (type $generated@@316) $generated@@139)) (= $generated@@314 ($generated@@296 $generated@@315 $generated@@316)))
 :no-pattern (type $generated@@315)
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
)))
 :pattern ( ($generated@@247 $generated@@314))
)))
(assert  (and (and (forall (($generated@@321 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@321)) 18)) (forall (($generated@@322 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@319 $generated@@322))
))) (forall (($generated@@323 T@T) ) (! (= (type ($generated@@317 $generated@@323)) ($generated@@319 $generated@@323))
 :pattern ( ($generated@@317 $generated@@323))
))))
(assert (forall (($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@324)) 0)
 :pattern ( ($generated@@317 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@139) ($generated@@293 $generated@@325)) (= $generated@@325 $generated@@168))
 :pattern ( ($generated@@293 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@157)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@68) (= (type $generated@@330) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@302 ($generated@@326 $generated@@328) $generated@@329 $generated@@330) ($generated@@78 $generated@@328 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@302 ($generated@@326 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@333 T@T) ) (! (= (type ($generated@@332 $generated@@333)) ($generated@@80 $generated@@333 $generated@@2))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@83 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@80 $generated@@335 $generated@@2)) (and (= (= ($generated@@331 $generated@@334) 0) (= $generated@@334 ($generated@@332 $generated@@335))) (=> (not (= ($generated@@331 $generated@@334) 0)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) (< 0 ($generated ($generated@@85 $generated@@334 $generated@@336))))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@73)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@68) (and (= ($generated@@76 ($generated@@246 $generated@@339)) $generated@@64) (= ($generated@@337 ($generated@@246 $generated@@339)) $generated@@67)))
 :pattern ( ($generated@@246 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 19)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 20)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@85 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@85 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@83 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@80 $generated@@377 $generated@@2)) (= ($generated@@171 $generated@@376) (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@377) (and (<= 0 ($generated ($generated@@85 $generated@@376 $generated@@378))) (<= ($generated ($generated@@85 $generated@@376 $generated@@378)) ($generated@@331 $generated@@376))))
 :pattern ( ($generated@@85 $generated@@376 $generated@@378))
)))))
 :pattern ( ($generated@@171 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@344 (type $generated@@379))))
(let (($generated@@381 ($generated@@343 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@342 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@341 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@340 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@344 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@80 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@344 (type $generated@@386))))
(let (($generated@@388 ($generated@@343 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@342 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@341 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@362 (type $generated@@390))))
(let (($generated@@392 ($generated@@361 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@360 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@359 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@358 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@362 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@80 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@362 (type $generated@@397))))
(let (($generated@@399 ($generated@@361 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@360 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@359 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@402) $generated@@68)) (= ($generated@@145 $generated@@401 ($generated@@170 $generated@@402)) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@401 $generated@@403)))) ($generated@@260 $generated@@403 $generated@@402))
 :pattern ( ($generated@@85 $generated@@401 $generated@@403))
))))
 :pattern ( ($generated@@145 $generated@@401 ($generated@@170 $generated@@402)))
)))
(assert  (=> (<= 1 $generated@@243) (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) $generated@@68) (= (type $generated@@405) $generated@@138)) (= (type $generated@@406) $generated@@139)) (or ($generated@@245 $generated@@404 $generated@@406) (and (not (= 1 $generated@@243)) ($generated@@145 $generated@@406 ($generated@@246 $generated@@404))))) (and (=> ($generated@@247 $generated@@406) ($generated@@245 $generated@@404 ($generated@@248 $generated@@406))) (= ($generated@@136 $generated@@404 ($generated@@162 $generated@@405) $generated@@406) (ite ($generated@@247 $generated@@406) (+ 1 ($generated@@136 $generated@@404 $generated@@405 ($generated@@248 $generated@@406))) 0))))
 :pattern ( ($generated@@136 $generated@@404 ($generated@@162 $generated@@405) $generated@@406))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@408) $generated@@68)) (= (type $generated@@409) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@407 ($generated@@281 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@157) ($generated@@0 ($generated@@85 $generated@@407 $generated@@410))) ($generated@@302 $generated@@410 $generated@@408 $generated@@409))
 :pattern ( ($generated@@85 $generated@@407 $generated@@410))
))))
 :pattern ( ($generated@@78 $generated@@407 ($generated@@281 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@412) $generated@@68)) (= (type $generated@@413) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@411 ($generated@@286 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@157) ($generated@@0 ($generated@@85 $generated@@411 $generated@@414))) ($generated@@302 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@85 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@78 $generated@@411 ($generated@@286 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(= ($generated ($generated@@85 ($generated@@332 $generated@@416) $generated@@415)) 0))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@85 ($generated@@332 $generated@@416) $generated@@415)))
)))
(assert  (and (and (forall (($generated@@420 T@U) ) (! (= (type ($generated@@417 $generated@@420)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@417 $generated@@420))
)) (forall (($generated@@421 T@T) ($generated@@422 T@U) ) (! (= (type ($generated@@418 $generated@@421 $generated@@422)) $generated@@421)
 :pattern ( ($generated@@418 $generated@@421 $generated@@422))
))) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@344 (type $generated@@423))))
(let (($generated@@425 ($generated@@343 (type $generated@@423))))
(= (type ($generated@@419 $generated@@423)) ($generated@@80 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@419 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@342 $generated@@157 $generated@@157)) (= (type $generated@@427) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@417 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@426) ($generated@@155 ($generated@@418 $generated@@139 $generated@@427)))) (= ($generated@@85 ($generated@@419 $generated@@426) ($generated@@155 ($generated@@418 $generated@@139 $generated@@427))) ($generated@@156 ($generated@@418 $generated@@139 $generated@@427))))))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@426) $generated@@427))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@362 (type $generated@@431))))
(let (($generated@@433 ($generated@@361 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@80 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@360 $generated@@157 $generated@@157)) (= (type $generated@@435) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@85 ($generated@@358 $generated@@434) ($generated@@155 ($generated@@418 $generated@@139 $generated@@435)))) (= ($generated@@85 ($generated@@429 $generated@@434) ($generated@@155 ($generated@@418 $generated@@139 $generated@@435))) ($generated@@156 ($generated@@418 $generated@@139 $generated@@435))))))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@343 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@342 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@85 ($generated@@383 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@85 ($generated@@419 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@436) $generated@@440))
 :pattern ( ($generated@@85 ($generated@@419 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@361 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@360 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@85 ($generated@@358 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@85 ($generated@@429 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@441) $generated@@445))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@342 $generated@@157 $generated@@157)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) $generated@@68)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@449) $generated@@453))) (and ($generated@@302 ($generated@@85 ($generated@@419 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@302 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@85 ($generated@@419 $generated@@449) $generated@@453))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@360 $generated@@157 $generated@@157)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@457) $generated@@461))) (and ($generated@@302 ($generated@@85 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@302 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@139)) ($generated@@145 $generated@@463 ($generated@@246 $generated@@462))) (or ($generated@@293 $generated@@463) ($generated@@247 $generated@@463)))
 :pattern ( ($generated@@247 $generated@@463) ($generated@@145 $generated@@463 ($generated@@246 $generated@@462)))
 :pattern ( ($generated@@293 $generated@@463) ($generated@@145 $generated@@463 ($generated@@246 $generated@@462)))
)))
(assert (forall (($generated@@465 T@T) ) (! (= (type ($generated@@464 $generated@@465)) ($generated@@80 $generated@@465 $generated@@4))
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@362 (type $generated@@466))))
(let (($generated@@468 ($generated@@361 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@360 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@359 $generated@@468 $generated@@467)) (= ($generated@@358 $generated@@466) ($generated@@464 $generated@@468))))))
 :pattern ( ($generated@@358 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@362 (type $generated@@469))))
(let (($generated@@471 ($generated@@361 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@360 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@359 $generated@@471 $generated@@470)) (= ($generated@@394 $generated@@469) ($generated@@464 $generated@@470))))))
 :pattern ( ($generated@@394 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@362 (type $generated@@472))))
(let (($generated@@474 ($generated@@361 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@360 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@359 $generated@@474 $generated@@473)) (= ($generated@@428 $generated@@472) ($generated@@464 $generated@@157))))))
 :pattern ( ($generated@@428 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@344 (type $generated@@475))))
(let (($generated@@477 ($generated@@343 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@342 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@341 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@157) (= (type $generated@@479) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@417 $generated@@475) ($generated@@326 ($generated@@259 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@417 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@362 (type $generated@@480))))
(let (($generated@@482 ($generated@@361 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@360 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@359 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@157) (= (type $generated@@484) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@428 $generated@@480) ($generated@@326 ($generated@@259 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@428 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@157) ($generated@@260 $generated@@485 $generated@@46)) (and (= ($generated@@326 ($generated@@418 $generated@@2 $generated@@485)) $generated@@485) ($generated@@145 ($generated@@418 $generated@@2 $generated@@485) $generated@@46)))
 :pattern ( ($generated@@260 $generated@@485 $generated@@46))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@157) ($generated@@260 $generated@@486 $generated@@47)) (and (= ($generated@@326 ($generated@@418 $generated@@3 $generated@@486)) $generated@@486) ($generated@@145 ($generated@@418 $generated@@3 $generated@@486) $generated@@47)))
 :pattern ( ($generated@@260 $generated@@486 $generated@@47))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@157) ($generated@@260 $generated@@487 $generated@@44)) (and (= ($generated@@326 ($generated@@418 $generated@@4 $generated@@487)) $generated@@487) ($generated@@145 ($generated@@418 $generated@@4 $generated@@487) $generated@@44)))
 :pattern ( ($generated@@260 $generated@@487 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@488) 21))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@157) ($generated@@260 $generated@@489 $generated@@45)) (and (= ($generated@@326 ($generated@@418 $generated@@488 $generated@@489)) $generated@@489) ($generated@@145 ($generated@@418 $generated@@488 $generated@@489) $generated@@45)))
 :pattern ( ($generated@@260 $generated@@489 $generated@@45))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@68) (= ($generated@@260 ($generated@@326 $generated@@490) $generated@@491) ($generated@@145 $generated@@490 $generated@@491)))
 :pattern ( ($generated@@260 ($generated@@326 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@83 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@80 $generated@@493 $generated@@2)) (<= 0 ($generated@@331 $generated@@492))))
 :pattern ( ($generated@@331 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@320 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@319 $generated@@495)) (<= 0 ($generated@@318 $generated@@494))))
 :pattern ( ($generated@@318 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@446 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@446 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@446 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@446 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@76 ($generated@@446 $generated@@504 $generated@@505)) $generated@@58))
 :pattern ( ($generated@@446 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@506 ($generated@@454 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@454 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@510 ($generated@@454 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@454 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@76 ($generated@@454 $generated@@514 $generated@@515)) $generated@@59))
 :pattern ( ($generated@@454 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@157) (= (type $generated@@517) $generated@@157)) (= ($generated@@167 ($generated@@259 $generated@@516 $generated@@517)) $generated@@61))
 :pattern ( ($generated@@259 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@518 ($generated@@148 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@148 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= ($generated@@522 ($generated@@148 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@148 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@157) (= (type $generated@@527) $generated@@157)) (= ($generated@@155 ($generated@@259 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@259 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@157) (= (type $generated@@529) $generated@@157)) (= ($generated@@156 ($generated@@259 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@259 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@157) (= (type $generated@@531) $generated@@139)) (= ($generated@@167 ($generated@@296 $generated@@530 $generated@@531)) $generated@@65))
 :pattern ( ($generated@@296 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@157) (= (type $generated@@533) $generated@@139)) (= ($generated@@277 ($generated@@296 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@296 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@157) (= (type $generated@@535) $generated@@139)) (= ($generated@@248 ($generated@@296 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@296 $generated@@534 $generated@@535))
)))
(assert  (and (forall (($generated@@538 T@U) ) (! (= (type ($generated@@536 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@536 $generated@@538))
)) (forall (($generated@@539 T@U) ($generated@@540 Int) ) (! (let (($generated@@541 ($generated@@320 (type $generated@@539))))
(= (type ($generated@@537 $generated@@539 $generated@@540)) $generated@@541))
 :pattern ( ($generated@@537 $generated@@539 $generated@@540))
))))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@319 $generated@@157)) (= (type $generated@@543) $generated@@68)) (= (type $generated@@544) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@542 ($generated@@536 $generated@@543) $generated@@544) (forall (($generated@@545 Int) ) (!  (=> (and (<= 0 $generated@@545) (< $generated@@545 ($generated@@318 $generated@@542))) ($generated@@302 ($generated@@537 $generated@@542 $generated@@545) $generated@@543 $generated@@544))
 :pattern ( ($generated@@537 $generated@@542 $generated@@545))
))))
 :pattern ( ($generated@@78 $generated@@542 ($generated@@536 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@546 ($generated@@79 $generated@@547)) $generated@@547)
 :pattern ( ($generated@@79 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@548 ($generated@@281 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@281 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@76 ($generated@@281 $generated@@551)) $generated@@54))
 :pattern ( ($generated@@281 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@552 ($generated@@286 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@286 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@68) (= ($generated@@76 ($generated@@286 $generated@@555)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@170 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@170 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@76 ($generated@@170 $generated@@559)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@68)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@560 ($generated@@536 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@536 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@76 ($generated@@536 $generated@@563)) $generated@@57))
 :pattern ( ($generated@@536 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@564 ($generated@@246 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@246 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
(= ($generated@@418 $generated@@568 ($generated@@326 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@326 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@342 $generated@@157 $generated@@157)) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) $generated@@68)) (= ($generated@@145 $generated@@569 ($generated@@446 $generated@@570 $generated@@571)) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@569) $generated@@572))) (and ($generated@@260 ($generated@@85 ($generated@@419 $generated@@569) $generated@@572) $generated@@571) ($generated@@260 $generated@@572 $generated@@570)))
 :pattern ( ($generated@@85 ($generated@@419 $generated@@569) $generated@@572))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@569) $generated@@572))
))))
 :pattern ( ($generated@@145 $generated@@569 ($generated@@446 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@360 $generated@@157 $generated@@157)) (= (type $generated@@574) $generated@@68)) (= (type $generated@@575) $generated@@68)) (= ($generated@@145 $generated@@573 ($generated@@454 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@358 $generated@@573) $generated@@576))) (and ($generated@@260 ($generated@@85 ($generated@@429 $generated@@573) $generated@@576) $generated@@575) ($generated@@260 $generated@@576 $generated@@574)))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@573) $generated@@576))
 :pattern ( ($generated@@85 ($generated@@358 $generated@@573) $generated@@576))
))))
 :pattern ( ($generated@@145 $generated@@573 ($generated@@454 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@157) (= (type $generated@@580) $generated@@157)) (< ($generated@@577 $generated@@579) ($generated@@578 ($generated@@259 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@157)) (< ($generated@@577 $generated@@582) ($generated@@578 ($generated@@259 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@157) (= (type $generated@@584) $generated@@139)) (< ($generated@@577 $generated@@583) ($generated@@578 ($generated@@296 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@296 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@157) (= (type $generated@@586) $generated@@139)) (< ($generated@@578 $generated@@586) ($generated@@578 ($generated@@296 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@296 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@157) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) $generated@@68)) ($generated@@260 $generated@@587 ($generated@@446 $generated@@588 $generated@@589))) (and (= ($generated@@326 ($generated@@418 ($generated@@342 $generated@@157 $generated@@157) $generated@@587)) $generated@@587) ($generated@@145 ($generated@@418 ($generated@@342 $generated@@157 $generated@@157) $generated@@587) ($generated@@446 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@260 $generated@@587 ($generated@@446 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@157) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@68)) ($generated@@260 $generated@@590 ($generated@@454 $generated@@591 $generated@@592))) (and (= ($generated@@326 ($generated@@418 ($generated@@360 $generated@@157 $generated@@157) $generated@@590)) $generated@@590) ($generated@@145 ($generated@@418 ($generated@@360 $generated@@157 $generated@@157) $generated@@590) ($generated@@454 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@260 $generated@@590 ($generated@@454 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@68) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) $generated@@157)) ($generated@@260 $generated@@595 ($generated@@148 $generated@@593 $generated@@594))) (and (= ($generated@@326 ($generated@@418 $generated@@139 $generated@@595)) $generated@@595) ($generated@@145 ($generated@@418 $generated@@139 $generated@@595) ($generated@@148 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@260 $generated@@595 ($generated@@148 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@139) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@256 $generated@@598) (and ($generated@@247 $generated@@596) ($generated@@78 $generated@@596 ($generated@@246 $generated@@597) $generated@@598)))) ($generated@@302 ($generated@@277 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@302 ($generated@@277 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
 (not ($generated@@0 ($generated@@85 ($generated@@464 $generated@@600) $generated@@599))))
 :pattern ( (let (($generated@@600 (type $generated@@599)))
($generated@@85 ($generated@@464 $generated@@600) $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@68) (= (type $generated@@602) $generated@@68)) (and (= ($generated@@76 ($generated@@148 $generated@@601 $generated@@602)) $generated@@62) (= ($generated@@337 ($generated@@148 $generated@@601 $generated@@602)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@139) (= ($generated@@577 ($generated@@326 $generated@@603)) ($generated@@578 $generated@@603)))
 :pattern ( ($generated@@577 ($generated@@326 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@157) ($generated@@260 $generated@@604 ($generated@@79 0))) (and (= ($generated@@326 ($generated@@418 $generated@@2 $generated@@604)) $generated@@604) ($generated@@145 ($generated@@418 ($generated@@80 $generated@@157 $generated@@4) $generated@@604) ($generated@@79 0))))
 :pattern ( ($generated@@260 $generated@@604 ($generated@@79 0)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@157) (= (type $generated@@606) $generated@@68)) ($generated@@260 $generated@@605 ($generated@@281 $generated@@606))) (and (= ($generated@@326 ($generated@@418 ($generated@@80 $generated@@157 $generated@@4) $generated@@605)) $generated@@605) ($generated@@145 ($generated@@418 ($generated@@80 $generated@@157 $generated@@4) $generated@@605) ($generated@@281 $generated@@606))))
 :pattern ( ($generated@@260 $generated@@605 ($generated@@281 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@157) (= (type $generated@@608) $generated@@68)) ($generated@@260 $generated@@607 ($generated@@286 $generated@@608))) (and (= ($generated@@326 ($generated@@418 ($generated@@80 $generated@@157 $generated@@4) $generated@@607)) $generated@@607) ($generated@@145 ($generated@@418 ($generated@@80 $generated@@157 $generated@@4) $generated@@607) ($generated@@286 $generated@@608))))
 :pattern ( ($generated@@260 $generated@@607 ($generated@@286 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@157) (= (type $generated@@610) $generated@@68)) ($generated@@260 $generated@@609 ($generated@@170 $generated@@610))) (and (= ($generated@@326 ($generated@@418 ($generated@@80 $generated@@157 $generated@@2) $generated@@609)) $generated@@609) ($generated@@145 ($generated@@418 ($generated@@80 $generated@@157 $generated@@2) $generated@@609) ($generated@@170 $generated@@610))))
 :pattern ( ($generated@@260 $generated@@609 ($generated@@170 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@157) (= (type $generated@@612) $generated@@68)) ($generated@@260 $generated@@611 ($generated@@536 $generated@@612))) (and (= ($generated@@326 ($generated@@418 ($generated@@319 $generated@@157) $generated@@611)) $generated@@611) ($generated@@145 ($generated@@418 ($generated@@319 $generated@@157) $generated@@611) ($generated@@536 $generated@@612))))
 :pattern ( ($generated@@260 $generated@@611 ($generated@@536 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@68) (= (type $generated@@614) $generated@@157)) ($generated@@260 $generated@@614 ($generated@@246 $generated@@613))) (and (= ($generated@@326 ($generated@@418 $generated@@139 $generated@@614)) $generated@@614) ($generated@@145 ($generated@@418 $generated@@139 $generated@@614) ($generated@@246 $generated@@613))))
 :pattern ( ($generated@@260 $generated@@614 ($generated@@246 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@139) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@256 $generated@@617) (and ($generated@@247 $generated@@615) ($generated@@78 $generated@@615 ($generated@@246 $generated@@616) $generated@@617)))) ($generated@@78 ($generated@@248 $generated@@615) ($generated@@246 $generated@@616) $generated@@617))
 :pattern ( ($generated@@78 ($generated@@248 $generated@@615) ($generated@@246 $generated@@616) $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@618) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@618 ($generated@@170 $generated@@619) $generated@@620) (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@618 $generated@@621)))) ($generated@@302 $generated@@621 $generated@@619 $generated@@620))
 :pattern ( ($generated@@85 $generated@@618 $generated@@621))
))))
 :pattern ( ($generated@@78 $generated@@618 ($generated@@170 $generated@@619) $generated@@620))
)))
(assert (= $generated@@168 ($generated@@244 $generated@@168)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@139) (= (type $generated@@623) $generated@@68)) (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@256 $generated@@624) (and ($generated@@147 $generated@@622) (exists (($generated@@625 T@U) ) (!  (and (= (type $generated@@625) $generated@@68) ($generated@@78 $generated@@622 ($generated@@148 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@78 $generated@@622 ($generated@@148 $generated@@623 $generated@@625) $generated@@624))
))))) ($generated@@302 ($generated@@155 $generated@@622) $generated@@623 $generated@@624))
 :pattern ( ($generated@@302 ($generated@@155 $generated@@622) $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@139) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@256 $generated@@628) (and ($generated@@147 $generated@@626) (exists (($generated@@629 T@U) ) (!  (and (= (type $generated@@629) $generated@@68) ($generated@@78 $generated@@626 ($generated@@148 $generated@@629 $generated@@627) $generated@@628))
 :pattern ( ($generated@@78 $generated@@626 ($generated@@148 $generated@@629 $generated@@627) $generated@@628))
))))) ($generated@@302 ($generated@@156 $generated@@626) $generated@@627 $generated@@628))
 :pattern ( ($generated@@302 ($generated@@156 $generated@@626) $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@157) (= (type $generated@@631) $generated@@157)) (= ($generated@@259 ($generated@@244 $generated@@630) ($generated@@244 $generated@@631)) ($generated@@244 ($generated@@259 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@259 ($generated@@244 $generated@@630) ($generated@@244 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@157) (= (type $generated@@633) $generated@@139)) (= ($generated@@296 ($generated@@244 $generated@@632) ($generated@@244 $generated@@633)) ($generated@@244 ($generated@@296 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@296 ($generated@@244 $generated@@632) ($generated@@244 $generated@@633)))
)))
(assert (forall (($generated@@634 Int) ) (! (= ($generated@@326 ($generated@@8 ($generated@@273 $generated@@634))) ($generated@@244 ($generated@@326 ($generated@@8 $generated@@634))))
 :pattern ( ($generated@@326 ($generated@@8 ($generated@@273 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ) (! (= ($generated@@326 ($generated@@244 $generated@@635)) ($generated@@244 ($generated@@326 $generated@@635)))
 :pattern ( ($generated@@326 ($generated@@244 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@320 (type $generated@@636))))
 (=> (and (= (type $generated@@636) ($generated@@319 $generated@@637)) (= ($generated@@318 $generated@@636) 0)) (= $generated@@636 ($generated@@317 $generated@@637))))
 :pattern ( ($generated@@318 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@639)))
 (=> (and (and (= (type $generated@@638) ($generated@@80 $generated@@641 $generated@@2)) (= (type $generated@@640) $generated@@2)) (<= 0 ($generated $generated@@640))) (= ($generated@@331 ($generated@@86 $generated@@638 $generated@@639 $generated@@640)) (+ (- ($generated@@331 $generated@@638) ($generated ($generated@@85 $generated@@638 $generated@@639))) ($generated $generated@@640)))))
 :pattern ( ($generated@@331 ($generated@@86 $generated@@638 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@643) $generated@@2)) ($generated@@78 $generated@@643 $generated@@46 $generated@@642))
 :pattern ( ($generated@@78 $generated@@643 $generated@@46 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@645) $generated@@3)) ($generated@@78 $generated@@645 $generated@@47 $generated@@644))
 :pattern ( ($generated@@78 $generated@@645 $generated@@47 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@647) $generated@@4)) ($generated@@78 $generated@@647 $generated@@44 $generated@@646))
 :pattern ( ($generated@@78 $generated@@647 $generated@@44 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@649) $generated@@488)) ($generated@@78 $generated@@649 $generated@@45 $generated@@648))
 :pattern ( ($generated@@78 $generated@@649 $generated@@45 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@651) $generated@@157)) ($generated@@78 $generated@@651 $generated@@48 $generated@@650))
 :pattern ( ($generated@@78 $generated@@651 $generated@@48 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@652) $generated@@68) (= (type $generated@@653) $generated@@157)) (= (type $generated@@654) $generated@@139)) (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@256 $generated@@655)) (= ($generated@@78 ($generated@@296 $generated@@653 $generated@@654) ($generated@@246 $generated@@652) $generated@@655)  (and ($generated@@302 $generated@@653 $generated@@652 $generated@@655) ($generated@@78 $generated@@654 ($generated@@246 $generated@@652) $generated@@655))))
 :pattern ( ($generated@@78 ($generated@@296 $generated@@653 $generated@@654) ($generated@@246 $generated@@652) $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@319 $generated@@157)) (= (type $generated@@657) $generated@@68)) (= ($generated@@145 $generated@@656 ($generated@@536 $generated@@657)) (forall (($generated@@658 Int) ) (!  (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@318 $generated@@656))) ($generated@@260 ($generated@@537 $generated@@656 $generated@@658) $generated@@657))
 :pattern ( ($generated@@537 $generated@@656 $generated@@658))
))))
 :pattern ( ($generated@@145 $generated@@656 ($generated@@536 $generated@@657)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 Int) ) (!  (=> (= (type $generated@@660) ($generated@@319 $generated@@157)) (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@318 $generated@@660))) (< ($generated@@578 ($generated@@418 $generated@@139 ($generated@@537 $generated@@660 $generated@@661))) ($generated@@659 $generated@@660))))
 :pattern ( ($generated@@578 ($generated@@418 $generated@@139 ($generated@@537 $generated@@660 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) ($generated@@342 $generated@@157 $generated@@157)) (= (type $generated@@663) $generated@@68)) (= (type $generated@@664) $generated@@68)) ($generated@@145 $generated@@662 ($generated@@446 $generated@@663 $generated@@664))) (and (and ($generated@@145 ($generated@@340 $generated@@662) ($generated@@281 $generated@@663)) ($generated@@145 ($generated@@383 $generated@@662) ($generated@@281 $generated@@664))) ($generated@@145 ($generated@@417 $generated@@662) ($generated@@281 ($generated@@148 $generated@@663 $generated@@664)))))
 :pattern ( ($generated@@145 $generated@@662 ($generated@@446 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) ($generated@@360 $generated@@157 $generated@@157)) (= (type $generated@@666) $generated@@68)) (= (type $generated@@667) $generated@@68)) ($generated@@145 $generated@@665 ($generated@@454 $generated@@666 $generated@@667))) (and (and ($generated@@145 ($generated@@358 $generated@@665) ($generated@@286 $generated@@666)) ($generated@@145 ($generated@@394 $generated@@665) ($generated@@286 $generated@@667))) ($generated@@145 ($generated@@428 $generated@@665) ($generated@@286 ($generated@@148 $generated@@666 $generated@@667)))))
 :pattern ( ($generated@@145 $generated@@665 ($generated@@454 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@2) ($generated@@145 $generated@@668 $generated@@46))
 :pattern ( ($generated@@145 $generated@@668 $generated@@46))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@3) ($generated@@145 $generated@@669 $generated@@47))
 :pattern ( ($generated@@145 $generated@@669 $generated@@47))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@4) ($generated@@145 $generated@@670 $generated@@44))
 :pattern ( ($generated@@145 $generated@@670 $generated@@44))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@488) ($generated@@145 $generated@@671 $generated@@45))
 :pattern ( ($generated@@145 $generated@@671 $generated@@45))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@157) ($generated@@145 $generated@@672 $generated@@48))
 :pattern ( ($generated@@145 $generated@@672 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@675) $generated@@139) (= (type $generated@@673) $generated@@68)) (= (type $generated@@678) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@674) $generated@@138)) (= (type $generated@@677) $generated@@139)) (= (type $generated@@676) $generated@@138)) (= (type $generated@@679) ($generated@@177 $generated@@81 $generated@@4))) (= (type $generated@@680) $generated@@81)) (= (type $generated@@681) ($generated@@177 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@683  (=> (= (ControlFlow 0 4) (- 0 3)) (<= ($generated@@273 0) ($generated@@136 $generated@@673 $generated@@674 $generated@@675)))))
(let (($generated@@684  (=> (and (and (not ($generated@@247 $generated@@675)) (= ($generated@@136 $generated@@673 $generated@@676 $generated@@675) ($generated@@273 0))) (and ($generated@@145 ($generated@@8 ($generated@@136 $generated@@673 $generated@@676 $generated@@675)) $generated@@46) (= (ControlFlow 0 8) 4))) $generated@@683)))
(let (($generated@@685  (=> ($generated@@247 $generated@@675) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@247 $generated@@675)) (=> ($generated@@247 $generated@@675) (=> (and (= $generated@@677 ($generated@@248 $generated@@675)) ($generated@@78 $generated@@677 ($generated@@246 $generated@@673) $generated@@678)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@578 $generated@@677) ($generated@@578 $generated@@675))) (=> (< ($generated@@578 $generated@@677) ($generated@@578 $generated@@675)) (=> ($generated@@245 $generated@@673 ($generated@@248 $generated@@675)) (=> (and (and (= ($generated@@136 $generated@@673 $generated@@676 $generated@@675) (+ 1 ($generated@@136 $generated@@673 $generated@@676 ($generated@@248 $generated@@675)))) ($generated@@245 $generated@@673 ($generated@@248 $generated@@675))) (and ($generated@@145 ($generated@@8 ($generated@@136 $generated@@673 $generated@@676 $generated@@675)) $generated@@46) (= (ControlFlow 0 5) 4))) $generated@@683))))))))))
(let (($generated@@686  (=> (= $generated@@679 ($generated@@231 $generated@@680 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 5) $generated@@685) (=> (= (ControlFlow 0 9) 8) $generated@@684)))))
(let (($generated@@687  (=> (and ($generated@@78 $generated@@675 ($generated@@246 $generated@@673) $generated@@678) (= (ControlFlow 0 2) (- 0 1))) (or (= $generated@@675 $generated@@675) (< ($generated@@578 $generated@@675) ($generated@@578 $generated@@675))))))
(let (($generated@@688  (=> (= $generated@@681 ($generated@@176 $generated@@680 $generated@@678 $generated@@60 false)) (=> (and (= ($generated@@137 $generated@@676) $generated@@676) (= ($generated@@137 $generated@@674) $generated@@674)) (and (=> (= (ControlFlow 0 10) 2) $generated@@687) (=> (= (ControlFlow 0 10) 9) $generated@@686))))))
(let (($generated@@689  (=> (and (and (and ($generated@@256 $generated@@678) ($generated@@682 $generated@@678)) ($generated@@145 $generated@@675 ($generated@@246 $generated@@673))) (and (= 1 $generated@@243) (= (ControlFlow 0 11) 10))) $generated@@688)))
$generated@@689))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 () Int)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U T@U) Bool)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@T) T@U)
(declare-fun $generated@@348 (T@T T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) Bool)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@T T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@456 (T@T) T@U)
(declare-fun $generated@@480 () T@T)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@529 (T@U Int) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@653 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@138)
 :pattern ( ($generated@@137 $generated@@141))
))) (= (type $generated@@140) $generated@@138)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@68) (= (type $generated@@143) $generated@@138)) (= (type $generated@@144) $generated@@139)) (= ($generated@@136 $generated@@142 $generated@@143 $generated@@144) ($generated@@136 $generated@@142 $generated@@140 $generated@@144)))
 :pattern ( ($generated@@136 $generated@@142 ($generated@@137 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@79 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@79 0)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@68) (= (type $generated@@152) $generated@@68)) (= (type $generated@@153) $generated@@139)) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@139) (= (type $generated@@161) $generated@@139)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@138)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@68) (= (type $generated@@165) $generated@@138)) (= (type $generated@@166) $generated@@139)) (= ($generated@@136 $generated@@164 ($generated@@162 $generated@@165) $generated@@166) ($generated@@136 $generated@@164 $generated@@165 $generated@@166)))
 :pattern ( ($generated@@136 $generated@@164 ($generated@@162 $generated@@165) $generated@@166))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@72)
 :pattern ( ($generated@@167 $generated@@169))
)) (= (type $generated@@168) $generated@@139)))
(assert (= ($generated@@167 $generated@@168) $generated@@63))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@68)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@174) $generated@@68)) ($generated@@145 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@145 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 17)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@81 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@71 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@81) (= (type $generated@@225) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@226) ($generated@@70 $generated@@4))) (= (type $generated@@228) $generated@@81)) (= (type $generated@@229) ($generated@@70 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert  (and (and (forall (($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(= (type ($generated@@232 $generated@@237)) $generated@@238))
 :pattern ( ($generated@@232 $generated@@237))
)) (forall (($generated@@239 T@U) ) (! (= (type ($generated@@234 $generated@@239)) $generated@@68)
 :pattern ( ($generated@@234 $generated@@239))
))) (forall (($generated@@240 T@U) ) (! (= (type ($generated@@236 $generated@@240)) $generated@@139)
 :pattern ( ($generated@@236 $generated@@240))
))))
(assert  (=> (<= 1 $generated@@231) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@138)) (= (type $generated@@243) $generated@@139)) (or ($generated@@233 $generated@@241 ($generated@@232 $generated@@243)) (and (not (= 1 $generated@@231)) ($generated@@145 $generated@@243 ($generated@@234 $generated@@241))))) (and (=> ($generated@@0 ($generated@@232 ($generated@@11 ($generated@@235 ($generated@@232 $generated@@243))))) ($generated@@233 $generated@@241 ($generated@@232 ($generated@@236 ($generated@@232 $generated@@243))))) (= ($generated@@136 $generated@@241 ($generated@@162 $generated@@242) ($generated@@232 $generated@@243)) (ite ($generated@@235 ($generated@@232 $generated@@243)) (+ 1 ($generated@@136 $generated@@241 ($generated@@162 $generated@@242) ($generated@@232 ($generated@@236 ($generated@@232 $generated@@243))))) 0))))
 :weight 3
 :pattern ( ($generated@@136 $generated@@241 ($generated@@162 $generated@@242) ($generated@@232 $generated@@243)))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (= (type $generated@@245) $generated@@68) (= (type $generated@@246) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@246)) ($generated@@78 $generated@@168 ($generated@@234 $generated@@245) $generated@@246))
 :pattern ( ($generated@@78 $generated@@168 ($generated@@234 $generated@@245) $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@139)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@68) (= (type $generated@@252) $generated@@68)) (= (type $generated@@253) $generated@@157)) (= (type $generated@@254) $generated@@157)) (= ($generated@@145 ($generated@@247 $generated@@253 $generated@@254) ($generated@@148 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@145 ($generated@@247 $generated@@253 $generated@@254) ($generated@@148 $generated@@251 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@68) ($generated@@145 $generated@@168 ($generated@@234 $generated@@255)))
 :pattern ( ($generated@@145 $generated@@168 ($generated@@234 $generated@@255)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@139) (= (type $generated@@257) $generated@@139)) (= ($generated@@154 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@154 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@139) (= (type $generated@@260) $generated@@139)) (= ($generated@@258 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@258 $generated@@259 $generated@@260))
)))
(assert  (=> (<= 1 $generated@@231) (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@68) (= (type $generated@@263) $generated@@138)) (= (type $generated@@264) $generated@@139)) (or ($generated@@233 $generated@@262 $generated@@264) (and (not (= 1 $generated@@231)) ($generated@@145 $generated@@264 ($generated@@234 $generated@@262))))) (<= ($generated@@261 0) ($generated@@136 $generated@@262 $generated@@263 $generated@@264)))
 :pattern ( ($generated@@136 $generated@@262 $generated@@263 $generated@@264))
))))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@157)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@267) $generated@@139) (= (type $generated@@268) $generated@@139)) (and ($generated@@235 $generated@@267) ($generated@@235 $generated@@268))) (= ($generated@@258 $generated@@267 $generated@@268)  (and (= ($generated@@265 $generated@@267) ($generated@@265 $generated@@268)) ($generated@@258 ($generated@@236 $generated@@267) ($generated@@236 $generated@@268)))))
 :pattern ( ($generated@@258 $generated@@267 $generated@@268) ($generated@@235 $generated@@267))
 :pattern ( ($generated@@258 $generated@@267 $generated@@268) ($generated@@235 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@272) $generated@@68)) (= ($generated@@145 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@157) ($generated@@0 ($generated@@85 $generated@@271 $generated@@273))) ($generated@@248 $generated@@273 $generated@@272))
 :pattern ( ($generated@@85 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@145 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@68)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@277) $generated@@68)) (= ($generated@@145 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@157) ($generated@@0 ($generated@@85 $generated@@276 $generated@@278))) ($generated@@248 $generated@@278 $generated@@277))
 :pattern ( ($generated@@85 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@145 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@279 Int) ) (! (= ($generated@@261 $generated@@279) $generated@@279)
 :pattern ( ($generated@@261 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@232 $generated@@280) $generated@@280)
 :pattern ( ($generated@@232 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@139) (= (type $generated@@283) $generated@@139)) (and ($generated@@281 $generated@@282) ($generated@@281 $generated@@283))) (= ($generated@@258 $generated@@282 $generated@@283) true))
 :pattern ( ($generated@@258 $generated@@282 $generated@@283) ($generated@@281 $generated@@282))
 :pattern ( ($generated@@258 $generated@@282 $generated@@283) ($generated@@281 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (= (type ($generated@@284 $generated@@285 $generated@@286)) $generated@@139)
 :pattern ( ($generated@@284 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@287) $generated@@68) (= (type $generated@@288) $generated@@157)) (= (type $generated@@289) $generated@@139)) (= ($generated@@145 ($generated@@284 $generated@@288 $generated@@289) ($generated@@234 $generated@@287))  (and ($generated@@248 $generated@@288 $generated@@287) ($generated@@145 $generated@@289 ($generated@@234 $generated@@287)))))
 :pattern ( ($generated@@145 ($generated@@284 $generated@@288 $generated@@289) ($generated@@234 $generated@@287)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) $generated@@68) (= (type $generated@@292) $generated@@68)) (= (type $generated@@293) $generated@@157)) (= (type $generated@@294) $generated@@157)) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@295)) (= ($generated@@78 ($generated@@247 $generated@@293 $generated@@294) ($generated@@148 $generated@@291 $generated@@292) $generated@@295)  (and ($generated@@290 $generated@@293 $generated@@291 $generated@@295) ($generated@@290 $generated@@294 $generated@@292 $generated@@295))))
 :pattern ( ($generated@@78 ($generated@@247 $generated@@293 $generated@@294) ($generated@@148 $generated@@291 $generated@@292) $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@139) (= ($generated@@147 $generated@@296) (= ($generated@@167 $generated@@296) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@139) (= ($generated@@281 $generated@@297) (= ($generated@@167 $generated@@297) $generated@@63)))
 :pattern ( ($generated@@281 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@139) (= ($generated@@235 $generated@@298) (= ($generated@@167 $generated@@298) $generated@@65)))
 :pattern ( ($generated@@235 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@139) ($generated@@147 $generated@@299)) (exists (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (and (and (= (type $generated@@300) $generated@@157) (= (type $generated@@301) $generated@@157)) (= $generated@@299 ($generated@@247 $generated@@300 $generated@@301)))
 :no-pattern (type $generated@@300)
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
)))
 :pattern ( ($generated@@147 $generated@@299))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@139) ($generated@@235 $generated@@302)) (exists (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (and (and (= (type $generated@@303) $generated@@157) (= (type $generated@@304) $generated@@139)) (= $generated@@302 ($generated@@284 $generated@@303 $generated@@304)))
 :no-pattern (type $generated@@303)
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
)))
 :pattern ( ($generated@@235 $generated@@302))
)))
(assert  (and (and (forall (($generated@@309 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@309)) 18)) (forall (($generated@@310 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@307 $generated@@310))
))) (forall (($generated@@311 T@T) ) (! (= (type ($generated@@305 $generated@@311)) ($generated@@307 $generated@@311))
 :pattern ( ($generated@@305 $generated@@311))
))))
(assert (forall (($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@312)) 0)
 :pattern ( ($generated@@305 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@139) ($generated@@281 $generated@@313)) (= $generated@@313 $generated@@168))
 :pattern ( ($generated@@281 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@157)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@68) (= (type $generated@@318) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@290 ($generated@@314 $generated@@316) $generated@@317 $generated@@318) ($generated@@78 $generated@@316 $generated@@317 $generated@@318)))
 :pattern ( ($generated@@290 ($generated@@314 $generated@@316) $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@321 T@T) ) (! (= (type ($generated@@320 $generated@@321)) ($generated@@80 $generated@@321 $generated@@2))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@83 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@80 $generated@@323 $generated@@2)) (and (= (= ($generated@@319 $generated@@322) 0) (= $generated@@322 ($generated@@320 $generated@@323))) (=> (not (= ($generated@@319 $generated@@322) 0)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) (< 0 ($generated ($generated@@85 $generated@@322 $generated@@324))))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@73)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@68) (and (= ($generated@@76 ($generated@@234 $generated@@327)) $generated@@64) (= ($generated@@325 ($generated@@234 $generated@@327)) $generated@@67)))
 :pattern ( ($generated@@234 $generated@@327))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert  (and (and (and (and (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (= ($generated@@1 ($generated@@348 $generated@@351 $generated@@352)) 20)) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@349 ($generated@@348 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@348 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@348 $generated@@355 $generated@@356)) $generated@@356)
 :pattern ( ($generated@@348 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@349 (type $generated@@357))))
(= (type ($generated@@346 $generated@@357)) ($generated@@80 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@357))
))) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= (type ($generated@@347 $generated@@359 $generated@@360)) ($generated@@348 $generated@@359 $generated@@360))
 :pattern ( ($generated@@347 $generated@@359 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@T) ) (! (let (($generated@@363 (type $generated@@361)))
 (not ($generated@@0 ($generated@@85 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361))))
 :pattern ( (let (($generated@@363 (type $generated@@361)))
($generated@@85 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361)))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@83 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@80 $generated@@365 $generated@@2)) (= ($generated@@171 $generated@@364) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@365) (and (<= 0 ($generated ($generated@@85 $generated@@364 $generated@@366))) (<= ($generated ($generated@@85 $generated@@364 $generated@@366)) ($generated@@319 $generated@@364))))
 :pattern ( ($generated@@85 $generated@@364 $generated@@366))
)))))
 :pattern ( ($generated@@171 $generated@@364))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@332 (type $generated@@367))))
(let (($generated@@369 ($generated@@331 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@330 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@329 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@328 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@332 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@80 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@332 (type $generated@@374))))
(let (($generated@@376 ($generated@@331 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@330 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@329 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@85 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@350 (type $generated@@378))))
(let (($generated@@380 ($generated@@349 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@348 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@347 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@85 ($generated@@346 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@346 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@350 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@80 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@350 (type $generated@@385))))
(let (($generated@@387 ($generated@@349 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@348 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@347 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@85 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) $generated@@139)
 :pattern ( ($generated@@389 $generated@@391))
)))
(assert  (=> (<= 1 $generated@@231) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@68) (or ($generated@@390 $generated@@392) (not (= 1 $generated@@231)))) ($generated@@145 ($generated@@389 $generated@@392) ($generated@@234 $generated@@392)))
 :pattern ( ($generated@@389 $generated@@392))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@394) $generated@@68)) (= ($generated@@145 $generated@@393 ($generated@@170 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@393 $generated@@395)))) ($generated@@248 $generated@@395 $generated@@394))
 :pattern ( ($generated@@85 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@145 $generated@@393 ($generated@@170 $generated@@394)))
)))
(assert  (=> (<= 1 $generated@@231) (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) $generated@@68) (= (type $generated@@397) $generated@@138)) (= (type $generated@@398) $generated@@139)) (or ($generated@@233 $generated@@396 $generated@@398) (and (not (= 1 $generated@@231)) ($generated@@145 $generated@@398 ($generated@@234 $generated@@396))))) (and (=> ($generated@@235 $generated@@398) ($generated@@233 $generated@@396 ($generated@@236 $generated@@398))) (= ($generated@@136 $generated@@396 ($generated@@162 $generated@@397) $generated@@398) (ite ($generated@@235 $generated@@398) (+ 1 ($generated@@136 $generated@@396 $generated@@397 ($generated@@236 $generated@@398))) 0))))
 :pattern ( ($generated@@136 $generated@@396 ($generated@@162 $generated@@397) $generated@@398))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@399 ($generated@@269 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@157) ($generated@@0 ($generated@@85 $generated@@399 $generated@@402))) ($generated@@290 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@85 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@78 $generated@@399 ($generated@@269 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@80 $generated@@157 $generated@@4)) (= (type $generated@@404) $generated@@68)) (= (type $generated@@405) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@403 ($generated@@274 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@157) ($generated@@0 ($generated@@85 $generated@@403 $generated@@406))) ($generated@@290 $generated@@406 $generated@@404 $generated@@405))
 :pattern ( ($generated@@85 $generated@@403 $generated@@406))
))))
 :pattern ( ($generated@@78 $generated@@403 ($generated@@274 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(= ($generated ($generated@@85 ($generated@@320 $generated@@408) $generated@@407)) 0))
 :pattern ( (let (($generated@@408 (type $generated@@407)))
($generated@@85 ($generated@@320 $generated@@408) $generated@@407)))
)))
(assert  (and (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@409 $generated@@412)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@409 $generated@@412))
)) (forall (($generated@@413 T@T) ($generated@@414 T@U) ) (! (= (type ($generated@@410 $generated@@413 $generated@@414)) $generated@@413)
 :pattern ( ($generated@@410 $generated@@413 $generated@@414))
))) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@332 (type $generated@@415))))
(let (($generated@@417 ($generated@@331 (type $generated@@415))))
(= (type ($generated@@411 $generated@@415)) ($generated@@80 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@411 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@330 $generated@@157 $generated@@157)) (= (type $generated@@419) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@418) ($generated@@155 ($generated@@410 $generated@@139 $generated@@419)))) (= ($generated@@85 ($generated@@411 $generated@@418) ($generated@@155 ($generated@@410 $generated@@139 $generated@@419))) ($generated@@156 ($generated@@410 $generated@@139 $generated@@419))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@80 $generated@@157 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@350 (type $generated@@423))))
(let (($generated@@425 ($generated@@349 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@80 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@348 $generated@@157 $generated@@157)) (= (type $generated@@427) $generated@@157)) (= ($generated@@0 ($generated@@85 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@85 ($generated@@346 $generated@@426) ($generated@@155 ($generated@@410 $generated@@139 $generated@@427)))) (= ($generated@@85 ($generated@@421 $generated@@426) ($generated@@155 ($generated@@410 $generated@@139 $generated@@427))) ($generated@@156 ($generated@@410 $generated@@139 $generated@@427))))))
 :pattern ( ($generated@@85 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@331 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@330 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@85 ($generated@@371 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@85 ($generated@@411 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@85 ($generated@@371 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@349 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@348 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@85 ($generated@@382 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@85 ($generated@@346 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@85 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@85 ($generated@@346 $generated@@433) $generated@@437))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@68)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@330 $generated@@157 $generated@@157)) (= (type $generated@@442) $generated@@68)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@441) $generated@@445))) (and ($generated@@290 ($generated@@85 ($generated@@411 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@290 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@441) $generated@@445))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@348 $generated@@157 $generated@@157)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) $generated@@68)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@346 $generated@@449) $generated@@453))) (and ($generated@@290 ($generated@@85 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@290 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@85 ($generated@@346 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@78 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@454) $generated@@68) (= (type $generated@@455) $generated@@139)) ($generated@@145 $generated@@455 ($generated@@234 $generated@@454))) (or ($generated@@281 $generated@@455) ($generated@@235 $generated@@455)))
 :pattern ( ($generated@@235 $generated@@455) ($generated@@145 $generated@@455 ($generated@@234 $generated@@454)))
 :pattern ( ($generated@@281 $generated@@455) ($generated@@145 $generated@@455 ($generated@@234 $generated@@454)))
)))
(assert (forall (($generated@@457 T@T) ) (! (= (type ($generated@@456 $generated@@457)) ($generated@@80 $generated@@457 $generated@@4))
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@350 (type $generated@@458))))
(let (($generated@@460 ($generated@@349 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@348 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@347 $generated@@460 $generated@@459)) (= ($generated@@346 $generated@@458) ($generated@@456 $generated@@460))))))
 :pattern ( ($generated@@346 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@350 (type $generated@@461))))
(let (($generated@@463 ($generated@@349 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@348 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@347 $generated@@463 $generated@@462)) (= ($generated@@382 $generated@@461) ($generated@@456 $generated@@462))))))
 :pattern ( ($generated@@382 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@350 (type $generated@@464))))
(let (($generated@@466 ($generated@@349 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@348 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@347 $generated@@466 $generated@@465)) (= ($generated@@420 $generated@@464) ($generated@@456 $generated@@157))))))
 :pattern ( ($generated@@420 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@332 (type $generated@@467))))
(let (($generated@@469 ($generated@@331 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@330 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@329 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@157) (= (type $generated@@471) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@467) ($generated@@314 ($generated@@247 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@409 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@350 (type $generated@@472))))
(let (($generated@@474 ($generated@@349 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@348 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@347 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@157) (= (type $generated@@476) $generated@@157)) ($generated@@0 ($generated@@85 ($generated@@420 $generated@@472) ($generated@@314 ($generated@@247 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@420 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@157) ($generated@@248 $generated@@477 $generated@@46)) (and (= ($generated@@314 ($generated@@410 $generated@@2 $generated@@477)) $generated@@477) ($generated@@145 ($generated@@410 $generated@@2 $generated@@477) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@477 $generated@@46))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@157) ($generated@@248 $generated@@478 $generated@@47)) (and (= ($generated@@314 ($generated@@410 $generated@@3 $generated@@478)) $generated@@478) ($generated@@145 ($generated@@410 $generated@@3 $generated@@478) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@478 $generated@@47))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@157) ($generated@@248 $generated@@479 $generated@@44)) (and (= ($generated@@314 ($generated@@410 $generated@@4 $generated@@479)) $generated@@479) ($generated@@145 ($generated@@410 $generated@@4 $generated@@479) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@479 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@480) 21))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@157) ($generated@@248 $generated@@481 $generated@@45)) (and (= ($generated@@314 ($generated@@410 $generated@@480 $generated@@481)) $generated@@481) ($generated@@145 ($generated@@410 $generated@@480 $generated@@481) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@481 $generated@@45))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@68) (= ($generated@@248 ($generated@@314 $generated@@482) $generated@@483) ($generated@@145 $generated@@482 $generated@@483)))
 :pattern ( ($generated@@248 ($generated@@314 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@83 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@80 $generated@@485 $generated@@2)) (<= 0 ($generated@@319 $generated@@484))))
 :pattern ( ($generated@@319 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@308 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@307 $generated@@487)) (<= 0 ($generated@@306 $generated@@486))))
 :pattern ( ($generated@@306 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@438 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@438 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@76 ($generated@@438 $generated@@496 $generated@@497)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@68) (= (type $generated@@501) $generated@@68)) (= ($generated@@498 ($generated@@446 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@446 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@502 ($generated@@446 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@446 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@76 ($generated@@446 $generated@@506 $generated@@507)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@157) (= (type $generated@@509) $generated@@157)) (= ($generated@@167 ($generated@@247 $generated@@508 $generated@@509)) $generated@@61))
 :pattern ( ($generated@@247 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@510 ($generated@@148 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@148 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@68) (= (type $generated@@517) $generated@@68)) (= ($generated@@514 ($generated@@148 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@148 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@157) (= (type $generated@@519) $generated@@157)) (= ($generated@@155 ($generated@@247 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@247 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@157) (= (type $generated@@521) $generated@@157)) (= ($generated@@156 ($generated@@247 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@247 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@157) (= (type $generated@@523) $generated@@139)) (= ($generated@@167 ($generated@@284 $generated@@522 $generated@@523)) $generated@@65))
 :pattern ( ($generated@@284 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@157) (= (type $generated@@525) $generated@@139)) (= ($generated@@265 ($generated@@284 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@284 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@157) (= (type $generated@@527) $generated@@139)) (= ($generated@@236 ($generated@@284 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@284 $generated@@526 $generated@@527))
)))
(assert  (and (forall (($generated@@530 T@U) ) (! (= (type ($generated@@528 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@530))
)) (forall (($generated@@531 T@U) ($generated@@532 Int) ) (! (let (($generated@@533 ($generated@@308 (type $generated@@531))))
(= (type ($generated@@529 $generated@@531 $generated@@532)) $generated@@533))
 :pattern ( ($generated@@529 $generated@@531 $generated@@532))
))))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@307 $generated@@157)) (= (type $generated@@535) $generated@@68)) (= (type $generated@@536) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@534 ($generated@@528 $generated@@535) $generated@@536) (forall (($generated@@537 Int) ) (!  (=> (and (<= 0 $generated@@537) (< $generated@@537 ($generated@@306 $generated@@534))) ($generated@@290 ($generated@@529 $generated@@534 $generated@@537) $generated@@535 $generated@@536))
 :pattern ( ($generated@@529 $generated@@534 $generated@@537))
))))
 :pattern ( ($generated@@78 $generated@@534 ($generated@@528 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@538 ($generated@@79 $generated@@539)) $generated@@539)
 :pattern ( ($generated@@79 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@68)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@540 ($generated@@269 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@269 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@76 ($generated@@269 $generated@@543)) $generated@@54))
 :pattern ( ($generated@@269 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@544 ($generated@@274 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@274 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@76 ($generated@@274 $generated@@547)) $generated@@55))
 :pattern ( ($generated@@274 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@548 ($generated@@170 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@170 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@76 ($generated@@170 $generated@@551)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@552 ($generated@@528 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@528 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@68) (= ($generated@@76 ($generated@@528 $generated@@555)) $generated@@57))
 :pattern ( ($generated@@528 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@234 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@234 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
(= ($generated@@410 $generated@@560 ($generated@@314 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@314 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@330 $generated@@157 $generated@@157)) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@68)) (= ($generated@@145 $generated@@561 ($generated@@438 $generated@@562 $generated@@563)) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@561) $generated@@564))) (and ($generated@@248 ($generated@@85 ($generated@@411 $generated@@561) $generated@@564) $generated@@563) ($generated@@248 $generated@@564 $generated@@562)))
 :pattern ( ($generated@@85 ($generated@@411 $generated@@561) $generated@@564))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@561) $generated@@564))
))))
 :pattern ( ($generated@@145 $generated@@561 ($generated@@438 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@348 $generated@@157 $generated@@157)) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) $generated@@68)) (= ($generated@@145 $generated@@565 ($generated@@446 $generated@@566 $generated@@567)) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@157) ($generated@@0 ($generated@@85 ($generated@@346 $generated@@565) $generated@@568))) (and ($generated@@248 ($generated@@85 ($generated@@421 $generated@@565) $generated@@568) $generated@@567) ($generated@@248 $generated@@568 $generated@@566)))
 :pattern ( ($generated@@85 ($generated@@421 $generated@@565) $generated@@568))
 :pattern ( ($generated@@85 ($generated@@346 $generated@@565) $generated@@568))
))))
 :pattern ( ($generated@@145 $generated@@565 ($generated@@446 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@157) (= (type $generated@@572) $generated@@157)) (< ($generated@@569 $generated@@571) ($generated@@570 ($generated@@247 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@247 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@157) (= (type $generated@@574) $generated@@157)) (< ($generated@@569 $generated@@574) ($generated@@570 ($generated@@247 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@247 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@157) (= (type $generated@@576) $generated@@139)) (< ($generated@@569 $generated@@575) ($generated@@570 ($generated@@284 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@284 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@139)) (< ($generated@@570 $generated@@578) ($generated@@570 ($generated@@284 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@284 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@157) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) $generated@@68)) ($generated@@248 $generated@@579 ($generated@@438 $generated@@580 $generated@@581))) (and (= ($generated@@314 ($generated@@410 ($generated@@330 $generated@@157 $generated@@157) $generated@@579)) $generated@@579) ($generated@@145 ($generated@@410 ($generated@@330 $generated@@157 $generated@@157) $generated@@579) ($generated@@438 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@248 $generated@@579 ($generated@@438 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@157) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) $generated@@68)) ($generated@@248 $generated@@582 ($generated@@446 $generated@@583 $generated@@584))) (and (= ($generated@@314 ($generated@@410 ($generated@@348 $generated@@157 $generated@@157) $generated@@582)) $generated@@582) ($generated@@145 ($generated@@410 ($generated@@348 $generated@@157 $generated@@157) $generated@@582) ($generated@@446 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@248 $generated@@582 ($generated@@446 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@68) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@157)) ($generated@@248 $generated@@587 ($generated@@148 $generated@@585 $generated@@586))) (and (= ($generated@@314 ($generated@@410 $generated@@139 $generated@@587)) $generated@@587) ($generated@@145 ($generated@@410 $generated@@139 $generated@@587) ($generated@@148 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@248 $generated@@587 ($generated@@148 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@139) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@590) (and ($generated@@235 $generated@@588) ($generated@@78 $generated@@588 ($generated@@234 $generated@@589) $generated@@590)))) ($generated@@290 ($generated@@265 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@290 ($generated@@265 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@85 ($generated@@456 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@85 ($generated@@456 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@68) (= (type $generated@@594) $generated@@68)) (and (= ($generated@@76 ($generated@@148 $generated@@593 $generated@@594)) $generated@@62) (= ($generated@@325 ($generated@@148 $generated@@593 $generated@@594)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@593 $generated@@594))
)))
(assert  (=> (<= 1 $generated@@231) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@68) (or ($generated@@390 $generated@@595) (not (= 1 $generated@@231)))) (= ($generated@@389 $generated@@595) ($generated@@232 $generated@@168)))
 :pattern ( ($generated@@389 $generated@@595))
))))
(assert  (=> (<= 1 $generated@@231) (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@68) (or ($generated@@390 $generated@@596) (not (= 1 $generated@@231)))) (= ($generated@@389 $generated@@596) ($generated@@232 $generated@@168)))
 :weight 3
 :pattern ( ($generated@@389 $generated@@596))
))))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@139) (= ($generated@@569 ($generated@@314 $generated@@597)) ($generated@@570 $generated@@597)))
 :pattern ( ($generated@@569 ($generated@@314 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@157) ($generated@@248 $generated@@598 ($generated@@79 0))) (and (= ($generated@@314 ($generated@@410 $generated@@2 $generated@@598)) $generated@@598) ($generated@@145 ($generated@@410 ($generated@@80 $generated@@157 $generated@@4) $generated@@598) ($generated@@79 0))))
 :pattern ( ($generated@@248 $generated@@598 ($generated@@79 0)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@157) (= (type $generated@@600) $generated@@68)) ($generated@@248 $generated@@599 ($generated@@269 $generated@@600))) (and (= ($generated@@314 ($generated@@410 ($generated@@80 $generated@@157 $generated@@4) $generated@@599)) $generated@@599) ($generated@@145 ($generated@@410 ($generated@@80 $generated@@157 $generated@@4) $generated@@599) ($generated@@269 $generated@@600))))
 :pattern ( ($generated@@248 $generated@@599 ($generated@@269 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@157) (= (type $generated@@602) $generated@@68)) ($generated@@248 $generated@@601 ($generated@@274 $generated@@602))) (and (= ($generated@@314 ($generated@@410 ($generated@@80 $generated@@157 $generated@@4) $generated@@601)) $generated@@601) ($generated@@145 ($generated@@410 ($generated@@80 $generated@@157 $generated@@4) $generated@@601) ($generated@@274 $generated@@602))))
 :pattern ( ($generated@@248 $generated@@601 ($generated@@274 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@157) (= (type $generated@@604) $generated@@68)) ($generated@@248 $generated@@603 ($generated@@170 $generated@@604))) (and (= ($generated@@314 ($generated@@410 ($generated@@80 $generated@@157 $generated@@2) $generated@@603)) $generated@@603) ($generated@@145 ($generated@@410 ($generated@@80 $generated@@157 $generated@@2) $generated@@603) ($generated@@170 $generated@@604))))
 :pattern ( ($generated@@248 $generated@@603 ($generated@@170 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@157) (= (type $generated@@606) $generated@@68)) ($generated@@248 $generated@@605 ($generated@@528 $generated@@606))) (and (= ($generated@@314 ($generated@@410 ($generated@@307 $generated@@157) $generated@@605)) $generated@@605) ($generated@@145 ($generated@@410 ($generated@@307 $generated@@157) $generated@@605) ($generated@@528 $generated@@606))))
 :pattern ( ($generated@@248 $generated@@605 ($generated@@528 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@68) (= (type $generated@@608) $generated@@157)) ($generated@@248 $generated@@608 ($generated@@234 $generated@@607))) (and (= ($generated@@314 ($generated@@410 $generated@@139 $generated@@608)) $generated@@608) ($generated@@145 ($generated@@410 $generated@@139 $generated@@608) ($generated@@234 $generated@@607))))
 :pattern ( ($generated@@248 $generated@@608 ($generated@@234 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@139) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@611) (and ($generated@@235 $generated@@609) ($generated@@78 $generated@@609 ($generated@@234 $generated@@610) $generated@@611)))) ($generated@@78 ($generated@@236 $generated@@609) ($generated@@234 $generated@@610) $generated@@611))
 :pattern ( ($generated@@78 ($generated@@236 $generated@@609) ($generated@@234 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@612) ($generated@@80 $generated@@157 $generated@@2)) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@612 ($generated@@170 $generated@@613) $generated@@614) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@157) (< 0 ($generated ($generated@@85 $generated@@612 $generated@@615)))) ($generated@@290 $generated@@615 $generated@@613 $generated@@614))
 :pattern ( ($generated@@85 $generated@@612 $generated@@615))
))))
 :pattern ( ($generated@@78 $generated@@612 ($generated@@170 $generated@@613) $generated@@614))
)))
(assert (= $generated@@168 ($generated@@232 $generated@@168)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@139) (= (type $generated@@617) $generated@@68)) (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@618) (and ($generated@@147 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@68) ($generated@@78 $generated@@616 ($generated@@148 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@78 $generated@@616 ($generated@@148 $generated@@617 $generated@@619) $generated@@618))
))))) ($generated@@290 ($generated@@155 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@290 ($generated@@155 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@139) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@622) (and ($generated@@147 $generated@@620) (exists (($generated@@623 T@U) ) (!  (and (= (type $generated@@623) $generated@@68) ($generated@@78 $generated@@620 ($generated@@148 $generated@@623 $generated@@621) $generated@@622))
 :pattern ( ($generated@@78 $generated@@620 ($generated@@148 $generated@@623 $generated@@621) $generated@@622))
))))) ($generated@@290 ($generated@@156 $generated@@620) $generated@@621 $generated@@622))
 :pattern ( ($generated@@290 ($generated@@156 $generated@@620) $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@157) (= (type $generated@@625) $generated@@157)) (= ($generated@@247 ($generated@@232 $generated@@624) ($generated@@232 $generated@@625)) ($generated@@232 ($generated@@247 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@247 ($generated@@232 $generated@@624) ($generated@@232 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@157) (= (type $generated@@627) $generated@@139)) (= ($generated@@284 ($generated@@232 $generated@@626) ($generated@@232 $generated@@627)) ($generated@@232 ($generated@@284 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@284 ($generated@@232 $generated@@626) ($generated@@232 $generated@@627)))
)))
(assert (forall (($generated@@628 Int) ) (! (= ($generated@@314 ($generated@@8 ($generated@@261 $generated@@628))) ($generated@@232 ($generated@@314 ($generated@@8 $generated@@628))))
 :pattern ( ($generated@@314 ($generated@@8 ($generated@@261 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ) (! (= ($generated@@314 ($generated@@232 $generated@@629)) ($generated@@232 ($generated@@314 $generated@@629)))
 :pattern ( ($generated@@314 ($generated@@232 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@308 (type $generated@@630))))
 (=> (and (= (type $generated@@630) ($generated@@307 $generated@@631)) (= ($generated@@306 $generated@@630) 0)) (= $generated@@630 ($generated@@305 $generated@@631))))
 :pattern ( ($generated@@306 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (! (let (($generated@@635 (type $generated@@633)))
 (=> (and (and (= (type $generated@@632) ($generated@@80 $generated@@635 $generated@@2)) (= (type $generated@@634) $generated@@2)) (<= 0 ($generated $generated@@634))) (= ($generated@@319 ($generated@@86 $generated@@632 $generated@@633 $generated@@634)) (+ (- ($generated@@319 $generated@@632) ($generated ($generated@@85 $generated@@632 $generated@@633))) ($generated $generated@@634)))))
 :pattern ( ($generated@@319 ($generated@@86 $generated@@632 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@2)) ($generated@@78 $generated@@637 $generated@@46 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@46 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@3)) ($generated@@78 $generated@@639 $generated@@47 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@47 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@641) $generated@@4)) ($generated@@78 $generated@@641 $generated@@44 $generated@@640))
 :pattern ( ($generated@@78 $generated@@641 $generated@@44 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@643) $generated@@480)) ($generated@@78 $generated@@643 $generated@@45 $generated@@642))
 :pattern ( ($generated@@78 $generated@@643 $generated@@45 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@645) $generated@@157)) ($generated@@78 $generated@@645 $generated@@48 $generated@@644))
 :pattern ( ($generated@@78 $generated@@645 $generated@@48 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@646) $generated@@68) (= (type $generated@@647) $generated@@157)) (= (type $generated@@648) $generated@@139)) (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@649)) (= ($generated@@78 ($generated@@284 $generated@@647 $generated@@648) ($generated@@234 $generated@@646) $generated@@649)  (and ($generated@@290 $generated@@647 $generated@@646 $generated@@649) ($generated@@78 $generated@@648 ($generated@@234 $generated@@646) $generated@@649))))
 :pattern ( ($generated@@78 ($generated@@284 $generated@@647 $generated@@648) ($generated@@234 $generated@@646) $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@307 $generated@@157)) (= (type $generated@@651) $generated@@68)) (= ($generated@@145 $generated@@650 ($generated@@528 $generated@@651)) (forall (($generated@@652 Int) ) (!  (=> (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@306 $generated@@650))) ($generated@@248 ($generated@@529 $generated@@650 $generated@@652) $generated@@651))
 :pattern ( ($generated@@529 $generated@@650 $generated@@652))
))))
 :pattern ( ($generated@@145 $generated@@650 ($generated@@528 $generated@@651)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 Int) ) (!  (=> (= (type $generated@@654) ($generated@@307 $generated@@157)) (=> (and (<= 0 $generated@@655) (< $generated@@655 ($generated@@306 $generated@@654))) (< ($generated@@570 ($generated@@410 $generated@@139 ($generated@@529 $generated@@654 $generated@@655))) ($generated@@653 $generated@@654))))
 :pattern ( ($generated@@570 ($generated@@410 $generated@@139 ($generated@@529 $generated@@654 $generated@@655))))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) ($generated@@330 $generated@@157 $generated@@157)) (= (type $generated@@657) $generated@@68)) (= (type $generated@@658) $generated@@68)) ($generated@@145 $generated@@656 ($generated@@438 $generated@@657 $generated@@658))) (and (and ($generated@@145 ($generated@@328 $generated@@656) ($generated@@269 $generated@@657)) ($generated@@145 ($generated@@371 $generated@@656) ($generated@@269 $generated@@658))) ($generated@@145 ($generated@@409 $generated@@656) ($generated@@269 ($generated@@148 $generated@@657 $generated@@658)))))
 :pattern ( ($generated@@145 $generated@@656 ($generated@@438 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@348 $generated@@157 $generated@@157)) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) $generated@@68)) ($generated@@145 $generated@@659 ($generated@@446 $generated@@660 $generated@@661))) (and (and ($generated@@145 ($generated@@346 $generated@@659) ($generated@@274 $generated@@660)) ($generated@@145 ($generated@@382 $generated@@659) ($generated@@274 $generated@@661))) ($generated@@145 ($generated@@420 $generated@@659) ($generated@@274 ($generated@@148 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@145 $generated@@659 ($generated@@446 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@2) ($generated@@145 $generated@@662 $generated@@46))
 :pattern ( ($generated@@145 $generated@@662 $generated@@46))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@3) ($generated@@145 $generated@@663 $generated@@47))
 :pattern ( ($generated@@145 $generated@@663 $generated@@47))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@4) ($generated@@145 $generated@@664 $generated@@44))
 :pattern ( ($generated@@145 $generated@@664 $generated@@44))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@480) ($generated@@145 $generated@@665 $generated@@45))
 :pattern ( ($generated@@145 $generated@@665 $generated@@45))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@157) ($generated@@145 $generated@@666 $generated@@48))
 :pattern ( ($generated@@145 $generated@@666 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 (T@U) Bool)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@667) $generated@@138) (= (type $generated@@668) $generated@@138)) (= (type $generated@@669) ($generated@@177 $generated@@81 $generated@@4))) (= (type $generated@@670) $generated@@81)) (= (type $generated@@671) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@672) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@674) $generated@@138)) (= (type $generated@@675) $generated@@68)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@676  (=> (= ($generated@@137 $generated@@667) $generated@@667) (=> (and (= ($generated@@137 $generated@@668) $generated@@668) (= $generated@@669 ($generated@@176 $generated@@670 $generated@@671 $generated@@60 false))) (=> (and (and (and ($generated@@244 $generated@@672) ($generated@@673 $generated@@672)) (= $generated@@671 $generated@@672)) (and (and (= $generated@@667 ($generated@@162 $generated@@674)) (= $generated@@668 ($generated@@162 ($generated@@162 $generated@@674)))) (and (= ($generated@@137 $generated@@674) $generated@@674) (= (ControlFlow 0 2) (- 0 1))))) (= ($generated@@136 $generated@@675 $generated@@668 ($generated@@232 ($generated@@389 $generated@@675))) ($generated@@261 0)))))))
(let (($generated@@677  (=> (and (and ($generated@@244 $generated@@671) ($generated@@673 $generated@@671)) (and (= 2 $generated@@231) (= (ControlFlow 0 3) 2))) $generated@@676)))
$generated@@677)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 () Int)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (Int) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@T T@U T@U) T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@T)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@232 (T@T) T@U)
(declare-fun $generated@@233 (T@U) Int)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@T T@T) T@U)
(declare-fun $generated@@263 (T@T T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U T@U) Bool)
(declare-fun $generated@@306 (T@T T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@373 (T@U T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Bool)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@538 (T@T) T@U)
(declare-fun $generated@@544 (T@U T@U T@U) T@U)
(declare-fun $generated@@545 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@546 (T@T T@T) T@T)
(declare-fun $generated@@547 (T@T) T@T)
(declare-fun $generated@@548 (T@T) T@T)
(declare-fun $generated@@549 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@612 (T@U T@U) Bool)
(declare-fun $generated@@652 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@100 $generated@@101)) 12)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@96 ($generated@@83 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@83 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@97 ($generated@@83 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@83 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@97 (type $generated@@106))))
(= (type ($generated@@94 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@98 $generated@@109 $generated@@110 $generated@@111)) ($generated@@83 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@98 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@97 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@94 ($generated@@98 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@94 ($generated@@98 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@94 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@94 ($generated@@98 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@94 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@70 (type $generated@@127))))
(= (type ($generated@@93 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@93 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@85)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@70 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@93 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@93 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@93 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@93 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@93 $generated@@141 $generated@@143)))
 :weight 0
)))) (= (type $generated@@88) $generated@@84)) (= (type $generated@@90) $generated@@67)) (= (type $generated@@95) ($generated@@69 $generated@@2))))
(assert  (=> (<= 0 $generated@@81) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@145) $generated@@84)) (or ($generated@@86 $generated@@144 $generated@@145) (and (not (= 0 $generated@@81)) (and ($generated@@87 $generated@@144) (and (not (= $generated@@145 $generated@@88)) (and ($generated@@89 $generated@@145 $generated@@90) ($generated@@91 $generated@@145 $generated@@90 $generated@@144))))))) (and (=> ($generated@@82 $generated@@144 $generated@@145) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@144 $generated@@145) $generated@@95)))) (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@144 $generated@@145) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@144 $generated@@145))))
 :pattern ( ($generated@@82 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@147 Int) ) (! (= (type ($generated@@146 $generated@@147)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@91 $generated@@148 ($generated@@146 0) $generated@@149))
 :pattern ( ($generated@@91 $generated@@148 ($generated@@146 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@152) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@84) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (= (type $generated@@154) $generated@@67))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@84) (= (type $generated@@156) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@155 $generated@@154 $generated@@156)  (or (= $generated@@155 $generated@@88) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@160) $generated@@84)) (and ($generated@@87 $generated@@159) (and (not (= $generated@@160 $generated@@88)) (= ($generated@@157 $generated@@160) $generated@@154)))) ($generated@@89 ($generated@@93 ($generated@@94 $generated@@159 $generated@@160) $generated@@95) $generated@@46))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@159 $generated@@160) $generated@@95))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@89 $generated@@161 ($generated@@146 0)))
 :pattern ( ($generated@@89 $generated@@161 ($generated@@146 0)))
)))
(assert  (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@89 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@89 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 16) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@73)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (= ($generated@@178 $generated@@154) $generated@@65))
(assert (= ($generated@@178 $generated@@90) $generated@@65))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@67)
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@83 $generated@@173 $generated@@2)) (= (type $generated@@184) $generated@@67)) ($generated@@89 $generated@@183 ($generated@@180 $generated@@184))) ($generated@@181 $generated@@183))
 :pattern ( ($generated@@89 $generated@@183 ($generated@@180 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@84) (= ($generated@@89 $generated@@185 $generated@@154)  (or (= $generated@@185 $generated@@88) (= ($generated@@157 $generated@@185) $generated@@154))))
 :pattern ( ($generated@@89 $generated@@185 $generated@@154))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@84) (= (type $generated@@187) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@186 $generated@@90 $generated@@187) ($generated@@91 $generated@@186 $generated@@154 $generated@@187)))
 :pattern ( ($generated@@91 $generated@@186 $generated@@90 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@188 $generated@@190 $generated@@191)) $generated@@164)
 :pattern ( ($generated@@188 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@67) (= (type $generated@@193) $generated@@67)) (= (type $generated@@194) $generated@@173)) (= (type $generated@@195) $generated@@173)) (= ($generated@@89 ($generated@@188 $generated@@194 $generated@@195) ($generated@@163 $generated@@192 $generated@@193))  (and ($generated@@189 $generated@@194 $generated@@192) ($generated@@189 $generated@@195 $generated@@193))))
 :pattern ( ($generated@@89 ($generated@@188 $generated@@194 $generated@@195) ($generated@@163 $generated@@192 $generated@@193)))
)))
(assert (= ($generated@@76 $generated@@95) 0))
(assert  (and (and (forall (($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= (type ($generated@@196 $generated@@199 $generated@@200 $generated@@201)) ($generated@@69 $generated@@199))
 :pattern ( ($generated@@196 $generated@@199 $generated@@200 $generated@@201))
)) (= ($generated@@1 $generated@@198) 17)) (= (type $generated@@197) $generated@@198)))
(assert (= ($generated@@196 $generated@@2 $generated@@197 $generated@@66) $generated@@95))
(assert  (not ($generated@@202 $generated@@95)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@164) (= (type $generated@@204) $generated@@164)) (= ($generated@@170 $generated@@203 $generated@@204) (= $generated@@203 $generated@@204)))
 :pattern ( ($generated@@170 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (= (type ($generated@@205 $generated@@206)) $generated@@67)
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@208) $generated@@67)) (= ($generated@@89 $generated@@207 ($generated@@205 $generated@@208)) (forall (($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@209) $generated@@173) ($generated@@0 ($generated@@94 $generated@@207 $generated@@209))) ($generated@@189 $generated@@209 $generated@@208))
 :pattern ( ($generated@@94 $generated@@207 $generated@@209))
))))
 :pattern ( ($generated@@89 $generated@@207 ($generated@@205 $generated@@208)))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@67)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@213) $generated@@67)) (= ($generated@@89 $generated@@212 ($generated@@210 $generated@@213)) (forall (($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@173) ($generated@@0 ($generated@@94 $generated@@212 $generated@@214))) ($generated@@189 $generated@@214 $generated@@213))
 :pattern ( ($generated@@94 $generated@@212 $generated@@214))
))))
 :pattern ( ($generated@@89 $generated@@212 ($generated@@210 $generated@@213)))
)))
(assert (forall (($generated@@215 Int) ) (! (= ($generated@@92 $generated@@215) $generated@@215)
 :pattern ( ($generated@@92 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (let (($generated@@218 (type $generated@@217)))
(= (type ($generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ) (! (= ($generated@@216 $generated@@219) $generated@@219)
 :pattern ( ($generated@@216 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@221) $generated@@67) (= (type $generated@@222) $generated@@67)) (= (type $generated@@223) $generated@@173)) (= (type $generated@@224) $generated@@173)) (= (type $generated@@225) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@87 $generated@@225)) (= ($generated@@91 ($generated@@188 $generated@@223 $generated@@224) ($generated@@163 $generated@@221 $generated@@222) $generated@@225)  (and ($generated@@220 $generated@@223 $generated@@221 $generated@@225) ($generated@@220 $generated@@224 $generated@@222 $generated@@225))))
 :pattern ( ($generated@@91 ($generated@@188 $generated@@223 $generated@@224) ($generated@@163 $generated@@221 $generated@@222) $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@72)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@164) (= ($generated@@162 $generated@@228) (= ($generated@@226 $generated@@228) $generated@@62)))
 :pattern ( ($generated@@162 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@164) ($generated@@162 $generated@@229)) (exists (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (and (and (= (type $generated@@230) $generated@@173) (= (type $generated@@231) $generated@@173)) (= $generated@@229 ($generated@@188 $generated@@230 $generated@@231)))
 :no-pattern (type $generated@@230)
 :no-pattern (type $generated@@231)
 :no-pattern ($generated $generated@@230)
 :no-pattern ($generated@@0 $generated@@230)
 :no-pattern ($generated $generated@@231)
 :no-pattern ($generated@@0 $generated@@231)
)))
 :pattern ( ($generated@@162 $generated@@229))
)))
(assert  (and (and (forall (($generated@@236 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@236)) 18)) (forall (($generated@@237 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@234 $generated@@237))
))) (forall (($generated@@238 T@T) ) (! (= (type ($generated@@232 $generated@@238)) ($generated@@234 $generated@@238))
 :pattern ( ($generated@@232 $generated@@238))
))))
(assert (forall (($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@232 $generated@@239)) 0)
 :pattern ( ($generated@@232 $generated@@239))
)))
(assert ($generated@@202 $generated@@60))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@173)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244) ($generated@@91 $generated@@242 $generated@@243 $generated@@244)))
 :pattern ( ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@245) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@246) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@247) $generated@@173)) (= (type $generated@@248) $generated@@67)) ($generated@@150 $generated@@245 $generated@@246)) ($generated@@220 $generated@@247 $generated@@248 $generated@@245)) ($generated@@220 $generated@@247 $generated@@248 $generated@@246))
 :pattern ( ($generated@@150 $generated@@245 $generated@@246) ($generated@@220 $generated@@247 $generated@@248 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@249) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@250) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@252) $generated@@67)) ($generated@@150 $generated@@249 $generated@@250)) ($generated@@91 $generated@@251 $generated@@252 $generated@@249)) ($generated@@91 $generated@@251 $generated@@252 $generated@@250))
 :pattern ( ($generated@@150 $generated@@249 $generated@@250) ($generated@@91 $generated@@251 $generated@@252 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@254) $generated@@84)) (=> (and (and ($generated@@87 $generated@@253) (and (not (= $generated@@254 $generated@@88)) (= ($generated@@157 $generated@@254) $generated@@154))) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@253 $generated@@254) $generated@@60))) ($generated@@91 ($generated@@93 ($generated@@94 $generated@@253 $generated@@254) $generated@@95) $generated@@46 $generated@@253)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@253 $generated@@254) $generated@@95))
)))
(assert (forall (($generated@@257 T@T) ) (! (= (type ($generated@@256 $generated@@257)) ($generated@@83 $generated@@257 $generated@@2))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@96 (type $generated@@258))))
 (=> (= (type $generated@@258) ($generated@@83 $generated@@259 $generated@@2)) (and (= (= ($generated@@255 $generated@@258) 0) (= $generated@@258 ($generated@@256 $generated@@259))) (=> (not (= ($generated@@255 $generated@@258) 0)) (exists (($generated@@260 T@U) ) (!  (and (= (type $generated@@260) $generated@@259) (< 0 ($generated ($generated@@94 $generated@@258 $generated@@260))))
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
))))))
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert  (and (and (and (and (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@266 $generated@@267)) 19)) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@268 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@263 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@263 $generated@@270 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@263 $generated@@270 $generated@@271))
))) (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@264 (type $generated@@272))))
(= (type ($generated@@261 $generated@@272)) ($generated@@83 $generated@@273 $generated@@4)))
 :pattern ( ($generated@@261 $generated@@272))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= (type ($generated@@262 $generated@@274 $generated@@275)) ($generated@@263 $generated@@274 $generated@@275))
 :pattern ( ($generated@@262 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@T) ) (! (let (($generated@@278 (type $generated@@276)))
 (not ($generated@@0 ($generated@@94 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276))))
 :pattern ( (let (($generated@@278 (type $generated@@276)))
($generated@@94 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276)))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 20)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@83 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@94 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@94 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@299) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@297 $generated@@298 $generated@@299)) (and ($generated@@150 $generated@@298 $generated@@299) (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@70 (type $generated@@301))))
 (=> (and (and (= (type $generated@@300) $generated@@84) (= (type $generated@@301) ($generated@@69 $generated@@302))) (not ($generated@@202 $generated@@301))) (= ($generated@@93 ($generated@@94 $generated@@298 $generated@@300) $generated@@301) ($generated@@93 ($generated@@94 $generated@@299 $generated@@300) $generated@@301))))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@299 $generated@@300) $generated@@301))
))))
 :pattern ( ($generated@@297 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@96 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@83 $generated@@304 $generated@@2)) (= ($generated@@181 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@94 $generated@@303 $generated@@305))) (<= ($generated ($generated@@94 $generated@@303 $generated@@305)) ($generated@@255 $generated@@303))))
 :pattern ( ($generated@@94 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@181 $generated@@303))
)))
(assert (forall (($generated@@307 T@T) ($generated@@308 T@U) ) (! (= (type ($generated@@306 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@173) ($generated@@189 $generated@@309 $generated@@154)) (and (= ($generated@@240 ($generated@@306 $generated@@84 $generated@@309)) $generated@@309) ($generated@@89 ($generated@@306 $generated@@84 $generated@@309) $generated@@154)))
 :pattern ( ($generated@@189 $generated@@309 $generated@@154))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@173) ($generated@@189 $generated@@310 $generated@@90)) (and (= ($generated@@240 ($generated@@306 $generated@@84 $generated@@310)) $generated@@310) ($generated@@89 ($generated@@306 $generated@@84 $generated@@310) $generated@@90)))
 :pattern ( ($generated@@189 $generated@@310 $generated@@90))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@84) (= ($generated@@89 $generated@@311 $generated@@90)  (and ($generated@@89 $generated@@311 $generated@@154) (not (= $generated@@311 $generated@@88)))))
 :pattern ( ($generated@@89 $generated@@311 $generated@@90))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@265 (type $generated@@312))))
(let (($generated@@314 ($generated@@264 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@263 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@262 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) ($generated@@0 ($generated@@94 ($generated@@261 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@261 $generated@@312))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@265 (type $generated@@317))))
(= (type ($generated@@316 $generated@@317)) ($generated@@83 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@265 (type $generated@@319))))
(let (($generated@@321 ($generated@@264 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@263 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@262 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@320) ($generated@@0 ($generated@@94 ($generated@@316 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@283 (type $generated@@323))))
(let (($generated@@325 ($generated@@282 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@281 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@280 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@94 ($generated@@279 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@279 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@283 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@83 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@283 (type $generated@@330))))
(let (($generated@@332 ($generated@@282 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@281 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@280 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@94 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) ($generated@@83 $generated@@173 $generated@@2)) (= (type $generated@@335) $generated@@67)) (= ($generated@@89 $generated@@334 ($generated@@180 $generated@@335)) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@173) (< 0 ($generated ($generated@@94 $generated@@334 $generated@@336)))) ($generated@@189 $generated@@336 $generated@@335))
 :pattern ( ($generated@@94 $generated@@334 $generated@@336))
))))
 :pattern ( ($generated@@89 $generated@@334 ($generated@@180 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@338) $generated@@67)) (= (type $generated@@339) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@337 ($generated@@205 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@173) ($generated@@0 ($generated@@94 $generated@@337 $generated@@340))) ($generated@@220 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@94 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@91 $generated@@337 ($generated@@205 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@342) $generated@@67)) (= (type $generated@@343) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@341 ($generated@@210 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@173) ($generated@@0 ($generated@@94 $generated@@341 $generated@@344))) ($generated@@220 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@94 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@91 $generated@@341 ($generated@@210 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 (type $generated@@345)))
(= ($generated ($generated@@94 ($generated@@256 $generated@@346) $generated@@345)) 0))
 :pattern ( (let (($generated@@346 (type $generated@@345)))
($generated@@94 ($generated@@256 $generated@@346) $generated@@345)))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) ($generated@@83 $generated@@173 $generated@@4))
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@265 (type $generated@@350))))
(let (($generated@@352 ($generated@@264 (type $generated@@350))))
(= (type ($generated@@348 $generated@@350)) ($generated@@83 $generated@@352 $generated@@351))))
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@354) $generated@@173)) (= ($generated@@0 ($generated@@94 ($generated@@347 $generated@@353) $generated@@354))  (and ($generated@@0 ($generated@@94 ($generated@@261 $generated@@353) ($generated@@171 ($generated@@306 $generated@@164 $generated@@354)))) (= ($generated@@94 ($generated@@348 $generated@@353) ($generated@@171 ($generated@@306 $generated@@164 $generated@@354))) ($generated@@172 ($generated@@306 $generated@@164 $generated@@354))))))
 :pattern ( ($generated@@94 ($generated@@347 $generated@@353) $generated@@354))
)))
(assert  (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@357)) ($generated@@83 $generated@@173 $generated@@4))
 :pattern ( ($generated@@355 $generated@@357))
)) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@283 (type $generated@@358))))
(let (($generated@@360 ($generated@@282 (type $generated@@358))))
(= (type ($generated@@356 $generated@@358)) ($generated@@83 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@356 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@362) $generated@@173)) (= ($generated@@0 ($generated@@94 ($generated@@355 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@94 ($generated@@279 $generated@@361) ($generated@@171 ($generated@@306 $generated@@164 $generated@@362)))) (= ($generated@@94 ($generated@@356 $generated@@361) ($generated@@171 ($generated@@306 $generated@@164 $generated@@362))) ($generated@@172 ($generated@@306 $generated@@164 $generated@@362))))))
 :pattern ( ($generated@@94 ($generated@@355 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@264 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@263 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@94 ($generated@@316 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@94 ($generated@@261 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@94 ($generated@@348 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@94 ($generated@@261 $generated@@363) $generated@@367))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@94 ($generated@@316 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@282 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@281 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@94 ($generated@@327 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@94 ($generated@@279 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@94 ($generated@@356 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@94 ($generated@@279 $generated@@368) $generated@@372))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@94 ($generated@@327 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@67)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (and (= (type $generated@@376) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@261 $generated@@376) $generated@@380))) (and ($generated@@220 ($generated@@94 ($generated@@348 $generated@@376) $generated@@380) $generated@@378 $generated@@379) ($generated@@220 $generated@@380 $generated@@377 $generated@@379)))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@376) $generated@@380))
 :pattern ( ($generated@@94 ($generated@@261 $generated@@376) $generated@@380))
))))
 :pattern ( ($generated@@91 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@67)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@385) $generated@@67)) (= (type $generated@@386) $generated@@67)) (= (type $generated@@387) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@279 $generated@@384) $generated@@388))) (and ($generated@@220 ($generated@@94 ($generated@@356 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@220 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@384) $generated@@388))
 :pattern ( ($generated@@94 ($generated@@279 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@91 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= (type ($generated@@389 $generated@@390 $generated@@391)) ($generated@@83 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@394)))
 (=> (and (and (= (type $generated@@393) ($generated@@83 $generated@@396 $generated@@4)) (= (type $generated@@395) $generated@@396)) ($generated@@0 ($generated@@94 $generated@@393 $generated@@395))) ($generated@@0 ($generated@@94 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))))
 :pattern ( ($generated@@389 $generated@@393 $generated@@394) ($generated@@94 $generated@@393 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@398)))
 (=> (and (= (type $generated@@397) ($generated@@83 $generated@@400 $generated@@4)) (= (type $generated@@399) $generated@@400)) (= ($generated@@0 ($generated@@94 ($generated@@389 $generated@@397 $generated@@398) $generated@@399))  (or (= $generated@@399 $generated@@398) ($generated@@0 ($generated@@94 $generated@@397 $generated@@399))))))
 :pattern ( ($generated@@94 ($generated@@389 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@401) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@402) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@403) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@401 $generated@@403))) (and ($generated@@150 $generated@@401 $generated@@402) ($generated@@150 $generated@@402 $generated@@403))) ($generated@@150 $generated@@401 $generated@@403))
 :pattern ( ($generated@@150 $generated@@401 $generated@@402) ($generated@@150 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@83 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@283 (type $generated@@406))))
(let (($generated@@408 ($generated@@282 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@281 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@280 $generated@@408 $generated@@407)) (= ($generated@@279 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@279 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@283 (type $generated@@409))))
(let (($generated@@411 ($generated@@282 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@281 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@280 $generated@@411 $generated@@410)) (= ($generated@@327 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@327 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@283 (type $generated@@412))))
(let (($generated@@414 ($generated@@282 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@281 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@280 $generated@@414 $generated@@413)) (= ($generated@@355 $generated@@412) ($generated@@404 $generated@@173))))))
 :pattern ( ($generated@@355 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@265 (type $generated@@415))))
(let (($generated@@417 ($generated@@264 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@263 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@262 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@173) (= (type $generated@@419) $generated@@173)) ($generated@@0 ($generated@@94 ($generated@@347 $generated@@415) ($generated@@240 ($generated@@188 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@347 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@283 (type $generated@@420))))
(let (($generated@@422 ($generated@@282 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@281 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@280 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@173) (= (type $generated@@424) $generated@@173)) ($generated@@0 ($generated@@94 ($generated@@355 $generated@@420) ($generated@@240 ($generated@@188 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@355 $generated@@420))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@198)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@T) ) (!  (=> (and (= (type $generated@@427) $generated@@198) (= (type $generated@@428) $generated@@71)) (and (= ($generated@@425 ($generated@@196 $generated@@429 $generated@@427 $generated@@428)) $generated@@427) (= ($generated@@79 ($generated@@196 $generated@@429 $generated@@427 $generated@@428)) $generated@@428)))
 :pattern ( ($generated@@196 $generated@@429 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@173) ($generated@@189 $generated@@430 $generated@@46)) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@430)) $generated@@430) ($generated@@89 ($generated@@306 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@189 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@173) ($generated@@189 $generated@@431 $generated@@47)) (and (= ($generated@@240 ($generated@@306 $generated@@3 $generated@@431)) $generated@@431) ($generated@@89 ($generated@@306 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@189 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@173) ($generated@@189 $generated@@432 $generated@@44)) (and (= ($generated@@240 ($generated@@306 $generated@@4 $generated@@432)) $generated@@432) ($generated@@89 ($generated@@306 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@189 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 21))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@173) ($generated@@189 $generated@@434 $generated@@45)) (and (= ($generated@@240 ($generated@@306 $generated@@433 $generated@@434)) $generated@@434) ($generated@@89 ($generated@@306 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@189 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@67) (= ($generated@@189 ($generated@@240 $generated@@435) $generated@@436) ($generated@@89 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@189 ($generated@@240 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@96 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@83 $generated@@438 $generated@@2)) (<= 0 ($generated@@255 $generated@@437))))
 :pattern ( ($generated@@255 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@235 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@234 $generated@@440)) (<= 0 ($generated@@233 $generated@@439))))
 :pattern ( ($generated@@233 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@373 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@373 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@373 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@373 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@77 ($generated@@373 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@373 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@381 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@381 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@381 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@381 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@77 ($generated@@381 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@381 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@173) (= (type $generated@@462) $generated@@173)) (= ($generated@@226 ($generated@@188 $generated@@461 $generated@@462)) $generated@@62))
 :pattern ( ($generated@@188 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@163 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@163 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@467 ($generated@@163 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@163 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@173) (= (type $generated@@472) $generated@@173)) (= ($generated@@171 ($generated@@188 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@188 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@173) (= (type $generated@@474) $generated@@173)) (= ($generated@@172 ($generated@@188 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@188 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@235 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@234 $generated@@173)) (= (type $generated@@482) $generated@@67)) (= (type $generated@@483) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@233 $generated@@481))) ($generated@@220 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@91 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
 (=> (= (type $generated@@485) ($generated@@83 $generated@@487 $generated@@4)) ($generated@@0 ($generated@@94 ($generated@@389 $generated@@485 $generated@@486) $generated@@486))))
 :pattern ( ($generated@@389 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@146 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@146 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@205 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@205 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@77 ($generated@@205 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@205 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@210 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@210 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@77 ($generated@@210 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@210 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@180 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@180 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@77 ($generated@@180 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@180 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@502 ($generated@@475 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@475 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@77 ($generated@@475 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@306 $generated@@507 ($generated@@240 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@240 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) $generated@@67)) (= ($generated@@89 $generated@@508 ($generated@@373 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@261 $generated@@508) $generated@@511))) (and ($generated@@189 ($generated@@94 ($generated@@348 $generated@@508) $generated@@511) $generated@@510) ($generated@@189 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@508) $generated@@511))
 :pattern ( ($generated@@94 ($generated@@261 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@89 $generated@@508 ($generated@@373 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) (= ($generated@@89 $generated@@512 ($generated@@381 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@279 $generated@@512) $generated@@515))) (and ($generated@@189 ($generated@@94 ($generated@@356 $generated@@512) $generated@@515) $generated@@514) ($generated@@189 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@512) $generated@@515))
 :pattern ( ($generated@@94 ($generated@@279 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@89 $generated@@512 ($generated@@381 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@518) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@519) $generated@@84)) (=> (and (and (and ($generated@@87 $generated@@517) ($generated@@87 $generated@@518)) (and (not (= $generated@@519 $generated@@88)) ($generated@@89 $generated@@519 $generated@@90))) (and ($generated@@516 $generated@@517) ($generated@@150 $generated@@517 $generated@@518))) (=> (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@70 (type $generated@@521))))
 (=> (and (and (= (type $generated@@520) $generated@@84) (= (type $generated@@521) ($generated@@69 $generated@@522))) (and (not (= $generated@@520 $generated@@88)) (= $generated@@520 $generated@@519))) (= ($generated@@93 ($generated@@94 $generated@@517 $generated@@520) $generated@@521) ($generated@@93 ($generated@@94 $generated@@518 $generated@@520) $generated@@521))))
 :no-pattern (type $generated@@520)
 :no-pattern (type $generated@@521)
 :no-pattern ($generated $generated@@520)
 :no-pattern ($generated@@0 $generated@@520)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
)) (= ($generated@@82 $generated@@517 $generated@@519) ($generated@@82 $generated@@518 $generated@@519)))))
 :pattern ( ($generated@@516 $generated@@517) ($generated@@150 $generated@@517 $generated@@518) ($generated@@82 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@173) (= (type $generated@@526) $generated@@173)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@188 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@188 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@173) (= (type $generated@@528) $generated@@173)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@188 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@188 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@173) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@189 $generated@@529 ($generated@@373 $generated@@530 $generated@@531))) (and (= ($generated@@240 ($generated@@306 ($generated@@263 $generated@@173 $generated@@173) $generated@@529)) $generated@@529) ($generated@@89 ($generated@@306 ($generated@@263 $generated@@173 $generated@@173) $generated@@529) ($generated@@373 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@189 $generated@@529 ($generated@@373 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@173) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@189 $generated@@532 ($generated@@381 $generated@@533 $generated@@534))) (and (= ($generated@@240 ($generated@@306 ($generated@@281 $generated@@173 $generated@@173) $generated@@532)) $generated@@532) ($generated@@89 ($generated@@306 ($generated@@281 $generated@@173 $generated@@173) $generated@@532) ($generated@@381 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@189 $generated@@532 ($generated@@381 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@67) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@173)) ($generated@@189 $generated@@537 ($generated@@163 $generated@@535 $generated@@536))) (and (= ($generated@@240 ($generated@@306 $generated@@164 $generated@@537)) $generated@@537) ($generated@@89 ($generated@@306 $generated@@164 $generated@@537) ($generated@@163 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@189 $generated@@537 ($generated@@163 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@539 T@T) ) (! (= (type ($generated@@538 $generated@@539)) ($generated@@83 $generated@@539 $generated@@4))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@94 ($generated@@538 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@94 ($generated@@538 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@94 ($generated@@404 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@94 ($generated@@404 $generated@@543) $generated@@542)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@550 T@T) ($generated@@551 T@T) ) (= ($generated@@1 ($generated@@546 $generated@@550 $generated@@551)) 22)) (forall (($generated@@552 T@T) ($generated@@553 T@T) ) (! (= ($generated@@547 ($generated@@546 $generated@@552 $generated@@553)) $generated@@552)
 :pattern ( ($generated@@546 $generated@@552 $generated@@553))
))) (forall (($generated@@554 T@T) ($generated@@555 T@T) ) (! (= ($generated@@548 ($generated@@546 $generated@@554 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@546 $generated@@554 $generated@@555))
))) (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@548 (type $generated@@556))))
(= (type ($generated@@544 $generated@@556 $generated@@557 $generated@@558)) $generated@@559))
 :pattern ( ($generated@@544 $generated@@556 $generated@@557 $generated@@558))
))) (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
(let (($generated@@565 (type $generated@@561)))
(= (type ($generated@@549 $generated@@560 $generated@@561 $generated@@562 $generated@@563)) ($generated@@546 $generated@@565 $generated@@564))))
 :pattern ( ($generated@@549 $generated@@560 $generated@@561 $generated@@562 $generated@@563))
))) (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@548 (type $generated@@566))))
 (=> (= (type $generated@@569) $generated@@570) (= ($generated@@544 ($generated@@549 $generated@@566 $generated@@567 $generated@@568 $generated@@569) $generated@@567 $generated@@568) $generated@@569)))
 :weight 0
))) (and (and (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (or (= $generated@@573 $generated@@575) (= ($generated@@544 ($generated@@549 $generated@@572 $generated@@573 $generated@@574 $generated@@571) $generated@@575 $generated@@576) ($generated@@544 $generated@@572 $generated@@575 $generated@@576)))
 :weight 0
)) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (or (= $generated@@580 $generated@@582) (= ($generated@@544 ($generated@@549 $generated@@578 $generated@@579 $generated@@580 $generated@@577) $generated@@581 $generated@@582) ($generated@@544 $generated@@578 $generated@@581 $generated@@582)))
 :weight 0
))) (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (or true (= ($generated@@544 ($generated@@549 $generated@@584 $generated@@585 $generated@@586 $generated@@583) $generated@@587 $generated@@588) ($generated@@544 $generated@@584 $generated@@587 $generated@@588)))
 :weight 0
)))) (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (= (type ($generated@@545 $generated@@589 $generated@@590 $generated@@591 $generated@@592)) ($generated@@546 $generated@@84 $generated@@4))
 :pattern ( ($generated@@545 $generated@@589 $generated@@590 $generated@@591 $generated@@592))
))))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@70 (type $generated@@598))))
 (=> (and (and (and (and (and (= (type $generated@@593) $generated@@84) (= (type $generated@@594) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@595) ($generated@@69 $generated@@4))) (= (type $generated@@596) $generated@@84)) (= (type $generated@@597) $generated@@84)) (= (type $generated@@598) ($generated@@69 $generated@@599))) (= ($generated@@0 ($generated@@544 ($generated@@545 $generated@@593 $generated@@594 $generated@@595 $generated@@596) $generated@@597 $generated@@598))  (=> (and (not (= $generated@@597 $generated@@593)) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@594 $generated@@597) $generated@@595))) (= $generated@@597 $generated@@596)))))
 :pattern ( ($generated@@544 ($generated@@545 $generated@@593 $generated@@594 $generated@@595 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@67) (= (type $generated@@601) $generated@@67)) (and (= ($generated@@77 ($generated@@163 $generated@@600 $generated@@601)) $generated@@63) (= ($generated@@178 ($generated@@163 $generated@@600 $generated@@601)) $generated@@64)))
 :pattern ( ($generated@@163 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@164) (= ($generated@@523 ($generated@@240 $generated@@602)) ($generated@@524 $generated@@602)))
 :pattern ( ($generated@@523 ($generated@@240 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@173) ($generated@@189 $generated@@603 ($generated@@146 0))) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@603)) $generated@@603) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@603) ($generated@@146 0))))
 :pattern ( ($generated@@189 $generated@@603 ($generated@@146 0)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@173) (= (type $generated@@605) $generated@@67)) ($generated@@189 $generated@@604 ($generated@@205 $generated@@605))) (and (= ($generated@@240 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@604)) $generated@@604) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@604) ($generated@@205 $generated@@605))))
 :pattern ( ($generated@@189 $generated@@604 ($generated@@205 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@173) (= (type $generated@@607) $generated@@67)) ($generated@@189 $generated@@606 ($generated@@210 $generated@@607))) (and (= ($generated@@240 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@606)) $generated@@606) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@606) ($generated@@210 $generated@@607))))
 :pattern ( ($generated@@189 $generated@@606 ($generated@@210 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@173) (= (type $generated@@609) $generated@@67)) ($generated@@189 $generated@@608 ($generated@@180 $generated@@609))) (and (= ($generated@@240 ($generated@@306 ($generated@@83 $generated@@173 $generated@@2) $generated@@608)) $generated@@608) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@2) $generated@@608) ($generated@@180 $generated@@609))))
 :pattern ( ($generated@@189 $generated@@608 ($generated@@180 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@173) (= (type $generated@@611) $generated@@67)) ($generated@@189 $generated@@610 ($generated@@475 $generated@@611))) (and (= ($generated@@240 ($generated@@306 ($generated@@234 $generated@@173) $generated@@610)) $generated@@610) ($generated@@89 ($generated@@306 ($generated@@234 $generated@@173) $generated@@610) ($generated@@475 $generated@@611))))
 :pattern ( ($generated@@189 $generated@@610 ($generated@@475 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (! (let (($generated@@615 ($generated@@96 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@83 $generated@@615 $generated@@4)) (= (type $generated@@614) ($generated@@83 $generated@@615 $generated@@4))) (= ($generated@@612 $generated@@613 $generated@@614) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@615) ($generated@@0 ($generated@@94 $generated@@613 $generated@@616))) ($generated@@0 ($generated@@94 $generated@@614 $generated@@616)))
 :pattern ( ($generated@@94 $generated@@613 $generated@@616))
 :pattern ( ($generated@@94 $generated@@614 $generated@@616))
)))))
 :pattern ( ($generated@@612 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@83 $generated@@173 $generated@@2)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@617 ($generated@@180 $generated@@618) $generated@@619) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@173) (< 0 ($generated ($generated@@94 $generated@@617 $generated@@620)))) ($generated@@220 $generated@@620 $generated@@618 $generated@@619))
 :pattern ( ($generated@@94 $generated@@617 $generated@@620))
))))
 :pattern ( ($generated@@91 $generated@@617 ($generated@@180 $generated@@618) $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@164) (= (type $generated@@622) $generated@@67)) (= (type $generated@@623) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@87 $generated@@623) (and ($generated@@162 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@67) ($generated@@91 $generated@@621 ($generated@@163 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@91 $generated@@621 ($generated@@163 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@220 ($generated@@171 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@220 ($generated@@171 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@164) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@87 $generated@@627) (and ($generated@@162 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@67) ($generated@@91 $generated@@625 ($generated@@163 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@91 $generated@@625 ($generated@@163 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@220 ($generated@@172 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@220 ($generated@@172 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@173) (= (type $generated@@630) $generated@@173)) (= ($generated@@188 ($generated@@216 $generated@@629) ($generated@@216 $generated@@630)) ($generated@@216 ($generated@@188 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@188 ($generated@@216 $generated@@629) ($generated@@216 $generated@@630)))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@92 $generated@@631))) ($generated@@216 ($generated@@240 ($generated@@8 $generated@@631))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@92 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ) (! (= ($generated@@240 ($generated@@216 $generated@@632)) ($generated@@216 ($generated@@240 $generated@@632)))
 :pattern ( ($generated@@240 ($generated@@216 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@235 (type $generated@@633))))
 (=> (and (= (type $generated@@633) ($generated@@234 $generated@@634)) (= ($generated@@233 $generated@@633) 0)) (= $generated@@633 ($generated@@232 $generated@@634))))
 :pattern ( ($generated@@233 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 (type $generated@@636)))
 (=> (and (and (= (type $generated@@635) ($generated@@83 $generated@@638 $generated@@2)) (= (type $generated@@637) $generated@@2)) (<= 0 ($generated $generated@@637))) (= ($generated@@255 ($generated@@98 $generated@@635 $generated@@636 $generated@@637)) (+ (- ($generated@@255 $generated@@635) ($generated ($generated@@94 $generated@@635 $generated@@636))) ($generated $generated@@637)))))
 :pattern ( ($generated@@255 ($generated@@98 $generated@@635 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@640) $generated@@2)) ($generated@@91 $generated@@640 $generated@@46 $generated@@639))
 :pattern ( ($generated@@91 $generated@@640 $generated@@46 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@642) $generated@@3)) ($generated@@91 $generated@@642 $generated@@47 $generated@@641))
 :pattern ( ($generated@@91 $generated@@642 $generated@@47 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@644) $generated@@4)) ($generated@@91 $generated@@644 $generated@@44 $generated@@643))
 :pattern ( ($generated@@91 $generated@@644 $generated@@44 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@646) $generated@@433)) ($generated@@91 $generated@@646 $generated@@45 $generated@@645))
 :pattern ( ($generated@@91 $generated@@646 $generated@@45 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@648) $generated@@173)) ($generated@@91 $generated@@648 $generated@@48 $generated@@647))
 :pattern ( ($generated@@91 $generated@@648 $generated@@48 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@234 $generated@@173)) (= (type $generated@@650) $generated@@67)) (= ($generated@@89 $generated@@649 ($generated@@475 $generated@@650)) (forall (($generated@@651 Int) ) (!  (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@233 $generated@@649))) ($generated@@189 ($generated@@476 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@476 $generated@@649 $generated@@651))
))))
 :pattern ( ($generated@@89 $generated@@649 ($generated@@475 $generated@@650)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 Int) ) (!  (=> (= (type $generated@@653) ($generated@@234 $generated@@173)) (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@233 $generated@@653))) (< ($generated@@524 ($generated@@306 $generated@@164 ($generated@@476 $generated@@653 $generated@@654))) ($generated@@652 $generated@@653))))
 :pattern ( ($generated@@524 ($generated@@306 $generated@@164 ($generated@@476 $generated@@653 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@656) $generated@@67)) (= (type $generated@@657) $generated@@67)) ($generated@@89 $generated@@655 ($generated@@373 $generated@@656 $generated@@657))) (and (and ($generated@@89 ($generated@@261 $generated@@655) ($generated@@205 $generated@@656)) ($generated@@89 ($generated@@316 $generated@@655) ($generated@@205 $generated@@657))) ($generated@@89 ($generated@@347 $generated@@655) ($generated@@205 ($generated@@163 $generated@@656 $generated@@657)))))
 :pattern ( ($generated@@89 $generated@@655 ($generated@@373 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@659) $generated@@67)) (= (type $generated@@660) $generated@@67)) ($generated@@89 $generated@@658 ($generated@@381 $generated@@659 $generated@@660))) (and (and ($generated@@89 ($generated@@279 $generated@@658) ($generated@@210 $generated@@659)) ($generated@@89 ($generated@@327 $generated@@658) ($generated@@210 $generated@@660))) ($generated@@89 ($generated@@355 $generated@@658) ($generated@@210 ($generated@@163 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@89 $generated@@658 ($generated@@381 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@2) ($generated@@89 $generated@@661 $generated@@46))
 :pattern ( ($generated@@89 $generated@@661 $generated@@46))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@3) ($generated@@89 $generated@@662 $generated@@47))
 :pattern ( ($generated@@89 $generated@@662 $generated@@47))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@4) ($generated@@89 $generated@@663 $generated@@44))
 :pattern ( ($generated@@89 $generated@@663 $generated@@44))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@433) ($generated@@89 $generated@@664 $generated@@45))
 :pattern ( ($generated@@89 $generated@@664 $generated@@45))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@173) ($generated@@89 $generated@@665 $generated@@48))
 :pattern ( ($generated@@89 $generated@@665 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(assert  (and (and (= (type $generated@@666) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@667) $generated@@84)) (= (type $generated@@668) ($generated@@546 $generated@@84 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@669 true))
(let (($generated@@670  (=> (and (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@666 $generated@@667)) (= (ControlFlow 0 5) 2)) $generated@@669)))
(let (($generated@@671  (=> (and (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8)) ($generated@@91 $generated@@667 $generated@@154 $generated@@666)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (= $generated@@667 $generated@@667) (and ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))) (not ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))))))) (=> (or (= $generated@@667 $generated@@667) (and ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))) (not ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)))))) (=> (or (= $generated@@667 $generated@@667) ($generated@@86 $generated@@666 $generated@@667)) (=> (and ($generated@@82 $generated@@666 $generated@@667) (= (ControlFlow 0 3) 2)) $generated@@669)))))))
(let (($generated@@672  (=> (=> ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)))) (and (=> (= (ControlFlow 0 8) 3) $generated@@671) (=> (= (ControlFlow 0 8) 5) $generated@@670)))))
(let (($generated@@673  (=> ($generated@@91 $generated@@667 $generated@@154 $generated@@666) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (= $generated@@667 $generated@@667) (and ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))) (not ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))))))) (=> (or (= $generated@@667 $generated@@667) (and ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))) (not ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)))))) (=> (or (= $generated@@667 $generated@@667) ($generated@@86 $generated@@666 $generated@@667)) (=> (and ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)))) (and (=> (= (ControlFlow 0 6) 3) $generated@@671) (=> (= (ControlFlow 0 6) 5) $generated@@670)))))))))
(let (($generated@@674 true))
(let (($generated@@675  (=> (= $generated@@668 ($generated@@545 $generated@@88 $generated@@666 $generated@@60 $generated@@667)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@674) (=> (= (ControlFlow 0 9) 6) $generated@@673)) (=> (= (ControlFlow 0 9) 8) $generated@@672)))))
(let (($generated@@676  (=> (and ($generated@@87 $generated@@666) ($generated@@516 $generated@@666)) (=> (and (and (not (= $generated@@667 $generated@@88)) (and ($generated@@89 $generated@@667 $generated@@90) ($generated@@91 $generated@@667 $generated@@90 $generated@@666))) (and (= 0 $generated@@81) (= (ControlFlow 0 10) 9))) $generated@@675))))
$generated@@676)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 () Int)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (Int) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@T T@U T@U) T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@T)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@232 (T@T) T@U)
(declare-fun $generated@@233 (T@U) Int)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@T T@T) T@U)
(declare-fun $generated@@263 (T@T T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U T@U) Bool)
(declare-fun $generated@@306 (T@T T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@373 (T@U T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@T) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@421 () T@T)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@464 (T@U Int) T@U)
(declare-fun $generated@@473 (T@U) Int)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@501 (T@U) Bool)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U T@U T@U) T@U)
(declare-fun $generated@@526 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@527 (T@T T@T) T@T)
(declare-fun $generated@@528 (T@T) T@T)
(declare-fun $generated@@529 (T@T) T@T)
(declare-fun $generated@@530 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@628 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@100 $generated@@101)) 12)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@96 ($generated@@83 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@83 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@97 ($generated@@83 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@83 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@97 (type $generated@@106))))
(= (type ($generated@@94 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@98 $generated@@109 $generated@@110 $generated@@111)) ($generated@@83 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@98 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@97 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@94 ($generated@@98 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@94 ($generated@@98 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@94 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@94 ($generated@@98 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@94 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@70 (type $generated@@127))))
(= (type ($generated@@93 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@93 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@85)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@70 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@93 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@93 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@93 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@93 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@93 $generated@@141 $generated@@143)))
 :weight 0
)))) (= (type $generated@@88) $generated@@84)) (= (type $generated@@90) $generated@@67)) (= (type $generated@@95) ($generated@@69 $generated@@2))))
(assert  (=> (<= 0 $generated@@81) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@145) $generated@@84)) (or ($generated@@86 $generated@@144 $generated@@145) (and (not (= 0 $generated@@81)) (and ($generated@@87 $generated@@144) (and (not (= $generated@@145 $generated@@88)) (and ($generated@@89 $generated@@145 $generated@@90) ($generated@@91 $generated@@145 $generated@@90 $generated@@144))))))) (and (=> ($generated@@82 $generated@@144 $generated@@145) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@144 $generated@@145) $generated@@95)))) (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@144 $generated@@145) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@144 $generated@@145))))
 :pattern ( ($generated@@82 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@147 Int) ) (! (= (type ($generated@@146 $generated@@147)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@91 $generated@@148 ($generated@@146 0) $generated@@149))
 :pattern ( ($generated@@91 $generated@@148 ($generated@@146 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@152) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@84) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (= (type $generated@@154) $generated@@67))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@84) (= (type $generated@@156) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@155 $generated@@154 $generated@@156)  (or (= $generated@@155 $generated@@88) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@160) $generated@@84)) (and ($generated@@87 $generated@@159) (and (not (= $generated@@160 $generated@@88)) (= ($generated@@157 $generated@@160) $generated@@154)))) ($generated@@89 ($generated@@93 ($generated@@94 $generated@@159 $generated@@160) $generated@@95) $generated@@46))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@159 $generated@@160) $generated@@95))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@89 $generated@@161 ($generated@@146 0)))
 :pattern ( ($generated@@89 $generated@@161 ($generated@@146 0)))
)))
(assert  (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@89 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@89 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 16) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@73)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (= ($generated@@178 $generated@@154) $generated@@65))
(assert (= ($generated@@178 $generated@@90) $generated@@65))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@67)
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@83 $generated@@173 $generated@@2)) (= (type $generated@@184) $generated@@67)) ($generated@@89 $generated@@183 ($generated@@180 $generated@@184))) ($generated@@181 $generated@@183))
 :pattern ( ($generated@@89 $generated@@183 ($generated@@180 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@84) (= ($generated@@89 $generated@@185 $generated@@154)  (or (= $generated@@185 $generated@@88) (= ($generated@@157 $generated@@185) $generated@@154))))
 :pattern ( ($generated@@89 $generated@@185 $generated@@154))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@84) (= (type $generated@@187) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@186 $generated@@90 $generated@@187) ($generated@@91 $generated@@186 $generated@@154 $generated@@187)))
 :pattern ( ($generated@@91 $generated@@186 $generated@@90 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@188 $generated@@190 $generated@@191)) $generated@@164)
 :pattern ( ($generated@@188 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@67) (= (type $generated@@193) $generated@@67)) (= (type $generated@@194) $generated@@173)) (= (type $generated@@195) $generated@@173)) (= ($generated@@89 ($generated@@188 $generated@@194 $generated@@195) ($generated@@163 $generated@@192 $generated@@193))  (and ($generated@@189 $generated@@194 $generated@@192) ($generated@@189 $generated@@195 $generated@@193))))
 :pattern ( ($generated@@89 ($generated@@188 $generated@@194 $generated@@195) ($generated@@163 $generated@@192 $generated@@193)))
)))
(assert (= ($generated@@76 $generated@@95) 0))
(assert  (and (and (forall (($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= (type ($generated@@196 $generated@@199 $generated@@200 $generated@@201)) ($generated@@69 $generated@@199))
 :pattern ( ($generated@@196 $generated@@199 $generated@@200 $generated@@201))
)) (= ($generated@@1 $generated@@198) 17)) (= (type $generated@@197) $generated@@198)))
(assert (= ($generated@@196 $generated@@2 $generated@@197 $generated@@66) $generated@@95))
(assert  (not ($generated@@202 $generated@@95)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@164) (= (type $generated@@204) $generated@@164)) (= ($generated@@170 $generated@@203 $generated@@204) (= $generated@@203 $generated@@204)))
 :pattern ( ($generated@@170 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (= (type ($generated@@205 $generated@@206)) $generated@@67)
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@208) $generated@@67)) (= ($generated@@89 $generated@@207 ($generated@@205 $generated@@208)) (forall (($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@209) $generated@@173) ($generated@@0 ($generated@@94 $generated@@207 $generated@@209))) ($generated@@189 $generated@@209 $generated@@208))
 :pattern ( ($generated@@94 $generated@@207 $generated@@209))
))))
 :pattern ( ($generated@@89 $generated@@207 ($generated@@205 $generated@@208)))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@67)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@213) $generated@@67)) (= ($generated@@89 $generated@@212 ($generated@@210 $generated@@213)) (forall (($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@173) ($generated@@0 ($generated@@94 $generated@@212 $generated@@214))) ($generated@@189 $generated@@214 $generated@@213))
 :pattern ( ($generated@@94 $generated@@212 $generated@@214))
))))
 :pattern ( ($generated@@89 $generated@@212 ($generated@@210 $generated@@213)))
)))
(assert (forall (($generated@@215 Int) ) (! (= ($generated@@92 $generated@@215) $generated@@215)
 :pattern ( ($generated@@92 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (let (($generated@@218 (type $generated@@217)))
(= (type ($generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ) (! (= ($generated@@216 $generated@@219) $generated@@219)
 :pattern ( ($generated@@216 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@221) $generated@@67) (= (type $generated@@222) $generated@@67)) (= (type $generated@@223) $generated@@173)) (= (type $generated@@224) $generated@@173)) (= (type $generated@@225) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@87 $generated@@225)) (= ($generated@@91 ($generated@@188 $generated@@223 $generated@@224) ($generated@@163 $generated@@221 $generated@@222) $generated@@225)  (and ($generated@@220 $generated@@223 $generated@@221 $generated@@225) ($generated@@220 $generated@@224 $generated@@222 $generated@@225))))
 :pattern ( ($generated@@91 ($generated@@188 $generated@@223 $generated@@224) ($generated@@163 $generated@@221 $generated@@222) $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@72)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@164) (= ($generated@@162 $generated@@228) (= ($generated@@226 $generated@@228) $generated@@62)))
 :pattern ( ($generated@@162 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@164) ($generated@@162 $generated@@229)) (exists (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (and (and (= (type $generated@@230) $generated@@173) (= (type $generated@@231) $generated@@173)) (= $generated@@229 ($generated@@188 $generated@@230 $generated@@231)))
 :no-pattern (type $generated@@230)
 :no-pattern (type $generated@@231)
 :no-pattern ($generated $generated@@230)
 :no-pattern ($generated@@0 $generated@@230)
 :no-pattern ($generated $generated@@231)
 :no-pattern ($generated@@0 $generated@@231)
)))
 :pattern ( ($generated@@162 $generated@@229))
)))
(assert  (and (and (forall (($generated@@236 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@236)) 18)) (forall (($generated@@237 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@234 $generated@@237))
))) (forall (($generated@@238 T@T) ) (! (= (type ($generated@@232 $generated@@238)) ($generated@@234 $generated@@238))
 :pattern ( ($generated@@232 $generated@@238))
))))
(assert (forall (($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@232 $generated@@239)) 0)
 :pattern ( ($generated@@232 $generated@@239))
)))
(assert ($generated@@202 $generated@@60))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@173)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244) ($generated@@91 $generated@@242 $generated@@243 $generated@@244)))
 :pattern ( ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@245) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@246) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@247) $generated@@173)) (= (type $generated@@248) $generated@@67)) ($generated@@150 $generated@@245 $generated@@246)) ($generated@@220 $generated@@247 $generated@@248 $generated@@245)) ($generated@@220 $generated@@247 $generated@@248 $generated@@246))
 :pattern ( ($generated@@150 $generated@@245 $generated@@246) ($generated@@220 $generated@@247 $generated@@248 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@249) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@250) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@252) $generated@@67)) ($generated@@150 $generated@@249 $generated@@250)) ($generated@@91 $generated@@251 $generated@@252 $generated@@249)) ($generated@@91 $generated@@251 $generated@@252 $generated@@250))
 :pattern ( ($generated@@150 $generated@@249 $generated@@250) ($generated@@91 $generated@@251 $generated@@252 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@254) $generated@@84)) (=> (and (and ($generated@@87 $generated@@253) (and (not (= $generated@@254 $generated@@88)) (= ($generated@@157 $generated@@254) $generated@@154))) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@253 $generated@@254) $generated@@60))) ($generated@@91 ($generated@@93 ($generated@@94 $generated@@253 $generated@@254) $generated@@95) $generated@@46 $generated@@253)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@253 $generated@@254) $generated@@95))
)))
(assert (forall (($generated@@257 T@T) ) (! (= (type ($generated@@256 $generated@@257)) ($generated@@83 $generated@@257 $generated@@2))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@96 (type $generated@@258))))
 (=> (= (type $generated@@258) ($generated@@83 $generated@@259 $generated@@2)) (and (= (= ($generated@@255 $generated@@258) 0) (= $generated@@258 ($generated@@256 $generated@@259))) (=> (not (= ($generated@@255 $generated@@258) 0)) (exists (($generated@@260 T@U) ) (!  (and (= (type $generated@@260) $generated@@259) (< 0 ($generated ($generated@@94 $generated@@258 $generated@@260))))
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
))))))
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert  (and (and (and (and (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@266 $generated@@267)) 19)) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@268 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@263 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@263 $generated@@270 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@263 $generated@@270 $generated@@271))
))) (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@264 (type $generated@@272))))
(= (type ($generated@@261 $generated@@272)) ($generated@@83 $generated@@273 $generated@@4)))
 :pattern ( ($generated@@261 $generated@@272))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= (type ($generated@@262 $generated@@274 $generated@@275)) ($generated@@263 $generated@@274 $generated@@275))
 :pattern ( ($generated@@262 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@T) ) (! (let (($generated@@278 (type $generated@@276)))
 (not ($generated@@0 ($generated@@94 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276))))
 :pattern ( (let (($generated@@278 (type $generated@@276)))
($generated@@94 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276)))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 20)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@83 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@94 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@94 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@299) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@297 $generated@@298 $generated@@299)) (and ($generated@@150 $generated@@298 $generated@@299) (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@70 (type $generated@@301))))
 (=> (and (and (= (type $generated@@300) $generated@@84) (= (type $generated@@301) ($generated@@69 $generated@@302))) (not ($generated@@202 $generated@@301))) (= ($generated@@93 ($generated@@94 $generated@@298 $generated@@300) $generated@@301) ($generated@@93 ($generated@@94 $generated@@299 $generated@@300) $generated@@301))))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@299 $generated@@300) $generated@@301))
))))
 :pattern ( ($generated@@297 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@96 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@83 $generated@@304 $generated@@2)) (= ($generated@@181 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@94 $generated@@303 $generated@@305))) (<= ($generated ($generated@@94 $generated@@303 $generated@@305)) ($generated@@255 $generated@@303))))
 :pattern ( ($generated@@94 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@181 $generated@@303))
)))
(assert (forall (($generated@@307 T@T) ($generated@@308 T@U) ) (! (= (type ($generated@@306 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@173) ($generated@@189 $generated@@309 $generated@@154)) (and (= ($generated@@240 ($generated@@306 $generated@@84 $generated@@309)) $generated@@309) ($generated@@89 ($generated@@306 $generated@@84 $generated@@309) $generated@@154)))
 :pattern ( ($generated@@189 $generated@@309 $generated@@154))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@173) ($generated@@189 $generated@@310 $generated@@90)) (and (= ($generated@@240 ($generated@@306 $generated@@84 $generated@@310)) $generated@@310) ($generated@@89 ($generated@@306 $generated@@84 $generated@@310) $generated@@90)))
 :pattern ( ($generated@@189 $generated@@310 $generated@@90))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@84) (= ($generated@@89 $generated@@311 $generated@@90)  (and ($generated@@89 $generated@@311 $generated@@154) (not (= $generated@@311 $generated@@88)))))
 :pattern ( ($generated@@89 $generated@@311 $generated@@90))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@265 (type $generated@@312))))
(let (($generated@@314 ($generated@@264 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@263 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@262 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) ($generated@@0 ($generated@@94 ($generated@@261 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@261 $generated@@312))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@265 (type $generated@@317))))
(= (type ($generated@@316 $generated@@317)) ($generated@@83 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@265 (type $generated@@319))))
(let (($generated@@321 ($generated@@264 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@263 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@262 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@320) ($generated@@0 ($generated@@94 ($generated@@316 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@283 (type $generated@@323))))
(let (($generated@@325 ($generated@@282 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@281 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@280 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@94 ($generated@@279 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@279 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@283 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@83 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@283 (type $generated@@330))))
(let (($generated@@332 ($generated@@282 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@281 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@280 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@94 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) ($generated@@83 $generated@@173 $generated@@2)) (= (type $generated@@335) $generated@@67)) (= ($generated@@89 $generated@@334 ($generated@@180 $generated@@335)) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@173) (< 0 ($generated ($generated@@94 $generated@@334 $generated@@336)))) ($generated@@189 $generated@@336 $generated@@335))
 :pattern ( ($generated@@94 $generated@@334 $generated@@336))
))))
 :pattern ( ($generated@@89 $generated@@334 ($generated@@180 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@338) $generated@@67)) (= (type $generated@@339) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@337 ($generated@@205 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@173) ($generated@@0 ($generated@@94 $generated@@337 $generated@@340))) ($generated@@220 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@94 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@91 $generated@@337 ($generated@@205 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@342) $generated@@67)) (= (type $generated@@343) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@341 ($generated@@210 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@173) ($generated@@0 ($generated@@94 $generated@@341 $generated@@344))) ($generated@@220 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@94 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@91 $generated@@341 ($generated@@210 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 (type $generated@@345)))
(= ($generated ($generated@@94 ($generated@@256 $generated@@346) $generated@@345)) 0))
 :pattern ( (let (($generated@@346 (type $generated@@345)))
($generated@@94 ($generated@@256 $generated@@346) $generated@@345)))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) ($generated@@83 $generated@@173 $generated@@4))
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@265 (type $generated@@350))))
(let (($generated@@352 ($generated@@264 (type $generated@@350))))
(= (type ($generated@@348 $generated@@350)) ($generated@@83 $generated@@352 $generated@@351))))
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@354) $generated@@173)) (= ($generated@@0 ($generated@@94 ($generated@@347 $generated@@353) $generated@@354))  (and ($generated@@0 ($generated@@94 ($generated@@261 $generated@@353) ($generated@@171 ($generated@@306 $generated@@164 $generated@@354)))) (= ($generated@@94 ($generated@@348 $generated@@353) ($generated@@171 ($generated@@306 $generated@@164 $generated@@354))) ($generated@@172 ($generated@@306 $generated@@164 $generated@@354))))))
 :pattern ( ($generated@@94 ($generated@@347 $generated@@353) $generated@@354))
)))
(assert  (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@357)) ($generated@@83 $generated@@173 $generated@@4))
 :pattern ( ($generated@@355 $generated@@357))
)) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@283 (type $generated@@358))))
(let (($generated@@360 ($generated@@282 (type $generated@@358))))
(= (type ($generated@@356 $generated@@358)) ($generated@@83 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@356 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@362) $generated@@173)) (= ($generated@@0 ($generated@@94 ($generated@@355 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@94 ($generated@@279 $generated@@361) ($generated@@171 ($generated@@306 $generated@@164 $generated@@362)))) (= ($generated@@94 ($generated@@356 $generated@@361) ($generated@@171 ($generated@@306 $generated@@164 $generated@@362))) ($generated@@172 ($generated@@306 $generated@@164 $generated@@362))))))
 :pattern ( ($generated@@94 ($generated@@355 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@264 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@263 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@94 ($generated@@316 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@94 ($generated@@261 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@94 ($generated@@348 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@94 ($generated@@261 $generated@@363) $generated@@367))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@94 ($generated@@316 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@282 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@281 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@94 ($generated@@327 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@94 ($generated@@279 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@94 ($generated@@356 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@94 ($generated@@279 $generated@@368) $generated@@372))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@94 ($generated@@327 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@67)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (and (= (type $generated@@376) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@261 $generated@@376) $generated@@380))) (and ($generated@@220 ($generated@@94 ($generated@@348 $generated@@376) $generated@@380) $generated@@378 $generated@@379) ($generated@@220 $generated@@380 $generated@@377 $generated@@379)))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@376) $generated@@380))
 :pattern ( ($generated@@94 ($generated@@261 $generated@@376) $generated@@380))
))))
 :pattern ( ($generated@@91 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@67)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@385) $generated@@67)) (= (type $generated@@386) $generated@@67)) (= (type $generated@@387) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@279 $generated@@384) $generated@@388))) (and ($generated@@220 ($generated@@94 ($generated@@356 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@220 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@384) $generated@@388))
 :pattern ( ($generated@@94 ($generated@@279 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@91 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@389) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@390) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@391) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@389 $generated@@391))) (and ($generated@@150 $generated@@389 $generated@@390) ($generated@@150 $generated@@390 $generated@@391))) ($generated@@150 $generated@@389 $generated@@391))
 :pattern ( ($generated@@150 $generated@@389 $generated@@390) ($generated@@150 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@T) ) (! (= (type ($generated@@392 $generated@@393)) ($generated@@83 $generated@@393 $generated@@4))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@283 (type $generated@@394))))
(let (($generated@@396 ($generated@@282 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@281 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@280 $generated@@396 $generated@@395)) (= ($generated@@279 $generated@@394) ($generated@@392 $generated@@396))))))
 :pattern ( ($generated@@279 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@283 (type $generated@@397))))
(let (($generated@@399 ($generated@@282 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@281 $generated@@399 $generated@@398)) (= (= $generated@@397 ($generated@@280 $generated@@399 $generated@@398)) (= ($generated@@327 $generated@@397) ($generated@@392 $generated@@398))))))
 :pattern ( ($generated@@327 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@283 (type $generated@@400))))
(let (($generated@@402 ($generated@@282 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@281 $generated@@402 $generated@@401)) (= (= $generated@@400 ($generated@@280 $generated@@402 $generated@@401)) (= ($generated@@355 $generated@@400) ($generated@@392 $generated@@173))))))
 :pattern ( ($generated@@355 $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@265 (type $generated@@403))))
(let (($generated@@405 ($generated@@264 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@263 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@262 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (and (and (= (type $generated@@406) $generated@@173) (= (type $generated@@407) $generated@@173)) ($generated@@0 ($generated@@94 ($generated@@347 $generated@@403) ($generated@@240 ($generated@@188 $generated@@406 $generated@@407)))))
 :no-pattern (type $generated@@406)
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@347 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@283 (type $generated@@408))))
(let (($generated@@410 ($generated@@282 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@281 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@280 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (and (and (= (type $generated@@411) $generated@@173) (= (type $generated@@412) $generated@@173)) ($generated@@0 ($generated@@94 ($generated@@355 $generated@@408) ($generated@@240 ($generated@@188 $generated@@411 $generated@@412)))))
 :no-pattern (type $generated@@411)
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@355 $generated@@408))
)))
(assert (forall (($generated@@414 T@U) ) (! (= (type ($generated@@413 $generated@@414)) $generated@@198)
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@T) ) (!  (=> (and (= (type $generated@@415) $generated@@198) (= (type $generated@@416) $generated@@71)) (and (= ($generated@@413 ($generated@@196 $generated@@417 $generated@@415 $generated@@416)) $generated@@415) (= ($generated@@79 ($generated@@196 $generated@@417 $generated@@415 $generated@@416)) $generated@@416)))
 :pattern ( ($generated@@196 $generated@@417 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@173) ($generated@@189 $generated@@418 $generated@@46)) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@418)) $generated@@418) ($generated@@89 ($generated@@306 $generated@@2 $generated@@418) $generated@@46)))
 :pattern ( ($generated@@189 $generated@@418 $generated@@46))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@173) ($generated@@189 $generated@@419 $generated@@47)) (and (= ($generated@@240 ($generated@@306 $generated@@3 $generated@@419)) $generated@@419) ($generated@@89 ($generated@@306 $generated@@3 $generated@@419) $generated@@47)))
 :pattern ( ($generated@@189 $generated@@419 $generated@@47))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@173) ($generated@@189 $generated@@420 $generated@@44)) (and (= ($generated@@240 ($generated@@306 $generated@@4 $generated@@420)) $generated@@420) ($generated@@89 ($generated@@306 $generated@@4 $generated@@420) $generated@@44)))
 :pattern ( ($generated@@189 $generated@@420 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@421) 21))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@173) ($generated@@189 $generated@@422 $generated@@45)) (and (= ($generated@@240 ($generated@@306 $generated@@421 $generated@@422)) $generated@@422) ($generated@@89 ($generated@@306 $generated@@421 $generated@@422) $generated@@45)))
 :pattern ( ($generated@@189 $generated@@422 $generated@@45))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@67) (= ($generated@@189 ($generated@@240 $generated@@423) $generated@@424) ($generated@@89 $generated@@423 $generated@@424)))
 :pattern ( ($generated@@189 ($generated@@240 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@96 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@83 $generated@@426 $generated@@2)) (<= 0 ($generated@@255 $generated@@425))))
 :pattern ( ($generated@@255 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@235 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@234 $generated@@428)) (<= 0 ($generated@@233 $generated@@427))))
 :pattern ( ($generated@@233 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (= (type ($generated@@429 $generated@@430)) $generated@@67)
 :pattern ( ($generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@67) (= (type $generated@@432) $generated@@67)) (= ($generated@@429 ($generated@@373 $generated@@431 $generated@@432)) $generated@@431))
 :pattern ( ($generated@@373 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@67)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@433 ($generated@@373 $generated@@435 $generated@@436)) $generated@@436))
 :pattern ( ($generated@@373 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@67) (= (type $generated@@438) $generated@@67)) (= ($generated@@77 ($generated@@373 $generated@@437 $generated@@438)) $generated@@58))
 :pattern ( ($generated@@373 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@381 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@381 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@381 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@381 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@77 ($generated@@381 $generated@@447 $generated@@448)) $generated@@59))
 :pattern ( ($generated@@381 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@173) (= (type $generated@@450) $generated@@173)) (= ($generated@@226 ($generated@@188 $generated@@449 $generated@@450)) $generated@@62))
 :pattern ( ($generated@@188 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@163 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@163 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@163 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@163 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@173) (= (type $generated@@460) $generated@@173)) (= ($generated@@171 ($generated@@188 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@188 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@173) (= (type $generated@@462) $generated@@173)) (= ($generated@@172 ($generated@@188 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@188 $generated@@461 $generated@@462))
)))
(assert  (and (forall (($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@465))
)) (forall (($generated@@466 T@U) ($generated@@467 Int) ) (! (let (($generated@@468 ($generated@@235 (type $generated@@466))))
(= (type ($generated@@464 $generated@@466 $generated@@467)) $generated@@468))
 :pattern ( ($generated@@464 $generated@@466 $generated@@467))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@469) ($generated@@234 $generated@@173)) (= (type $generated@@470) $generated@@67)) (= (type $generated@@471) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@469 ($generated@@463 $generated@@470) $generated@@471) (forall (($generated@@472 Int) ) (!  (=> (and (<= 0 $generated@@472) (< $generated@@472 ($generated@@233 $generated@@469))) ($generated@@220 ($generated@@464 $generated@@469 $generated@@472) $generated@@470 $generated@@471))
 :pattern ( ($generated@@464 $generated@@469 $generated@@472))
))))
 :pattern ( ($generated@@91 $generated@@469 ($generated@@463 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@474 Int) ) (! (= ($generated@@473 ($generated@@146 $generated@@474)) $generated@@474)
 :pattern ( ($generated@@146 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@475 ($generated@@205 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@205 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@67) (= ($generated@@77 ($generated@@205 $generated@@478)) $generated@@54))
 :pattern ( ($generated@@205 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@67) (= ($generated@@479 ($generated@@210 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@210 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@67) (= ($generated@@77 ($generated@@210 $generated@@482)) $generated@@55))
 :pattern ( ($generated@@210 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@483 ($generated@@180 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@180 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@67) (= ($generated@@77 ($generated@@180 $generated@@486)) $generated@@56))
 :pattern ( ($generated@@180 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@487 ($generated@@463 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@463 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@77 ($generated@@463 $generated@@490)) $generated@@57))
 :pattern ( ($generated@@463 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 (type $generated@@491)))
(= ($generated@@306 $generated@@492 ($generated@@240 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@240 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@494) $generated@@67)) (= (type $generated@@495) $generated@@67)) (= ($generated@@89 $generated@@493 ($generated@@373 $generated@@494 $generated@@495)) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@261 $generated@@493) $generated@@496))) (and ($generated@@189 ($generated@@94 ($generated@@348 $generated@@493) $generated@@496) $generated@@495) ($generated@@189 $generated@@496 $generated@@494)))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@493) $generated@@496))
 :pattern ( ($generated@@94 ($generated@@261 $generated@@493) $generated@@496))
))))
 :pattern ( ($generated@@89 $generated@@493 ($generated@@373 $generated@@494 $generated@@495)))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@498) $generated@@67)) (= (type $generated@@499) $generated@@67)) (= ($generated@@89 $generated@@497 ($generated@@381 $generated@@498 $generated@@499)) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@279 $generated@@497) $generated@@500))) (and ($generated@@189 ($generated@@94 ($generated@@356 $generated@@497) $generated@@500) $generated@@499) ($generated@@189 $generated@@500 $generated@@498)))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@497) $generated@@500))
 :pattern ( ($generated@@94 ($generated@@279 $generated@@497) $generated@@500))
))))
 :pattern ( ($generated@@89 $generated@@497 ($generated@@381 $generated@@498 $generated@@499)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@503) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@504) $generated@@84)) (=> (and (and (and ($generated@@87 $generated@@502) ($generated@@87 $generated@@503)) (and (not (= $generated@@504 $generated@@88)) ($generated@@89 $generated@@504 $generated@@90))) (and ($generated@@501 $generated@@502) ($generated@@150 $generated@@502 $generated@@503))) (=> (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@70 (type $generated@@506))))
 (=> (and (and (= (type $generated@@505) $generated@@84) (= (type $generated@@506) ($generated@@69 $generated@@507))) (and (not (= $generated@@505 $generated@@88)) (= $generated@@505 $generated@@504))) (= ($generated@@93 ($generated@@94 $generated@@502 $generated@@505) $generated@@506) ($generated@@93 ($generated@@94 $generated@@503 $generated@@505) $generated@@506))))
 :no-pattern (type $generated@@505)
 :no-pattern (type $generated@@506)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
)) (= ($generated@@82 $generated@@502 $generated@@504) ($generated@@82 $generated@@503 $generated@@504)))))
 :pattern ( ($generated@@501 $generated@@502) ($generated@@150 $generated@@502 $generated@@503) ($generated@@82 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@173) (= (type $generated@@511) $generated@@173)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@188 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@188 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@173) (= (type $generated@@513) $generated@@173)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@188 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@188 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@173) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) ($generated@@189 $generated@@514 ($generated@@373 $generated@@515 $generated@@516))) (and (= ($generated@@240 ($generated@@306 ($generated@@263 $generated@@173 $generated@@173) $generated@@514)) $generated@@514) ($generated@@89 ($generated@@306 ($generated@@263 $generated@@173 $generated@@173) $generated@@514) ($generated@@373 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@189 $generated@@514 ($generated@@373 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@173) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) ($generated@@189 $generated@@517 ($generated@@381 $generated@@518 $generated@@519))) (and (= ($generated@@240 ($generated@@306 ($generated@@281 $generated@@173 $generated@@173) $generated@@517)) $generated@@517) ($generated@@89 ($generated@@306 ($generated@@281 $generated@@173 $generated@@173) $generated@@517) ($generated@@381 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@189 $generated@@517 ($generated@@381 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@173)) ($generated@@189 $generated@@522 ($generated@@163 $generated@@520 $generated@@521))) (and (= ($generated@@240 ($generated@@306 $generated@@164 $generated@@522)) $generated@@522) ($generated@@89 ($generated@@306 $generated@@164 $generated@@522) ($generated@@163 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@189 $generated@@522 ($generated@@163 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@94 ($generated@@392 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@94 ($generated@@392 $generated@@524) $generated@@523)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@531 T@T) ($generated@@532 T@T) ) (= ($generated@@1 ($generated@@527 $generated@@531 $generated@@532)) 22)) (forall (($generated@@533 T@T) ($generated@@534 T@T) ) (! (= ($generated@@528 ($generated@@527 $generated@@533 $generated@@534)) $generated@@533)
 :pattern ( ($generated@@527 $generated@@533 $generated@@534))
))) (forall (($generated@@535 T@T) ($generated@@536 T@T) ) (! (= ($generated@@529 ($generated@@527 $generated@@535 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@527 $generated@@535 $generated@@536))
))) (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@529 (type $generated@@537))))
(= (type ($generated@@525 $generated@@537 $generated@@538 $generated@@539)) $generated@@540))
 :pattern ( ($generated@@525 $generated@@537 $generated@@538 $generated@@539))
))) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(let (($generated@@546 (type $generated@@542)))
(= (type ($generated@@530 $generated@@541 $generated@@542 $generated@@543 $generated@@544)) ($generated@@527 $generated@@546 $generated@@545))))
 :pattern ( ($generated@@530 $generated@@541 $generated@@542 $generated@@543 $generated@@544))
))) (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@529 (type $generated@@547))))
 (=> (= (type $generated@@550) $generated@@551) (= ($generated@@525 ($generated@@530 $generated@@547 $generated@@548 $generated@@549 $generated@@550) $generated@@548 $generated@@549) $generated@@550)))
 :weight 0
))) (and (and (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (or (= $generated@@554 $generated@@556) (= ($generated@@525 ($generated@@530 $generated@@553 $generated@@554 $generated@@555 $generated@@552) $generated@@556 $generated@@557) ($generated@@525 $generated@@553 $generated@@556 $generated@@557)))
 :weight 0
)) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (or (= $generated@@561 $generated@@563) (= ($generated@@525 ($generated@@530 $generated@@559 $generated@@560 $generated@@561 $generated@@558) $generated@@562 $generated@@563) ($generated@@525 $generated@@559 $generated@@562 $generated@@563)))
 :weight 0
))) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (or true (= ($generated@@525 ($generated@@530 $generated@@565 $generated@@566 $generated@@567 $generated@@564) $generated@@568 $generated@@569) ($generated@@525 $generated@@565 $generated@@568 $generated@@569)))
 :weight 0
)))) (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (= (type ($generated@@526 $generated@@570 $generated@@571 $generated@@572 $generated@@573)) ($generated@@527 $generated@@84 $generated@@4))
 :pattern ( ($generated@@526 $generated@@570 $generated@@571 $generated@@572 $generated@@573))
))))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@70 (type $generated@@579))))
 (=> (and (and (and (and (and (= (type $generated@@574) $generated@@84) (= (type $generated@@575) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@576) ($generated@@69 $generated@@4))) (= (type $generated@@577) $generated@@84)) (= (type $generated@@578) $generated@@84)) (= (type $generated@@579) ($generated@@69 $generated@@580))) (= ($generated@@0 ($generated@@525 ($generated@@526 $generated@@574 $generated@@575 $generated@@576 $generated@@577) $generated@@578 $generated@@579))  (=> (and (not (= $generated@@578 $generated@@574)) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@575 $generated@@578) $generated@@576))) (= $generated@@578 $generated@@577)))))
 :pattern ( ($generated@@525 ($generated@@526 $generated@@574 $generated@@575 $generated@@576 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@67) (= (type $generated@@582) $generated@@67)) (and (= ($generated@@77 ($generated@@163 $generated@@581 $generated@@582)) $generated@@63) (= ($generated@@178 ($generated@@163 $generated@@581 $generated@@582)) $generated@@64)))
 :pattern ( ($generated@@163 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@164) (= ($generated@@508 ($generated@@240 $generated@@583)) ($generated@@509 $generated@@583)))
 :pattern ( ($generated@@508 ($generated@@240 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@173) ($generated@@189 $generated@@584 ($generated@@146 0))) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@584)) $generated@@584) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@584) ($generated@@146 0))))
 :pattern ( ($generated@@189 $generated@@584 ($generated@@146 0)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) ($generated@@189 $generated@@585 ($generated@@205 $generated@@586))) (and (= ($generated@@240 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@585)) $generated@@585) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@585) ($generated@@205 $generated@@586))))
 :pattern ( ($generated@@189 $generated@@585 ($generated@@205 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@173) (= (type $generated@@588) $generated@@67)) ($generated@@189 $generated@@587 ($generated@@210 $generated@@588))) (and (= ($generated@@240 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@587)) $generated@@587) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@587) ($generated@@210 $generated@@588))))
 :pattern ( ($generated@@189 $generated@@587 ($generated@@210 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@173) (= (type $generated@@590) $generated@@67)) ($generated@@189 $generated@@589 ($generated@@180 $generated@@590))) (and (= ($generated@@240 ($generated@@306 ($generated@@83 $generated@@173 $generated@@2) $generated@@589)) $generated@@589) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@2) $generated@@589) ($generated@@180 $generated@@590))))
 :pattern ( ($generated@@189 $generated@@589 ($generated@@180 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@173) (= (type $generated@@592) $generated@@67)) ($generated@@189 $generated@@591 ($generated@@463 $generated@@592))) (and (= ($generated@@240 ($generated@@306 ($generated@@234 $generated@@173) $generated@@591)) $generated@@591) ($generated@@89 ($generated@@306 ($generated@@234 $generated@@173) $generated@@591) ($generated@@463 $generated@@592))))
 :pattern ( ($generated@@189 $generated@@591 ($generated@@463 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@593) ($generated@@83 $generated@@173 $generated@@2)) (= (type $generated@@594) $generated@@67)) (= (type $generated@@595) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@593 ($generated@@180 $generated@@594) $generated@@595) (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@173) (< 0 ($generated ($generated@@94 $generated@@593 $generated@@596)))) ($generated@@220 $generated@@596 $generated@@594 $generated@@595))
 :pattern ( ($generated@@94 $generated@@593 $generated@@596))
))))
 :pattern ( ($generated@@91 $generated@@593 ($generated@@180 $generated@@594) $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@164) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@87 $generated@@599) (and ($generated@@162 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@67) ($generated@@91 $generated@@597 ($generated@@163 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@91 $generated@@597 ($generated@@163 $generated@@598 $generated@@600) $generated@@599))
))))) ($generated@@220 ($generated@@171 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@220 ($generated@@171 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@164) (= (type $generated@@602) $generated@@67)) (= (type $generated@@603) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@87 $generated@@603) (and ($generated@@162 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@67) ($generated@@91 $generated@@601 ($generated@@163 $generated@@604 $generated@@602) $generated@@603))
 :pattern ( ($generated@@91 $generated@@601 ($generated@@163 $generated@@604 $generated@@602) $generated@@603))
))))) ($generated@@220 ($generated@@172 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@220 ($generated@@172 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@173) (= (type $generated@@606) $generated@@173)) (= ($generated@@188 ($generated@@216 $generated@@605) ($generated@@216 $generated@@606)) ($generated@@216 ($generated@@188 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@188 ($generated@@216 $generated@@605) ($generated@@216 $generated@@606)))
)))
(assert (forall (($generated@@607 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@92 $generated@@607))) ($generated@@216 ($generated@@240 ($generated@@8 $generated@@607))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@92 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ) (! (= ($generated@@240 ($generated@@216 $generated@@608)) ($generated@@216 ($generated@@240 $generated@@608)))
 :pattern ( ($generated@@240 ($generated@@216 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@235 (type $generated@@609))))
 (=> (and (= (type $generated@@609) ($generated@@234 $generated@@610)) (= ($generated@@233 $generated@@609) 0)) (= $generated@@609 ($generated@@232 $generated@@610))))
 :pattern ( ($generated@@233 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@83 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@255 ($generated@@98 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@255 $generated@@611) ($generated ($generated@@94 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@255 ($generated@@98 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@616) $generated@@2)) ($generated@@91 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@91 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@618) $generated@@3)) ($generated@@91 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@91 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@620) $generated@@4)) ($generated@@91 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@91 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@622) $generated@@421)) ($generated@@91 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@91 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@624) $generated@@173)) ($generated@@91 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@91 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@234 $generated@@173)) (= (type $generated@@626) $generated@@67)) (= ($generated@@89 $generated@@625 ($generated@@463 $generated@@626)) (forall (($generated@@627 Int) ) (!  (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@233 $generated@@625))) ($generated@@189 ($generated@@464 $generated@@625 $generated@@627) $generated@@626))
 :pattern ( ($generated@@464 $generated@@625 $generated@@627))
))))
 :pattern ( ($generated@@89 $generated@@625 ($generated@@463 $generated@@626)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) ($generated@@234 $generated@@173)) (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@233 $generated@@629))) (< ($generated@@509 ($generated@@306 $generated@@164 ($generated@@464 $generated@@629 $generated@@630))) ($generated@@628 $generated@@629))))
 :pattern ( ($generated@@509 ($generated@@306 $generated@@164 ($generated@@464 $generated@@629 $generated@@630))))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@632) $generated@@67)) (= (type $generated@@633) $generated@@67)) ($generated@@89 $generated@@631 ($generated@@373 $generated@@632 $generated@@633))) (and (and ($generated@@89 ($generated@@261 $generated@@631) ($generated@@205 $generated@@632)) ($generated@@89 ($generated@@316 $generated@@631) ($generated@@205 $generated@@633))) ($generated@@89 ($generated@@347 $generated@@631) ($generated@@205 ($generated@@163 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@89 $generated@@631 ($generated@@373 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@67)) ($generated@@89 $generated@@634 ($generated@@381 $generated@@635 $generated@@636))) (and (and ($generated@@89 ($generated@@279 $generated@@634) ($generated@@210 $generated@@635)) ($generated@@89 ($generated@@327 $generated@@634) ($generated@@210 $generated@@636))) ($generated@@89 ($generated@@355 $generated@@634) ($generated@@210 ($generated@@163 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@89 $generated@@634 ($generated@@381 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@2) ($generated@@89 $generated@@637 $generated@@46))
 :pattern ( ($generated@@89 $generated@@637 $generated@@46))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@3) ($generated@@89 $generated@@638 $generated@@47))
 :pattern ( ($generated@@89 $generated@@638 $generated@@47))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@4) ($generated@@89 $generated@@639 $generated@@44))
 :pattern ( ($generated@@89 $generated@@639 $generated@@44))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@421) ($generated@@89 $generated@@640 $generated@@45))
 :pattern ( ($generated@@89 $generated@@640 $generated@@45))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@173) ($generated@@89 $generated@@641 $generated@@48))
 :pattern ( ($generated@@89 $generated@@641 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 () Int)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (Int) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@T T@U T@U) T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@T)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@232 (T@T) T@U)
(declare-fun $generated@@233 (T@U) Int)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@T T@T) T@U)
(declare-fun $generated@@263 (T@T T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U T@U) Bool)
(declare-fun $generated@@306 (T@T T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@373 (T@U T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Bool)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@538 (T@T) T@U)
(declare-fun $generated@@544 (T@U T@U T@U) T@U)
(declare-fun $generated@@545 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@546 (T@T T@T) T@T)
(declare-fun $generated@@547 (T@T) T@T)
(declare-fun $generated@@548 (T@T) T@T)
(declare-fun $generated@@549 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@612 (T@U T@U) Bool)
(declare-fun $generated@@652 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@100 $generated@@101)) 12)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@96 ($generated@@83 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@83 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@97 ($generated@@83 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@83 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@97 (type $generated@@106))))
(= (type ($generated@@94 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@98 $generated@@109 $generated@@110 $generated@@111)) ($generated@@83 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@98 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@97 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@94 ($generated@@98 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@94 ($generated@@98 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@94 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@94 ($generated@@98 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@94 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@70 (type $generated@@127))))
(= (type ($generated@@93 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@93 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@85)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@70 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@93 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@93 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@93 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@93 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@93 $generated@@141 $generated@@143)))
 :weight 0
)))) (= (type $generated@@88) $generated@@84)) (= (type $generated@@90) $generated@@67)) (= (type $generated@@95) ($generated@@69 $generated@@2))))
(assert  (=> (<= 0 $generated@@81) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@145) $generated@@84)) (or ($generated@@86 $generated@@144 $generated@@145) (and (not (= 0 $generated@@81)) (and ($generated@@87 $generated@@144) (and (not (= $generated@@145 $generated@@88)) (and ($generated@@89 $generated@@145 $generated@@90) ($generated@@91 $generated@@145 $generated@@90 $generated@@144))))))) (and (=> ($generated@@82 $generated@@144 $generated@@145) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@144 $generated@@145) $generated@@95)))) (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@144 $generated@@145) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@144 $generated@@145))))
 :pattern ( ($generated@@82 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@147 Int) ) (! (= (type ($generated@@146 $generated@@147)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@91 $generated@@148 ($generated@@146 0) $generated@@149))
 :pattern ( ($generated@@91 $generated@@148 ($generated@@146 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@152) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@84) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (= (type $generated@@154) $generated@@67))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@84) (= (type $generated@@156) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@155 $generated@@154 $generated@@156)  (or (= $generated@@155 $generated@@88) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@160) $generated@@84)) (and ($generated@@87 $generated@@159) (and (not (= $generated@@160 $generated@@88)) (= ($generated@@157 $generated@@160) $generated@@154)))) ($generated@@89 ($generated@@93 ($generated@@94 $generated@@159 $generated@@160) $generated@@95) $generated@@46))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@159 $generated@@160) $generated@@95))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@89 $generated@@161 ($generated@@146 0)))
 :pattern ( ($generated@@89 $generated@@161 ($generated@@146 0)))
)))
(assert  (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@89 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@89 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 16) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@73)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (= ($generated@@178 $generated@@154) $generated@@65))
(assert (= ($generated@@178 $generated@@90) $generated@@65))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@67)
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@83 $generated@@173 $generated@@2)) (= (type $generated@@184) $generated@@67)) ($generated@@89 $generated@@183 ($generated@@180 $generated@@184))) ($generated@@181 $generated@@183))
 :pattern ( ($generated@@89 $generated@@183 ($generated@@180 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@84) (= ($generated@@89 $generated@@185 $generated@@154)  (or (= $generated@@185 $generated@@88) (= ($generated@@157 $generated@@185) $generated@@154))))
 :pattern ( ($generated@@89 $generated@@185 $generated@@154))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@84) (= (type $generated@@187) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@186 $generated@@90 $generated@@187) ($generated@@91 $generated@@186 $generated@@154 $generated@@187)))
 :pattern ( ($generated@@91 $generated@@186 $generated@@90 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@188 $generated@@190 $generated@@191)) $generated@@164)
 :pattern ( ($generated@@188 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@67) (= (type $generated@@193) $generated@@67)) (= (type $generated@@194) $generated@@173)) (= (type $generated@@195) $generated@@173)) (= ($generated@@89 ($generated@@188 $generated@@194 $generated@@195) ($generated@@163 $generated@@192 $generated@@193))  (and ($generated@@189 $generated@@194 $generated@@192) ($generated@@189 $generated@@195 $generated@@193))))
 :pattern ( ($generated@@89 ($generated@@188 $generated@@194 $generated@@195) ($generated@@163 $generated@@192 $generated@@193)))
)))
(assert (= ($generated@@76 $generated@@95) 0))
(assert  (and (and (forall (($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= (type ($generated@@196 $generated@@199 $generated@@200 $generated@@201)) ($generated@@69 $generated@@199))
 :pattern ( ($generated@@196 $generated@@199 $generated@@200 $generated@@201))
)) (= ($generated@@1 $generated@@198) 17)) (= (type $generated@@197) $generated@@198)))
(assert (= ($generated@@196 $generated@@2 $generated@@197 $generated@@66) $generated@@95))
(assert  (not ($generated@@202 $generated@@95)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@164) (= (type $generated@@204) $generated@@164)) (= ($generated@@170 $generated@@203 $generated@@204) (= $generated@@203 $generated@@204)))
 :pattern ( ($generated@@170 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (= (type ($generated@@205 $generated@@206)) $generated@@67)
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@208) $generated@@67)) (= ($generated@@89 $generated@@207 ($generated@@205 $generated@@208)) (forall (($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@209) $generated@@173) ($generated@@0 ($generated@@94 $generated@@207 $generated@@209))) ($generated@@189 $generated@@209 $generated@@208))
 :pattern ( ($generated@@94 $generated@@207 $generated@@209))
))))
 :pattern ( ($generated@@89 $generated@@207 ($generated@@205 $generated@@208)))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@67)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@213) $generated@@67)) (= ($generated@@89 $generated@@212 ($generated@@210 $generated@@213)) (forall (($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@173) ($generated@@0 ($generated@@94 $generated@@212 $generated@@214))) ($generated@@189 $generated@@214 $generated@@213))
 :pattern ( ($generated@@94 $generated@@212 $generated@@214))
))))
 :pattern ( ($generated@@89 $generated@@212 ($generated@@210 $generated@@213)))
)))
(assert (forall (($generated@@215 Int) ) (! (= ($generated@@92 $generated@@215) $generated@@215)
 :pattern ( ($generated@@92 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (let (($generated@@218 (type $generated@@217)))
(= (type ($generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ) (! (= ($generated@@216 $generated@@219) $generated@@219)
 :pattern ( ($generated@@216 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@221) $generated@@67) (= (type $generated@@222) $generated@@67)) (= (type $generated@@223) $generated@@173)) (= (type $generated@@224) $generated@@173)) (= (type $generated@@225) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@87 $generated@@225)) (= ($generated@@91 ($generated@@188 $generated@@223 $generated@@224) ($generated@@163 $generated@@221 $generated@@222) $generated@@225)  (and ($generated@@220 $generated@@223 $generated@@221 $generated@@225) ($generated@@220 $generated@@224 $generated@@222 $generated@@225))))
 :pattern ( ($generated@@91 ($generated@@188 $generated@@223 $generated@@224) ($generated@@163 $generated@@221 $generated@@222) $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@72)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@164) (= ($generated@@162 $generated@@228) (= ($generated@@226 $generated@@228) $generated@@62)))
 :pattern ( ($generated@@162 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@164) ($generated@@162 $generated@@229)) (exists (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (and (and (= (type $generated@@230) $generated@@173) (= (type $generated@@231) $generated@@173)) (= $generated@@229 ($generated@@188 $generated@@230 $generated@@231)))
 :no-pattern (type $generated@@230)
 :no-pattern (type $generated@@231)
 :no-pattern ($generated $generated@@230)
 :no-pattern ($generated@@0 $generated@@230)
 :no-pattern ($generated $generated@@231)
 :no-pattern ($generated@@0 $generated@@231)
)))
 :pattern ( ($generated@@162 $generated@@229))
)))
(assert  (and (and (forall (($generated@@236 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@236)) 18)) (forall (($generated@@237 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@234 $generated@@237))
))) (forall (($generated@@238 T@T) ) (! (= (type ($generated@@232 $generated@@238)) ($generated@@234 $generated@@238))
 :pattern ( ($generated@@232 $generated@@238))
))))
(assert (forall (($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@232 $generated@@239)) 0)
 :pattern ( ($generated@@232 $generated@@239))
)))
(assert ($generated@@202 $generated@@60))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@173)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244) ($generated@@91 $generated@@242 $generated@@243 $generated@@244)))
 :pattern ( ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@245) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@246) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@247) $generated@@173)) (= (type $generated@@248) $generated@@67)) ($generated@@150 $generated@@245 $generated@@246)) ($generated@@220 $generated@@247 $generated@@248 $generated@@245)) ($generated@@220 $generated@@247 $generated@@248 $generated@@246))
 :pattern ( ($generated@@150 $generated@@245 $generated@@246) ($generated@@220 $generated@@247 $generated@@248 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@249) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@250) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@252) $generated@@67)) ($generated@@150 $generated@@249 $generated@@250)) ($generated@@91 $generated@@251 $generated@@252 $generated@@249)) ($generated@@91 $generated@@251 $generated@@252 $generated@@250))
 :pattern ( ($generated@@150 $generated@@249 $generated@@250) ($generated@@91 $generated@@251 $generated@@252 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@254) $generated@@84)) (=> (and (and ($generated@@87 $generated@@253) (and (not (= $generated@@254 $generated@@88)) (= ($generated@@157 $generated@@254) $generated@@154))) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@253 $generated@@254) $generated@@60))) ($generated@@91 ($generated@@93 ($generated@@94 $generated@@253 $generated@@254) $generated@@95) $generated@@46 $generated@@253)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@253 $generated@@254) $generated@@95))
)))
(assert (forall (($generated@@257 T@T) ) (! (= (type ($generated@@256 $generated@@257)) ($generated@@83 $generated@@257 $generated@@2))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@96 (type $generated@@258))))
 (=> (= (type $generated@@258) ($generated@@83 $generated@@259 $generated@@2)) (and (= (= ($generated@@255 $generated@@258) 0) (= $generated@@258 ($generated@@256 $generated@@259))) (=> (not (= ($generated@@255 $generated@@258) 0)) (exists (($generated@@260 T@U) ) (!  (and (= (type $generated@@260) $generated@@259) (< 0 ($generated ($generated@@94 $generated@@258 $generated@@260))))
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
))))))
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert  (and (and (and (and (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@266 $generated@@267)) 19)) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@268 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@263 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@263 $generated@@270 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@263 $generated@@270 $generated@@271))
))) (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@264 (type $generated@@272))))
(= (type ($generated@@261 $generated@@272)) ($generated@@83 $generated@@273 $generated@@4)))
 :pattern ( ($generated@@261 $generated@@272))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= (type ($generated@@262 $generated@@274 $generated@@275)) ($generated@@263 $generated@@274 $generated@@275))
 :pattern ( ($generated@@262 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@T) ) (! (let (($generated@@278 (type $generated@@276)))
 (not ($generated@@0 ($generated@@94 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276))))
 :pattern ( (let (($generated@@278 (type $generated@@276)))
($generated@@94 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276)))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 20)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@83 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@94 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@94 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@299) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@297 $generated@@298 $generated@@299)) (and ($generated@@150 $generated@@298 $generated@@299) (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@70 (type $generated@@301))))
 (=> (and (and (= (type $generated@@300) $generated@@84) (= (type $generated@@301) ($generated@@69 $generated@@302))) (not ($generated@@202 $generated@@301))) (= ($generated@@93 ($generated@@94 $generated@@298 $generated@@300) $generated@@301) ($generated@@93 ($generated@@94 $generated@@299 $generated@@300) $generated@@301))))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@299 $generated@@300) $generated@@301))
))))
 :pattern ( ($generated@@297 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@96 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@83 $generated@@304 $generated@@2)) (= ($generated@@181 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@94 $generated@@303 $generated@@305))) (<= ($generated ($generated@@94 $generated@@303 $generated@@305)) ($generated@@255 $generated@@303))))
 :pattern ( ($generated@@94 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@181 $generated@@303))
)))
(assert (forall (($generated@@307 T@T) ($generated@@308 T@U) ) (! (= (type ($generated@@306 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@173) ($generated@@189 $generated@@309 $generated@@154)) (and (= ($generated@@240 ($generated@@306 $generated@@84 $generated@@309)) $generated@@309) ($generated@@89 ($generated@@306 $generated@@84 $generated@@309) $generated@@154)))
 :pattern ( ($generated@@189 $generated@@309 $generated@@154))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@173) ($generated@@189 $generated@@310 $generated@@90)) (and (= ($generated@@240 ($generated@@306 $generated@@84 $generated@@310)) $generated@@310) ($generated@@89 ($generated@@306 $generated@@84 $generated@@310) $generated@@90)))
 :pattern ( ($generated@@189 $generated@@310 $generated@@90))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@84) (= ($generated@@89 $generated@@311 $generated@@90)  (and ($generated@@89 $generated@@311 $generated@@154) (not (= $generated@@311 $generated@@88)))))
 :pattern ( ($generated@@89 $generated@@311 $generated@@90))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@265 (type $generated@@312))))
(let (($generated@@314 ($generated@@264 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@263 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@262 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) ($generated@@0 ($generated@@94 ($generated@@261 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@261 $generated@@312))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@265 (type $generated@@317))))
(= (type ($generated@@316 $generated@@317)) ($generated@@83 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@265 (type $generated@@319))))
(let (($generated@@321 ($generated@@264 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@263 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@262 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@320) ($generated@@0 ($generated@@94 ($generated@@316 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@283 (type $generated@@323))))
(let (($generated@@325 ($generated@@282 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@281 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@280 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@94 ($generated@@279 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@279 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@283 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@83 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@283 (type $generated@@330))))
(let (($generated@@332 ($generated@@282 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@281 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@280 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@94 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) ($generated@@83 $generated@@173 $generated@@2)) (= (type $generated@@335) $generated@@67)) (= ($generated@@89 $generated@@334 ($generated@@180 $generated@@335)) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@173) (< 0 ($generated ($generated@@94 $generated@@334 $generated@@336)))) ($generated@@189 $generated@@336 $generated@@335))
 :pattern ( ($generated@@94 $generated@@334 $generated@@336))
))))
 :pattern ( ($generated@@89 $generated@@334 ($generated@@180 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@338) $generated@@67)) (= (type $generated@@339) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@337 ($generated@@205 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@173) ($generated@@0 ($generated@@94 $generated@@337 $generated@@340))) ($generated@@220 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@94 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@91 $generated@@337 ($generated@@205 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@342) $generated@@67)) (= (type $generated@@343) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@341 ($generated@@210 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@173) ($generated@@0 ($generated@@94 $generated@@341 $generated@@344))) ($generated@@220 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@94 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@91 $generated@@341 ($generated@@210 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 (type $generated@@345)))
(= ($generated ($generated@@94 ($generated@@256 $generated@@346) $generated@@345)) 0))
 :pattern ( (let (($generated@@346 (type $generated@@345)))
($generated@@94 ($generated@@256 $generated@@346) $generated@@345)))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) ($generated@@83 $generated@@173 $generated@@4))
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@265 (type $generated@@350))))
(let (($generated@@352 ($generated@@264 (type $generated@@350))))
(= (type ($generated@@348 $generated@@350)) ($generated@@83 $generated@@352 $generated@@351))))
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@354) $generated@@173)) (= ($generated@@0 ($generated@@94 ($generated@@347 $generated@@353) $generated@@354))  (and ($generated@@0 ($generated@@94 ($generated@@261 $generated@@353) ($generated@@171 ($generated@@306 $generated@@164 $generated@@354)))) (= ($generated@@94 ($generated@@348 $generated@@353) ($generated@@171 ($generated@@306 $generated@@164 $generated@@354))) ($generated@@172 ($generated@@306 $generated@@164 $generated@@354))))))
 :pattern ( ($generated@@94 ($generated@@347 $generated@@353) $generated@@354))
)))
(assert  (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@357)) ($generated@@83 $generated@@173 $generated@@4))
 :pattern ( ($generated@@355 $generated@@357))
)) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@283 (type $generated@@358))))
(let (($generated@@360 ($generated@@282 (type $generated@@358))))
(= (type ($generated@@356 $generated@@358)) ($generated@@83 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@356 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@362) $generated@@173)) (= ($generated@@0 ($generated@@94 ($generated@@355 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@94 ($generated@@279 $generated@@361) ($generated@@171 ($generated@@306 $generated@@164 $generated@@362)))) (= ($generated@@94 ($generated@@356 $generated@@361) ($generated@@171 ($generated@@306 $generated@@164 $generated@@362))) ($generated@@172 ($generated@@306 $generated@@164 $generated@@362))))))
 :pattern ( ($generated@@94 ($generated@@355 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@264 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@263 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@94 ($generated@@316 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@94 ($generated@@261 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@94 ($generated@@348 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@94 ($generated@@261 $generated@@363) $generated@@367))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@94 ($generated@@316 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@282 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@281 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@94 ($generated@@327 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@94 ($generated@@279 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@94 ($generated@@356 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@94 ($generated@@279 $generated@@368) $generated@@372))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@94 ($generated@@327 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@67)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (and (= (type $generated@@376) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@261 $generated@@376) $generated@@380))) (and ($generated@@220 ($generated@@94 ($generated@@348 $generated@@376) $generated@@380) $generated@@378 $generated@@379) ($generated@@220 $generated@@380 $generated@@377 $generated@@379)))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@376) $generated@@380))
 :pattern ( ($generated@@94 ($generated@@261 $generated@@376) $generated@@380))
))))
 :pattern ( ($generated@@91 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@67)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@385) $generated@@67)) (= (type $generated@@386) $generated@@67)) (= (type $generated@@387) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@279 $generated@@384) $generated@@388))) (and ($generated@@220 ($generated@@94 ($generated@@356 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@220 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@384) $generated@@388))
 :pattern ( ($generated@@94 ($generated@@279 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@91 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= (type ($generated@@389 $generated@@390 $generated@@391)) ($generated@@83 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@394)))
 (=> (and (and (= (type $generated@@393) ($generated@@83 $generated@@396 $generated@@4)) (= (type $generated@@395) $generated@@396)) ($generated@@0 ($generated@@94 $generated@@393 $generated@@395))) ($generated@@0 ($generated@@94 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))))
 :pattern ( ($generated@@389 $generated@@393 $generated@@394) ($generated@@94 $generated@@393 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@398)))
 (=> (and (= (type $generated@@397) ($generated@@83 $generated@@400 $generated@@4)) (= (type $generated@@399) $generated@@400)) (= ($generated@@0 ($generated@@94 ($generated@@389 $generated@@397 $generated@@398) $generated@@399))  (or (= $generated@@399 $generated@@398) ($generated@@0 ($generated@@94 $generated@@397 $generated@@399))))))
 :pattern ( ($generated@@94 ($generated@@389 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@401) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@402) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@403) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@401 $generated@@403))) (and ($generated@@150 $generated@@401 $generated@@402) ($generated@@150 $generated@@402 $generated@@403))) ($generated@@150 $generated@@401 $generated@@403))
 :pattern ( ($generated@@150 $generated@@401 $generated@@402) ($generated@@150 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@83 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@283 (type $generated@@406))))
(let (($generated@@408 ($generated@@282 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@281 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@280 $generated@@408 $generated@@407)) (= ($generated@@279 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@279 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@283 (type $generated@@409))))
(let (($generated@@411 ($generated@@282 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@281 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@280 $generated@@411 $generated@@410)) (= ($generated@@327 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@327 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@283 (type $generated@@412))))
(let (($generated@@414 ($generated@@282 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@281 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@280 $generated@@414 $generated@@413)) (= ($generated@@355 $generated@@412) ($generated@@404 $generated@@173))))))
 :pattern ( ($generated@@355 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@265 (type $generated@@415))))
(let (($generated@@417 ($generated@@264 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@263 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@262 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@173) (= (type $generated@@419) $generated@@173)) ($generated@@0 ($generated@@94 ($generated@@347 $generated@@415) ($generated@@240 ($generated@@188 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@347 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@283 (type $generated@@420))))
(let (($generated@@422 ($generated@@282 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@281 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@280 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@173) (= (type $generated@@424) $generated@@173)) ($generated@@0 ($generated@@94 ($generated@@355 $generated@@420) ($generated@@240 ($generated@@188 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@355 $generated@@420))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@198)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@T) ) (!  (=> (and (= (type $generated@@427) $generated@@198) (= (type $generated@@428) $generated@@71)) (and (= ($generated@@425 ($generated@@196 $generated@@429 $generated@@427 $generated@@428)) $generated@@427) (= ($generated@@79 ($generated@@196 $generated@@429 $generated@@427 $generated@@428)) $generated@@428)))
 :pattern ( ($generated@@196 $generated@@429 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@173) ($generated@@189 $generated@@430 $generated@@46)) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@430)) $generated@@430) ($generated@@89 ($generated@@306 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@189 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@173) ($generated@@189 $generated@@431 $generated@@47)) (and (= ($generated@@240 ($generated@@306 $generated@@3 $generated@@431)) $generated@@431) ($generated@@89 ($generated@@306 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@189 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@173) ($generated@@189 $generated@@432 $generated@@44)) (and (= ($generated@@240 ($generated@@306 $generated@@4 $generated@@432)) $generated@@432) ($generated@@89 ($generated@@306 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@189 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 21))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@173) ($generated@@189 $generated@@434 $generated@@45)) (and (= ($generated@@240 ($generated@@306 $generated@@433 $generated@@434)) $generated@@434) ($generated@@89 ($generated@@306 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@189 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@67) (= ($generated@@189 ($generated@@240 $generated@@435) $generated@@436) ($generated@@89 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@189 ($generated@@240 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@96 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@83 $generated@@438 $generated@@2)) (<= 0 ($generated@@255 $generated@@437))))
 :pattern ( ($generated@@255 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@235 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@234 $generated@@440)) (<= 0 ($generated@@233 $generated@@439))))
 :pattern ( ($generated@@233 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@373 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@373 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@373 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@373 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@77 ($generated@@373 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@373 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@381 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@381 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@381 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@381 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@77 ($generated@@381 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@381 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@173) (= (type $generated@@462) $generated@@173)) (= ($generated@@226 ($generated@@188 $generated@@461 $generated@@462)) $generated@@62))
 :pattern ( ($generated@@188 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@163 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@163 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@467 ($generated@@163 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@163 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@173) (= (type $generated@@472) $generated@@173)) (= ($generated@@171 ($generated@@188 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@188 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@173) (= (type $generated@@474) $generated@@173)) (= ($generated@@172 ($generated@@188 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@188 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@235 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@234 $generated@@173)) (= (type $generated@@482) $generated@@67)) (= (type $generated@@483) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@233 $generated@@481))) ($generated@@220 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@91 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
 (=> (= (type $generated@@485) ($generated@@83 $generated@@487 $generated@@4)) ($generated@@0 ($generated@@94 ($generated@@389 $generated@@485 $generated@@486) $generated@@486))))
 :pattern ( ($generated@@389 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@146 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@146 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@205 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@205 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@77 ($generated@@205 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@205 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@210 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@210 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@77 ($generated@@210 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@210 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@180 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@180 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@77 ($generated@@180 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@180 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@502 ($generated@@475 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@475 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@77 ($generated@@475 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@306 $generated@@507 ($generated@@240 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@240 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) $generated@@67)) (= ($generated@@89 $generated@@508 ($generated@@373 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@261 $generated@@508) $generated@@511))) (and ($generated@@189 ($generated@@94 ($generated@@348 $generated@@508) $generated@@511) $generated@@510) ($generated@@189 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@508) $generated@@511))
 :pattern ( ($generated@@94 ($generated@@261 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@89 $generated@@508 ($generated@@373 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) (= ($generated@@89 $generated@@512 ($generated@@381 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@279 $generated@@512) $generated@@515))) (and ($generated@@189 ($generated@@94 ($generated@@356 $generated@@512) $generated@@515) $generated@@514) ($generated@@189 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@512) $generated@@515))
 :pattern ( ($generated@@94 ($generated@@279 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@89 $generated@@512 ($generated@@381 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@518) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@519) $generated@@84)) (=> (and (and (and ($generated@@87 $generated@@517) ($generated@@87 $generated@@518)) (and (not (= $generated@@519 $generated@@88)) ($generated@@89 $generated@@519 $generated@@90))) (and ($generated@@516 $generated@@517) ($generated@@150 $generated@@517 $generated@@518))) (=> (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@70 (type $generated@@521))))
 (=> (and (and (= (type $generated@@520) $generated@@84) (= (type $generated@@521) ($generated@@69 $generated@@522))) (and (not (= $generated@@520 $generated@@88)) (= $generated@@520 $generated@@519))) (= ($generated@@93 ($generated@@94 $generated@@517 $generated@@520) $generated@@521) ($generated@@93 ($generated@@94 $generated@@518 $generated@@520) $generated@@521))))
 :no-pattern (type $generated@@520)
 :no-pattern (type $generated@@521)
 :no-pattern ($generated $generated@@520)
 :no-pattern ($generated@@0 $generated@@520)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
)) (= ($generated@@82 $generated@@517 $generated@@519) ($generated@@82 $generated@@518 $generated@@519)))))
 :pattern ( ($generated@@516 $generated@@517) ($generated@@150 $generated@@517 $generated@@518) ($generated@@82 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@173) (= (type $generated@@526) $generated@@173)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@188 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@188 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@173) (= (type $generated@@528) $generated@@173)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@188 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@188 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@173) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@189 $generated@@529 ($generated@@373 $generated@@530 $generated@@531))) (and (= ($generated@@240 ($generated@@306 ($generated@@263 $generated@@173 $generated@@173) $generated@@529)) $generated@@529) ($generated@@89 ($generated@@306 ($generated@@263 $generated@@173 $generated@@173) $generated@@529) ($generated@@373 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@189 $generated@@529 ($generated@@373 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@173) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@189 $generated@@532 ($generated@@381 $generated@@533 $generated@@534))) (and (= ($generated@@240 ($generated@@306 ($generated@@281 $generated@@173 $generated@@173) $generated@@532)) $generated@@532) ($generated@@89 ($generated@@306 ($generated@@281 $generated@@173 $generated@@173) $generated@@532) ($generated@@381 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@189 $generated@@532 ($generated@@381 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@67) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@173)) ($generated@@189 $generated@@537 ($generated@@163 $generated@@535 $generated@@536))) (and (= ($generated@@240 ($generated@@306 $generated@@164 $generated@@537)) $generated@@537) ($generated@@89 ($generated@@306 $generated@@164 $generated@@537) ($generated@@163 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@189 $generated@@537 ($generated@@163 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@539 T@T) ) (! (= (type ($generated@@538 $generated@@539)) ($generated@@83 $generated@@539 $generated@@4))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@94 ($generated@@538 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@94 ($generated@@538 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@94 ($generated@@404 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@94 ($generated@@404 $generated@@543) $generated@@542)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@550 T@T) ($generated@@551 T@T) ) (= ($generated@@1 ($generated@@546 $generated@@550 $generated@@551)) 22)) (forall (($generated@@552 T@T) ($generated@@553 T@T) ) (! (= ($generated@@547 ($generated@@546 $generated@@552 $generated@@553)) $generated@@552)
 :pattern ( ($generated@@546 $generated@@552 $generated@@553))
))) (forall (($generated@@554 T@T) ($generated@@555 T@T) ) (! (= ($generated@@548 ($generated@@546 $generated@@554 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@546 $generated@@554 $generated@@555))
))) (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@548 (type $generated@@556))))
(= (type ($generated@@544 $generated@@556 $generated@@557 $generated@@558)) $generated@@559))
 :pattern ( ($generated@@544 $generated@@556 $generated@@557 $generated@@558))
))) (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
(let (($generated@@565 (type $generated@@561)))
(= (type ($generated@@549 $generated@@560 $generated@@561 $generated@@562 $generated@@563)) ($generated@@546 $generated@@565 $generated@@564))))
 :pattern ( ($generated@@549 $generated@@560 $generated@@561 $generated@@562 $generated@@563))
))) (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@548 (type $generated@@566))))
 (=> (= (type $generated@@569) $generated@@570) (= ($generated@@544 ($generated@@549 $generated@@566 $generated@@567 $generated@@568 $generated@@569) $generated@@567 $generated@@568) $generated@@569)))
 :weight 0
))) (and (and (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (or (= $generated@@573 $generated@@575) (= ($generated@@544 ($generated@@549 $generated@@572 $generated@@573 $generated@@574 $generated@@571) $generated@@575 $generated@@576) ($generated@@544 $generated@@572 $generated@@575 $generated@@576)))
 :weight 0
)) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (or (= $generated@@580 $generated@@582) (= ($generated@@544 ($generated@@549 $generated@@578 $generated@@579 $generated@@580 $generated@@577) $generated@@581 $generated@@582) ($generated@@544 $generated@@578 $generated@@581 $generated@@582)))
 :weight 0
))) (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (or true (= ($generated@@544 ($generated@@549 $generated@@584 $generated@@585 $generated@@586 $generated@@583) $generated@@587 $generated@@588) ($generated@@544 $generated@@584 $generated@@587 $generated@@588)))
 :weight 0
)))) (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (= (type ($generated@@545 $generated@@589 $generated@@590 $generated@@591 $generated@@592)) ($generated@@546 $generated@@84 $generated@@4))
 :pattern ( ($generated@@545 $generated@@589 $generated@@590 $generated@@591 $generated@@592))
))))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@70 (type $generated@@598))))
 (=> (and (and (and (and (and (= (type $generated@@593) $generated@@84) (= (type $generated@@594) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@595) ($generated@@69 $generated@@4))) (= (type $generated@@596) $generated@@84)) (= (type $generated@@597) $generated@@84)) (= (type $generated@@598) ($generated@@69 $generated@@599))) (= ($generated@@0 ($generated@@544 ($generated@@545 $generated@@593 $generated@@594 $generated@@595 $generated@@596) $generated@@597 $generated@@598))  (=> (and (not (= $generated@@597 $generated@@593)) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@594 $generated@@597) $generated@@595))) (= $generated@@597 $generated@@596)))))
 :pattern ( ($generated@@544 ($generated@@545 $generated@@593 $generated@@594 $generated@@595 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@67) (= (type $generated@@601) $generated@@67)) (and (= ($generated@@77 ($generated@@163 $generated@@600 $generated@@601)) $generated@@63) (= ($generated@@178 ($generated@@163 $generated@@600 $generated@@601)) $generated@@64)))
 :pattern ( ($generated@@163 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@164) (= ($generated@@523 ($generated@@240 $generated@@602)) ($generated@@524 $generated@@602)))
 :pattern ( ($generated@@523 ($generated@@240 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@173) ($generated@@189 $generated@@603 ($generated@@146 0))) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@603)) $generated@@603) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@603) ($generated@@146 0))))
 :pattern ( ($generated@@189 $generated@@603 ($generated@@146 0)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@173) (= (type $generated@@605) $generated@@67)) ($generated@@189 $generated@@604 ($generated@@205 $generated@@605))) (and (= ($generated@@240 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@604)) $generated@@604) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@604) ($generated@@205 $generated@@605))))
 :pattern ( ($generated@@189 $generated@@604 ($generated@@205 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@173) (= (type $generated@@607) $generated@@67)) ($generated@@189 $generated@@606 ($generated@@210 $generated@@607))) (and (= ($generated@@240 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@606)) $generated@@606) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@606) ($generated@@210 $generated@@607))))
 :pattern ( ($generated@@189 $generated@@606 ($generated@@210 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@173) (= (type $generated@@609) $generated@@67)) ($generated@@189 $generated@@608 ($generated@@180 $generated@@609))) (and (= ($generated@@240 ($generated@@306 ($generated@@83 $generated@@173 $generated@@2) $generated@@608)) $generated@@608) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@2) $generated@@608) ($generated@@180 $generated@@609))))
 :pattern ( ($generated@@189 $generated@@608 ($generated@@180 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@173) (= (type $generated@@611) $generated@@67)) ($generated@@189 $generated@@610 ($generated@@475 $generated@@611))) (and (= ($generated@@240 ($generated@@306 ($generated@@234 $generated@@173) $generated@@610)) $generated@@610) ($generated@@89 ($generated@@306 ($generated@@234 $generated@@173) $generated@@610) ($generated@@475 $generated@@611))))
 :pattern ( ($generated@@189 $generated@@610 ($generated@@475 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (! (let (($generated@@615 ($generated@@96 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@83 $generated@@615 $generated@@4)) (= (type $generated@@614) ($generated@@83 $generated@@615 $generated@@4))) (= ($generated@@612 $generated@@613 $generated@@614) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@615) ($generated@@0 ($generated@@94 $generated@@613 $generated@@616))) ($generated@@0 ($generated@@94 $generated@@614 $generated@@616)))
 :pattern ( ($generated@@94 $generated@@613 $generated@@616))
 :pattern ( ($generated@@94 $generated@@614 $generated@@616))
)))))
 :pattern ( ($generated@@612 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@83 $generated@@173 $generated@@2)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@617 ($generated@@180 $generated@@618) $generated@@619) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@173) (< 0 ($generated ($generated@@94 $generated@@617 $generated@@620)))) ($generated@@220 $generated@@620 $generated@@618 $generated@@619))
 :pattern ( ($generated@@94 $generated@@617 $generated@@620))
))))
 :pattern ( ($generated@@91 $generated@@617 ($generated@@180 $generated@@618) $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@164) (= (type $generated@@622) $generated@@67)) (= (type $generated@@623) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@87 $generated@@623) (and ($generated@@162 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@67) ($generated@@91 $generated@@621 ($generated@@163 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@91 $generated@@621 ($generated@@163 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@220 ($generated@@171 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@220 ($generated@@171 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@164) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@87 $generated@@627) (and ($generated@@162 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@67) ($generated@@91 $generated@@625 ($generated@@163 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@91 $generated@@625 ($generated@@163 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@220 ($generated@@172 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@220 ($generated@@172 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@173) (= (type $generated@@630) $generated@@173)) (= ($generated@@188 ($generated@@216 $generated@@629) ($generated@@216 $generated@@630)) ($generated@@216 ($generated@@188 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@188 ($generated@@216 $generated@@629) ($generated@@216 $generated@@630)))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@92 $generated@@631))) ($generated@@216 ($generated@@240 ($generated@@8 $generated@@631))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@92 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ) (! (= ($generated@@240 ($generated@@216 $generated@@632)) ($generated@@216 ($generated@@240 $generated@@632)))
 :pattern ( ($generated@@240 ($generated@@216 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@235 (type $generated@@633))))
 (=> (and (= (type $generated@@633) ($generated@@234 $generated@@634)) (= ($generated@@233 $generated@@633) 0)) (= $generated@@633 ($generated@@232 $generated@@634))))
 :pattern ( ($generated@@233 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 (type $generated@@636)))
 (=> (and (and (= (type $generated@@635) ($generated@@83 $generated@@638 $generated@@2)) (= (type $generated@@637) $generated@@2)) (<= 0 ($generated $generated@@637))) (= ($generated@@255 ($generated@@98 $generated@@635 $generated@@636 $generated@@637)) (+ (- ($generated@@255 $generated@@635) ($generated ($generated@@94 $generated@@635 $generated@@636))) ($generated $generated@@637)))))
 :pattern ( ($generated@@255 ($generated@@98 $generated@@635 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@640) $generated@@2)) ($generated@@91 $generated@@640 $generated@@46 $generated@@639))
 :pattern ( ($generated@@91 $generated@@640 $generated@@46 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@642) $generated@@3)) ($generated@@91 $generated@@642 $generated@@47 $generated@@641))
 :pattern ( ($generated@@91 $generated@@642 $generated@@47 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@644) $generated@@4)) ($generated@@91 $generated@@644 $generated@@44 $generated@@643))
 :pattern ( ($generated@@91 $generated@@644 $generated@@44 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@646) $generated@@433)) ($generated@@91 $generated@@646 $generated@@45 $generated@@645))
 :pattern ( ($generated@@91 $generated@@646 $generated@@45 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@648) $generated@@173)) ($generated@@91 $generated@@648 $generated@@48 $generated@@647))
 :pattern ( ($generated@@91 $generated@@648 $generated@@48 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@234 $generated@@173)) (= (type $generated@@650) $generated@@67)) (= ($generated@@89 $generated@@649 ($generated@@475 $generated@@650)) (forall (($generated@@651 Int) ) (!  (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@233 $generated@@649))) ($generated@@189 ($generated@@476 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@476 $generated@@649 $generated@@651))
))))
 :pattern ( ($generated@@89 $generated@@649 ($generated@@475 $generated@@650)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 Int) ) (!  (=> (= (type $generated@@653) ($generated@@234 $generated@@173)) (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@233 $generated@@653))) (< ($generated@@524 ($generated@@306 $generated@@164 ($generated@@476 $generated@@653 $generated@@654))) ($generated@@652 $generated@@653))))
 :pattern ( ($generated@@524 ($generated@@306 $generated@@164 ($generated@@476 $generated@@653 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@656) $generated@@67)) (= (type $generated@@657) $generated@@67)) ($generated@@89 $generated@@655 ($generated@@373 $generated@@656 $generated@@657))) (and (and ($generated@@89 ($generated@@261 $generated@@655) ($generated@@205 $generated@@656)) ($generated@@89 ($generated@@316 $generated@@655) ($generated@@205 $generated@@657))) ($generated@@89 ($generated@@347 $generated@@655) ($generated@@205 ($generated@@163 $generated@@656 $generated@@657)))))
 :pattern ( ($generated@@89 $generated@@655 ($generated@@373 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@659) $generated@@67)) (= (type $generated@@660) $generated@@67)) ($generated@@89 $generated@@658 ($generated@@381 $generated@@659 $generated@@660))) (and (and ($generated@@89 ($generated@@279 $generated@@658) ($generated@@210 $generated@@659)) ($generated@@89 ($generated@@327 $generated@@658) ($generated@@210 $generated@@660))) ($generated@@89 ($generated@@355 $generated@@658) ($generated@@210 ($generated@@163 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@89 $generated@@658 ($generated@@381 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@2) ($generated@@89 $generated@@661 $generated@@46))
 :pattern ( ($generated@@89 $generated@@661 $generated@@46))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@3) ($generated@@89 $generated@@662 $generated@@47))
 :pattern ( ($generated@@89 $generated@@662 $generated@@47))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@4) ($generated@@89 $generated@@663 $generated@@44))
 :pattern ( ($generated@@89 $generated@@663 $generated@@44))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@433) ($generated@@89 $generated@@664 $generated@@45))
 :pattern ( ($generated@@89 $generated@@664 $generated@@45))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@173) ($generated@@89 $generated@@665 $generated@@48))
 :pattern ( ($generated@@89 $generated@@665 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(assert  (and (and (= (type $generated@@666) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@667) $generated@@84)) (= (type $generated@@668) ($generated@@546 $generated@@84 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@669 true))
(let (($generated@@670  (=> (and (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@666 $generated@@667)) (= (ControlFlow 0 5) 2)) $generated@@669)))
(let (($generated@@671  (=> (and (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8)) ($generated@@91 $generated@@667 $generated@@154 $generated@@666)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (= $generated@@667 $generated@@667) (and ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))) (not ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))))))) (=> (or (= $generated@@667 $generated@@667) (and ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))) (not ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)))))) (=> (or (= $generated@@667 $generated@@667) ($generated@@86 $generated@@666 $generated@@667)) (=> (and ($generated@@82 $generated@@666 $generated@@667) (= (ControlFlow 0 3) 2)) $generated@@669)))))))
(let (($generated@@672  (=> (=> ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)))) (and (=> (= (ControlFlow 0 8) 3) $generated@@671) (=> (= (ControlFlow 0 8) 5) $generated@@670)))))
(let (($generated@@673  (=> ($generated@@91 $generated@@667 $generated@@154 $generated@@666) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (= $generated@@667 $generated@@667) (and ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))) (not ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))))))) (=> (or (= $generated@@667 $generated@@667) (and ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))) (not ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)))))) (=> (or (= $generated@@667 $generated@@667) ($generated@@86 $generated@@666 $generated@@667)) (=> (and ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)))) (and (=> (= (ControlFlow 0 6) 3) $generated@@671) (=> (= (ControlFlow 0 6) 5) $generated@@670)))))))))
(let (($generated@@674 true))
(let (($generated@@675  (=> (= $generated@@668 ($generated@@545 $generated@@88 $generated@@666 $generated@@60 $generated@@667)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@674) (=> (= (ControlFlow 0 9) 6) $generated@@673)) (=> (= (ControlFlow 0 9) 8) $generated@@672)))))
(let (($generated@@676  (=> (and ($generated@@87 $generated@@666) ($generated@@516 $generated@@666)) (=> (and (and (not (= $generated@@667 $generated@@88)) (and ($generated@@89 $generated@@667 $generated@@90) ($generated@@91 $generated@@667 $generated@@90 $generated@@666))) (and (= 0 $generated@@81) (= (ControlFlow 0 10) 9))) $generated@@675))))
$generated@@676)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 () Int)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@192 (T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U) Bool)
(declare-fun $generated@@200 (T@T T@U T@U) T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@T)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@236 (T@T) T@U)
(declare-fun $generated@@237 (T@U) Int)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 (T@T T@T) T@U)
(declare-fun $generated@@267 (T@T T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U T@U) Bool)
(declare-fun $generated@@310 (T@T T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@377 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@T) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@425 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Bool)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@537 (T@U T@U T@U) T@U)
(declare-fun $generated@@538 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@539 (T@T T@T) T@T)
(declare-fun $generated@@540 (T@T) T@T)
(declare-fun $generated@@541 (T@T) T@T)
(declare-fun $generated@@542 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@593 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@652 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@100 $generated@@101)) 12)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@96 ($generated@@83 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@83 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@97 ($generated@@83 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@83 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@97 (type $generated@@106))))
(= (type ($generated@@94 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@98 $generated@@109 $generated@@110 $generated@@111)) ($generated@@83 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@98 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@97 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@94 ($generated@@98 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@94 ($generated@@98 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@94 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@94 ($generated@@98 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@94 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@70 (type $generated@@127))))
(= (type ($generated@@93 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@93 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@85)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@70 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@93 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@93 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@93 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@93 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@93 $generated@@141 $generated@@143)))
 :weight 0
)))) (= (type $generated@@88) $generated@@84)) (= (type $generated@@90) $generated@@67)) (= (type $generated@@95) ($generated@@69 $generated@@2))))
(assert  (=> (<= 0 $generated@@81) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@145) $generated@@84)) (or ($generated@@86 $generated@@144 $generated@@145) (and (not (= 0 $generated@@81)) (and ($generated@@87 $generated@@144) (and (not (= $generated@@145 $generated@@88)) (and ($generated@@89 $generated@@145 $generated@@90) ($generated@@91 $generated@@145 $generated@@90 $generated@@144))))))) (and (=> ($generated@@82 $generated@@144 $generated@@145) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@144 $generated@@145) $generated@@95)))) (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@144 $generated@@145) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@144 $generated@@145))))
 :pattern ( ($generated@@82 $generated@@144 $generated@@145))
))))
(assert  (=> (<= 1 $generated@@81) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@149) $generated@@84)) (or ($generated@@147 $generated@@148 $generated@@149) (and (not (= 1 $generated@@81)) (and ($generated@@87 $generated@@148) (and (not (= $generated@@149 $generated@@88)) (and ($generated@@89 $generated@@149 $generated@@90) ($generated@@91 $generated@@149 $generated@@90 $generated@@148))))))) (and (=> ($generated@@82 $generated@@148 $generated@@149) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@148 $generated@@149) $generated@@95)))) (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@148 $generated@@149) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@148 $generated@@149))))
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@67)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@91 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@91 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@156) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@84) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (= (type $generated@@158) $generated@@67))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@84) (= (type $generated@@160) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@159 $generated@@158 $generated@@160)  (or (= $generated@@159 $generated@@88) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@164) $generated@@84)) (and ($generated@@87 $generated@@163) (and (not (= $generated@@164 $generated@@88)) (= ($generated@@161 $generated@@164) $generated@@158)))) ($generated@@89 ($generated@@93 ($generated@@94 $generated@@163 $generated@@164) $generated@@95) $generated@@46))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@163 $generated@@164) $generated@@95))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@89 $generated@@165 ($generated@@150 0)))
 :pattern ( ($generated@@89 $generated@@165 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@67)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@67) (= (type $generated@@172) $generated@@67)) (= (type $generated@@173) $generated@@168)) ($generated@@89 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@89 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 16) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@182 $generated@@183)) $generated@@73)
 :pattern ( ($generated@@182 $generated@@183))
)))
(assert (= ($generated@@182 $generated@@158) $generated@@65))
(assert (= ($generated@@182 $generated@@90) $generated@@65))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@67)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@83 $generated@@177 $generated@@2)) (= (type $generated@@188) $generated@@67)) ($generated@@89 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@89 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> (= (type $generated@@189) $generated@@84) (= ($generated@@89 $generated@@189 $generated@@158)  (or (= $generated@@189 $generated@@88) (= ($generated@@161 $generated@@189) $generated@@158))))
 :pattern ( ($generated@@89 $generated@@189 $generated@@158))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@84) (= (type $generated@@191) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@190 $generated@@90 $generated@@191) ($generated@@91 $generated@@190 $generated@@158 $generated@@191)))
 :pattern ( ($generated@@91 $generated@@190 $generated@@90 $generated@@191))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@194 $generated@@195)) $generated@@168)
 :pattern ( ($generated@@192 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (and (= (type $generated@@196) $generated@@67) (= (type $generated@@197) $generated@@67)) (= (type $generated@@198) $generated@@177)) (= (type $generated@@199) $generated@@177)) (= ($generated@@89 ($generated@@192 $generated@@198 $generated@@199) ($generated@@167 $generated@@196 $generated@@197))  (and ($generated@@193 $generated@@198 $generated@@196) ($generated@@193 $generated@@199 $generated@@197))))
 :pattern ( ($generated@@89 ($generated@@192 $generated@@198 $generated@@199) ($generated@@167 $generated@@196 $generated@@197)))
)))
(assert (= ($generated@@76 $generated@@95) 0))
(assert  (and (and (forall (($generated@@203 T@T) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= (type ($generated@@200 $generated@@203 $generated@@204 $generated@@205)) ($generated@@69 $generated@@203))
 :pattern ( ($generated@@200 $generated@@203 $generated@@204 $generated@@205))
)) (= ($generated@@1 $generated@@202) 17)) (= (type $generated@@201) $generated@@202)))
(assert (= ($generated@@200 $generated@@2 $generated@@201 $generated@@66) $generated@@95))
(assert  (not ($generated@@206 $generated@@95)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) $generated@@168) (= (type $generated@@208) $generated@@168)) (= ($generated@@174 $generated@@207 $generated@@208) (= $generated@@207 $generated@@208)))
 :pattern ( ($generated@@174 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ) (! (= (type ($generated@@209 $generated@@210)) $generated@@67)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (= (type $generated@@211) ($generated@@83 $generated@@177 $generated@@4)) (= (type $generated@@212) $generated@@67)) (= ($generated@@89 $generated@@211 ($generated@@209 $generated@@212)) (forall (($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@177) ($generated@@0 ($generated@@94 $generated@@211 $generated@@213))) ($generated@@193 $generated@@213 $generated@@212))
 :pattern ( ($generated@@94 $generated@@211 $generated@@213))
))))
 :pattern ( ($generated@@89 $generated@@211 ($generated@@209 $generated@@212)))
)))
(assert (forall (($generated@@215 T@U) ) (! (= (type ($generated@@214 $generated@@215)) $generated@@67)
 :pattern ( ($generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (= (type $generated@@216) ($generated@@83 $generated@@177 $generated@@4)) (= (type $generated@@217) $generated@@67)) (= ($generated@@89 $generated@@216 ($generated@@214 $generated@@217)) (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@177) ($generated@@0 ($generated@@94 $generated@@216 $generated@@218))) ($generated@@193 $generated@@218 $generated@@217))
 :pattern ( ($generated@@94 $generated@@216 $generated@@218))
))))
 :pattern ( ($generated@@89 $generated@@216 ($generated@@214 $generated@@217)))
)))
(assert (forall (($generated@@219 Int) ) (! (= ($generated@@92 $generated@@219) $generated@@219)
 :pattern ( ($generated@@92 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (! (let (($generated@@222 (type $generated@@221)))
(= (type ($generated@@220 $generated@@221)) $generated@@222))
 :pattern ( ($generated@@220 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@220 $generated@@223) $generated@@223)
 :pattern ( ($generated@@220 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@177)) (= (type $generated@@228) $generated@@177)) (= (type $generated@@229) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@87 $generated@@229)) (= ($generated@@91 ($generated@@192 $generated@@227 $generated@@228) ($generated@@167 $generated@@225 $generated@@226) $generated@@229)  (and ($generated@@224 $generated@@227 $generated@@225 $generated@@229) ($generated@@224 $generated@@228 $generated@@226 $generated@@229))))
 :pattern ( ($generated@@91 ($generated@@192 $generated@@227 $generated@@228) ($generated@@167 $generated@@225 $generated@@226) $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@72)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@168) (= ($generated@@166 $generated@@232) (= ($generated@@230 $generated@@232) $generated@@62)))
 :pattern ( ($generated@@166 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@168) ($generated@@166 $generated@@233)) (exists (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (and (and (= (type $generated@@234) $generated@@177) (= (type $generated@@235) $generated@@177)) (= $generated@@233 ($generated@@192 $generated@@234 $generated@@235)))
 :no-pattern (type $generated@@234)
 :no-pattern (type $generated@@235)
 :no-pattern ($generated $generated@@234)
 :no-pattern ($generated@@0 $generated@@234)
 :no-pattern ($generated $generated@@235)
 :no-pattern ($generated@@0 $generated@@235)
)))
 :pattern ( ($generated@@166 $generated@@233))
)))
(assert  (and (and (forall (($generated@@240 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@240)) 18)) (forall (($generated@@241 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@241)) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
))) (forall (($generated@@242 T@T) ) (! (= (type ($generated@@236 $generated@@242)) ($generated@@238 $generated@@242))
 :pattern ( ($generated@@236 $generated@@242))
))))
(assert (forall (($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@236 $generated@@243)) 0)
 :pattern ( ($generated@@236 $generated@@243))
)))
(assert ($generated@@206 $generated@@60))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@177)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@224 ($generated@@244 $generated@@246) $generated@@247 $generated@@248) ($generated@@91 $generated@@246 $generated@@247 $generated@@248)))
 :pattern ( ($generated@@224 ($generated@@244 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@250) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@251) $generated@@177)) (= (type $generated@@252) $generated@@67)) ($generated@@154 $generated@@249 $generated@@250)) ($generated@@224 $generated@@251 $generated@@252 $generated@@249)) ($generated@@224 $generated@@251 $generated@@252 $generated@@250))
 :pattern ( ($generated@@154 $generated@@249 $generated@@250) ($generated@@224 $generated@@251 $generated@@252 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@253) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@254) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@256) $generated@@67)) ($generated@@154 $generated@@253 $generated@@254)) ($generated@@91 $generated@@255 $generated@@256 $generated@@253)) ($generated@@91 $generated@@255 $generated@@256 $generated@@254))
 :pattern ( ($generated@@154 $generated@@253 $generated@@254) ($generated@@91 $generated@@255 $generated@@256 $generated@@253))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@258) $generated@@84)) (=> (and (and ($generated@@87 $generated@@257) (and (not (= $generated@@258 $generated@@88)) (= ($generated@@161 $generated@@258) $generated@@158))) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@257 $generated@@258) $generated@@60))) ($generated@@91 ($generated@@93 ($generated@@94 $generated@@257 $generated@@258) $generated@@95) $generated@@46 $generated@@257)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@257 $generated@@258) $generated@@95))
)))
(assert (forall (($generated@@261 T@T) ) (! (= (type ($generated@@260 $generated@@261)) ($generated@@83 $generated@@261 $generated@@2))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@96 (type $generated@@262))))
 (=> (= (type $generated@@262) ($generated@@83 $generated@@263 $generated@@2)) (and (= (= ($generated@@259 $generated@@262) 0) (= $generated@@262 ($generated@@260 $generated@@263))) (=> (not (= ($generated@@259 $generated@@262) 0)) (exists (($generated@@264 T@U) ) (!  (and (= (type $generated@@264) $generated@@263) (< 0 ($generated ($generated@@94 $generated@@262 $generated@@264))))
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
))))))
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert  (and (and (and (and (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@270 $generated@@271)) 19)) (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@272 $generated@@273)) $generated@@272)
 :pattern ( ($generated@@267 $generated@@272 $generated@@273))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@267 $generated@@274 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@267 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@268 (type $generated@@276))))
(= (type ($generated@@265 $generated@@276)) ($generated@@83 $generated@@277 $generated@@4)))
 :pattern ( ($generated@@265 $generated@@276))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= (type ($generated@@266 $generated@@278 $generated@@279)) ($generated@@267 $generated@@278 $generated@@279))
 :pattern ( ($generated@@266 $generated@@278 $generated@@279))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@T) ) (! (let (($generated@@282 (type $generated@@280)))
 (not ($generated@@0 ($generated@@94 ($generated@@265 ($generated@@266 $generated@@282 $generated@@281)) $generated@@280))))
 :pattern ( (let (($generated@@282 (type $generated@@280)))
($generated@@94 ($generated@@265 ($generated@@266 $generated@@282 $generated@@281)) $generated@@280)))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 20)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@83 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@94 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@94 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (= (type $generated@@302) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@303) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@301 $generated@@302 $generated@@303)) (and ($generated@@154 $generated@@302 $generated@@303) (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@70 (type $generated@@305))))
 (=> (and (and (= (type $generated@@304) $generated@@84) (= (type $generated@@305) ($generated@@69 $generated@@306))) (not ($generated@@206 $generated@@305))) (= ($generated@@93 ($generated@@94 $generated@@302 $generated@@304) $generated@@305) ($generated@@93 ($generated@@94 $generated@@303 $generated@@304) $generated@@305))))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@303 $generated@@304) $generated@@305))
))))
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@96 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@83 $generated@@308 $generated@@2)) (= ($generated@@185 $generated@@307) (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@308) (and (<= 0 ($generated ($generated@@94 $generated@@307 $generated@@309))) (<= ($generated ($generated@@94 $generated@@307 $generated@@309)) ($generated@@259 $generated@@307))))
 :pattern ( ($generated@@94 $generated@@307 $generated@@309))
)))))
 :pattern ( ($generated@@185 $generated@@307))
)))
(assert (forall (($generated@@311 T@T) ($generated@@312 T@U) ) (! (= (type ($generated@@310 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@310 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@177) ($generated@@193 $generated@@313 $generated@@158)) (and (= ($generated@@244 ($generated@@310 $generated@@84 $generated@@313)) $generated@@313) ($generated@@89 ($generated@@310 $generated@@84 $generated@@313) $generated@@158)))
 :pattern ( ($generated@@193 $generated@@313 $generated@@158))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@177) ($generated@@193 $generated@@314 $generated@@90)) (and (= ($generated@@244 ($generated@@310 $generated@@84 $generated@@314)) $generated@@314) ($generated@@89 ($generated@@310 $generated@@84 $generated@@314) $generated@@90)))
 :pattern ( ($generated@@193 $generated@@314 $generated@@90))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@84) (= ($generated@@89 $generated@@315 $generated@@90)  (and ($generated@@89 $generated@@315 $generated@@158) (not (= $generated@@315 $generated@@88)))))
 :pattern ( ($generated@@89 $generated@@315 $generated@@90))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@269 (type $generated@@316))))
(let (($generated@@318 ($generated@@268 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@267 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@266 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@94 ($generated@@265 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@265 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@269 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@83 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@269 (type $generated@@323))))
(let (($generated@@325 ($generated@@268 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@267 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@266 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@94 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@287 (type $generated@@327))))
(let (($generated@@329 ($generated@@286 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@285 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@284 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@94 ($generated@@283 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@283 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@287 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@83 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@287 (type $generated@@334))))
(let (($generated@@336 ($generated@@286 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@285 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@284 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@94 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) ($generated@@83 $generated@@177 $generated@@2)) (= (type $generated@@339) $generated@@67)) (= ($generated@@89 $generated@@338 ($generated@@184 $generated@@339)) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@177) (< 0 ($generated ($generated@@94 $generated@@338 $generated@@340)))) ($generated@@193 $generated@@340 $generated@@339))
 :pattern ( ($generated@@94 $generated@@338 $generated@@340))
))))
 :pattern ( ($generated@@89 $generated@@338 ($generated@@184 $generated@@339)))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@83 $generated@@177 $generated@@4)) (= (type $generated@@342) $generated@@67)) (= (type $generated@@343) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@341 ($generated@@209 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@177) ($generated@@0 ($generated@@94 $generated@@341 $generated@@344))) ($generated@@224 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@94 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@91 $generated@@341 ($generated@@209 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@83 $generated@@177 $generated@@4)) (= (type $generated@@346) $generated@@67)) (= (type $generated@@347) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@345 ($generated@@214 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@177) ($generated@@0 ($generated@@94 $generated@@345 $generated@@348))) ($generated@@224 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@94 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@91 $generated@@345 ($generated@@214 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
(= ($generated ($generated@@94 ($generated@@260 $generated@@350) $generated@@349)) 0))
 :pattern ( (let (($generated@@350 (type $generated@@349)))
($generated@@94 ($generated@@260 $generated@@350) $generated@@349)))
)))
(assert  (and (forall (($generated@@353 T@U) ) (! (= (type ($generated@@351 $generated@@353)) ($generated@@83 $generated@@177 $generated@@4))
 :pattern ( ($generated@@351 $generated@@353))
)) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@269 (type $generated@@354))))
(let (($generated@@356 ($generated@@268 (type $generated@@354))))
(= (type ($generated@@352 $generated@@354)) ($generated@@83 $generated@@356 $generated@@355))))
 :pattern ( ($generated@@352 $generated@@354))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@267 $generated@@177 $generated@@177)) (= (type $generated@@358) $generated@@177)) (= ($generated@@0 ($generated@@94 ($generated@@351 $generated@@357) $generated@@358))  (and ($generated@@0 ($generated@@94 ($generated@@265 $generated@@357) ($generated@@175 ($generated@@310 $generated@@168 $generated@@358)))) (= ($generated@@94 ($generated@@352 $generated@@357) ($generated@@175 ($generated@@310 $generated@@168 $generated@@358))) ($generated@@176 ($generated@@310 $generated@@168 $generated@@358))))))
 :pattern ( ($generated@@94 ($generated@@351 $generated@@357) $generated@@358))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@83 $generated@@177 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@287 (type $generated@@362))))
(let (($generated@@364 ($generated@@286 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@83 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@285 $generated@@177 $generated@@177)) (= (type $generated@@366) $generated@@177)) (= ($generated@@0 ($generated@@94 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@94 ($generated@@283 $generated@@365) ($generated@@175 ($generated@@310 $generated@@168 $generated@@366)))) (= ($generated@@94 ($generated@@360 $generated@@365) ($generated@@175 ($generated@@310 $generated@@168 $generated@@366))) ($generated@@176 ($generated@@310 $generated@@168 $generated@@366))))))
 :pattern ( ($generated@@94 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@268 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@267 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@94 ($generated@@320 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@94 ($generated@@265 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@94 ($generated@@352 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@94 ($generated@@265 $generated@@367) $generated@@371))
 :pattern ( ($generated@@94 ($generated@@352 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@94 ($generated@@320 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@286 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@285 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@94 ($generated@@331 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@94 ($generated@@283 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@94 ($generated@@360 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@94 ($generated@@283 $generated@@372) $generated@@376))
 :pattern ( ($generated@@94 ($generated@@360 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@94 ($generated@@331 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@67)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (and (= (type $generated@@380) ($generated@@267 $generated@@177 $generated@@177)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) $generated@@67)) (= (type $generated@@383) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@177) ($generated@@0 ($generated@@94 ($generated@@265 $generated@@380) $generated@@384))) (and ($generated@@224 ($generated@@94 ($generated@@352 $generated@@380) $generated@@384) $generated@@382 $generated@@383) ($generated@@224 $generated@@384 $generated@@381 $generated@@383)))
 :pattern ( ($generated@@94 ($generated@@352 $generated@@380) $generated@@384))
 :pattern ( ($generated@@94 ($generated@@265 $generated@@380) $generated@@384))
))))
 :pattern ( ($generated@@91 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@67)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@285 $generated@@177 $generated@@177)) (= (type $generated@@389) $generated@@67)) (= (type $generated@@390) $generated@@67)) (= (type $generated@@391) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@177) ($generated@@0 ($generated@@94 ($generated@@283 $generated@@388) $generated@@392))) (and ($generated@@224 ($generated@@94 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@224 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@94 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@94 ($generated@@283 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@91 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@393) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@394) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@395) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@393 $generated@@395))) (and ($generated@@154 $generated@@393 $generated@@394) ($generated@@154 $generated@@394 $generated@@395))) ($generated@@154 $generated@@393 $generated@@395))
 :pattern ( ($generated@@154 $generated@@393 $generated@@394) ($generated@@154 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@T) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@83 $generated@@397 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@287 (type $generated@@398))))
(let (($generated@@400 ($generated@@286 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@285 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@284 $generated@@400 $generated@@399)) (= ($generated@@283 $generated@@398) ($generated@@396 $generated@@400))))))
 :pattern ( ($generated@@283 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@287 (type $generated@@401))))
(let (($generated@@403 ($generated@@286 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@285 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@284 $generated@@403 $generated@@402)) (= ($generated@@331 $generated@@401) ($generated@@396 $generated@@402))))))
 :pattern ( ($generated@@331 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@287 (type $generated@@404))))
(let (($generated@@406 ($generated@@286 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@285 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@284 $generated@@406 $generated@@405)) (= ($generated@@359 $generated@@404) ($generated@@396 $generated@@177))))))
 :pattern ( ($generated@@359 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@269 (type $generated@@407))))
(let (($generated@@409 ($generated@@268 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@267 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@266 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@177) (= (type $generated@@411) $generated@@177)) ($generated@@0 ($generated@@94 ($generated@@351 $generated@@407) ($generated@@244 ($generated@@192 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@351 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@287 (type $generated@@412))))
(let (($generated@@414 ($generated@@286 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@285 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@284 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@177) (= (type $generated@@416) $generated@@177)) ($generated@@0 ($generated@@94 ($generated@@359 $generated@@412) ($generated@@244 ($generated@@192 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@202)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@T) ) (!  (=> (and (= (type $generated@@419) $generated@@202) (= (type $generated@@420) $generated@@71)) (and (= ($generated@@417 ($generated@@200 $generated@@421 $generated@@419 $generated@@420)) $generated@@419) (= ($generated@@79 ($generated@@200 $generated@@421 $generated@@419 $generated@@420)) $generated@@420)))
 :pattern ( ($generated@@200 $generated@@421 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@177) ($generated@@193 $generated@@422 $generated@@46)) (and (= ($generated@@244 ($generated@@310 $generated@@2 $generated@@422)) $generated@@422) ($generated@@89 ($generated@@310 $generated@@2 $generated@@422) $generated@@46)))
 :pattern ( ($generated@@193 $generated@@422 $generated@@46))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@177) ($generated@@193 $generated@@423 $generated@@47)) (and (= ($generated@@244 ($generated@@310 $generated@@3 $generated@@423)) $generated@@423) ($generated@@89 ($generated@@310 $generated@@3 $generated@@423) $generated@@47)))
 :pattern ( ($generated@@193 $generated@@423 $generated@@47))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@177) ($generated@@193 $generated@@424 $generated@@44)) (and (= ($generated@@244 ($generated@@310 $generated@@4 $generated@@424)) $generated@@424) ($generated@@89 ($generated@@310 $generated@@4 $generated@@424) $generated@@44)))
 :pattern ( ($generated@@193 $generated@@424 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@425) 21))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@177) ($generated@@193 $generated@@426 $generated@@45)) (and (= ($generated@@244 ($generated@@310 $generated@@425 $generated@@426)) $generated@@426) ($generated@@89 ($generated@@310 $generated@@425 $generated@@426) $generated@@45)))
 :pattern ( ($generated@@193 $generated@@426 $generated@@45))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (= (type $generated@@428) $generated@@67) (= ($generated@@193 ($generated@@244 $generated@@427) $generated@@428) ($generated@@89 $generated@@427 $generated@@428)))
 :pattern ( ($generated@@193 ($generated@@244 $generated@@427) $generated@@428))
)))
(assert  (=> (<= 1 $generated@@81) (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@430) $generated@@84)) (or ($generated@@147 $generated@@429 $generated@@430) (and (not (= 1 $generated@@81)) (and ($generated@@87 $generated@@429) (and (not (= $generated@@430 $generated@@88)) (and ($generated@@89 $generated@@430 $generated@@90) ($generated@@91 $generated@@430 $generated@@90 $generated@@429))))))) (= ($generated@@146 $generated@@429 $generated@@430) (= ($generated ($generated@@93 ($generated@@94 $generated@@429 $generated@@430) $generated@@95)) ($generated@@92 8))))
 :pattern ( ($generated@@146 $generated@@429 $generated@@430) ($generated@@87 $generated@@429))
))))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@96 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@83 $generated@@432 $generated@@2)) (<= 0 ($generated@@259 $generated@@431))))
 :pattern ( ($generated@@259 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@239 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@238 $generated@@434)) (<= 0 ($generated@@237 $generated@@433))))
 :pattern ( ($generated@@237 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@67) (= (type $generated@@438) $generated@@67)) (= ($generated@@435 ($generated@@377 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@377 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@377 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@377 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@77 ($generated@@377 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@377 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@385 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@385 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@385 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@385 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@77 ($generated@@385 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@385 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@177) (= (type $generated@@456) $generated@@177)) (= ($generated@@230 ($generated@@192 $generated@@455 $generated@@456)) $generated@@62))
 :pattern ( ($generated@@192 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@167 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@167 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@167 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@167 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@177) (= (type $generated@@466) $generated@@177)) (= ($generated@@175 ($generated@@192 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@192 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@177) (= (type $generated@@468) $generated@@177)) (= ($generated@@176 ($generated@@192 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@192 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@239 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@238 $generated@@177)) (= (type $generated@@476) $generated@@67)) (= (type $generated@@477) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@237 $generated@@475))) ($generated@@224 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@91 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@150 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@150 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@481 ($generated@@209 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@209 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@77 ($generated@@209 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@209 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@214 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@214 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@77 ($generated@@214 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@214 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@489 ($generated@@184 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@184 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@77 ($generated@@184 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@77 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@310 $generated@@498 ($generated@@244 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@244 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@267 $generated@@177 $generated@@177)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) $generated@@67)) (= ($generated@@89 $generated@@499 ($generated@@377 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@177) ($generated@@0 ($generated@@94 ($generated@@265 $generated@@499) $generated@@502))) (and ($generated@@193 ($generated@@94 ($generated@@352 $generated@@499) $generated@@502) $generated@@501) ($generated@@193 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@94 ($generated@@352 $generated@@499) $generated@@502))
 :pattern ( ($generated@@94 ($generated@@265 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@89 $generated@@499 ($generated@@377 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@285 $generated@@177 $generated@@177)) (= (type $generated@@504) $generated@@67)) (= (type $generated@@505) $generated@@67)) (= ($generated@@89 $generated@@503 ($generated@@385 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@177) ($generated@@0 ($generated@@94 ($generated@@283 $generated@@503) $generated@@506))) (and ($generated@@193 ($generated@@94 ($generated@@360 $generated@@503) $generated@@506) $generated@@505) ($generated@@193 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@94 ($generated@@360 $generated@@503) $generated@@506))
 :pattern ( ($generated@@94 ($generated@@283 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@89 $generated@@503 ($generated@@385 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@509) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@510) $generated@@84)) (=> (and (and (and ($generated@@87 $generated@@508) ($generated@@87 $generated@@509)) (and (not (= $generated@@510 $generated@@88)) ($generated@@89 $generated@@510 $generated@@90))) (and ($generated@@507 $generated@@508) ($generated@@154 $generated@@508 $generated@@509))) (=> (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@70 (type $generated@@512))))
 (=> (and (and (= (type $generated@@511) $generated@@84) (= (type $generated@@512) ($generated@@69 $generated@@513))) (and (not (= $generated@@511 $generated@@88)) (= $generated@@511 $generated@@510))) (= ($generated@@93 ($generated@@94 $generated@@508 $generated@@511) $generated@@512) ($generated@@93 ($generated@@94 $generated@@509 $generated@@511) $generated@@512))))
 :no-pattern (type $generated@@511)
 :no-pattern (type $generated@@512)
 :no-pattern ($generated $generated@@511)
 :no-pattern ($generated@@0 $generated@@511)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
)) (= ($generated@@82 $generated@@508 $generated@@510) ($generated@@82 $generated@@509 $generated@@510)))))
 :pattern ( ($generated@@507 $generated@@508) ($generated@@154 $generated@@508 $generated@@509) ($generated@@82 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@515) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@516) $generated@@84)) (=> (and (and (and ($generated@@87 $generated@@514) ($generated@@87 $generated@@515)) (and (not (= $generated@@516 $generated@@88)) ($generated@@89 $generated@@516 $generated@@90))) (and ($generated@@507 $generated@@514) ($generated@@154 $generated@@514 $generated@@515))) (=> (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@70 (type $generated@@518))))
 (=> (and (and (= (type $generated@@517) $generated@@84) (= (type $generated@@518) ($generated@@69 $generated@@519))) (and (not (= $generated@@517 $generated@@88)) (= $generated@@517 $generated@@516))) (= ($generated@@93 ($generated@@94 $generated@@514 $generated@@517) $generated@@518) ($generated@@93 ($generated@@94 $generated@@515 $generated@@517) $generated@@518))))
 :no-pattern (type $generated@@517)
 :no-pattern (type $generated@@518)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
)) (= ($generated@@146 $generated@@514 $generated@@516) ($generated@@146 $generated@@515 $generated@@516)))))
 :pattern ( ($generated@@507 $generated@@514) ($generated@@154 $generated@@514 $generated@@515) ($generated@@146 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@177) (= (type $generated@@523) $generated@@177)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@192 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@192 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@177) (= (type $generated@@525) $generated@@177)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@192 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@192 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@177) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@67)) ($generated@@193 $generated@@526 ($generated@@377 $generated@@527 $generated@@528))) (and (= ($generated@@244 ($generated@@310 ($generated@@267 $generated@@177 $generated@@177) $generated@@526)) $generated@@526) ($generated@@89 ($generated@@310 ($generated@@267 $generated@@177 $generated@@177) $generated@@526) ($generated@@377 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@193 $generated@@526 ($generated@@377 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@177) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@193 $generated@@529 ($generated@@385 $generated@@530 $generated@@531))) (and (= ($generated@@244 ($generated@@310 ($generated@@285 $generated@@177 $generated@@177) $generated@@529)) $generated@@529) ($generated@@89 ($generated@@310 ($generated@@285 $generated@@177 $generated@@177) $generated@@529) ($generated@@385 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@193 $generated@@529 ($generated@@385 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@177)) ($generated@@193 $generated@@534 ($generated@@167 $generated@@532 $generated@@533))) (and (= ($generated@@244 ($generated@@310 $generated@@168 $generated@@534)) $generated@@534) ($generated@@89 ($generated@@310 $generated@@168 $generated@@534) ($generated@@167 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@193 $generated@@534 ($generated@@167 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@94 ($generated@@396 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@94 ($generated@@396 $generated@@536) $generated@@535)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@543 T@T) ($generated@@544 T@T) ) (= ($generated@@1 ($generated@@539 $generated@@543 $generated@@544)) 22)) (forall (($generated@@545 T@T) ($generated@@546 T@T) ) (! (= ($generated@@540 ($generated@@539 $generated@@545 $generated@@546)) $generated@@545)
 :pattern ( ($generated@@539 $generated@@545 $generated@@546))
))) (forall (($generated@@547 T@T) ($generated@@548 T@T) ) (! (= ($generated@@541 ($generated@@539 $generated@@547 $generated@@548)) $generated@@548)
 :pattern ( ($generated@@539 $generated@@547 $generated@@548))
))) (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@541 (type $generated@@549))))
(= (type ($generated@@537 $generated@@549 $generated@@550 $generated@@551)) $generated@@552))
 :pattern ( ($generated@@537 $generated@@549 $generated@@550 $generated@@551))
))) (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(let (($generated@@558 (type $generated@@554)))
(= (type ($generated@@542 $generated@@553 $generated@@554 $generated@@555 $generated@@556)) ($generated@@539 $generated@@558 $generated@@557))))
 :pattern ( ($generated@@542 $generated@@553 $generated@@554 $generated@@555 $generated@@556))
))) (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@541 (type $generated@@559))))
 (=> (= (type $generated@@562) $generated@@563) (= ($generated@@537 ($generated@@542 $generated@@559 $generated@@560 $generated@@561 $generated@@562) $generated@@560 $generated@@561) $generated@@562)))
 :weight 0
))) (and (and (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (or (= $generated@@566 $generated@@568) (= ($generated@@537 ($generated@@542 $generated@@565 $generated@@566 $generated@@567 $generated@@564) $generated@@568 $generated@@569) ($generated@@537 $generated@@565 $generated@@568 $generated@@569)))
 :weight 0
)) (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (or (= $generated@@573 $generated@@575) (= ($generated@@537 ($generated@@542 $generated@@571 $generated@@572 $generated@@573 $generated@@570) $generated@@574 $generated@@575) ($generated@@537 $generated@@571 $generated@@574 $generated@@575)))
 :weight 0
))) (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (or true (= ($generated@@537 ($generated@@542 $generated@@577 $generated@@578 $generated@@579 $generated@@576) $generated@@580 $generated@@581) ($generated@@537 $generated@@577 $generated@@580 $generated@@581)))
 :weight 0
)))) (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (= (type ($generated@@538 $generated@@582 $generated@@583 $generated@@584 $generated@@585)) ($generated@@539 $generated@@84 $generated@@4))
 :pattern ( ($generated@@538 $generated@@582 $generated@@583 $generated@@584 $generated@@585))
))))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@70 (type $generated@@591))))
 (=> (and (and (and (and (and (= (type $generated@@586) $generated@@84) (= (type $generated@@587) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@588) ($generated@@69 $generated@@4))) (= (type $generated@@589) $generated@@84)) (= (type $generated@@590) $generated@@84)) (= (type $generated@@591) ($generated@@69 $generated@@592))) (= ($generated@@0 ($generated@@537 ($generated@@538 $generated@@586 $generated@@587 $generated@@588 $generated@@589) $generated@@590 $generated@@591))  (=> (and (not (= $generated@@590 $generated@@586)) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@587 $generated@@590) $generated@@588))) (= $generated@@590 $generated@@589)))))
 :pattern ( ($generated@@537 ($generated@@538 $generated@@586 $generated@@587 $generated@@588 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (= (type ($generated@@593 $generated@@594 $generated@@595 $generated@@596 $generated@@597)) ($generated@@539 $generated@@84 $generated@@4))
 :pattern ( ($generated@@593 $generated@@594 $generated@@595 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@70 (type $generated@@603))))
 (=> (and (and (and (and (and (= (type $generated@@598) $generated@@84) (= (type $generated@@599) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@600) ($generated@@69 $generated@@4))) (= (type $generated@@601) $generated@@84)) (= (type $generated@@602) $generated@@84)) (= (type $generated@@603) ($generated@@69 $generated@@604))) (= ($generated@@0 ($generated@@537 ($generated@@593 $generated@@598 $generated@@599 $generated@@600 $generated@@601) $generated@@602 $generated@@603))  (=> (and (not (= $generated@@602 $generated@@598)) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@599 $generated@@602) $generated@@600))) (= $generated@@602 $generated@@601)))))
 :pattern ( ($generated@@537 ($generated@@593 $generated@@598 $generated@@599 $generated@@600 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@67) (= (type $generated@@606) $generated@@67)) (and (= ($generated@@77 ($generated@@167 $generated@@605 $generated@@606)) $generated@@63) (= ($generated@@182 ($generated@@167 $generated@@605 $generated@@606)) $generated@@64)))
 :pattern ( ($generated@@167 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@168) (= ($generated@@520 ($generated@@244 $generated@@607)) ($generated@@521 $generated@@607)))
 :pattern ( ($generated@@520 ($generated@@244 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@177) ($generated@@193 $generated@@608 ($generated@@150 0))) (and (= ($generated@@244 ($generated@@310 $generated@@2 $generated@@608)) $generated@@608) ($generated@@89 ($generated@@310 ($generated@@83 $generated@@177 $generated@@4) $generated@@608) ($generated@@150 0))))
 :pattern ( ($generated@@193 $generated@@608 ($generated@@150 0)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@177) (= (type $generated@@610) $generated@@67)) ($generated@@193 $generated@@609 ($generated@@209 $generated@@610))) (and (= ($generated@@244 ($generated@@310 ($generated@@83 $generated@@177 $generated@@4) $generated@@609)) $generated@@609) ($generated@@89 ($generated@@310 ($generated@@83 $generated@@177 $generated@@4) $generated@@609) ($generated@@209 $generated@@610))))
 :pattern ( ($generated@@193 $generated@@609 ($generated@@209 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@177) (= (type $generated@@612) $generated@@67)) ($generated@@193 $generated@@611 ($generated@@214 $generated@@612))) (and (= ($generated@@244 ($generated@@310 ($generated@@83 $generated@@177 $generated@@4) $generated@@611)) $generated@@611) ($generated@@89 ($generated@@310 ($generated@@83 $generated@@177 $generated@@4) $generated@@611) ($generated@@214 $generated@@612))))
 :pattern ( ($generated@@193 $generated@@611 ($generated@@214 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@177) (= (type $generated@@614) $generated@@67)) ($generated@@193 $generated@@613 ($generated@@184 $generated@@614))) (and (= ($generated@@244 ($generated@@310 ($generated@@83 $generated@@177 $generated@@2) $generated@@613)) $generated@@613) ($generated@@89 ($generated@@310 ($generated@@83 $generated@@177 $generated@@2) $generated@@613) ($generated@@184 $generated@@614))))
 :pattern ( ($generated@@193 $generated@@613 ($generated@@184 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@177) (= (type $generated@@616) $generated@@67)) ($generated@@193 $generated@@615 ($generated@@469 $generated@@616))) (and (= ($generated@@244 ($generated@@310 ($generated@@238 $generated@@177) $generated@@615)) $generated@@615) ($generated@@89 ($generated@@310 ($generated@@238 $generated@@177) $generated@@615) ($generated@@469 $generated@@616))))
 :pattern ( ($generated@@193 $generated@@615 ($generated@@469 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@83 $generated@@177 $generated@@2)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@617 ($generated@@184 $generated@@618) $generated@@619) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@177) (< 0 ($generated ($generated@@94 $generated@@617 $generated@@620)))) ($generated@@224 $generated@@620 $generated@@618 $generated@@619))
 :pattern ( ($generated@@94 $generated@@617 $generated@@620))
))))
 :pattern ( ($generated@@91 $generated@@617 ($generated@@184 $generated@@618) $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@168) (= (type $generated@@622) $generated@@67)) (= (type $generated@@623) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@87 $generated@@623) (and ($generated@@166 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@67) ($generated@@91 $generated@@621 ($generated@@167 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@91 $generated@@621 ($generated@@167 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@224 ($generated@@175 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@224 ($generated@@175 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@168) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@87 $generated@@627) (and ($generated@@166 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@67) ($generated@@91 $generated@@625 ($generated@@167 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@91 $generated@@625 ($generated@@167 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@224 ($generated@@176 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@224 ($generated@@176 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@177) (= (type $generated@@630) $generated@@177)) (= ($generated@@192 ($generated@@220 $generated@@629) ($generated@@220 $generated@@630)) ($generated@@220 ($generated@@192 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@192 ($generated@@220 $generated@@629) ($generated@@220 $generated@@630)))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@244 ($generated@@8 ($generated@@92 $generated@@631))) ($generated@@220 ($generated@@244 ($generated@@8 $generated@@631))))
 :pattern ( ($generated@@244 ($generated@@8 ($generated@@92 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ) (! (= ($generated@@244 ($generated@@220 $generated@@632)) ($generated@@220 ($generated@@244 $generated@@632)))
 :pattern ( ($generated@@244 ($generated@@220 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@239 (type $generated@@633))))
 (=> (and (= (type $generated@@633) ($generated@@238 $generated@@634)) (= ($generated@@237 $generated@@633) 0)) (= $generated@@633 ($generated@@236 $generated@@634))))
 :pattern ( ($generated@@237 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 (type $generated@@636)))
 (=> (and (and (= (type $generated@@635) ($generated@@83 $generated@@638 $generated@@2)) (= (type $generated@@637) $generated@@2)) (<= 0 ($generated $generated@@637))) (= ($generated@@259 ($generated@@98 $generated@@635 $generated@@636 $generated@@637)) (+ (- ($generated@@259 $generated@@635) ($generated ($generated@@94 $generated@@635 $generated@@636))) ($generated $generated@@637)))))
 :pattern ( ($generated@@259 ($generated@@98 $generated@@635 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@640) $generated@@2)) ($generated@@91 $generated@@640 $generated@@46 $generated@@639))
 :pattern ( ($generated@@91 $generated@@640 $generated@@46 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@642) $generated@@3)) ($generated@@91 $generated@@642 $generated@@47 $generated@@641))
 :pattern ( ($generated@@91 $generated@@642 $generated@@47 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@644) $generated@@4)) ($generated@@91 $generated@@644 $generated@@44 $generated@@643))
 :pattern ( ($generated@@91 $generated@@644 $generated@@44 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@646) $generated@@425)) ($generated@@91 $generated@@646 $generated@@45 $generated@@645))
 :pattern ( ($generated@@91 $generated@@646 $generated@@45 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@648) $generated@@177)) ($generated@@91 $generated@@648 $generated@@48 $generated@@647))
 :pattern ( ($generated@@91 $generated@@648 $generated@@48 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@238 $generated@@177)) (= (type $generated@@650) $generated@@67)) (= ($generated@@89 $generated@@649 ($generated@@469 $generated@@650)) (forall (($generated@@651 Int) ) (!  (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@237 $generated@@649))) ($generated@@193 ($generated@@470 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@470 $generated@@649 $generated@@651))
))))
 :pattern ( ($generated@@89 $generated@@649 ($generated@@469 $generated@@650)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 Int) ) (!  (=> (= (type $generated@@653) ($generated@@238 $generated@@177)) (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@237 $generated@@653))) (< ($generated@@521 ($generated@@310 $generated@@168 ($generated@@470 $generated@@653 $generated@@654))) ($generated@@652 $generated@@653))))
 :pattern ( ($generated@@521 ($generated@@310 $generated@@168 ($generated@@470 $generated@@653 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) ($generated@@267 $generated@@177 $generated@@177)) (= (type $generated@@656) $generated@@67)) (= (type $generated@@657) $generated@@67)) ($generated@@89 $generated@@655 ($generated@@377 $generated@@656 $generated@@657))) (and (and ($generated@@89 ($generated@@265 $generated@@655) ($generated@@209 $generated@@656)) ($generated@@89 ($generated@@320 $generated@@655) ($generated@@209 $generated@@657))) ($generated@@89 ($generated@@351 $generated@@655) ($generated@@209 ($generated@@167 $generated@@656 $generated@@657)))))
 :pattern ( ($generated@@89 $generated@@655 ($generated@@377 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@285 $generated@@177 $generated@@177)) (= (type $generated@@659) $generated@@67)) (= (type $generated@@660) $generated@@67)) ($generated@@89 $generated@@658 ($generated@@385 $generated@@659 $generated@@660))) (and (and ($generated@@89 ($generated@@283 $generated@@658) ($generated@@214 $generated@@659)) ($generated@@89 ($generated@@331 $generated@@658) ($generated@@214 $generated@@660))) ($generated@@89 ($generated@@359 $generated@@658) ($generated@@214 ($generated@@167 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@89 $generated@@658 ($generated@@385 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@2) ($generated@@89 $generated@@661 $generated@@46))
 :pattern ( ($generated@@89 $generated@@661 $generated@@46))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@3) ($generated@@89 $generated@@662 $generated@@47))
 :pattern ( ($generated@@89 $generated@@662 $generated@@47))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@4) ($generated@@89 $generated@@663 $generated@@44))
 :pattern ( ($generated@@89 $generated@@663 $generated@@44))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@425) ($generated@@89 $generated@@664 $generated@@45))
 :pattern ( ($generated@@89 $generated@@664 $generated@@45))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@177) ($generated@@89 $generated@@665 $generated@@48))
 :pattern ( ($generated@@89 $generated@@665 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () Bool)
(declare-fun $generated@@670 () T@U)
(assert  (and (and (and (= (type $generated@@666) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@667) $generated@@84)) (= (type $generated@@668) ($generated@@539 $generated@@84 $generated@@4))) (= (type $generated@@670) ($generated@@539 $generated@@84 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@671  (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95))))) (=> (=> ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)))) (=> (= (ControlFlow 0 7) (- 0 6)) (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@666 $generated@@667)))))))
(let (($generated@@672  (=> (and (and (= $generated@@668 ($generated@@593 $generated@@88 $generated@@666 $generated@@60 $generated@@667)) (= $generated@@669 ($generated@@0 ($generated@@537 $generated@@670 $generated@@667 $generated@@95)))) (and (= ($generated@@146 $generated@@666 $generated@@667) (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8))) ($generated@@89 ($generated@@11 ($generated@@146 $generated@@666 $generated@@667)) $generated@@44))) (and (=> (= (ControlFlow 0 9) (- 0 10)) $generated@@669) (=> $generated@@669 (=> (= (ControlFlow 0 9) 7) $generated@@671))))))
(let (($generated@@673 true))
(let (($generated@@674  (=> (and (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@666 $generated@@667)) (= (ControlFlow 0 3) 1)) $generated@@673)))
(let (($generated@@675  (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8)) (=> (and (and ($generated@@91 $generated@@667 $generated@@158 $generated@@666) ($generated@@86 $generated@@666 $generated@@667)) (and ($generated@@82 $generated@@666 $generated@@667) (= (ControlFlow 0 2) 1))) $generated@@673))))
(let (($generated@@676  (=> (=> ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)))) (and (=> (= (ControlFlow 0 5) 2) $generated@@675) (=> (= (ControlFlow 0 5) 3) $generated@@674)))))
(let (($generated@@677  (=> (and (and ($generated@@91 $generated@@667 $generated@@158 $generated@@666) ($generated@@86 $generated@@666 $generated@@667)) (and ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95))))) (and (=> (= (ControlFlow 0 4) 2) $generated@@675) (=> (= (ControlFlow 0 4) 3) $generated@@674)))))
(let (($generated@@678  (=> (= $generated@@670 ($generated@@538 $generated@@88 $generated@@666 $generated@@60 $generated@@667)) (and (and (=> (= (ControlFlow 0 11) 9) $generated@@672) (=> (= (ControlFlow 0 11) 4) $generated@@677)) (=> (= (ControlFlow 0 11) 5) $generated@@676)))))
(let (($generated@@679  (=> (and ($generated@@87 $generated@@666) ($generated@@507 $generated@@666)) (=> (and (and (not (= $generated@@667 $generated@@88)) (and ($generated@@89 $generated@@667 $generated@@90) ($generated@@91 $generated@@667 $generated@@90 $generated@@666))) (and (= 1 $generated@@81) (= (ControlFlow 0 12) 11))) $generated@@678))))
$generated@@679))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@T T@U T@U) T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@T)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@213 (T@U T@U T@U) Bool)
(declare-fun $generated@@219 (T@U) T@U)
(declare-fun $generated@@225 (T@T) T@U)
(declare-fun $generated@@226 (T@U) Int)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@T) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@T T@T) T@U)
(declare-fun $generated@@256 (T@T T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 (T@T T@T) T@U)
(declare-fun $generated@@274 (T@T T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@299 (T@T T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@366 (T@U T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@382 () Int)
(declare-fun $generated@@383 (T@U T@U) Int)
(declare-fun $generated@@384 (T@U T@U) Bool)
(declare-fun $generated@@390 (T@T) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@419 () T@T)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@462 (T@U Int) T@U)
(declare-fun $generated@@471 (T@U) Int)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@516 (T@U T@U T@U) T@U)
(declare-fun $generated@@517 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@518 (T@T T@T) T@T)
(declare-fun $generated@@519 (T@T) T@T)
(declare-fun $generated@@520 (T@T) T@T)
(declare-fun $generated@@521 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@572 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@586 (T@U) Bool)
(declare-fun $generated@@639 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 12)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@70 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@70 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@67)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@141) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@139 $generated@@140 $generated@@141)) (forall (($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@84) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@140 $generated@@142) $generated@@60))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@141 $generated@@142) $generated@@60))
)))
 :pattern ( ($generated@@139 $generated@@140 $generated@@141))
)))
(assert  (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@84)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@84) (= (type $generated@@146) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@145 $generated@@143 $generated@@146)  (or (= $generated@@145 $generated@@144) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@145 $generated@@143 $generated@@146))
)))
(assert  (and (= (type $generated@@147) ($generated@@69 $generated@@2)) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@151)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@153) $generated@@84)) (and ($generated@@148 $generated@@152) (and (not (= $generated@@153 $generated@@144)) (= ($generated@@149 $generated@@153) $generated@@143)))) ($generated@@150 ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147) $generated@@46))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@152 $generated@@153) $generated@@147))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@150 $generated@@154 ($generated@@82 0)))
 :pattern ( ($generated@@150 $generated@@154 ($generated@@82 0)))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@67) (= (type $generated@@161) $generated@@67)) (= (type $generated@@162) $generated@@157)) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 16) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@157) (= (type $generated@@170) $generated@@157)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@73)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (= ($generated@@171 $generated@@143) $generated@@65))
(assert (= (type $generated@@173) $generated@@67))
(assert (= ($generated@@171 $generated@@173) $generated@@65))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@67)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@178) $generated@@67)) ($generated@@150 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@150 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ) (!  (=> (= (type $generated@@179) $generated@@84) (= ($generated@@150 $generated@@179 $generated@@143)  (or (= $generated@@179 $generated@@144) (= ($generated@@149 $generated@@179) $generated@@143))))
 :pattern ( ($generated@@150 $generated@@179 $generated@@143))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (= (type $generated@@180) $generated@@84) (= (type $generated@@181) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@180 $generated@@173 $generated@@181) ($generated@@81 $generated@@180 $generated@@143 $generated@@181)))
 :pattern ( ($generated@@81 $generated@@180 $generated@@173 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@157)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@67) (= (type $generated@@187) $generated@@67)) (= (type $generated@@188) $generated@@166)) (= (type $generated@@189) $generated@@166)) (= ($generated@@150 ($generated@@182 $generated@@188 $generated@@189) ($generated@@156 $generated@@186 $generated@@187))  (and ($generated@@183 $generated@@188 $generated@@186) ($generated@@183 $generated@@189 $generated@@187))))
 :pattern ( ($generated@@150 ($generated@@182 $generated@@188 $generated@@189) ($generated@@156 $generated@@186 $generated@@187)))
)))
(assert (= ($generated@@76 $generated@@147) 0))
(assert  (and (and (forall (($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@190 $generated@@193 $generated@@194 $generated@@195)) ($generated@@69 $generated@@193))
 :pattern ( ($generated@@190 $generated@@193 $generated@@194 $generated@@195))
)) (= ($generated@@1 $generated@@192) 17)) (= (type $generated@@191) $generated@@192)))
(assert (= ($generated@@190 $generated@@2 $generated@@191 $generated@@66) $generated@@147))
(assert  (not ($generated@@196 $generated@@147)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@157) (= (type $generated@@198) $generated@@157)) (= ($generated@@163 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@163 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@67)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@202) $generated@@67)) (= ($generated@@150 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@166) ($generated@@0 ($generated@@88 $generated@@201 $generated@@203))) ($generated@@183 $generated@@203 $generated@@202))
 :pattern ( ($generated@@88 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@150 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@67)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@207) $generated@@67)) (= ($generated@@150 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@166) ($generated@@0 ($generated@@88 $generated@@206 $generated@@208))) ($generated@@183 $generated@@208 $generated@@207))
 :pattern ( ($generated@@88 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@150 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(= (type ($generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@209 $generated@@212) $generated@@212)
 :pattern ( ($generated@@209 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@214) $generated@@67) (= (type $generated@@215) $generated@@67)) (= (type $generated@@216) $generated@@166)) (= (type $generated@@217) $generated@@166)) (= (type $generated@@218) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@148 $generated@@218)) (= ($generated@@81 ($generated@@182 $generated@@216 $generated@@217) ($generated@@156 $generated@@214 $generated@@215) $generated@@218)  (and ($generated@@213 $generated@@216 $generated@@214 $generated@@218) ($generated@@213 $generated@@217 $generated@@215 $generated@@218))))
 :pattern ( ($generated@@81 ($generated@@182 $generated@@216 $generated@@217) ($generated@@156 $generated@@214 $generated@@215) $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@219 $generated@@220)) $generated@@72)
 :pattern ( ($generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (= (type $generated@@221) $generated@@157) (= ($generated@@155 $generated@@221) (= ($generated@@219 $generated@@221) $generated@@62)))
 :pattern ( ($generated@@155 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@157) ($generated@@155 $generated@@222)) (exists (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (and (and (= (type $generated@@223) $generated@@166) (= (type $generated@@224) $generated@@166)) (= $generated@@222 ($generated@@182 $generated@@223 $generated@@224)))
 :no-pattern (type $generated@@223)
 :no-pattern (type $generated@@224)
 :no-pattern ($generated $generated@@223)
 :no-pattern ($generated@@0 $generated@@223)
 :no-pattern ($generated $generated@@224)
 :no-pattern ($generated@@0 $generated@@224)
)))
 :pattern ( ($generated@@155 $generated@@222))
)))
(assert  (and (and (forall (($generated@@229 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@229)) 18)) (forall (($generated@@230 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@230)) $generated@@230)
 :pattern ( ($generated@@227 $generated@@230))
))) (forall (($generated@@231 T@T) ) (! (= (type ($generated@@225 $generated@@231)) ($generated@@227 $generated@@231))
 :pattern ( ($generated@@225 $generated@@231))
))))
(assert (forall (($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@225 $generated@@232)) 0)
 :pattern ( ($generated@@225 $generated@@232))
)))
(assert ($generated@@196 $generated@@60))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@166)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@67) (= (type $generated@@237) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237) ($generated@@81 $generated@@235 $generated@@236 $generated@@237)))
 :pattern ( ($generated@@213 ($generated@@233 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@238) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@239) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@240) $generated@@166)) (= (type $generated@@241) $generated@@67)) ($generated@@139 $generated@@238 $generated@@239)) ($generated@@213 $generated@@240 $generated@@241 $generated@@238)) ($generated@@213 $generated@@240 $generated@@241 $generated@@239))
 :pattern ( ($generated@@139 $generated@@238 $generated@@239) ($generated@@213 $generated@@240 $generated@@241 $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@242) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@243) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@245) $generated@@67)) ($generated@@139 $generated@@242 $generated@@243)) ($generated@@81 $generated@@244 $generated@@245 $generated@@242)) ($generated@@81 $generated@@244 $generated@@245 $generated@@243))
 :pattern ( ($generated@@139 $generated@@242 $generated@@243) ($generated@@81 $generated@@244 $generated@@245 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@247) $generated@@84)) (=> (and (and ($generated@@148 $generated@@246) (and (not (= $generated@@247 $generated@@144)) (= ($generated@@149 $generated@@247) $generated@@143))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@246 $generated@@247) $generated@@60))) ($generated@@81 ($generated@@90 ($generated@@88 $generated@@246 $generated@@247) $generated@@147) $generated@@46 $generated@@246)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@246 $generated@@247) $generated@@147))
)))
(assert (forall (($generated@@250 T@T) ) (! (= (type ($generated@@249 $generated@@250)) ($generated@@83 $generated@@250 $generated@@2))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@86 (type $generated@@251))))
 (=> (= (type $generated@@251) ($generated@@83 $generated@@252 $generated@@2)) (and (= (= ($generated@@248 $generated@@251) 0) (= $generated@@251 ($generated@@249 $generated@@252))) (=> (not (= ($generated@@248 $generated@@251) 0)) (exists (($generated@@253 T@U) ) (!  (and (= (type $generated@@253) $generated@@252) (< 0 ($generated ($generated@@88 $generated@@251 $generated@@253))))
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
))))))
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert  (and (and (and (and (forall (($generated@@259 T@T) ($generated@@260 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@259 $generated@@260)) 19)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@256 $generated@@263 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@256 $generated@@263 $generated@@264))
))) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@257 (type $generated@@265))))
(= (type ($generated@@254 $generated@@265)) ($generated@@83 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@265))
))) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= (type ($generated@@255 $generated@@267 $generated@@268)) ($generated@@256 $generated@@267 $generated@@268))
 :pattern ( ($generated@@255 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (let (($generated@@271 (type $generated@@269)))
 (not ($generated@@0 ($generated@@88 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269))))
 :pattern ( (let (($generated@@271 (type $generated@@269)))
($generated@@88 ($generated@@254 ($generated@@255 $generated@@271 $generated@@270)) $generated@@269)))
)))
(assert  (and (and (and (and (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@277 $generated@@278)) 20)) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@279 $generated@@280)) $generated@@279)
 :pattern ( ($generated@@274 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@274 $generated@@281 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@274 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@275 (type $generated@@283))))
(= (type ($generated@@272 $generated@@283)) ($generated@@83 $generated@@284 $generated@@4)))
 :pattern ( ($generated@@272 $generated@@283))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= (type ($generated@@273 $generated@@285 $generated@@286)) ($generated@@274 $generated@@285 $generated@@286))
 :pattern ( ($generated@@273 $generated@@285 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@T) ) (! (let (($generated@@289 (type $generated@@287)))
 (not ($generated@@0 ($generated@@88 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287))))
 :pattern ( (let (($generated@@289 (type $generated@@287)))
($generated@@88 ($generated@@272 ($generated@@273 $generated@@289 $generated@@288)) $generated@@287)))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@292) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@290 $generated@@291 $generated@@292)) (and ($generated@@139 $generated@@291 $generated@@292) (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@70 (type $generated@@294))))
 (=> (and (and (= (type $generated@@293) $generated@@84) (= (type $generated@@294) ($generated@@69 $generated@@295))) (not ($generated@@196 $generated@@294))) (= ($generated@@90 ($generated@@88 $generated@@291 $generated@@293) $generated@@294) ($generated@@90 ($generated@@88 $generated@@292 $generated@@293) $generated@@294))))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@292 $generated@@293) $generated@@294))
))))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@86 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@83 $generated@@297 $generated@@2)) (= ($generated@@175 $generated@@296) (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@297) (and (<= 0 ($generated ($generated@@88 $generated@@296 $generated@@298))) (<= ($generated ($generated@@88 $generated@@296 $generated@@298)) ($generated@@248 $generated@@296))))
 :pattern ( ($generated@@88 $generated@@296 $generated@@298))
)))))
 :pattern ( ($generated@@175 $generated@@296))
)))
(assert (forall (($generated@@300 T@T) ($generated@@301 T@U) ) (! (= (type ($generated@@299 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@166) ($generated@@183 $generated@@302 $generated@@143)) (and (= ($generated@@233 ($generated@@299 $generated@@84 $generated@@302)) $generated@@302) ($generated@@150 ($generated@@299 $generated@@84 $generated@@302) $generated@@143)))
 :pattern ( ($generated@@183 $generated@@302 $generated@@143))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@166) ($generated@@183 $generated@@303 $generated@@173)) (and (= ($generated@@233 ($generated@@299 $generated@@84 $generated@@303)) $generated@@303) ($generated@@150 ($generated@@299 $generated@@84 $generated@@303) $generated@@173)))
 :pattern ( ($generated@@183 $generated@@303 $generated@@173))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@84) (= ($generated@@150 $generated@@304 $generated@@173)  (and ($generated@@150 $generated@@304 $generated@@143) (not (= $generated@@304 $generated@@144)))))
 :pattern ( ($generated@@150 $generated@@304 $generated@@173))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@258 (type $generated@@305))))
(let (($generated@@307 ($generated@@257 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@256 $generated@@307 $generated@@306)) (or (= $generated@@305 ($generated@@255 $generated@@307 $generated@@306)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) ($generated@@0 ($generated@@88 ($generated@@254 $generated@@305) $generated@@308)))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@254 $generated@@305))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@258 (type $generated@@310))))
(= (type ($generated@@309 $generated@@310)) ($generated@@83 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@258 (type $generated@@312))))
(let (($generated@@314 ($generated@@257 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@256 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@255 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@313) ($generated@@0 ($generated@@88 ($generated@@309 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@276 (type $generated@@316))))
(let (($generated@@318 ($generated@@275 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@274 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@273 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@88 ($generated@@272 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@272 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@276 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@83 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@276 (type $generated@@323))))
(let (($generated@@325 ($generated@@275 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@274 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@273 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@328) $generated@@67)) (= ($generated@@150 $generated@@327 ($generated@@174 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@327 $generated@@329)))) ($generated@@183 $generated@@329 $generated@@328))
 :pattern ( ($generated@@88 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@150 $generated@@327 ($generated@@174 $generated@@328)))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (= (type $generated@@330) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@331) $generated@@67)) (= (type $generated@@332) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@330 ($generated@@199 $generated@@331) $generated@@332) (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@166) ($generated@@0 ($generated@@88 $generated@@330 $generated@@333))) ($generated@@213 $generated@@333 $generated@@331 $generated@@332))
 :pattern ( ($generated@@88 $generated@@330 $generated@@333))
))))
 :pattern ( ($generated@@81 $generated@@330 ($generated@@199 $generated@@331) $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@83 $generated@@166 $generated@@4)) (= (type $generated@@335) $generated@@67)) (= (type $generated@@336) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@334 ($generated@@204 $generated@@335) $generated@@336) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@166) ($generated@@0 ($generated@@88 $generated@@334 $generated@@337))) ($generated@@213 $generated@@337 $generated@@335 $generated@@336))
 :pattern ( ($generated@@88 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@81 $generated@@334 ($generated@@204 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= ($generated ($generated@@88 ($generated@@249 $generated@@339) $generated@@338)) 0))
 :pattern ( (let (($generated@@339 (type $generated@@338)))
($generated@@88 ($generated@@249 $generated@@339) $generated@@338)))
)))
(assert  (and (forall (($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@342)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@340 $generated@@342))
)) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@258 (type $generated@@343))))
(let (($generated@@345 ($generated@@257 (type $generated@@343))))
(= (type ($generated@@341 $generated@@343)) ($generated@@83 $generated@@345 $generated@@344))))
 :pattern ( ($generated@@341 $generated@@343))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@256 $generated@@166 $generated@@166)) (= (type $generated@@347) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@340 $generated@@346) $generated@@347))  (and ($generated@@0 ($generated@@88 ($generated@@254 $generated@@346) ($generated@@164 ($generated@@299 $generated@@157 $generated@@347)))) (= ($generated@@88 ($generated@@341 $generated@@346) ($generated@@164 ($generated@@299 $generated@@157 $generated@@347))) ($generated@@165 ($generated@@299 $generated@@157 $generated@@347))))))
 :pattern ( ($generated@@88 ($generated@@340 $generated@@346) $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) ($generated@@83 $generated@@166 $generated@@4))
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@276 (type $generated@@351))))
(let (($generated@@353 ($generated@@275 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351)) ($generated@@83 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@274 $generated@@166 $generated@@166)) (= (type $generated@@355) $generated@@166)) (= ($generated@@0 ($generated@@88 ($generated@@348 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@88 ($generated@@272 $generated@@354) ($generated@@164 ($generated@@299 $generated@@157 $generated@@355)))) (= ($generated@@88 ($generated@@349 $generated@@354) ($generated@@164 ($generated@@299 $generated@@157 $generated@@355))) ($generated@@165 ($generated@@299 $generated@@157 $generated@@355))))))
 :pattern ( ($generated@@88 ($generated@@348 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(let (($generated@@359 ($generated@@257 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@256 $generated@@359 $generated@@358)) (= ($generated@@0 ($generated@@88 ($generated@@309 $generated@@356) $generated@@357)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) (and ($generated@@0 ($generated@@88 ($generated@@254 $generated@@356) $generated@@360)) (= $generated@@357 ($generated@@88 ($generated@@341 $generated@@356) $generated@@360))))
 :pattern ( ($generated@@88 ($generated@@254 $generated@@356) $generated@@360))
 :pattern ( ($generated@@88 ($generated@@341 $generated@@356) $generated@@360))
))))))
 :pattern ( ($generated@@88 ($generated@@309 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(let (($generated@@364 ($generated@@275 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@274 $generated@@364 $generated@@363)) (= ($generated@@0 ($generated@@88 ($generated@@320 $generated@@361) $generated@@362)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) (and ($generated@@0 ($generated@@88 ($generated@@272 $generated@@361) $generated@@365)) (= $generated@@362 ($generated@@88 ($generated@@349 $generated@@361) $generated@@365))))
 :pattern ( ($generated@@88 ($generated@@272 $generated@@361) $generated@@365))
 :pattern ( ($generated@@88 ($generated@@349 $generated@@361) $generated@@365))
))))))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@367 $generated@@368)) $generated@@67)
 :pattern ( ($generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (and (= (type $generated@@369) ($generated@@256 $generated@@166 $generated@@166)) (= (type $generated@@370) $generated@@67)) (= (type $generated@@371) $generated@@67)) (= (type $generated@@372) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@254 $generated@@369) $generated@@373))) (and ($generated@@213 ($generated@@88 ($generated@@341 $generated@@369) $generated@@373) $generated@@371 $generated@@372) ($generated@@213 $generated@@373 $generated@@370 $generated@@372)))
 :pattern ( ($generated@@88 ($generated@@341 $generated@@369) $generated@@373))
 :pattern ( ($generated@@88 ($generated@@254 $generated@@369) $generated@@373))
))))
 :pattern ( ($generated@@81 $generated@@369 ($generated@@366 $generated@@370 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@67)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@274 $generated@@166 $generated@@166)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) $generated@@67)) (= (type $generated@@380) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@272 $generated@@377) $generated@@381))) (and ($generated@@213 ($generated@@88 ($generated@@349 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@213 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@88 ($generated@@349 $generated@@377) $generated@@381))
 :pattern ( ($generated@@88 ($generated@@272 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@81 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert  (=> (<= 0 $generated@@382) (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@386) $generated@@84)) (or ($generated@@384 $generated@@385 $generated@@386) (and (not (= 0 $generated@@382)) (and ($generated@@148 $generated@@385) (and (not (= $generated@@386 $generated@@144)) (and ($generated@@150 $generated@@386 $generated@@173) ($generated@@81 $generated@@386 $generated@@173 $generated@@385))))))) (= ($generated@@383 $generated@@385 $generated@@386) ($generated ($generated@@90 ($generated@@88 $generated@@385 $generated@@386) $generated@@147))))
 :pattern ( ($generated@@383 $generated@@385 $generated@@386) ($generated@@148 $generated@@385))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@387) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@388) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@389) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@387 $generated@@389))) (and ($generated@@139 $generated@@387 $generated@@388) ($generated@@139 $generated@@388 $generated@@389))) ($generated@@139 $generated@@387 $generated@@389))
 :pattern ( ($generated@@139 $generated@@387 $generated@@388) ($generated@@139 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@T) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@83 $generated@@391 $generated@@4))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@276 (type $generated@@392))))
(let (($generated@@394 ($generated@@275 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@274 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@273 $generated@@394 $generated@@393)) (= ($generated@@272 $generated@@392) ($generated@@390 $generated@@394))))))
 :pattern ( ($generated@@272 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@276 (type $generated@@395))))
(let (($generated@@397 ($generated@@275 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@274 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@273 $generated@@397 $generated@@396)) (= ($generated@@320 $generated@@395) ($generated@@390 $generated@@396))))))
 :pattern ( ($generated@@320 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@276 (type $generated@@398))))
(let (($generated@@400 ($generated@@275 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@274 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@273 $generated@@400 $generated@@399)) (= ($generated@@348 $generated@@398) ($generated@@390 $generated@@166))))))
 :pattern ( ($generated@@348 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@258 (type $generated@@401))))
(let (($generated@@403 ($generated@@257 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@256 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@255 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@166) (= (type $generated@@405) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@340 $generated@@401) ($generated@@233 ($generated@@182 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@340 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@276 (type $generated@@406))))
(let (($generated@@408 ($generated@@275 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@274 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@273 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@166) (= (type $generated@@410) $generated@@166)) ($generated@@0 ($generated@@88 ($generated@@348 $generated@@406) ($generated@@233 ($generated@@182 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@348 $generated@@406))
)))
(assert (forall (($generated@@412 T@U) ) (! (= (type ($generated@@411 $generated@@412)) $generated@@192)
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@T) ) (!  (=> (and (= (type $generated@@413) $generated@@192) (= (type $generated@@414) $generated@@71)) (and (= ($generated@@411 ($generated@@190 $generated@@415 $generated@@413 $generated@@414)) $generated@@413) (= ($generated@@79 ($generated@@190 $generated@@415 $generated@@413 $generated@@414)) $generated@@414)))
 :pattern ( ($generated@@190 $generated@@415 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@166) ($generated@@183 $generated@@416 $generated@@46)) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@416)) $generated@@416) ($generated@@150 ($generated@@299 $generated@@2 $generated@@416) $generated@@46)))
 :pattern ( ($generated@@183 $generated@@416 $generated@@46))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@166) ($generated@@183 $generated@@417 $generated@@47)) (and (= ($generated@@233 ($generated@@299 $generated@@3 $generated@@417)) $generated@@417) ($generated@@150 ($generated@@299 $generated@@3 $generated@@417) $generated@@47)))
 :pattern ( ($generated@@183 $generated@@417 $generated@@47))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@166) ($generated@@183 $generated@@418 $generated@@44)) (and (= ($generated@@233 ($generated@@299 $generated@@4 $generated@@418)) $generated@@418) ($generated@@150 ($generated@@299 $generated@@4 $generated@@418) $generated@@44)))
 :pattern ( ($generated@@183 $generated@@418 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@419) 21))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@166) ($generated@@183 $generated@@420 $generated@@45)) (and (= ($generated@@233 ($generated@@299 $generated@@419 $generated@@420)) $generated@@420) ($generated@@150 ($generated@@299 $generated@@419 $generated@@420) $generated@@45)))
 :pattern ( ($generated@@183 $generated@@420 $generated@@45))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (= (type $generated@@422) $generated@@67) (= ($generated@@183 ($generated@@233 $generated@@421) $generated@@422) ($generated@@150 $generated@@421 $generated@@422)))
 :pattern ( ($generated@@183 ($generated@@233 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@86 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@83 $generated@@424 $generated@@2)) (<= 0 ($generated@@248 $generated@@423))))
 :pattern ( ($generated@@248 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@228 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@227 $generated@@426)) (<= 0 ($generated@@226 $generated@@425))))
 :pattern ( ($generated@@226 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@67) (= (type $generated@@430) $generated@@67)) (= ($generated@@427 ($generated@@366 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@366 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@366 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@366 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@77 ($generated@@366 $generated@@435 $generated@@436)) $generated@@58))
 :pattern ( ($generated@@366 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@67)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) $generated@@67)) (= ($generated@@437 ($generated@@374 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@374 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@374 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@374 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@77 ($generated@@374 $generated@@445 $generated@@446)) $generated@@59))
 :pattern ( ($generated@@374 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@166) (= (type $generated@@448) $generated@@166)) (= ($generated@@219 ($generated@@182 $generated@@447 $generated@@448)) $generated@@62))
 :pattern ( ($generated@@182 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@156 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@156 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@156 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@156 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@166) (= (type $generated@@458) $generated@@166)) (= ($generated@@164 ($generated@@182 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@182 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@166) (= (type $generated@@460) $generated@@166)) (= ($generated@@165 ($generated@@182 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@182 $generated@@459 $generated@@460))
)))
(assert  (and (forall (($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@463))
)) (forall (($generated@@464 T@U) ($generated@@465 Int) ) (! (let (($generated@@466 ($generated@@228 (type $generated@@464))))
(= (type ($generated@@462 $generated@@464 $generated@@465)) $generated@@466))
 :pattern ( ($generated@@462 $generated@@464 $generated@@465))
))))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@227 $generated@@166)) (= (type $generated@@468) $generated@@67)) (= (type $generated@@469) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@467 ($generated@@461 $generated@@468) $generated@@469) (forall (($generated@@470 Int) ) (!  (=> (and (<= 0 $generated@@470) (< $generated@@470 ($generated@@226 $generated@@467))) ($generated@@213 ($generated@@462 $generated@@467 $generated@@470) $generated@@468 $generated@@469))
 :pattern ( ($generated@@462 $generated@@467 $generated@@470))
))))
 :pattern ( ($generated@@81 $generated@@467 ($generated@@461 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@472 Int) ) (! (= ($generated@@471 ($generated@@82 $generated@@472)) $generated@@472)
 :pattern ( ($generated@@82 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@67) (= ($generated@@473 ($generated@@199 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@199 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@67) (= ($generated@@77 ($generated@@199 $generated@@476)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@67) (= ($generated@@477 ($generated@@204 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@204 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@67) (= ($generated@@77 ($generated@@204 $generated@@480)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@481 ($generated@@174 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@174 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@77 ($generated@@174 $generated@@484)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@461 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@461 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@77 ($generated@@461 $generated@@488)) $generated@@57))
 :pattern ( ($generated@@461 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(= ($generated@@299 $generated@@490 ($generated@@233 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@233 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@256 $generated@@166 $generated@@166)) (= (type $generated@@492) $generated@@67)) (= (type $generated@@493) $generated@@67)) (= ($generated@@150 $generated@@491 ($generated@@366 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@254 $generated@@491) $generated@@494))) (and ($generated@@183 ($generated@@88 ($generated@@341 $generated@@491) $generated@@494) $generated@@493) ($generated@@183 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@88 ($generated@@341 $generated@@491) $generated@@494))
 :pattern ( ($generated@@88 ($generated@@254 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@150 $generated@@491 ($generated@@366 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@274 $generated@@166 $generated@@166)) (= (type $generated@@496) $generated@@67)) (= (type $generated@@497) $generated@@67)) (= ($generated@@150 $generated@@495 ($generated@@374 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@166) ($generated@@0 ($generated@@88 ($generated@@272 $generated@@495) $generated@@498))) (and ($generated@@183 ($generated@@88 ($generated@@349 $generated@@495) $generated@@498) $generated@@497) ($generated@@183 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@88 ($generated@@349 $generated@@495) $generated@@498))
 :pattern ( ($generated@@88 ($generated@@272 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@150 $generated@@495 ($generated@@374 $generated@@496 $generated@@497)))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@166) (= (type $generated@@502) $generated@@166)) (< ($generated@@499 $generated@@501) ($generated@@500 ($generated@@182 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@182 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@166) (= (type $generated@@504) $generated@@166)) (< ($generated@@499 $generated@@504) ($generated@@500 ($generated@@182 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@182 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@166) (= (type $generated@@506) $generated@@67)) (= (type $generated@@507) $generated@@67)) ($generated@@183 $generated@@505 ($generated@@366 $generated@@506 $generated@@507))) (and (= ($generated@@233 ($generated@@299 ($generated@@256 $generated@@166 $generated@@166) $generated@@505)) $generated@@505) ($generated@@150 ($generated@@299 ($generated@@256 $generated@@166 $generated@@166) $generated@@505) ($generated@@366 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@183 $generated@@505 ($generated@@366 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@166) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) $generated@@67)) ($generated@@183 $generated@@508 ($generated@@374 $generated@@509 $generated@@510))) (and (= ($generated@@233 ($generated@@299 ($generated@@274 $generated@@166 $generated@@166) $generated@@508)) $generated@@508) ($generated@@150 ($generated@@299 ($generated@@274 $generated@@166 $generated@@166) $generated@@508) ($generated@@374 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@183 $generated@@508 ($generated@@374 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) $generated@@67) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) $generated@@166)) ($generated@@183 $generated@@513 ($generated@@156 $generated@@511 $generated@@512))) (and (= ($generated@@233 ($generated@@299 $generated@@157 $generated@@513)) $generated@@513) ($generated@@150 ($generated@@299 $generated@@157 $generated@@513) ($generated@@156 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@183 $generated@@513 ($generated@@156 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
 (not ($generated@@0 ($generated@@88 ($generated@@390 $generated@@515) $generated@@514))))
 :pattern ( (let (($generated@@515 (type $generated@@514)))
($generated@@88 ($generated@@390 $generated@@515) $generated@@514)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@522 T@T) ($generated@@523 T@T) ) (= ($generated@@1 ($generated@@518 $generated@@522 $generated@@523)) 22)) (forall (($generated@@524 T@T) ($generated@@525 T@T) ) (! (= ($generated@@519 ($generated@@518 $generated@@524 $generated@@525)) $generated@@524)
 :pattern ( ($generated@@518 $generated@@524 $generated@@525))
))) (forall (($generated@@526 T@T) ($generated@@527 T@T) ) (! (= ($generated@@520 ($generated@@518 $generated@@526 $generated@@527)) $generated@@527)
 :pattern ( ($generated@@518 $generated@@526 $generated@@527))
))) (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@520 (type $generated@@528))))
(= (type ($generated@@516 $generated@@528 $generated@@529 $generated@@530)) $generated@@531))
 :pattern ( ($generated@@516 $generated@@528 $generated@@529 $generated@@530))
))) (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
(let (($generated@@537 (type $generated@@533)))
(= (type ($generated@@521 $generated@@532 $generated@@533 $generated@@534 $generated@@535)) ($generated@@518 $generated@@537 $generated@@536))))
 :pattern ( ($generated@@521 $generated@@532 $generated@@533 $generated@@534 $generated@@535))
))) (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@520 (type $generated@@538))))
 (=> (= (type $generated@@541) $generated@@542) (= ($generated@@516 ($generated@@521 $generated@@538 $generated@@539 $generated@@540 $generated@@541) $generated@@539 $generated@@540) $generated@@541)))
 :weight 0
))) (and (and (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (or (= $generated@@545 $generated@@547) (= ($generated@@516 ($generated@@521 $generated@@544 $generated@@545 $generated@@546 $generated@@543) $generated@@547 $generated@@548) ($generated@@516 $generated@@544 $generated@@547 $generated@@548)))
 :weight 0
)) (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (or (= $generated@@552 $generated@@554) (= ($generated@@516 ($generated@@521 $generated@@550 $generated@@551 $generated@@552 $generated@@549) $generated@@553 $generated@@554) ($generated@@516 $generated@@550 $generated@@553 $generated@@554)))
 :weight 0
))) (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (or true (= ($generated@@516 ($generated@@521 $generated@@556 $generated@@557 $generated@@558 $generated@@555) $generated@@559 $generated@@560) ($generated@@516 $generated@@556 $generated@@559 $generated@@560)))
 :weight 0
)))) (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (= (type ($generated@@517 $generated@@561 $generated@@562 $generated@@563 $generated@@564)) ($generated@@518 $generated@@84 $generated@@4))
 :pattern ( ($generated@@517 $generated@@561 $generated@@562 $generated@@563 $generated@@564))
))))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@70 (type $generated@@570))))
 (=> (and (and (and (and (and (= (type $generated@@565) $generated@@84) (= (type $generated@@566) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@567) ($generated@@69 $generated@@4))) (= (type $generated@@568) $generated@@84)) (= (type $generated@@569) $generated@@84)) (= (type $generated@@570) ($generated@@69 $generated@@571))) (= ($generated@@0 ($generated@@516 ($generated@@517 $generated@@565 $generated@@566 $generated@@567 $generated@@568) $generated@@569 $generated@@570))  (=> (and (not (= $generated@@569 $generated@@565)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@566 $generated@@569) $generated@@567))) (= $generated@@569 $generated@@568)))))
 :pattern ( ($generated@@516 ($generated@@517 $generated@@565 $generated@@566 $generated@@567 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (= (type ($generated@@572 $generated@@573 $generated@@574 $generated@@575 $generated@@576)) ($generated@@518 $generated@@84 $generated@@4))
 :pattern ( ($generated@@572 $generated@@573 $generated@@574 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@70 (type $generated@@582))))
 (=> (and (and (and (and (and (= (type $generated@@577) $generated@@84) (= (type $generated@@578) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@579) ($generated@@69 $generated@@4))) (= (type $generated@@580) $generated@@84)) (= (type $generated@@581) $generated@@84)) (= (type $generated@@582) ($generated@@69 $generated@@583))) (= ($generated@@0 ($generated@@516 ($generated@@572 $generated@@577 $generated@@578 $generated@@579 $generated@@580) $generated@@581 $generated@@582))  (=> (and (not (= $generated@@581 $generated@@577)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@578 $generated@@581) $generated@@579))) (= $generated@@581 $generated@@580)))))
 :pattern ( ($generated@@516 ($generated@@572 $generated@@577 $generated@@578 $generated@@579 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@67) (= (type $generated@@585) $generated@@67)) (and (= ($generated@@77 ($generated@@156 $generated@@584 $generated@@585)) $generated@@63) (= ($generated@@171 ($generated@@156 $generated@@584 $generated@@585)) $generated@@64)))
 :pattern ( ($generated@@156 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@588) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@589) $generated@@84)) (=> (and (and (and ($generated@@148 $generated@@587) ($generated@@148 $generated@@588)) (and (not (= $generated@@589 $generated@@144)) ($generated@@150 $generated@@589 $generated@@173))) (and ($generated@@586 $generated@@587) ($generated@@139 $generated@@587 $generated@@588))) (=> (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@70 (type $generated@@591))))
 (=> (and (and (= (type $generated@@590) $generated@@84) (= (type $generated@@591) ($generated@@69 $generated@@592))) (and (not (= $generated@@590 $generated@@144)) (= $generated@@590 $generated@@589))) (= ($generated@@90 ($generated@@88 $generated@@587 $generated@@590) $generated@@591) ($generated@@90 ($generated@@88 $generated@@588 $generated@@590) $generated@@591))))
 :no-pattern (type $generated@@590)
 :no-pattern (type $generated@@591)
 :no-pattern ($generated $generated@@590)
 :no-pattern ($generated@@0 $generated@@590)
 :no-pattern ($generated $generated@@591)
 :no-pattern ($generated@@0 $generated@@591)
)) (= ($generated@@383 $generated@@587 $generated@@589) ($generated@@383 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@586 $generated@@587) ($generated@@139 $generated@@587 $generated@@588) ($generated@@383 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@157) (= ($generated@@499 ($generated@@233 $generated@@593)) ($generated@@500 $generated@@593)))
 :pattern ( ($generated@@499 ($generated@@233 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@166) ($generated@@183 $generated@@594 ($generated@@82 0))) (and (= ($generated@@233 ($generated@@299 $generated@@2 $generated@@594)) $generated@@594) ($generated@@150 ($generated@@299 ($generated@@83 $generated@@166 $generated@@4) $generated@@594) ($generated@@82 0))))
 :pattern ( ($generated@@183 $generated@@594 ($generated@@82 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@166) (= (type $generated@@596) $generated@@67)) ($generated@@183 $generated@@595 ($generated@@199 $generated@@596))) (and (= ($generated@@233 ($generated@@299 ($generated@@83 $generated@@166 $generated@@4) $generated@@595)) $generated@@595) ($generated@@150 ($generated@@299 ($generated@@83 $generated@@166 $generated@@4) $generated@@595) ($generated@@199 $generated@@596))))
 :pattern ( ($generated@@183 $generated@@595 ($generated@@199 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@166) (= (type $generated@@598) $generated@@67)) ($generated@@183 $generated@@597 ($generated@@204 $generated@@598))) (and (= ($generated@@233 ($generated@@299 ($generated@@83 $generated@@166 $generated@@4) $generated@@597)) $generated@@597) ($generated@@150 ($generated@@299 ($generated@@83 $generated@@166 $generated@@4) $generated@@597) ($generated@@204 $generated@@598))))
 :pattern ( ($generated@@183 $generated@@597 ($generated@@204 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@166) (= (type $generated@@600) $generated@@67)) ($generated@@183 $generated@@599 ($generated@@174 $generated@@600))) (and (= ($generated@@233 ($generated@@299 ($generated@@83 $generated@@166 $generated@@2) $generated@@599)) $generated@@599) ($generated@@150 ($generated@@299 ($generated@@83 $generated@@166 $generated@@2) $generated@@599) ($generated@@174 $generated@@600))))
 :pattern ( ($generated@@183 $generated@@599 ($generated@@174 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@166) (= (type $generated@@602) $generated@@67)) ($generated@@183 $generated@@601 ($generated@@461 $generated@@602))) (and (= ($generated@@233 ($generated@@299 ($generated@@227 $generated@@166) $generated@@601)) $generated@@601) ($generated@@150 ($generated@@299 ($generated@@227 $generated@@166) $generated@@601) ($generated@@461 $generated@@602))))
 :pattern ( ($generated@@183 $generated@@601 ($generated@@461 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@83 $generated@@166 $generated@@2)) (= (type $generated@@604) $generated@@67)) (= (type $generated@@605) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@603 ($generated@@174 $generated@@604) $generated@@605) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@166) (< 0 ($generated ($generated@@88 $generated@@603 $generated@@606)))) ($generated@@213 $generated@@606 $generated@@604 $generated@@605))
 :pattern ( ($generated@@88 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@81 $generated@@603 ($generated@@174 $generated@@604) $generated@@605))
)))
(assert  (=> (<= 0 $generated@@382) (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@608) $generated@@84)) (or ($generated@@384 $generated@@607 $generated@@608) (and (not (= 0 $generated@@382)) (and ($generated@@148 $generated@@607) (and (not (= $generated@@608 $generated@@144)) (and ($generated@@150 $generated@@608 $generated@@173) ($generated@@81 $generated@@608 $generated@@173 $generated@@607))))))) true)
 :pattern ( ($generated@@383 $generated@@607 $generated@@608))
))))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@157) (= (type $generated@@610) $generated@@67)) (= (type $generated@@611) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@611) (and ($generated@@155 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@67) ($generated@@81 $generated@@609 ($generated@@156 $generated@@610 $generated@@612) $generated@@611))
 :pattern ( ($generated@@81 $generated@@609 ($generated@@156 $generated@@610 $generated@@612) $generated@@611))
))))) ($generated@@213 ($generated@@164 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@213 ($generated@@164 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@157) (= (type $generated@@614) $generated@@67)) (= (type $generated@@615) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@148 $generated@@615) (and ($generated@@155 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@67) ($generated@@81 $generated@@613 ($generated@@156 $generated@@616 $generated@@614) $generated@@615))
 :pattern ( ($generated@@81 $generated@@613 ($generated@@156 $generated@@616 $generated@@614) $generated@@615))
))))) ($generated@@213 ($generated@@165 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@213 ($generated@@165 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@166) (= (type $generated@@618) $generated@@166)) (= ($generated@@182 ($generated@@209 $generated@@617) ($generated@@209 $generated@@618)) ($generated@@209 ($generated@@182 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@182 ($generated@@209 $generated@@617) ($generated@@209 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (= ($generated@@233 ($generated@@209 $generated@@619)) ($generated@@209 ($generated@@233 $generated@@619)))
 :pattern ( ($generated@@233 ($generated@@209 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@228 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@227 $generated@@621)) (= ($generated@@226 $generated@@620) 0)) (= $generated@@620 ($generated@@225 $generated@@621))))
 :pattern ( ($generated@@226 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@623)))
 (=> (and (and (= (type $generated@@622) ($generated@@83 $generated@@625 $generated@@2)) (= (type $generated@@624) $generated@@2)) (<= 0 ($generated $generated@@624))) (= ($generated@@248 ($generated@@89 $generated@@622 $generated@@623 $generated@@624)) (+ (- ($generated@@248 $generated@@622) ($generated ($generated@@88 $generated@@622 $generated@@623))) ($generated $generated@@624)))))
 :pattern ( ($generated@@248 ($generated@@89 $generated@@622 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@627) $generated@@2)) ($generated@@81 $generated@@627 $generated@@46 $generated@@626))
 :pattern ( ($generated@@81 $generated@@627 $generated@@46 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@629) $generated@@3)) ($generated@@81 $generated@@629 $generated@@47 $generated@@628))
 :pattern ( ($generated@@81 $generated@@629 $generated@@47 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@631) $generated@@4)) ($generated@@81 $generated@@631 $generated@@44 $generated@@630))
 :pattern ( ($generated@@81 $generated@@631 $generated@@44 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@633) $generated@@419)) ($generated@@81 $generated@@633 $generated@@45 $generated@@632))
 :pattern ( ($generated@@81 $generated@@633 $generated@@45 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@635) $generated@@166)) ($generated@@81 $generated@@635 $generated@@48 $generated@@634))
 :pattern ( ($generated@@81 $generated@@635 $generated@@48 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@227 $generated@@166)) (= (type $generated@@637) $generated@@67)) (= ($generated@@150 $generated@@636 ($generated@@461 $generated@@637)) (forall (($generated@@638 Int) ) (!  (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@226 $generated@@636))) ($generated@@183 ($generated@@462 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@462 $generated@@636 $generated@@638))
))))
 :pattern ( ($generated@@150 $generated@@636 ($generated@@461 $generated@@637)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 Int) ) (!  (=> (= (type $generated@@640) ($generated@@227 $generated@@166)) (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@226 $generated@@640))) (< ($generated@@500 ($generated@@299 $generated@@157 ($generated@@462 $generated@@640 $generated@@641))) ($generated@@639 $generated@@640))))
 :pattern ( ($generated@@500 ($generated@@299 $generated@@157 ($generated@@462 $generated@@640 $generated@@641))))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) ($generated@@256 $generated@@166 $generated@@166)) (= (type $generated@@643) $generated@@67)) (= (type $generated@@644) $generated@@67)) ($generated@@150 $generated@@642 ($generated@@366 $generated@@643 $generated@@644))) (and (and ($generated@@150 ($generated@@254 $generated@@642) ($generated@@199 $generated@@643)) ($generated@@150 ($generated@@309 $generated@@642) ($generated@@199 $generated@@644))) ($generated@@150 ($generated@@340 $generated@@642) ($generated@@199 ($generated@@156 $generated@@643 $generated@@644)))))
 :pattern ( ($generated@@150 $generated@@642 ($generated@@366 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@274 $generated@@166 $generated@@166)) (= (type $generated@@646) $generated@@67)) (= (type $generated@@647) $generated@@67)) ($generated@@150 $generated@@645 ($generated@@374 $generated@@646 $generated@@647))) (and (and ($generated@@150 ($generated@@272 $generated@@645) ($generated@@204 $generated@@646)) ($generated@@150 ($generated@@320 $generated@@645) ($generated@@204 $generated@@647))) ($generated@@150 ($generated@@348 $generated@@645) ($generated@@204 ($generated@@156 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@150 $generated@@645 ($generated@@374 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@2) ($generated@@150 $generated@@648 $generated@@46))
 :pattern ( ($generated@@150 $generated@@648 $generated@@46))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@3) ($generated@@150 $generated@@649 $generated@@47))
 :pattern ( ($generated@@150 $generated@@649 $generated@@47))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@4) ($generated@@150 $generated@@650 $generated@@44))
 :pattern ( ($generated@@150 $generated@@650 $generated@@44))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@419) ($generated@@150 $generated@@651 $generated@@45))
 :pattern ( ($generated@@150 $generated@@651 $generated@@45))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@166) ($generated@@150 $generated@@652 $generated@@48))
 :pattern ( ($generated@@150 $generated@@652 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Bool)
(declare-fun $generated@@657 () T@U)
(assert  (and (and (and (= (type $generated@@653) ($generated@@518 $generated@@84 $generated@@4)) (= (type $generated@@654) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@655) $generated@@84)) (= (type $generated@@657) ($generated@@518 $generated@@84 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@658  (=> (= $generated@@653 ($generated@@572 $generated@@144 $generated@@654 $generated@@60 $generated@@655)) (=> (and (and (= $generated@@656 ($generated@@0 ($generated@@516 $generated@@657 $generated@@655 $generated@@147))) (= ($generated@@383 $generated@@654 $generated@@655) ($generated ($generated@@90 ($generated@@88 $generated@@654 $generated@@655) $generated@@147)))) (and ($generated@@150 ($generated@@8 ($generated@@383 $generated@@654 $generated@@655)) $generated@@46) (= (ControlFlow 0 3) (- 0 2)))) $generated@@656))))
(let (($generated@@659 true))
(let (($generated@@660  (=> (= $generated@@657 ($generated@@517 $generated@@144 $generated@@654 $generated@@60 $generated@@655)) (and (=> (= (ControlFlow 0 4) 1) $generated@@659) (=> (= (ControlFlow 0 4) 3) $generated@@658)))))
(let (($generated@@661  (=> (and ($generated@@148 $generated@@654) ($generated@@586 $generated@@654)) (=> (and (and (not (= $generated@@655 $generated@@144)) (and ($generated@@150 $generated@@655 $generated@@173) ($generated@@81 $generated@@655 $generated@@173 $generated@@654))) (and (= 0 $generated@@382) (= (ControlFlow 0 5) 4))) $generated@@660))))
$generated@@661)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 () Int)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (Int) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@196 (T@T T@U T@U) T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@T)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@232 (T@T) T@U)
(declare-fun $generated@@233 (T@U) Int)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@T T@T) T@U)
(declare-fun $generated@@263 (T@T T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U T@U) Bool)
(declare-fun $generated@@306 (T@T T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@373 (T@U T@U) T@U)
(declare-fun $generated@@381 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Bool)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@538 (T@T) T@U)
(declare-fun $generated@@544 (T@U T@U T@U) T@U)
(declare-fun $generated@@545 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@546 (T@T T@T) T@T)
(declare-fun $generated@@547 (T@T) T@T)
(declare-fun $generated@@548 (T@T) T@T)
(declare-fun $generated@@549 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@612 (T@U T@U) Bool)
(declare-fun $generated@@652 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@100 $generated@@101)) 12)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@96 ($generated@@83 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@83 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@97 ($generated@@83 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@83 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@97 (type $generated@@106))))
(= (type ($generated@@94 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@98 $generated@@109 $generated@@110 $generated@@111)) ($generated@@83 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@98 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@97 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@94 ($generated@@98 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@94 ($generated@@98 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@94 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@94 ($generated@@98 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@94 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@70 (type $generated@@127))))
(= (type ($generated@@93 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@93 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@85)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@70 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@93 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@93 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@93 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@93 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@93 $generated@@141 $generated@@143)))
 :weight 0
)))) (= (type $generated@@88) $generated@@84)) (= (type $generated@@90) $generated@@67)) (= (type $generated@@95) ($generated@@69 $generated@@2))))
(assert  (=> (<= 0 $generated@@81) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@145) $generated@@84)) (or ($generated@@86 $generated@@144 $generated@@145) (and (not (= 0 $generated@@81)) (and ($generated@@87 $generated@@144) (and (not (= $generated@@145 $generated@@88)) (and ($generated@@89 $generated@@145 $generated@@90) ($generated@@91 $generated@@145 $generated@@90 $generated@@144))))))) (and (=> ($generated@@82 $generated@@144 $generated@@145) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@144 $generated@@145) $generated@@95)))) (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@144 $generated@@145) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@144 $generated@@145))))
 :pattern ( ($generated@@82 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@147 Int) ) (! (= (type ($generated@@146 $generated@@147)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@91 $generated@@148 ($generated@@146 0) $generated@@149))
 :pattern ( ($generated@@91 $generated@@148 ($generated@@146 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@152) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@84) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (= (type $generated@@154) $generated@@67))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@84) (= (type $generated@@156) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@155 $generated@@154 $generated@@156)  (or (= $generated@@155 $generated@@88) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@160) $generated@@84)) (and ($generated@@87 $generated@@159) (and (not (= $generated@@160 $generated@@88)) (= ($generated@@157 $generated@@160) $generated@@154)))) ($generated@@89 ($generated@@93 ($generated@@94 $generated@@159 $generated@@160) $generated@@95) $generated@@46))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@159 $generated@@160) $generated@@95))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@89 $generated@@161 ($generated@@146 0)))
 :pattern ( ($generated@@89 $generated@@161 ($generated@@146 0)))
)))
(assert  (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@89 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@89 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 16) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@73)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (= ($generated@@178 $generated@@154) $generated@@65))
(assert (= ($generated@@178 $generated@@90) $generated@@65))
(assert (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@67)
 :pattern ( ($generated@@180 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) ($generated@@83 $generated@@173 $generated@@2)) (= (type $generated@@184) $generated@@67)) ($generated@@89 $generated@@183 ($generated@@180 $generated@@184))) ($generated@@181 $generated@@183))
 :pattern ( ($generated@@89 $generated@@183 ($generated@@180 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@84) (= ($generated@@89 $generated@@185 $generated@@154)  (or (= $generated@@185 $generated@@88) (= ($generated@@157 $generated@@185) $generated@@154))))
 :pattern ( ($generated@@89 $generated@@185 $generated@@154))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@84) (= (type $generated@@187) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@186 $generated@@90 $generated@@187) ($generated@@91 $generated@@186 $generated@@154 $generated@@187)))
 :pattern ( ($generated@@91 $generated@@186 $generated@@90 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@188 $generated@@190 $generated@@191)) $generated@@164)
 :pattern ( ($generated@@188 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@67) (= (type $generated@@193) $generated@@67)) (= (type $generated@@194) $generated@@173)) (= (type $generated@@195) $generated@@173)) (= ($generated@@89 ($generated@@188 $generated@@194 $generated@@195) ($generated@@163 $generated@@192 $generated@@193))  (and ($generated@@189 $generated@@194 $generated@@192) ($generated@@189 $generated@@195 $generated@@193))))
 :pattern ( ($generated@@89 ($generated@@188 $generated@@194 $generated@@195) ($generated@@163 $generated@@192 $generated@@193)))
)))
(assert (= ($generated@@76 $generated@@95) 0))
(assert  (and (and (forall (($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= (type ($generated@@196 $generated@@199 $generated@@200 $generated@@201)) ($generated@@69 $generated@@199))
 :pattern ( ($generated@@196 $generated@@199 $generated@@200 $generated@@201))
)) (= ($generated@@1 $generated@@198) 17)) (= (type $generated@@197) $generated@@198)))
(assert (= ($generated@@196 $generated@@2 $generated@@197 $generated@@66) $generated@@95))
(assert  (not ($generated@@202 $generated@@95)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@164) (= (type $generated@@204) $generated@@164)) (= ($generated@@170 $generated@@203 $generated@@204) (= $generated@@203 $generated@@204)))
 :pattern ( ($generated@@170 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (= (type ($generated@@205 $generated@@206)) $generated@@67)
 :pattern ( ($generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@208) $generated@@67)) (= ($generated@@89 $generated@@207 ($generated@@205 $generated@@208)) (forall (($generated@@209 T@U) ) (!  (=> (and (= (type $generated@@209) $generated@@173) ($generated@@0 ($generated@@94 $generated@@207 $generated@@209))) ($generated@@189 $generated@@209 $generated@@208))
 :pattern ( ($generated@@94 $generated@@207 $generated@@209))
))))
 :pattern ( ($generated@@89 $generated@@207 ($generated@@205 $generated@@208)))
)))
(assert (forall (($generated@@211 T@U) ) (! (= (type ($generated@@210 $generated@@211)) $generated@@67)
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@212) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@213) $generated@@67)) (= ($generated@@89 $generated@@212 ($generated@@210 $generated@@213)) (forall (($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@173) ($generated@@0 ($generated@@94 $generated@@212 $generated@@214))) ($generated@@189 $generated@@214 $generated@@213))
 :pattern ( ($generated@@94 $generated@@212 $generated@@214))
))))
 :pattern ( ($generated@@89 $generated@@212 ($generated@@210 $generated@@213)))
)))
(assert (forall (($generated@@215 Int) ) (! (= ($generated@@92 $generated@@215) $generated@@215)
 :pattern ( ($generated@@92 $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (let (($generated@@218 (type $generated@@217)))
(= (type ($generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ) (! (= ($generated@@216 $generated@@219) $generated@@219)
 :pattern ( ($generated@@216 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@221) $generated@@67) (= (type $generated@@222) $generated@@67)) (= (type $generated@@223) $generated@@173)) (= (type $generated@@224) $generated@@173)) (= (type $generated@@225) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@87 $generated@@225)) (= ($generated@@91 ($generated@@188 $generated@@223 $generated@@224) ($generated@@163 $generated@@221 $generated@@222) $generated@@225)  (and ($generated@@220 $generated@@223 $generated@@221 $generated@@225) ($generated@@220 $generated@@224 $generated@@222 $generated@@225))))
 :pattern ( ($generated@@91 ($generated@@188 $generated@@223 $generated@@224) ($generated@@163 $generated@@221 $generated@@222) $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@72)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= (type $generated@@228) $generated@@164) (= ($generated@@162 $generated@@228) (= ($generated@@226 $generated@@228) $generated@@62)))
 :pattern ( ($generated@@162 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@164) ($generated@@162 $generated@@229)) (exists (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (and (and (= (type $generated@@230) $generated@@173) (= (type $generated@@231) $generated@@173)) (= $generated@@229 ($generated@@188 $generated@@230 $generated@@231)))
 :no-pattern (type $generated@@230)
 :no-pattern (type $generated@@231)
 :no-pattern ($generated $generated@@230)
 :no-pattern ($generated@@0 $generated@@230)
 :no-pattern ($generated $generated@@231)
 :no-pattern ($generated@@0 $generated@@231)
)))
 :pattern ( ($generated@@162 $generated@@229))
)))
(assert  (and (and (forall (($generated@@236 T@T) ) (= ($generated@@1 ($generated@@234 $generated@@236)) 18)) (forall (($generated@@237 T@T) ) (! (= ($generated@@235 ($generated@@234 $generated@@237)) $generated@@237)
 :pattern ( ($generated@@234 $generated@@237))
))) (forall (($generated@@238 T@T) ) (! (= (type ($generated@@232 $generated@@238)) ($generated@@234 $generated@@238))
 :pattern ( ($generated@@232 $generated@@238))
))))
(assert (forall (($generated@@239 T@T) ) (! (= ($generated@@233 ($generated@@232 $generated@@239)) 0)
 :pattern ( ($generated@@232 $generated@@239))
)))
(assert ($generated@@202 $generated@@60))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@173)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244) ($generated@@91 $generated@@242 $generated@@243 $generated@@244)))
 :pattern ( ($generated@@220 ($generated@@240 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@245) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@246) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@247) $generated@@173)) (= (type $generated@@248) $generated@@67)) ($generated@@150 $generated@@245 $generated@@246)) ($generated@@220 $generated@@247 $generated@@248 $generated@@245)) ($generated@@220 $generated@@247 $generated@@248 $generated@@246))
 :pattern ( ($generated@@150 $generated@@245 $generated@@246) ($generated@@220 $generated@@247 $generated@@248 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@249) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@250) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@252) $generated@@67)) ($generated@@150 $generated@@249 $generated@@250)) ($generated@@91 $generated@@251 $generated@@252 $generated@@249)) ($generated@@91 $generated@@251 $generated@@252 $generated@@250))
 :pattern ( ($generated@@150 $generated@@249 $generated@@250) ($generated@@91 $generated@@251 $generated@@252 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@254) $generated@@84)) (=> (and (and ($generated@@87 $generated@@253) (and (not (= $generated@@254 $generated@@88)) (= ($generated@@157 $generated@@254) $generated@@154))) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@253 $generated@@254) $generated@@60))) ($generated@@91 ($generated@@93 ($generated@@94 $generated@@253 $generated@@254) $generated@@95) $generated@@46 $generated@@253)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@253 $generated@@254) $generated@@95))
)))
(assert (forall (($generated@@257 T@T) ) (! (= (type ($generated@@256 $generated@@257)) ($generated@@83 $generated@@257 $generated@@2))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@96 (type $generated@@258))))
 (=> (= (type $generated@@258) ($generated@@83 $generated@@259 $generated@@2)) (and (= (= ($generated@@255 $generated@@258) 0) (= $generated@@258 ($generated@@256 $generated@@259))) (=> (not (= ($generated@@255 $generated@@258) 0)) (exists (($generated@@260 T@U) ) (!  (and (= (type $generated@@260) $generated@@259) (< 0 ($generated ($generated@@94 $generated@@258 $generated@@260))))
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
))))))
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert  (and (and (and (and (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@266 $generated@@267)) 19)) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@268 $generated@@269)) $generated@@268)
 :pattern ( ($generated@@263 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@263 $generated@@270 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@263 $generated@@270 $generated@@271))
))) (forall (($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@264 (type $generated@@272))))
(= (type ($generated@@261 $generated@@272)) ($generated@@83 $generated@@273 $generated@@4)))
 :pattern ( ($generated@@261 $generated@@272))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= (type ($generated@@262 $generated@@274 $generated@@275)) ($generated@@263 $generated@@274 $generated@@275))
 :pattern ( ($generated@@262 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@T) ) (! (let (($generated@@278 (type $generated@@276)))
 (not ($generated@@0 ($generated@@94 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276))))
 :pattern ( (let (($generated@@278 (type $generated@@276)))
($generated@@94 ($generated@@261 ($generated@@262 $generated@@278 $generated@@277)) $generated@@276)))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 20)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@83 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@94 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@94 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@299) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@297 $generated@@298 $generated@@299)) (and ($generated@@150 $generated@@298 $generated@@299) (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@70 (type $generated@@301))))
 (=> (and (and (= (type $generated@@300) $generated@@84) (= (type $generated@@301) ($generated@@69 $generated@@302))) (not ($generated@@202 $generated@@301))) (= ($generated@@93 ($generated@@94 $generated@@298 $generated@@300) $generated@@301) ($generated@@93 ($generated@@94 $generated@@299 $generated@@300) $generated@@301))))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@299 $generated@@300) $generated@@301))
))))
 :pattern ( ($generated@@297 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@96 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@83 $generated@@304 $generated@@2)) (= ($generated@@181 $generated@@303) (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@304) (and (<= 0 ($generated ($generated@@94 $generated@@303 $generated@@305))) (<= ($generated ($generated@@94 $generated@@303 $generated@@305)) ($generated@@255 $generated@@303))))
 :pattern ( ($generated@@94 $generated@@303 $generated@@305))
)))))
 :pattern ( ($generated@@181 $generated@@303))
)))
(assert (forall (($generated@@307 T@T) ($generated@@308 T@U) ) (! (= (type ($generated@@306 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@173) ($generated@@189 $generated@@309 $generated@@154)) (and (= ($generated@@240 ($generated@@306 $generated@@84 $generated@@309)) $generated@@309) ($generated@@89 ($generated@@306 $generated@@84 $generated@@309) $generated@@154)))
 :pattern ( ($generated@@189 $generated@@309 $generated@@154))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@173) ($generated@@189 $generated@@310 $generated@@90)) (and (= ($generated@@240 ($generated@@306 $generated@@84 $generated@@310)) $generated@@310) ($generated@@89 ($generated@@306 $generated@@84 $generated@@310) $generated@@90)))
 :pattern ( ($generated@@189 $generated@@310 $generated@@90))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@84) (= ($generated@@89 $generated@@311 $generated@@90)  (and ($generated@@89 $generated@@311 $generated@@154) (not (= $generated@@311 $generated@@88)))))
 :pattern ( ($generated@@89 $generated@@311 $generated@@90))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@265 (type $generated@@312))))
(let (($generated@@314 ($generated@@264 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@263 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@262 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) ($generated@@0 ($generated@@94 ($generated@@261 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@261 $generated@@312))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@265 (type $generated@@317))))
(= (type ($generated@@316 $generated@@317)) ($generated@@83 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@265 (type $generated@@319))))
(let (($generated@@321 ($generated@@264 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@263 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@262 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@320) ($generated@@0 ($generated@@94 ($generated@@316 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@283 (type $generated@@323))))
(let (($generated@@325 ($generated@@282 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@281 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@280 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@94 ($generated@@279 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@279 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@283 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@83 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@283 (type $generated@@330))))
(let (($generated@@332 ($generated@@282 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@281 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@280 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@94 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) ($generated@@83 $generated@@173 $generated@@2)) (= (type $generated@@335) $generated@@67)) (= ($generated@@89 $generated@@334 ($generated@@180 $generated@@335)) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@173) (< 0 ($generated ($generated@@94 $generated@@334 $generated@@336)))) ($generated@@189 $generated@@336 $generated@@335))
 :pattern ( ($generated@@94 $generated@@334 $generated@@336))
))))
 :pattern ( ($generated@@89 $generated@@334 ($generated@@180 $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@338) $generated@@67)) (= (type $generated@@339) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@337 ($generated@@205 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@173) ($generated@@0 ($generated@@94 $generated@@337 $generated@@340))) ($generated@@220 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@94 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@91 $generated@@337 ($generated@@205 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@342) $generated@@67)) (= (type $generated@@343) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@341 ($generated@@210 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@173) ($generated@@0 ($generated@@94 $generated@@341 $generated@@344))) ($generated@@220 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@94 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@91 $generated@@341 ($generated@@210 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 (type $generated@@345)))
(= ($generated ($generated@@94 ($generated@@256 $generated@@346) $generated@@345)) 0))
 :pattern ( (let (($generated@@346 (type $generated@@345)))
($generated@@94 ($generated@@256 $generated@@346) $generated@@345)))
)))
(assert  (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@349)) ($generated@@83 $generated@@173 $generated@@4))
 :pattern ( ($generated@@347 $generated@@349))
)) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@265 (type $generated@@350))))
(let (($generated@@352 ($generated@@264 (type $generated@@350))))
(= (type ($generated@@348 $generated@@350)) ($generated@@83 $generated@@352 $generated@@351))))
 :pattern ( ($generated@@348 $generated@@350))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@353) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@354) $generated@@173)) (= ($generated@@0 ($generated@@94 ($generated@@347 $generated@@353) $generated@@354))  (and ($generated@@0 ($generated@@94 ($generated@@261 $generated@@353) ($generated@@171 ($generated@@306 $generated@@164 $generated@@354)))) (= ($generated@@94 ($generated@@348 $generated@@353) ($generated@@171 ($generated@@306 $generated@@164 $generated@@354))) ($generated@@172 ($generated@@306 $generated@@164 $generated@@354))))))
 :pattern ( ($generated@@94 ($generated@@347 $generated@@353) $generated@@354))
)))
(assert  (and (forall (($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@357)) ($generated@@83 $generated@@173 $generated@@4))
 :pattern ( ($generated@@355 $generated@@357))
)) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@283 (type $generated@@358))))
(let (($generated@@360 ($generated@@282 (type $generated@@358))))
(= (type ($generated@@356 $generated@@358)) ($generated@@83 $generated@@360 $generated@@359))))
 :pattern ( ($generated@@356 $generated@@358))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@362) $generated@@173)) (= ($generated@@0 ($generated@@94 ($generated@@355 $generated@@361) $generated@@362))  (and ($generated@@0 ($generated@@94 ($generated@@279 $generated@@361) ($generated@@171 ($generated@@306 $generated@@164 $generated@@362)))) (= ($generated@@94 ($generated@@356 $generated@@361) ($generated@@171 ($generated@@306 $generated@@164 $generated@@362))) ($generated@@172 ($generated@@306 $generated@@164 $generated@@362))))))
 :pattern ( ($generated@@94 ($generated@@355 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(let (($generated@@366 ($generated@@264 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@263 $generated@@366 $generated@@365)) (= ($generated@@0 ($generated@@94 ($generated@@316 $generated@@363) $generated@@364)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) (and ($generated@@0 ($generated@@94 ($generated@@261 $generated@@363) $generated@@367)) (= $generated@@364 ($generated@@94 ($generated@@348 $generated@@363) $generated@@367))))
 :pattern ( ($generated@@94 ($generated@@261 $generated@@363) $generated@@367))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@363) $generated@@367))
))))))
 :pattern ( ($generated@@94 ($generated@@316 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(let (($generated@@371 ($generated@@282 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@281 $generated@@371 $generated@@370)) (= ($generated@@0 ($generated@@94 ($generated@@327 $generated@@368) $generated@@369)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) (and ($generated@@0 ($generated@@94 ($generated@@279 $generated@@368) $generated@@372)) (= $generated@@369 ($generated@@94 ($generated@@356 $generated@@368) $generated@@372))))
 :pattern ( ($generated@@94 ($generated@@279 $generated@@368) $generated@@372))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@368) $generated@@372))
))))))
 :pattern ( ($generated@@94 ($generated@@327 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@67)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (and (= (type $generated@@376) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@261 $generated@@376) $generated@@380))) (and ($generated@@220 ($generated@@94 ($generated@@348 $generated@@376) $generated@@380) $generated@@378 $generated@@379) ($generated@@220 $generated@@380 $generated@@377 $generated@@379)))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@376) $generated@@380))
 :pattern ( ($generated@@94 ($generated@@261 $generated@@376) $generated@@380))
))))
 :pattern ( ($generated@@91 $generated@@376 ($generated@@373 $generated@@377 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@67)
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@385) $generated@@67)) (= (type $generated@@386) $generated@@67)) (= (type $generated@@387) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@279 $generated@@384) $generated@@388))) (and ($generated@@220 ($generated@@94 ($generated@@356 $generated@@384) $generated@@388) $generated@@386 $generated@@387) ($generated@@220 $generated@@388 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@384) $generated@@388))
 :pattern ( ($generated@@94 ($generated@@279 $generated@@384) $generated@@388))
))))
 :pattern ( ($generated@@91 $generated@@384 ($generated@@381 $generated@@385 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= (type ($generated@@389 $generated@@390 $generated@@391)) ($generated@@83 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@394)))
 (=> (and (and (= (type $generated@@393) ($generated@@83 $generated@@396 $generated@@4)) (= (type $generated@@395) $generated@@396)) ($generated@@0 ($generated@@94 $generated@@393 $generated@@395))) ($generated@@0 ($generated@@94 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))))
 :pattern ( ($generated@@389 $generated@@393 $generated@@394) ($generated@@94 $generated@@393 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@398)))
 (=> (and (= (type $generated@@397) ($generated@@83 $generated@@400 $generated@@4)) (= (type $generated@@399) $generated@@400)) (= ($generated@@0 ($generated@@94 ($generated@@389 $generated@@397 $generated@@398) $generated@@399))  (or (= $generated@@399 $generated@@398) ($generated@@0 ($generated@@94 $generated@@397 $generated@@399))))))
 :pattern ( ($generated@@94 ($generated@@389 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@401) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@402) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@403) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@401 $generated@@403))) (and ($generated@@150 $generated@@401 $generated@@402) ($generated@@150 $generated@@402 $generated@@403))) ($generated@@150 $generated@@401 $generated@@403))
 :pattern ( ($generated@@150 $generated@@401 $generated@@402) ($generated@@150 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@83 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@283 (type $generated@@406))))
(let (($generated@@408 ($generated@@282 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@281 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@280 $generated@@408 $generated@@407)) (= ($generated@@279 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@279 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@283 (type $generated@@409))))
(let (($generated@@411 ($generated@@282 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@281 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@280 $generated@@411 $generated@@410)) (= ($generated@@327 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@327 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@283 (type $generated@@412))))
(let (($generated@@414 ($generated@@282 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@281 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@280 $generated@@414 $generated@@413)) (= ($generated@@355 $generated@@412) ($generated@@404 $generated@@173))))))
 :pattern ( ($generated@@355 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@265 (type $generated@@415))))
(let (($generated@@417 ($generated@@264 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@263 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@262 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@173) (= (type $generated@@419) $generated@@173)) ($generated@@0 ($generated@@94 ($generated@@347 $generated@@415) ($generated@@240 ($generated@@188 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@347 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@283 (type $generated@@420))))
(let (($generated@@422 ($generated@@282 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@281 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@280 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@173) (= (type $generated@@424) $generated@@173)) ($generated@@0 ($generated@@94 ($generated@@355 $generated@@420) ($generated@@240 ($generated@@188 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@355 $generated@@420))
)))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@198)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@T) ) (!  (=> (and (= (type $generated@@427) $generated@@198) (= (type $generated@@428) $generated@@71)) (and (= ($generated@@425 ($generated@@196 $generated@@429 $generated@@427 $generated@@428)) $generated@@427) (= ($generated@@79 ($generated@@196 $generated@@429 $generated@@427 $generated@@428)) $generated@@428)))
 :pattern ( ($generated@@196 $generated@@429 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@173) ($generated@@189 $generated@@430 $generated@@46)) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@430)) $generated@@430) ($generated@@89 ($generated@@306 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@189 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@173) ($generated@@189 $generated@@431 $generated@@47)) (and (= ($generated@@240 ($generated@@306 $generated@@3 $generated@@431)) $generated@@431) ($generated@@89 ($generated@@306 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@189 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@173) ($generated@@189 $generated@@432 $generated@@44)) (and (= ($generated@@240 ($generated@@306 $generated@@4 $generated@@432)) $generated@@432) ($generated@@89 ($generated@@306 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@189 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 21))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@173) ($generated@@189 $generated@@434 $generated@@45)) (and (= ($generated@@240 ($generated@@306 $generated@@433 $generated@@434)) $generated@@434) ($generated@@89 ($generated@@306 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@189 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@67) (= ($generated@@189 ($generated@@240 $generated@@435) $generated@@436) ($generated@@89 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@189 ($generated@@240 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@96 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@83 $generated@@438 $generated@@2)) (<= 0 ($generated@@255 $generated@@437))))
 :pattern ( ($generated@@255 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@235 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@234 $generated@@440)) (<= 0 ($generated@@233 $generated@@439))))
 :pattern ( ($generated@@233 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@67)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@441 ($generated@@373 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@373 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@373 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@373 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@77 ($generated@@373 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@373 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@381 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@381 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@381 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@381 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@77 ($generated@@381 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@381 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@173) (= (type $generated@@462) $generated@@173)) (= ($generated@@226 ($generated@@188 $generated@@461 $generated@@462)) $generated@@62))
 :pattern ( ($generated@@188 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@163 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@163 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@467 ($generated@@163 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@163 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@173) (= (type $generated@@472) $generated@@173)) (= ($generated@@171 ($generated@@188 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@188 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@173) (= (type $generated@@474) $generated@@173)) (= ($generated@@172 ($generated@@188 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@188 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@235 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@234 $generated@@173)) (= (type $generated@@482) $generated@@67)) (= (type $generated@@483) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@233 $generated@@481))) ($generated@@220 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@91 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
 (=> (= (type $generated@@485) ($generated@@83 $generated@@487 $generated@@4)) ($generated@@0 ($generated@@94 ($generated@@389 $generated@@485 $generated@@486) $generated@@486))))
 :pattern ( ($generated@@389 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@146 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@146 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@205 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@205 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@77 ($generated@@205 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@205 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@210 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@210 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@77 ($generated@@210 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@210 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@180 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@180 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@77 ($generated@@180 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@180 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@502 ($generated@@475 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@475 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@77 ($generated@@475 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(= ($generated@@306 $generated@@507 ($generated@@240 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@240 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) $generated@@67)) (= ($generated@@89 $generated@@508 ($generated@@373 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@261 $generated@@508) $generated@@511))) (and ($generated@@189 ($generated@@94 ($generated@@348 $generated@@508) $generated@@511) $generated@@510) ($generated@@189 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@94 ($generated@@348 $generated@@508) $generated@@511))
 :pattern ( ($generated@@94 ($generated@@261 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@89 $generated@@508 ($generated@@373 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@513) $generated@@67)) (= (type $generated@@514) $generated@@67)) (= ($generated@@89 $generated@@512 ($generated@@381 $generated@@513 $generated@@514)) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@173) ($generated@@0 ($generated@@94 ($generated@@279 $generated@@512) $generated@@515))) (and ($generated@@189 ($generated@@94 ($generated@@356 $generated@@512) $generated@@515) $generated@@514) ($generated@@189 $generated@@515 $generated@@513)))
 :pattern ( ($generated@@94 ($generated@@356 $generated@@512) $generated@@515))
 :pattern ( ($generated@@94 ($generated@@279 $generated@@512) $generated@@515))
))))
 :pattern ( ($generated@@89 $generated@@512 ($generated@@381 $generated@@513 $generated@@514)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@518) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@519) $generated@@84)) (=> (and (and (and ($generated@@87 $generated@@517) ($generated@@87 $generated@@518)) (and (not (= $generated@@519 $generated@@88)) ($generated@@89 $generated@@519 $generated@@90))) (and ($generated@@516 $generated@@517) ($generated@@150 $generated@@517 $generated@@518))) (=> (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@70 (type $generated@@521))))
 (=> (and (and (= (type $generated@@520) $generated@@84) (= (type $generated@@521) ($generated@@69 $generated@@522))) (and (not (= $generated@@520 $generated@@88)) (= $generated@@520 $generated@@519))) (= ($generated@@93 ($generated@@94 $generated@@517 $generated@@520) $generated@@521) ($generated@@93 ($generated@@94 $generated@@518 $generated@@520) $generated@@521))))
 :no-pattern (type $generated@@520)
 :no-pattern (type $generated@@521)
 :no-pattern ($generated $generated@@520)
 :no-pattern ($generated@@0 $generated@@520)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
)) (= ($generated@@82 $generated@@517 $generated@@519) ($generated@@82 $generated@@518 $generated@@519)))))
 :pattern ( ($generated@@516 $generated@@517) ($generated@@150 $generated@@517 $generated@@518) ($generated@@82 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@173) (= (type $generated@@526) $generated@@173)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@188 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@188 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@173) (= (type $generated@@528) $generated@@173)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@188 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@188 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@173) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@189 $generated@@529 ($generated@@373 $generated@@530 $generated@@531))) (and (= ($generated@@240 ($generated@@306 ($generated@@263 $generated@@173 $generated@@173) $generated@@529)) $generated@@529) ($generated@@89 ($generated@@306 ($generated@@263 $generated@@173 $generated@@173) $generated@@529) ($generated@@373 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@189 $generated@@529 ($generated@@373 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@173) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@189 $generated@@532 ($generated@@381 $generated@@533 $generated@@534))) (and (= ($generated@@240 ($generated@@306 ($generated@@281 $generated@@173 $generated@@173) $generated@@532)) $generated@@532) ($generated@@89 ($generated@@306 ($generated@@281 $generated@@173 $generated@@173) $generated@@532) ($generated@@381 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@189 $generated@@532 ($generated@@381 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@67) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@173)) ($generated@@189 $generated@@537 ($generated@@163 $generated@@535 $generated@@536))) (and (= ($generated@@240 ($generated@@306 $generated@@164 $generated@@537)) $generated@@537) ($generated@@89 ($generated@@306 $generated@@164 $generated@@537) ($generated@@163 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@189 $generated@@537 ($generated@@163 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@539 T@T) ) (! (= (type ($generated@@538 $generated@@539)) ($generated@@83 $generated@@539 $generated@@4))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@94 ($generated@@538 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@94 ($generated@@538 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@94 ($generated@@404 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@94 ($generated@@404 $generated@@543) $generated@@542)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@550 T@T) ($generated@@551 T@T) ) (= ($generated@@1 ($generated@@546 $generated@@550 $generated@@551)) 22)) (forall (($generated@@552 T@T) ($generated@@553 T@T) ) (! (= ($generated@@547 ($generated@@546 $generated@@552 $generated@@553)) $generated@@552)
 :pattern ( ($generated@@546 $generated@@552 $generated@@553))
))) (forall (($generated@@554 T@T) ($generated@@555 T@T) ) (! (= ($generated@@548 ($generated@@546 $generated@@554 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@546 $generated@@554 $generated@@555))
))) (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@548 (type $generated@@556))))
(= (type ($generated@@544 $generated@@556 $generated@@557 $generated@@558)) $generated@@559))
 :pattern ( ($generated@@544 $generated@@556 $generated@@557 $generated@@558))
))) (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
(let (($generated@@565 (type $generated@@561)))
(= (type ($generated@@549 $generated@@560 $generated@@561 $generated@@562 $generated@@563)) ($generated@@546 $generated@@565 $generated@@564))))
 :pattern ( ($generated@@549 $generated@@560 $generated@@561 $generated@@562 $generated@@563))
))) (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@548 (type $generated@@566))))
 (=> (= (type $generated@@569) $generated@@570) (= ($generated@@544 ($generated@@549 $generated@@566 $generated@@567 $generated@@568 $generated@@569) $generated@@567 $generated@@568) $generated@@569)))
 :weight 0
))) (and (and (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (or (= $generated@@573 $generated@@575) (= ($generated@@544 ($generated@@549 $generated@@572 $generated@@573 $generated@@574 $generated@@571) $generated@@575 $generated@@576) ($generated@@544 $generated@@572 $generated@@575 $generated@@576)))
 :weight 0
)) (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (or (= $generated@@580 $generated@@582) (= ($generated@@544 ($generated@@549 $generated@@578 $generated@@579 $generated@@580 $generated@@577) $generated@@581 $generated@@582) ($generated@@544 $generated@@578 $generated@@581 $generated@@582)))
 :weight 0
))) (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (or true (= ($generated@@544 ($generated@@549 $generated@@584 $generated@@585 $generated@@586 $generated@@583) $generated@@587 $generated@@588) ($generated@@544 $generated@@584 $generated@@587 $generated@@588)))
 :weight 0
)))) (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (= (type ($generated@@545 $generated@@589 $generated@@590 $generated@@591 $generated@@592)) ($generated@@546 $generated@@84 $generated@@4))
 :pattern ( ($generated@@545 $generated@@589 $generated@@590 $generated@@591 $generated@@592))
))))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@70 (type $generated@@598))))
 (=> (and (and (and (and (and (= (type $generated@@593) $generated@@84) (= (type $generated@@594) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@595) ($generated@@69 $generated@@4))) (= (type $generated@@596) $generated@@84)) (= (type $generated@@597) $generated@@84)) (= (type $generated@@598) ($generated@@69 $generated@@599))) (= ($generated@@0 ($generated@@544 ($generated@@545 $generated@@593 $generated@@594 $generated@@595 $generated@@596) $generated@@597 $generated@@598))  (=> (and (not (= $generated@@597 $generated@@593)) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@594 $generated@@597) $generated@@595))) (= $generated@@597 $generated@@596)))))
 :pattern ( ($generated@@544 ($generated@@545 $generated@@593 $generated@@594 $generated@@595 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@67) (= (type $generated@@601) $generated@@67)) (and (= ($generated@@77 ($generated@@163 $generated@@600 $generated@@601)) $generated@@63) (= ($generated@@178 ($generated@@163 $generated@@600 $generated@@601)) $generated@@64)))
 :pattern ( ($generated@@163 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@164) (= ($generated@@523 ($generated@@240 $generated@@602)) ($generated@@524 $generated@@602)))
 :pattern ( ($generated@@523 ($generated@@240 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@173) ($generated@@189 $generated@@603 ($generated@@146 0))) (and (= ($generated@@240 ($generated@@306 $generated@@2 $generated@@603)) $generated@@603) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@603) ($generated@@146 0))))
 :pattern ( ($generated@@189 $generated@@603 ($generated@@146 0)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@173) (= (type $generated@@605) $generated@@67)) ($generated@@189 $generated@@604 ($generated@@205 $generated@@605))) (and (= ($generated@@240 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@604)) $generated@@604) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@604) ($generated@@205 $generated@@605))))
 :pattern ( ($generated@@189 $generated@@604 ($generated@@205 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@173) (= (type $generated@@607) $generated@@67)) ($generated@@189 $generated@@606 ($generated@@210 $generated@@607))) (and (= ($generated@@240 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@606)) $generated@@606) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@4) $generated@@606) ($generated@@210 $generated@@607))))
 :pattern ( ($generated@@189 $generated@@606 ($generated@@210 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@173) (= (type $generated@@609) $generated@@67)) ($generated@@189 $generated@@608 ($generated@@180 $generated@@609))) (and (= ($generated@@240 ($generated@@306 ($generated@@83 $generated@@173 $generated@@2) $generated@@608)) $generated@@608) ($generated@@89 ($generated@@306 ($generated@@83 $generated@@173 $generated@@2) $generated@@608) ($generated@@180 $generated@@609))))
 :pattern ( ($generated@@189 $generated@@608 ($generated@@180 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@173) (= (type $generated@@611) $generated@@67)) ($generated@@189 $generated@@610 ($generated@@475 $generated@@611))) (and (= ($generated@@240 ($generated@@306 ($generated@@234 $generated@@173) $generated@@610)) $generated@@610) ($generated@@89 ($generated@@306 ($generated@@234 $generated@@173) $generated@@610) ($generated@@475 $generated@@611))))
 :pattern ( ($generated@@189 $generated@@610 ($generated@@475 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (! (let (($generated@@615 ($generated@@96 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@83 $generated@@615 $generated@@4)) (= (type $generated@@614) ($generated@@83 $generated@@615 $generated@@4))) (= ($generated@@612 $generated@@613 $generated@@614) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@615) ($generated@@0 ($generated@@94 $generated@@613 $generated@@616))) ($generated@@0 ($generated@@94 $generated@@614 $generated@@616)))
 :pattern ( ($generated@@94 $generated@@613 $generated@@616))
 :pattern ( ($generated@@94 $generated@@614 $generated@@616))
)))))
 :pattern ( ($generated@@612 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@83 $generated@@173 $generated@@2)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@617 ($generated@@180 $generated@@618) $generated@@619) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@173) (< 0 ($generated ($generated@@94 $generated@@617 $generated@@620)))) ($generated@@220 $generated@@620 $generated@@618 $generated@@619))
 :pattern ( ($generated@@94 $generated@@617 $generated@@620))
))))
 :pattern ( ($generated@@91 $generated@@617 ($generated@@180 $generated@@618) $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@164) (= (type $generated@@622) $generated@@67)) (= (type $generated@@623) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@87 $generated@@623) (and ($generated@@162 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@67) ($generated@@91 $generated@@621 ($generated@@163 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@91 $generated@@621 ($generated@@163 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@220 ($generated@@171 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@220 ($generated@@171 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@164) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@87 $generated@@627) (and ($generated@@162 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@67) ($generated@@91 $generated@@625 ($generated@@163 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@91 $generated@@625 ($generated@@163 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@220 ($generated@@172 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@220 ($generated@@172 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@173) (= (type $generated@@630) $generated@@173)) (= ($generated@@188 ($generated@@216 $generated@@629) ($generated@@216 $generated@@630)) ($generated@@216 ($generated@@188 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@188 ($generated@@216 $generated@@629) ($generated@@216 $generated@@630)))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@240 ($generated@@8 ($generated@@92 $generated@@631))) ($generated@@216 ($generated@@240 ($generated@@8 $generated@@631))))
 :pattern ( ($generated@@240 ($generated@@8 ($generated@@92 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ) (! (= ($generated@@240 ($generated@@216 $generated@@632)) ($generated@@216 ($generated@@240 $generated@@632)))
 :pattern ( ($generated@@240 ($generated@@216 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@235 (type $generated@@633))))
 (=> (and (= (type $generated@@633) ($generated@@234 $generated@@634)) (= ($generated@@233 $generated@@633) 0)) (= $generated@@633 ($generated@@232 $generated@@634))))
 :pattern ( ($generated@@233 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 (type $generated@@636)))
 (=> (and (and (= (type $generated@@635) ($generated@@83 $generated@@638 $generated@@2)) (= (type $generated@@637) $generated@@2)) (<= 0 ($generated $generated@@637))) (= ($generated@@255 ($generated@@98 $generated@@635 $generated@@636 $generated@@637)) (+ (- ($generated@@255 $generated@@635) ($generated ($generated@@94 $generated@@635 $generated@@636))) ($generated $generated@@637)))))
 :pattern ( ($generated@@255 ($generated@@98 $generated@@635 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@640) $generated@@2)) ($generated@@91 $generated@@640 $generated@@46 $generated@@639))
 :pattern ( ($generated@@91 $generated@@640 $generated@@46 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@642) $generated@@3)) ($generated@@91 $generated@@642 $generated@@47 $generated@@641))
 :pattern ( ($generated@@91 $generated@@642 $generated@@47 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@644) $generated@@4)) ($generated@@91 $generated@@644 $generated@@44 $generated@@643))
 :pattern ( ($generated@@91 $generated@@644 $generated@@44 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@646) $generated@@433)) ($generated@@91 $generated@@646 $generated@@45 $generated@@645))
 :pattern ( ($generated@@91 $generated@@646 $generated@@45 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@648) $generated@@173)) ($generated@@91 $generated@@648 $generated@@48 $generated@@647))
 :pattern ( ($generated@@91 $generated@@648 $generated@@48 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@234 $generated@@173)) (= (type $generated@@650) $generated@@67)) (= ($generated@@89 $generated@@649 ($generated@@475 $generated@@650)) (forall (($generated@@651 Int) ) (!  (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@233 $generated@@649))) ($generated@@189 ($generated@@476 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@476 $generated@@649 $generated@@651))
))))
 :pattern ( ($generated@@89 $generated@@649 ($generated@@475 $generated@@650)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 Int) ) (!  (=> (= (type $generated@@653) ($generated@@234 $generated@@173)) (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@233 $generated@@653))) (< ($generated@@524 ($generated@@306 $generated@@164 ($generated@@476 $generated@@653 $generated@@654))) ($generated@@652 $generated@@653))))
 :pattern ( ($generated@@524 ($generated@@306 $generated@@164 ($generated@@476 $generated@@653 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) ($generated@@263 $generated@@173 $generated@@173)) (= (type $generated@@656) $generated@@67)) (= (type $generated@@657) $generated@@67)) ($generated@@89 $generated@@655 ($generated@@373 $generated@@656 $generated@@657))) (and (and ($generated@@89 ($generated@@261 $generated@@655) ($generated@@205 $generated@@656)) ($generated@@89 ($generated@@316 $generated@@655) ($generated@@205 $generated@@657))) ($generated@@89 ($generated@@347 $generated@@655) ($generated@@205 ($generated@@163 $generated@@656 $generated@@657)))))
 :pattern ( ($generated@@89 $generated@@655 ($generated@@373 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@281 $generated@@173 $generated@@173)) (= (type $generated@@659) $generated@@67)) (= (type $generated@@660) $generated@@67)) ($generated@@89 $generated@@658 ($generated@@381 $generated@@659 $generated@@660))) (and (and ($generated@@89 ($generated@@279 $generated@@658) ($generated@@210 $generated@@659)) ($generated@@89 ($generated@@327 $generated@@658) ($generated@@210 $generated@@660))) ($generated@@89 ($generated@@355 $generated@@658) ($generated@@210 ($generated@@163 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@89 $generated@@658 ($generated@@381 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@2) ($generated@@89 $generated@@661 $generated@@46))
 :pattern ( ($generated@@89 $generated@@661 $generated@@46))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@3) ($generated@@89 $generated@@662 $generated@@47))
 :pattern ( ($generated@@89 $generated@@662 $generated@@47))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@4) ($generated@@89 $generated@@663 $generated@@44))
 :pattern ( ($generated@@89 $generated@@663 $generated@@44))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@433) ($generated@@89 $generated@@664 $generated@@45))
 :pattern ( ($generated@@89 $generated@@664 $generated@@45))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@173) ($generated@@89 $generated@@665 $generated@@48))
 :pattern ( ($generated@@89 $generated@@665 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(assert  (and (and (= (type $generated@@666) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@667) $generated@@84)) (= (type $generated@@668) ($generated@@546 $generated@@84 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@669 true))
(let (($generated@@670  (=> (and (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@666 $generated@@667)) (= (ControlFlow 0 5) 2)) $generated@@669)))
(let (($generated@@671  (=> (and (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8)) ($generated@@91 $generated@@667 $generated@@154 $generated@@666)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (= $generated@@667 $generated@@667) (and ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))) (not ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))))))) (=> (or (= $generated@@667 $generated@@667) (and ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))) (not ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)))))) (=> (or (= $generated@@667 $generated@@667) ($generated@@86 $generated@@666 $generated@@667)) (=> (and ($generated@@82 $generated@@666 $generated@@667) (= (ControlFlow 0 3) 2)) $generated@@669)))))))
(let (($generated@@672  (=> (=> ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)))) (and (=> (= (ControlFlow 0 8) 3) $generated@@671) (=> (= (ControlFlow 0 8) 5) $generated@@670)))))
(let (($generated@@673  (=> ($generated@@91 $generated@@667 $generated@@154 $generated@@666) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (= $generated@@667 $generated@@667) (and ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))) (not ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))))))) (=> (or (= $generated@@667 $generated@@667) (and ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667))) (not ($generated@@612 ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)) ($generated@@389 ($generated@@538 $generated@@173) ($generated@@240 $generated@@667)))))) (=> (or (= $generated@@667 $generated@@667) ($generated@@86 $generated@@666 $generated@@667)) (=> (and ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)))) (and (=> (= (ControlFlow 0 6) 3) $generated@@671) (=> (= (ControlFlow 0 6) 5) $generated@@670)))))))))
(let (($generated@@674 true))
(let (($generated@@675  (=> (= $generated@@668 ($generated@@545 $generated@@88 $generated@@666 $generated@@60 $generated@@667)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@674) (=> (= (ControlFlow 0 9) 6) $generated@@673)) (=> (= (ControlFlow 0 9) 8) $generated@@672)))))
(let (($generated@@676  (=> (and ($generated@@87 $generated@@666) ($generated@@516 $generated@@666)) (=> (and (and (not (= $generated@@667 $generated@@88)) (and ($generated@@89 $generated@@667 $generated@@90) ($generated@@91 $generated@@667 $generated@@90 $generated@@666))) (and (= 0 $generated@@81) (= (ControlFlow 0 10) 9))) $generated@@675))))
$generated@@676)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 () Int)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (Int) Int)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@192 (T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U) Bool)
(declare-fun $generated@@200 (T@T T@U T@U) T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@T)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@236 (T@T) T@U)
(declare-fun $generated@@237 (T@U) Int)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 (T@T T@T) T@U)
(declare-fun $generated@@267 (T@T T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U T@U) Bool)
(declare-fun $generated@@310 (T@T T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@377 (T@U T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@T) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@425 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Bool)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@537 (T@U T@U T@U) T@U)
(declare-fun $generated@@538 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@539 (T@T T@T) T@T)
(declare-fun $generated@@540 (T@T) T@T)
(declare-fun $generated@@541 (T@T) T@T)
(declare-fun $generated@@542 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@593 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@652 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@69 $generated@@75))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@68)) (= ($generated@@1 $generated@@73) 11)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@76 $generated@@60) 0))
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@68)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@100 $generated@@101)) 12)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@96 ($generated@@83 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@83 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@97 ($generated@@83 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@83 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@97 (type $generated@@106))))
(= (type ($generated@@94 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@98 $generated@@109 $generated@@110 $generated@@111)) ($generated@@83 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@98 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@97 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@94 ($generated@@98 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@94 ($generated@@98 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@94 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@94 ($generated@@98 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@94 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@70 (type $generated@@127))))
(= (type ($generated@@93 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@93 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@85)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@70 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@93 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@93 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@93 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@93 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@93 $generated@@141 $generated@@143)))
 :weight 0
)))) (= (type $generated@@88) $generated@@84)) (= (type $generated@@90) $generated@@67)) (= (type $generated@@95) ($generated@@69 $generated@@2))))
(assert  (=> (<= 0 $generated@@81) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@145) $generated@@84)) (or ($generated@@86 $generated@@144 $generated@@145) (and (not (= 0 $generated@@81)) (and ($generated@@87 $generated@@144) (and (not (= $generated@@145 $generated@@88)) (and ($generated@@89 $generated@@145 $generated@@90) ($generated@@91 $generated@@145 $generated@@90 $generated@@144))))))) (and (=> ($generated@@82 $generated@@144 $generated@@145) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@144 $generated@@145) $generated@@95)))) (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@144 $generated@@145) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@144 $generated@@145))))
 :pattern ( ($generated@@82 $generated@@144 $generated@@145))
))))
(assert  (=> (<= 1 $generated@@81) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@149) $generated@@84)) (or ($generated@@147 $generated@@148 $generated@@149) (and (not (= 1 $generated@@81)) (and ($generated@@87 $generated@@148) (and (not (= $generated@@149 $generated@@88)) (and ($generated@@89 $generated@@149 $generated@@90) ($generated@@91 $generated@@149 $generated@@90 $generated@@148))))))) (and (=> ($generated@@82 $generated@@148 $generated@@149) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@148 $generated@@149) $generated@@95)))) (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@148 $generated@@149) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@148 $generated@@149))))
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@67)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@91 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@91 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@156) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@84) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (= (type $generated@@158) $generated@@67))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@84) (= (type $generated@@160) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@159 $generated@@158 $generated@@160)  (or (= $generated@@159 $generated@@88) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@91 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@164) $generated@@84)) (and ($generated@@87 $generated@@163) (and (not (= $generated@@164 $generated@@88)) (= ($generated@@161 $generated@@164) $generated@@158)))) ($generated@@89 ($generated@@93 ($generated@@94 $generated@@163 $generated@@164) $generated@@95) $generated@@46))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@163 $generated@@164) $generated@@95))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@89 $generated@@165 ($generated@@150 0)))
 :pattern ( ($generated@@89 $generated@@165 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@67)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@67) (= (type $generated@@172) $generated@@67)) (= (type $generated@@173) $generated@@168)) ($generated@@89 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@89 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 16) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@182 $generated@@183)) $generated@@73)
 :pattern ( ($generated@@182 $generated@@183))
)))
(assert (= ($generated@@182 $generated@@158) $generated@@65))
(assert (= ($generated@@182 $generated@@90) $generated@@65))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@67)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@83 $generated@@177 $generated@@2)) (= (type $generated@@188) $generated@@67)) ($generated@@89 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@89 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> (= (type $generated@@189) $generated@@84) (= ($generated@@89 $generated@@189 $generated@@158)  (or (= $generated@@189 $generated@@88) (= ($generated@@161 $generated@@189) $generated@@158))))
 :pattern ( ($generated@@89 $generated@@189 $generated@@158))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (= (type $generated@@190) $generated@@84) (= (type $generated@@191) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@190 $generated@@90 $generated@@191) ($generated@@91 $generated@@190 $generated@@158 $generated@@191)))
 :pattern ( ($generated@@91 $generated@@190 $generated@@90 $generated@@191))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@194 $generated@@195)) $generated@@168)
 :pattern ( ($generated@@192 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (and (= (type $generated@@196) $generated@@67) (= (type $generated@@197) $generated@@67)) (= (type $generated@@198) $generated@@177)) (= (type $generated@@199) $generated@@177)) (= ($generated@@89 ($generated@@192 $generated@@198 $generated@@199) ($generated@@167 $generated@@196 $generated@@197))  (and ($generated@@193 $generated@@198 $generated@@196) ($generated@@193 $generated@@199 $generated@@197))))
 :pattern ( ($generated@@89 ($generated@@192 $generated@@198 $generated@@199) ($generated@@167 $generated@@196 $generated@@197)))
)))
(assert (= ($generated@@76 $generated@@95) 0))
(assert  (and (and (forall (($generated@@203 T@T) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= (type ($generated@@200 $generated@@203 $generated@@204 $generated@@205)) ($generated@@69 $generated@@203))
 :pattern ( ($generated@@200 $generated@@203 $generated@@204 $generated@@205))
)) (= ($generated@@1 $generated@@202) 17)) (= (type $generated@@201) $generated@@202)))
(assert (= ($generated@@200 $generated@@2 $generated@@201 $generated@@66) $generated@@95))
(assert  (not ($generated@@206 $generated@@95)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@207) $generated@@168) (= (type $generated@@208) $generated@@168)) (= ($generated@@174 $generated@@207 $generated@@208) (= $generated@@207 $generated@@208)))
 :pattern ( ($generated@@174 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ) (! (= (type ($generated@@209 $generated@@210)) $generated@@67)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (= (type $generated@@211) ($generated@@83 $generated@@177 $generated@@4)) (= (type $generated@@212) $generated@@67)) (= ($generated@@89 $generated@@211 ($generated@@209 $generated@@212)) (forall (($generated@@213 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@177) ($generated@@0 ($generated@@94 $generated@@211 $generated@@213))) ($generated@@193 $generated@@213 $generated@@212))
 :pattern ( ($generated@@94 $generated@@211 $generated@@213))
))))
 :pattern ( ($generated@@89 $generated@@211 ($generated@@209 $generated@@212)))
)))
(assert (forall (($generated@@215 T@U) ) (! (= (type ($generated@@214 $generated@@215)) $generated@@67)
 :pattern ( ($generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (= (type $generated@@216) ($generated@@83 $generated@@177 $generated@@4)) (= (type $generated@@217) $generated@@67)) (= ($generated@@89 $generated@@216 ($generated@@214 $generated@@217)) (forall (($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@177) ($generated@@0 ($generated@@94 $generated@@216 $generated@@218))) ($generated@@193 $generated@@218 $generated@@217))
 :pattern ( ($generated@@94 $generated@@216 $generated@@218))
))))
 :pattern ( ($generated@@89 $generated@@216 ($generated@@214 $generated@@217)))
)))
(assert (forall (($generated@@219 Int) ) (! (= ($generated@@92 $generated@@219) $generated@@219)
 :pattern ( ($generated@@92 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (! (let (($generated@@222 (type $generated@@221)))
(= (type ($generated@@220 $generated@@221)) $generated@@222))
 :pattern ( ($generated@@220 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@220 $generated@@223) $generated@@223)
 :pattern ( ($generated@@220 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@225) $generated@@67) (= (type $generated@@226) $generated@@67)) (= (type $generated@@227) $generated@@177)) (= (type $generated@@228) $generated@@177)) (= (type $generated@@229) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@87 $generated@@229)) (= ($generated@@91 ($generated@@192 $generated@@227 $generated@@228) ($generated@@167 $generated@@225 $generated@@226) $generated@@229)  (and ($generated@@224 $generated@@227 $generated@@225 $generated@@229) ($generated@@224 $generated@@228 $generated@@226 $generated@@229))))
 :pattern ( ($generated@@91 ($generated@@192 $generated@@227 $generated@@228) ($generated@@167 $generated@@225 $generated@@226) $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@72)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@168) (= ($generated@@166 $generated@@232) (= ($generated@@230 $generated@@232) $generated@@62)))
 :pattern ( ($generated@@166 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@168) ($generated@@166 $generated@@233)) (exists (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (and (and (= (type $generated@@234) $generated@@177) (= (type $generated@@235) $generated@@177)) (= $generated@@233 ($generated@@192 $generated@@234 $generated@@235)))
 :no-pattern (type $generated@@234)
 :no-pattern (type $generated@@235)
 :no-pattern ($generated $generated@@234)
 :no-pattern ($generated@@0 $generated@@234)
 :no-pattern ($generated $generated@@235)
 :no-pattern ($generated@@0 $generated@@235)
)))
 :pattern ( ($generated@@166 $generated@@233))
)))
(assert  (and (and (forall (($generated@@240 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@240)) 18)) (forall (($generated@@241 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@241)) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
))) (forall (($generated@@242 T@T) ) (! (= (type ($generated@@236 $generated@@242)) ($generated@@238 $generated@@242))
 :pattern ( ($generated@@236 $generated@@242))
))))
(assert (forall (($generated@@243 T@T) ) (! (= ($generated@@237 ($generated@@236 $generated@@243)) 0)
 :pattern ( ($generated@@236 $generated@@243))
)))
(assert ($generated@@206 $generated@@60))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@177)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@67) (= (type $generated@@248) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@224 ($generated@@244 $generated@@246) $generated@@247 $generated@@248) ($generated@@91 $generated@@246 $generated@@247 $generated@@248)))
 :pattern ( ($generated@@224 ($generated@@244 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@250) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@251) $generated@@177)) (= (type $generated@@252) $generated@@67)) ($generated@@154 $generated@@249 $generated@@250)) ($generated@@224 $generated@@251 $generated@@252 $generated@@249)) ($generated@@224 $generated@@251 $generated@@252 $generated@@250))
 :pattern ( ($generated@@154 $generated@@249 $generated@@250) ($generated@@224 $generated@@251 $generated@@252 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@253) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@254) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@256) $generated@@67)) ($generated@@154 $generated@@253 $generated@@254)) ($generated@@91 $generated@@255 $generated@@256 $generated@@253)) ($generated@@91 $generated@@255 $generated@@256 $generated@@254))
 :pattern ( ($generated@@154 $generated@@253 $generated@@254) ($generated@@91 $generated@@255 $generated@@256 $generated@@253))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@258) $generated@@84)) (=> (and (and ($generated@@87 $generated@@257) (and (not (= $generated@@258 $generated@@88)) (= ($generated@@161 $generated@@258) $generated@@158))) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@257 $generated@@258) $generated@@60))) ($generated@@91 ($generated@@93 ($generated@@94 $generated@@257 $generated@@258) $generated@@95) $generated@@46 $generated@@257)))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@257 $generated@@258) $generated@@95))
)))
(assert (forall (($generated@@261 T@T) ) (! (= (type ($generated@@260 $generated@@261)) ($generated@@83 $generated@@261 $generated@@2))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@96 (type $generated@@262))))
 (=> (= (type $generated@@262) ($generated@@83 $generated@@263 $generated@@2)) (and (= (= ($generated@@259 $generated@@262) 0) (= $generated@@262 ($generated@@260 $generated@@263))) (=> (not (= ($generated@@259 $generated@@262) 0)) (exists (($generated@@264 T@U) ) (!  (and (= (type $generated@@264) $generated@@263) (< 0 ($generated ($generated@@94 $generated@@262 $generated@@264))))
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
))))))
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert  (and (and (and (and (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@270 $generated@@271)) 19)) (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@272 $generated@@273)) $generated@@272)
 :pattern ( ($generated@@267 $generated@@272 $generated@@273))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@267 $generated@@274 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@267 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@268 (type $generated@@276))))
(= (type ($generated@@265 $generated@@276)) ($generated@@83 $generated@@277 $generated@@4)))
 :pattern ( ($generated@@265 $generated@@276))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= (type ($generated@@266 $generated@@278 $generated@@279)) ($generated@@267 $generated@@278 $generated@@279))
 :pattern ( ($generated@@266 $generated@@278 $generated@@279))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@T) ) (! (let (($generated@@282 (type $generated@@280)))
 (not ($generated@@0 ($generated@@94 ($generated@@265 ($generated@@266 $generated@@282 $generated@@281)) $generated@@280))))
 :pattern ( (let (($generated@@282 (type $generated@@280)))
($generated@@94 ($generated@@265 ($generated@@266 $generated@@282 $generated@@281)) $generated@@280)))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 20)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@83 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@94 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@94 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (= (type $generated@@302) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@303) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@301 $generated@@302 $generated@@303)) (and ($generated@@154 $generated@@302 $generated@@303) (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@70 (type $generated@@305))))
 (=> (and (and (= (type $generated@@304) $generated@@84) (= (type $generated@@305) ($generated@@69 $generated@@306))) (not ($generated@@206 $generated@@305))) (= ($generated@@93 ($generated@@94 $generated@@302 $generated@@304) $generated@@305) ($generated@@93 ($generated@@94 $generated@@303 $generated@@304) $generated@@305))))
 :pattern ( ($generated@@93 ($generated@@94 $generated@@303 $generated@@304) $generated@@305))
))))
 :pattern ( ($generated@@301 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@96 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@83 $generated@@308 $generated@@2)) (= ($generated@@185 $generated@@307) (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@308) (and (<= 0 ($generated ($generated@@94 $generated@@307 $generated@@309))) (<= ($generated ($generated@@94 $generated@@307 $generated@@309)) ($generated@@259 $generated@@307))))
 :pattern ( ($generated@@94 $generated@@307 $generated@@309))
)))))
 :pattern ( ($generated@@185 $generated@@307))
)))
(assert (forall (($generated@@311 T@T) ($generated@@312 T@U) ) (! (= (type ($generated@@310 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@310 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@177) ($generated@@193 $generated@@313 $generated@@158)) (and (= ($generated@@244 ($generated@@310 $generated@@84 $generated@@313)) $generated@@313) ($generated@@89 ($generated@@310 $generated@@84 $generated@@313) $generated@@158)))
 :pattern ( ($generated@@193 $generated@@313 $generated@@158))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@177) ($generated@@193 $generated@@314 $generated@@90)) (and (= ($generated@@244 ($generated@@310 $generated@@84 $generated@@314)) $generated@@314) ($generated@@89 ($generated@@310 $generated@@84 $generated@@314) $generated@@90)))
 :pattern ( ($generated@@193 $generated@@314 $generated@@90))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@84) (= ($generated@@89 $generated@@315 $generated@@90)  (and ($generated@@89 $generated@@315 $generated@@158) (not (= $generated@@315 $generated@@88)))))
 :pattern ( ($generated@@89 $generated@@315 $generated@@90))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@269 (type $generated@@316))))
(let (($generated@@318 ($generated@@268 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@267 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@266 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@94 ($generated@@265 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@265 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@269 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@83 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@269 (type $generated@@323))))
(let (($generated@@325 ($generated@@268 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@267 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@266 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@94 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@287 (type $generated@@327))))
(let (($generated@@329 ($generated@@286 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@285 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@284 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@94 ($generated@@283 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@283 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@287 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@83 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@287 (type $generated@@334))))
(let (($generated@@336 ($generated@@286 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@285 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@284 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@94 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) ($generated@@83 $generated@@177 $generated@@2)) (= (type $generated@@339) $generated@@67)) (= ($generated@@89 $generated@@338 ($generated@@184 $generated@@339)) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@177) (< 0 ($generated ($generated@@94 $generated@@338 $generated@@340)))) ($generated@@193 $generated@@340 $generated@@339))
 :pattern ( ($generated@@94 $generated@@338 $generated@@340))
))))
 :pattern ( ($generated@@89 $generated@@338 ($generated@@184 $generated@@339)))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@83 $generated@@177 $generated@@4)) (= (type $generated@@342) $generated@@67)) (= (type $generated@@343) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@341 ($generated@@209 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@177) ($generated@@0 ($generated@@94 $generated@@341 $generated@@344))) ($generated@@224 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@94 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@91 $generated@@341 ($generated@@209 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@83 $generated@@177 $generated@@4)) (= (type $generated@@346) $generated@@67)) (= (type $generated@@347) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@345 ($generated@@214 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@177) ($generated@@0 ($generated@@94 $generated@@345 $generated@@348))) ($generated@@224 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@94 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@91 $generated@@345 ($generated@@214 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
(= ($generated ($generated@@94 ($generated@@260 $generated@@350) $generated@@349)) 0))
 :pattern ( (let (($generated@@350 (type $generated@@349)))
($generated@@94 ($generated@@260 $generated@@350) $generated@@349)))
)))
(assert  (and (forall (($generated@@353 T@U) ) (! (= (type ($generated@@351 $generated@@353)) ($generated@@83 $generated@@177 $generated@@4))
 :pattern ( ($generated@@351 $generated@@353))
)) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@269 (type $generated@@354))))
(let (($generated@@356 ($generated@@268 (type $generated@@354))))
(= (type ($generated@@352 $generated@@354)) ($generated@@83 $generated@@356 $generated@@355))))
 :pattern ( ($generated@@352 $generated@@354))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@267 $generated@@177 $generated@@177)) (= (type $generated@@358) $generated@@177)) (= ($generated@@0 ($generated@@94 ($generated@@351 $generated@@357) $generated@@358))  (and ($generated@@0 ($generated@@94 ($generated@@265 $generated@@357) ($generated@@175 ($generated@@310 $generated@@168 $generated@@358)))) (= ($generated@@94 ($generated@@352 $generated@@357) ($generated@@175 ($generated@@310 $generated@@168 $generated@@358))) ($generated@@176 ($generated@@310 $generated@@168 $generated@@358))))))
 :pattern ( ($generated@@94 ($generated@@351 $generated@@357) $generated@@358))
)))
(assert  (and (forall (($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@83 $generated@@177 $generated@@4))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@287 (type $generated@@362))))
(let (($generated@@364 ($generated@@286 (type $generated@@362))))
(= (type ($generated@@360 $generated@@362)) ($generated@@83 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@285 $generated@@177 $generated@@177)) (= (type $generated@@366) $generated@@177)) (= ($generated@@0 ($generated@@94 ($generated@@359 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@94 ($generated@@283 $generated@@365) ($generated@@175 ($generated@@310 $generated@@168 $generated@@366)))) (= ($generated@@94 ($generated@@360 $generated@@365) ($generated@@175 ($generated@@310 $generated@@168 $generated@@366))) ($generated@@176 ($generated@@310 $generated@@168 $generated@@366))))))
 :pattern ( ($generated@@94 ($generated@@359 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(let (($generated@@370 ($generated@@268 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@267 $generated@@370 $generated@@369)) (= ($generated@@0 ($generated@@94 ($generated@@320 $generated@@367) $generated@@368)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) (and ($generated@@0 ($generated@@94 ($generated@@265 $generated@@367) $generated@@371)) (= $generated@@368 ($generated@@94 ($generated@@352 $generated@@367) $generated@@371))))
 :pattern ( ($generated@@94 ($generated@@265 $generated@@367) $generated@@371))
 :pattern ( ($generated@@94 ($generated@@352 $generated@@367) $generated@@371))
))))))
 :pattern ( ($generated@@94 ($generated@@320 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(let (($generated@@375 ($generated@@286 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@285 $generated@@375 $generated@@374)) (= ($generated@@0 ($generated@@94 ($generated@@331 $generated@@372) $generated@@373)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) (and ($generated@@0 ($generated@@94 ($generated@@283 $generated@@372) $generated@@376)) (= $generated@@373 ($generated@@94 ($generated@@360 $generated@@372) $generated@@376))))
 :pattern ( ($generated@@94 ($generated@@283 $generated@@372) $generated@@376))
 :pattern ( ($generated@@94 ($generated@@360 $generated@@372) $generated@@376))
))))))
 :pattern ( ($generated@@94 ($generated@@331 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@378 $generated@@379)) $generated@@67)
 :pattern ( ($generated@@377 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (and (= (type $generated@@380) ($generated@@267 $generated@@177 $generated@@177)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) $generated@@67)) (= (type $generated@@383) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@177) ($generated@@0 ($generated@@94 ($generated@@265 $generated@@380) $generated@@384))) (and ($generated@@224 ($generated@@94 ($generated@@352 $generated@@380) $generated@@384) $generated@@382 $generated@@383) ($generated@@224 $generated@@384 $generated@@381 $generated@@383)))
 :pattern ( ($generated@@94 ($generated@@352 $generated@@380) $generated@@384))
 :pattern ( ($generated@@94 ($generated@@265 $generated@@380) $generated@@384))
))))
 :pattern ( ($generated@@91 $generated@@380 ($generated@@377 $generated@@381 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@67)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@285 $generated@@177 $generated@@177)) (= (type $generated@@389) $generated@@67)) (= (type $generated@@390) $generated@@67)) (= (type $generated@@391) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@177) ($generated@@0 ($generated@@94 ($generated@@283 $generated@@388) $generated@@392))) (and ($generated@@224 ($generated@@94 ($generated@@360 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@224 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@94 ($generated@@360 $generated@@388) $generated@@392))
 :pattern ( ($generated@@94 ($generated@@283 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@91 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@393) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@394) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@395) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@393 $generated@@395))) (and ($generated@@154 $generated@@393 $generated@@394) ($generated@@154 $generated@@394 $generated@@395))) ($generated@@154 $generated@@393 $generated@@395))
 :pattern ( ($generated@@154 $generated@@393 $generated@@394) ($generated@@154 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@T) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@83 $generated@@397 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@287 (type $generated@@398))))
(let (($generated@@400 ($generated@@286 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@285 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@284 $generated@@400 $generated@@399)) (= ($generated@@283 $generated@@398) ($generated@@396 $generated@@400))))))
 :pattern ( ($generated@@283 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@287 (type $generated@@401))))
(let (($generated@@403 ($generated@@286 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@285 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@284 $generated@@403 $generated@@402)) (= ($generated@@331 $generated@@401) ($generated@@396 $generated@@402))))))
 :pattern ( ($generated@@331 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@287 (type $generated@@404))))
(let (($generated@@406 ($generated@@286 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@285 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@284 $generated@@406 $generated@@405)) (= ($generated@@359 $generated@@404) ($generated@@396 $generated@@177))))))
 :pattern ( ($generated@@359 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@269 (type $generated@@407))))
(let (($generated@@409 ($generated@@268 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@267 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@266 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@177) (= (type $generated@@411) $generated@@177)) ($generated@@0 ($generated@@94 ($generated@@351 $generated@@407) ($generated@@244 ($generated@@192 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@351 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@287 (type $generated@@412))))
(let (($generated@@414 ($generated@@286 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@285 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@284 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@177) (= (type $generated@@416) $generated@@177)) ($generated@@0 ($generated@@94 ($generated@@359 $generated@@412) ($generated@@244 ($generated@@192 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@359 $generated@@412))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@202)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@T) ) (!  (=> (and (= (type $generated@@419) $generated@@202) (= (type $generated@@420) $generated@@71)) (and (= ($generated@@417 ($generated@@200 $generated@@421 $generated@@419 $generated@@420)) $generated@@419) (= ($generated@@79 ($generated@@200 $generated@@421 $generated@@419 $generated@@420)) $generated@@420)))
 :pattern ( ($generated@@200 $generated@@421 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@177) ($generated@@193 $generated@@422 $generated@@46)) (and (= ($generated@@244 ($generated@@310 $generated@@2 $generated@@422)) $generated@@422) ($generated@@89 ($generated@@310 $generated@@2 $generated@@422) $generated@@46)))
 :pattern ( ($generated@@193 $generated@@422 $generated@@46))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@177) ($generated@@193 $generated@@423 $generated@@47)) (and (= ($generated@@244 ($generated@@310 $generated@@3 $generated@@423)) $generated@@423) ($generated@@89 ($generated@@310 $generated@@3 $generated@@423) $generated@@47)))
 :pattern ( ($generated@@193 $generated@@423 $generated@@47))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@177) ($generated@@193 $generated@@424 $generated@@44)) (and (= ($generated@@244 ($generated@@310 $generated@@4 $generated@@424)) $generated@@424) ($generated@@89 ($generated@@310 $generated@@4 $generated@@424) $generated@@44)))
 :pattern ( ($generated@@193 $generated@@424 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@425) 21))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@177) ($generated@@193 $generated@@426 $generated@@45)) (and (= ($generated@@244 ($generated@@310 $generated@@425 $generated@@426)) $generated@@426) ($generated@@89 ($generated@@310 $generated@@425 $generated@@426) $generated@@45)))
 :pattern ( ($generated@@193 $generated@@426 $generated@@45))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (= (type $generated@@428) $generated@@67) (= ($generated@@193 ($generated@@244 $generated@@427) $generated@@428) ($generated@@89 $generated@@427 $generated@@428)))
 :pattern ( ($generated@@193 ($generated@@244 $generated@@427) $generated@@428))
)))
(assert  (=> (<= 1 $generated@@81) (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@430) $generated@@84)) (or ($generated@@147 $generated@@429 $generated@@430) (and (not (= 1 $generated@@81)) (and ($generated@@87 $generated@@429) (and (not (= $generated@@430 $generated@@88)) (and ($generated@@89 $generated@@430 $generated@@90) ($generated@@91 $generated@@430 $generated@@90 $generated@@429))))))) (= ($generated@@146 $generated@@429 $generated@@430) (= ($generated ($generated@@93 ($generated@@94 $generated@@429 $generated@@430) $generated@@95)) ($generated@@92 8))))
 :pattern ( ($generated@@146 $generated@@429 $generated@@430) ($generated@@87 $generated@@429))
))))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@96 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@83 $generated@@432 $generated@@2)) (<= 0 ($generated@@259 $generated@@431))))
 :pattern ( ($generated@@259 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@239 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@238 $generated@@434)) (<= 0 ($generated@@237 $generated@@433))))
 :pattern ( ($generated@@237 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@67)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@67) (= (type $generated@@438) $generated@@67)) (= ($generated@@435 ($generated@@377 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@377 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@377 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@377 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@67) (= (type $generated@@444) $generated@@67)) (= ($generated@@77 ($generated@@377 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@377 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@385 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@385 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@385 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@385 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@77 ($generated@@385 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@385 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@177) (= (type $generated@@456) $generated@@177)) (= ($generated@@230 ($generated@@192 $generated@@455 $generated@@456)) $generated@@62))
 :pattern ( ($generated@@192 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@167 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@167 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@167 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@167 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@177) (= (type $generated@@466) $generated@@177)) (= ($generated@@175 ($generated@@192 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@192 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@177) (= (type $generated@@468) $generated@@177)) (= ($generated@@176 ($generated@@192 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@192 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@239 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@238 $generated@@177)) (= (type $generated@@476) $generated@@67)) (= (type $generated@@477) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@237 $generated@@475))) ($generated@@224 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@91 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@150 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@150 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@67) (= ($generated@@481 ($generated@@209 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@209 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@77 ($generated@@209 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@209 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@67) (= ($generated@@485 ($generated@@214 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@214 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@77 ($generated@@214 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@214 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@67) (= ($generated@@489 ($generated@@184 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@184 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@77 ($generated@@184 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@77 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@310 $generated@@498 ($generated@@244 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@244 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@267 $generated@@177 $generated@@177)) (= (type $generated@@500) $generated@@67)) (= (type $generated@@501) $generated@@67)) (= ($generated@@89 $generated@@499 ($generated@@377 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@177) ($generated@@0 ($generated@@94 ($generated@@265 $generated@@499) $generated@@502))) (and ($generated@@193 ($generated@@94 ($generated@@352 $generated@@499) $generated@@502) $generated@@501) ($generated@@193 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@94 ($generated@@352 $generated@@499) $generated@@502))
 :pattern ( ($generated@@94 ($generated@@265 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@89 $generated@@499 ($generated@@377 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@285 $generated@@177 $generated@@177)) (= (type $generated@@504) $generated@@67)) (= (type $generated@@505) $generated@@67)) (= ($generated@@89 $generated@@503 ($generated@@385 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@177) ($generated@@0 ($generated@@94 ($generated@@283 $generated@@503) $generated@@506))) (and ($generated@@193 ($generated@@94 ($generated@@360 $generated@@503) $generated@@506) $generated@@505) ($generated@@193 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@94 ($generated@@360 $generated@@503) $generated@@506))
 :pattern ( ($generated@@94 ($generated@@283 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@89 $generated@@503 ($generated@@385 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@509) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@510) $generated@@84)) (=> (and (and (and ($generated@@87 $generated@@508) ($generated@@87 $generated@@509)) (and (not (= $generated@@510 $generated@@88)) ($generated@@89 $generated@@510 $generated@@90))) (and ($generated@@507 $generated@@508) ($generated@@154 $generated@@508 $generated@@509))) (=> (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@70 (type $generated@@512))))
 (=> (and (and (= (type $generated@@511) $generated@@84) (= (type $generated@@512) ($generated@@69 $generated@@513))) (and (not (= $generated@@511 $generated@@88)) (= $generated@@511 $generated@@510))) (= ($generated@@93 ($generated@@94 $generated@@508 $generated@@511) $generated@@512) ($generated@@93 ($generated@@94 $generated@@509 $generated@@511) $generated@@512))))
 :no-pattern (type $generated@@511)
 :no-pattern (type $generated@@512)
 :no-pattern ($generated $generated@@511)
 :no-pattern ($generated@@0 $generated@@511)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
)) (= ($generated@@82 $generated@@508 $generated@@510) ($generated@@82 $generated@@509 $generated@@510)))))
 :pattern ( ($generated@@507 $generated@@508) ($generated@@154 $generated@@508 $generated@@509) ($generated@@82 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@515) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@516) $generated@@84)) (=> (and (and (and ($generated@@87 $generated@@514) ($generated@@87 $generated@@515)) (and (not (= $generated@@516 $generated@@88)) ($generated@@89 $generated@@516 $generated@@90))) (and ($generated@@507 $generated@@514) ($generated@@154 $generated@@514 $generated@@515))) (=> (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@70 (type $generated@@518))))
 (=> (and (and (= (type $generated@@517) $generated@@84) (= (type $generated@@518) ($generated@@69 $generated@@519))) (and (not (= $generated@@517 $generated@@88)) (= $generated@@517 $generated@@516))) (= ($generated@@93 ($generated@@94 $generated@@514 $generated@@517) $generated@@518) ($generated@@93 ($generated@@94 $generated@@515 $generated@@517) $generated@@518))))
 :no-pattern (type $generated@@517)
 :no-pattern (type $generated@@518)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
)) (= ($generated@@146 $generated@@514 $generated@@516) ($generated@@146 $generated@@515 $generated@@516)))))
 :pattern ( ($generated@@507 $generated@@514) ($generated@@154 $generated@@514 $generated@@515) ($generated@@146 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@177) (= (type $generated@@523) $generated@@177)) (< ($generated@@520 $generated@@522) ($generated@@521 ($generated@@192 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@192 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@177) (= (type $generated@@525) $generated@@177)) (< ($generated@@520 $generated@@525) ($generated@@521 ($generated@@192 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@192 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@177) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@67)) ($generated@@193 $generated@@526 ($generated@@377 $generated@@527 $generated@@528))) (and (= ($generated@@244 ($generated@@310 ($generated@@267 $generated@@177 $generated@@177) $generated@@526)) $generated@@526) ($generated@@89 ($generated@@310 ($generated@@267 $generated@@177 $generated@@177) $generated@@526) ($generated@@377 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@193 $generated@@526 ($generated@@377 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@177) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@193 $generated@@529 ($generated@@385 $generated@@530 $generated@@531))) (and (= ($generated@@244 ($generated@@310 ($generated@@285 $generated@@177 $generated@@177) $generated@@529)) $generated@@529) ($generated@@89 ($generated@@310 ($generated@@285 $generated@@177 $generated@@177) $generated@@529) ($generated@@385 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@193 $generated@@529 ($generated@@385 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@177)) ($generated@@193 $generated@@534 ($generated@@167 $generated@@532 $generated@@533))) (and (= ($generated@@244 ($generated@@310 $generated@@168 $generated@@534)) $generated@@534) ($generated@@89 ($generated@@310 $generated@@168 $generated@@534) ($generated@@167 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@193 $generated@@534 ($generated@@167 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@94 ($generated@@396 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@94 ($generated@@396 $generated@@536) $generated@@535)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@543 T@T) ($generated@@544 T@T) ) (= ($generated@@1 ($generated@@539 $generated@@543 $generated@@544)) 22)) (forall (($generated@@545 T@T) ($generated@@546 T@T) ) (! (= ($generated@@540 ($generated@@539 $generated@@545 $generated@@546)) $generated@@545)
 :pattern ( ($generated@@539 $generated@@545 $generated@@546))
))) (forall (($generated@@547 T@T) ($generated@@548 T@T) ) (! (= ($generated@@541 ($generated@@539 $generated@@547 $generated@@548)) $generated@@548)
 :pattern ( ($generated@@539 $generated@@547 $generated@@548))
))) (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@541 (type $generated@@549))))
(= (type ($generated@@537 $generated@@549 $generated@@550 $generated@@551)) $generated@@552))
 :pattern ( ($generated@@537 $generated@@549 $generated@@550 $generated@@551))
))) (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
(let (($generated@@558 (type $generated@@554)))
(= (type ($generated@@542 $generated@@553 $generated@@554 $generated@@555 $generated@@556)) ($generated@@539 $generated@@558 $generated@@557))))
 :pattern ( ($generated@@542 $generated@@553 $generated@@554 $generated@@555 $generated@@556))
))) (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@541 (type $generated@@559))))
 (=> (= (type $generated@@562) $generated@@563) (= ($generated@@537 ($generated@@542 $generated@@559 $generated@@560 $generated@@561 $generated@@562) $generated@@560 $generated@@561) $generated@@562)))
 :weight 0
))) (and (and (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (or (= $generated@@566 $generated@@568) (= ($generated@@537 ($generated@@542 $generated@@565 $generated@@566 $generated@@567 $generated@@564) $generated@@568 $generated@@569) ($generated@@537 $generated@@565 $generated@@568 $generated@@569)))
 :weight 0
)) (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (or (= $generated@@573 $generated@@575) (= ($generated@@537 ($generated@@542 $generated@@571 $generated@@572 $generated@@573 $generated@@570) $generated@@574 $generated@@575) ($generated@@537 $generated@@571 $generated@@574 $generated@@575)))
 :weight 0
))) (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (or true (= ($generated@@537 ($generated@@542 $generated@@577 $generated@@578 $generated@@579 $generated@@576) $generated@@580 $generated@@581) ($generated@@537 $generated@@577 $generated@@580 $generated@@581)))
 :weight 0
)))) (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (= (type ($generated@@538 $generated@@582 $generated@@583 $generated@@584 $generated@@585)) ($generated@@539 $generated@@84 $generated@@4))
 :pattern ( ($generated@@538 $generated@@582 $generated@@583 $generated@@584 $generated@@585))
))))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@70 (type $generated@@591))))
 (=> (and (and (and (and (and (= (type $generated@@586) $generated@@84) (= (type $generated@@587) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@588) ($generated@@69 $generated@@4))) (= (type $generated@@589) $generated@@84)) (= (type $generated@@590) $generated@@84)) (= (type $generated@@591) ($generated@@69 $generated@@592))) (= ($generated@@0 ($generated@@537 ($generated@@538 $generated@@586 $generated@@587 $generated@@588 $generated@@589) $generated@@590 $generated@@591))  (=> (and (not (= $generated@@590 $generated@@586)) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@587 $generated@@590) $generated@@588))) (= $generated@@590 $generated@@589)))))
 :pattern ( ($generated@@537 ($generated@@538 $generated@@586 $generated@@587 $generated@@588 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (= (type ($generated@@593 $generated@@594 $generated@@595 $generated@@596 $generated@@597)) ($generated@@539 $generated@@84 $generated@@4))
 :pattern ( ($generated@@593 $generated@@594 $generated@@595 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@70 (type $generated@@603))))
 (=> (and (and (and (and (and (= (type $generated@@598) $generated@@84) (= (type $generated@@599) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@600) ($generated@@69 $generated@@4))) (= (type $generated@@601) $generated@@84)) (= (type $generated@@602) $generated@@84)) (= (type $generated@@603) ($generated@@69 $generated@@604))) (= ($generated@@0 ($generated@@537 ($generated@@593 $generated@@598 $generated@@599 $generated@@600 $generated@@601) $generated@@602 $generated@@603))  (=> (and (not (= $generated@@602 $generated@@598)) ($generated@@0 ($generated@@93 ($generated@@94 $generated@@599 $generated@@602) $generated@@600))) (= $generated@@602 $generated@@601)))))
 :pattern ( ($generated@@537 ($generated@@593 $generated@@598 $generated@@599 $generated@@600 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@67) (= (type $generated@@606) $generated@@67)) (and (= ($generated@@77 ($generated@@167 $generated@@605 $generated@@606)) $generated@@63) (= ($generated@@182 ($generated@@167 $generated@@605 $generated@@606)) $generated@@64)))
 :pattern ( ($generated@@167 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@168) (= ($generated@@520 ($generated@@244 $generated@@607)) ($generated@@521 $generated@@607)))
 :pattern ( ($generated@@520 ($generated@@244 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@177) ($generated@@193 $generated@@608 ($generated@@150 0))) (and (= ($generated@@244 ($generated@@310 $generated@@2 $generated@@608)) $generated@@608) ($generated@@89 ($generated@@310 ($generated@@83 $generated@@177 $generated@@4) $generated@@608) ($generated@@150 0))))
 :pattern ( ($generated@@193 $generated@@608 ($generated@@150 0)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@177) (= (type $generated@@610) $generated@@67)) ($generated@@193 $generated@@609 ($generated@@209 $generated@@610))) (and (= ($generated@@244 ($generated@@310 ($generated@@83 $generated@@177 $generated@@4) $generated@@609)) $generated@@609) ($generated@@89 ($generated@@310 ($generated@@83 $generated@@177 $generated@@4) $generated@@609) ($generated@@209 $generated@@610))))
 :pattern ( ($generated@@193 $generated@@609 ($generated@@209 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@177) (= (type $generated@@612) $generated@@67)) ($generated@@193 $generated@@611 ($generated@@214 $generated@@612))) (and (= ($generated@@244 ($generated@@310 ($generated@@83 $generated@@177 $generated@@4) $generated@@611)) $generated@@611) ($generated@@89 ($generated@@310 ($generated@@83 $generated@@177 $generated@@4) $generated@@611) ($generated@@214 $generated@@612))))
 :pattern ( ($generated@@193 $generated@@611 ($generated@@214 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@177) (= (type $generated@@614) $generated@@67)) ($generated@@193 $generated@@613 ($generated@@184 $generated@@614))) (and (= ($generated@@244 ($generated@@310 ($generated@@83 $generated@@177 $generated@@2) $generated@@613)) $generated@@613) ($generated@@89 ($generated@@310 ($generated@@83 $generated@@177 $generated@@2) $generated@@613) ($generated@@184 $generated@@614))))
 :pattern ( ($generated@@193 $generated@@613 ($generated@@184 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@177) (= (type $generated@@616) $generated@@67)) ($generated@@193 $generated@@615 ($generated@@469 $generated@@616))) (and (= ($generated@@244 ($generated@@310 ($generated@@238 $generated@@177) $generated@@615)) $generated@@615) ($generated@@89 ($generated@@310 ($generated@@238 $generated@@177) $generated@@615) ($generated@@469 $generated@@616))))
 :pattern ( ($generated@@193 $generated@@615 ($generated@@469 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@83 $generated@@177 $generated@@2)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@91 $generated@@617 ($generated@@184 $generated@@618) $generated@@619) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@177) (< 0 ($generated ($generated@@94 $generated@@617 $generated@@620)))) ($generated@@224 $generated@@620 $generated@@618 $generated@@619))
 :pattern ( ($generated@@94 $generated@@617 $generated@@620))
))))
 :pattern ( ($generated@@91 $generated@@617 ($generated@@184 $generated@@618) $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@168) (= (type $generated@@622) $generated@@67)) (= (type $generated@@623) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@87 $generated@@623) (and ($generated@@166 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@67) ($generated@@91 $generated@@621 ($generated@@167 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@91 $generated@@621 ($generated@@167 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@224 ($generated@@175 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@224 ($generated@@175 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@168) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@87 $generated@@627) (and ($generated@@166 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@67) ($generated@@91 $generated@@625 ($generated@@167 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@91 $generated@@625 ($generated@@167 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@224 ($generated@@176 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@224 ($generated@@176 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@177) (= (type $generated@@630) $generated@@177)) (= ($generated@@192 ($generated@@220 $generated@@629) ($generated@@220 $generated@@630)) ($generated@@220 ($generated@@192 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@192 ($generated@@220 $generated@@629) ($generated@@220 $generated@@630)))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@244 ($generated@@8 ($generated@@92 $generated@@631))) ($generated@@220 ($generated@@244 ($generated@@8 $generated@@631))))
 :pattern ( ($generated@@244 ($generated@@8 ($generated@@92 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ) (! (= ($generated@@244 ($generated@@220 $generated@@632)) ($generated@@220 ($generated@@244 $generated@@632)))
 :pattern ( ($generated@@244 ($generated@@220 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@239 (type $generated@@633))))
 (=> (and (= (type $generated@@633) ($generated@@238 $generated@@634)) (= ($generated@@237 $generated@@633) 0)) (= $generated@@633 ($generated@@236 $generated@@634))))
 :pattern ( ($generated@@237 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 (type $generated@@636)))
 (=> (and (and (= (type $generated@@635) ($generated@@83 $generated@@638 $generated@@2)) (= (type $generated@@637) $generated@@2)) (<= 0 ($generated $generated@@637))) (= ($generated@@259 ($generated@@98 $generated@@635 $generated@@636 $generated@@637)) (+ (- ($generated@@259 $generated@@635) ($generated ($generated@@94 $generated@@635 $generated@@636))) ($generated $generated@@637)))))
 :pattern ( ($generated@@259 ($generated@@98 $generated@@635 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@640) $generated@@2)) ($generated@@91 $generated@@640 $generated@@46 $generated@@639))
 :pattern ( ($generated@@91 $generated@@640 $generated@@46 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@642) $generated@@3)) ($generated@@91 $generated@@642 $generated@@47 $generated@@641))
 :pattern ( ($generated@@91 $generated@@642 $generated@@47 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@644) $generated@@4)) ($generated@@91 $generated@@644 $generated@@44 $generated@@643))
 :pattern ( ($generated@@91 $generated@@644 $generated@@44 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@646) $generated@@425)) ($generated@@91 $generated@@646 $generated@@45 $generated@@645))
 :pattern ( ($generated@@91 $generated@@646 $generated@@45 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@648) $generated@@177)) ($generated@@91 $generated@@648 $generated@@48 $generated@@647))
 :pattern ( ($generated@@91 $generated@@648 $generated@@48 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@238 $generated@@177)) (= (type $generated@@650) $generated@@67)) (= ($generated@@89 $generated@@649 ($generated@@469 $generated@@650)) (forall (($generated@@651 Int) ) (!  (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@237 $generated@@649))) ($generated@@193 ($generated@@470 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@470 $generated@@649 $generated@@651))
))))
 :pattern ( ($generated@@89 $generated@@649 ($generated@@469 $generated@@650)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 Int) ) (!  (=> (= (type $generated@@653) ($generated@@238 $generated@@177)) (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@237 $generated@@653))) (< ($generated@@521 ($generated@@310 $generated@@168 ($generated@@470 $generated@@653 $generated@@654))) ($generated@@652 $generated@@653))))
 :pattern ( ($generated@@521 ($generated@@310 $generated@@168 ($generated@@470 $generated@@653 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) ($generated@@267 $generated@@177 $generated@@177)) (= (type $generated@@656) $generated@@67)) (= (type $generated@@657) $generated@@67)) ($generated@@89 $generated@@655 ($generated@@377 $generated@@656 $generated@@657))) (and (and ($generated@@89 ($generated@@265 $generated@@655) ($generated@@209 $generated@@656)) ($generated@@89 ($generated@@320 $generated@@655) ($generated@@209 $generated@@657))) ($generated@@89 ($generated@@351 $generated@@655) ($generated@@209 ($generated@@167 $generated@@656 $generated@@657)))))
 :pattern ( ($generated@@89 $generated@@655 ($generated@@377 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@285 $generated@@177 $generated@@177)) (= (type $generated@@659) $generated@@67)) (= (type $generated@@660) $generated@@67)) ($generated@@89 $generated@@658 ($generated@@385 $generated@@659 $generated@@660))) (and (and ($generated@@89 ($generated@@283 $generated@@658) ($generated@@214 $generated@@659)) ($generated@@89 ($generated@@331 $generated@@658) ($generated@@214 $generated@@660))) ($generated@@89 ($generated@@359 $generated@@658) ($generated@@214 ($generated@@167 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@89 $generated@@658 ($generated@@385 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@2) ($generated@@89 $generated@@661 $generated@@46))
 :pattern ( ($generated@@89 $generated@@661 $generated@@46))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@3) ($generated@@89 $generated@@662 $generated@@47))
 :pattern ( ($generated@@89 $generated@@662 $generated@@47))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@4) ($generated@@89 $generated@@663 $generated@@44))
 :pattern ( ($generated@@89 $generated@@663 $generated@@44))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@425) ($generated@@89 $generated@@664 $generated@@45))
 :pattern ( ($generated@@89 $generated@@664 $generated@@45))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@177) ($generated@@89 $generated@@665 $generated@@48))
 :pattern ( ($generated@@89 $generated@@665 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () Bool)
(declare-fun $generated@@670 () T@U)
(assert  (and (and (and (= (type $generated@@666) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@667) $generated@@84)) (= (type $generated@@668) ($generated@@539 $generated@@84 $generated@@4))) (= (type $generated@@670) ($generated@@539 $generated@@84 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@671  (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95))))) (=> (=> ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)))) (=> (= (ControlFlow 0 7) (- 0 6)) (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@666 $generated@@667)))))))
(let (($generated@@672  (=> (and (and (= $generated@@668 ($generated@@593 $generated@@88 $generated@@666 $generated@@60 $generated@@667)) (= $generated@@669 ($generated@@0 ($generated@@537 $generated@@670 $generated@@667 $generated@@95)))) (and (= ($generated@@146 $generated@@666 $generated@@667) (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8))) ($generated@@89 ($generated@@11 ($generated@@146 $generated@@666 $generated@@667)) $generated@@44))) (and (=> (= (ControlFlow 0 9) (- 0 10)) $generated@@669) (=> $generated@@669 (=> (= (ControlFlow 0 9) 7) $generated@@671))))))
(let (($generated@@673 true))
(let (($generated@@674  (=> (and (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8)) ($generated@@82 $generated@@666 $generated@@667)) (= (ControlFlow 0 3) 1)) $generated@@673)))
(let (($generated@@675  (=> (= ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)) ($generated@@92 8)) (=> (and (and ($generated@@91 $generated@@667 $generated@@158 $generated@@666) ($generated@@86 $generated@@666 $generated@@667)) (and ($generated@@82 $generated@@666 $generated@@667) (= (ControlFlow 0 2) 1))) $generated@@673))))
(let (($generated@@676  (=> (=> ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95)))) (and (=> (= (ControlFlow 0 5) 2) $generated@@675) (=> (= (ControlFlow 0 5) 3) $generated@@674)))))
(let (($generated@@677  (=> (and (and ($generated@@91 $generated@@667 $generated@@158 $generated@@666) ($generated@@86 $generated@@666 $generated@@667)) (and ($generated@@82 $generated@@666 $generated@@667) (<= ($generated@@92 0) ($generated ($generated@@93 ($generated@@94 $generated@@666 $generated@@667) $generated@@95))))) (and (=> (= (ControlFlow 0 4) 2) $generated@@675) (=> (= (ControlFlow 0 4) 3) $generated@@674)))))
(let (($generated@@678  (=> (= $generated@@670 ($generated@@538 $generated@@88 $generated@@666 $generated@@60 $generated@@667)) (and (and (=> (= (ControlFlow 0 11) 9) $generated@@672) (=> (= (ControlFlow 0 11) 4) $generated@@677)) (=> (= (ControlFlow 0 11) 5) $generated@@676)))))
(let (($generated@@679  (=> (and ($generated@@87 $generated@@666) ($generated@@507 $generated@@666)) (=> (and (and (not (= $generated@@667 $generated@@88)) (and ($generated@@89 $generated@@667 $generated@@90) ($generated@@91 $generated@@667 $generated@@90 $generated@@666))) (and (= 1 $generated@@81) (= (ControlFlow 0 12) 11))) $generated@@678))))
$generated@@679))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 30)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 30) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 30) ($generated@@157 30))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 30 40))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 () Int)
(declare-fun $generated@@271 (T@U Int) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@273 () T@T)
(declare-fun $generated@@274 (Int) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 () T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert  (and (= ($generated@@1 $generated@@273) 18) (forall (($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@275)) $generated@@273)
 :pattern ( ($generated@@272 $generated@@275))
))))
(assert  (=> (<= 0 $generated@@270) (forall (($generated@@276 T@U) ($generated@@277 Int) ) (!  (=> (and (= (type $generated@@276) $generated@@273) (or ($generated@@274 $generated@@277) (and (not (= 0 $generated@@270)) (and (<= ($generated@@243 30) $generated@@277) (< $generated@@277 40))))) (= ($generated@@271 ($generated@@272 $generated@@276) $generated@@277) (= $generated@@277 ($generated@@243 34))))
 :pattern ( ($generated@@271 ($generated@@272 $generated@@276) $generated@@277))
))))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@145)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@64) (= (type $generated@@282) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@74 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@250 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@76 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@79 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@76 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@81 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 19)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@76 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 20)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@79 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@76 $generated@@326 $generated@@2)) (= ($generated@@151 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@81 $generated@@325 $generated@@327))) (<= ($generated ($generated@@81 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@81 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@151 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@293 (type $generated@@328))))
(let (($generated@@330 ($generated@@292 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@291 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@290 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@289 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@293 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@293 (type $generated@@335))))
(let (($generated@@337 ($generated@@292 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@291 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@290 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@311 (type $generated@@339))))
(let (($generated@@341 ($generated@@310 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@309 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@308 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@307 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@311 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@76 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@311 (type $generated@@346))))
(let (($generated@@348 ($generated@@310 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@309 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@308 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@351) $generated@@64)) (= ($generated@@132 $generated@@350 ($generated@@150 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@350 $generated@@352)))) ($generated@@224 $generated@@352 $generated@@351))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@132 $generated@@350 ($generated@@150 $generated@@351)))
)))
(assert  (=> (<= 0 $generated@@270) (forall (($generated@@353 T@U) ($generated@@354 Int) ) (!  (=> (and (= (type $generated@@353) $generated@@273) (or ($generated@@274 ($generated@@243 $generated@@354)) (and (not (= 0 $generated@@270)) (and (<= ($generated@@243 30) $generated@@354) (< $generated@@354 40))))) (= ($generated@@271 ($generated@@272 $generated@@353) ($generated@@243 $generated@@354)) (= ($generated@@243 $generated@@354) ($generated@@243 34))))
 :weight 3
 :pattern ( ($generated@@271 ($generated@@272 $generated@@353) ($generated@@243 $generated@@354)))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@233 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@145) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@250 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@233 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@360) $generated@@64)) (= (type $generated@@361) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@359 ($generated@@238 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@145) ($generated@@0 ($generated@@81 $generated@@359 $generated@@362))) ($generated@@250 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@81 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@74 $generated@@359 ($generated@@238 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@81 ($generated@@284 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@81 ($generated@@284 $generated@@364) $generated@@363)))
)))
(assert  (and (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@365 $generated@@368)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@365 $generated@@368))
)) (forall (($generated@@369 T@T) ($generated@@370 T@U) ) (! (= (type ($generated@@366 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@293 (type $generated@@371))))
(let (($generated@@373 ($generated@@292 (type $generated@@371))))
(= (type ($generated@@367 $generated@@371)) ($generated@@76 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@367 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@291 $generated@@145 $generated@@145)) (= (type $generated@@375) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@374) ($generated@@143 ($generated@@366 $generated@@136 $generated@@375)))) (= ($generated@@81 ($generated@@367 $generated@@374) ($generated@@143 ($generated@@366 $generated@@136 $generated@@375))) ($generated@@144 ($generated@@366 $generated@@136 $generated@@375))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@311 (type $generated@@379))))
(let (($generated@@381 ($generated@@310 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@76 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@383) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@382) ($generated@@143 ($generated@@366 $generated@@136 $generated@@383)))) (= ($generated@@81 ($generated@@377 $generated@@382) ($generated@@143 ($generated@@366 $generated@@136 $generated@@383))) ($generated@@144 ($generated@@366 $generated@@136 $generated@@383))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@292 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@291 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@332 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@310 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@309 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@291 $generated@@145 $generated@@145)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@397) $generated@@401))) (and ($generated@@250 ($generated@@81 ($generated@@367 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@250 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@64)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@405) $generated@@409))) (and ($generated@@250 ($generated@@81 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@250 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@74 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) $generated@@273)
 :pattern ( ($generated@@410 $generated@@412))
)) (= (type $generated@@411) $generated@@273)))
(assert (forall (($generated@@413 T@U) ($generated@@414 Int) ) (!  (=> (= (type $generated@@413) $generated@@273) (= ($generated@@271 $generated@@413 $generated@@414) ($generated@@271 $generated@@411 $generated@@414)))
 :pattern ( ($generated@@271 ($generated@@410 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@76 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@311 (type $generated@@417))))
(let (($generated@@419 ($generated@@310 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@309 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@308 $generated@@419 $generated@@418)) (= ($generated@@307 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@307 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@311 (type $generated@@420))))
(let (($generated@@422 ($generated@@310 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@309 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@308 $generated@@422 $generated@@421)) (= ($generated@@343 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@343 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@311 (type $generated@@423))))
(let (($generated@@425 ($generated@@310 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@309 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@308 $generated@@425 $generated@@424)) (= ($generated@@376 $generated@@423) ($generated@@415 $generated@@145))))))
 :pattern ( ($generated@@376 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@293 (type $generated@@426))))
(let (($generated@@428 ($generated@@292 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@291 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@290 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@145) (= (type $generated@@430) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@426) ($generated@@278 ($generated@@223 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@365 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@311 (type $generated@@431))))
(let (($generated@@433 ($generated@@310 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@309 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@308 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@145) (= (type $generated@@435) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@431) ($generated@@278 ($generated@@223 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@376 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@224 $generated@@436 $generated@@46)) (and (= ($generated@@278 ($generated@@366 $generated@@2 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@366 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@224 $generated@@437 $generated@@47)) (and (= ($generated@@278 ($generated@@366 $generated@@3 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@366 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@224 $generated@@438 $generated@@44)) (and (= ($generated@@278 ($generated@@366 $generated@@4 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@366 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 21))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@224 $generated@@440 $generated@@45)) (and (= ($generated@@278 ($generated@@366 $generated@@439 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@366 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 Int) ) (!  (=> (= (type $generated@@441) $generated@@273) (= ($generated@@271 ($generated@@272 $generated@@441) $generated@@442) ($generated@@271 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@271 ($generated@@272 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@64) (= ($generated@@224 ($generated@@278 $generated@@443) $generated@@444) ($generated@@132 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@224 ($generated@@278 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@79 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@76 $generated@@446 $generated@@2)) (<= 0 ($generated@@283 $generated@@445))))
 :pattern ( ($generated@@283 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@265 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@264 $generated@@448)) (<= 0 ($generated@@263 $generated@@447))))
 :pattern ( ($generated@@263 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@394 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@394 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@394 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@394 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@402 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@402 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@402 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@402 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@72 ($generated@@402 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@145) (= (type $generated@@470) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@135 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@135 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@135 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@135 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@145) (= (type $generated@@480) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@223 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@145) (= (type $generated@@482) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@223 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@265 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@264 $generated@@145)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@263 $generated@@489))) ($generated@@250 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@233 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@233 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@238 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@238 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@150 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@150 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@366 $generated@@512 ($generated@@278 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@278 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@291 $generated@@145 $generated@@145)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@132 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@513) $generated@@516))) (and ($generated@@224 ($generated@@81 ($generated@@367 $generated@@513) $generated@@516) $generated@@515) ($generated@@224 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@132 $generated@@513 ($generated@@394 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@132 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@517) $generated@@520))) (and ($generated@@224 ($generated@@81 ($generated@@377 $generated@@517) $generated@@520) $generated@@519) ($generated@@224 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@132 $generated@@517 ($generated@@402 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@145)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@223 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@223 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@145)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@223 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@223 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) ($generated@@224 $generated@@527 ($generated@@394 $generated@@528 $generated@@529))) (and (= ($generated@@278 ($generated@@366 ($generated@@291 $generated@@145 $generated@@145) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@366 ($generated@@291 $generated@@145 $generated@@145) $generated@@527) ($generated@@394 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@224 $generated@@527 ($generated@@394 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) ($generated@@224 $generated@@530 ($generated@@402 $generated@@531 $generated@@532))) (and (= ($generated@@278 ($generated@@366 ($generated@@309 $generated@@145 $generated@@145) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@366 ($generated@@309 $generated@@145 $generated@@145) $generated@@530) ($generated@@402 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@224 $generated@@530 ($generated@@402 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@145)) ($generated@@224 $generated@@535 ($generated@@135 $generated@@533 $generated@@534))) (and (= ($generated@@278 ($generated@@366 $generated@@136 $generated@@535)) $generated@@535) ($generated@@132 ($generated@@366 $generated@@136 $generated@@535) ($generated@@135 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@135 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@81 ($generated@@415 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@81 ($generated@@415 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@69)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@135 $generated@@540 $generated@@541)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@136) (= ($generated@@521 ($generated@@278 $generated@@542)) ($generated@@522 $generated@@542)))
 :pattern ( ($generated@@521 ($generated@@278 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) ($generated@@224 $generated@@543 ($generated@@75 0))) (and (= ($generated@@278 ($generated@@366 $generated@@2 $generated@@543)) $generated@@543) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@543) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@75 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@224 $generated@@544 ($generated@@233 $generated@@545))) (and (= ($generated@@278 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@544) ($generated@@233 $generated@@545))))
 :pattern ( ($generated@@224 $generated@@544 ($generated@@233 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) ($generated@@224 $generated@@546 ($generated@@238 $generated@@547))) (and (= ($generated@@278 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@238 $generated@@547))))
 :pattern ( ($generated@@224 $generated@@546 ($generated@@238 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@224 $generated@@548 ($generated@@150 $generated@@549))) (and (= ($generated@@278 ($generated@@366 ($generated@@76 $generated@@145 $generated@@2) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@366 ($generated@@76 $generated@@145 $generated@@2) $generated@@548) ($generated@@150 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@548 ($generated@@150 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@224 $generated@@550 ($generated@@483 $generated@@551))) (and (= ($generated@@278 ($generated@@366 ($generated@@264 $generated@@145) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@366 ($generated@@264 $generated@@145) $generated@@550) ($generated@@483 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@483 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@552 ($generated@@150 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@552 $generated@@555)))) ($generated@@250 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@81 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@150 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@136) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@558) (and ($generated@@134 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@74 $generated@@556 ($generated@@135 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@135 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@250 ($generated@@143 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@136) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@562) (and ($generated@@134 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@64) ($generated@@74 $generated@@560 ($generated@@135 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@74 $generated@@560 ($generated@@135 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@250 ($generated@@144 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@145) (= (type $generated@@565) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@564) ($generated@@245 $generated@@565)) ($generated@@245 ($generated@@223 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@564) ($generated@@245 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@278 ($generated@@8 ($generated@@243 $generated@@566))) ($generated@@245 ($generated@@278 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@278 ($generated@@8 ($generated@@243 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@278 ($generated@@245 $generated@@567)) ($generated@@245 ($generated@@278 $generated@@567)))
 :pattern ( ($generated@@278 ($generated@@245 $generated@@567)))
)))
(assert  (=> (<= 0 $generated@@270) (forall (($generated@@568 T@U) ($generated@@569 Int) ) (!  (=> (and (= (type $generated@@568) $generated@@273) (or ($generated@@274 $generated@@569) (and (not (= 0 $generated@@270)) (and (<= ($generated@@243 30) $generated@@569) (< $generated@@569 40))))) true)
 :pattern ( ($generated@@271 $generated@@568 $generated@@569))
))))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@265 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@264 $generated@@571)) (= ($generated@@263 $generated@@570) 0)) (= $generated@@570 ($generated@@262 $generated@@571))))
 :pattern ( ($generated@@263 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@283 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@283 $generated@@572) ($generated ($generated@@81 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@283 ($generated@@82 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@2)) ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@3)) ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@4)) ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@439)) ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@145)) ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@264 $generated@@145)) (= (type $generated@@587) $generated@@64)) (= ($generated@@132 $generated@@586 ($generated@@483 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@263 $generated@@586))) ($generated@@224 ($generated@@484 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@484 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@132 $generated@@586 ($generated@@483 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@263 $generated@@590))) (< ($generated@@522 ($generated@@366 $generated@@136 ($generated@@484 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@522 ($generated@@366 $generated@@136 ($generated@@484 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@291 $generated@@145 $generated@@145)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@132 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@132 ($generated@@289 $generated@@592) ($generated@@233 $generated@@593)) ($generated@@132 ($generated@@332 $generated@@592) ($generated@@233 $generated@@594))) ($generated@@132 ($generated@@365 $generated@@592) ($generated@@233 ($generated@@135 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@132 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) $generated@@64)) ($generated@@132 $generated@@595 ($generated@@402 $generated@@596 $generated@@597))) (and (and ($generated@@132 ($generated@@307 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@132 ($generated@@343 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@132 ($generated@@376 $generated@@595) ($generated@@238 ($generated@@135 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@132 $generated@@595 ($generated@@402 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@132 $generated@@598 $generated@@46))
 :pattern ( ($generated@@132 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@132 $generated@@599 $generated@@47))
 :pattern ( ($generated@@132 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@132 $generated@@600 $generated@@44))
 :pattern ( ($generated@@132 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@439) ($generated@@132 $generated@@601 $generated@@45))
 :pattern ( ($generated@@132 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@145) ($generated@@132 $generated@@602 $generated@@48))
 :pattern ( ($generated@@132 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(declare-fun $generated@@621 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@603) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@604) $generated@@77)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@607) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@608) $generated@@273)) (= (type $generated@@609) $generated@@273)) (= (type $generated@@610) $generated@@273)) (= (type $generated@@611) $generated@@273)) (= (type $generated@@612) $generated@@273)) (= (type $generated@@613) $generated@@273)) (= (type $generated@@614) $generated@@273)) (= (type $generated@@615) $generated@@273)) (= (type $generated@@616) $generated@@273)) (= (type $generated@@617) $generated@@273)) (= (type $generated@@618) $generated@@273)) (= (type $generated@@619) $generated@@273)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@622  (=> (= $generated@@603 ($generated@@211 $generated@@604 $generated@@605 $generated@@60 false)) (=> (and (= $generated@@606 ($generated@@243 34)) (= (ControlFlow 0 3) (- 0 2))) (and (<= ($generated@@243 30) $generated@@606) (< $generated@@606 40))))))
(let (($generated@@623 true))
(let (($generated@@624  (=> (= $generated@@607 ($generated@@156 $generated@@604 $generated@@605 $generated@@60 false)) (=> (and (and (= ($generated@@410 $generated@@608) $generated@@608) (= ($generated@@410 $generated@@609) $generated@@609)) (and (= ($generated@@410 $generated@@610) $generated@@610) (= ($generated@@410 $generated@@611) $generated@@611))) (=> (and (and (and (= ($generated@@410 $generated@@612) $generated@@612) (= ($generated@@410 $generated@@613) $generated@@613)) (and (= ($generated@@410 $generated@@614) $generated@@614) (= ($generated@@410 $generated@@615) $generated@@615))) (and (and (= ($generated@@410 $generated@@616) $generated@@616) (= ($generated@@410 $generated@@617) $generated@@617)) (and (= ($generated@@410 $generated@@618) $generated@@618) (= ($generated@@410 $generated@@619) $generated@@619)))) (and (=> (= (ControlFlow 0 4) 1) $generated@@623) (=> (= (ControlFlow 0 4) 3) $generated@@622)))))))
(let (($generated@@625  (=> (and ($generated@@249 $generated@@605) ($generated@@620 $generated@@605)) (=> (and (and (<= ($generated@@243 30) $generated@@621) (< $generated@@621 40)) (and (= 0 $generated@@270) (= (ControlFlow 0 5) 4))) $generated@@624))))
$generated@@625)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@286 (T@U T@U T@U) Bool)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@315 (T@U Int) Bool)
(declare-fun $generated@@316 (Int) Bool)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@T T@T) T@U)
(declare-fun $generated@@350 (T@T T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@369 (T@T T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@404 (T@U) Bool)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@459 () T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@494 () T@T)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@543 (T@U Int) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@581 (T@U) Int)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@617 (T@U) Bool)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@655 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@77)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (= (type $generated@@141) $generated@@73))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@142 $generated@@141 $generated@@143))
 :pattern ( ($generated@@83 $generated@@142 $generated@@141 $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@73) (= (type $generated@@145) $generated@@86)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@86) (= (type $generated@@147) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@84 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@84 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 14) (= ($generated@@1 $generated@@153) 15)) (= (type $generated@@155) $generated@@73)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@152) (= (type $generated@@157) $generated@@153)) (or ($generated@@154 $generated@@157) (and (not (= 1 $generated@@150)) ($generated@@148 $generated@@157 $generated@@155)))) true)
 :pattern ( ($generated@@151 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@160 $generated@@161)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@73) (= (type $generated@@163) $generated@@73)) (= (type $generated@@164) $generated@@153)) ($generated@@148 $generated@@164 ($generated@@159 $generated@@162 $generated@@163))) ($generated@@158 $generated@@164))
 :pattern ( ($generated@@158 $generated@@164) ($generated@@148 $generated@@164 ($generated@@159 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@153) (= (type $generated@@172) $generated@@153)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@77)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@153)))
(assert (= ($generated@@173 $generated@@174) $generated@@65))
(assert (= (type $generated@@176) $generated@@153))
(assert (= ($generated@@173 $generated@@176) $generated@@67))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@73)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@85 $generated@@168 $generated@@2)) (= (type $generated@@181) $generated@@73)) ($generated@@148 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@148 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 17)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@86 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@76 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@86) (= (type $generated@@232) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@233) ($generated@@75 $generated@@4))) (= (type $generated@@235) $generated@@86)) (= (type $generated@@236) ($generated@@75 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert  (and (forall (($generated@@243 T@U) ) (! (= (type ($generated@@239 $generated@@243)) $generated@@152)
 :pattern ( ($generated@@239 $generated@@243))
)) (= (type $generated@@241) $generated@@73)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (= (type $generated@@244) $generated@@152) (= (type $generated@@245) $generated@@86)) (or ($generated@@240 $generated@@245) (and (not (= 1 $generated@@150)) (and (not (= $generated@@245 $generated@@145)) ($generated@@148 $generated@@245 $generated@@241))))) (= ($generated@@238 ($generated@@239 $generated@@244) $generated@@245) ($generated@@242 $generated@@245)))
 :pattern ( ($generated@@238 ($generated@@239 $generated@@244) $generated@@245))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@86) (= (type $generated@@247) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@246 $generated@@241 $generated@@247) ($generated@@83 $generated@@246 $generated@@144 $generated@@247)))
 :pattern ( ($generated@@83 $generated@@246 $generated@@241 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@250 $generated@@251)) $generated@@153)
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@73) (= (type $generated@@253) $generated@@73)) (= (type $generated@@254) $generated@@168)) (= (type $generated@@255) $generated@@168)) (= ($generated@@148 ($generated@@248 $generated@@254 $generated@@255) ($generated@@159 $generated@@252 $generated@@253))  (and ($generated@@249 $generated@@254 $generated@@252) ($generated@@249 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@148 ($generated@@248 $generated@@254 $generated@@255) ($generated@@159 $generated@@252 $generated@@253)))
)))
(assert ($generated@@148 $generated@@174 $generated@@155))
(assert ($generated@@148 $generated@@176 $generated@@155))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@85 $generated@@86 $generated@@87)) ($generated@@256 $generated@@257)) ($generated@@83 $generated@@174 $generated@@155 $generated@@257))
 :pattern ( ($generated@@83 $generated@@174 $generated@@155 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@85 $generated@@86 $generated@@87)) ($generated@@256 $generated@@258)) ($generated@@83 $generated@@176 $generated@@155 $generated@@258))
 :pattern ( ($generated@@83 $generated@@176 $generated@@155 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@153) (= (type $generated@@260) $generated@@153)) (= ($generated@@165 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@165 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@153) (= (type $generated@@263) $generated@@153)) (= ($generated@@261 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@73)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@85 $generated@@168 $generated@@4)) (= (type $generated@@267) $generated@@73)) (= ($generated@@148 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@168) ($generated@@0 ($generated@@90 $generated@@266 $generated@@268))) ($generated@@249 $generated@@268 $generated@@267))
 :pattern ( ($generated@@90 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@148 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@73)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@85 $generated@@168 $generated@@4)) (= (type $generated@@272) $generated@@73)) (= ($generated@@148 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@168) ($generated@@0 ($generated@@90 $generated@@271 $generated@@273))) ($generated@@249 $generated@@273 $generated@@272))
 :pattern ( ($generated@@90 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@148 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(= (type ($generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@276 $generated@@279) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (= (type $generated@@281) $generated@@153) (= (type $generated@@282) $generated@@153)) (and ($generated@@280 $generated@@281) ($generated@@280 $generated@@282))) (= ($generated@@261 $generated@@281 $generated@@282) true))
 :pattern ( ($generated@@261 $generated@@281 $generated@@282) ($generated@@280 $generated@@281))
 :pattern ( ($generated@@261 $generated@@281 $generated@@282) ($generated@@280 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (= (type $generated@@284) $generated@@153) (= (type $generated@@285) $generated@@153)) (and ($generated@@283 $generated@@284) ($generated@@283 $generated@@285))) (= ($generated@@261 $generated@@284 $generated@@285) true))
 :pattern ( ($generated@@261 $generated@@284 $generated@@285) ($generated@@283 $generated@@284))
 :pattern ( ($generated@@261 $generated@@284 $generated@@285) ($generated@@283 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) $generated@@73) (= (type $generated@@288) $generated@@73)) (= (type $generated@@289) $generated@@168)) (= (type $generated@@290) $generated@@168)) (= (type $generated@@291) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@256 $generated@@291)) (= ($generated@@83 ($generated@@248 $generated@@289 $generated@@290) ($generated@@159 $generated@@287 $generated@@288) $generated@@291)  (and ($generated@@286 $generated@@289 $generated@@287 $generated@@291) ($generated@@286 $generated@@290 $generated@@288 $generated@@291))))
 :pattern ( ($generated@@83 ($generated@@248 $generated@@289 $generated@@290) ($generated@@159 $generated@@287 $generated@@288) $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@153) (= ($generated@@158 $generated@@292) (= ($generated@@173 $generated@@292) $generated@@61)))
 :pattern ( ($generated@@158 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@153) (= ($generated@@280 $generated@@293) (= ($generated@@173 $generated@@293) $generated@@65)))
 :pattern ( ($generated@@280 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@153) (= ($generated@@283 $generated@@294) (= ($generated@@173 $generated@@294) $generated@@67)))
 :pattern ( ($generated@@283 $generated@@294))
)))
(assert  (=> (< 0 $generated@@150) (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@86) ($generated@@148 ($generated@@11 ($generated@@242 $generated@@295)) $generated@@44))
 :pattern ( ($generated@@242 $generated@@295))
))))
(assert  (=> (< 0 $generated@@150) (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (= (type $generated@@296) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@297) $generated@@86)) (and ($generated@@256 $generated@@296) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@296 $generated@@297) $generated@@60)))) ($generated@@83 ($generated@@11 ($generated@@242 $generated@@297)) $generated@@44 $generated@@296))
 :pattern ( ($generated@@242 $generated@@297) ($generated@@92 ($generated@@90 $generated@@296 $generated@@297) $generated@@60))
))))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@153) ($generated@@158 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@168) (= (type $generated@@300) $generated@@168)) (= $generated@@298 ($generated@@248 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@158 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 18)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@153) ($generated@@280 $generated@@309)) (= $generated@@309 $generated@@174))
 :pattern ( ($generated@@280 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@153) ($generated@@283 $generated@@310)) (= $generated@@310 $generated@@176))
 :pattern ( ($generated@@283 $generated@@310))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (= (type $generated@@311) $generated@@152) (= (type $generated@@312) $generated@@86)) (or ($generated@@240 ($generated@@276 $generated@@312)) (and (not (= 1 $generated@@150)) (and (not (= $generated@@312 $generated@@145)) ($generated@@148 $generated@@312 $generated@@241))))) (= ($generated@@238 ($generated@@239 $generated@@311) ($generated@@276 $generated@@312)) ($generated@@242 ($generated@@276 $generated@@312))))
 :weight 3
 :pattern ( ($generated@@238 ($generated@@239 $generated@@311) ($generated@@276 $generated@@312)))
))))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (= (type $generated@@313) $generated@@152) (= (type $generated@@314) $generated@@86)) (or ($generated@@240 $generated@@314) (and (not (= 1 $generated@@150)) (and (not (= $generated@@314 $generated@@145)) ($generated@@148 $generated@@314 $generated@@241))))) true)
 :pattern ( ($generated@@238 $generated@@313 $generated@@314))
))))
(assert  (=> (<= 0 $generated@@150) (forall (($generated@@317 T@U) ($generated@@318 Int) ) (!  (=> (and (= (type $generated@@317) $generated@@152) (or ($generated@@316 $generated@@318) (and (not (= 0 $generated@@150)) (and (<= ($generated@@274 30) $generated@@318) (< $generated@@318 40))))) (= ($generated@@315 ($generated@@239 $generated@@317) $generated@@318) (= $generated@@318 ($generated@@274 34))))
 :pattern ( ($generated@@315 ($generated@@239 $generated@@317) $generated@@318))
))))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@168)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@73) (= (type $generated@@323) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@286 ($generated@@319 $generated@@321) $generated@@322 $generated@@323) ($generated@@83 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@286 ($generated@@319 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@326 T@T) ) (! (= (type ($generated@@325 $generated@@326)) ($generated@@85 $generated@@326 $generated@@2))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@88 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@85 $generated@@328 $generated@@2)) (and (= (= ($generated@@324 $generated@@327) 0) (= $generated@@327 ($generated@@325 $generated@@328))) (=> (not (= ($generated@@324 $generated@@327) 0)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) (< 0 ($generated ($generated@@90 $generated@@327 $generated@@329))))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@85 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@90 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@90 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert  (and (and (and (and (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (= ($generated@@1 ($generated@@350 $generated@@353 $generated@@354)) 20)) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@351 ($generated@@350 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@350 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@352 ($generated@@350 $generated@@357 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@350 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@351 (type $generated@@359))))
(= (type ($generated@@348 $generated@@359)) ($generated@@85 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@359))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= (type ($generated@@349 $generated@@361 $generated@@362)) ($generated@@350 $generated@@361 $generated@@362))
 :pattern ( ($generated@@349 $generated@@361 $generated@@362))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@T) ) (! (let (($generated@@365 (type $generated@@363)))
 (not ($generated@@0 ($generated@@90 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363))))
 :pattern ( (let (($generated@@365 (type $generated@@363)))
($generated@@90 ($generated@@348 ($generated@@349 $generated@@365 $generated@@364)) $generated@@363)))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@88 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@85 $generated@@367 $generated@@2)) (= ($generated@@178 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (and (<= 0 ($generated ($generated@@90 $generated@@366 $generated@@368))) (<= ($generated ($generated@@90 $generated@@366 $generated@@368)) ($generated@@324 $generated@@366))))
 :pattern ( ($generated@@90 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@178 $generated@@366))
)))
(assert (forall (($generated@@370 T@T) ($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@369 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@168) ($generated@@249 $generated@@372 $generated@@144)) (and (= ($generated@@319 ($generated@@369 $generated@@86 $generated@@372)) $generated@@372) ($generated@@148 ($generated@@369 $generated@@86 $generated@@372) $generated@@144)))
 :pattern ( ($generated@@249 $generated@@372 $generated@@144))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@168) ($generated@@249 $generated@@373 $generated@@241)) (and (= ($generated@@319 ($generated@@369 $generated@@86 $generated@@373)) $generated@@373) ($generated@@148 ($generated@@369 $generated@@86 $generated@@373) $generated@@241)))
 :pattern ( ($generated@@249 $generated@@373 $generated@@241))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@168) ($generated@@249 $generated@@374 $generated@@155)) (and (= ($generated@@319 ($generated@@369 $generated@@153 $generated@@374)) $generated@@374) ($generated@@148 ($generated@@369 $generated@@153 $generated@@374) $generated@@155)))
 :pattern ( ($generated@@249 $generated@@374 $generated@@155))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@168) ($generated@@249 $generated@@375 $generated@@141)) (and (= ($generated@@319 ($generated@@369 $generated@@2 $generated@@375)) $generated@@375) ($generated@@148 ($generated@@369 $generated@@2 $generated@@375) $generated@@141)))
 :pattern ( ($generated@@249 $generated@@375 $generated@@141))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@86) (= ($generated@@148 $generated@@376 $generated@@241)  (and ($generated@@148 $generated@@376 $generated@@144) (not (= $generated@@376 $generated@@145)))))
 :pattern ( ($generated@@148 $generated@@376 $generated@@241))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@334 (type $generated@@377))))
(let (($generated@@379 ($generated@@333 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@332 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@331 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@90 ($generated@@330 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@330 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@334 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@85 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@334 (type $generated@@384))))
(let (($generated@@386 ($generated@@333 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@332 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@331 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@90 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@352 (type $generated@@388))))
(let (($generated@@390 ($generated@@351 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@350 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@349 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@90 ($generated@@348 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@348 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@352 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@85 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@352 (type $generated@@395))))
(let (($generated@@397 ($generated@@351 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@350 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@349 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@90 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@85 $generated@@168 $generated@@2)) (= (type $generated@@400) $generated@@73)) (= ($generated@@148 $generated@@399 ($generated@@177 $generated@@400)) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@168) (< 0 ($generated ($generated@@90 $generated@@399 $generated@@401)))) ($generated@@249 $generated@@401 $generated@@400))
 :pattern ( ($generated@@90 $generated@@399 $generated@@401))
))))
 :pattern ( ($generated@@148 $generated@@399 ($generated@@177 $generated@@400)))
)))
(assert  (=> (<= 0 $generated@@150) (forall (($generated@@402 T@U) ($generated@@403 Int) ) (!  (=> (and (= (type $generated@@402) $generated@@152) (or ($generated@@316 ($generated@@274 $generated@@403)) (and (not (= 0 $generated@@150)) (and (<= ($generated@@274 30) $generated@@403) (< $generated@@403 40))))) (= ($generated@@315 ($generated@@239 $generated@@402) ($generated@@274 $generated@@403)) (= ($generated@@274 $generated@@403) ($generated@@274 34))))
 :weight 3
 :pattern ( ($generated@@315 ($generated@@239 $generated@@402) ($generated@@274 $generated@@403)))
))))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@153) ($generated@@404 $generated@@405)) (or ($generated@@280 $generated@@405) ($generated@@283 $generated@@405)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@85 $generated@@168 $generated@@4)) (= (type $generated@@407) $generated@@73)) (= (type $generated@@408) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@406 ($generated@@264 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@168) ($generated@@0 ($generated@@90 $generated@@406 $generated@@409))) ($generated@@286 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@90 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@83 $generated@@406 ($generated@@264 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) ($generated@@85 $generated@@168 $generated@@4)) (= (type $generated@@411) $generated@@73)) (= (type $generated@@412) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@410 ($generated@@269 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@168) ($generated@@0 ($generated@@90 $generated@@410 $generated@@413))) ($generated@@286 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@90 $generated@@410 $generated@@413))
))))
 :pattern ( ($generated@@83 $generated@@410 ($generated@@269 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(= ($generated ($generated@@90 ($generated@@325 $generated@@415) $generated@@414)) 0))
 :pattern ( (let (($generated@@415 (type $generated@@414)))
($generated@@90 ($generated@@325 $generated@@415) $generated@@414)))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@85 $generated@@168 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@334 (type $generated@@419))))
(let (($generated@@421 ($generated@@333 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@85 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@332 $generated@@168 $generated@@168)) (= (type $generated@@423) $generated@@168)) (= ($generated@@0 ($generated@@90 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@90 ($generated@@330 $generated@@422) ($generated@@166 ($generated@@369 $generated@@153 $generated@@423)))) (= ($generated@@90 ($generated@@417 $generated@@422) ($generated@@166 ($generated@@369 $generated@@153 $generated@@423))) ($generated@@167 ($generated@@369 $generated@@153 $generated@@423))))))
 :pattern ( ($generated@@90 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@85 $generated@@168 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@352 (type $generated@@427))))
(let (($generated@@429 ($generated@@351 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@85 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@350 $generated@@168 $generated@@168)) (= (type $generated@@431) $generated@@168)) (= ($generated@@0 ($generated@@90 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@90 ($generated@@348 $generated@@430) ($generated@@166 ($generated@@369 $generated@@153 $generated@@431)))) (= ($generated@@90 ($generated@@425 $generated@@430) ($generated@@166 ($generated@@369 $generated@@153 $generated@@431))) ($generated@@167 ($generated@@369 $generated@@153 $generated@@431))))))
 :pattern ( ($generated@@90 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
(let (($generated@@435 ($generated@@333 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@332 $generated@@435 $generated@@434)) (= ($generated@@0 ($generated@@90 ($generated@@381 $generated@@432) $generated@@433)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) (and ($generated@@0 ($generated@@90 ($generated@@330 $generated@@432) $generated@@436)) (= $generated@@433 ($generated@@90 ($generated@@417 $generated@@432) $generated@@436))))
 :pattern ( ($generated@@90 ($generated@@330 $generated@@432) $generated@@436))
 :pattern ( ($generated@@90 ($generated@@417 $generated@@432) $generated@@436))
))))))
 :pattern ( ($generated@@90 ($generated@@381 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@351 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@350 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@90 ($generated@@392 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@90 ($generated@@348 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@90 ($generated@@425 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@90 ($generated@@348 $generated@@437) $generated@@441))
 :pattern ( ($generated@@90 ($generated@@425 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@90 ($generated@@392 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@73)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@332 $generated@@168 $generated@@168)) (= (type $generated@@446) $generated@@73)) (= (type $generated@@447) $generated@@73)) (= (type $generated@@448) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@168) ($generated@@0 ($generated@@90 ($generated@@330 $generated@@445) $generated@@449))) (and ($generated@@286 ($generated@@90 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@286 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@90 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@90 ($generated@@330 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@83 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@73)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@350 $generated@@168 $generated@@168)) (= (type $generated@@454) $generated@@73)) (= (type $generated@@455) $generated@@73)) (= (type $generated@@456) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@168) ($generated@@0 ($generated@@90 ($generated@@348 $generated@@453) $generated@@457))) (and ($generated@@286 ($generated@@90 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@286 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@90 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@90 ($generated@@348 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@83 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert  (and (forall (($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@460)) $generated@@152)
 :pattern ( ($generated@@458 $generated@@460))
)) (= (type $generated@@459) $generated@@152)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@152) (= (type $generated@@462) $generated@@86)) (= ($generated@@238 $generated@@461 $generated@@462) ($generated@@238 $generated@@459 $generated@@462)))
 :pattern ( ($generated@@238 ($generated@@458 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@152) (= (type $generated@@464) $generated@@153)) (= ($generated@@151 $generated@@463 $generated@@464) ($generated@@151 $generated@@459 $generated@@464)))
 :pattern ( ($generated@@151 ($generated@@458 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 Int) ) (!  (=> (= (type $generated@@465) $generated@@152) (= ($generated@@315 $generated@@465 $generated@@466) ($generated@@315 $generated@@459 $generated@@466)))
 :pattern ( ($generated@@315 ($generated@@458 $generated@@465) $generated@@466))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (= (type $generated@@467) $generated@@152) (= (type $generated@@468) $generated@@153)) (or ($generated@@154 $generated@@468) (and (not (= 1 $generated@@150)) ($generated@@148 $generated@@468 $generated@@155)))) (and ($generated@@404 $generated@@468) (= ($generated@@151 ($generated@@239 $generated@@467) $generated@@468) ($generated@@261 $generated@@468 $generated@@176))))
 :pattern ( ($generated@@151 ($generated@@239 $generated@@467) $generated@@468))
))))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@153) ($generated@@148 $generated@@469 $generated@@155)) (or ($generated@@280 $generated@@469) ($generated@@283 $generated@@469)))
 :pattern ( ($generated@@283 $generated@@469) ($generated@@148 $generated@@469 $generated@@155))
 :pattern ( ($generated@@280 $generated@@469) ($generated@@148 $generated@@469 $generated@@155))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@85 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@352 (type $generated@@472))))
(let (($generated@@474 ($generated@@351 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@350 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@349 $generated@@474 $generated@@473)) (= ($generated@@348 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@348 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@352 (type $generated@@475))))
(let (($generated@@477 ($generated@@351 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@350 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@349 $generated@@477 $generated@@476)) (= ($generated@@392 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@392 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@352 (type $generated@@478))))
(let (($generated@@480 ($generated@@351 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@350 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@349 $generated@@480 $generated@@479)) (= ($generated@@424 $generated@@478) ($generated@@470 $generated@@168))))))
 :pattern ( ($generated@@424 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@334 (type $generated@@481))))
(let (($generated@@483 ($generated@@333 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@332 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@331 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@168) (= (type $generated@@485) $generated@@168)) ($generated@@0 ($generated@@90 ($generated@@416 $generated@@481) ($generated@@319 ($generated@@248 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@416 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@352 (type $generated@@486))))
(let (($generated@@488 ($generated@@351 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@350 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@349 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@168) (= (type $generated@@490) $generated@@168)) ($generated@@0 ($generated@@90 ($generated@@424 $generated@@486) ($generated@@319 ($generated@@248 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@424 $generated@@486))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@168) ($generated@@249 $generated@@491 $generated@@46)) (and (= ($generated@@319 ($generated@@369 $generated@@2 $generated@@491)) $generated@@491) ($generated@@148 ($generated@@369 $generated@@2 $generated@@491) $generated@@46)))
 :pattern ( ($generated@@249 $generated@@491 $generated@@46))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@168) ($generated@@249 $generated@@492 $generated@@47)) (and (= ($generated@@319 ($generated@@369 $generated@@3 $generated@@492)) $generated@@492) ($generated@@148 ($generated@@369 $generated@@3 $generated@@492) $generated@@47)))
 :pattern ( ($generated@@249 $generated@@492 $generated@@47))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@168) ($generated@@249 $generated@@493 $generated@@44)) (and (= ($generated@@319 ($generated@@369 $generated@@4 $generated@@493)) $generated@@493) ($generated@@148 ($generated@@369 $generated@@4 $generated@@493) $generated@@44)))
 :pattern ( ($generated@@249 $generated@@493 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@494) 21))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@168) ($generated@@249 $generated@@495 $generated@@45)) (and (= ($generated@@319 ($generated@@369 $generated@@494 $generated@@495)) $generated@@495) ($generated@@148 ($generated@@369 $generated@@494 $generated@@495) $generated@@45)))
 :pattern ( ($generated@@249 $generated@@495 $generated@@45))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@152) (= (type $generated@@497) $generated@@86)) (= ($generated@@238 ($generated@@239 $generated@@496) $generated@@497) ($generated@@238 $generated@@496 $generated@@497)))
 :pattern ( ($generated@@238 ($generated@@239 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@152) (= (type $generated@@499) $generated@@153)) (= ($generated@@151 ($generated@@239 $generated@@498) $generated@@499) ($generated@@151 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@151 ($generated@@239 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 Int) ) (!  (=> (= (type $generated@@500) $generated@@152) (= ($generated@@315 ($generated@@239 $generated@@500) $generated@@501) ($generated@@315 $generated@@500 $generated@@501)))
 :pattern ( ($generated@@315 ($generated@@239 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@73) (= ($generated@@249 ($generated@@319 $generated@@502) $generated@@503) ($generated@@148 $generated@@502 $generated@@503)))
 :pattern ( ($generated@@249 ($generated@@319 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@88 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@85 $generated@@505 $generated@@2)) (<= 0 ($generated@@324 $generated@@504))))
 :pattern ( ($generated@@324 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@304 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@303 $generated@@507)) (<= 0 ($generated@@302 $generated@@506))))
 :pattern ( ($generated@@302 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@73)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@73) (= (type $generated@@511) $generated@@73)) (= ($generated@@508 ($generated@@442 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@442 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@73)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@73) (= (type $generated@@515) $generated@@73)) (= ($generated@@512 ($generated@@442 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@442 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@73) (= (type $generated@@517) $generated@@73)) (= ($generated@@81 ($generated@@442 $generated@@516 $generated@@517)) $generated@@58))
 :pattern ( ($generated@@442 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@73)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@73) (= (type $generated@@521) $generated@@73)) (= ($generated@@518 ($generated@@450 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@450 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@73)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@73) (= (type $generated@@525) $generated@@73)) (= ($generated@@522 ($generated@@450 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@450 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@73) (= (type $generated@@527) $generated@@73)) (= ($generated@@81 ($generated@@450 $generated@@526 $generated@@527)) $generated@@59))
 :pattern ( ($generated@@450 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@168) (= (type $generated@@529) $generated@@168)) (= ($generated@@173 ($generated@@248 $generated@@528 $generated@@529)) $generated@@61))
 :pattern ( ($generated@@248 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@73)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@73) (= (type $generated@@533) $generated@@73)) (= ($generated@@530 ($generated@@159 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@159 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@73)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@73) (= (type $generated@@537) $generated@@73)) (= ($generated@@534 ($generated@@159 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@159 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@168) (= (type $generated@@539) $generated@@168)) (= ($generated@@166 ($generated@@248 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@248 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@168) (= (type $generated@@541) $generated@@168)) (= ($generated@@167 ($generated@@248 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@248 $generated@@540 $generated@@541))
)))
(assert  (and (forall (($generated@@544 T@U) ) (! (= (type ($generated@@542 $generated@@544)) $generated@@73)
 :pattern ( ($generated@@542 $generated@@544))
)) (forall (($generated@@545 T@U) ($generated@@546 Int) ) (! (let (($generated@@547 ($generated@@304 (type $generated@@545))))
(= (type ($generated@@543 $generated@@545 $generated@@546)) $generated@@547))
 :pattern ( ($generated@@543 $generated@@545 $generated@@546))
))))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@303 $generated@@168)) (= (type $generated@@549) $generated@@73)) (= (type $generated@@550) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@548 ($generated@@542 $generated@@549) $generated@@550) (forall (($generated@@551 Int) ) (!  (=> (and (<= 0 $generated@@551) (< $generated@@551 ($generated@@302 $generated@@548))) ($generated@@286 ($generated@@543 $generated@@548 $generated@@551) $generated@@549 $generated@@550))
 :pattern ( ($generated@@543 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@83 $generated@@548 ($generated@@542 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@552 ($generated@@84 $generated@@553)) $generated@@553)
 :pattern ( ($generated@@84 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@73)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@73) (= ($generated@@554 ($generated@@264 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@264 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@73) (= ($generated@@81 ($generated@@264 $generated@@557)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@73)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@73) (= ($generated@@558 ($generated@@269 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@73) (= ($generated@@81 ($generated@@269 $generated@@561)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@73)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@73) (= ($generated@@562 ($generated@@177 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@177 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@73) (= ($generated@@81 ($generated@@177 $generated@@565)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@73)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@73) (= ($generated@@566 ($generated@@542 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@542 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@73) (= ($generated@@81 ($generated@@542 $generated@@569)) $generated@@57))
 :pattern ( ($generated@@542 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
(= ($generated@@369 $generated@@571 ($generated@@319 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@319 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@332 $generated@@168 $generated@@168)) (= (type $generated@@573) $generated@@73)) (= (type $generated@@574) $generated@@73)) (= ($generated@@148 $generated@@572 ($generated@@442 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@168) ($generated@@0 ($generated@@90 ($generated@@330 $generated@@572) $generated@@575))) (and ($generated@@249 ($generated@@90 ($generated@@417 $generated@@572) $generated@@575) $generated@@574) ($generated@@249 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@90 ($generated@@417 $generated@@572) $generated@@575))
 :pattern ( ($generated@@90 ($generated@@330 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@148 $generated@@572 ($generated@@442 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@350 $generated@@168 $generated@@168)) (= (type $generated@@577) $generated@@73)) (= (type $generated@@578) $generated@@73)) (= ($generated@@148 $generated@@576 ($generated@@450 $generated@@577 $generated@@578)) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@168) ($generated@@0 ($generated@@90 ($generated@@348 $generated@@576) $generated@@579))) (and ($generated@@249 ($generated@@90 ($generated@@425 $generated@@576) $generated@@579) $generated@@578) ($generated@@249 $generated@@579 $generated@@577)))
 :pattern ( ($generated@@90 ($generated@@425 $generated@@576) $generated@@579))
 :pattern ( ($generated@@90 ($generated@@348 $generated@@576) $generated@@579))
))))
 :pattern ( ($generated@@148 $generated@@576 ($generated@@450 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@168) (= (type $generated@@583) $generated@@168)) (< ($generated@@580 $generated@@582) ($generated@@581 ($generated@@248 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@248 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@168) (= (type $generated@@585) $generated@@168)) (< ($generated@@580 $generated@@585) ($generated@@581 ($generated@@248 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@248 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@168) (= (type $generated@@587) $generated@@73)) (= (type $generated@@588) $generated@@73)) ($generated@@249 $generated@@586 ($generated@@442 $generated@@587 $generated@@588))) (and (= ($generated@@319 ($generated@@369 ($generated@@332 $generated@@168 $generated@@168) $generated@@586)) $generated@@586) ($generated@@148 ($generated@@369 ($generated@@332 $generated@@168 $generated@@168) $generated@@586) ($generated@@442 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@249 $generated@@586 ($generated@@442 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@168) (= (type $generated@@590) $generated@@73)) (= (type $generated@@591) $generated@@73)) ($generated@@249 $generated@@589 ($generated@@450 $generated@@590 $generated@@591))) (and (= ($generated@@319 ($generated@@369 ($generated@@350 $generated@@168 $generated@@168) $generated@@589)) $generated@@589) ($generated@@148 ($generated@@369 ($generated@@350 $generated@@168 $generated@@168) $generated@@589) ($generated@@450 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@249 $generated@@589 ($generated@@450 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@73) (= (type $generated@@593) $generated@@73)) (= (type $generated@@594) $generated@@168)) ($generated@@249 $generated@@594 ($generated@@159 $generated@@592 $generated@@593))) (and (= ($generated@@319 ($generated@@369 $generated@@153 $generated@@594)) $generated@@594) ($generated@@148 ($generated@@369 $generated@@153 $generated@@594) ($generated@@159 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@249 $generated@@594 ($generated@@159 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@595)))
 (not ($generated@@0 ($generated@@90 ($generated@@470 $generated@@596) $generated@@595))))
 :pattern ( (let (($generated@@596 (type $generated@@595)))
($generated@@90 ($generated@@470 $generated@@596) $generated@@595)))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@78)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@73) (= (type $generated@@600) $generated@@73)) (and (= ($generated@@81 ($generated@@159 $generated@@599 $generated@@600)) $generated@@62) (= ($generated@@597 ($generated@@159 $generated@@599 $generated@@600)) $generated@@69)))
 :pattern ( ($generated@@159 $generated@@599 $generated@@600))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@152) (= (type $generated@@602) $generated@@153)) (or ($generated@@154 ($generated@@276 $generated@@602)) (and (not (= 1 $generated@@150)) ($generated@@148 $generated@@602 $generated@@155)))) (and ($generated@@404 ($generated@@276 $generated@@602)) (= ($generated@@151 ($generated@@239 $generated@@601) ($generated@@276 $generated@@602)) ($generated@@261 $generated@@602 $generated@@176))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@239 $generated@@601) ($generated@@276 $generated@@602)))
))))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@153) (= ($generated@@580 ($generated@@319 $generated@@603)) ($generated@@581 $generated@@603)))
 :pattern ( ($generated@@580 ($generated@@319 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@168) ($generated@@249 $generated@@604 ($generated@@84 0))) (and (= ($generated@@319 ($generated@@369 $generated@@2 $generated@@604)) $generated@@604) ($generated@@148 ($generated@@369 ($generated@@85 $generated@@168 $generated@@4) $generated@@604) ($generated@@84 0))))
 :pattern ( ($generated@@249 $generated@@604 ($generated@@84 0)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@168) (= (type $generated@@606) $generated@@73)) ($generated@@249 $generated@@605 ($generated@@264 $generated@@606))) (and (= ($generated@@319 ($generated@@369 ($generated@@85 $generated@@168 $generated@@4) $generated@@605)) $generated@@605) ($generated@@148 ($generated@@369 ($generated@@85 $generated@@168 $generated@@4) $generated@@605) ($generated@@264 $generated@@606))))
 :pattern ( ($generated@@249 $generated@@605 ($generated@@264 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@168) (= (type $generated@@608) $generated@@73)) ($generated@@249 $generated@@607 ($generated@@269 $generated@@608))) (and (= ($generated@@319 ($generated@@369 ($generated@@85 $generated@@168 $generated@@4) $generated@@607)) $generated@@607) ($generated@@148 ($generated@@369 ($generated@@85 $generated@@168 $generated@@4) $generated@@607) ($generated@@269 $generated@@608))))
 :pattern ( ($generated@@249 $generated@@607 ($generated@@269 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@168) (= (type $generated@@610) $generated@@73)) ($generated@@249 $generated@@609 ($generated@@177 $generated@@610))) (and (= ($generated@@319 ($generated@@369 ($generated@@85 $generated@@168 $generated@@2) $generated@@609)) $generated@@609) ($generated@@148 ($generated@@369 ($generated@@85 $generated@@168 $generated@@2) $generated@@609) ($generated@@177 $generated@@610))))
 :pattern ( ($generated@@249 $generated@@609 ($generated@@177 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@168) (= (type $generated@@612) $generated@@73)) ($generated@@249 $generated@@611 ($generated@@542 $generated@@612))) (and (= ($generated@@319 ($generated@@369 ($generated@@303 $generated@@168) $generated@@611)) $generated@@611) ($generated@@148 ($generated@@369 ($generated@@303 $generated@@168) $generated@@611) ($generated@@542 $generated@@612))))
 :pattern ( ($generated@@249 $generated@@611 ($generated@@542 $generated@@612)))
)))
(assert (= ($generated@@81 $generated@@144) $generated@@63))
(assert (= ($generated@@597 $generated@@144) $generated@@70))
(assert (= ($generated@@81 $generated@@241) $generated@@64))
(assert (= ($generated@@597 $generated@@241) $generated@@70))
(assert (= ($generated@@81 $generated@@155) $generated@@66))
(assert (= ($generated@@597 $generated@@155) $generated@@71))
(assert (= ($generated@@81 $generated@@141) $generated@@68))
(assert (= ($generated@@597 $generated@@141) $generated@@72))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@85 $generated@@168 $generated@@2)) (= (type $generated@@614) $generated@@73)) (= (type $generated@@615) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@613 ($generated@@177 $generated@@614) $generated@@615) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@168) (< 0 ($generated ($generated@@90 $generated@@613 $generated@@616)))) ($generated@@286 $generated@@616 $generated@@614 $generated@@615))
 :pattern ( ($generated@@90 $generated@@613 $generated@@616))
))))
 :pattern ( ($generated@@83 $generated@@613 ($generated@@177 $generated@@614) $generated@@615))
)))
(assert (= $generated@@174 ($generated@@276 $generated@@174)))
(assert (= $generated@@176 ($generated@@276 $generated@@176)))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@73)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@86) (= ($generated@@148 $generated@@620 $generated@@144)  (or (= $generated@@620 $generated@@145) ($generated@@617 ($generated@@618 $generated@@620)))))
 :pattern ( ($generated@@148 $generated@@620 $generated@@144))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@153) (= (type $generated@@622) $generated@@73)) (= (type $generated@@623) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@256 $generated@@623) (and ($generated@@158 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@73) ($generated@@83 $generated@@621 ($generated@@159 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@83 $generated@@621 ($generated@@159 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@286 ($generated@@166 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@286 ($generated@@166 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@153) (= (type $generated@@626) $generated@@73)) (= (type $generated@@627) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@256 $generated@@627) (and ($generated@@158 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@73) ($generated@@83 $generated@@625 ($generated@@159 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@83 $generated@@625 ($generated@@159 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@286 ($generated@@167 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@286 ($generated@@167 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@2) (= ($generated@@148 $generated@@629 $generated@@141)  (and (<= ($generated@@274 30) ($generated $generated@@629)) (< ($generated $generated@@629) 40))))
 :pattern ( ($generated@@148 $generated@@629 $generated@@141))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@168) (= (type $generated@@631) $generated@@168)) (= ($generated@@248 ($generated@@276 $generated@@630) ($generated@@276 $generated@@631)) ($generated@@276 ($generated@@248 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@248 ($generated@@276 $generated@@630) ($generated@@276 $generated@@631)))
)))
(assert (forall (($generated@@632 Int) ) (! (= ($generated@@319 ($generated@@8 ($generated@@274 $generated@@632))) ($generated@@276 ($generated@@319 ($generated@@8 $generated@@632))))
 :pattern ( ($generated@@319 ($generated@@8 ($generated@@274 $generated@@632))))
)))
(assert (forall (($generated@@633 T@U) ) (! (= ($generated@@319 ($generated@@276 $generated@@633)) ($generated@@276 ($generated@@319 $generated@@633)))
 :pattern ( ($generated@@319 ($generated@@276 $generated@@633)))
)))
(assert  (=> (<= 0 $generated@@150) (forall (($generated@@634 T@U) ($generated@@635 Int) ) (!  (=> (and (= (type $generated@@634) $generated@@152) (or ($generated@@316 $generated@@635) (and (not (= 0 $generated@@150)) (and (<= ($generated@@274 30) $generated@@635) (< $generated@@635 40))))) true)
 :pattern ( ($generated@@315 $generated@@634 $generated@@635))
))))
(assert (forall (($generated@@636 T@U) ) (! (let (($generated@@637 ($generated@@304 (type $generated@@636))))
 (=> (and (= (type $generated@@636) ($generated@@303 $generated@@637)) (= ($generated@@302 $generated@@636) 0)) (= $generated@@636 ($generated@@301 $generated@@637))))
 :pattern ( ($generated@@302 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@639)))
 (=> (and (and (= (type $generated@@638) ($generated@@85 $generated@@641 $generated@@2)) (= (type $generated@@640) $generated@@2)) (<= 0 ($generated $generated@@640))) (= ($generated@@324 ($generated@@91 $generated@@638 $generated@@639 $generated@@640)) (+ (- ($generated@@324 $generated@@638) ($generated ($generated@@90 $generated@@638 $generated@@639))) ($generated $generated@@640)))))
 :pattern ( ($generated@@324 ($generated@@91 $generated@@638 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@643) $generated@@2)) ($generated@@83 $generated@@643 $generated@@46 $generated@@642))
 :pattern ( ($generated@@83 $generated@@643 $generated@@46 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@645) $generated@@3)) ($generated@@83 $generated@@645 $generated@@47 $generated@@644))
 :pattern ( ($generated@@83 $generated@@645 $generated@@47 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@647) $generated@@4)) ($generated@@83 $generated@@647 $generated@@44 $generated@@646))
 :pattern ( ($generated@@83 $generated@@647 $generated@@44 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@649) $generated@@494)) ($generated@@83 $generated@@649 $generated@@45 $generated@@648))
 :pattern ( ($generated@@83 $generated@@649 $generated@@45 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@651) $generated@@168)) ($generated@@83 $generated@@651 $generated@@48 $generated@@650))
 :pattern ( ($generated@@83 $generated@@651 $generated@@48 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@303 $generated@@168)) (= (type $generated@@653) $generated@@73)) (= ($generated@@148 $generated@@652 ($generated@@542 $generated@@653)) (forall (($generated@@654 Int) ) (!  (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@302 $generated@@652))) ($generated@@249 ($generated@@543 $generated@@652 $generated@@654) $generated@@653))
 :pattern ( ($generated@@543 $generated@@652 $generated@@654))
))))
 :pattern ( ($generated@@148 $generated@@652 ($generated@@542 $generated@@653)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 Int) ) (!  (=> (= (type $generated@@656) ($generated@@303 $generated@@168)) (=> (and (<= 0 $generated@@657) (< $generated@@657 ($generated@@302 $generated@@656))) (< ($generated@@581 ($generated@@369 $generated@@153 ($generated@@543 $generated@@656 $generated@@657))) ($generated@@655 $generated@@656))))
 :pattern ( ($generated@@581 ($generated@@369 $generated@@153 ($generated@@543 $generated@@656 $generated@@657))))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@332 $generated@@168 $generated@@168)) (= (type $generated@@659) $generated@@73)) (= (type $generated@@660) $generated@@73)) ($generated@@148 $generated@@658 ($generated@@442 $generated@@659 $generated@@660))) (and (and ($generated@@148 ($generated@@330 $generated@@658) ($generated@@264 $generated@@659)) ($generated@@148 ($generated@@381 $generated@@658) ($generated@@264 $generated@@660))) ($generated@@148 ($generated@@416 $generated@@658) ($generated@@264 ($generated@@159 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@148 $generated@@658 ($generated@@442 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) ($generated@@350 $generated@@168 $generated@@168)) (= (type $generated@@662) $generated@@73)) (= (type $generated@@663) $generated@@73)) ($generated@@148 $generated@@661 ($generated@@450 $generated@@662 $generated@@663))) (and (and ($generated@@148 ($generated@@348 $generated@@661) ($generated@@269 $generated@@662)) ($generated@@148 ($generated@@392 $generated@@661) ($generated@@269 $generated@@663))) ($generated@@148 ($generated@@424 $generated@@661) ($generated@@269 ($generated@@159 $generated@@662 $generated@@663)))))
 :pattern ( ($generated@@148 $generated@@661 ($generated@@450 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@2) ($generated@@148 $generated@@664 $generated@@46))
 :pattern ( ($generated@@148 $generated@@664 $generated@@46))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@3) ($generated@@148 $generated@@665 $generated@@47))
 :pattern ( ($generated@@148 $generated@@665 $generated@@47))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@4) ($generated@@148 $generated@@666 $generated@@44))
 :pattern ( ($generated@@148 $generated@@666 $generated@@44))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@494) ($generated@@148 $generated@@667 $generated@@45))
 :pattern ( ($generated@@148 $generated@@667 $generated@@45))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@168) ($generated@@148 $generated@@668 $generated@@48))
 :pattern ( ($generated@@148 $generated@@668 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 (T@U) Bool)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@669) $generated@@86) (= (type $generated@@678) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@673) $generated@@152)) (= (type $generated@@670) $generated@@153)) (= (type $generated@@674) $generated@@152)) (= (type $generated@@675) $generated@@152)) (= (type $generated@@690) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@679) $generated@@152)) (= (type $generated@@680) $generated@@152)) (= (type $generated@@689) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@682) $generated@@152)) (= (type $generated@@683) $generated@@152)) (= (type $generated@@687) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@685) $generated@@152)) (= (type $generated@@686) $generated@@152)) (= (type $generated@@676) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@681) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@684) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@692) $generated@@152)) (= (type $generated@@693) $generated@@152)) (= (type $generated@@694) $generated@@152)) (= (type $generated@@695) $generated@@152)) (= (type $generated@@696) $generated@@152)) (= (type $generated@@697) $generated@@152)) (= (type $generated@@698) ($generated@@184 $generated@@86 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 41) (let (($generated@@699  (=> (and (=> ($generated@@242 $generated@@669) ($generated@@404 $generated@@670)) (= (ControlFlow 0 24) (- 0 23))) (or (or (not ($generated@@242 $generated@@669)) ($generated@@261 $generated@@670 $generated@@174)) (= $generated@@671 ($generated@@274 55))))))
(let (($generated@@700  (=> (and (or (not ($generated@@242 $generated@@669)) ($generated@@261 $generated@@670 $generated@@174)) (= (ControlFlow 0 27) 24)) $generated@@699)))
(let (($generated@@701  (=> (and (not (or (not ($generated@@242 $generated@@669)) ($generated@@261 $generated@@670 $generated@@174))) (= $generated@@672 ($generated@@274 55))) (and (=> (= (ControlFlow 0 25) (- 0 26)) (and (<= ($generated@@274 30) $generated@@672) (< $generated@@672 40))) (=> (and (<= ($generated@@274 30) $generated@@672) (< $generated@@672 40)) (=> (= (ControlFlow 0 25) 24) $generated@@699))))))
(let (($generated@@702  (=> (not ($generated@@242 $generated@@669)) (and (=> (= (ControlFlow 0 29) 25) $generated@@701) (=> (= (ControlFlow 0 29) 27) $generated@@700)))))
(let (($generated@@703  (=> ($generated@@242 $generated@@669) (and (=> (= (ControlFlow 0 28) 25) $generated@@701) (=> (= (ControlFlow 0 28) 27) $generated@@700)))))
(let (($generated@@704  (=> (and (and ($generated@@238 $generated@@673 $generated@@669) ($generated@@151 $generated@@674 $generated@@670)) ($generated@@315 $generated@@675 $generated@@671)) (and (=> (= (ControlFlow 0 30) (- 0 32)) (not (= $generated@@669 $generated@@145))) (=> (not (= $generated@@669 $generated@@145)) (=> (and ($generated@@256 $generated@@676) ($generated@@677 $generated@@676)) (=> (and (and (and (and (= $generated@@678 $generated@@676) (= $generated@@673 ($generated@@239 $generated@@679))) (and (= $generated@@680 ($generated@@239 ($generated@@239 $generated@@679))) (= ($generated@@458 $generated@@679) $generated@@679))) (and (and ($generated@@256 $generated@@681) ($generated@@677 $generated@@681)) (and (= $generated@@676 $generated@@681) (= $generated@@674 ($generated@@239 $generated@@682))))) (and (and (and (= $generated@@683 ($generated@@239 ($generated@@239 $generated@@682))) (= ($generated@@458 $generated@@682) $generated@@682)) (and ($generated@@256 $generated@@684) ($generated@@677 $generated@@684))) (and (and (= $generated@@681 $generated@@684) (= $generated@@675 ($generated@@239 $generated@@685))) (and (= $generated@@686 ($generated@@239 ($generated@@239 $generated@@685))) (= ($generated@@458 $generated@@685) $generated@@685))))) (and (=> (= (ControlFlow 0 30) (- 0 31)) (not (= $generated@@669 $generated@@145))) (and (=> (= (ControlFlow 0 30) 28) $generated@@703) (=> (= (ControlFlow 0 30) 29) $generated@@702))))))))))
(let (($generated@@705 true))
(let (($generated@@706  (=> (and ($generated@@240 $generated@@669) (=> ($generated@@238 $generated@@673 $generated@@669) (and ($generated@@154 $generated@@670) (=> ($generated@@151 $generated@@674 $generated@@670) ($generated@@316 $generated@@671))))) (and (=> (= (ControlFlow 0 33) 30) $generated@@704) (=> (= (ControlFlow 0 33) 22) $generated@@705)))))
(let (($generated@@707  (=> (and (not (and ($generated@@238 $generated@@673 $generated@@669) ($generated@@151 $generated@@674 $generated@@670))) (= (ControlFlow 0 35) 33)) $generated@@706)))
(let (($generated@@708  (=> (and (and (and ($generated@@238 $generated@@673 $generated@@669) ($generated@@151 $generated@@674 $generated@@670)) ($generated@@83 ($generated@@8 $generated@@671) $generated@@141 $generated@@678)) (and ($generated@@316 $generated@@671) (= (ControlFlow 0 34) 33))) $generated@@706)))
(let (($generated@@709  (=> (not ($generated@@238 $generated@@673 $generated@@669)) (and (=> (= (ControlFlow 0 37) 34) $generated@@708) (=> (= (ControlFlow 0 37) 35) $generated@@707)))))
(let (($generated@@710  (=> ($generated@@238 $generated@@673 $generated@@669) (=> (and ($generated@@83 $generated@@670 $generated@@155 $generated@@678) ($generated@@154 $generated@@670)) (and (=> (= (ControlFlow 0 36) 34) $generated@@708) (=> (= (ControlFlow 0 36) 35) $generated@@707))))))
(let (($generated@@711  (=> ($generated@@0 ($generated@@276 ($generated@@11 true))) (and (=> (= (ControlFlow 0 38) (- 0 39)) (not (= $generated@@669 $generated@@145))) (=> (not (= $generated@@669 $generated@@145)) (=> (and ($generated@@83 $generated@@669 $generated@@144 $generated@@678) ($generated@@240 $generated@@669)) (and (=> (= (ControlFlow 0 38) 36) $generated@@710) (=> (= (ControlFlow 0 38) 37) $generated@@709))))))))
(let (($generated@@712  (=> (and ($generated@@240 $generated@@669) ($generated@@154 $generated@@670)) (=> (and (and ($generated@@316 $generated@@671) ($generated@@240 $generated@@669)) (and ($generated@@154 $generated@@670) ($generated@@316 $generated@@671))) (=> (and (and (and (and (and (and (and (not ($generated@@238 $generated@@673 $generated@@669)) (not ($generated@@151 $generated@@674 $generated@@670))) (not ($generated@@315 $generated@@675 $generated@@671))) (not ($generated@@238 $generated@@673 $generated@@669))) (not ($generated@@151 $generated@@674 $generated@@670))) (not ($generated@@315 $generated@@675 $generated@@671))) (not ($generated@@0 ($generated@@276 ($generated@@11 true))))) (= (ControlFlow 0 21) (- 0 20))) false)))))
(let (($generated@@713  (=> (and (and ($generated@@83 ($generated@@8 $generated@@671) $generated@@141 $generated@@678) ($generated@@316 $generated@@671)) (and ($generated@@316 $generated@@671) ($generated@@315 $generated@@675 $generated@@671))) (=> (and (and (and ($generated@@256 $generated@@687) ($generated@@677 $generated@@687)) (= $generated@@678 $generated@@687)) (and (and (= $generated@@675 ($generated@@239 $generated@@685)) (= $generated@@686 ($generated@@239 ($generated@@239 $generated@@685)))) (and (= ($generated@@458 $generated@@685) $generated@@685) (= $generated@@688 ($generated@@274 34))))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= ($generated@@274 30) $generated@@688) (< $generated@@688 40))) (=> (and (<= ($generated@@274 30) $generated@@688) (< $generated@@688 40)) (=> (= (ControlFlow 0 18) (- 0 17)) (= $generated@@671 ($generated@@274 34)))))))))
(let (($generated@@714  (=> (and (and ($generated@@83 $generated@@670 $generated@@155 $generated@@678) ($generated@@154 $generated@@670)) (and ($generated@@154 $generated@@670) ($generated@@151 $generated@@674 $generated@@670))) (=> (and (and (and ($generated@@256 $generated@@689) ($generated@@677 $generated@@689)) (and (= $generated@@678 $generated@@689) (= $generated@@674 ($generated@@239 $generated@@682)))) (and (and (= $generated@@683 ($generated@@239 ($generated@@239 $generated@@682))) (= ($generated@@458 $generated@@682) $generated@@682)) (and ($generated@@404 $generated@@670) (= (ControlFlow 0 16) (- 0 15))))) ($generated@@261 $generated@@670 $generated@@176)))))
(let (($generated@@715  (and (=> (= (ControlFlow 0 11) (- 0 14)) (not (= $generated@@669 $generated@@145))) (=> (not (= $generated@@669 $generated@@145)) (=> (and (and ($generated@@83 $generated@@669 $generated@@144 $generated@@678) ($generated@@240 $generated@@669)) (and ($generated@@240 $generated@@669) ($generated@@238 $generated@@673 $generated@@669))) (and (=> (= (ControlFlow 0 11) (- 0 13)) (not (= $generated@@669 $generated@@145))) (=> (not (= $generated@@669 $generated@@145)) (=> (and ($generated@@256 $generated@@690) ($generated@@677 $generated@@690)) (=> (and (and (= $generated@@678 $generated@@690) (= $generated@@673 ($generated@@239 $generated@@679))) (and (= $generated@@680 ($generated@@239 ($generated@@239 $generated@@679))) (= ($generated@@458 $generated@@679) $generated@@679))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (not (= $generated@@669 $generated@@145))) (=> (= (ControlFlow 0 11) (- 0 10)) ($generated@@242 $generated@@669))))))))))))
(let (($generated@@716  (=> ($generated@@83 ($generated@@8 $generated@@671) $generated@@141 $generated@@678) (=> (and (and ($generated@@316 $generated@@671) ($generated@@316 $generated@@671)) (and ($generated@@315 $generated@@675 $generated@@671) (= $generated@@691 ($generated@@274 34)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= ($generated@@274 30) $generated@@691) (< $generated@@691 40))) (=> (and (<= ($generated@@274 30) $generated@@691) (< $generated@@691 40)) (=> (= (ControlFlow 0 8) (- 0 7)) (= $generated@@671 ($generated@@274 34)))))))))
(let (($generated@@717  (=> (and ($generated@@83 $generated@@670 $generated@@155 $generated@@678) ($generated@@154 $generated@@670)) (=> (and (and ($generated@@154 $generated@@670) ($generated@@151 $generated@@674 $generated@@670)) (and ($generated@@404 $generated@@670) (= (ControlFlow 0 6) (- 0 5)))) ($generated@@261 $generated@@670 $generated@@176)))))
(let (($generated@@718  (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@669 $generated@@145))) (=> (not (= $generated@@669 $generated@@145)) (=> (and (and ($generated@@83 $generated@@669 $generated@@144 $generated@@678) ($generated@@240 $generated@@669)) (and ($generated@@240 $generated@@669) ($generated@@238 $generated@@673 $generated@@669))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@669 $generated@@145))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@242 $generated@@669))))))))
(let (($generated@@719  (=> (= ($generated@@458 $generated@@673) $generated@@673) (=> (and (and (= ($generated@@458 $generated@@680) $generated@@680) (= ($generated@@458 $generated@@692) $generated@@692)) (and (= ($generated@@458 $generated@@693) $generated@@693) (= ($generated@@458 $generated@@674) $generated@@674))) (=> (and (and (and (= ($generated@@458 $generated@@683) $generated@@683) (= ($generated@@458 $generated@@694) $generated@@694)) (and (= ($generated@@458 $generated@@695) $generated@@695) (= ($generated@@458 $generated@@675) $generated@@675))) (and (and (= ($generated@@458 $generated@@686) $generated@@686) (= ($generated@@458 $generated@@696) $generated@@696)) (and (= ($generated@@458 $generated@@697) $generated@@697) (= $generated@@698 ($generated@@183 $generated@@145 $generated@@678 $generated@@60 false))))) (and (and (and (and (and (and (and (=> (= (ControlFlow 0 40) 2) $generated@@718) (=> (= (ControlFlow 0 40) 6) $generated@@717)) (=> (= (ControlFlow 0 40) 8) $generated@@716)) (=> (= (ControlFlow 0 40) 11) $generated@@715)) (=> (= (ControlFlow 0 40) 16) $generated@@714)) (=> (= (ControlFlow 0 40) 18) $generated@@713)) (=> (= (ControlFlow 0 40) 38) $generated@@711)) (=> (= (ControlFlow 0 40) 21) $generated@@712)))))))
(let (($generated@@720  (=> (and (and ($generated@@256 $generated@@678) ($generated@@677 $generated@@678)) (and ($generated@@148 $generated@@669 $generated@@241) ($generated@@83 $generated@@669 $generated@@241 $generated@@678))) (=> (and (and (and ($generated@@148 $generated@@670 $generated@@155) ($generated@@83 $generated@@670 $generated@@155 $generated@@678)) ($generated@@404 $generated@@670)) (and (and (<= ($generated@@274 30) $generated@@671) (< $generated@@671 40)) (and (= 2 $generated@@150) (= (ControlFlow 0 41) 40)))) $generated@@719))))
$generated@@720)))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 8) (- 7))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 25) (- 26))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (T@U Int) Bool)
(declare-fun $generated@@191 () T@T)
(declare-fun $generated@@192 (Int) Bool)
(declare-fun $generated@@195 (T@U Int) Bool)
(declare-fun $generated@@196 (Int) Bool)
(declare-fun $generated@@199 (T@U Int) Bool)
(declare-fun $generated@@200 (Int) Bool)
(declare-fun $generated@@203 (T@T) T@U)
(declare-fun $generated@@204 (T@U) Int)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U) Bool)
(declare-fun $generated@@212 (T@U) T@U)
(declare-fun $generated@@213 () T@T)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@T T@T) T@U)
(declare-fun $generated@@220 (T@T T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@237 (T@T T@T) T@U)
(declare-fun $generated@@238 (T@T T@T) T@T)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@U T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@286 (T@U T@U) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 () T@U)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U Int) T@U)
(declare-fun $generated@@358 (T@U) Int)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@405 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert (= ($generated@@1 $generated@@191) 13))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@193 T@U) ($generated@@194 Int) ) (!  (=> (and (= (type $generated@@193) $generated@@191) (or ($generated@@192 $generated@@194) (not (= 0 $generated@@189)))) true)
 :pattern ( ($generated@@190 $generated@@193 $generated@@194))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@197 T@U) ($generated@@198 Int) ) (!  (=> (and (= (type $generated@@197) $generated@@191) (or ($generated@@196 $generated@@198) (not (= 0 $generated@@189)))) true)
 :pattern ( ($generated@@195 $generated@@197 $generated@@198))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@201 T@U) ($generated@@202 Int) ) (!  (=> (and (= (type $generated@@201) $generated@@191) (or ($generated@@200 $generated@@202) (not (= 0 $generated@@189)))) true)
 :pattern ( ($generated@@199 $generated@@201 $generated@@202))
))))
(assert  (and (and (forall (($generated@@207 T@T) ) (= ($generated@@1 ($generated@@205 $generated@@207)) 14)) (forall (($generated@@208 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@208)) $generated@@208)
 :pattern ( ($generated@@205 $generated@@208))
))) (forall (($generated@@209 T@T) ) (! (= (type ($generated@@203 $generated@@209)) ($generated@@205 $generated@@209))
 :pattern ( ($generated@@203 $generated@@209))
))))
(assert (forall (($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@210)) 0)
 :pattern ( ($generated@@203 $generated@@210))
)))
(assert  (and (= ($generated@@1 $generated@@213) 15) (forall (($generated@@214 T@U) ) (! (= (type ($generated@@212 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@212 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (= (type $generated@@216) $generated@@61) (= (type $generated@@217) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@211 ($generated@@212 $generated@@215) $generated@@216 $generated@@217) ($generated@@69 $generated@@215 $generated@@216 $generated@@217)))
 :pattern ( ($generated@@211 ($generated@@212 $generated@@215) $generated@@216 $generated@@217))
)))
(assert  (and (and (and (and (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (= ($generated@@1 ($generated@@220 $generated@@223 $generated@@224)) 16)) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@225 $generated@@226)) $generated@@225)
 :pattern ( ($generated@@220 $generated@@225 $generated@@226))
))) (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (! (= ($generated@@222 ($generated@@220 $generated@@227 $generated@@228)) $generated@@228)
 :pattern ( ($generated@@220 $generated@@227 $generated@@228))
))) (forall (($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@221 (type $generated@@229))))
(= (type ($generated@@218 $generated@@229)) ($generated@@71 $generated@@230 $generated@@4)))
 :pattern ( ($generated@@218 $generated@@229))
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= (type ($generated@@219 $generated@@231 $generated@@232)) ($generated@@220 $generated@@231 $generated@@232))
 :pattern ( ($generated@@219 $generated@@231 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@T) ) (! (let (($generated@@235 (type $generated@@233)))
 (not ($generated@@0 ($generated@@76 ($generated@@218 ($generated@@219 $generated@@235 $generated@@234)) $generated@@233))))
 :pattern ( (let (($generated@@235 (type $generated@@233)))
($generated@@76 ($generated@@218 ($generated@@219 $generated@@235 $generated@@234)) $generated@@233)))
)))
(assert  (and (and (and (and (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (= ($generated@@1 ($generated@@238 $generated@@241 $generated@@242)) 17)) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@239 ($generated@@238 $generated@@243 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@238 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (! (= ($generated@@240 ($generated@@238 $generated@@245 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@238 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@239 (type $generated@@247))))
(= (type ($generated@@236 $generated@@247)) ($generated@@71 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@236 $generated@@247))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= (type ($generated@@237 $generated@@249 $generated@@250)) ($generated@@238 $generated@@249 $generated@@250))
 :pattern ( ($generated@@237 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@T) ) (! (let (($generated@@253 (type $generated@@251)))
 (not ($generated@@0 ($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251))))
 :pattern ( (let (($generated@@253 (type $generated@@251)))
($generated@@76 ($generated@@236 ($generated@@237 $generated@@253 $generated@@252)) $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@222 (type $generated@@254))))
(let (($generated@@256 ($generated@@221 (type $generated@@254))))
 (=> (= (type $generated@@254) ($generated@@220 $generated@@256 $generated@@255)) (or (= $generated@@254 ($generated@@219 $generated@@256 $generated@@255)) (exists (($generated@@257 T@U) ) (!  (and (= (type $generated@@257) $generated@@256) ($generated@@0 ($generated@@76 ($generated@@218 $generated@@254) $generated@@257)))
 :no-pattern (type $generated@@257)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
))))))
 :pattern ( ($generated@@218 $generated@@254))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@240 (type $generated@@258))))
(let (($generated@@260 ($generated@@239 (type $generated@@258))))
 (=> (= (type $generated@@258) ($generated@@238 $generated@@260 $generated@@259)) (or (= $generated@@258 ($generated@@237 $generated@@260 $generated@@259)) (exists (($generated@@261 T@U) ) (!  (and (= (type $generated@@261) $generated@@260) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@258) $generated@@261)))
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
))))))
 :pattern ( ($generated@@236 $generated@@258))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@61)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (= (type $generated@@264) ($generated@@71 $generated@@213 $generated@@4)) (= (type $generated@@265) $generated@@61)) (= (type $generated@@266) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@264 ($generated@@262 $generated@@265) $generated@@266) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@213) ($generated@@0 ($generated@@76 $generated@@264 $generated@@267))) ($generated@@211 $generated@@267 $generated@@265 $generated@@266))
 :pattern ( ($generated@@76 $generated@@264 $generated@@267))
))))
 :pattern ( ($generated@@69 $generated@@264 ($generated@@262 $generated@@265) $generated@@266))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@61)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (= (type $generated@@270) ($generated@@71 $generated@@213 $generated@@4)) (= (type $generated@@271) $generated@@61)) (= (type $generated@@272) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@270 ($generated@@268 $generated@@271) $generated@@272) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@213) ($generated@@0 ($generated@@76 $generated@@270 $generated@@273))) ($generated@@211 $generated@@273 $generated@@271 $generated@@272))
 :pattern ( ($generated@@76 $generated@@270 $generated@@273))
))))
 :pattern ( ($generated@@69 $generated@@270 ($generated@@268 $generated@@271) $generated@@272))
)))
(assert  (and (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (! (= (type ($generated@@274 $generated@@276 $generated@@277)) $generated@@61)
 :pattern ( ($generated@@274 $generated@@276 $generated@@277))
)) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@222 (type $generated@@278))))
(let (($generated@@280 ($generated@@221 (type $generated@@278))))
(= (type ($generated@@275 $generated@@278)) ($generated@@71 $generated@@280 $generated@@279))))
 :pattern ( ($generated@@275 $generated@@278))
))))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (= (type $generated@@281) ($generated@@220 $generated@@213 $generated@@213)) (= (type $generated@@282) $generated@@61)) (= (type $generated@@283) $generated@@61)) (= (type $generated@@284) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@281 ($generated@@274 $generated@@282 $generated@@283) $generated@@284) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@213) ($generated@@0 ($generated@@76 ($generated@@218 $generated@@281) $generated@@285))) (and ($generated@@211 ($generated@@76 ($generated@@275 $generated@@281) $generated@@285) $generated@@283 $generated@@284) ($generated@@211 $generated@@285 $generated@@282 $generated@@284)))
 :pattern ( ($generated@@76 ($generated@@275 $generated@@281) $generated@@285))
 :pattern ( ($generated@@76 ($generated@@218 $generated@@281) $generated@@285))
))))
 :pattern ( ($generated@@69 $generated@@281 ($generated@@274 $generated@@282 $generated@@283) $generated@@284))
)))
(assert  (and (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (= (type ($generated@@286 $generated@@288 $generated@@289)) $generated@@61)
 :pattern ( ($generated@@286 $generated@@288 $generated@@289))
)) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@240 (type $generated@@290))))
(let (($generated@@292 ($generated@@239 (type $generated@@290))))
(= (type ($generated@@287 $generated@@290)) ($generated@@71 $generated@@292 $generated@@291))))
 :pattern ( ($generated@@287 $generated@@290))
))))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (= (type $generated@@293) ($generated@@238 $generated@@213 $generated@@213)) (= (type $generated@@294) $generated@@61)) (= (type $generated@@295) $generated@@61)) (= (type $generated@@296) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@293 ($generated@@286 $generated@@294 $generated@@295) $generated@@296) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@213) ($generated@@0 ($generated@@76 ($generated@@236 $generated@@293) $generated@@297))) (and ($generated@@211 ($generated@@76 ($generated@@287 $generated@@293) $generated@@297) $generated@@295 $generated@@296) ($generated@@211 $generated@@297 $generated@@294 $generated@@296)))
 :pattern ( ($generated@@76 ($generated@@287 $generated@@293) $generated@@297))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@293) $generated@@297))
))))
 :pattern ( ($generated@@69 $generated@@293 ($generated@@286 $generated@@294 $generated@@295) $generated@@296))
)))
(assert  (and (forall (($generated@@300 T@U) ) (! (= (type ($generated@@298 $generated@@300)) $generated@@191)
 :pattern ( ($generated@@298 $generated@@300))
)) (= (type $generated@@299) $generated@@191)))
(assert (forall (($generated@@301 T@U) ($generated@@302 Int) ) (!  (=> (= (type $generated@@301) $generated@@191) (= ($generated@@190 $generated@@301 $generated@@302) ($generated@@190 $generated@@299 $generated@@302)))
 :pattern ( ($generated@@190 ($generated@@298 $generated@@301) $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 Int) ) (!  (=> (= (type $generated@@303) $generated@@191) (= ($generated@@195 $generated@@303 $generated@@304) ($generated@@195 $generated@@299 $generated@@304)))
 :pattern ( ($generated@@195 ($generated@@298 $generated@@303) $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 Int) ) (!  (=> (= (type $generated@@305) $generated@@191) (= ($generated@@199 $generated@@305 $generated@@306) ($generated@@199 $generated@@299 $generated@@306)))
 :pattern ( ($generated@@199 ($generated@@298 $generated@@305) $generated@@306))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@71 $generated@@308 $generated@@4))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@240 (type $generated@@309))))
(let (($generated@@311 ($generated@@239 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@238 $generated@@311 $generated@@310)) (= (= $generated@@309 ($generated@@237 $generated@@311 $generated@@310)) (= ($generated@@236 $generated@@309) ($generated@@307 $generated@@311))))))
 :pattern ( ($generated@@236 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@191)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 Int) ) (!  (=> (= (type $generated@@314) $generated@@191) (= ($generated@@190 ($generated@@312 $generated@@314) $generated@@315) ($generated@@190 $generated@@314 $generated@@315)))
 :pattern ( ($generated@@190 ($generated@@312 $generated@@314) $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 Int) ) (!  (=> (= (type $generated@@316) $generated@@191) (= ($generated@@195 ($generated@@312 $generated@@316) $generated@@317) ($generated@@195 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@195 ($generated@@312 $generated@@316) $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 Int) ) (!  (=> (= (type $generated@@318) $generated@@191) (= ($generated@@199 ($generated@@312 $generated@@318) $generated@@319) ($generated@@199 $generated@@318 $generated@@319)))
 :pattern ( ($generated@@199 ($generated@@312 $generated@@318) $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@206 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@205 $generated@@321)) (<= 0 ($generated@@204 $generated@@320))))
 :pattern ( ($generated@@204 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@61)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@61) (= (type $generated@@325) $generated@@61)) (= ($generated@@322 ($generated@@274 $generated@@324 $generated@@325)) $generated@@324))
 :pattern ( ($generated@@274 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@61) (= (type $generated@@329) $generated@@61)) (= ($generated@@326 ($generated@@274 $generated@@328 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@274 $generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@61) (= (type $generated@@331) $generated@@61)) (= ($generated@@67 ($generated@@274 $generated@@330 $generated@@331)) $generated@@58))
 :pattern ( ($generated@@274 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@61)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@61) (= (type $generated@@335) $generated@@61)) (= ($generated@@332 ($generated@@286 $generated@@334 $generated@@335)) $generated@@334))
 :pattern ( ($generated@@286 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@61)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@61) (= (type $generated@@339) $generated@@61)) (= ($generated@@336 ($generated@@286 $generated@@338 $generated@@339)) $generated@@339))
 :pattern ( ($generated@@286 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@61) (= (type $generated@@341) $generated@@61)) (= ($generated@@67 ($generated@@286 $generated@@340 $generated@@341)) $generated@@59))
 :pattern ( ($generated@@286 $generated@@340 $generated@@341))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@342 T@U) ($generated@@343 Int) ) (!  (=> (and (= (type $generated@@342) $generated@@191) (or ($generated@@192 $generated@@343) (not (= 0 $generated@@189)))) (= ($generated@@190 ($generated@@312 $generated@@342) $generated@@343) (= $generated@@343 ($generated@@183 5))))
 :pattern ( ($generated@@190 ($generated@@312 $generated@@342) $generated@@343))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@344 T@U) ($generated@@345 Int) ) (!  (=> (and (= (type $generated@@344) $generated@@191) (or ($generated@@196 $generated@@345) (not (= 0 $generated@@189)))) (= ($generated@@195 ($generated@@312 $generated@@344) $generated@@345) (= $generated@@345 ($generated@@183 5))))
 :pattern ( ($generated@@195 ($generated@@312 $generated@@344) $generated@@345))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@346 T@U) ($generated@@347 Int) ) (!  (=> (and (= (type $generated@@346) $generated@@191) (or ($generated@@200 $generated@@347) (not (= 0 $generated@@189)))) (= ($generated@@199 ($generated@@312 $generated@@346) $generated@@347) (= $generated@@347 ($generated@@183 5))))
 :pattern ( ($generated@@199 ($generated@@312 $generated@@346) $generated@@347))
))))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ($generated@@352 Int) ) (! (let (($generated@@353 ($generated@@206 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351 $generated@@352)) $generated@@353))
 :pattern ( ($generated@@349 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@205 $generated@@213)) (= (type $generated@@355) $generated@@61)) (= (type $generated@@356) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356) (forall (($generated@@357 Int) ) (!  (=> (and (<= 0 $generated@@357) (< $generated@@357 ($generated@@204 $generated@@354))) ($generated@@211 ($generated@@349 $generated@@354 $generated@@357) $generated@@355 $generated@@356))
 :pattern ( ($generated@@349 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@69 $generated@@354 ($generated@@348 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@359 Int) ) (! (= ($generated@@358 ($generated@@70 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@70 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@61)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@360 ($generated@@262 $generated@@362)) $generated@@362))
 :pattern ( ($generated@@262 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@61) (= ($generated@@67 ($generated@@262 $generated@@363)) $generated@@54))
 :pattern ( ($generated@@262 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (= (type ($generated@@364 $generated@@365)) $generated@@61)
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@61) (= ($generated@@364 ($generated@@268 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@268 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@61) (= ($generated@@67 ($generated@@268 $generated@@367)) $generated@@55))
 :pattern ( ($generated@@268 $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) $generated@@61)
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) $generated@@61)
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@61) (= ($generated@@369 ($generated@@368 $generated@@372)) $generated@@372))
 :pattern ( ($generated@@368 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@61) (= ($generated@@67 ($generated@@368 $generated@@373)) $generated@@56))
 :pattern ( ($generated@@368 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (= (type ($generated@@374 $generated@@375)) $generated@@61)
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@61) (= ($generated@@374 ($generated@@348 $generated@@376)) $generated@@376))
 :pattern ( ($generated@@348 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@377)) $generated@@57))
 :pattern ( ($generated@@348 $generated@@377))
)))
(assert (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated@@378 $generated@@382 ($generated@@212 $generated@@381)) $generated@@381))
 :pattern ( ($generated@@212 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
 (not ($generated@@0 ($generated@@76 ($generated@@307 $generated@@384) $generated@@383))))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@76 ($generated@@307 $generated@@384) $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@71 $generated@@213 $generated@@2)) (= (type $generated@@386) $generated@@61)) (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@385 ($generated@@368 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@213) (< 0 ($generated ($generated@@76 $generated@@385 $generated@@388)))) ($generated@@211 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@76 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@69 $generated@@385 ($generated@@368 $generated@@386) $generated@@387))
)))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@389 T@U) ($generated@@390 Int) ) (!  (=> (and (= (type $generated@@389) $generated@@191) (or ($generated@@192 ($generated@@183 $generated@@390)) (not (= 0 $generated@@189)))) (= ($generated@@190 ($generated@@312 $generated@@389) ($generated@@183 $generated@@390)) (= ($generated@@183 $generated@@390) ($generated@@183 5))))
 :weight 3
 :pattern ( ($generated@@190 ($generated@@312 $generated@@389) ($generated@@183 $generated@@390)))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@391 T@U) ($generated@@392 Int) ) (!  (=> (and (= (type $generated@@391) $generated@@191) (or ($generated@@196 ($generated@@183 $generated@@392)) (not (= 0 $generated@@189)))) (= ($generated@@195 ($generated@@312 $generated@@391) ($generated@@183 $generated@@392)) (= ($generated@@183 $generated@@392) ($generated@@183 5))))
 :weight 3
 :pattern ( ($generated@@195 ($generated@@312 $generated@@391) ($generated@@183 $generated@@392)))
))))
(assert  (=> (<= 0 $generated@@189) (forall (($generated@@393 T@U) ($generated@@394 Int) ) (!  (=> (and (= (type $generated@@393) $generated@@191) (or ($generated@@200 ($generated@@183 $generated@@394)) (not (= 0 $generated@@189)))) (= ($generated@@199 ($generated@@312 $generated@@393) ($generated@@183 $generated@@394)) (= ($generated@@183 $generated@@394) ($generated@@183 5))))
 :weight 3
 :pattern ( ($generated@@199 ($generated@@312 $generated@@393) ($generated@@183 $generated@@394)))
))))
(assert (forall (($generated@@395 Int) ) (! (= ($generated@@212 ($generated@@8 ($generated@@183 $generated@@395))) ($generated@@185 ($generated@@212 ($generated@@8 $generated@@395))))
 :pattern ( ($generated@@212 ($generated@@8 ($generated@@183 $generated@@395))))
)))
(assert (forall (($generated@@396 T@U) ) (! (= ($generated@@212 ($generated@@185 $generated@@396)) ($generated@@185 ($generated@@212 $generated@@396)))
 :pattern ( ($generated@@212 ($generated@@185 $generated@@396)))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@206 (type $generated@@397))))
 (=> (and (= (type $generated@@397) ($generated@@205 $generated@@398)) (= ($generated@@204 $generated@@397) 0)) (= $generated@@397 ($generated@@203 $generated@@398))))
 :pattern ( ($generated@@204 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@400) $generated@@2)) ($generated@@69 $generated@@400 $generated@@46 $generated@@399))
 :pattern ( ($generated@@69 $generated@@400 $generated@@46 $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@402) $generated@@3)) ($generated@@69 $generated@@402 $generated@@47 $generated@@401))
 :pattern ( ($generated@@69 $generated@@402 $generated@@47 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@404) $generated@@4)) ($generated@@69 $generated@@404 $generated@@44 $generated@@403))
 :pattern ( ($generated@@69 $generated@@404 $generated@@44 $generated@@403))
)))
(assert (= ($generated@@1 $generated@@405) 18))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@407) $generated@@405)) ($generated@@69 $generated@@407 $generated@@45 $generated@@406))
 :pattern ( ($generated@@69 $generated@@407 $generated@@45 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@409) $generated@@213)) ($generated@@69 $generated@@409 $generated@@48 $generated@@408))
 :pattern ( ($generated@@69 $generated@@409 $generated@@48 $generated@@408))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@410 () T@U)
(declare-fun $generated@@411 () Int)
(declare-fun $generated@@412 () T@U)
(declare-fun $generated@@413 () T@U)
(declare-fun $generated@@414 (T@U) Bool)
(declare-fun $generated@@415 () T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@417 () T@U)
(declare-fun $generated@@418 () T@U)
(declare-fun $generated@@419 () T@U)
(declare-fun $generated@@420 () T@U)
(declare-fun $generated@@421 () T@U)
(declare-fun $generated@@422 () T@U)
(declare-fun $generated@@423 () T@U)
(declare-fun $generated@@424 () T@U)
(declare-fun $generated@@425 () T@U)
(declare-fun $generated@@426 () T@U)
(declare-fun $generated@@427 () T@U)
(declare-fun $generated@@428 () T@U)
(declare-fun $generated@@429 () T@U)
(declare-fun $generated@@430 () T@U)
(declare-fun $generated@@431 () T@U)
(declare-fun $generated@@432 () T@U)
(declare-fun $generated@@433 () T@U)
(declare-fun $generated@@434 () T@U)
(declare-fun $generated@@435 () T@U)
(declare-fun $generated@@436 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@417) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@410) $generated@@191)) (= (type $generated@@412) $generated@@191)) (= (type $generated@@413) $generated@@191)) (= (type $generated@@428) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@418) $generated@@191)) (= (type $generated@@419) $generated@@191)) (= (type $generated@@427) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@421) $generated@@191)) (= (type $generated@@422) $generated@@191)) (= (type $generated@@426) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@424) $generated@@191)) (= (type $generated@@425) $generated@@191)) (= (type $generated@@415) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@420) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@423) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@429) $generated@@191)) (= (type $generated@@430) $generated@@191)) (= (type $generated@@431) $generated@@191)) (= (type $generated@@432) $generated@@191)) (= (type $generated@@433) $generated@@191)) (= (type $generated@@434) $generated@@191)) (= (type $generated@@435) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@436) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@437 true))
(let (($generated@@438  (=> (and (and (and ($generated@@190 $generated@@410 $generated@@411) ($generated@@195 $generated@@412 $generated@@411)) ($generated@@199 $generated@@413 $generated@@411)) (and (and ($generated@@414 $generated@@415) ($generated@@416 $generated@@415)) (and (= $generated@@417 $generated@@415) (= $generated@@410 ($generated@@312 $generated@@418))))) (=> (and (and (and (and (= $generated@@419 ($generated@@312 ($generated@@312 $generated@@418))) (= ($generated@@298 $generated@@418) $generated@@418)) (and ($generated@@414 $generated@@420) ($generated@@416 $generated@@420))) (and (and (= $generated@@415 $generated@@420) (= $generated@@412 ($generated@@312 $generated@@421))) (and (= $generated@@422 ($generated@@312 ($generated@@312 $generated@@421))) (= ($generated@@298 $generated@@421) $generated@@421)))) (and (and (and ($generated@@414 $generated@@423) ($generated@@416 $generated@@423)) (= $generated@@420 $generated@@423)) (and (and (= $generated@@413 ($generated@@312 $generated@@424)) (= $generated@@425 ($generated@@312 ($generated@@312 $generated@@424)))) (and (= ($generated@@298 $generated@@424) $generated@@424) (= (ControlFlow 0 16) (- 0 15)))))) (not (= $generated@@411 5))))))
(let (($generated@@439  (=> (and ($generated@@192 $generated@@411) (=> ($generated@@190 $generated@@410 $generated@@411) (and ($generated@@196 $generated@@411) (=> ($generated@@195 $generated@@412 $generated@@411) ($generated@@200 $generated@@411))))) (and (=> (= (ControlFlow 0 18) 16) $generated@@438) (=> (= (ControlFlow 0 18) 17) $generated@@437)))))
(let (($generated@@440  (=> (and (not (and ($generated@@190 $generated@@410 $generated@@411) ($generated@@195 $generated@@412 $generated@@411))) (= (ControlFlow 0 20) 18)) $generated@@439)))
(let (($generated@@441  (=> (and (and (and ($generated@@190 $generated@@410 $generated@@411) ($generated@@195 $generated@@412 $generated@@411)) ($generated@@69 ($generated@@8 $generated@@411) $generated@@46 $generated@@417)) (and ($generated@@200 $generated@@411) (= (ControlFlow 0 19) 18))) $generated@@439)))
(let (($generated@@442  (=> (not ($generated@@190 $generated@@410 $generated@@411)) (and (=> (= (ControlFlow 0 22) 19) $generated@@441) (=> (= (ControlFlow 0 22) 20) $generated@@440)))))
(let (($generated@@443  (=> ($generated@@190 $generated@@410 $generated@@411) (=> (and ($generated@@69 ($generated@@8 $generated@@411) $generated@@46 $generated@@417) ($generated@@196 $generated@@411)) (and (=> (= (ControlFlow 0 21) 19) $generated@@441) (=> (= (ControlFlow 0 21) 20) $generated@@440))))))
(let (($generated@@444  (=> ($generated@@0 ($generated@@185 ($generated@@11 true))) (=> (and ($generated@@69 ($generated@@8 $generated@@411) $generated@@46 $generated@@417) ($generated@@192 $generated@@411)) (and (=> (= (ControlFlow 0 23) 21) $generated@@443) (=> (= (ControlFlow 0 23) 22) $generated@@442))))))
(let (($generated@@445  (=> (and ($generated@@192 $generated@@411) ($generated@@196 $generated@@411)) (=> (and (and ($generated@@200 $generated@@411) ($generated@@192 $generated@@411)) (and ($generated@@196 $generated@@411) ($generated@@200 $generated@@411))) (=> (and (and (and (and (and (and (and (not ($generated@@190 $generated@@410 $generated@@411)) (not ($generated@@195 $generated@@412 $generated@@411))) (not ($generated@@199 $generated@@413 $generated@@411))) (not ($generated@@190 $generated@@410 $generated@@411))) (not ($generated@@195 $generated@@412 $generated@@411))) (not ($generated@@199 $generated@@413 $generated@@411))) (not ($generated@@0 ($generated@@185 ($generated@@11 true))))) (= (ControlFlow 0 14) (- 0 13))) false)))))
(let (($generated@@446  (=> (and (and ($generated@@69 ($generated@@8 $generated@@411) $generated@@46 $generated@@417) ($generated@@200 $generated@@411)) (and ($generated@@200 $generated@@411) ($generated@@199 $generated@@413 $generated@@411))) (=> (and (and (and ($generated@@414 $generated@@426) ($generated@@416 $generated@@426)) (= $generated@@417 $generated@@426)) (and (and (= $generated@@413 ($generated@@312 $generated@@424)) (= $generated@@425 ($generated@@312 ($generated@@312 $generated@@424)))) (and (= ($generated@@298 $generated@@424) $generated@@424) (= (ControlFlow 0 12) (- 0 11))))) (= $generated@@411 ($generated@@183 5))))))
(let (($generated@@447  (=> (and (and ($generated@@69 ($generated@@8 $generated@@411) $generated@@46 $generated@@417) ($generated@@196 $generated@@411)) (and ($generated@@196 $generated@@411) ($generated@@195 $generated@@412 $generated@@411))) (=> (and (and (and ($generated@@414 $generated@@427) ($generated@@416 $generated@@427)) (= $generated@@417 $generated@@427)) (and (and (= $generated@@412 ($generated@@312 $generated@@421)) (= $generated@@422 ($generated@@312 ($generated@@312 $generated@@421)))) (and (= ($generated@@298 $generated@@421) $generated@@421) (= (ControlFlow 0 10) (- 0 9))))) (= $generated@@411 ($generated@@183 5))))))
(let (($generated@@448  (=> (and (and ($generated@@69 ($generated@@8 $generated@@411) $generated@@46 $generated@@417) ($generated@@192 $generated@@411)) (and ($generated@@192 $generated@@411) ($generated@@190 $generated@@410 $generated@@411))) (=> (and (and (and ($generated@@414 $generated@@428) ($generated@@416 $generated@@428)) (= $generated@@417 $generated@@428)) (and (and (= $generated@@410 ($generated@@312 $generated@@418)) (= $generated@@419 ($generated@@312 ($generated@@312 $generated@@418)))) (and (= ($generated@@298 $generated@@418) $generated@@418) (= (ControlFlow 0 8) (- 0 7))))) (= $generated@@411 ($generated@@183 5))))))
(let (($generated@@449  (=> ($generated@@69 ($generated@@8 $generated@@411) $generated@@46 $generated@@417) (=> (and (and ($generated@@200 $generated@@411) ($generated@@200 $generated@@411)) (and ($generated@@199 $generated@@413 $generated@@411) (= (ControlFlow 0 6) (- 0 5)))) (= $generated@@411 ($generated@@183 5))))))
(let (($generated@@450  (=> ($generated@@69 ($generated@@8 $generated@@411) $generated@@46 $generated@@417) (=> (and (and ($generated@@196 $generated@@411) ($generated@@196 $generated@@411)) (and ($generated@@195 $generated@@412 $generated@@411) (= (ControlFlow 0 4) (- 0 3)))) (= $generated@@411 ($generated@@183 5))))))
(let (($generated@@451  (=> ($generated@@69 ($generated@@8 $generated@@411) $generated@@46 $generated@@417) (=> (and (and ($generated@@192 $generated@@411) ($generated@@192 $generated@@411)) (and ($generated@@190 $generated@@410 $generated@@411) (= (ControlFlow 0 2) (- 0 1)))) (= $generated@@411 ($generated@@183 5))))))
(let (($generated@@452  (=> (= ($generated@@298 $generated@@429) $generated@@429) (=> (and (and (= ($generated@@298 $generated@@430) $generated@@430) (= ($generated@@298 $generated@@410) $generated@@410)) (and (= ($generated@@298 $generated@@419) $generated@@419) (= ($generated@@298 $generated@@431) $generated@@431))) (=> (and (and (and (= ($generated@@298 $generated@@432) $generated@@432) (= ($generated@@298 $generated@@412) $generated@@412)) (and (= ($generated@@298 $generated@@422) $generated@@422) (= ($generated@@298 $generated@@433) $generated@@433))) (and (and (= ($generated@@298 $generated@@434) $generated@@434) (= ($generated@@298 $generated@@413) $generated@@413)) (and (= ($generated@@298 $generated@@425) $generated@@425) (= $generated@@435 ($generated@@128 $generated@@436 $generated@@417 $generated@@60 false))))) (and (and (and (and (and (and (and (=> (= (ControlFlow 0 24) 2) $generated@@451) (=> (= (ControlFlow 0 24) 4) $generated@@450)) (=> (= (ControlFlow 0 24) 6) $generated@@449)) (=> (= (ControlFlow 0 24) 8) $generated@@448)) (=> (= (ControlFlow 0 24) 10) $generated@@447)) (=> (= (ControlFlow 0 24) 12) $generated@@446)) (=> (= (ControlFlow 0 24) 23) $generated@@444)) (=> (= (ControlFlow 0 24) 14) $generated@@445)))))))
(let (($generated@@453  (=> (and (and ($generated@@414 $generated@@417) ($generated@@416 $generated@@417)) (and (= 1 $generated@@189) (= (ControlFlow 0 25) 24))) $generated@@452)))
$generated@@453))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 16) (- 15))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (Int) Int)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@349 () Int)
(declare-fun $generated@@350 (T@U T@U) Bool)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@134) 14) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= (type ($generated@@132 $generated@@137 $generated@@138 $generated@@139)) $generated@@135)
 :pattern ( ($generated@@132 $generated@@137 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (= (type ($generated@@133 $generated@@140)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@140))
))) (= (type $generated@@136) $generated@@134)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@141) $generated@@64) (= (type $generated@@142) $generated@@134)) (= (type $generated@@143) $generated@@135)) (= ($generated@@132 $generated@@141 $generated@@142 $generated@@143) ($generated@@132 $generated@@141 $generated@@136 $generated@@143)))
 :pattern ( ($generated@@132 $generated@@141 ($generated@@133 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 16) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@135)
 :pattern ( ($generated@@155 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@135)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@148) (= (type $generated@@160) $generated@@148)) true) (= ($generated@@154 $generated@@159 $generated@@160)  (and (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160)))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@134)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@64) (= (type $generated@@164) $generated@@134)) (= (type $generated@@165) $generated@@135)) (= ($generated@@132 $generated@@163 ($generated@@161 $generated@@164) $generated@@165) ($generated@@132 $generated@@163 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@132 $generated@@163 ($generated@@161 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@64)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@170) $generated@@64)) ($generated@@144 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@144 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 17)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@77 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@67 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@77) (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@222) ($generated@@66 $generated@@4))) (= (type $generated@@224) $generated@@77)) (= (type $generated@@225) ($generated@@66 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@227 $generated@@229 $generated@@230)) $generated@@148)
 :pattern ( ($generated@@227 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@64) (= (type $generated@@232) $generated@@64)) (= (type $generated@@233) $generated@@135)) (= (type $generated@@234) $generated@@135)) (= ($generated@@144 ($generated@@227 $generated@@233 $generated@@234) ($generated@@147 $generated@@231 $generated@@232))  (and ($generated@@228 $generated@@233 $generated@@231) ($generated@@228 $generated@@234 $generated@@232))))
 :pattern ( ($generated@@144 ($generated@@227 $generated@@233 $generated@@234) ($generated@@147 $generated@@231 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@148) (= (type $generated@@236) $generated@@148)) (= ($generated@@154 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@154 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@64)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@240) $generated@@64)) (= ($generated@@144 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@135) ($generated@@0 ($generated@@81 $generated@@239 $generated@@241))) ($generated@@228 $generated@@241 $generated@@240))
 :pattern ( ($generated@@81 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@144 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@64)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@245) $generated@@64)) (= ($generated@@144 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@135) ($generated@@0 ($generated@@81 $generated@@244 $generated@@246))) ($generated@@228 $generated@@246 $generated@@245))
 :pattern ( ($generated@@81 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@144 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@247 $generated@@248) $generated@@248)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@135)) (= (type $generated@@258) $generated@@135)) (= (type $generated@@259) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@253 $generated@@259)) (= ($generated@@74 ($generated@@227 $generated@@257 $generated@@258) ($generated@@147 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@74 ($generated@@227 $generated@@257 $generated@@258) ($generated@@147 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@148) (= ($generated@@146 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@148) ($generated@@146 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@135) (= (type $generated@@265) $generated@@135)) (= $generated@@263 ($generated@@227 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@146 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 18)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@135)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@64) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@74 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@76 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@79 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@76 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@81 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 20)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@79 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@76 $generated@@322 $generated@@2)) (= ($generated@@167 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@81 $generated@@321 $generated@@323))) (<= ($generated ($generated@@81 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@167 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@285 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@289 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@289 (type $generated@@331))))
(let (($generated@@333 ($generated@@288 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@287 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@286 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@307 (type $generated@@335))))
(let (($generated@@337 ($generated@@306 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@305 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@304 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@303 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@307 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@347) $generated@@64)) (= ($generated@@144 $generated@@346 ($generated@@166 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@346 $generated@@348)))) ($generated@@228 $generated@@348 $generated@@347))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@144 $generated@@346 ($generated@@166 $generated@@347)))
)))
(assert  (=> (<= 0 $generated@@349) (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (and (= (type $generated@@351) $generated@@64) (= (type $generated@@352) $generated@@134)) (= (type $generated@@353) $generated@@135)) (or ($generated@@350 $generated@@351 $generated@@353) (and (not (= 0 $generated@@349)) ($generated@@228 $generated@@353 $generated@@351)))) (= ($generated@@132 $generated@@351 ($generated@@161 $generated@@352) $generated@@353) $generated@@353))
 :pattern ( ($generated@@132 $generated@@351 ($generated@@161 $generated@@352) $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@237 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@135) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@254 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@237 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@242 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@135) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@254 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@242 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@81 ($generated@@280 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@81 ($generated@@280 $generated@@363) $generated@@362)))
)))
(assert  (and (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@364 $generated@@367)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@364 $generated@@367))
)) (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@365 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@365 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@289 (type $generated@@370))))
(let (($generated@@372 ($generated@@288 (type $generated@@370))))
(= (type ($generated@@366 $generated@@370)) ($generated@@76 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@287 $generated@@135 $generated@@135)) (= (type $generated@@374) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@373) ($generated@@155 ($generated@@365 $generated@@148 $generated@@374)))) (= ($generated@@81 ($generated@@366 $generated@@373) ($generated@@155 ($generated@@365 $generated@@148 $generated@@374))) ($generated@@156 ($generated@@365 $generated@@148 $generated@@374))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@307 (type $generated@@378))))
(let (($generated@@380 ($generated@@306 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@305 $generated@@135 $generated@@135)) (= (type $generated@@382) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@381) ($generated@@155 ($generated@@365 $generated@@148 $generated@@382)))) (= ($generated@@81 ($generated@@376 $generated@@381) ($generated@@155 ($generated@@365 $generated@@148 $generated@@382))) ($generated@@156 ($generated@@365 $generated@@148 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@288 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@287 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@306 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@305 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@64)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@287 $generated@@135 $generated@@135)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@396) $generated@@400))) (and ($generated@@254 ($generated@@81 ($generated@@366 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@254 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@305 $generated@@135 $generated@@135)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@404) $generated@@408))) (and ($generated@@254 ($generated@@81 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@254 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@76 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@307 (type $generated@@411))))
(let (($generated@@413 ($generated@@306 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@305 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@304 $generated@@413 $generated@@412)) (= ($generated@@303 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@303 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@307 (type $generated@@414))))
(let (($generated@@416 ($generated@@306 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@305 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@304 $generated@@416 $generated@@415)) (= ($generated@@339 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@339 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@307 (type $generated@@417))))
(let (($generated@@419 ($generated@@306 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@305 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@304 $generated@@419 $generated@@418)) (= ($generated@@375 $generated@@417) ($generated@@409 $generated@@135))))))
 :pattern ( ($generated@@375 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@289 (type $generated@@420))))
(let (($generated@@422 ($generated@@288 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@287 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@286 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@135) (= (type $generated@@424) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@420) ($generated@@274 ($generated@@227 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@364 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@307 (type $generated@@425))))
(let (($generated@@427 ($generated@@306 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@305 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@304 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@135) (= (type $generated@@429) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@425) ($generated@@274 ($generated@@227 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@375 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@135) ($generated@@228 $generated@@430 $generated@@46)) (and (= ($generated@@274 ($generated@@365 $generated@@2 $generated@@430)) $generated@@430) ($generated@@144 ($generated@@365 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@228 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@135) ($generated@@228 $generated@@431 $generated@@47)) (and (= ($generated@@274 ($generated@@365 $generated@@3 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@365 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@228 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@135) ($generated@@228 $generated@@432 $generated@@44)) (and (= ($generated@@274 ($generated@@365 $generated@@4 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@365 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@228 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 21))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@135) ($generated@@228 $generated@@434 $generated@@45)) (and (= ($generated@@274 ($generated@@365 $generated@@433 $generated@@434)) $generated@@434) ($generated@@144 ($generated@@365 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@228 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@64) (= ($generated@@228 ($generated@@274 $generated@@435) $generated@@436) ($generated@@144 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@228 ($generated@@274 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@79 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@76 $generated@@438 $generated@@2)) (<= 0 ($generated@@279 $generated@@437))))
 :pattern ( ($generated@@279 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@269 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@268 $generated@@440)) (<= 0 ($generated@@267 $generated@@439))))
 :pattern ( ($generated@@267 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@393 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@393 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@393 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@72 ($generated@@393 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@135) (= (type $generated@@462) $generated@@135)) (= ($generated@@260 ($generated@@227 $generated@@461 $generated@@462)) $generated@@61))
 :pattern ( ($generated@@227 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@147 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@147 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@147 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@147 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@135) (= (type $generated@@472) $generated@@135)) (= ($generated@@155 ($generated@@227 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@227 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@135) (= (type $generated@@474) $generated@@135)) (= ($generated@@156 ($generated@@227 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@227 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@269 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@268 $generated@@135)) (= (type $generated@@482) $generated@@64)) (= (type $generated@@483) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@267 $generated@@481))) ($generated@@254 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@74 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@75 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@75 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@237 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@237 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@237 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@237 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@242 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@242 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@242 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@242 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@166 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@166 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@166 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@365 $generated@@504 ($generated@@274 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@274 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@287 $generated@@135 $generated@@135)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) (= ($generated@@144 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@505) $generated@@508))) (and ($generated@@228 ($generated@@81 ($generated@@366 $generated@@505) $generated@@508) $generated@@507) ($generated@@228 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@505) $generated@@508))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@144 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@305 $generated@@135 $generated@@135)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@144 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@509) $generated@@512))) (and ($generated@@228 ($generated@@81 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@228 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@144 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)))
)))
(assert  (=> (<= 0 $generated@@349) (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@134)) (= (type $generated@@515) $generated@@135)) (or ($generated@@350 $generated@@513 ($generated@@249 $generated@@515)) (and (not (= 0 $generated@@349)) ($generated@@228 $generated@@515 $generated@@513)))) (= ($generated@@132 $generated@@513 ($generated@@161 $generated@@514) ($generated@@249 $generated@@515)) ($generated@@249 $generated@@515)))
 :weight 3
 :pattern ( ($generated@@132 $generated@@513 ($generated@@161 $generated@@514) ($generated@@249 $generated@@515)))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@135) (= (type $generated@@519) $generated@@135)) (< ($generated@@516 $generated@@518) ($generated@@517 ($generated@@227 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@227 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@135) (= (type $generated@@521) $generated@@135)) (< ($generated@@516 $generated@@521) ($generated@@517 ($generated@@227 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@227 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@135) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) ($generated@@228 $generated@@522 ($generated@@393 $generated@@523 $generated@@524))) (and (= ($generated@@274 ($generated@@365 ($generated@@287 $generated@@135 $generated@@135) $generated@@522)) $generated@@522) ($generated@@144 ($generated@@365 ($generated@@287 $generated@@135 $generated@@135) $generated@@522) ($generated@@393 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@228 $generated@@522 ($generated@@393 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@135) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) ($generated@@228 $generated@@525 ($generated@@401 $generated@@526 $generated@@527))) (and (= ($generated@@274 ($generated@@365 ($generated@@305 $generated@@135 $generated@@135) $generated@@525)) $generated@@525) ($generated@@144 ($generated@@365 ($generated@@305 $generated@@135 $generated@@135) $generated@@525) ($generated@@401 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@228 $generated@@525 ($generated@@401 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@135)) ($generated@@228 $generated@@530 ($generated@@147 $generated@@528 $generated@@529))) (and (= ($generated@@274 ($generated@@365 $generated@@148 $generated@@530)) $generated@@530) ($generated@@144 ($generated@@365 $generated@@148 $generated@@530) ($generated@@147 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@228 $generated@@530 ($generated@@147 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@81 ($generated@@409 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@81 ($generated@@409 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@69)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@535 $generated@@536)) $generated@@62) (= ($generated@@533 ($generated@@147 $generated@@535 $generated@@536)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@148) (= ($generated@@516 ($generated@@274 $generated@@537)) ($generated@@517 $generated@@537)))
 :pattern ( ($generated@@516 ($generated@@274 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@135) ($generated@@228 $generated@@538 ($generated@@75 0))) (and (= ($generated@@274 ($generated@@365 $generated@@2 $generated@@538)) $generated@@538) ($generated@@144 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@538) ($generated@@75 0))))
 :pattern ( ($generated@@228 $generated@@538 ($generated@@75 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@135) (= (type $generated@@540) $generated@@64)) ($generated@@228 $generated@@539 ($generated@@237 $generated@@540))) (and (= ($generated@@274 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@539)) $generated@@539) ($generated@@144 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@539) ($generated@@237 $generated@@540))))
 :pattern ( ($generated@@228 $generated@@539 ($generated@@237 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@135) (= (type $generated@@542) $generated@@64)) ($generated@@228 $generated@@541 ($generated@@242 $generated@@542))) (and (= ($generated@@274 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@541)) $generated@@541) ($generated@@144 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@541) ($generated@@242 $generated@@542))))
 :pattern ( ($generated@@228 $generated@@541 ($generated@@242 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@135) (= (type $generated@@544) $generated@@64)) ($generated@@228 $generated@@543 ($generated@@166 $generated@@544))) (and (= ($generated@@274 ($generated@@365 ($generated@@76 $generated@@135 $generated@@2) $generated@@543)) $generated@@543) ($generated@@144 ($generated@@365 ($generated@@76 $generated@@135 $generated@@2) $generated@@543) ($generated@@166 $generated@@544))))
 :pattern ( ($generated@@228 $generated@@543 ($generated@@166 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@135) (= (type $generated@@546) $generated@@64)) ($generated@@228 $generated@@545 ($generated@@475 $generated@@546))) (and (= ($generated@@274 ($generated@@365 ($generated@@268 $generated@@135) $generated@@545)) $generated@@545) ($generated@@144 ($generated@@365 ($generated@@268 $generated@@135) $generated@@545) ($generated@@475 $generated@@546))))
 :pattern ( ($generated@@228 $generated@@545 ($generated@@475 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@547 ($generated@@166 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@547 $generated@@550)))) ($generated@@254 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@81 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@166 $generated@@548) $generated@@549))
)))
(assert  (=> (<= 0 $generated@@349) (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@64) (= (type $generated@@552) $generated@@134)) (= (type $generated@@553) $generated@@135)) (or ($generated@@350 $generated@@551 $generated@@553) (and (not (= 0 $generated@@349)) ($generated@@228 $generated@@553 $generated@@551)))) ($generated@@228 ($generated@@132 $generated@@551 $generated@@552 $generated@@553) $generated@@551))
 :pattern ( ($generated@@132 $generated@@551 $generated@@552 $generated@@553))
))))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@148) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@556) (and ($generated@@146 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@147 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@147 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@254 ($generated@@155 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@254 ($generated@@155 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@254 ($generated@@156 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@254 ($generated@@156 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@135) (= (type $generated@@563) $generated@@135)) (= ($generated@@227 ($generated@@249 $generated@@562) ($generated@@249 $generated@@563)) ($generated@@249 ($generated@@227 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@227 ($generated@@249 $generated@@562) ($generated@@249 $generated@@563)))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@247 $generated@@564))) ($generated@@249 ($generated@@274 ($generated@@8 $generated@@564))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@247 $generated@@564))))
)))
(assert (forall (($generated@@565 T@U) ) (! (= ($generated@@274 ($generated@@249 $generated@@565)) ($generated@@249 ($generated@@274 $generated@@565)))
 :pattern ( ($generated@@274 ($generated@@249 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@269 (type $generated@@566))))
 (=> (and (= (type $generated@@566) ($generated@@268 $generated@@567)) (= ($generated@@267 $generated@@566) 0)) (= $generated@@566 ($generated@@266 $generated@@567))))
 :pattern ( ($generated@@267 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@569)))
 (=> (and (and (= (type $generated@@568) ($generated@@76 $generated@@571 $generated@@2)) (= (type $generated@@570) $generated@@2)) (<= 0 ($generated $generated@@570))) (= ($generated@@279 ($generated@@82 $generated@@568 $generated@@569 $generated@@570)) (+ (- ($generated@@279 $generated@@568) ($generated ($generated@@81 $generated@@568 $generated@@569))) ($generated $generated@@570)))))
 :pattern ( ($generated@@279 ($generated@@82 $generated@@568 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@2)) ($generated@@74 $generated@@573 $generated@@46 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@46 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@3)) ($generated@@74 $generated@@575 $generated@@47 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@47 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@4)) ($generated@@74 $generated@@577 $generated@@44 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@44 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@433)) ($generated@@74 $generated@@579 $generated@@45 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@45 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@135)) ($generated@@74 $generated@@581 $generated@@48 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@48 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@268 $generated@@135)) (= (type $generated@@583) $generated@@64)) (= ($generated@@144 $generated@@582 ($generated@@475 $generated@@583)) (forall (($generated@@584 Int) ) (!  (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@267 $generated@@582))) ($generated@@228 ($generated@@476 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@476 $generated@@582 $generated@@584))
))))
 :pattern ( ($generated@@144 $generated@@582 ($generated@@475 $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 Int) ) (!  (=> (= (type $generated@@586) ($generated@@268 $generated@@135)) (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@267 $generated@@586))) (< ($generated@@517 ($generated@@365 $generated@@148 ($generated@@476 $generated@@586 $generated@@587))) ($generated@@585 $generated@@586))))
 :pattern ( ($generated@@517 ($generated@@365 $generated@@148 ($generated@@476 $generated@@586 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@287 $generated@@135 $generated@@135)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) ($generated@@144 $generated@@588 ($generated@@393 $generated@@589 $generated@@590))) (and (and ($generated@@144 ($generated@@285 $generated@@588) ($generated@@237 $generated@@589)) ($generated@@144 ($generated@@328 $generated@@588) ($generated@@237 $generated@@590))) ($generated@@144 ($generated@@364 $generated@@588) ($generated@@237 ($generated@@147 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@144 $generated@@588 ($generated@@393 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@305 $generated@@135 $generated@@135)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) ($generated@@144 $generated@@591 ($generated@@401 $generated@@592 $generated@@593))) (and (and ($generated@@144 ($generated@@303 $generated@@591) ($generated@@242 $generated@@592)) ($generated@@144 ($generated@@339 $generated@@591) ($generated@@242 $generated@@593))) ($generated@@144 ($generated@@375 $generated@@591) ($generated@@242 ($generated@@147 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@144 $generated@@591 ($generated@@401 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@2) ($generated@@144 $generated@@594 $generated@@46))
 :pattern ( ($generated@@144 $generated@@594 $generated@@46))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@3) ($generated@@144 $generated@@595 $generated@@47))
 :pattern ( ($generated@@144 $generated@@595 $generated@@47))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@4) ($generated@@144 $generated@@596 $generated@@44))
 :pattern ( ($generated@@144 $generated@@596 $generated@@44))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@433) ($generated@@144 $generated@@597 $generated@@45))
 :pattern ( ($generated@@144 $generated@@597 $generated@@45))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@135) ($generated@@144 $generated@@598 $generated@@48))
 :pattern ( ($generated@@144 $generated@@598 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 (T@U) Bool)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@599) $generated@@134) (= (type $generated@@600) $generated@@134)) (= (type $generated@@601) $generated@@134)) (= (type $generated@@602) $generated@@134)) (= (type $generated@@603) $generated@@134)) (= (type $generated@@604) $generated@@134)) (= (type $generated@@605) $generated@@134)) (= (type $generated@@606) $generated@@134)) (= (type $generated@@607) $generated@@134)) (= (type $generated@@608) $generated@@134)) (= (type $generated@@609) $generated@@134)) (= (type $generated@@610) $generated@@134)) (= (type $generated@@611) $generated@@134)) (= (type $generated@@612) $generated@@134)) (= (type $generated@@613) $generated@@134)) (= (type $generated@@614) $generated@@134)) (= (type $generated@@615) $generated@@134)) (= (type $generated@@616) $generated@@134)) (= (type $generated@@617) $generated@@134)) (= (type $generated@@618) $generated@@134)) (= (type $generated@@619) $generated@@134)) (= (type $generated@@620) $generated@@134)) (= (type $generated@@621) $generated@@134)) (= (type $generated@@622) $generated@@134)) (= (type $generated@@623) $generated@@134)) (= (type $generated@@624) $generated@@134)) (= (type $generated@@625) $generated@@134)) (= (type $generated@@626) $generated@@134)) (= (type $generated@@627) ($generated@@173 $generated@@77 $generated@@4))) (= (type $generated@@628) $generated@@77)) (= (type $generated@@629) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@630) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@632) $generated@@134)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@634  (=> (= ($generated@@133 $generated@@599) $generated@@599) (=> (and (and (and (= ($generated@@133 $generated@@600) $generated@@600) (= ($generated@@133 $generated@@601) $generated@@601)) (and (= ($generated@@133 $generated@@602) $generated@@602) (= ($generated@@133 $generated@@603) $generated@@603))) (and (and (= ($generated@@133 $generated@@604) $generated@@604) (= ($generated@@133 $generated@@605) $generated@@605)) (and (= ($generated@@133 $generated@@606) $generated@@606) (= ($generated@@133 $generated@@607) $generated@@607)))) (=> (and (and (and (and (and (= ($generated@@133 $generated@@608) $generated@@608) (= ($generated@@133 $generated@@609) $generated@@609)) (and (= ($generated@@133 $generated@@610) $generated@@610) (= ($generated@@133 $generated@@611) $generated@@611))) (and (and (= ($generated@@133 $generated@@612) $generated@@612) (= ($generated@@133 $generated@@613) $generated@@613)) (and (= ($generated@@133 $generated@@614) $generated@@614) (= ($generated@@133 $generated@@615) $generated@@615)))) (and (and (and (= ($generated@@133 $generated@@616) $generated@@616) (= ($generated@@133 $generated@@617) $generated@@617)) (and (= ($generated@@133 $generated@@618) $generated@@618) (= ($generated@@133 $generated@@619) $generated@@619))) (and (and (= ($generated@@133 $generated@@620) $generated@@620) (= ($generated@@133 $generated@@621) $generated@@621)) (and (= ($generated@@133 $generated@@622) $generated@@622) (= ($generated@@133 $generated@@623) $generated@@623))))) (and (and (and (and (= ($generated@@133 $generated@@624) $generated@@624) (= ($generated@@133 $generated@@625) $generated@@625)) (and (= ($generated@@133 $generated@@626) $generated@@626) (= $generated@@627 ($generated@@172 $generated@@628 $generated@@629 $generated@@60 false)))) (and (and ($generated@@253 $generated@@630) ($generated@@631 $generated@@630)) (= $generated@@629 $generated@@630))) (and (and (and (= $generated@@621 ($generated@@161 $generated@@632)) (= $generated@@622 ($generated@@161 ($generated@@161 $generated@@632)))) (and (= ($generated@@133 $generated@@632) $generated@@632) (= $generated@@633 ($generated@@247 1)))) (and (and ($generated@@74 ($generated@@8 $generated@@633) $generated@@46 $generated@@630) ($generated@@350 $generated@@46 ($generated@@274 ($generated@@8 ($generated@@247 1))))) (and ($generated@@350 $generated@@46 ($generated@@274 ($generated@@8 ($generated@@247 1)))) (= (ControlFlow 0 2) (- 0 1))))))) (= ($generated ($generated@@365 $generated@@2 ($generated@@132 $generated@@46 $generated@@622 ($generated@@274 ($generated@@8 ($generated@@247 1)))))) ($generated@@247 1)))))))
(let (($generated@@635  (=> (and (and ($generated@@253 $generated@@629) ($generated@@631 $generated@@629)) (and (= 1 $generated@@349) (= (ControlFlow 0 3) 2))) $generated@@634)))
$generated@@635)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (Int) Int)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@349 () Int)
(declare-fun $generated@@350 (T@U T@U) Bool)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@134) 14) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= (type ($generated@@132 $generated@@137 $generated@@138 $generated@@139)) $generated@@135)
 :pattern ( ($generated@@132 $generated@@137 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@U) ) (! (= (type ($generated@@133 $generated@@140)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@140))
))) (= (type $generated@@136) $generated@@134)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@141) $generated@@64) (= (type $generated@@142) $generated@@134)) (= (type $generated@@143) $generated@@135)) (= ($generated@@132 $generated@@141 $generated@@142 $generated@@143) ($generated@@132 $generated@@141 $generated@@136 $generated@@143)))
 :pattern ( ($generated@@132 $generated@@141 ($generated@@133 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@75 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 16) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@64)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@64) (= (type $generated@@152) $generated@@64)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@135)
 :pattern ( ($generated@@155 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@135)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@148) (= (type $generated@@160) $generated@@148)) true) (= ($generated@@154 $generated@@159 $generated@@160)  (and (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160)))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@161 $generated@@162)) $generated@@134)
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@64) (= (type $generated@@164) $generated@@134)) (= (type $generated@@165) $generated@@135)) (= ($generated@@132 $generated@@163 ($generated@@161 $generated@@164) $generated@@165) ($generated@@132 $generated@@163 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@132 $generated@@163 ($generated@@161 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@64)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@170) $generated@@64)) ($generated@@144 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@144 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 17)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@77 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@67 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@77) (= (type $generated@@221) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@222) ($generated@@66 $generated@@4))) (= (type $generated@@224) $generated@@77)) (= (type $generated@@225) ($generated@@66 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= (type ($generated@@227 $generated@@229 $generated@@230)) $generated@@148)
 :pattern ( ($generated@@227 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (= (type $generated@@231) $generated@@64) (= (type $generated@@232) $generated@@64)) (= (type $generated@@233) $generated@@135)) (= (type $generated@@234) $generated@@135)) (= ($generated@@144 ($generated@@227 $generated@@233 $generated@@234) ($generated@@147 $generated@@231 $generated@@232))  (and ($generated@@228 $generated@@233 $generated@@231) ($generated@@228 $generated@@234 $generated@@232))))
 :pattern ( ($generated@@144 ($generated@@227 $generated@@233 $generated@@234) ($generated@@147 $generated@@231 $generated@@232)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@148) (= (type $generated@@236) $generated@@148)) (= ($generated@@154 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@154 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@64)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@240) $generated@@64)) (= ($generated@@144 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@135) ($generated@@0 ($generated@@81 $generated@@239 $generated@@241))) ($generated@@228 $generated@@241 $generated@@240))
 :pattern ( ($generated@@81 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@144 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@64)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@245) $generated@@64)) (= ($generated@@144 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@135) ($generated@@0 ($generated@@81 $generated@@244 $generated@@246))) ($generated@@228 $generated@@246 $generated@@245))
 :pattern ( ($generated@@81 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@144 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@247 $generated@@248) $generated@@248)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@135)) (= (type $generated@@258) $generated@@135)) (= (type $generated@@259) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@253 $generated@@259)) (= ($generated@@74 ($generated@@227 $generated@@257 $generated@@258) ($generated@@147 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@74 ($generated@@227 $generated@@257 $generated@@258) ($generated@@147 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@148) (= ($generated@@146 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@148) ($generated@@146 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@135) (= (type $generated@@265) $generated@@135)) (= $generated@@263 ($generated@@227 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@146 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 18)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@135)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@64) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@74 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@76 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@79 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@76 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@81 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 20)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@79 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@76 $generated@@322 $generated@@2)) (= ($generated@@167 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@81 $generated@@321 $generated@@323))) (<= ($generated ($generated@@81 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@167 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@285 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@289 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@289 (type $generated@@331))))
(let (($generated@@333 ($generated@@288 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@287 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@286 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@307 (type $generated@@335))))
(let (($generated@@337 ($generated@@306 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@305 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@304 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@303 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@307 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@347) $generated@@64)) (= ($generated@@144 $generated@@346 ($generated@@166 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@346 $generated@@348)))) ($generated@@228 $generated@@348 $generated@@347))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@144 $generated@@346 ($generated@@166 $generated@@347)))
)))
(assert  (=> (<= 0 $generated@@349) (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (and (= (type $generated@@351) $generated@@64) (= (type $generated@@352) $generated@@134)) (= (type $generated@@353) $generated@@135)) (or ($generated@@350 $generated@@351 $generated@@353) (and (not (= 0 $generated@@349)) ($generated@@228 $generated@@353 $generated@@351)))) (= ($generated@@132 $generated@@351 ($generated@@161 $generated@@352) $generated@@353) $generated@@353))
 :pattern ( ($generated@@132 $generated@@351 ($generated@@161 $generated@@352) $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@237 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@135) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@254 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@237 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@242 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@135) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@254 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@242 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@81 ($generated@@280 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@81 ($generated@@280 $generated@@363) $generated@@362)))
)))
(assert  (and (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@364 $generated@@367)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@364 $generated@@367))
)) (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@365 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@365 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@289 (type $generated@@370))))
(let (($generated@@372 ($generated@@288 (type $generated@@370))))
(= (type ($generated@@366 $generated@@370)) ($generated@@76 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@287 $generated@@135 $generated@@135)) (= (type $generated@@374) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@373) ($generated@@155 ($generated@@365 $generated@@148 $generated@@374)))) (= ($generated@@81 ($generated@@366 $generated@@373) ($generated@@155 ($generated@@365 $generated@@148 $generated@@374))) ($generated@@156 ($generated@@365 $generated@@148 $generated@@374))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@307 (type $generated@@378))))
(let (($generated@@380 ($generated@@306 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@305 $generated@@135 $generated@@135)) (= (type $generated@@382) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@381) ($generated@@155 ($generated@@365 $generated@@148 $generated@@382)))) (= ($generated@@81 ($generated@@376 $generated@@381) ($generated@@155 ($generated@@365 $generated@@148 $generated@@382))) ($generated@@156 ($generated@@365 $generated@@148 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@288 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@287 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@306 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@305 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@64)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@287 $generated@@135 $generated@@135)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@396) $generated@@400))) (and ($generated@@254 ($generated@@81 ($generated@@366 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@254 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@305 $generated@@135 $generated@@135)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@404) $generated@@408))) (and ($generated@@254 ($generated@@81 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@254 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@76 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@307 (type $generated@@411))))
(let (($generated@@413 ($generated@@306 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@305 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@304 $generated@@413 $generated@@412)) (= ($generated@@303 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@303 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@307 (type $generated@@414))))
(let (($generated@@416 ($generated@@306 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@305 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@304 $generated@@416 $generated@@415)) (= ($generated@@339 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@339 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@307 (type $generated@@417))))
(let (($generated@@419 ($generated@@306 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@305 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@304 $generated@@419 $generated@@418)) (= ($generated@@375 $generated@@417) ($generated@@409 $generated@@135))))))
 :pattern ( ($generated@@375 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@289 (type $generated@@420))))
(let (($generated@@422 ($generated@@288 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@287 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@286 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@135) (= (type $generated@@424) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@420) ($generated@@274 ($generated@@227 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@364 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@307 (type $generated@@425))))
(let (($generated@@427 ($generated@@306 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@305 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@304 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@135) (= (type $generated@@429) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@425) ($generated@@274 ($generated@@227 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@375 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@135) ($generated@@228 $generated@@430 $generated@@46)) (and (= ($generated@@274 ($generated@@365 $generated@@2 $generated@@430)) $generated@@430) ($generated@@144 ($generated@@365 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@228 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@135) ($generated@@228 $generated@@431 $generated@@47)) (and (= ($generated@@274 ($generated@@365 $generated@@3 $generated@@431)) $generated@@431) ($generated@@144 ($generated@@365 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@228 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@135) ($generated@@228 $generated@@432 $generated@@44)) (and (= ($generated@@274 ($generated@@365 $generated@@4 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@365 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@228 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 21))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@135) ($generated@@228 $generated@@434 $generated@@45)) (and (= ($generated@@274 ($generated@@365 $generated@@433 $generated@@434)) $generated@@434) ($generated@@144 ($generated@@365 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@228 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@64) (= ($generated@@228 ($generated@@274 $generated@@435) $generated@@436) ($generated@@144 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@228 ($generated@@274 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@79 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@76 $generated@@438 $generated@@2)) (<= 0 ($generated@@279 $generated@@437))))
 :pattern ( ($generated@@279 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@269 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@268 $generated@@440)) (<= 0 ($generated@@267 $generated@@439))))
 :pattern ( ($generated@@267 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@393 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@393 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@393 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@72 ($generated@@393 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@135) (= (type $generated@@462) $generated@@135)) (= ($generated@@260 ($generated@@227 $generated@@461 $generated@@462)) $generated@@61))
 :pattern ( ($generated@@227 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@147 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@147 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@147 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@147 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@135) (= (type $generated@@472) $generated@@135)) (= ($generated@@155 ($generated@@227 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@227 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@135) (= (type $generated@@474) $generated@@135)) (= ($generated@@156 ($generated@@227 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@227 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@269 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@268 $generated@@135)) (= (type $generated@@482) $generated@@64)) (= (type $generated@@483) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@267 $generated@@481))) ($generated@@254 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@74 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@75 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@75 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@237 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@237 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@237 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@237 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@242 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@242 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@242 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@242 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@166 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@166 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@166 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@365 $generated@@504 ($generated@@274 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@274 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@287 $generated@@135 $generated@@135)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) (= ($generated@@144 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@505) $generated@@508))) (and ($generated@@228 ($generated@@81 ($generated@@366 $generated@@505) $generated@@508) $generated@@507) ($generated@@228 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@505) $generated@@508))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@144 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@305 $generated@@135 $generated@@135)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@144 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@509) $generated@@512))) (and ($generated@@228 ($generated@@81 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@228 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@144 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)))
)))
(assert  (=> (<= 0 $generated@@349) (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@134)) (= (type $generated@@515) $generated@@135)) (or ($generated@@350 $generated@@513 ($generated@@249 $generated@@515)) (and (not (= 0 $generated@@349)) ($generated@@228 $generated@@515 $generated@@513)))) (= ($generated@@132 $generated@@513 ($generated@@161 $generated@@514) ($generated@@249 $generated@@515)) ($generated@@249 $generated@@515)))
 :weight 3
 :pattern ( ($generated@@132 $generated@@513 ($generated@@161 $generated@@514) ($generated@@249 $generated@@515)))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@135) (= (type $generated@@519) $generated@@135)) (< ($generated@@516 $generated@@518) ($generated@@517 ($generated@@227 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@227 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@135) (= (type $generated@@521) $generated@@135)) (< ($generated@@516 $generated@@521) ($generated@@517 ($generated@@227 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@227 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@135) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) ($generated@@228 $generated@@522 ($generated@@393 $generated@@523 $generated@@524))) (and (= ($generated@@274 ($generated@@365 ($generated@@287 $generated@@135 $generated@@135) $generated@@522)) $generated@@522) ($generated@@144 ($generated@@365 ($generated@@287 $generated@@135 $generated@@135) $generated@@522) ($generated@@393 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@228 $generated@@522 ($generated@@393 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@135) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) ($generated@@228 $generated@@525 ($generated@@401 $generated@@526 $generated@@527))) (and (= ($generated@@274 ($generated@@365 ($generated@@305 $generated@@135 $generated@@135) $generated@@525)) $generated@@525) ($generated@@144 ($generated@@365 ($generated@@305 $generated@@135 $generated@@135) $generated@@525) ($generated@@401 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@228 $generated@@525 ($generated@@401 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@135)) ($generated@@228 $generated@@530 ($generated@@147 $generated@@528 $generated@@529))) (and (= ($generated@@274 ($generated@@365 $generated@@148 $generated@@530)) $generated@@530) ($generated@@144 ($generated@@365 $generated@@148 $generated@@530) ($generated@@147 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@228 $generated@@530 ($generated@@147 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@81 ($generated@@409 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@81 ($generated@@409 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@69)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (and (= ($generated@@72 ($generated@@147 $generated@@535 $generated@@536)) $generated@@62) (= ($generated@@533 ($generated@@147 $generated@@535 $generated@@536)) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@148) (= ($generated@@516 ($generated@@274 $generated@@537)) ($generated@@517 $generated@@537)))
 :pattern ( ($generated@@516 ($generated@@274 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@135) ($generated@@228 $generated@@538 ($generated@@75 0))) (and (= ($generated@@274 ($generated@@365 $generated@@2 $generated@@538)) $generated@@538) ($generated@@144 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@538) ($generated@@75 0))))
 :pattern ( ($generated@@228 $generated@@538 ($generated@@75 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@135) (= (type $generated@@540) $generated@@64)) ($generated@@228 $generated@@539 ($generated@@237 $generated@@540))) (and (= ($generated@@274 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@539)) $generated@@539) ($generated@@144 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@539) ($generated@@237 $generated@@540))))
 :pattern ( ($generated@@228 $generated@@539 ($generated@@237 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@135) (= (type $generated@@542) $generated@@64)) ($generated@@228 $generated@@541 ($generated@@242 $generated@@542))) (and (= ($generated@@274 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@541)) $generated@@541) ($generated@@144 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@541) ($generated@@242 $generated@@542))))
 :pattern ( ($generated@@228 $generated@@541 ($generated@@242 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@135) (= (type $generated@@544) $generated@@64)) ($generated@@228 $generated@@543 ($generated@@166 $generated@@544))) (and (= ($generated@@274 ($generated@@365 ($generated@@76 $generated@@135 $generated@@2) $generated@@543)) $generated@@543) ($generated@@144 ($generated@@365 ($generated@@76 $generated@@135 $generated@@2) $generated@@543) ($generated@@166 $generated@@544))))
 :pattern ( ($generated@@228 $generated@@543 ($generated@@166 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@135) (= (type $generated@@546) $generated@@64)) ($generated@@228 $generated@@545 ($generated@@475 $generated@@546))) (and (= ($generated@@274 ($generated@@365 ($generated@@268 $generated@@135) $generated@@545)) $generated@@545) ($generated@@144 ($generated@@365 ($generated@@268 $generated@@135) $generated@@545) ($generated@@475 $generated@@546))))
 :pattern ( ($generated@@228 $generated@@545 ($generated@@475 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@547 ($generated@@166 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@547 $generated@@550)))) ($generated@@254 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@81 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@166 $generated@@548) $generated@@549))
)))
(assert  (=> (<= 0 $generated@@349) (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@64) (= (type $generated@@552) $generated@@134)) (= (type $generated@@553) $generated@@135)) (or ($generated@@350 $generated@@551 $generated@@553) (and (not (= 0 $generated@@349)) ($generated@@228 $generated@@553 $generated@@551)))) ($generated@@228 ($generated@@132 $generated@@551 $generated@@552 $generated@@553) $generated@@551))
 :pattern ( ($generated@@132 $generated@@551 $generated@@552 $generated@@553))
))))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@148) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@556) (and ($generated@@146 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@147 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@147 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@254 ($generated@@155 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@254 ($generated@@155 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@148) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@560) (and ($generated@@146 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@147 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@147 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@254 ($generated@@156 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@254 ($generated@@156 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@135) (= (type $generated@@563) $generated@@135)) (= ($generated@@227 ($generated@@249 $generated@@562) ($generated@@249 $generated@@563)) ($generated@@249 ($generated@@227 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@227 ($generated@@249 $generated@@562) ($generated@@249 $generated@@563)))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@247 $generated@@564))) ($generated@@249 ($generated@@274 ($generated@@8 $generated@@564))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@247 $generated@@564))))
)))
(assert (forall (($generated@@565 T@U) ) (! (= ($generated@@274 ($generated@@249 $generated@@565)) ($generated@@249 ($generated@@274 $generated@@565)))
 :pattern ( ($generated@@274 ($generated@@249 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@269 (type $generated@@566))))
 (=> (and (= (type $generated@@566) ($generated@@268 $generated@@567)) (= ($generated@@267 $generated@@566) 0)) (= $generated@@566 ($generated@@266 $generated@@567))))
 :pattern ( ($generated@@267 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@569)))
 (=> (and (and (= (type $generated@@568) ($generated@@76 $generated@@571 $generated@@2)) (= (type $generated@@570) $generated@@2)) (<= 0 ($generated $generated@@570))) (= ($generated@@279 ($generated@@82 $generated@@568 $generated@@569 $generated@@570)) (+ (- ($generated@@279 $generated@@568) ($generated ($generated@@81 $generated@@568 $generated@@569))) ($generated $generated@@570)))))
 :pattern ( ($generated@@279 ($generated@@82 $generated@@568 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@2)) ($generated@@74 $generated@@573 $generated@@46 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@46 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@3)) ($generated@@74 $generated@@575 $generated@@47 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@47 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@4)) ($generated@@74 $generated@@577 $generated@@44 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@44 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@433)) ($generated@@74 $generated@@579 $generated@@45 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@45 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@135)) ($generated@@74 $generated@@581 $generated@@48 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@48 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@268 $generated@@135)) (= (type $generated@@583) $generated@@64)) (= ($generated@@144 $generated@@582 ($generated@@475 $generated@@583)) (forall (($generated@@584 Int) ) (!  (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@267 $generated@@582))) ($generated@@228 ($generated@@476 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@476 $generated@@582 $generated@@584))
))))
 :pattern ( ($generated@@144 $generated@@582 ($generated@@475 $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 Int) ) (!  (=> (= (type $generated@@586) ($generated@@268 $generated@@135)) (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@267 $generated@@586))) (< ($generated@@517 ($generated@@365 $generated@@148 ($generated@@476 $generated@@586 $generated@@587))) ($generated@@585 $generated@@586))))
 :pattern ( ($generated@@517 ($generated@@365 $generated@@148 ($generated@@476 $generated@@586 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@287 $generated@@135 $generated@@135)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) ($generated@@144 $generated@@588 ($generated@@393 $generated@@589 $generated@@590))) (and (and ($generated@@144 ($generated@@285 $generated@@588) ($generated@@237 $generated@@589)) ($generated@@144 ($generated@@328 $generated@@588) ($generated@@237 $generated@@590))) ($generated@@144 ($generated@@364 $generated@@588) ($generated@@237 ($generated@@147 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@144 $generated@@588 ($generated@@393 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@305 $generated@@135 $generated@@135)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) ($generated@@144 $generated@@591 ($generated@@401 $generated@@592 $generated@@593))) (and (and ($generated@@144 ($generated@@303 $generated@@591) ($generated@@242 $generated@@592)) ($generated@@144 ($generated@@339 $generated@@591) ($generated@@242 $generated@@593))) ($generated@@144 ($generated@@375 $generated@@591) ($generated@@242 ($generated@@147 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@144 $generated@@591 ($generated@@401 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@2) ($generated@@144 $generated@@594 $generated@@46))
 :pattern ( ($generated@@144 $generated@@594 $generated@@46))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@3) ($generated@@144 $generated@@595 $generated@@47))
 :pattern ( ($generated@@144 $generated@@595 $generated@@47))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@4) ($generated@@144 $generated@@596 $generated@@44))
 :pattern ( ($generated@@144 $generated@@596 $generated@@44))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@433) ($generated@@144 $generated@@597 $generated@@45))
 :pattern ( ($generated@@144 $generated@@597 $generated@@45))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@135) ($generated@@144 $generated@@598 $generated@@48))
 :pattern ( ($generated@@144 $generated@@598 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@599) $generated@@134) (= (type $generated@@600) $generated@@134)) (= (type $generated@@601) $generated@@134)) (= (type $generated@@602) $generated@@134)) (= (type $generated@@603) $generated@@134)) (= (type $generated@@604) $generated@@134)) (= (type $generated@@605) $generated@@134)) (= (type $generated@@606) $generated@@134)) (= (type $generated@@607) $generated@@134)) (= (type $generated@@608) $generated@@134)) (= (type $generated@@609) $generated@@134)) (= (type $generated@@610) $generated@@134)) (= (type $generated@@611) $generated@@134)) (= (type $generated@@612) $generated@@134)) (= (type $generated@@613) $generated@@134)) (= (type $generated@@614) $generated@@134)) (= (type $generated@@615) $generated@@134)) (= (type $generated@@616) $generated@@134)) (= (type $generated@@617) $generated@@134)) (= (type $generated@@618) $generated@@134)) (= (type $generated@@619) $generated@@134)) (= (type $generated@@620) $generated@@134)) (= (type $generated@@621) $generated@@134)) (= (type $generated@@622) $generated@@134)) (= (type $generated@@623) $generated@@134)) (= (type $generated@@624) $generated@@134)) (= (type $generated@@625) $generated@@134)) (= (type $generated@@626) $generated@@134)) (= (type $generated@@627) ($generated@@173 $generated@@77 $generated@@4))) (= (type $generated@@628) $generated@@77)) (= (type $generated@@629) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@632  (=> (and (= ($generated@@133 $generated@@599) $generated@@599) (= ($generated@@133 $generated@@600) $generated@@600)) (=> (and (and (and (and (and (= ($generated@@133 $generated@@601) $generated@@601) (= ($generated@@133 $generated@@602) $generated@@602)) (and (= ($generated@@133 $generated@@603) $generated@@603) (= ($generated@@133 $generated@@604) $generated@@604))) (and (and (= ($generated@@133 $generated@@605) $generated@@605) (= ($generated@@133 $generated@@606) $generated@@606)) (and (= ($generated@@133 $generated@@607) $generated@@607) (= ($generated@@133 $generated@@608) $generated@@608)))) (and (and (and (= ($generated@@133 $generated@@609) $generated@@609) (= ($generated@@133 $generated@@610) $generated@@610)) (and (= ($generated@@133 $generated@@611) $generated@@611) (= ($generated@@133 $generated@@612) $generated@@612))) (and (and (= ($generated@@133 $generated@@613) $generated@@613) (= ($generated@@133 $generated@@614) $generated@@614)) (and (= ($generated@@133 $generated@@615) $generated@@615) (= ($generated@@133 $generated@@616) $generated@@616))))) (and (and (and (and (= ($generated@@133 $generated@@617) $generated@@617) (= ($generated@@133 $generated@@618) $generated@@618)) (and (= ($generated@@133 $generated@@619) $generated@@619) (= ($generated@@133 $generated@@620) $generated@@620))) (and (and (= ($generated@@133 $generated@@621) $generated@@621) (= ($generated@@133 $generated@@622) $generated@@622)) (and (= ($generated@@133 $generated@@623) $generated@@623) (= ($generated@@133 $generated@@624) $generated@@624)))) (and (and (and (= ($generated@@133 $generated@@625) $generated@@625) (= ($generated@@133 $generated@@626) $generated@@626)) (and (= $generated@@627 ($generated@@172 $generated@@628 $generated@@629 $generated@@60 false)) (= $generated@@630 ($generated@@247 1)))) (and (and ($generated@@74 ($generated@@8 $generated@@630) $generated@@46 $generated@@629) ($generated@@350 $generated@@46 ($generated@@274 ($generated@@8 ($generated@@247 1))))) (and ($generated@@350 $generated@@46 ($generated@@274 ($generated@@8 ($generated@@247 1)))) (= (ControlFlow 0 2) (- 0 1))))))) (= ($generated ($generated@@365 $generated@@2 ($generated@@132 $generated@@46 $generated@@622 ($generated@@274 ($generated@@8 ($generated@@247 1)))))) ($generated@@247 1))))))
(let (($generated@@633  (=> (and (and ($generated@@253 $generated@@629) ($generated@@631 $generated@@629)) (and (= 1 $generated@@349) (= (ControlFlow 0 3) 2))) $generated@@632)))
$generated@@633)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 (T@U T@U) Bool)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@504 (T@U Int) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@625 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@137) 14) (= ($generated@@1 $generated@@138) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@135 $generated@@140 $generated@@141 $generated@@142)) $generated@@138)
 :pattern ( ($generated@@135 $generated@@140 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@136 $generated@@143)) $generated@@137)
 :pattern ( ($generated@@136 $generated@@143))
))) (= (type $generated@@139) $generated@@137)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@67) (= (type $generated@@145) $generated@@137)) (= (type $generated@@146) $generated@@138)) (= ($generated@@135 $generated@@144 $generated@@145 $generated@@146) ($generated@@135 $generated@@144 $generated@@139 $generated@@146)))
 :pattern ( ($generated@@135 $generated@@144 ($generated@@136 $generated@@145) $generated@@146))
)))
(assert (= ($generated@@1 $generated@@148) 16))
(assert (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@148) ($generated@@147 $generated@@150)) ($generated@@149 $generated@@150))
 :pattern ( ($generated@@147 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@78 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@78 0)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@67)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@67) (= (type $generated@@158) $generated@@67)) (= (type $generated@@159) $generated@@148)) ($generated@@151 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@151 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@138)
 :pattern ( ($generated@@161 $generated@@163))
)) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@138)
 :pattern ( ($generated@@162 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@148) (= (type $generated@@166) $generated@@148)) true) (= ($generated@@160 $generated@@165 $generated@@166)  (and (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)) (= ($generated@@162 $generated@@165) ($generated@@162 $generated@@166)))))
 :pattern ( ($generated@@160 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@167 $generated@@168)) $generated@@137)
 :pattern ( ($generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@67) (= (type $generated@@170) $generated@@137)) (= (type $generated@@171) $generated@@138)) (= ($generated@@135 $generated@@169 ($generated@@167 $generated@@170) $generated@@171) ($generated@@135 $generated@@169 $generated@@170 $generated@@171)))
 :pattern ( ($generated@@135 $generated@@169 ($generated@@167 $generated@@170) $generated@@171))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@67)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@79 $generated@@138 $generated@@2)) (= (type $generated@@176) $generated@@67)) ($generated@@151 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@151 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@67) (= (type $generated@@180) $generated@@148)) ($generated@@151 $generated@@180 ($generated@@177 $generated@@179))) ($generated@@149 $generated@@180))
 :pattern ( ($generated@@149 $generated@@180) ($generated@@151 $generated@@180 ($generated@@177 $generated@@179)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 17)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@80 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@70 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@80) (= (type $generated@@231) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@232) ($generated@@69 $generated@@4))) (= (type $generated@@234) $generated@@80)) (= (type $generated@@235) ($generated@@69 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@148)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@67) (= (type $generated@@242) $generated@@67)) (= (type $generated@@243) $generated@@138)) (= (type $generated@@244) $generated@@138)) (= ($generated@@151 ($generated@@237 $generated@@243 $generated@@244) ($generated@@154 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@151 ($generated@@237 $generated@@243 $generated@@244) ($generated@@154 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@148) (= (type $generated@@246) $generated@@148)) (= ($generated@@160 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@160 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@148) (= (type $generated@@249) $generated@@148)) (= ($generated@@247 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@247 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@67)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@79 $generated@@138 $generated@@4)) (= (type $generated@@253) $generated@@67)) (= ($generated@@151 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@138) ($generated@@0 ($generated@@84 $generated@@252 $generated@@254))) ($generated@@238 $generated@@254 $generated@@253))
 :pattern ( ($generated@@84 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@151 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@67)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@79 $generated@@138 $generated@@4)) (= (type $generated@@258) $generated@@67)) (= ($generated@@151 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@138) ($generated@@0 ($generated@@84 $generated@@257 $generated@@259))) ($generated@@238 $generated@@259 $generated@@258))
 :pattern ( ($generated@@84 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@151 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@260 $generated@@261) $generated@@261)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@67) (= (type $generated@@269) $generated@@67)) (= (type $generated@@270) $generated@@138)) (= (type $generated@@271) $generated@@138)) (= (type $generated@@272) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@266 $generated@@272)) (= ($generated@@77 ($generated@@237 $generated@@270 $generated@@271) ($generated@@154 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@77 ($generated@@237 $generated@@270 $generated@@271) ($generated@@154 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@71)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@148) (= ($generated@@153 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@148) (= ($generated@@149 $generated@@276) (= ($generated@@273 $generated@@276) $generated@@63)))
 :pattern ( ($generated@@149 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@148) ($generated@@153 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@138) (= (type $generated@@279) $generated@@138)) (= $generated@@277 ($generated@@237 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@153 $generated@@277))
)))
(assert  (and (and (forall (($generated@@284 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@284)) 18)) (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
))) (forall (($generated@@286 T@T) ) (! (= (type ($generated@@280 $generated@@286)) ($generated@@282 $generated@@286))
 :pattern ( ($generated@@280 $generated@@286))
))))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@287)) 0)
 :pattern ( ($generated@@280 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@138)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@148) (= (type $generated@@291) $generated@@148)) true) (= ($generated@@247 $generated@@290 $generated@@291) (= ($generated@@288 $generated@@290) ($generated@@288 $generated@@291))))
 :pattern ( ($generated@@247 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@148)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@148) ($generated@@149 $generated@@294)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@138) (= $generated@@294 ($generated@@292 $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@149 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@138)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@67) (= (type $generated@@300) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@267 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@77 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@267 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@79 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@82 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@79 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@84 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@72)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@67) (and (= ($generated@@75 ($generated@@177 $generated@@309)) $generated@@64) (= ($generated@@307 ($generated@@177 $generated@@309)) $generated@@66)))
 :pattern ( ($generated@@177 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@79 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 20)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@79 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@84 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@84 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@82 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@79 $generated@@347 $generated@@2)) (= ($generated@@173 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@84 $generated@@346 $generated@@348))) (<= ($generated ($generated@@84 $generated@@346 $generated@@348)) ($generated@@301 $generated@@346))))
 :pattern ( ($generated@@84 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@173 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@314 (type $generated@@349))))
(let (($generated@@351 ($generated@@313 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@312 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@311 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@310 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@314 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@79 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@314 (type $generated@@356))))
(let (($generated@@358 ($generated@@313 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@312 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@311 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@84 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@332 (type $generated@@360))))
(let (($generated@@362 ($generated@@331 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@330 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@329 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@328 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@332 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@79 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@332 (type $generated@@367))))
(let (($generated@@369 ($generated@@331 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@330 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@329 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@84 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@79 $generated@@138 $generated@@2)) (= (type $generated@@372) $generated@@67)) (= ($generated@@151 $generated@@371 ($generated@@172 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@138) (< 0 ($generated ($generated@@84 $generated@@371 $generated@@373)))) ($generated@@238 $generated@@373 $generated@@372))
 :pattern ( ($generated@@84 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@151 $generated@@371 ($generated@@172 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@374) $generated@@67) (= (type $generated@@375) $generated@@138)) (= (type $generated@@376) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@266 $generated@@376)) (= ($generated@@77 ($generated@@292 $generated@@375) ($generated@@177 $generated@@374) $generated@@376) ($generated@@267 $generated@@375 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@77 ($generated@@292 $generated@@375) ($generated@@177 $generated@@374) $generated@@376))
)))
(assert  (=> (<= 0 $generated@@377) (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (and (= (type $generated@@379) $generated@@67) (= (type $generated@@380) $generated@@137)) (= (type $generated@@381) $generated@@138)) (or ($generated@@378 $generated@@379 $generated@@381) (and (not (= 0 $generated@@377)) ($generated@@238 $generated@@381 $generated@@379)))) (= ($generated@@135 $generated@@379 ($generated@@167 $generated@@380) $generated@@381) $generated@@381))
 :pattern ( ($generated@@135 $generated@@379 ($generated@@167 $generated@@380) $generated@@381))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@79 $generated@@138 $generated@@4)) (= (type $generated@@383) $generated@@67)) (= (type $generated@@384) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@382 ($generated@@250 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@138) ($generated@@0 ($generated@@84 $generated@@382 $generated@@385))) ($generated@@267 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@84 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@77 $generated@@382 ($generated@@250 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@79 $generated@@138 $generated@@4)) (= (type $generated@@387) $generated@@67)) (= (type $generated@@388) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@386 ($generated@@255 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@138) ($generated@@0 ($generated@@84 $generated@@386 $generated@@389))) ($generated@@267 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@84 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@77 $generated@@386 ($generated@@255 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@84 ($generated@@302 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@84 ($generated@@302 $generated@@391) $generated@@390)))
)))
(assert  (and (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@392 $generated@@395)) ($generated@@79 $generated@@138 $generated@@4))
 :pattern ( ($generated@@392 $generated@@395))
)) (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@393 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@393 $generated@@396 $generated@@397))
))) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@314 (type $generated@@398))))
(let (($generated@@400 ($generated@@313 (type $generated@@398))))
(= (type ($generated@@394 $generated@@398)) ($generated@@79 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@394 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@312 $generated@@138 $generated@@138)) (= (type $generated@@402) $generated@@138)) (= ($generated@@0 ($generated@@84 ($generated@@392 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@401) ($generated@@161 ($generated@@393 $generated@@148 $generated@@402)))) (= ($generated@@84 ($generated@@394 $generated@@401) ($generated@@161 ($generated@@393 $generated@@148 $generated@@402))) ($generated@@162 ($generated@@393 $generated@@148 $generated@@402))))))
 :pattern ( ($generated@@84 ($generated@@392 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@79 $generated@@138 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@332 (type $generated@@406))))
(let (($generated@@408 ($generated@@331 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@79 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@330 $generated@@138 $generated@@138)) (= (type $generated@@410) $generated@@138)) (= ($generated@@0 ($generated@@84 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@84 ($generated@@328 $generated@@409) ($generated@@161 ($generated@@393 $generated@@148 $generated@@410)))) (= ($generated@@84 ($generated@@404 $generated@@409) ($generated@@161 ($generated@@393 $generated@@148 $generated@@410))) ($generated@@162 ($generated@@393 $generated@@148 $generated@@410))))))
 :pattern ( ($generated@@84 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@313 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@312 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@84 ($generated@@353 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@84 ($generated@@394 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@411) $generated@@415))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@84 ($generated@@353 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@331 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@330 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@84 ($generated@@364 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@84 ($generated@@328 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@84 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@416) $generated@@420))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@312 $generated@@138 $generated@@138)) (= (type $generated@@425) $generated@@67)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@138) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@424) $generated@@428))) (and ($generated@@267 ($generated@@84 ($generated@@394 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@267 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@424) $generated@@428))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@77 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@330 $generated@@138 $generated@@138)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) $generated@@67)) (= (type $generated@@435) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@138) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@432) $generated@@436))) (and ($generated@@267 ($generated@@84 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@267 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@77 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@79 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@332 (type $generated@@439))))
(let (($generated@@441 ($generated@@331 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@330 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@329 $generated@@441 $generated@@440)) (= ($generated@@328 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@328 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@332 (type $generated@@442))))
(let (($generated@@444 ($generated@@331 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@330 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@329 $generated@@444 $generated@@443)) (= ($generated@@364 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@364 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@332 (type $generated@@445))))
(let (($generated@@447 ($generated@@331 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@330 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@329 $generated@@447 $generated@@446)) (= ($generated@@403 $generated@@445) ($generated@@437 $generated@@138))))))
 :pattern ( ($generated@@403 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@314 (type $generated@@448))))
(let (($generated@@450 ($generated@@313 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@312 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@311 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@138) (= (type $generated@@452) $generated@@138)) ($generated@@0 ($generated@@84 ($generated@@392 $generated@@448) ($generated@@296 ($generated@@237 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@392 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@332 (type $generated@@453))))
(let (($generated@@455 ($generated@@331 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@330 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@329 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@138) (= (type $generated@@457) $generated@@138)) ($generated@@0 ($generated@@84 ($generated@@403 $generated@@453) ($generated@@296 ($generated@@237 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@403 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@138) ($generated@@238 $generated@@458 $generated@@46)) (and (= ($generated@@296 ($generated@@393 $generated@@2 $generated@@458)) $generated@@458) ($generated@@151 ($generated@@393 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@138) ($generated@@238 $generated@@459 $generated@@47)) (and (= ($generated@@296 ($generated@@393 $generated@@3 $generated@@459)) $generated@@459) ($generated@@151 ($generated@@393 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@138) ($generated@@238 $generated@@460 $generated@@44)) (and (= ($generated@@296 ($generated@@393 $generated@@4 $generated@@460)) $generated@@460) ($generated@@151 ($generated@@393 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 21))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@138) ($generated@@238 $generated@@462 $generated@@45)) (and (= ($generated@@296 ($generated@@393 $generated@@461 $generated@@462)) $generated@@462) ($generated@@151 ($generated@@393 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@67) (= ($generated@@238 ($generated@@296 $generated@@463) $generated@@464) ($generated@@151 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@238 ($generated@@296 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@82 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@79 $generated@@466 $generated@@2)) (<= 0 ($generated@@301 $generated@@465))))
 :pattern ( ($generated@@301 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@283 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@282 $generated@@468)) (<= 0 ($generated@@281 $generated@@467))))
 :pattern ( ($generated@@281 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@67) (= (type $generated@@472) $generated@@67)) (= ($generated@@469 ($generated@@421 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@421 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@421 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@421 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@75 ($generated@@421 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@479 ($generated@@429 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@429 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@429 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@429 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@75 ($generated@@429 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@138) (= (type $generated@@490) $generated@@138)) (= ($generated@@273 ($generated@@237 $generated@@489 $generated@@490)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@491 ($generated@@154 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@154 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@154 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@154 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@138) (= (type $generated@@500) $generated@@138)) (= ($generated@@161 ($generated@@237 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@237 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@138) (= (type $generated@@502) $generated@@138)) (= ($generated@@162 ($generated@@237 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@237 $generated@@501 $generated@@502))
)))
(assert  (and (forall (($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@505))
)) (forall (($generated@@506 T@U) ($generated@@507 Int) ) (! (let (($generated@@508 ($generated@@283 (type $generated@@506))))
(= (type ($generated@@504 $generated@@506 $generated@@507)) $generated@@508))
 :pattern ( ($generated@@504 $generated@@506 $generated@@507))
))))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@282 $generated@@138)) (= (type $generated@@510) $generated@@67)) (= (type $generated@@511) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@509 ($generated@@503 $generated@@510) $generated@@511) (forall (($generated@@512 Int) ) (!  (=> (and (<= 0 $generated@@512) (< $generated@@512 ($generated@@281 $generated@@509))) ($generated@@267 ($generated@@504 $generated@@509 $generated@@512) $generated@@510 $generated@@511))
 :pattern ( ($generated@@504 $generated@@509 $generated@@512))
))))
 :pattern ( ($generated@@77 $generated@@509 ($generated@@503 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@514 Int) ) (! (= ($generated@@513 ($generated@@78 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@78 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@67)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@515 ($generated@@250 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@250 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@75 ($generated@@250 $generated@@518)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@255 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@255 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@75 ($generated@@255 $generated@@522)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@172 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@172 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@75 ($generated@@172 $generated@@526)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@527 ($generated@@503 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@503 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@75 ($generated@@503 $generated@@530)) $generated@@57))
 :pattern ( ($generated@@503 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@138) (= ($generated@@273 ($generated@@292 $generated@@531)) $generated@@63))
 :pattern ( ($generated@@292 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@532 ($generated@@177 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@177 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@138) (= ($generated@@288 ($generated@@292 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@292 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
(= ($generated@@393 $generated@@537 ($generated@@296 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@296 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@312 $generated@@138 $generated@@138)) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@67)) (= ($generated@@151 $generated@@538 ($generated@@421 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@138) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@538) $generated@@541))) (and ($generated@@238 ($generated@@84 ($generated@@394 $generated@@538) $generated@@541) $generated@@540) ($generated@@238 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@538) $generated@@541))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@151 $generated@@538 ($generated@@421 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@330 $generated@@138 $generated@@138)) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) $generated@@67)) (= ($generated@@151 $generated@@542 ($generated@@429 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@138) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@542) $generated@@545))) (and ($generated@@238 ($generated@@84 ($generated@@404 $generated@@542) $generated@@545) $generated@@544) ($generated@@238 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@542) $generated@@545))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@151 $generated@@542 ($generated@@429 $generated@@543 $generated@@544)))
)))
(assert  (=> (<= 0 $generated@@377) (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@67) (= (type $generated@@547) $generated@@137)) (= (type $generated@@548) $generated@@138)) (or ($generated@@378 $generated@@546 ($generated@@262 $generated@@548)) (and (not (= 0 $generated@@377)) ($generated@@238 $generated@@548 $generated@@546)))) (= ($generated@@135 $generated@@546 ($generated@@167 $generated@@547) ($generated@@262 $generated@@548)) ($generated@@262 $generated@@548)))
 :weight 3
 :pattern ( ($generated@@135 $generated@@546 ($generated@@167 $generated@@547) ($generated@@262 $generated@@548)))
))))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@67) (= (type $generated@@550) $generated@@138)) (= ($generated@@151 ($generated@@292 $generated@@550) ($generated@@177 $generated@@549)) ($generated@@238 $generated@@550 $generated@@549)))
 :pattern ( ($generated@@151 ($generated@@292 $generated@@550) ($generated@@177 $generated@@549)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@138) (= (type $generated@@554) $generated@@138)) (< ($generated@@551 $generated@@553) ($generated@@552 ($generated@@237 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@237 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@138) (= (type $generated@@556) $generated@@138)) (< ($generated@@551 $generated@@556) ($generated@@552 ($generated@@237 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@237 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@138) (= (type $generated@@558) $generated@@67)) (= (type $generated@@559) $generated@@67)) ($generated@@238 $generated@@557 ($generated@@421 $generated@@558 $generated@@559))) (and (= ($generated@@296 ($generated@@393 ($generated@@312 $generated@@138 $generated@@138) $generated@@557)) $generated@@557) ($generated@@151 ($generated@@393 ($generated@@312 $generated@@138 $generated@@138) $generated@@557) ($generated@@421 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@238 $generated@@557 ($generated@@421 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@138) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) $generated@@67)) ($generated@@238 $generated@@560 ($generated@@429 $generated@@561 $generated@@562))) (and (= ($generated@@296 ($generated@@393 ($generated@@330 $generated@@138 $generated@@138) $generated@@560)) $generated@@560) ($generated@@151 ($generated@@393 ($generated@@330 $generated@@138 $generated@@138) $generated@@560) ($generated@@429 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@238 $generated@@560 ($generated@@429 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@67) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) $generated@@138)) ($generated@@238 $generated@@565 ($generated@@154 $generated@@563 $generated@@564))) (and (= ($generated@@296 ($generated@@393 $generated@@148 $generated@@565)) $generated@@565) ($generated@@151 ($generated@@393 $generated@@148 $generated@@565) ($generated@@154 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@238 $generated@@565 ($generated@@154 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@138) (< ($generated@@551 $generated@@566) ($generated@@552 ($generated@@292 $generated@@566))))
 :pattern ( ($generated@@292 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@148) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@266 $generated@@569) (and ($generated@@149 $generated@@567) ($generated@@77 $generated@@567 ($generated@@177 $generated@@568) $generated@@569)))) ($generated@@267 ($generated@@288 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@267 ($generated@@288 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@84 ($generated@@437 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@84 ($generated@@437 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@67) (= (type $generated@@573) $generated@@67)) (and (= ($generated@@75 ($generated@@154 $generated@@572 $generated@@573)) $generated@@62) (= ($generated@@307 ($generated@@154 $generated@@572 $generated@@573)) $generated@@65)))
 :pattern ( ($generated@@154 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@148) (= ($generated@@551 ($generated@@296 $generated@@574)) ($generated@@552 $generated@@574)))
 :pattern ( ($generated@@551 ($generated@@296 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@138) ($generated@@238 $generated@@575 ($generated@@78 0))) (and (= ($generated@@296 ($generated@@393 $generated@@2 $generated@@575)) $generated@@575) ($generated@@151 ($generated@@393 ($generated@@79 $generated@@138 $generated@@4) $generated@@575) ($generated@@78 0))))
 :pattern ( ($generated@@238 $generated@@575 ($generated@@78 0)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@138) (= (type $generated@@577) $generated@@67)) ($generated@@238 $generated@@576 ($generated@@250 $generated@@577))) (and (= ($generated@@296 ($generated@@393 ($generated@@79 $generated@@138 $generated@@4) $generated@@576)) $generated@@576) ($generated@@151 ($generated@@393 ($generated@@79 $generated@@138 $generated@@4) $generated@@576) ($generated@@250 $generated@@577))))
 :pattern ( ($generated@@238 $generated@@576 ($generated@@250 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@138) (= (type $generated@@579) $generated@@67)) ($generated@@238 $generated@@578 ($generated@@255 $generated@@579))) (and (= ($generated@@296 ($generated@@393 ($generated@@79 $generated@@138 $generated@@4) $generated@@578)) $generated@@578) ($generated@@151 ($generated@@393 ($generated@@79 $generated@@138 $generated@@4) $generated@@578) ($generated@@255 $generated@@579))))
 :pattern ( ($generated@@238 $generated@@578 ($generated@@255 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@138) (= (type $generated@@581) $generated@@67)) ($generated@@238 $generated@@580 ($generated@@172 $generated@@581))) (and (= ($generated@@296 ($generated@@393 ($generated@@79 $generated@@138 $generated@@2) $generated@@580)) $generated@@580) ($generated@@151 ($generated@@393 ($generated@@79 $generated@@138 $generated@@2) $generated@@580) ($generated@@172 $generated@@581))))
 :pattern ( ($generated@@238 $generated@@580 ($generated@@172 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@138) (= (type $generated@@583) $generated@@67)) ($generated@@238 $generated@@582 ($generated@@503 $generated@@583))) (and (= ($generated@@296 ($generated@@393 ($generated@@282 $generated@@138) $generated@@582)) $generated@@582) ($generated@@151 ($generated@@393 ($generated@@282 $generated@@138) $generated@@582) ($generated@@503 $generated@@583))))
 :pattern ( ($generated@@238 $generated@@582 ($generated@@503 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@67) (= (type $generated@@585) $generated@@138)) ($generated@@238 $generated@@585 ($generated@@177 $generated@@584))) (and (= ($generated@@296 ($generated@@393 $generated@@148 $generated@@585)) $generated@@585) ($generated@@151 ($generated@@393 $generated@@148 $generated@@585) ($generated@@177 $generated@@584))))
 :pattern ( ($generated@@238 $generated@@585 ($generated@@177 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@79 $generated@@138 $generated@@2)) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@586 ($generated@@172 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@138) (< 0 ($generated ($generated@@84 $generated@@586 $generated@@589)))) ($generated@@267 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@84 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@77 $generated@@586 ($generated@@172 $generated@@587) $generated@@588))
)))
(assert  (=> (<= 0 $generated@@377) (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@67) (= (type $generated@@591) $generated@@137)) (= (type $generated@@592) $generated@@138)) (or ($generated@@378 $generated@@590 $generated@@592) (and (not (= 0 $generated@@377)) ($generated@@238 $generated@@592 $generated@@590)))) ($generated@@238 ($generated@@135 $generated@@590 $generated@@591 $generated@@592) $generated@@590))
 :pattern ( ($generated@@135 $generated@@590 $generated@@591 $generated@@592))
))))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@148) (= (type $generated@@594) $generated@@67)) (= (type $generated@@595) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@266 $generated@@595) (and ($generated@@153 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@67) ($generated@@77 $generated@@593 ($generated@@154 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@77 $generated@@593 ($generated@@154 $generated@@594 $generated@@596) $generated@@595))
))))) ($generated@@267 ($generated@@161 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@267 ($generated@@161 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@148) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@266 $generated@@599) (and ($generated@@153 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@67) ($generated@@77 $generated@@597 ($generated@@154 $generated@@600 $generated@@598) $generated@@599))
 :pattern ( ($generated@@77 $generated@@597 ($generated@@154 $generated@@600 $generated@@598) $generated@@599))
))))) ($generated@@267 ($generated@@162 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@267 ($generated@@162 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@138) (= (type $generated@@602) $generated@@138)) (= ($generated@@237 ($generated@@262 $generated@@601) ($generated@@262 $generated@@602)) ($generated@@262 ($generated@@237 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@237 ($generated@@262 $generated@@601) ($generated@@262 $generated@@602)))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@260 $generated@@603))) ($generated@@262 ($generated@@296 ($generated@@8 $generated@@603))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@260 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@138) (= ($generated@@292 ($generated@@262 $generated@@604)) ($generated@@262 ($generated@@292 $generated@@604))))
 :pattern ( ($generated@@292 ($generated@@262 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (= ($generated@@296 ($generated@@262 $generated@@605)) ($generated@@262 ($generated@@296 $generated@@605)))
 :pattern ( ($generated@@296 ($generated@@262 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@283 (type $generated@@606))))
 (=> (and (= (type $generated@@606) ($generated@@282 $generated@@607)) (= ($generated@@281 $generated@@606) 0)) (= $generated@@606 ($generated@@280 $generated@@607))))
 :pattern ( ($generated@@281 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@609)))
 (=> (and (and (= (type $generated@@608) ($generated@@79 $generated@@611 $generated@@2)) (= (type $generated@@610) $generated@@2)) (<= 0 ($generated $generated@@610))) (= ($generated@@301 ($generated@@85 $generated@@608 $generated@@609 $generated@@610)) (+ (- ($generated@@301 $generated@@608) ($generated ($generated@@84 $generated@@608 $generated@@609))) ($generated $generated@@610)))))
 :pattern ( ($generated@@301 ($generated@@85 $generated@@608 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@613) $generated@@2)) ($generated@@77 $generated@@613 $generated@@46 $generated@@612))
 :pattern ( ($generated@@77 $generated@@613 $generated@@46 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@615) $generated@@3)) ($generated@@77 $generated@@615 $generated@@47 $generated@@614))
 :pattern ( ($generated@@77 $generated@@615 $generated@@47 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@617) $generated@@4)) ($generated@@77 $generated@@617 $generated@@44 $generated@@616))
 :pattern ( ($generated@@77 $generated@@617 $generated@@44 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@619) $generated@@461)) ($generated@@77 $generated@@619 $generated@@45 $generated@@618))
 :pattern ( ($generated@@77 $generated@@619 $generated@@45 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@621) $generated@@138)) ($generated@@77 $generated@@621 $generated@@48 $generated@@620))
 :pattern ( ($generated@@77 $generated@@621 $generated@@48 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@282 $generated@@138)) (= (type $generated@@623) $generated@@67)) (= ($generated@@151 $generated@@622 ($generated@@503 $generated@@623)) (forall (($generated@@624 Int) ) (!  (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@281 $generated@@622))) ($generated@@238 ($generated@@504 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@504 $generated@@622 $generated@@624))
))))
 :pattern ( ($generated@@151 $generated@@622 ($generated@@503 $generated@@623)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@282 $generated@@138)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@281 $generated@@626))) (< ($generated@@552 ($generated@@393 $generated@@148 ($generated@@504 $generated@@626 $generated@@627))) ($generated@@625 $generated@@626))))
 :pattern ( ($generated@@552 ($generated@@393 $generated@@148 ($generated@@504 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@312 $generated@@138 $generated@@138)) (= (type $generated@@629) $generated@@67)) (= (type $generated@@630) $generated@@67)) ($generated@@151 $generated@@628 ($generated@@421 $generated@@629 $generated@@630))) (and (and ($generated@@151 ($generated@@310 $generated@@628) ($generated@@250 $generated@@629)) ($generated@@151 ($generated@@353 $generated@@628) ($generated@@250 $generated@@630))) ($generated@@151 ($generated@@392 $generated@@628) ($generated@@250 ($generated@@154 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@151 $generated@@628 ($generated@@421 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@330 $generated@@138 $generated@@138)) (= (type $generated@@632) $generated@@67)) (= (type $generated@@633) $generated@@67)) ($generated@@151 $generated@@631 ($generated@@429 $generated@@632 $generated@@633))) (and (and ($generated@@151 ($generated@@328 $generated@@631) ($generated@@255 $generated@@632)) ($generated@@151 ($generated@@364 $generated@@631) ($generated@@255 $generated@@633))) ($generated@@151 ($generated@@403 $generated@@631) ($generated@@255 ($generated@@154 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@151 $generated@@631 ($generated@@429 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@151 $generated@@634 $generated@@46))
 :pattern ( ($generated@@151 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@151 $generated@@635 $generated@@47))
 :pattern ( ($generated@@151 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@151 $generated@@636 $generated@@44))
 :pattern ( ($generated@@151 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@461) ($generated@@151 $generated@@637 $generated@@45))
 :pattern ( ($generated@@151 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@138) ($generated@@151 $generated@@638 $generated@@48))
 :pattern ( ($generated@@151 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 (T@U) Bool)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@639) $generated@@137) (= (type $generated@@640) $generated@@137)) (= (type $generated@@641) $generated@@137)) (= (type $generated@@642) $generated@@137)) (= (type $generated@@643) $generated@@137)) (= (type $generated@@644) $generated@@137)) (= (type $generated@@645) $generated@@137)) (= (type $generated@@646) $generated@@137)) (= (type $generated@@647) $generated@@137)) (= (type $generated@@648) $generated@@137)) (= (type $generated@@649) $generated@@137)) (= (type $generated@@650) $generated@@137)) (= (type $generated@@651) $generated@@137)) (= (type $generated@@652) $generated@@137)) (= (type $generated@@653) $generated@@137)) (= (type $generated@@654) $generated@@137)) (= (type $generated@@655) $generated@@137)) (= (type $generated@@656) $generated@@137)) (= (type $generated@@657) $generated@@137)) (= (type $generated@@658) $generated@@137)) (= (type $generated@@659) $generated@@137)) (= (type $generated@@660) $generated@@137)) (= (type $generated@@661) $generated@@137)) (= (type $generated@@662) $generated@@137)) (= (type $generated@@663) $generated@@137)) (= (type $generated@@664) $generated@@137)) (= (type $generated@@665) $generated@@137)) (= (type $generated@@666) $generated@@137)) (= (type $generated@@667) ($generated@@183 $generated@@80 $generated@@4))) (= (type $generated@@668) $generated@@80)) (= (type $generated@@669) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@670) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@672) $generated@@137)) (= (type $generated@@673) $generated@@148)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@674  (=> (= ($generated@@136 $generated@@639) $generated@@639) (=> (and (= ($generated@@136 $generated@@640) $generated@@640) (= ($generated@@136 $generated@@641) $generated@@641)) (=> (and (and (and (= ($generated@@136 $generated@@642) $generated@@642) (= ($generated@@136 $generated@@643) $generated@@643)) (and (= ($generated@@136 $generated@@644) $generated@@644) (= ($generated@@136 $generated@@645) $generated@@645))) (and (and (= ($generated@@136 $generated@@646) $generated@@646) (= ($generated@@136 $generated@@647) $generated@@647)) (and (= ($generated@@136 $generated@@648) $generated@@648) (= ($generated@@136 $generated@@649) $generated@@649)))) (=> (and (and (and (and (and (= ($generated@@136 $generated@@650) $generated@@650) (= ($generated@@136 $generated@@651) $generated@@651)) (and (= ($generated@@136 $generated@@652) $generated@@652) (= ($generated@@136 $generated@@653) $generated@@653))) (and (and (= ($generated@@136 $generated@@654) $generated@@654) (= ($generated@@136 $generated@@655) $generated@@655)) (and (= ($generated@@136 $generated@@656) $generated@@656) (= ($generated@@136 $generated@@657) $generated@@657)))) (and (and (and (= ($generated@@136 $generated@@658) $generated@@658) (= ($generated@@136 $generated@@659) $generated@@659)) (and (= ($generated@@136 $generated@@660) $generated@@660) (= ($generated@@136 $generated@@661) $generated@@661))) (and (and (= ($generated@@136 $generated@@662) $generated@@662) (= ($generated@@136 $generated@@663) $generated@@663)) (and (= ($generated@@136 $generated@@664) $generated@@664) (= ($generated@@136 $generated@@665) $generated@@665))))) (and (and (and (and (= ($generated@@136 $generated@@666) $generated@@666) (= $generated@@667 ($generated@@182 $generated@@668 $generated@@669 $generated@@60 false))) (and ($generated@@266 $generated@@670) ($generated@@671 $generated@@670))) (and (and (= $generated@@669 $generated@@670) (= $generated@@661 ($generated@@167 $generated@@672))) (and (= $generated@@662 ($generated@@167 ($generated@@167 $generated@@672))) (= ($generated@@136 $generated@@672) $generated@@672)))) (and (and (and (= $generated@@673 ($generated@@262 ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1)))))) ($generated@@77 $generated@@673 ($generated@@177 $generated@@46) $generated@@670)) (and ($generated@@378 ($generated@@177 $generated@@46) ($generated@@296 ($generated@@262 ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1))))))) ($generated@@149 ($generated@@393 $generated@@148 ($generated@@135 ($generated@@177 $generated@@46) $generated@@661 ($generated@@296 ($generated@@262 ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1))))))))))) (and (and ($generated@@147 ($generated@@393 $generated@@148 ($generated@@135 ($generated@@177 $generated@@46) $generated@@661 ($generated@@296 ($generated@@262 ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1))))))))) ($generated@@378 ($generated@@177 $generated@@46) ($generated@@296 ($generated@@262 ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1)))))))) (= (ControlFlow 0 2) (- 0 1)))))) ($generated@@247 ($generated@@393 $generated@@148 ($generated@@135 ($generated@@177 $generated@@46) $generated@@662 ($generated@@296 ($generated@@262 ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1)))))))) ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1)))))))))))
(let (($generated@@675  (=> (and (and ($generated@@266 $generated@@669) ($generated@@671 $generated@@669)) (and (= 1 $generated@@377) (= (ControlFlow 0 3) 2))) $generated@@674)))
$generated@@675)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 (T@U T@U) Bool)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@504 (T@U Int) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@625 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@137) 14) (= ($generated@@1 $generated@@138) 15)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@135 $generated@@140 $generated@@141 $generated@@142)) $generated@@138)
 :pattern ( ($generated@@135 $generated@@140 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (= (type ($generated@@136 $generated@@143)) $generated@@137)
 :pattern ( ($generated@@136 $generated@@143))
))) (= (type $generated@@139) $generated@@137)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@67) (= (type $generated@@145) $generated@@137)) (= (type $generated@@146) $generated@@138)) (= ($generated@@135 $generated@@144 $generated@@145 $generated@@146) ($generated@@135 $generated@@144 $generated@@139 $generated@@146)))
 :pattern ( ($generated@@135 $generated@@144 ($generated@@136 $generated@@145) $generated@@146))
)))
(assert (= ($generated@@1 $generated@@148) 16))
(assert (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@148) ($generated@@147 $generated@@150)) ($generated@@149 $generated@@150))
 :pattern ( ($generated@@147 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@78 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@78 0)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@67)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@67) (= (type $generated@@158) $generated@@67)) (= (type $generated@@159) $generated@@148)) ($generated@@151 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@151 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@138)
 :pattern ( ($generated@@161 $generated@@163))
)) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@138)
 :pattern ( ($generated@@162 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@148) (= (type $generated@@166) $generated@@148)) true) (= ($generated@@160 $generated@@165 $generated@@166)  (and (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)) (= ($generated@@162 $generated@@165) ($generated@@162 $generated@@166)))))
 :pattern ( ($generated@@160 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@167 $generated@@168)) $generated@@137)
 :pattern ( ($generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@67) (= (type $generated@@170) $generated@@137)) (= (type $generated@@171) $generated@@138)) (= ($generated@@135 $generated@@169 ($generated@@167 $generated@@170) $generated@@171) ($generated@@135 $generated@@169 $generated@@170 $generated@@171)))
 :pattern ( ($generated@@135 $generated@@169 ($generated@@167 $generated@@170) $generated@@171))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@67)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@79 $generated@@138 $generated@@2)) (= (type $generated@@176) $generated@@67)) ($generated@@151 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@151 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@67) (= (type $generated@@180) $generated@@148)) ($generated@@151 $generated@@180 ($generated@@177 $generated@@179))) ($generated@@149 $generated@@180))
 :pattern ( ($generated@@149 $generated@@180) ($generated@@151 $generated@@180 ($generated@@177 $generated@@179)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@1 ($generated@@183 $generated@@187 $generated@@188)) 17)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@185 ($generated@@183 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@183 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@185 (type $generated@@193))))
(= (type ($generated@@181 $generated@@193 $generated@@194 $generated@@195)) $generated@@196))
 :pattern ( ($generated@@181 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 (type $generated@@200)))
(let (($generated@@202 (type $generated@@198)))
(= (type ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200)) ($generated@@183 $generated@@202 $generated@@201))))
 :pattern ( ($generated@@186 $generated@@197 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 ($generated@@185 (type $generated@@203))))
 (=> (= (type $generated@@206) $generated@@207) (= ($generated@@181 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@204 $generated@@205) $generated@@206)))
 :weight 0
))) (and (and (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@181 ($generated@@186 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@181 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@181 ($generated@@186 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@181 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or true (= ($generated@@181 ($generated@@186 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@181 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@183 $generated@@80 $generated@@4))
 :pattern ( ($generated@@182 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@70 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@80) (= (type $generated@@231) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@232) ($generated@@69 $generated@@4))) (= (type $generated@@234) $generated@@80)) (= (type $generated@@235) ($generated@@69 $generated@@236))) (= ($generated@@0 ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@181 ($generated@@182 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@148)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@67) (= (type $generated@@242) $generated@@67)) (= (type $generated@@243) $generated@@138)) (= (type $generated@@244) $generated@@138)) (= ($generated@@151 ($generated@@237 $generated@@243 $generated@@244) ($generated@@154 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@151 ($generated@@237 $generated@@243 $generated@@244) ($generated@@154 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@148) (= (type $generated@@246) $generated@@148)) (= ($generated@@160 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@160 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@148) (= (type $generated@@249) $generated@@148)) (= ($generated@@247 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@247 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@67)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@79 $generated@@138 $generated@@4)) (= (type $generated@@253) $generated@@67)) (= ($generated@@151 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@138) ($generated@@0 ($generated@@84 $generated@@252 $generated@@254))) ($generated@@238 $generated@@254 $generated@@253))
 :pattern ( ($generated@@84 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@151 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@67)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@79 $generated@@138 $generated@@4)) (= (type $generated@@258) $generated@@67)) (= ($generated@@151 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@138) ($generated@@0 ($generated@@84 $generated@@257 $generated@@259))) ($generated@@238 $generated@@259 $generated@@258))
 :pattern ( ($generated@@84 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@151 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@260 $generated@@261) $generated@@261)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@67) (= (type $generated@@269) $generated@@67)) (= (type $generated@@270) $generated@@138)) (= (type $generated@@271) $generated@@138)) (= (type $generated@@272) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@266 $generated@@272)) (= ($generated@@77 ($generated@@237 $generated@@270 $generated@@271) ($generated@@154 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@77 ($generated@@237 $generated@@270 $generated@@271) ($generated@@154 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@71)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@148) (= ($generated@@153 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@148) (= ($generated@@149 $generated@@276) (= ($generated@@273 $generated@@276) $generated@@63)))
 :pattern ( ($generated@@149 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@148) ($generated@@153 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@138) (= (type $generated@@279) $generated@@138)) (= $generated@@277 ($generated@@237 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@153 $generated@@277))
)))
(assert  (and (and (forall (($generated@@284 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@284)) 18)) (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
))) (forall (($generated@@286 T@T) ) (! (= (type ($generated@@280 $generated@@286)) ($generated@@282 $generated@@286))
 :pattern ( ($generated@@280 $generated@@286))
))))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@287)) 0)
 :pattern ( ($generated@@280 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@138)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@148) (= (type $generated@@291) $generated@@148)) true) (= ($generated@@247 $generated@@290 $generated@@291) (= ($generated@@288 $generated@@290) ($generated@@288 $generated@@291))))
 :pattern ( ($generated@@247 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@148)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@148) ($generated@@149 $generated@@294)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@138) (= $generated@@294 ($generated@@292 $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@149 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@138)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@67) (= (type $generated@@300) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@267 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@77 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@267 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@79 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@82 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@79 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@84 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@72)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@67) (and (= ($generated@@75 ($generated@@177 $generated@@309)) $generated@@64) (= ($generated@@307 ($generated@@177 $generated@@309)) $generated@@66)))
 :pattern ( ($generated@@177 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@79 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 20)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@79 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@84 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@84 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@82 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@79 $generated@@347 $generated@@2)) (= ($generated@@173 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@84 $generated@@346 $generated@@348))) (<= ($generated ($generated@@84 $generated@@346 $generated@@348)) ($generated@@301 $generated@@346))))
 :pattern ( ($generated@@84 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@173 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@314 (type $generated@@349))))
(let (($generated@@351 ($generated@@313 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@312 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@311 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@310 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@314 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@79 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@314 (type $generated@@356))))
(let (($generated@@358 ($generated@@313 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@312 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@311 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@84 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@332 (type $generated@@360))))
(let (($generated@@362 ($generated@@331 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@330 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@329 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@328 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@332 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@79 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@332 (type $generated@@367))))
(let (($generated@@369 ($generated@@331 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@330 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@329 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@84 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@79 $generated@@138 $generated@@2)) (= (type $generated@@372) $generated@@67)) (= ($generated@@151 $generated@@371 ($generated@@172 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@138) (< 0 ($generated ($generated@@84 $generated@@371 $generated@@373)))) ($generated@@238 $generated@@373 $generated@@372))
 :pattern ( ($generated@@84 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@151 $generated@@371 ($generated@@172 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@374) $generated@@67) (= (type $generated@@375) $generated@@138)) (= (type $generated@@376) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@266 $generated@@376)) (= ($generated@@77 ($generated@@292 $generated@@375) ($generated@@177 $generated@@374) $generated@@376) ($generated@@267 $generated@@375 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@77 ($generated@@292 $generated@@375) ($generated@@177 $generated@@374) $generated@@376))
)))
(assert  (=> (<= 0 $generated@@377) (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (and (= (type $generated@@379) $generated@@67) (= (type $generated@@380) $generated@@137)) (= (type $generated@@381) $generated@@138)) (or ($generated@@378 $generated@@379 $generated@@381) (and (not (= 0 $generated@@377)) ($generated@@238 $generated@@381 $generated@@379)))) (= ($generated@@135 $generated@@379 ($generated@@167 $generated@@380) $generated@@381) $generated@@381))
 :pattern ( ($generated@@135 $generated@@379 ($generated@@167 $generated@@380) $generated@@381))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@79 $generated@@138 $generated@@4)) (= (type $generated@@383) $generated@@67)) (= (type $generated@@384) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@382 ($generated@@250 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@138) ($generated@@0 ($generated@@84 $generated@@382 $generated@@385))) ($generated@@267 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@84 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@77 $generated@@382 ($generated@@250 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@79 $generated@@138 $generated@@4)) (= (type $generated@@387) $generated@@67)) (= (type $generated@@388) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@386 ($generated@@255 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@138) ($generated@@0 ($generated@@84 $generated@@386 $generated@@389))) ($generated@@267 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@84 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@77 $generated@@386 ($generated@@255 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@84 ($generated@@302 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@84 ($generated@@302 $generated@@391) $generated@@390)))
)))
(assert  (and (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@392 $generated@@395)) ($generated@@79 $generated@@138 $generated@@4))
 :pattern ( ($generated@@392 $generated@@395))
)) (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@393 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@393 $generated@@396 $generated@@397))
))) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@314 (type $generated@@398))))
(let (($generated@@400 ($generated@@313 (type $generated@@398))))
(= (type ($generated@@394 $generated@@398)) ($generated@@79 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@394 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@312 $generated@@138 $generated@@138)) (= (type $generated@@402) $generated@@138)) (= ($generated@@0 ($generated@@84 ($generated@@392 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@401) ($generated@@161 ($generated@@393 $generated@@148 $generated@@402)))) (= ($generated@@84 ($generated@@394 $generated@@401) ($generated@@161 ($generated@@393 $generated@@148 $generated@@402))) ($generated@@162 ($generated@@393 $generated@@148 $generated@@402))))))
 :pattern ( ($generated@@84 ($generated@@392 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@79 $generated@@138 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@332 (type $generated@@406))))
(let (($generated@@408 ($generated@@331 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@79 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@330 $generated@@138 $generated@@138)) (= (type $generated@@410) $generated@@138)) (= ($generated@@0 ($generated@@84 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@84 ($generated@@328 $generated@@409) ($generated@@161 ($generated@@393 $generated@@148 $generated@@410)))) (= ($generated@@84 ($generated@@404 $generated@@409) ($generated@@161 ($generated@@393 $generated@@148 $generated@@410))) ($generated@@162 ($generated@@393 $generated@@148 $generated@@410))))))
 :pattern ( ($generated@@84 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@313 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@312 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@84 ($generated@@353 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@84 ($generated@@394 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@411) $generated@@415))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@84 ($generated@@353 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@331 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@330 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@84 ($generated@@364 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@84 ($generated@@328 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@84 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@416) $generated@@420))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@84 ($generated@@364 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@312 $generated@@138 $generated@@138)) (= (type $generated@@425) $generated@@67)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@138) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@424) $generated@@428))) (and ($generated@@267 ($generated@@84 ($generated@@394 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@267 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@424) $generated@@428))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@77 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@330 $generated@@138 $generated@@138)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) $generated@@67)) (= (type $generated@@435) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@138) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@432) $generated@@436))) (and ($generated@@267 ($generated@@84 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@267 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@77 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@79 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@332 (type $generated@@439))))
(let (($generated@@441 ($generated@@331 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@330 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@329 $generated@@441 $generated@@440)) (= ($generated@@328 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@328 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@332 (type $generated@@442))))
(let (($generated@@444 ($generated@@331 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@330 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@329 $generated@@444 $generated@@443)) (= ($generated@@364 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@364 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@332 (type $generated@@445))))
(let (($generated@@447 ($generated@@331 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@330 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@329 $generated@@447 $generated@@446)) (= ($generated@@403 $generated@@445) ($generated@@437 $generated@@138))))))
 :pattern ( ($generated@@403 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@314 (type $generated@@448))))
(let (($generated@@450 ($generated@@313 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@312 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@311 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@138) (= (type $generated@@452) $generated@@138)) ($generated@@0 ($generated@@84 ($generated@@392 $generated@@448) ($generated@@296 ($generated@@237 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@392 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@332 (type $generated@@453))))
(let (($generated@@455 ($generated@@331 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@330 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@329 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@138) (= (type $generated@@457) $generated@@138)) ($generated@@0 ($generated@@84 ($generated@@403 $generated@@453) ($generated@@296 ($generated@@237 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@403 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@138) ($generated@@238 $generated@@458 $generated@@46)) (and (= ($generated@@296 ($generated@@393 $generated@@2 $generated@@458)) $generated@@458) ($generated@@151 ($generated@@393 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@138) ($generated@@238 $generated@@459 $generated@@47)) (and (= ($generated@@296 ($generated@@393 $generated@@3 $generated@@459)) $generated@@459) ($generated@@151 ($generated@@393 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@138) ($generated@@238 $generated@@460 $generated@@44)) (and (= ($generated@@296 ($generated@@393 $generated@@4 $generated@@460)) $generated@@460) ($generated@@151 ($generated@@393 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 21))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@138) ($generated@@238 $generated@@462 $generated@@45)) (and (= ($generated@@296 ($generated@@393 $generated@@461 $generated@@462)) $generated@@462) ($generated@@151 ($generated@@393 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@67) (= ($generated@@238 ($generated@@296 $generated@@463) $generated@@464) ($generated@@151 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@238 ($generated@@296 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@82 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@79 $generated@@466 $generated@@2)) (<= 0 ($generated@@301 $generated@@465))))
 :pattern ( ($generated@@301 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@283 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@282 $generated@@468)) (<= 0 ($generated@@281 $generated@@467))))
 :pattern ( ($generated@@281 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@67) (= (type $generated@@472) $generated@@67)) (= ($generated@@469 ($generated@@421 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@421 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@421 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@421 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@75 ($generated@@421 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@479 ($generated@@429 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@429 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@429 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@429 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@75 ($generated@@429 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@138) (= (type $generated@@490) $generated@@138)) (= ($generated@@273 ($generated@@237 $generated@@489 $generated@@490)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@491 ($generated@@154 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@154 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@154 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@154 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@138) (= (type $generated@@500) $generated@@138)) (= ($generated@@161 ($generated@@237 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@237 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@138) (= (type $generated@@502) $generated@@138)) (= ($generated@@162 ($generated@@237 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@237 $generated@@501 $generated@@502))
)))
(assert  (and (forall (($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@505))
)) (forall (($generated@@506 T@U) ($generated@@507 Int) ) (! (let (($generated@@508 ($generated@@283 (type $generated@@506))))
(= (type ($generated@@504 $generated@@506 $generated@@507)) $generated@@508))
 :pattern ( ($generated@@504 $generated@@506 $generated@@507))
))))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@282 $generated@@138)) (= (type $generated@@510) $generated@@67)) (= (type $generated@@511) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@509 ($generated@@503 $generated@@510) $generated@@511) (forall (($generated@@512 Int) ) (!  (=> (and (<= 0 $generated@@512) (< $generated@@512 ($generated@@281 $generated@@509))) ($generated@@267 ($generated@@504 $generated@@509 $generated@@512) $generated@@510 $generated@@511))
 :pattern ( ($generated@@504 $generated@@509 $generated@@512))
))))
 :pattern ( ($generated@@77 $generated@@509 ($generated@@503 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@514 Int) ) (! (= ($generated@@513 ($generated@@78 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@78 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@67)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@515 ($generated@@250 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@250 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@75 ($generated@@250 $generated@@518)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@255 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@255 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@75 ($generated@@255 $generated@@522)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@172 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@172 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@75 ($generated@@172 $generated@@526)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@527 ($generated@@503 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@503 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@75 ($generated@@503 $generated@@530)) $generated@@57))
 :pattern ( ($generated@@503 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@138) (= ($generated@@273 ($generated@@292 $generated@@531)) $generated@@63))
 :pattern ( ($generated@@292 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@532 ($generated@@177 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@177 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@138) (= ($generated@@288 ($generated@@292 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@292 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
(= ($generated@@393 $generated@@537 ($generated@@296 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@296 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@312 $generated@@138 $generated@@138)) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@67)) (= ($generated@@151 $generated@@538 ($generated@@421 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@138) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@538) $generated@@541))) (and ($generated@@238 ($generated@@84 ($generated@@394 $generated@@538) $generated@@541) $generated@@540) ($generated@@238 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@538) $generated@@541))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@151 $generated@@538 ($generated@@421 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@330 $generated@@138 $generated@@138)) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) $generated@@67)) (= ($generated@@151 $generated@@542 ($generated@@429 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@138) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@542) $generated@@545))) (and ($generated@@238 ($generated@@84 ($generated@@404 $generated@@542) $generated@@545) $generated@@544) ($generated@@238 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@542) $generated@@545))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@151 $generated@@542 ($generated@@429 $generated@@543 $generated@@544)))
)))
(assert  (=> (<= 0 $generated@@377) (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@67) (= (type $generated@@547) $generated@@137)) (= (type $generated@@548) $generated@@138)) (or ($generated@@378 $generated@@546 ($generated@@262 $generated@@548)) (and (not (= 0 $generated@@377)) ($generated@@238 $generated@@548 $generated@@546)))) (= ($generated@@135 $generated@@546 ($generated@@167 $generated@@547) ($generated@@262 $generated@@548)) ($generated@@262 $generated@@548)))
 :weight 3
 :pattern ( ($generated@@135 $generated@@546 ($generated@@167 $generated@@547) ($generated@@262 $generated@@548)))
))))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@67) (= (type $generated@@550) $generated@@138)) (= ($generated@@151 ($generated@@292 $generated@@550) ($generated@@177 $generated@@549)) ($generated@@238 $generated@@550 $generated@@549)))
 :pattern ( ($generated@@151 ($generated@@292 $generated@@550) ($generated@@177 $generated@@549)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@138) (= (type $generated@@554) $generated@@138)) (< ($generated@@551 $generated@@553) ($generated@@552 ($generated@@237 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@237 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@138) (= (type $generated@@556) $generated@@138)) (< ($generated@@551 $generated@@556) ($generated@@552 ($generated@@237 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@237 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@138) (= (type $generated@@558) $generated@@67)) (= (type $generated@@559) $generated@@67)) ($generated@@238 $generated@@557 ($generated@@421 $generated@@558 $generated@@559))) (and (= ($generated@@296 ($generated@@393 ($generated@@312 $generated@@138 $generated@@138) $generated@@557)) $generated@@557) ($generated@@151 ($generated@@393 ($generated@@312 $generated@@138 $generated@@138) $generated@@557) ($generated@@421 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@238 $generated@@557 ($generated@@421 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@138) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) $generated@@67)) ($generated@@238 $generated@@560 ($generated@@429 $generated@@561 $generated@@562))) (and (= ($generated@@296 ($generated@@393 ($generated@@330 $generated@@138 $generated@@138) $generated@@560)) $generated@@560) ($generated@@151 ($generated@@393 ($generated@@330 $generated@@138 $generated@@138) $generated@@560) ($generated@@429 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@238 $generated@@560 ($generated@@429 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@67) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) $generated@@138)) ($generated@@238 $generated@@565 ($generated@@154 $generated@@563 $generated@@564))) (and (= ($generated@@296 ($generated@@393 $generated@@148 $generated@@565)) $generated@@565) ($generated@@151 ($generated@@393 $generated@@148 $generated@@565) ($generated@@154 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@238 $generated@@565 ($generated@@154 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@138) (< ($generated@@551 $generated@@566) ($generated@@552 ($generated@@292 $generated@@566))))
 :pattern ( ($generated@@292 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@148) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@266 $generated@@569) (and ($generated@@149 $generated@@567) ($generated@@77 $generated@@567 ($generated@@177 $generated@@568) $generated@@569)))) ($generated@@267 ($generated@@288 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@267 ($generated@@288 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@84 ($generated@@437 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@84 ($generated@@437 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@67) (= (type $generated@@573) $generated@@67)) (and (= ($generated@@75 ($generated@@154 $generated@@572 $generated@@573)) $generated@@62) (= ($generated@@307 ($generated@@154 $generated@@572 $generated@@573)) $generated@@65)))
 :pattern ( ($generated@@154 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@148) (= ($generated@@551 ($generated@@296 $generated@@574)) ($generated@@552 $generated@@574)))
 :pattern ( ($generated@@551 ($generated@@296 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@138) ($generated@@238 $generated@@575 ($generated@@78 0))) (and (= ($generated@@296 ($generated@@393 $generated@@2 $generated@@575)) $generated@@575) ($generated@@151 ($generated@@393 ($generated@@79 $generated@@138 $generated@@4) $generated@@575) ($generated@@78 0))))
 :pattern ( ($generated@@238 $generated@@575 ($generated@@78 0)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@138) (= (type $generated@@577) $generated@@67)) ($generated@@238 $generated@@576 ($generated@@250 $generated@@577))) (and (= ($generated@@296 ($generated@@393 ($generated@@79 $generated@@138 $generated@@4) $generated@@576)) $generated@@576) ($generated@@151 ($generated@@393 ($generated@@79 $generated@@138 $generated@@4) $generated@@576) ($generated@@250 $generated@@577))))
 :pattern ( ($generated@@238 $generated@@576 ($generated@@250 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@138) (= (type $generated@@579) $generated@@67)) ($generated@@238 $generated@@578 ($generated@@255 $generated@@579))) (and (= ($generated@@296 ($generated@@393 ($generated@@79 $generated@@138 $generated@@4) $generated@@578)) $generated@@578) ($generated@@151 ($generated@@393 ($generated@@79 $generated@@138 $generated@@4) $generated@@578) ($generated@@255 $generated@@579))))
 :pattern ( ($generated@@238 $generated@@578 ($generated@@255 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@138) (= (type $generated@@581) $generated@@67)) ($generated@@238 $generated@@580 ($generated@@172 $generated@@581))) (and (= ($generated@@296 ($generated@@393 ($generated@@79 $generated@@138 $generated@@2) $generated@@580)) $generated@@580) ($generated@@151 ($generated@@393 ($generated@@79 $generated@@138 $generated@@2) $generated@@580) ($generated@@172 $generated@@581))))
 :pattern ( ($generated@@238 $generated@@580 ($generated@@172 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@138) (= (type $generated@@583) $generated@@67)) ($generated@@238 $generated@@582 ($generated@@503 $generated@@583))) (and (= ($generated@@296 ($generated@@393 ($generated@@282 $generated@@138) $generated@@582)) $generated@@582) ($generated@@151 ($generated@@393 ($generated@@282 $generated@@138) $generated@@582) ($generated@@503 $generated@@583))))
 :pattern ( ($generated@@238 $generated@@582 ($generated@@503 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@67) (= (type $generated@@585) $generated@@138)) ($generated@@238 $generated@@585 ($generated@@177 $generated@@584))) (and (= ($generated@@296 ($generated@@393 $generated@@148 $generated@@585)) $generated@@585) ($generated@@151 ($generated@@393 $generated@@148 $generated@@585) ($generated@@177 $generated@@584))))
 :pattern ( ($generated@@238 $generated@@585 ($generated@@177 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@79 $generated@@138 $generated@@2)) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@586 ($generated@@172 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@138) (< 0 ($generated ($generated@@84 $generated@@586 $generated@@589)))) ($generated@@267 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@84 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@77 $generated@@586 ($generated@@172 $generated@@587) $generated@@588))
)))
(assert  (=> (<= 0 $generated@@377) (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@67) (= (type $generated@@591) $generated@@137)) (= (type $generated@@592) $generated@@138)) (or ($generated@@378 $generated@@590 $generated@@592) (and (not (= 0 $generated@@377)) ($generated@@238 $generated@@592 $generated@@590)))) ($generated@@238 ($generated@@135 $generated@@590 $generated@@591 $generated@@592) $generated@@590))
 :pattern ( ($generated@@135 $generated@@590 $generated@@591 $generated@@592))
))))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@148) (= (type $generated@@594) $generated@@67)) (= (type $generated@@595) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@266 $generated@@595) (and ($generated@@153 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@67) ($generated@@77 $generated@@593 ($generated@@154 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@77 $generated@@593 ($generated@@154 $generated@@594 $generated@@596) $generated@@595))
))))) ($generated@@267 ($generated@@161 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@267 ($generated@@161 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@148) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@266 $generated@@599) (and ($generated@@153 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@67) ($generated@@77 $generated@@597 ($generated@@154 $generated@@600 $generated@@598) $generated@@599))
 :pattern ( ($generated@@77 $generated@@597 ($generated@@154 $generated@@600 $generated@@598) $generated@@599))
))))) ($generated@@267 ($generated@@162 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@267 ($generated@@162 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@138) (= (type $generated@@602) $generated@@138)) (= ($generated@@237 ($generated@@262 $generated@@601) ($generated@@262 $generated@@602)) ($generated@@262 ($generated@@237 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@237 ($generated@@262 $generated@@601) ($generated@@262 $generated@@602)))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@260 $generated@@603))) ($generated@@262 ($generated@@296 ($generated@@8 $generated@@603))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@260 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@138) (= ($generated@@292 ($generated@@262 $generated@@604)) ($generated@@262 ($generated@@292 $generated@@604))))
 :pattern ( ($generated@@292 ($generated@@262 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (= ($generated@@296 ($generated@@262 $generated@@605)) ($generated@@262 ($generated@@296 $generated@@605)))
 :pattern ( ($generated@@296 ($generated@@262 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@283 (type $generated@@606))))
 (=> (and (= (type $generated@@606) ($generated@@282 $generated@@607)) (= ($generated@@281 $generated@@606) 0)) (= $generated@@606 ($generated@@280 $generated@@607))))
 :pattern ( ($generated@@281 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@609)))
 (=> (and (and (= (type $generated@@608) ($generated@@79 $generated@@611 $generated@@2)) (= (type $generated@@610) $generated@@2)) (<= 0 ($generated $generated@@610))) (= ($generated@@301 ($generated@@85 $generated@@608 $generated@@609 $generated@@610)) (+ (- ($generated@@301 $generated@@608) ($generated ($generated@@84 $generated@@608 $generated@@609))) ($generated $generated@@610)))))
 :pattern ( ($generated@@301 ($generated@@85 $generated@@608 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@613) $generated@@2)) ($generated@@77 $generated@@613 $generated@@46 $generated@@612))
 :pattern ( ($generated@@77 $generated@@613 $generated@@46 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@615) $generated@@3)) ($generated@@77 $generated@@615 $generated@@47 $generated@@614))
 :pattern ( ($generated@@77 $generated@@615 $generated@@47 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@617) $generated@@4)) ($generated@@77 $generated@@617 $generated@@44 $generated@@616))
 :pattern ( ($generated@@77 $generated@@617 $generated@@44 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@619) $generated@@461)) ($generated@@77 $generated@@619 $generated@@45 $generated@@618))
 :pattern ( ($generated@@77 $generated@@619 $generated@@45 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@621) $generated@@138)) ($generated@@77 $generated@@621 $generated@@48 $generated@@620))
 :pattern ( ($generated@@77 $generated@@621 $generated@@48 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@282 $generated@@138)) (= (type $generated@@623) $generated@@67)) (= ($generated@@151 $generated@@622 ($generated@@503 $generated@@623)) (forall (($generated@@624 Int) ) (!  (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@281 $generated@@622))) ($generated@@238 ($generated@@504 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@504 $generated@@622 $generated@@624))
))))
 :pattern ( ($generated@@151 $generated@@622 ($generated@@503 $generated@@623)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@282 $generated@@138)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@281 $generated@@626))) (< ($generated@@552 ($generated@@393 $generated@@148 ($generated@@504 $generated@@626 $generated@@627))) ($generated@@625 $generated@@626))))
 :pattern ( ($generated@@552 ($generated@@393 $generated@@148 ($generated@@504 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@312 $generated@@138 $generated@@138)) (= (type $generated@@629) $generated@@67)) (= (type $generated@@630) $generated@@67)) ($generated@@151 $generated@@628 ($generated@@421 $generated@@629 $generated@@630))) (and (and ($generated@@151 ($generated@@310 $generated@@628) ($generated@@250 $generated@@629)) ($generated@@151 ($generated@@353 $generated@@628) ($generated@@250 $generated@@630))) ($generated@@151 ($generated@@392 $generated@@628) ($generated@@250 ($generated@@154 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@151 $generated@@628 ($generated@@421 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@330 $generated@@138 $generated@@138)) (= (type $generated@@632) $generated@@67)) (= (type $generated@@633) $generated@@67)) ($generated@@151 $generated@@631 ($generated@@429 $generated@@632 $generated@@633))) (and (and ($generated@@151 ($generated@@328 $generated@@631) ($generated@@255 $generated@@632)) ($generated@@151 ($generated@@364 $generated@@631) ($generated@@255 $generated@@633))) ($generated@@151 ($generated@@403 $generated@@631) ($generated@@255 ($generated@@154 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@151 $generated@@631 ($generated@@429 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@151 $generated@@634 $generated@@46))
 :pattern ( ($generated@@151 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@151 $generated@@635 $generated@@47))
 :pattern ( ($generated@@151 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@151 $generated@@636 $generated@@44))
 :pattern ( ($generated@@151 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@461) ($generated@@151 $generated@@637 $generated@@45))
 :pattern ( ($generated@@151 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@138) ($generated@@151 $generated@@638 $generated@@48))
 :pattern ( ($generated@@151 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@639) $generated@@137) (= (type $generated@@640) $generated@@137)) (= (type $generated@@641) $generated@@137)) (= (type $generated@@642) $generated@@137)) (= (type $generated@@643) $generated@@137)) (= (type $generated@@644) $generated@@137)) (= (type $generated@@645) $generated@@137)) (= (type $generated@@646) $generated@@137)) (= (type $generated@@647) $generated@@137)) (= (type $generated@@648) $generated@@137)) (= (type $generated@@649) $generated@@137)) (= (type $generated@@650) $generated@@137)) (= (type $generated@@651) $generated@@137)) (= (type $generated@@652) $generated@@137)) (= (type $generated@@653) $generated@@137)) (= (type $generated@@654) $generated@@137)) (= (type $generated@@655) $generated@@137)) (= (type $generated@@656) $generated@@137)) (= (type $generated@@657) $generated@@137)) (= (type $generated@@658) $generated@@137)) (= (type $generated@@659) $generated@@137)) (= (type $generated@@660) $generated@@137)) (= (type $generated@@661) $generated@@137)) (= (type $generated@@662) $generated@@137)) (= (type $generated@@663) $generated@@137)) (= (type $generated@@664) $generated@@137)) (= (type $generated@@665) $generated@@137)) (= (type $generated@@666) $generated@@137)) (= (type $generated@@667) ($generated@@183 $generated@@80 $generated@@4))) (= (type $generated@@668) $generated@@80)) (= (type $generated@@669) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@670) $generated@@148)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@672  (=> (= ($generated@@136 $generated@@639) $generated@@639) (=> (and (and (= ($generated@@136 $generated@@640) $generated@@640) (= ($generated@@136 $generated@@641) $generated@@641)) (and (= ($generated@@136 $generated@@642) $generated@@642) (= ($generated@@136 $generated@@643) $generated@@643))) (=> (and (and (and (and (and (= ($generated@@136 $generated@@644) $generated@@644) (= ($generated@@136 $generated@@645) $generated@@645)) (and (= ($generated@@136 $generated@@646) $generated@@646) (= ($generated@@136 $generated@@647) $generated@@647))) (and (and (= ($generated@@136 $generated@@648) $generated@@648) (= ($generated@@136 $generated@@649) $generated@@649)) (and (= ($generated@@136 $generated@@650) $generated@@650) (= ($generated@@136 $generated@@651) $generated@@651)))) (and (and (and (= ($generated@@136 $generated@@652) $generated@@652) (= ($generated@@136 $generated@@653) $generated@@653)) (and (= ($generated@@136 $generated@@654) $generated@@654) (= ($generated@@136 $generated@@655) $generated@@655))) (and (and (= ($generated@@136 $generated@@656) $generated@@656) (= ($generated@@136 $generated@@657) $generated@@657)) (and (= ($generated@@136 $generated@@658) $generated@@658) (= ($generated@@136 $generated@@659) $generated@@659))))) (and (and (and (and (= ($generated@@136 $generated@@660) $generated@@660) (= ($generated@@136 $generated@@661) $generated@@661)) (and (= ($generated@@136 $generated@@662) $generated@@662) (= ($generated@@136 $generated@@663) $generated@@663))) (and (and (= ($generated@@136 $generated@@664) $generated@@664) (= ($generated@@136 $generated@@665) $generated@@665)) (and (= ($generated@@136 $generated@@666) $generated@@666) (= $generated@@667 ($generated@@182 $generated@@668 $generated@@669 $generated@@60 false))))) (and (and (and (= $generated@@670 ($generated@@262 ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1)))))) ($generated@@77 $generated@@670 ($generated@@177 $generated@@46) $generated@@669)) (and ($generated@@378 ($generated@@177 $generated@@46) ($generated@@296 ($generated@@262 ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1))))))) ($generated@@149 ($generated@@393 $generated@@148 ($generated@@135 ($generated@@177 $generated@@46) $generated@@661 ($generated@@296 ($generated@@262 ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1))))))))))) (and (and ($generated@@147 ($generated@@393 $generated@@148 ($generated@@135 ($generated@@177 $generated@@46) $generated@@661 ($generated@@296 ($generated@@262 ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1))))))))) ($generated@@378 ($generated@@177 $generated@@46) ($generated@@296 ($generated@@262 ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1)))))))) (= (ControlFlow 0 2) (- 0 1)))))) ($generated@@247 ($generated@@393 $generated@@148 ($generated@@135 ($generated@@177 $generated@@46) $generated@@662 ($generated@@296 ($generated@@262 ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1)))))))) ($generated@@292 ($generated@@296 ($generated@@8 ($generated@@260 1))))))))))
(let (($generated@@673  (=> (and (and ($generated@@266 $generated@@669) ($generated@@671 $generated@@669)) (and (= 1 $generated@@377) (= (ControlFlow 0 3) 2))) $generated@@672)))
$generated@@673)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
