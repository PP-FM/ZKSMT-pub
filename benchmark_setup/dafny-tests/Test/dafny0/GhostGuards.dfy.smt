(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U T@U) Bool)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@U Int) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@68) (= (type $generated@@148) $generated@@68)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@72)
 :pattern ( ($generated@@158 $generated@@160))
)) (= (type $generated@@159) $generated@@144)))
(assert (= ($generated@@158 $generated@@159) $generated@@63))
(assert (= (type $generated@@161) $generated@@144))
(assert (= ($generated@@158 $generated@@161) $generated@@65))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@68)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@166) $generated@@68)) ($generated@@140 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@140 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@81 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@71 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@81) (= (type $generated@@217) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@218) ($generated@@70 $generated@@4))) (= (type $generated@@220) $generated@@81)) (= (type $generated@@221) ($generated@@70 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@144)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@68) (= (type $generated@@228) $generated@@68)) (= (type $generated@@229) $generated@@153)) (= (type $generated@@230) $generated@@153)) (= ($generated@@140 ($generated@@223 $generated@@229 $generated@@230) ($generated@@143 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@140 ($generated@@223 $generated@@229 $generated@@230) ($generated@@143 $generated@@227 $generated@@228)))
)))
(assert (= (type $generated@@231) $generated@@68))
(assert ($generated@@140 $generated@@159 $generated@@231))
(assert ($generated@@140 $generated@@161 $generated@@231))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@232 $generated@@233)) ($generated@@78 $generated@@159 $generated@@231 $generated@@233))
 :pattern ( ($generated@@78 $generated@@159 $generated@@231 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@232 $generated@@234)) ($generated@@78 $generated@@161 $generated@@231 $generated@@234))
 :pattern ( ($generated@@78 $generated@@161 $generated@@231 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@144) (= (type $generated@@236) $generated@@144)) (= ($generated@@150 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@150 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@144) (= (type $generated@@239) $generated@@144)) (= ($generated@@237 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@237 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@68)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@243) $generated@@68)) (= ($generated@@140 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@153) ($generated@@0 ($generated@@85 $generated@@242 $generated@@244))) ($generated@@224 $generated@@244 $generated@@243))
 :pattern ( ($generated@@85 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@140 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@68)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@248) $generated@@68)) (= ($generated@@140 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@153) ($generated@@0 ($generated@@85 $generated@@247 $generated@@249))) ($generated@@224 $generated@@249 $generated@@248))
 :pattern ( ($generated@@85 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@140 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@144) (= (type $generated@@256) $generated@@144)) (and ($generated@@254 $generated@@255) ($generated@@254 $generated@@256))) (= ($generated@@237 $generated@@255 $generated@@256) true))
 :pattern ( ($generated@@237 $generated@@255 $generated@@256) ($generated@@254 $generated@@255))
 :pattern ( ($generated@@237 $generated@@255 $generated@@256) ($generated@@254 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) $generated@@144) (= (type $generated@@259) $generated@@144)) (and ($generated@@257 $generated@@258) ($generated@@257 $generated@@259))) (= ($generated@@237 $generated@@258 $generated@@259) true))
 :pattern ( ($generated@@237 $generated@@258 $generated@@259) ($generated@@257 $generated@@258))
 :pattern ( ($generated@@237 $generated@@258 $generated@@259) ($generated@@257 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@68) (= (type $generated@@262) $generated@@68)) (= (type $generated@@263) $generated@@153)) (= (type $generated@@264) $generated@@153)) (= (type $generated@@265) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@232 $generated@@265)) (= ($generated@@78 ($generated@@223 $generated@@263 $generated@@264) ($generated@@143 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@78 ($generated@@223 $generated@@263 $generated@@264) ($generated@@143 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@144) (= ($generated@@142 $generated@@266) (= ($generated@@158 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@144) (= ($generated@@254 $generated@@267) (= ($generated@@158 $generated@@267) $generated@@63)))
 :pattern ( ($generated@@254 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@144) (= ($generated@@257 $generated@@268) (= ($generated@@158 $generated@@268) $generated@@65)))
 :pattern ( ($generated@@257 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@144) ($generated@@142 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@153) (= (type $generated@@271) $generated@@153)) (= $generated@@269 ($generated@@223 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@142 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@144) ($generated@@254 $generated@@280)) (= $generated@@280 $generated@@159))
 :pattern ( ($generated@@254 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@144) ($generated@@257 $generated@@281)) (= $generated@@281 $generated@@161))
 :pattern ( ($generated@@257 $generated@@281))
)))
(assert ($generated@@282 $generated@@60))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@153)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@68) (= (type $generated@@287) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@260 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@78 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@260 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@289) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@290) $generated@@153)) (= (type $generated@@291) $generated@@68)) ($generated@@136 $generated@@288 $generated@@289)) ($generated@@260 $generated@@290 $generated@@291 $generated@@288)) ($generated@@260 $generated@@290 $generated@@291 $generated@@289))
 :pattern ( ($generated@@136 $generated@@288 $generated@@289) ($generated@@260 $generated@@290 $generated@@291 $generated@@288))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@295) $generated@@68)) ($generated@@136 $generated@@292 $generated@@293)) ($generated@@78 $generated@@294 $generated@@295 $generated@@292)) ($generated@@78 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@136 $generated@@292 $generated@@293) ($generated@@78 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@80 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@83 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@80 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@85 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@80 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@85 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@85 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@80 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@85 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@85 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@340) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@338 $generated@@339 $generated@@340)) (and ($generated@@136 $generated@@339 $generated@@340) (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@71 (type $generated@@342))))
 (=> (and (and (= (type $generated@@341) $generated@@81) (= (type $generated@@342) ($generated@@70 $generated@@343))) (not ($generated@@282 $generated@@342))) (= ($generated@@87 ($generated@@85 $generated@@339 $generated@@341) $generated@@342) ($generated@@87 ($generated@@85 $generated@@340 $generated@@341) $generated@@342))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@340 $generated@@341) $generated@@342))
))))
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@83 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@80 $generated@@345 $generated@@2)) (= ($generated@@163 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (and (<= 0 ($generated ($generated@@85 $generated@@344 $generated@@346))) (<= ($generated ($generated@@85 $generated@@344 $generated@@346)) ($generated@@296 $generated@@344))))
 :pattern ( ($generated@@85 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@163 $generated@@344))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@153) ($generated@@224 $generated@@350 $generated@@231)) (and (= ($generated@@283 ($generated@@347 $generated@@144 $generated@@350)) $generated@@350) ($generated@@140 ($generated@@347 $generated@@144 $generated@@350) $generated@@231)))
 :pattern ( ($generated@@224 $generated@@350 $generated@@231))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@306 (type $generated@@351))))
(let (($generated@@353 ($generated@@305 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@304 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@303 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@302 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@302 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@306 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@306 (type $generated@@358))))
(let (($generated@@360 ($generated@@305 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@304 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@303 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@324 (type $generated@@362))))
(let (($generated@@364 ($generated@@323 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@322 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@321 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@320 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@324 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@324 (type $generated@@369))))
(let (($generated@@371 ($generated@@323 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@322 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@321 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@374) $generated@@68)) (= ($generated@@140 $generated@@373 ($generated@@162 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@373 $generated@@375)))) ($generated@@224 $generated@@375 $generated@@374))
 :pattern ( ($generated@@85 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@140 $generated@@373 ($generated@@162 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@377) $generated@@68)) (= (type $generated@@378) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@376 ($generated@@240 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@153) ($generated@@0 ($generated@@85 $generated@@376 $generated@@379))) ($generated@@260 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@78 $generated@@376 ($generated@@240 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@381) $generated@@68)) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@380 ($generated@@245 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@153) ($generated@@0 ($generated@@85 $generated@@380 $generated@@383))) ($generated@@260 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@85 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@245 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@85 ($generated@@297 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@85 ($generated@@297 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@306 (type $generated@@389))))
(let (($generated@@391 ($generated@@305 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@80 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@304 $generated@@153 $generated@@153)) (= (type $generated@@393) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@85 ($generated@@302 $generated@@392) ($generated@@151 ($generated@@347 $generated@@144 $generated@@393)))) (= ($generated@@85 ($generated@@387 $generated@@392) ($generated@@151 ($generated@@347 $generated@@144 $generated@@393))) ($generated@@152 ($generated@@347 $generated@@144 $generated@@393))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@324 (type $generated@@397))))
(let (($generated@@399 ($generated@@323 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@80 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@322 $generated@@153 $generated@@153)) (= (type $generated@@401) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@85 ($generated@@320 $generated@@400) ($generated@@151 ($generated@@347 $generated@@144 $generated@@401)))) (= ($generated@@85 ($generated@@395 $generated@@400) ($generated@@151 ($generated@@347 $generated@@144 $generated@@401))) ($generated@@152 ($generated@@347 $generated@@144 $generated@@401))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@305 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@304 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@85 ($generated@@355 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@85 ($generated@@302 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@85 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@85 ($generated@@302 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@323 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@322 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@320 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@304 $generated@@153 $generated@@153)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@302 $generated@@415) $generated@@419))) (and ($generated@@260 ($generated@@85 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@260 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@302 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@68)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@322 $generated@@153 $generated@@153)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@423) $generated@@427))) (and ($generated@@260 ($generated@@85 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@260 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@144) ($generated@@140 $generated@@428 $generated@@231)) (or ($generated@@254 $generated@@428) ($generated@@257 $generated@@428)))
 :pattern ( ($generated@@257 $generated@@428) ($generated@@140 $generated@@428 $generated@@231))
 :pattern ( ($generated@@254 $generated@@428) ($generated@@140 $generated@@428 $generated@@231))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@430) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@429 $generated@@431))) (and ($generated@@136 $generated@@429 $generated@@430) ($generated@@136 $generated@@430 $generated@@431))) ($generated@@136 $generated@@429 $generated@@431))
 :pattern ( ($generated@@136 $generated@@429 $generated@@430) ($generated@@136 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@80 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@324 (type $generated@@434))))
(let (($generated@@436 ($generated@@323 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@322 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@321 $generated@@436 $generated@@435)) (= ($generated@@320 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@320 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@324 (type $generated@@437))))
(let (($generated@@439 ($generated@@323 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@322 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@321 $generated@@439 $generated@@438)) (= ($generated@@366 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@366 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@324 (type $generated@@440))))
(let (($generated@@442 ($generated@@323 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@322 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@321 $generated@@442 $generated@@441)) (= ($generated@@394 $generated@@440) ($generated@@432 $generated@@153))))))
 :pattern ( ($generated@@394 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@306 (type $generated@@443))))
(let (($generated@@445 ($generated@@305 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@304 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@303 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@153) (= (type $generated@@447) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@443) ($generated@@283 ($generated@@223 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@386 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@324 (type $generated@@448))))
(let (($generated@@450 ($generated@@323 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@322 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@321 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@153) (= (type $generated@@452) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@448) ($generated@@283 ($generated@@223 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@394 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@153) ($generated@@224 $generated@@453 $generated@@46)) (and (= ($generated@@283 ($generated@@347 $generated@@2 $generated@@453)) $generated@@453) ($generated@@140 ($generated@@347 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@153) ($generated@@224 $generated@@454 $generated@@47)) (and (= ($generated@@283 ($generated@@347 $generated@@3 $generated@@454)) $generated@@454) ($generated@@140 ($generated@@347 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@153) ($generated@@224 $generated@@455 $generated@@44)) (and (= ($generated@@283 ($generated@@347 $generated@@4 $generated@@455)) $generated@@455) ($generated@@140 ($generated@@347 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 20))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@153) ($generated@@224 $generated@@457 $generated@@45)) (and (= ($generated@@283 ($generated@@347 $generated@@456 $generated@@457)) $generated@@457) ($generated@@140 ($generated@@347 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@68) (= ($generated@@224 ($generated@@283 $generated@@458) $generated@@459) ($generated@@140 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@224 ($generated@@283 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@83 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@80 $generated@@461 $generated@@2)) (<= 0 ($generated@@296 $generated@@460))))
 :pattern ( ($generated@@296 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@275 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@274 $generated@@463)) (<= 0 ($generated@@273 $generated@@462))))
 :pattern ( ($generated@@273 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@468 ($generated@@412 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@76 ($generated@@412 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@478 ($generated@@420 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@76 ($generated@@420 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@153) (= (type $generated@@485) $generated@@153)) (= ($generated@@158 ($generated@@223 $generated@@484 $generated@@485)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@143 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@143 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@143 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@143 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@153) (= (type $generated@@495) $generated@@153)) (= ($generated@@151 ($generated@@223 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@223 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@153) (= (type $generated@@497) $generated@@153)) (= ($generated@@152 ($generated@@223 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@223 $generated@@496 $generated@@497))
)))
(assert  (and (forall (($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@500))
)) (forall (($generated@@501 T@U) ($generated@@502 Int) ) (! (let (($generated@@503 ($generated@@275 (type $generated@@501))))
(= (type ($generated@@499 $generated@@501 $generated@@502)) $generated@@503))
 :pattern ( ($generated@@499 $generated@@501 $generated@@502))
))))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@274 $generated@@153)) (= (type $generated@@505) $generated@@68)) (= (type $generated@@506) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@504 ($generated@@498 $generated@@505) $generated@@506) (forall (($generated@@507 Int) ) (!  (=> (and (<= 0 $generated@@507) (< $generated@@507 ($generated@@273 $generated@@504))) ($generated@@260 ($generated@@499 $generated@@504 $generated@@507) $generated@@505 $generated@@506))
 :pattern ( ($generated@@499 $generated@@504 $generated@@507))
))))
 :pattern ( ($generated@@78 $generated@@504 ($generated@@498 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@509 Int) ) (! (= ($generated@@508 ($generated@@79 $generated@@509)) $generated@@509)
 :pattern ( ($generated@@79 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@68) (= ($generated@@510 ($generated@@240 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@240 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@76 ($generated@@240 $generated@@513)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@514 ($generated@@245 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@245 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@76 ($generated@@245 $generated@@517)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@518 ($generated@@162 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@162 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@76 ($generated@@162 $generated@@521)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@68) (= ($generated@@522 ($generated@@498 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@498 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@76 ($generated@@498 $generated@@525)) $generated@@57))
 :pattern ( ($generated@@498 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
(= ($generated@@347 $generated@@527 ($generated@@283 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@283 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@304 $generated@@153 $generated@@153)) (= (type $generated@@529) $generated@@68)) (= (type $generated@@530) $generated@@68)) (= ($generated@@140 $generated@@528 ($generated@@412 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@302 $generated@@528) $generated@@531))) (and ($generated@@224 ($generated@@85 ($generated@@387 $generated@@528) $generated@@531) $generated@@530) ($generated@@224 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@528) $generated@@531))
 :pattern ( ($generated@@85 ($generated@@302 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@140 $generated@@528 ($generated@@412 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@322 $generated@@153 $generated@@153)) (= (type $generated@@533) $generated@@68)) (= (type $generated@@534) $generated@@68)) (= ($generated@@140 $generated@@532 ($generated@@420 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@320 $generated@@532) $generated@@535))) (and ($generated@@224 ($generated@@85 ($generated@@395 $generated@@532) $generated@@535) $generated@@534) ($generated@@224 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@532) $generated@@535))
 :pattern ( ($generated@@85 ($generated@@320 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@140 $generated@@532 ($generated@@420 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@153) (= (type $generated@@539) $generated@@153)) (< ($generated@@536 $generated@@538) ($generated@@537 ($generated@@223 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@223 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@153) (= (type $generated@@541) $generated@@153)) (< ($generated@@536 $generated@@541) ($generated@@537 ($generated@@223 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@223 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@153) (= (type $generated@@543) $generated@@68)) (= (type $generated@@544) $generated@@68)) ($generated@@224 $generated@@542 ($generated@@412 $generated@@543 $generated@@544))) (and (= ($generated@@283 ($generated@@347 ($generated@@304 $generated@@153 $generated@@153) $generated@@542)) $generated@@542) ($generated@@140 ($generated@@347 ($generated@@304 $generated@@153 $generated@@153) $generated@@542) ($generated@@412 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@224 $generated@@542 ($generated@@412 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@153) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) $generated@@68)) ($generated@@224 $generated@@545 ($generated@@420 $generated@@546 $generated@@547))) (and (= ($generated@@283 ($generated@@347 ($generated@@322 $generated@@153 $generated@@153) $generated@@545)) $generated@@545) ($generated@@140 ($generated@@347 ($generated@@322 $generated@@153 $generated@@153) $generated@@545) ($generated@@420 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@224 $generated@@545 ($generated@@420 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@68) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) $generated@@153)) ($generated@@224 $generated@@550 ($generated@@143 $generated@@548 $generated@@549))) (and (= ($generated@@283 ($generated@@347 $generated@@144 $generated@@550)) $generated@@550) ($generated@@140 ($generated@@347 $generated@@144 $generated@@550) ($generated@@143 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@143 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@85 ($generated@@432 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@85 ($generated@@432 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@73)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@68) (= (type $generated@@556) $generated@@68)) (and (= ($generated@@76 ($generated@@143 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@143 $generated@@555 $generated@@556)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@144) (= ($generated@@536 ($generated@@283 $generated@@557)) ($generated@@537 $generated@@557)))
 :pattern ( ($generated@@536 ($generated@@283 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@153) ($generated@@224 $generated@@558 ($generated@@79 0))) (and (= ($generated@@283 ($generated@@347 $generated@@2 $generated@@558)) $generated@@558) ($generated@@140 ($generated@@347 ($generated@@80 $generated@@153 $generated@@4) $generated@@558) ($generated@@79 0))))
 :pattern ( ($generated@@224 $generated@@558 ($generated@@79 0)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@153) (= (type $generated@@560) $generated@@68)) ($generated@@224 $generated@@559 ($generated@@240 $generated@@560))) (and (= ($generated@@283 ($generated@@347 ($generated@@80 $generated@@153 $generated@@4) $generated@@559)) $generated@@559) ($generated@@140 ($generated@@347 ($generated@@80 $generated@@153 $generated@@4) $generated@@559) ($generated@@240 $generated@@560))))
 :pattern ( ($generated@@224 $generated@@559 ($generated@@240 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@153) (= (type $generated@@562) $generated@@68)) ($generated@@224 $generated@@561 ($generated@@245 $generated@@562))) (and (= ($generated@@283 ($generated@@347 ($generated@@80 $generated@@153 $generated@@4) $generated@@561)) $generated@@561) ($generated@@140 ($generated@@347 ($generated@@80 $generated@@153 $generated@@4) $generated@@561) ($generated@@245 $generated@@562))))
 :pattern ( ($generated@@224 $generated@@561 ($generated@@245 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@153) (= (type $generated@@564) $generated@@68)) ($generated@@224 $generated@@563 ($generated@@162 $generated@@564))) (and (= ($generated@@283 ($generated@@347 ($generated@@80 $generated@@153 $generated@@2) $generated@@563)) $generated@@563) ($generated@@140 ($generated@@347 ($generated@@80 $generated@@153 $generated@@2) $generated@@563) ($generated@@162 $generated@@564))))
 :pattern ( ($generated@@224 $generated@@563 ($generated@@162 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@153) (= (type $generated@@566) $generated@@68)) ($generated@@224 $generated@@565 ($generated@@498 $generated@@566))) (and (= ($generated@@283 ($generated@@347 ($generated@@274 $generated@@153) $generated@@565)) $generated@@565) ($generated@@140 ($generated@@347 ($generated@@274 $generated@@153) $generated@@565) ($generated@@498 $generated@@566))))
 :pattern ( ($generated@@224 $generated@@565 ($generated@@498 $generated@@566)))
)))
(assert (= ($generated@@76 $generated@@231) $generated@@64))
(assert (= ($generated@@553 $generated@@231) $generated@@67))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@568) $generated@@68)) (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@567 ($generated@@162 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@567 $generated@@570)))) ($generated@@260 $generated@@570 $generated@@568 $generated@@569))
 :pattern ( ($generated@@85 $generated@@567 $generated@@570))
))))
 :pattern ( ($generated@@78 $generated@@567 ($generated@@162 $generated@@568) $generated@@569))
)))
(assert (= $generated@@159 ($generated@@250 $generated@@159)))
(assert (= $generated@@161 ($generated@@250 $generated@@161)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@144) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@232 $generated@@573) (and ($generated@@142 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@68) ($generated@@78 $generated@@571 ($generated@@143 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@78 $generated@@571 ($generated@@143 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@260 ($generated@@151 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@260 ($generated@@151 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@144) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@232 $generated@@577) (and ($generated@@142 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@68) ($generated@@78 $generated@@575 ($generated@@143 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@78 $generated@@575 ($generated@@143 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@260 ($generated@@152 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@260 ($generated@@152 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@153) (= (type $generated@@580) $generated@@153)) (= ($generated@@223 ($generated@@250 $generated@@579) ($generated@@250 $generated@@580)) ($generated@@250 ($generated@@223 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@223 ($generated@@250 $generated@@579) ($generated@@250 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@283 ($generated@@250 $generated@@581)) ($generated@@250 ($generated@@283 $generated@@581)))
 :pattern ( ($generated@@283 ($generated@@250 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@275 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@274 $generated@@583)) (= ($generated@@273 $generated@@582) 0)) (= $generated@@582 ($generated@@272 $generated@@583))))
 :pattern ( ($generated@@273 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@80 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@296 ($generated@@86 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@296 $generated@@584) ($generated ($generated@@85 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@296 ($generated@@86 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@589) $generated@@2)) ($generated@@78 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@78 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@591) $generated@@3)) ($generated@@78 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@78 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@593) $generated@@4)) ($generated@@78 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@78 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@595) $generated@@456)) ($generated@@78 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@78 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@597) $generated@@153)) ($generated@@78 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@78 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@274 $generated@@153)) (= (type $generated@@599) $generated@@68)) (= ($generated@@140 $generated@@598 ($generated@@498 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@273 $generated@@598))) ($generated@@224 ($generated@@499 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@499 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@140 $generated@@598 ($generated@@498 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@274 $generated@@153)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@273 $generated@@602))) (< ($generated@@537 ($generated@@347 $generated@@144 ($generated@@499 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@537 ($generated@@347 $generated@@144 ($generated@@499 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@304 $generated@@153 $generated@@153)) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@68)) ($generated@@140 $generated@@604 ($generated@@412 $generated@@605 $generated@@606))) (and (and ($generated@@140 ($generated@@302 $generated@@604) ($generated@@240 $generated@@605)) ($generated@@140 ($generated@@355 $generated@@604) ($generated@@240 $generated@@606))) ($generated@@140 ($generated@@386 $generated@@604) ($generated@@240 ($generated@@143 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@140 $generated@@604 ($generated@@412 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@322 $generated@@153 $generated@@153)) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) $generated@@68)) ($generated@@140 $generated@@607 ($generated@@420 $generated@@608 $generated@@609))) (and (and ($generated@@140 ($generated@@320 $generated@@607) ($generated@@245 $generated@@608)) ($generated@@140 ($generated@@366 $generated@@607) ($generated@@245 $generated@@609))) ($generated@@140 ($generated@@394 $generated@@607) ($generated@@245 ($generated@@143 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@140 $generated@@607 ($generated@@420 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@140 $generated@@610 $generated@@46))
 :pattern ( ($generated@@140 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@140 $generated@@611 $generated@@47))
 :pattern ( ($generated@@140 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@140 $generated@@612 $generated@@44))
 :pattern ( ($generated@@140 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@456) ($generated@@140 $generated@@613 $generated@@45))
 :pattern ( ($generated@@140 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@153) ($generated@@140 $generated@@614 $generated@@48))
 :pattern ( ($generated@@140 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () Bool)
(declare-fun $generated@@616 () Bool)
(declare-fun $generated@@617 () Bool)
(declare-fun $generated@@618 () Bool)
(declare-fun $generated@@619 () Bool)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () Bool)
(declare-fun $generated@@624 () Bool)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () Bool)
(declare-fun $generated@@628 () Bool)
(declare-fun $generated@@629 () Bool)
(declare-fun $generated@@630 () Bool)
(declare-fun $generated@@631 () Bool)
(declare-fun $generated@@632 () Bool)
(declare-fun $generated@@633 () Bool)
(declare-fun $generated@@634 (T@U) Bool)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@81)) (= (type $generated@@626) ($generated@@169 $generated@@81 $generated@@4))) (= (type $generated@@620) $generated@@144)) (= (type $generated@@621) $generated@@144)) (= (type $generated@@635) $generated@@144)) (= (type $generated@@636) $generated@@144)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 62) (let (($generated@@638  (=> (and (and (not $generated@@615) (not $generated@@616)) (= (ControlFlow 0 51) (- 0 50))) false)))
(let (($generated@@639  (=> (= (ControlFlow 0 35) (- 0 34)) (and (not $generated@@617) $generated@@618))))
(let (($generated@@640  (=> (and (and $generated@@618 (= $generated@@619 ($generated@@0 ($generated@@250 ($generated@@11 false))))) (and (= $generated@@617 $generated@@619) (= (ControlFlow 0 37) 35))) $generated@@639)))
(let (($generated@@641  (=> ($generated@@0 ($generated@@250 ($generated@@11 false))) (=> (and (= $generated@@617 $generated@@618) (= (ControlFlow 0 36) 35)) $generated@@639))))
(let (($generated@@642 true))
(let (($generated@@643 true))
(let (($generated@@644  (=> (not (= $generated@@620 $generated@@159)) (and (=> (= (ControlFlow 0 26) 24) $generated@@643) (=> (= (ControlFlow 0 26) 25) $generated@@642)))))
(let (($generated@@645 true))
(let (($generated@@646  (and (=> (= (ControlFlow 0 27) 23) $generated@@645) (=> (= (ControlFlow 0 27) 26) $generated@@644))))
(let (($generated@@647  (=> (and (= $generated@@621 $generated@@161) (= (ControlFlow 0 29) 27)) $generated@@646)))
(let (($generated@@648  (=> (and (= $generated@@621 $generated@@159) (= (ControlFlow 0 28) 27)) $generated@@646)))
(let (($generated@@649 true))
(let (($generated@@650  (=> (not (= $generated@@621 $generated@@159)) (and (=> (= (ControlFlow 0 30) 29) $generated@@647) (=> (= (ControlFlow 0 30) 22) $generated@@649)))))
(let (($generated@@651  (=> (and (and ($generated@@140 $generated@@621 $generated@@231) ($generated@@78 $generated@@621 $generated@@231 $generated@@622)) (and ($generated@@140 $generated@@620 $generated@@231) ($generated@@78 $generated@@620 $generated@@231 $generated@@622))) (and (=> (= (ControlFlow 0 31) 28) $generated@@648) (=> (= (ControlFlow 0 31) 30) $generated@@650)))))
(let (($generated@@652  (=> (and (and (not ($generated@@0 ($generated@@250 ($generated@@11 false)))) (not $generated@@618)) (= (ControlFlow 0 33) 31)) $generated@@651)))
(let (($generated@@653  (=> ($generated@@0 ($generated@@250 ($generated@@11 true))) (and (and (=> (= (ControlFlow 0 38) 36) $generated@@641) (=> (= (ControlFlow 0 38) 37) $generated@@640)) (=> (= (ControlFlow 0 38) 33) $generated@@652)))))
(let (($generated@@654  (=> (and (not ($generated@@0 ($generated@@250 ($generated@@11 true)))) (= (ControlFlow 0 32) 31)) $generated@@651)))
(let (($generated@@655  (=> $generated@@623 (and (=> (= (ControlFlow 0 39) 32) $generated@@654) (=> (= (ControlFlow 0 39) 38) $generated@@653)))))
(let (($generated@@656 true))
(let (($generated@@657  (and (=> (= (ControlFlow 0 40) 21) $generated@@656) (=> (= (ControlFlow 0 40) 39) $generated@@655))))
(let (($generated@@658 true))
(let (($generated@@659  (=> (and (and (and (not false) $generated@@624) (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@81) (=> (and (not (= $generated@@660 $generated@@625)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@622 $generated@@660) $generated@@60))) (= ($generated@@85 $generated@@622 $generated@@660) ($generated@@85 $generated@@622 $generated@@660))))
 :pattern ( ($generated@@85 $generated@@622 $generated@@660))
))) (and (and ($generated@@338 $generated@@622 $generated@@622) (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (! (let (($generated@@663 ($generated@@71 (type $generated@@662))))
 (=> (and (and (= (type $generated@@661) $generated@@81) (= (type $generated@@662) ($generated@@70 $generated@@663))) (and (not (= $generated@@661 $generated@@625)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@622 $generated@@661) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@622 $generated@@661) $generated@@662) ($generated@@87 ($generated@@85 $generated@@622 $generated@@661) $generated@@662)) ($generated@@0 ($generated@@167 $generated@@626 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@622 $generated@@661) $generated@@662))
))) (and (=> $generated@@618 $generated@@627) (=> (= $generated@@618 $generated@@627) true)))) (and (=> (= (ControlFlow 0 41) 20) $generated@@658) (=> (= (ControlFlow 0 41) 40) $generated@@657)))))
(let (($generated@@664  (=> (and (not $generated@@628) (= (ControlFlow 0 42) 41)) $generated@@659)))
(let (($generated@@665  (=> (= (ControlFlow 0 12) (- 0 11)) (and (not $generated@@629) $generated@@630))))
(let (($generated@@666  (=> (and (and $generated@@630 (= $generated@@631 ($generated@@0 ($generated@@250 ($generated@@11 false))))) (and (= $generated@@629 $generated@@631) (= (ControlFlow 0 14) 12))) $generated@@665)))
(let (($generated@@667  (=> ($generated@@0 ($generated@@250 ($generated@@11 false))) (=> (and (= $generated@@629 $generated@@630) (= (ControlFlow 0 13) 12)) $generated@@665))))
(let (($generated@@668  (=> (and (= $generated@@632 ($generated@@0 ($generated@@250 ($generated@@11 false)))) (= (ControlFlow 0 8) (- 0 7))) (and (not $generated@@632) $generated@@628))))
(let (($generated@@669  (=> (and (and (not ($generated@@0 ($generated@@250 ($generated@@11 false)))) (not $generated@@630)) (= (ControlFlow 0 10) 8)) $generated@@668)))
(let (($generated@@670  (=> ($generated@@0 ($generated@@250 ($generated@@11 true))) (and (and (=> (= (ControlFlow 0 15) 13) $generated@@667) (=> (= (ControlFlow 0 15) 14) $generated@@666)) (=> (= (ControlFlow 0 15) 10) $generated@@669)))))
(let (($generated@@671  (=> (and (not ($generated@@0 ($generated@@250 ($generated@@11 true)))) (= (ControlFlow 0 9) 8)) $generated@@668)))
(let (($generated@@672  (=> $generated@@633 (and (=> (= (ControlFlow 0 16) 9) $generated@@671) (=> (= (ControlFlow 0 16) 15) $generated@@670)))))
(let (($generated@@673 true))
(let (($generated@@674  (and (=> (= (ControlFlow 0 17) 6) $generated@@673) (=> (= (ControlFlow 0 17) 16) $generated@@672))))
(let (($generated@@675 true))
(let (($generated@@676  (=> (and (and (and (and (and (not false) $generated@@624) $generated@@628) $generated@@628) (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@81) (=> (and (not (= $generated@@677 $generated@@625)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@622 $generated@@677) $generated@@60))) (= ($generated@@85 $generated@@622 $generated@@677) ($generated@@85 $generated@@622 $generated@@677))))
 :pattern ( ($generated@@85 $generated@@622 $generated@@677))
))) (and (and ($generated@@338 $generated@@622 $generated@@622) (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (! (let (($generated@@680 ($generated@@71 (type $generated@@679))))
 (=> (and (and (= (type $generated@@678) $generated@@81) (= (type $generated@@679) ($generated@@70 $generated@@680))) (and (not (= $generated@@678 $generated@@625)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@622 $generated@@678) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@622 $generated@@678) $generated@@679) ($generated@@87 ($generated@@85 $generated@@622 $generated@@678) $generated@@679)) ($generated@@0 ($generated@@167 $generated@@626 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@622 $generated@@678) $generated@@679))
))) (and (=> $generated@@630 $generated@@628) (=> (= $generated@@630 $generated@@628) true)))) (and (=> (= (ControlFlow 0 18) 5) $generated@@675) (=> (= (ControlFlow 0 18) 17) $generated@@674)))))
(let (($generated@@681  (=> (and $generated@@628 (= (ControlFlow 0 19) 18)) $generated@@676)))
(let (($generated@@682  (=> $generated@@624 (and (=> (= (ControlFlow 0 43) 42) $generated@@664) (=> (= (ControlFlow 0 43) 19) $generated@@681)))))
(let (($generated@@683 true))
(let (($generated@@684  (and (=> (= (ControlFlow 0 44) 4) $generated@@683) (=> (= (ControlFlow 0 44) 43) $generated@@682))))
(let (($generated@@685 true))
(let (($generated@@686  (=> (and (not false) (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@81) (=> (and (not (= $generated@@687 $generated@@625)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@622 $generated@@687) $generated@@60))) (= ($generated@@85 $generated@@622 $generated@@687) ($generated@@85 $generated@@622 $generated@@687))))
 :pattern ( ($generated@@85 $generated@@622 $generated@@687))
))) (=> (and (and ($generated@@338 $generated@@622 $generated@@622) (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (! (let (($generated@@690 ($generated@@71 (type $generated@@689))))
 (=> (and (and (= (type $generated@@688) $generated@@81) (= (type $generated@@689) ($generated@@70 $generated@@690))) (and (not (= $generated@@688 $generated@@625)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@622 $generated@@688) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@622 $generated@@688) $generated@@689) ($generated@@87 ($generated@@85 $generated@@622 $generated@@688) $generated@@689)) ($generated@@0 ($generated@@167 $generated@@626 $generated@@688 $generated@@689)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@622 $generated@@688) $generated@@689))
))) (and (=> $generated@@628 $generated@@616) (=> (= $generated@@628 $generated@@616) true))) (and (=> (= (ControlFlow 0 45) 3) $generated@@685) (=> (= (ControlFlow 0 45) 44) $generated@@684))))))
(let (($generated@@691  (=> (and $generated@@616 (= (ControlFlow 0 49) 45)) $generated@@686)))
(let (($generated@@692  (=> (and $generated@@615 (= (ControlFlow 0 48) 45)) $generated@@686)))
(let (($generated@@693  (=> $generated@@615 (and (and (=> (= (ControlFlow 0 52) 48) $generated@@692) (=> (= (ControlFlow 0 52) 49) $generated@@691)) (=> (= (ControlFlow 0 52) 51) $generated@@638)))))
(let (($generated@@694  (=> (and $generated@@616 (= (ControlFlow 0 47) 45)) $generated@@686)))
(let (($generated@@695  (=> (and ($generated@@0 ($generated@@250 ($generated@@11 true))) (= (ControlFlow 0 46) 45)) $generated@@686)))
(let (($generated@@696  (=> (and (and (and (not ($generated@@0 ($generated@@250 ($generated@@11 true)))) (not $generated@@615)) (not $generated@@616)) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@697  (=> (not $generated@@616) (and (and (and (=> (= (ControlFlow 0 57) 46) $generated@@695) (=> (= (ControlFlow 0 57) 52) $generated@@693)) (=> (= (ControlFlow 0 57) 47) $generated@@694)) (=> (= (ControlFlow 0 57) 2) $generated@@696)))))
(let (($generated@@698  (=> $generated@@616 (and (and (and (=> (= (ControlFlow 0 56) 46) $generated@@695) (=> (= (ControlFlow 0 56) 52) $generated@@693)) (=> (= (ControlFlow 0 56) 47) $generated@@694)) (=> (= (ControlFlow 0 56) 2) $generated@@696)))))
(let (($generated@@699  (=> (not $generated@@615) (and (=> (= (ControlFlow 0 58) 56) $generated@@698) (=> (= (ControlFlow 0 58) 57) $generated@@697)))))
(let (($generated@@700  (=> $generated@@615 (and (and (and (=> (= (ControlFlow 0 55) 46) $generated@@695) (=> (= (ControlFlow 0 55) 52) $generated@@693)) (=> (= (ControlFlow 0 55) 47) $generated@@694)) (=> (= (ControlFlow 0 55) 2) $generated@@696)))))
(let (($generated@@701  (=> (not $generated@@616) (and (=> (= (ControlFlow 0 59) 55) $generated@@700) (=> (= (ControlFlow 0 59) 58) $generated@@699)))))
(let (($generated@@702  (=> $generated@@616 (and (and (and (=> (= (ControlFlow 0 54) 46) $generated@@695) (=> (= (ControlFlow 0 54) 52) $generated@@693)) (=> (= (ControlFlow 0 54) 47) $generated@@694)) (=> (= (ControlFlow 0 54) 2) $generated@@696)))))
(let (($generated@@703  (=> (not $generated@@615) (and (=> (= (ControlFlow 0 60) 54) $generated@@702) (=> (= (ControlFlow 0 60) 59) $generated@@701)))))
(let (($generated@@704  (=> $generated@@615 (and (and (and (=> (= (ControlFlow 0 53) 46) $generated@@695) (=> (= (ControlFlow 0 53) 52) $generated@@693)) (=> (= (ControlFlow 0 53) 47) $generated@@694)) (=> (= (ControlFlow 0 53) 2) $generated@@696)))))
(let (($generated@@705  (=> (= $generated@@626 ($generated@@168 $generated@@625 $generated@@622 $generated@@60 false)) (and (=> (= (ControlFlow 0 61) 53) $generated@@704) (=> (= (ControlFlow 0 61) 60) $generated@@703)))))
(let (($generated@@706  (=> (and ($generated@@232 $generated@@622) ($generated@@634 $generated@@622)) (=> (and (and ($generated@@140 $generated@@635 $generated@@231) ($generated@@78 $generated@@635 $generated@@231 $generated@@622)) true) (=> (and (and (and ($generated@@140 $generated@@636 $generated@@231) ($generated@@78 $generated@@636 $generated@@231 $generated@@622)) true) (and (= 1 $generated@@637) (= (ControlFlow 0 62) 61))) $generated@@705)))))
$generated@@706))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
