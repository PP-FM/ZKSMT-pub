(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (Int) Int)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@244 (T@U T@U T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@257 (T@U) Int)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@386 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@429 () T@T)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 (T@U Int) T@U)
(declare-fun $generated@@481 (T@U) Int)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@540 () T@U)
(declare-fun $generated@@576 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@77 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@66)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@66) (= (type $generated@@146) $generated@@66)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@66)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@160) $generated@@66)) ($generated@@138 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@138 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 16)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@79 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@69 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@79) (= (type $generated@@211) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@212) ($generated@@68 $generated@@4))) (= (type $generated@@214) $generated@@79)) (= (type $generated@@215) ($generated@@68 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= (type ($generated@@217 $generated@@219 $generated@@220)) $generated@@142)
 :pattern ( ($generated@@217 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@66) (= (type $generated@@222) $generated@@66)) (= (type $generated@@223) $generated@@151)) (= (type $generated@@224) $generated@@151)) (= ($generated@@138 ($generated@@217 $generated@@223 $generated@@224) ($generated@@141 $generated@@221 $generated@@222))  (and ($generated@@218 $generated@@223 $generated@@221) ($generated@@218 $generated@@224 $generated@@222))))
 :pattern ( ($generated@@138 ($generated@@217 $generated@@223 $generated@@224) ($generated@@141 $generated@@221 $generated@@222)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@142) (= (type $generated@@226) $generated@@142)) (= ($generated@@148 $generated@@225 $generated@@226) (= $generated@@225 $generated@@226)))
 :pattern ( ($generated@@148 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (! (= (type ($generated@@227 $generated@@228)) $generated@@66)
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@230) $generated@@66)) (= ($generated@@138 $generated@@229 ($generated@@227 $generated@@230)) (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@151) ($generated@@0 ($generated@@83 $generated@@229 $generated@@231))) ($generated@@218 $generated@@231 $generated@@230))
 :pattern ( ($generated@@83 $generated@@229 $generated@@231))
))))
 :pattern ( ($generated@@138 $generated@@229 ($generated@@227 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@66)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@235) $generated@@66)) (= ($generated@@138 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@151) ($generated@@0 ($generated@@83 $generated@@234 $generated@@236))) ($generated@@218 $generated@@236 $generated@@235))
 :pattern ( ($generated@@83 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@138 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 Int) ) (! (= ($generated@@237 $generated@@238) $generated@@238)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(= (type ($generated@@239 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= ($generated@@239 $generated@@242) $generated@@242)
 :pattern ( ($generated@@239 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@245) $generated@@66) (= (type $generated@@246) $generated@@66)) (= (type $generated@@247) $generated@@151)) (= (type $generated@@248) $generated@@151)) (= (type $generated@@249) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@243 $generated@@249)) (= ($generated@@76 ($generated@@217 $generated@@247 $generated@@248) ($generated@@141 $generated@@245 $generated@@246) $generated@@249)  (and ($generated@@244 $generated@@247 $generated@@245 $generated@@249) ($generated@@244 $generated@@248 $generated@@246 $generated@@249))))
 :pattern ( ($generated@@76 ($generated@@217 $generated@@247 $generated@@248) ($generated@@141 $generated@@245 $generated@@246) $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@70)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (= (type $generated@@252) $generated@@142) (= ($generated@@140 $generated@@252) (= ($generated@@250 $generated@@252) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@142) ($generated@@140 $generated@@253)) (exists (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (and (and (= (type $generated@@254) $generated@@151) (= (type $generated@@255) $generated@@151)) (= $generated@@253 ($generated@@217 $generated@@254 $generated@@255)))
 :no-pattern (type $generated@@254)
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
)))
 :pattern ( ($generated@@140 $generated@@253))
)))
(assert  (and (and (forall (($generated@@260 T@T) ) (= ($generated@@1 ($generated@@258 $generated@@260)) 17)) (forall (($generated@@261 T@T) ) (! (= ($generated@@259 ($generated@@258 $generated@@261)) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
))) (forall (($generated@@262 T@T) ) (! (= (type ($generated@@256 $generated@@262)) ($generated@@258 $generated@@262))
 :pattern ( ($generated@@256 $generated@@262))
))))
(assert (forall (($generated@@263 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@263)) 0)
 :pattern ( ($generated@@256 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@151)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@66) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@244 ($generated@@264 $generated@@266) $generated@@267 $generated@@268) ($generated@@76 $generated@@266 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@244 ($generated@@264 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@270) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@271) $generated@@151)) (= (type $generated@@272) $generated@@66)) ($generated@@134 $generated@@269 $generated@@270)) ($generated@@244 $generated@@271 $generated@@272 $generated@@269)) ($generated@@244 $generated@@271 $generated@@272 $generated@@270))
 :pattern ( ($generated@@134 $generated@@269 $generated@@270) ($generated@@244 $generated@@271 $generated@@272 $generated@@269))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@76 $generated@@275 $generated@@276 $generated@@273)) ($generated@@76 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@76 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@78 $generated@@279 $generated@@2))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@81 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@78 $generated@@281 $generated@@2)) (and (= (= ($generated@@277 $generated@@280) 0) (= $generated@@280 ($generated@@278 $generated@@281))) (=> (not (= ($generated@@277 $generated@@280) 0)) (exists (($generated@@282 T@U) ) (!  (and (= (type $generated@@282) $generated@@281) (< 0 ($generated ($generated@@83 $generated@@280 $generated@@282))))
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
))))))
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 18)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@78 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@83 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@83 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 19)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@78 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@81 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@78 $generated@@320 $generated@@2)) (= ($generated@@157 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (and (<= 0 ($generated ($generated@@83 $generated@@319 $generated@@321))) (<= ($generated ($generated@@83 $generated@@319 $generated@@321)) ($generated@@277 $generated@@319))))
 :pattern ( ($generated@@83 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@157 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@287 (type $generated@@322))))
(let (($generated@@324 ($generated@@286 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@285 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@284 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@83 ($generated@@283 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@283 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@287 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@78 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@287 (type $generated@@329))))
(let (($generated@@331 ($generated@@286 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@285 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@284 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@83 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@305 (type $generated@@333))))
(let (($generated@@335 ($generated@@304 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@303 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@302 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@301 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@305 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@78 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@305 (type $generated@@340))))
(let (($generated@@342 ($generated@@304 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@303 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@302 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@83 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@345) $generated@@66)) (= ($generated@@138 $generated@@344 ($generated@@156 $generated@@345)) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@151) (< 0 ($generated ($generated@@83 $generated@@344 $generated@@346)))) ($generated@@218 $generated@@346 $generated@@345))
 :pattern ( ($generated@@83 $generated@@344 $generated@@346))
))))
 :pattern ( ($generated@@138 $generated@@344 ($generated@@156 $generated@@345)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@347) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@348) $generated@@66)) (= (type $generated@@349) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@347 ($generated@@227 $generated@@348) $generated@@349) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@151) ($generated@@0 ($generated@@83 $generated@@347 $generated@@350))) ($generated@@244 $generated@@350 $generated@@348 $generated@@349))
 :pattern ( ($generated@@83 $generated@@347 $generated@@350))
))))
 :pattern ( ($generated@@76 $generated@@347 ($generated@@227 $generated@@348) $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@352) $generated@@66)) (= (type $generated@@353) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@351 ($generated@@232 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@151) ($generated@@0 ($generated@@83 $generated@@351 $generated@@354))) ($generated@@244 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@83 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@76 $generated@@351 ($generated@@232 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(= ($generated ($generated@@83 ($generated@@278 $generated@@356) $generated@@355)) 0))
 :pattern ( (let (($generated@@356 (type $generated@@355)))
($generated@@83 ($generated@@278 $generated@@356) $generated@@355)))
)))
(assert  (and (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@357 $generated@@360)) ($generated@@78 $generated@@151 $generated@@4))
 :pattern ( ($generated@@357 $generated@@360))
)) (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@358 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@358 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@287 (type $generated@@363))))
(let (($generated@@365 ($generated@@286 (type $generated@@363))))
(= (type ($generated@@359 $generated@@363)) ($generated@@78 $generated@@365 $generated@@364))))
 :pattern ( ($generated@@359 $generated@@363))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@285 $generated@@151 $generated@@151)) (= (type $generated@@367) $generated@@151)) (= ($generated@@0 ($generated@@83 ($generated@@357 $generated@@366) $generated@@367))  (and ($generated@@0 ($generated@@83 ($generated@@283 $generated@@366) ($generated@@149 ($generated@@358 $generated@@142 $generated@@367)))) (= ($generated@@83 ($generated@@359 $generated@@366) ($generated@@149 ($generated@@358 $generated@@142 $generated@@367))) ($generated@@150 ($generated@@358 $generated@@142 $generated@@367))))))
 :pattern ( ($generated@@83 ($generated@@357 $generated@@366) $generated@@367))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@151 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@305 (type $generated@@371))))
(let (($generated@@373 ($generated@@304 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@78 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@303 $generated@@151 $generated@@151)) (= (type $generated@@375) $generated@@151)) (= ($generated@@0 ($generated@@83 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@374) ($generated@@149 ($generated@@358 $generated@@142 $generated@@375)))) (= ($generated@@83 ($generated@@369 $generated@@374) ($generated@@149 ($generated@@358 $generated@@142 $generated@@375))) ($generated@@150 ($generated@@358 $generated@@142 $generated@@375))))))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(let (($generated@@379 ($generated@@286 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@285 $generated@@379 $generated@@378)) (= ($generated@@0 ($generated@@83 ($generated@@326 $generated@@376) $generated@@377)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) (and ($generated@@0 ($generated@@83 ($generated@@283 $generated@@376) $generated@@380)) (= $generated@@377 ($generated@@83 ($generated@@359 $generated@@376) $generated@@380))))
 :pattern ( ($generated@@83 ($generated@@283 $generated@@376) $generated@@380))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@376) $generated@@380))
))))))
 :pattern ( ($generated@@83 ($generated@@326 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@304 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@303 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@337 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@369 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@337 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@66)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@285 $generated@@151 $generated@@151)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) $generated@@66)) (= (type $generated@@392) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@283 $generated@@389) $generated@@393))) (and ($generated@@244 ($generated@@83 ($generated@@359 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@244 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@389) $generated@@393))
 :pattern ( ($generated@@83 ($generated@@283 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@76 $generated@@389 ($generated@@386 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@66)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@303 $generated@@151 $generated@@151)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) $generated@@66)) (= (type $generated@@400) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@397) $generated@@401))) (and ($generated@@244 ($generated@@83 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@244 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@76 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@402) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@402 $generated@@404))) (and ($generated@@134 $generated@@402 $generated@@403) ($generated@@134 $generated@@403 $generated@@404))) ($generated@@134 $generated@@402 $generated@@404))
 :pattern ( ($generated@@134 $generated@@402 $generated@@403) ($generated@@134 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@406 T@T) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@78 $generated@@406 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@305 (type $generated@@407))))
(let (($generated@@409 ($generated@@304 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@303 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@302 $generated@@409 $generated@@408)) (= ($generated@@301 $generated@@407) ($generated@@405 $generated@@409))))))
 :pattern ( ($generated@@301 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@305 (type $generated@@410))))
(let (($generated@@412 ($generated@@304 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@303 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@302 $generated@@412 $generated@@411)) (= ($generated@@337 $generated@@410) ($generated@@405 $generated@@411))))))
 :pattern ( ($generated@@337 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@305 (type $generated@@413))))
(let (($generated@@415 ($generated@@304 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@303 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@302 $generated@@415 $generated@@414)) (= ($generated@@368 $generated@@413) ($generated@@405 $generated@@151))))))
 :pattern ( ($generated@@368 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@287 (type $generated@@416))))
(let (($generated@@418 ($generated@@286 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@285 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@284 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@151) (= (type $generated@@420) $generated@@151)) ($generated@@0 ($generated@@83 ($generated@@357 $generated@@416) ($generated@@264 ($generated@@217 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@357 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@305 (type $generated@@421))))
(let (($generated@@423 ($generated@@304 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@303 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@302 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@151) (= (type $generated@@425) $generated@@151)) ($generated@@0 ($generated@@83 ($generated@@368 $generated@@421) ($generated@@264 ($generated@@217 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@368 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@151) ($generated@@218 $generated@@426 $generated@@46)) (and (= ($generated@@264 ($generated@@358 $generated@@2 $generated@@426)) $generated@@426) ($generated@@138 ($generated@@358 $generated@@2 $generated@@426) $generated@@46)))
 :pattern ( ($generated@@218 $generated@@426 $generated@@46))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@151) ($generated@@218 $generated@@427 $generated@@47)) (and (= ($generated@@264 ($generated@@358 $generated@@3 $generated@@427)) $generated@@427) ($generated@@138 ($generated@@358 $generated@@3 $generated@@427) $generated@@47)))
 :pattern ( ($generated@@218 $generated@@427 $generated@@47))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@151) ($generated@@218 $generated@@428 $generated@@44)) (and (= ($generated@@264 ($generated@@358 $generated@@4 $generated@@428)) $generated@@428) ($generated@@138 ($generated@@358 $generated@@4 $generated@@428) $generated@@44)))
 :pattern ( ($generated@@218 $generated@@428 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@429) 20))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@151) ($generated@@218 $generated@@430 $generated@@45)) (and (= ($generated@@264 ($generated@@358 $generated@@429 $generated@@430)) $generated@@430) ($generated@@138 ($generated@@358 $generated@@429 $generated@@430) $generated@@45)))
 :pattern ( ($generated@@218 $generated@@430 $generated@@45))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@66) (= ($generated@@218 ($generated@@264 $generated@@431) $generated@@432) ($generated@@138 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@218 ($generated@@264 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@81 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@78 $generated@@434 $generated@@2)) (<= 0 ($generated@@277 $generated@@433))))
 :pattern ( ($generated@@277 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@259 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@258 $generated@@436)) (<= 0 ($generated@@257 $generated@@435))))
 :pattern ( ($generated@@257 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@66)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@66) (= (type $generated@@440) $generated@@66)) (= ($generated@@437 ($generated@@386 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@386 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@386 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@386 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@74 ($generated@@386 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@386 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@394 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@394 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@394 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@394 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@74 ($generated@@394 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@394 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@151) (= (type $generated@@458) $generated@@151)) (= ($generated@@250 ($generated@@217 $generated@@457 $generated@@458)) $generated@@61))
 :pattern ( ($generated@@217 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@141 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@141 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@141 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@141 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@151) (= (type $generated@@468) $generated@@151)) (= ($generated@@149 ($generated@@217 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@217 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@151) (= (type $generated@@470) $generated@@151)) (= ($generated@@150 ($generated@@217 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@217 $generated@@469 $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@473))
)) (forall (($generated@@474 T@U) ($generated@@475 Int) ) (! (let (($generated@@476 ($generated@@259 (type $generated@@474))))
(= (type ($generated@@472 $generated@@474 $generated@@475)) $generated@@476))
 :pattern ( ($generated@@472 $generated@@474 $generated@@475))
))))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@477) ($generated@@258 $generated@@151)) (= (type $generated@@478) $generated@@66)) (= (type $generated@@479) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@477 ($generated@@471 $generated@@478) $generated@@479) (forall (($generated@@480 Int) ) (!  (=> (and (<= 0 $generated@@480) (< $generated@@480 ($generated@@257 $generated@@477))) ($generated@@244 ($generated@@472 $generated@@477 $generated@@480) $generated@@478 $generated@@479))
 :pattern ( ($generated@@472 $generated@@477 $generated@@480))
))))
 :pattern ( ($generated@@76 $generated@@477 ($generated@@471 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 Int) ) (! (= ($generated@@481 ($generated@@77 $generated@@482)) $generated@@482)
 :pattern ( ($generated@@77 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@66)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@66) (= ($generated@@483 ($generated@@227 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@227 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@66) (= ($generated@@74 ($generated@@227 $generated@@486)) $generated@@54))
 :pattern ( ($generated@@227 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@232 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@232 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@232 $generated@@490)) $generated@@55))
 :pattern ( ($generated@@232 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@156 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@156 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@156 $generated@@494)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@471 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@471 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@471 $generated@@498)) $generated@@57))
 :pattern ( ($generated@@471 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 (type $generated@@499)))
(= ($generated@@358 $generated@@500 ($generated@@264 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@264 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@285 $generated@@151 $generated@@151)) (= (type $generated@@502) $generated@@66)) (= (type $generated@@503) $generated@@66)) (= ($generated@@138 $generated@@501 ($generated@@386 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@283 $generated@@501) $generated@@504))) (and ($generated@@218 ($generated@@83 ($generated@@359 $generated@@501) $generated@@504) $generated@@503) ($generated@@218 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@501) $generated@@504))
 :pattern ( ($generated@@83 ($generated@@283 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@138 $generated@@501 ($generated@@386 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@303 $generated@@151 $generated@@151)) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) $generated@@66)) (= ($generated@@138 $generated@@505 ($generated@@394 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@505) $generated@@508))) (and ($generated@@218 ($generated@@83 ($generated@@369 $generated@@505) $generated@@508) $generated@@507) ($generated@@218 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@83 ($generated@@369 $generated@@505) $generated@@508))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@138 $generated@@505 ($generated@@394 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@151) (= (type $generated@@512) $generated@@151)) (< ($generated@@509 $generated@@511) ($generated@@510 ($generated@@217 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@217 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@151) (= (type $generated@@514) $generated@@151)) (< ($generated@@509 $generated@@514) ($generated@@510 ($generated@@217 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@217 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@151) (= (type $generated@@516) $generated@@66)) (= (type $generated@@517) $generated@@66)) ($generated@@218 $generated@@515 ($generated@@386 $generated@@516 $generated@@517))) (and (= ($generated@@264 ($generated@@358 ($generated@@285 $generated@@151 $generated@@151) $generated@@515)) $generated@@515) ($generated@@138 ($generated@@358 ($generated@@285 $generated@@151 $generated@@151) $generated@@515) ($generated@@386 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@218 $generated@@515 ($generated@@386 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@151) (= (type $generated@@519) $generated@@66)) (= (type $generated@@520) $generated@@66)) ($generated@@218 $generated@@518 ($generated@@394 $generated@@519 $generated@@520))) (and (= ($generated@@264 ($generated@@358 ($generated@@303 $generated@@151 $generated@@151) $generated@@518)) $generated@@518) ($generated@@138 ($generated@@358 ($generated@@303 $generated@@151 $generated@@151) $generated@@518) ($generated@@394 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@218 $generated@@518 ($generated@@394 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) $generated@@151)) ($generated@@218 $generated@@523 ($generated@@141 $generated@@521 $generated@@522))) (and (= ($generated@@264 ($generated@@358 $generated@@142 $generated@@523)) $generated@@523) ($generated@@138 ($generated@@358 $generated@@142 $generated@@523) ($generated@@141 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@218 $generated@@523 ($generated@@141 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
 (not ($generated@@0 ($generated@@83 ($generated@@405 $generated@@525) $generated@@524))))
 :pattern ( (let (($generated@@525 (type $generated@@524)))
($generated@@83 ($generated@@405 $generated@@525) $generated@@524)))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@71)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (and (= ($generated@@74 ($generated@@141 $generated@@528 $generated@@529)) $generated@@62) (= ($generated@@526 ($generated@@141 $generated@@528 $generated@@529)) $generated@@64)))
 :pattern ( ($generated@@141 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@142) (= ($generated@@509 ($generated@@264 $generated@@530)) ($generated@@510 $generated@@530)))
 :pattern ( ($generated@@509 ($generated@@264 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@151) ($generated@@218 $generated@@531 ($generated@@77 0))) (and (= ($generated@@264 ($generated@@358 $generated@@2 $generated@@531)) $generated@@531) ($generated@@138 ($generated@@358 ($generated@@78 $generated@@151 $generated@@4) $generated@@531) ($generated@@77 0))))
 :pattern ( ($generated@@218 $generated@@531 ($generated@@77 0)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@151) (= (type $generated@@533) $generated@@66)) ($generated@@218 $generated@@532 ($generated@@227 $generated@@533))) (and (= ($generated@@264 ($generated@@358 ($generated@@78 $generated@@151 $generated@@4) $generated@@532)) $generated@@532) ($generated@@138 ($generated@@358 ($generated@@78 $generated@@151 $generated@@4) $generated@@532) ($generated@@227 $generated@@533))))
 :pattern ( ($generated@@218 $generated@@532 ($generated@@227 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@151) (= (type $generated@@535) $generated@@66)) ($generated@@218 $generated@@534 ($generated@@232 $generated@@535))) (and (= ($generated@@264 ($generated@@358 ($generated@@78 $generated@@151 $generated@@4) $generated@@534)) $generated@@534) ($generated@@138 ($generated@@358 ($generated@@78 $generated@@151 $generated@@4) $generated@@534) ($generated@@232 $generated@@535))))
 :pattern ( ($generated@@218 $generated@@534 ($generated@@232 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@151) (= (type $generated@@537) $generated@@66)) ($generated@@218 $generated@@536 ($generated@@156 $generated@@537))) (and (= ($generated@@264 ($generated@@358 ($generated@@78 $generated@@151 $generated@@2) $generated@@536)) $generated@@536) ($generated@@138 ($generated@@358 ($generated@@78 $generated@@151 $generated@@2) $generated@@536) ($generated@@156 $generated@@537))))
 :pattern ( ($generated@@218 $generated@@536 ($generated@@156 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@151) (= (type $generated@@539) $generated@@66)) ($generated@@218 $generated@@538 ($generated@@471 $generated@@539))) (and (= ($generated@@264 ($generated@@358 ($generated@@258 $generated@@151) $generated@@538)) $generated@@538) ($generated@@138 ($generated@@358 ($generated@@258 $generated@@151) $generated@@538) ($generated@@471 $generated@@539))))
 :pattern ( ($generated@@218 $generated@@538 ($generated@@471 $generated@@539)))
)))
(assert (= (type $generated@@540) $generated@@66))
(assert (= ($generated@@74 $generated@@540) $generated@@63))
(assert (= ($generated@@526 $generated@@540) $generated@@65))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@541 ($generated@@156 $generated@@542) $generated@@543) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@151) (< 0 ($generated ($generated@@83 $generated@@541 $generated@@544)))) ($generated@@244 $generated@@544 $generated@@542 $generated@@543))
 :pattern ( ($generated@@83 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@76 $generated@@541 ($generated@@156 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@142) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@243 $generated@@547) (and ($generated@@140 $generated@@545) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@66) ($generated@@76 $generated@@545 ($generated@@141 $generated@@546 $generated@@548) $generated@@547))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@141 $generated@@546 $generated@@548) $generated@@547))
))))) ($generated@@244 ($generated@@149 $generated@@545) $generated@@546 $generated@@547))
 :pattern ( ($generated@@244 ($generated@@149 $generated@@545) $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@142) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@243 $generated@@551) (and ($generated@@140 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@141 $generated@@552 $generated@@550) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@141 $generated@@552 $generated@@550) $generated@@551))
))))) ($generated@@244 ($generated@@150 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@244 ($generated@@150 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@151) (= (type $generated@@554) $generated@@151)) (= ($generated@@217 ($generated@@239 $generated@@553) ($generated@@239 $generated@@554)) ($generated@@239 ($generated@@217 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@217 ($generated@@239 $generated@@553) ($generated@@239 $generated@@554)))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@264 ($generated@@8 ($generated@@237 $generated@@555))) ($generated@@239 ($generated@@264 ($generated@@8 $generated@@555))))
 :pattern ( ($generated@@264 ($generated@@8 ($generated@@237 $generated@@555))))
)))
(assert (forall (($generated@@556 T@U) ) (! (= ($generated@@264 ($generated@@239 $generated@@556)) ($generated@@239 ($generated@@264 $generated@@556)))
 :pattern ( ($generated@@264 ($generated@@239 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@259 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@258 $generated@@558)) (= ($generated@@257 $generated@@557) 0)) (= $generated@@557 ($generated@@256 $generated@@558))))
 :pattern ( ($generated@@257 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@560)))
 (=> (and (and (= (type $generated@@559) ($generated@@78 $generated@@562 $generated@@2)) (= (type $generated@@561) $generated@@2)) (<= 0 ($generated $generated@@561))) (= ($generated@@277 ($generated@@84 $generated@@559 $generated@@560 $generated@@561)) (+ (- ($generated@@277 $generated@@559) ($generated ($generated@@83 $generated@@559 $generated@@560))) ($generated $generated@@561)))))
 :pattern ( ($generated@@277 ($generated@@84 $generated@@559 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@564) $generated@@2)) ($generated@@76 $generated@@564 $generated@@46 $generated@@563))
 :pattern ( ($generated@@76 $generated@@564 $generated@@46 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@566) $generated@@3)) ($generated@@76 $generated@@566 $generated@@47 $generated@@565))
 :pattern ( ($generated@@76 $generated@@566 $generated@@47 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@4)) ($generated@@76 $generated@@568 $generated@@44 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@44 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@429)) ($generated@@76 $generated@@570 $generated@@45 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@45 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@151)) ($generated@@76 $generated@@572 $generated@@48 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@48 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@258 $generated@@151)) (= (type $generated@@574) $generated@@66)) (= ($generated@@138 $generated@@573 ($generated@@471 $generated@@574)) (forall (($generated@@575 Int) ) (!  (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@257 $generated@@573))) ($generated@@218 ($generated@@472 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@472 $generated@@573 $generated@@575))
))))
 :pattern ( ($generated@@138 $generated@@573 ($generated@@471 $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ) (!  (=> (= (type $generated@@577) ($generated@@258 $generated@@151)) (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@257 $generated@@577))) (< ($generated@@510 ($generated@@358 $generated@@142 ($generated@@472 $generated@@577 $generated@@578))) ($generated@@576 $generated@@577))))
 :pattern ( ($generated@@510 ($generated@@358 $generated@@142 ($generated@@472 $generated@@577 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@285 $generated@@151 $generated@@151)) (= (type $generated@@580) $generated@@66)) (= (type $generated@@581) $generated@@66)) ($generated@@138 $generated@@579 ($generated@@386 $generated@@580 $generated@@581))) (and (and ($generated@@138 ($generated@@283 $generated@@579) ($generated@@227 $generated@@580)) ($generated@@138 ($generated@@326 $generated@@579) ($generated@@227 $generated@@581))) ($generated@@138 ($generated@@357 $generated@@579) ($generated@@227 ($generated@@141 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@138 $generated@@579 ($generated@@386 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@303 $generated@@151 $generated@@151)) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@138 $generated@@582 ($generated@@394 $generated@@583 $generated@@584))) (and (and ($generated@@138 ($generated@@301 $generated@@582) ($generated@@232 $generated@@583)) ($generated@@138 ($generated@@337 $generated@@582) ($generated@@232 $generated@@584))) ($generated@@138 ($generated@@368 $generated@@582) ($generated@@232 ($generated@@141 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@138 $generated@@582 ($generated@@394 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@2) ($generated@@138 $generated@@585 $generated@@46))
 :pattern ( ($generated@@138 $generated@@585 $generated@@46))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@3) ($generated@@138 $generated@@586 $generated@@47))
 :pattern ( ($generated@@138 $generated@@586 $generated@@47))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@4) ($generated@@138 $generated@@587 $generated@@44))
 :pattern ( ($generated@@138 $generated@@587 $generated@@44))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@429) ($generated@@138 $generated@@588 $generated@@45))
 :pattern ( ($generated@@138 $generated@@588 $generated@@45))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@151) ($generated@@138 $generated@@589 $generated@@48))
 :pattern ( ($generated@@138 $generated@@589 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U Int) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (Int) Int)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@333 () T@U)
(declare-fun $generated@@334 (T@T T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@365 () Int)
(declare-fun $generated@@366 (T@U Int) Bool)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@495 (T@U Int) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@136) 14) (= ($generated@@1 $generated@@137) 15)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 Int) ) (! (= (type ($generated@@134 $generated@@139 $generated@@140 $generated@@141)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@135 $generated@@142)) $generated@@136)
 :pattern ( ($generated@@135 $generated@@142))
))) (= (type $generated@@138) $generated@@136)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ) (!  (=> (and (= (type $generated@@143) $generated@@136) (= (type $generated@@144) $generated@@137)) (= ($generated@@134 $generated@@143 $generated@@144 $generated@@145) ($generated@@134 $generated@@138 $generated@@144 $generated@@145)))
 :pattern ( ($generated@@134 ($generated@@135 $generated@@143) $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@77 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@77 0)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@137)) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153))) ($generated@@148 $generated@@154))
 :pattern ( ($generated@@148 $generated@@154) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@137) (= (type $generated@@162) $generated@@137)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@66)) ($generated@@146 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@146 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 17)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@69 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@79) (= (type $generated@@218) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@219) ($generated@@68 $generated@@4))) (= (type $generated@@221) $generated@@79)) (= (type $generated@@222) ($generated@@68 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@69 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@79) (= (type $generated@@230) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@231) ($generated@@68 $generated@@4))) (= (type $generated@@233) $generated@@79)) (= (type $generated@@234) ($generated@@68 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@137)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@66) (= (type $generated@@241) $generated@@66)) (= (type $generated@@242) $generated@@158)) (= (type $generated@@243) $generated@@158)) (= ($generated@@146 ($generated@@236 $generated@@242 $generated@@243) ($generated@@149 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@146 ($generated@@236 $generated@@242 $generated@@243) ($generated@@149 $generated@@240 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@137) (= (type $generated@@245) $generated@@137)) (= ($generated@@155 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@155 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@66)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@249) $generated@@66)) (= ($generated@@146 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@158) ($generated@@0 ($generated@@83 $generated@@248 $generated@@250))) ($generated@@237 $generated@@250 $generated@@249))
 :pattern ( ($generated@@83 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@146 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@66)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@254) $generated@@66)) (= ($generated@@146 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@158) ($generated@@0 ($generated@@83 $generated@@253 $generated@@255))) ($generated@@237 $generated@@255 $generated@@254))
 :pattern ( ($generated@@83 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@146 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 Int) ) (! (= ($generated@@256 $generated@@257) $generated@@257)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@66) (= (type $generated@@265) $generated@@66)) (= (type $generated@@266) $generated@@158)) (= (type $generated@@267) $generated@@158)) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@262 $generated@@268)) (= ($generated@@76 ($generated@@236 $generated@@266 $generated@@267) ($generated@@149 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@266 $generated@@267) ($generated@@149 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@70)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@137) (= ($generated@@148 $generated@@271) (= ($generated@@269 $generated@@271) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@137) ($generated@@148 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@158) (= (type $generated@@274) $generated@@158)) (= $generated@@272 ($generated@@236 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@148 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 18)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@158)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@66) (= (type $generated@@287) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@263 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@76 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@263 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@78 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@81 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@78 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@83 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 19)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@78 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@83 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@83 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 20)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@78 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@83 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@83 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@81 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@78 $generated@@331 $generated@@2)) (= ($generated@@164 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@83 $generated@@330 $generated@@332))) (<= ($generated ($generated@@83 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@83 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@164 $generated@@330))
)))
(assert  (and (= (type $generated@@333) $generated@@66) (forall (($generated@@335 T@T) ($generated@@336 T@U) ) (! (= (type ($generated@@334 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@158) ($generated@@237 $generated@@337 $generated@@333)) (and (= ($generated@@283 ($generated@@334 $generated@@137 $generated@@337)) $generated@@337) ($generated@@146 ($generated@@334 $generated@@137 $generated@@337) $generated@@333)))
 :pattern ( ($generated@@237 $generated@@337 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@298 (type $generated@@338))))
(let (($generated@@340 ($generated@@297 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@296 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@295 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@83 ($generated@@294 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@294 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@298 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@78 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@298 (type $generated@@345))))
(let (($generated@@347 ($generated@@297 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@296 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@295 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@83 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@316 (type $generated@@349))))
(let (($generated@@351 ($generated@@315 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@314 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@313 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@83 ($generated@@312 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@312 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@316 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@78 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@316 (type $generated@@356))))
(let (($generated@@358 ($generated@@315 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@314 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@313 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@83 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (= (type ($generated@@360 $generated@@361)) $generated@@136)
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (and (= (type $generated@@362) $generated@@136) (= (type $generated@@363) $generated@@137)) (= ($generated@@134 ($generated@@360 $generated@@362) $generated@@363 $generated@@364) ($generated@@134 $generated@@362 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@134 ($generated@@360 $generated@@362) $generated@@363 $generated@@364))
)))
(assert  (=> (<= 2 $generated@@365) (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 Int) ) (!  (=> (and (and (= (type $generated@@367) $generated@@136) (= (type $generated@@368) $generated@@137)) (or ($generated@@366 $generated@@368 $generated@@369) (and (not (= 2 $generated@@365)) ($generated@@146 $generated@@368 $generated@@333)))) (and (=> (< ($generated@@256 0) $generated@@369) ($generated@@366 $generated@@368 (- $generated@@369 1))) (= ($generated@@134 ($generated@@360 $generated@@367) $generated@@368 $generated@@369) (ite (<= $generated@@369 ($generated@@256 0)) $generated@@368 ($generated@@134 $generated@@367 $generated@@368 (- $generated@@369 1))))))
 :pattern ( ($generated@@134 ($generated@@360 $generated@@367) $generated@@368 $generated@@369))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@371) $generated@@66)) (= ($generated@@146 $generated@@370 ($generated@@163 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@370 $generated@@372)))) ($generated@@237 $generated@@372 $generated@@371))
 :pattern ( ($generated@@83 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@146 $generated@@370 ($generated@@163 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@374) $generated@@66)) (= (type $generated@@375) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@373 ($generated@@246 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@158) ($generated@@0 ($generated@@83 $generated@@373 $generated@@376))) ($generated@@263 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@83 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@76 $generated@@373 ($generated@@246 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@378) $generated@@66)) (= (type $generated@@379) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@377 ($generated@@251 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@158) ($generated@@0 ($generated@@83 $generated@@377 $generated@@380))) ($generated@@263 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@83 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@76 $generated@@377 ($generated@@251 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@83 ($generated@@289 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@83 ($generated@@289 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@298 (type $generated@@386))))
(let (($generated@@388 ($generated@@297 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@78 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@296 $generated@@158 $generated@@158)) (= (type $generated@@390) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@83 ($generated@@294 $generated@@389) ($generated@@156 ($generated@@334 $generated@@137 $generated@@390)))) (= ($generated@@83 ($generated@@384 $generated@@389) ($generated@@156 ($generated@@334 $generated@@137 $generated@@390))) ($generated@@157 ($generated@@334 $generated@@137 $generated@@390))))))
 :pattern ( ($generated@@83 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@316 (type $generated@@394))))
(let (($generated@@396 ($generated@@315 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@78 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@314 $generated@@158 $generated@@158)) (= (type $generated@@398) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@83 ($generated@@312 $generated@@397) ($generated@@156 ($generated@@334 $generated@@137 $generated@@398)))) (= ($generated@@83 ($generated@@392 $generated@@397) ($generated@@156 ($generated@@334 $generated@@137 $generated@@398))) ($generated@@157 ($generated@@334 $generated@@137 $generated@@398))))))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@297 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@296 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@83 ($generated@@342 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@83 ($generated@@294 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@83 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@83 ($generated@@294 $generated@@399) $generated@@403))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@83 ($generated@@342 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@315 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@314 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@83 ($generated@@353 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@83 ($generated@@312 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@83 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@83 ($generated@@353 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@66)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@296 $generated@@158 $generated@@158)) (= (type $generated@@413) $generated@@66)) (= (type $generated@@414) $generated@@66)) (= (type $generated@@415) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@294 $generated@@412) $generated@@416))) (and ($generated@@263 ($generated@@83 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@263 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@83 ($generated@@294 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@76 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@66)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@314 $generated@@158 $generated@@158)) (= (type $generated@@421) $generated@@66)) (= (type $generated@@422) $generated@@66)) (= (type $generated@@423) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@312 $generated@@420) $generated@@424))) (and ($generated@@263 ($generated@@83 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@263 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@76 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@78 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@316 (type $generated@@427))))
(let (($generated@@429 ($generated@@315 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@314 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@313 $generated@@429 $generated@@428)) (= ($generated@@312 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@312 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@316 (type $generated@@430))))
(let (($generated@@432 ($generated@@315 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@314 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@313 $generated@@432 $generated@@431)) (= ($generated@@353 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@353 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@316 (type $generated@@433))))
(let (($generated@@435 ($generated@@315 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@314 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@313 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@158))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@298 (type $generated@@436))))
(let (($generated@@438 ($generated@@297 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@296 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@295 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@158) (= (type $generated@@440) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@383 $generated@@436) ($generated@@283 ($generated@@236 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@316 (type $generated@@441))))
(let (($generated@@443 ($generated@@315 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@314 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@313 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@158) (= (type $generated@@445) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@391 $generated@@441) ($generated@@283 ($generated@@236 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@158) ($generated@@237 $generated@@446 $generated@@46)) (and (= ($generated@@283 ($generated@@334 $generated@@2 $generated@@446)) $generated@@446) ($generated@@146 ($generated@@334 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@158) ($generated@@237 $generated@@447 $generated@@47)) (and (= ($generated@@283 ($generated@@334 $generated@@3 $generated@@447)) $generated@@447) ($generated@@146 ($generated@@334 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@158) ($generated@@237 $generated@@448 $generated@@44)) (and (= ($generated@@283 ($generated@@334 $generated@@4 $generated@@448)) $generated@@448) ($generated@@146 ($generated@@334 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 21))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@158) ($generated@@237 $generated@@450 $generated@@45)) (and (= ($generated@@283 ($generated@@334 $generated@@449 $generated@@450)) $generated@@450) ($generated@@146 ($generated@@334 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@66) (= ($generated@@237 ($generated@@283 $generated@@451) $generated@@452) ($generated@@146 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@237 ($generated@@283 $generated@@451) $generated@@452))
)))
(assert  (=> (<= 2 $generated@@365) (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 Int) ) (!  (=> (and (and (= (type $generated@@453) $generated@@136) (= (type $generated@@454) $generated@@137)) (or ($generated@@366 $generated@@454 $generated@@455) (and (not (= 2 $generated@@365)) ($generated@@146 $generated@@454 $generated@@333)))) ($generated@@146 ($generated@@134 $generated@@453 $generated@@454 $generated@@455) $generated@@333))
 :pattern ( ($generated@@134 $generated@@453 $generated@@454 $generated@@455))
))))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@81 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@78 $generated@@457 $generated@@2)) (<= 0 ($generated@@288 $generated@@456))))
 :pattern ( ($generated@@288 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@278 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@277 $generated@@459)) (<= 0 ($generated@@276 $generated@@458))))
 :pattern ( ($generated@@276 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@409 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@409 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@409 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@409 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@74 ($generated@@409 $generated@@468 $generated@@469)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@470 ($generated@@417 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@417 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@474 ($generated@@417 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@417 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@66) (= (type $generated@@479) $generated@@66)) (= ($generated@@74 ($generated@@417 $generated@@478 $generated@@479)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@158) (= (type $generated@@481) $generated@@158)) (= ($generated@@269 ($generated@@236 $generated@@480 $generated@@481)) $generated@@61))
 :pattern ( ($generated@@236 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@482 ($generated@@149 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@149 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@66) (= (type $generated@@489) $generated@@66)) (= ($generated@@486 ($generated@@149 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@149 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@158) (= (type $generated@@491) $generated@@158)) (= ($generated@@156 ($generated@@236 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@236 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@158) (= (type $generated@@493) $generated@@158)) (= ($generated@@157 ($generated@@236 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@236 $generated@@492 $generated@@493))
)))
(assert  (and (forall (($generated@@496 T@U) ) (! (= (type ($generated@@494 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@496))
)) (forall (($generated@@497 T@U) ($generated@@498 Int) ) (! (let (($generated@@499 ($generated@@278 (type $generated@@497))))
(= (type ($generated@@495 $generated@@497 $generated@@498)) $generated@@499))
 :pattern ( ($generated@@495 $generated@@497 $generated@@498))
))))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@277 $generated@@158)) (= (type $generated@@501) $generated@@66)) (= (type $generated@@502) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@500 ($generated@@494 $generated@@501) $generated@@502) (forall (($generated@@503 Int) ) (!  (=> (and (<= 0 $generated@@503) (< $generated@@503 ($generated@@276 $generated@@500))) ($generated@@263 ($generated@@495 $generated@@500 $generated@@503) $generated@@501 $generated@@502))
 :pattern ( ($generated@@495 $generated@@500 $generated@@503))
))))
 :pattern ( ($generated@@76 $generated@@500 ($generated@@494 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@77 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@77 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@506 ($generated@@246 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@246 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@74 ($generated@@246 $generated@@509)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@251 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@251 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@74 ($generated@@251 $generated@@513)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@514 ($generated@@163 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@163 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@74 ($generated@@163 $generated@@517)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@66)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@518 ($generated@@494 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@494 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@74 ($generated@@494 $generated@@521)) $generated@@57))
 :pattern ( ($generated@@494 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@334 $generated@@523 ($generated@@283 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@283 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@296 $generated@@158 $generated@@158)) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) (= ($generated@@146 $generated@@524 ($generated@@409 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@294 $generated@@524) $generated@@527))) (and ($generated@@237 ($generated@@83 ($generated@@384 $generated@@524) $generated@@527) $generated@@526) ($generated@@237 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@524) $generated@@527))
 :pattern ( ($generated@@83 ($generated@@294 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@146 $generated@@524 ($generated@@409 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@314 $generated@@158 $generated@@158)) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@66)) (= ($generated@@146 $generated@@528 ($generated@@417 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@312 $generated@@528) $generated@@531))) (and ($generated@@237 ($generated@@83 ($generated@@392 $generated@@528) $generated@@531) $generated@@530) ($generated@@237 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@528) $generated@@531))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@146 $generated@@528 ($generated@@417 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@158) (= (type $generated@@535) $generated@@158)) (< ($generated@@532 $generated@@534) ($generated@@533 ($generated@@236 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@236 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@158) (= (type $generated@@537) $generated@@158)) (< ($generated@@532 $generated@@537) ($generated@@533 ($generated@@236 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@236 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@158) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@66)) ($generated@@237 $generated@@538 ($generated@@409 $generated@@539 $generated@@540))) (and (= ($generated@@283 ($generated@@334 ($generated@@296 $generated@@158 $generated@@158) $generated@@538)) $generated@@538) ($generated@@146 ($generated@@334 ($generated@@296 $generated@@158 $generated@@158) $generated@@538) ($generated@@409 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@237 $generated@@538 ($generated@@409 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@158) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@66)) ($generated@@237 $generated@@541 ($generated@@417 $generated@@542 $generated@@543))) (and (= ($generated@@283 ($generated@@334 ($generated@@314 $generated@@158 $generated@@158) $generated@@541)) $generated@@541) ($generated@@146 ($generated@@334 ($generated@@314 $generated@@158 $generated@@158) $generated@@541) ($generated@@417 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@237 $generated@@541 ($generated@@417 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@66) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) $generated@@158)) ($generated@@237 $generated@@546 ($generated@@149 $generated@@544 $generated@@545))) (and (= ($generated@@283 ($generated@@334 $generated@@137 $generated@@546)) $generated@@546) ($generated@@146 ($generated@@334 $generated@@137 $generated@@546) ($generated@@149 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@237 $generated@@546 ($generated@@149 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@83 ($generated@@425 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@83 ($generated@@425 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@71)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@66) (= (type $generated@@552) $generated@@66)) (and (= ($generated@@74 ($generated@@149 $generated@@551 $generated@@552)) $generated@@62) (= ($generated@@549 ($generated@@149 $generated@@551 $generated@@552)) $generated@@64)))
 :pattern ( ($generated@@149 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@137) (= ($generated@@532 ($generated@@283 $generated@@553)) ($generated@@533 $generated@@553)))
 :pattern ( ($generated@@532 ($generated@@283 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@158) ($generated@@237 $generated@@554 ($generated@@77 0))) (and (= ($generated@@283 ($generated@@334 $generated@@2 $generated@@554)) $generated@@554) ($generated@@146 ($generated@@334 ($generated@@78 $generated@@158 $generated@@4) $generated@@554) ($generated@@77 0))))
 :pattern ( ($generated@@237 $generated@@554 ($generated@@77 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@158) (= (type $generated@@556) $generated@@66)) ($generated@@237 $generated@@555 ($generated@@246 $generated@@556))) (and (= ($generated@@283 ($generated@@334 ($generated@@78 $generated@@158 $generated@@4) $generated@@555)) $generated@@555) ($generated@@146 ($generated@@334 ($generated@@78 $generated@@158 $generated@@4) $generated@@555) ($generated@@246 $generated@@556))))
 :pattern ( ($generated@@237 $generated@@555 ($generated@@246 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@158) (= (type $generated@@558) $generated@@66)) ($generated@@237 $generated@@557 ($generated@@251 $generated@@558))) (and (= ($generated@@283 ($generated@@334 ($generated@@78 $generated@@158 $generated@@4) $generated@@557)) $generated@@557) ($generated@@146 ($generated@@334 ($generated@@78 $generated@@158 $generated@@4) $generated@@557) ($generated@@251 $generated@@558))))
 :pattern ( ($generated@@237 $generated@@557 ($generated@@251 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@158) (= (type $generated@@560) $generated@@66)) ($generated@@237 $generated@@559 ($generated@@163 $generated@@560))) (and (= ($generated@@283 ($generated@@334 ($generated@@78 $generated@@158 $generated@@2) $generated@@559)) $generated@@559) ($generated@@146 ($generated@@334 ($generated@@78 $generated@@158 $generated@@2) $generated@@559) ($generated@@163 $generated@@560))))
 :pattern ( ($generated@@237 $generated@@559 ($generated@@163 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@158) (= (type $generated@@562) $generated@@66)) ($generated@@237 $generated@@561 ($generated@@494 $generated@@562))) (and (= ($generated@@283 ($generated@@334 ($generated@@277 $generated@@158) $generated@@561)) $generated@@561) ($generated@@146 ($generated@@334 ($generated@@277 $generated@@158) $generated@@561) ($generated@@494 $generated@@562))))
 :pattern ( ($generated@@237 $generated@@561 ($generated@@494 $generated@@562)))
)))
(assert (= ($generated@@74 $generated@@333) $generated@@63))
(assert (= ($generated@@549 $generated@@333) $generated@@65))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@563 ($generated@@163 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@563 $generated@@566)))) ($generated@@263 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@83 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@76 $generated@@563 ($generated@@163 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@137) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@262 $generated@@569) (and ($generated@@148 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@66) ($generated@@76 $generated@@567 ($generated@@149 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@76 $generated@@567 ($generated@@149 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@263 ($generated@@156 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@263 ($generated@@156 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@137) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@262 $generated@@573) (and ($generated@@148 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@66) ($generated@@76 $generated@@571 ($generated@@149 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@76 $generated@@571 ($generated@@149 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@263 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@263 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
)))
(assert  (=> (<= 2 $generated@@365) (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 Int) ) (!  (=> (and (and (= (type $generated@@575) $generated@@136) (= (type $generated@@576) $generated@@137)) (or ($generated@@366 ($generated@@258 $generated@@576) ($generated@@256 $generated@@577)) (and (not (= 2 $generated@@365)) ($generated@@146 $generated@@576 $generated@@333)))) (and (=> (< ($generated@@256 0) ($generated@@256 $generated@@577)) ($generated@@366 ($generated@@258 $generated@@576) ($generated@@256 (- $generated@@577 1)))) (= ($generated@@134 ($generated@@360 $generated@@575) ($generated@@258 $generated@@576) ($generated@@256 $generated@@577)) (ite (<= ($generated@@256 $generated@@577) ($generated@@256 0)) $generated@@576 ($generated@@134 ($generated@@360 $generated@@575) ($generated@@258 $generated@@576) ($generated@@256 (- $generated@@577 1)))))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@360 $generated@@575) ($generated@@258 $generated@@576) ($generated@@256 $generated@@577)))
))))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@158) (= (type $generated@@579) $generated@@158)) (= ($generated@@236 ($generated@@258 $generated@@578) ($generated@@258 $generated@@579)) ($generated@@258 ($generated@@236 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@236 ($generated@@258 $generated@@578) ($generated@@258 $generated@@579)))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@283 ($generated@@8 ($generated@@256 $generated@@580))) ($generated@@258 ($generated@@283 ($generated@@8 $generated@@580))))
 :pattern ( ($generated@@283 ($generated@@8 ($generated@@256 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@283 ($generated@@258 $generated@@581)) ($generated@@258 ($generated@@283 $generated@@581)))
 :pattern ( ($generated@@283 ($generated@@258 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@278 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@277 $generated@@583)) (= ($generated@@276 $generated@@582) 0)) (= $generated@@582 ($generated@@275 $generated@@583))))
 :pattern ( ($generated@@276 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@78 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@288 ($generated@@84 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@288 $generated@@584) ($generated ($generated@@83 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@288 ($generated@@84 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@2)) ($generated@@76 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@3)) ($generated@@76 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@593) $generated@@4)) ($generated@@76 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@76 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@595) $generated@@449)) ($generated@@76 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@76 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@597) $generated@@158)) ($generated@@76 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@76 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@277 $generated@@158)) (= (type $generated@@599) $generated@@66)) (= ($generated@@146 $generated@@598 ($generated@@494 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@276 $generated@@598))) ($generated@@237 ($generated@@495 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@495 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@146 $generated@@598 ($generated@@494 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@277 $generated@@158)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@276 $generated@@602))) (< ($generated@@533 ($generated@@334 $generated@@137 ($generated@@495 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@533 ($generated@@334 $generated@@137 ($generated@@495 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@296 $generated@@158 $generated@@158)) (= (type $generated@@605) $generated@@66)) (= (type $generated@@606) $generated@@66)) ($generated@@146 $generated@@604 ($generated@@409 $generated@@605 $generated@@606))) (and (and ($generated@@146 ($generated@@294 $generated@@604) ($generated@@246 $generated@@605)) ($generated@@146 ($generated@@342 $generated@@604) ($generated@@246 $generated@@606))) ($generated@@146 ($generated@@383 $generated@@604) ($generated@@246 ($generated@@149 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@146 $generated@@604 ($generated@@409 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@314 $generated@@158 $generated@@158)) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) $generated@@66)) ($generated@@146 $generated@@607 ($generated@@417 $generated@@608 $generated@@609))) (and (and ($generated@@146 ($generated@@312 $generated@@607) ($generated@@251 $generated@@608)) ($generated@@146 ($generated@@353 $generated@@607) ($generated@@251 $generated@@609))) ($generated@@146 ($generated@@391 $generated@@607) ($generated@@251 ($generated@@149 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@146 $generated@@607 ($generated@@417 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@146 $generated@@610 $generated@@46))
 :pattern ( ($generated@@146 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@146 $generated@@611 $generated@@47))
 :pattern ( ($generated@@146 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@146 $generated@@612 $generated@@44))
 :pattern ( ($generated@@146 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@449) ($generated@@146 $generated@@613 $generated@@45))
 :pattern ( ($generated@@146 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@158) ($generated@@146 $generated@@614 $generated@@48))
 :pattern ( ($generated@@146 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@616) $generated@@137) (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@619) ($generated@@170 $generated@@79 $generated@@4))) (= (type $generated@@620) $generated@@79)) (= (type $generated@@621) ($generated@@170 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@623  (=> (and (and (< ($generated@@256 0) $generated@@615) ($generated@@76 $generated@@616 $generated@@333 $generated@@617)) (and (= $generated@@618 (- $generated@@615 1)) ($generated@@76 ($generated@@8 $generated@@618) $generated@@46 $generated@@617))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (<= 0 $generated@@615) (< ($generated@@533 $generated@@616) ($generated@@533 $generated@@616))) (= $generated@@618 $generated@@615))) (=> (or (or (<= 0 $generated@@615) (< ($generated@@533 $generated@@616) ($generated@@533 $generated@@616))) (= $generated@@618 $generated@@615)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< ($generated@@533 $generated@@616) ($generated@@533 $generated@@616)) (and (= ($generated@@533 $generated@@616) ($generated@@533 $generated@@616)) (< $generated@@618 $generated@@615)))))))))
(let (($generated@@624 true))
(let (($generated@@625  (=> (= $generated@@619 ($generated@@224 $generated@@620 $generated@@617 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@624) (=> (= (ControlFlow 0 6) 4) $generated@@623)))))
(let (($generated@@626 true))
(let (($generated@@627  (=> (= $generated@@621 ($generated@@169 $generated@@620 $generated@@617 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@626) (=> (= (ControlFlow 0 7) 6) $generated@@625)))))
(let (($generated@@628  (=> (and (and (and ($generated@@262 $generated@@617) ($generated@@622 $generated@@617)) ($generated@@146 $generated@@616 $generated@@333)) (and (= 2 $generated@@365) (= (ControlFlow 0 8) 7))) $generated@@627)))
$generated@@628)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@T T@T) T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@112 (T@T T@T) T@T)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@115 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U) Bool)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@179 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ) (= ($generated@@1 ($generated@@47 $generated@@51)) 6)) (forall (($generated@@52 T@T) ) (! (= ($generated@@48 ($generated@@47 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@47 $generated@@52))
))) (= (type $generated@@44) ($generated@@47 $generated@@4))) (= ($generated@@1 $generated@@49) 7)) (= (type $generated@@45) $generated@@49)) (= ($generated@@1 $generated@@50) 8)) (= (type $generated@@46) $generated@@50)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@63 $generated@@64)) 9)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@59 ($generated@@54 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@54 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@60 ($generated@@54 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@54 $generated@@67 $generated@@68))
))) (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (let (($generated@@71 ($generated@@60 (type $generated@@69))))
(= (type ($generated@@58 $generated@@69 $generated@@70)) $generated@@71))
 :pattern ( ($generated@@58 $generated@@69 $generated@@70))
))) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (let (($generated@@75 (type $generated@@74)))
(let (($generated@@76 (type $generated@@73)))
(= (type ($generated@@61 $generated@@72 $generated@@73 $generated@@74)) ($generated@@54 $generated@@76 $generated@@75))))
 :pattern ( ($generated@@61 $generated@@72 $generated@@73 $generated@@74))
))) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (let (($generated@@80 ($generated@@60 (type $generated@@77))))
 (=> (= (type $generated@@79) $generated@@80) (= ($generated@@58 ($generated@@61 $generated@@77 $generated@@78 $generated@@79) $generated@@78) $generated@@79)))
 :weight 0
))) (and (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (or (= $generated@@83 $generated@@84) (= ($generated@@58 ($generated@@61 $generated@@82 $generated@@83 $generated@@81) $generated@@84) ($generated@@58 $generated@@82 $generated@@84)))
 :weight 0
)) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (or true (= ($generated@@58 ($generated@@61 $generated@@86 $generated@@87 $generated@@85) $generated@@88) ($generated@@58 $generated@@86 $generated@@88)))
 :weight 0
)))) (= ($generated@@1 $generated@@55) 10)) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@48 (type $generated@@90))))
(= (type ($generated@@57 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@57 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@56) 11)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@62 $generated@@92 $generated@@93 $generated@@94)) $generated@@56)
 :pattern ( ($generated@@62 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@48 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@57 ($generated@@62 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@57 ($generated@@62 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@57 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@57 ($generated@@62 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@57 $generated@@104 $generated@@106)))
 :weight 0
)))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and (and (= (type $generated@@107) ($generated@@54 $generated@@55 $generated@@56)) (= (type $generated@@108) ($generated@@54 $generated@@55 $generated@@56))) ($generated@@53 $generated@@107 $generated@@108)) (forall (($generated@@109 T@U) ) (!  (=> (and (= (type $generated@@109) $generated@@55) ($generated@@0 ($generated@@57 ($generated@@58 $generated@@107 $generated@@109) $generated@@44))) ($generated@@0 ($generated@@57 ($generated@@58 $generated@@108 $generated@@109) $generated@@44)))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@108 $generated@@109) $generated@@44))
)))
 :pattern ( ($generated@@53 $generated@@107 $generated@@108))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (= ($generated@@1 ($generated@@112 $generated@@116 $generated@@117)) 12)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@113 ($generated@@112 $generated@@118 $generated@@119)) $generated@@118)
 :pattern ( ($generated@@112 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (! (= ($generated@@114 ($generated@@112 $generated@@120 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@112 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@114 (type $generated@@122))))
(= (type ($generated@@110 $generated@@122 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@110 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 (type $generated@@129)))
(let (($generated@@131 (type $generated@@127)))
(= (type ($generated@@115 $generated@@126 $generated@@127 $generated@@128 $generated@@129)) ($generated@@112 $generated@@131 $generated@@130))))
 :pattern ( ($generated@@115 $generated@@126 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@114 (type $generated@@132))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@110 ($generated@@115 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@133 $generated@@134) $generated@@135)))
 :weight 0
))) (and (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@110 ($generated@@115 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@110 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@110 ($generated@@115 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@110 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or true (= ($generated@@110 ($generated@@115 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@110 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ) (! (= (type ($generated@@111 $generated@@155 $generated@@156 $generated@@157 $generated@@158)) ($generated@@112 $generated@@55 $generated@@4))
 :pattern ( ($generated@@111 $generated@@155 $generated@@156 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (let (($generated@@165 ($generated@@48 (type $generated@@164))))
 (=> (and (and (and (and (= (type $generated@@159) $generated@@55) (= (type $generated@@160) ($generated@@54 $generated@@55 $generated@@56))) (= (type $generated@@161) ($generated@@47 $generated@@4))) (= (type $generated@@163) $generated@@55)) (= (type $generated@@164) ($generated@@47 $generated@@165))) (= ($generated@@0 ($generated@@110 ($generated@@111 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))  (=> (and (not (= $generated@@163 $generated@@159)) ($generated@@0 ($generated@@57 ($generated@@58 $generated@@160 $generated@@163) $generated@@161))) $generated@@162))))
 :pattern ( ($generated@@110 ($generated@@111 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))
)))
(assert  (and (= ($generated@@1 $generated@@167) 13) (= ($generated@@1 $generated@@168) 14)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@169) ($generated@@54 $generated@@55 $generated@@56)) (= (type $generated@@170) ($generated@@54 $generated@@55 $generated@@56))) (= (type $generated@@171) $generated@@167)) (= (type $generated@@172) $generated@@168)) ($generated@@53 $generated@@169 $generated@@170)) ($generated@@166 $generated@@171 $generated@@172 $generated@@169)) ($generated@@166 $generated@@171 $generated@@172 $generated@@170))
 :pattern ( ($generated@@53 $generated@@169 $generated@@170) ($generated@@166 $generated@@171 $generated@@172 $generated@@169))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@173) ($generated@@54 $generated@@55 $generated@@56)) (= (type $generated@@174) ($generated@@54 $generated@@55 $generated@@56))) (= (type $generated@@175) ($generated@@54 $generated@@55 $generated@@56))) (not (= $generated@@173 $generated@@175))) (and ($generated@@53 $generated@@173 $generated@@174) ($generated@@53 $generated@@174 $generated@@175))) ($generated@@53 $generated@@173 $generated@@175))
 :pattern ( ($generated@@53 $generated@@173 $generated@@174) ($generated@@53 $generated@@174 $generated@@175))
)))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@49)
 :pattern ( ($generated@@176 $generated@@178))
)) (= (type $generated@@177) $generated@@168)))
(assert (= ($generated@@176 $generated@@177) $generated@@45))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@50)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (= ($generated@@179 $generated@@177) $generated@@46))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@452 () T@T)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@497 () T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@504 (T@U Int) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 (T@U) Bool)
(declare-fun $generated@@628 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@68) (= (type $generated@@144) $generated@@68)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@72)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@140)))
(assert (= ($generated@@154 $generated@@155) $generated@@65))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@161) $generated@@68)) ($generated@@136 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@136 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@81 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@71 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@81) (= (type $generated@@212) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@213) ($generated@@70 $generated@@4))) (= (type $generated@@215) $generated@@81)) (= (type $generated@@216) ($generated@@70 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@164 $generated@@81 $generated@@4))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@71 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@81) (= (type $generated@@224) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@225) ($generated@@70 $generated@@4))) (= (type $generated@@227) $generated@@81)) (= (type $generated@@228) ($generated@@70 $generated@@229))) (= ($generated@@0 ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@140)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@68) (= (type $generated@@235) $generated@@68)) (= (type $generated@@236) $generated@@149)) (= (type $generated@@237) $generated@@149)) (= ($generated@@136 ($generated@@230 $generated@@236 $generated@@237) ($generated@@139 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@136 ($generated@@230 $generated@@236 $generated@@237) ($generated@@139 $generated@@234 $generated@@235)))
)))
(assert (= (type $generated@@238) $generated@@68))
(assert ($generated@@136 $generated@@155 $generated@@238))
(assert (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@239 $generated@@240)) ($generated@@78 $generated@@155 $generated@@238 $generated@@240))
 :pattern ( ($generated@@78 $generated@@155 $generated@@238 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@140) (= (type $generated@@242) $generated@@140)) (= ($generated@@146 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@146 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@140) (= (type $generated@@245) $generated@@140)) (= ($generated@@243 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@243 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@249) $generated@@68)) (= ($generated@@136 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@149) ($generated@@0 ($generated@@85 $generated@@248 $generated@@250))) ($generated@@231 $generated@@250 $generated@@249))
 :pattern ( ($generated@@85 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@136 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@254) $generated@@68)) (= ($generated@@136 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@149) ($generated@@0 ($generated@@85 $generated@@253 $generated@@255))) ($generated@@231 $generated@@255 $generated@@254))
 :pattern ( ($generated@@85 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@136 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@140) (= (type $generated@@262) $generated@@140)) (and ($generated@@260 $generated@@261) ($generated@@260 $generated@@262))) (= ($generated@@243 $generated@@261 $generated@@262) true))
 :pattern ( ($generated@@243 $generated@@261 $generated@@262) ($generated@@260 $generated@@261))
 :pattern ( ($generated@@243 $generated@@261 $generated@@262) ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@68) (= (type $generated@@265) $generated@@68)) (= (type $generated@@266) $generated@@149)) (= (type $generated@@267) $generated@@149)) (= (type $generated@@268) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@239 $generated@@268)) (= ($generated@@78 ($generated@@230 $generated@@266 $generated@@267) ($generated@@139 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@78 ($generated@@230 $generated@@266 $generated@@267) ($generated@@139 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@140) (= ($generated@@138 $generated@@269) (= ($generated@@154 $generated@@269) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@140) (= ($generated@@270 $generated@@271) (= ($generated@@154 $generated@@271) $generated@@63)))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@140) (= ($generated@@260 $generated@@272) (= ($generated@@154 $generated@@272) $generated@@65)))
 :pattern ( ($generated@@260 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@140) ($generated@@138 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@149) (= (type $generated@@275) $generated@@149)) (= $generated@@273 ($generated@@230 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@138 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@140) ($generated@@260 $generated@@284)) (= $generated@@284 $generated@@155))
 :pattern ( ($generated@@260 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@140)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@140) ($generated@@270 $generated@@287)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@140) (= $generated@@287 ($generated@@285 $generated@@288)))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@270 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@149)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@68) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@263 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@78 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@263 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@80 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@83 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@80 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@85 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@85 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@85 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@80 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@85 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@85 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@83 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@80 $generated@@337 $generated@@2)) (= ($generated@@158 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@85 $generated@@336 $generated@@338))) (<= ($generated ($generated@@85 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@85 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@158 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@149) ($generated@@231 $generated@@342 $generated@@238)) (and (= ($generated@@289 ($generated@@339 $generated@@140 $generated@@342)) $generated@@342) ($generated@@136 ($generated@@339 $generated@@140 $generated@@342) $generated@@238)))
 :pattern ( ($generated@@231 $generated@@342 $generated@@238))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@140) (= ($generated@@136 ($generated@@285 $generated@@343) $generated@@238) ($generated@@136 $generated@@343 $generated@@238)))
 :pattern ( ($generated@@136 ($generated@@285 $generated@@343) $generated@@238))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@140)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@346) $generated@@140) (= (type $generated@@347) $generated@@140)) (and ($generated@@270 $generated@@346) ($generated@@270 $generated@@347))) (= ($generated@@243 $generated@@346 $generated@@347) ($generated@@243 ($generated@@344 $generated@@346) ($generated@@344 $generated@@347))))
 :pattern ( ($generated@@243 $generated@@346 $generated@@347) ($generated@@270 $generated@@346))
 :pattern ( ($generated@@243 $generated@@346 $generated@@347) ($generated@@270 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@80 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@80 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@371) $generated@@68)) (= ($generated@@136 $generated@@370 ($generated@@157 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@370 $generated@@372)))) ($generated@@231 $generated@@372 $generated@@371))
 :pattern ( ($generated@@85 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@136 $generated@@370 ($generated@@157 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@374) $generated@@68)) (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@373 ($generated@@246 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@149) ($generated@@0 ($generated@@85 $generated@@373 $generated@@376))) ($generated@@263 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@85 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@78 $generated@@373 ($generated@@246 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@378) $generated@@68)) (= (type $generated@@379) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@377 ($generated@@251 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@149) ($generated@@0 ($generated@@85 $generated@@377 $generated@@380))) ($generated@@263 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@85 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@78 $generated@@377 ($generated@@251 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@85 ($generated@@295 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@85 ($generated@@295 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@304 (type $generated@@386))))
(let (($generated@@388 ($generated@@303 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@80 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@302 $generated@@149 $generated@@149)) (= (type $generated@@390) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@85 ($generated@@300 $generated@@389) ($generated@@147 ($generated@@339 $generated@@140 $generated@@390)))) (= ($generated@@85 ($generated@@384 $generated@@389) ($generated@@147 ($generated@@339 $generated@@140 $generated@@390))) ($generated@@148 ($generated@@339 $generated@@140 $generated@@390))))))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@322 (type $generated@@394))))
(let (($generated@@396 ($generated@@321 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@80 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@320 $generated@@149 $generated@@149)) (= (type $generated@@398) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@85 ($generated@@318 $generated@@397) ($generated@@147 ($generated@@339 $generated@@140 $generated@@398)))) (= ($generated@@85 ($generated@@392 $generated@@397) ($generated@@147 ($generated@@339 $generated@@140 $generated@@398))) ($generated@@148 ($generated@@339 $generated@@140 $generated@@398))))))
 :pattern ( ($generated@@85 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@303 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@302 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@85 ($generated@@352 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@85 ($generated@@300 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@85 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@399) $generated@@403))
 :pattern ( ($generated@@85 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@321 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@320 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@85 ($generated@@363 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@85 ($generated@@318 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@85 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@404) $generated@@408))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@68)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@302 $generated@@149 $generated@@149)) (= (type $generated@@413) $generated@@68)) (= (type $generated@@414) $generated@@68)) (= (type $generated@@415) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@412) $generated@@416))) (and ($generated@@263 ($generated@@85 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@263 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@85 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@78 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@68)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@320 $generated@@149 $generated@@149)) (= (type $generated@@421) $generated@@68)) (= (type $generated@@422) $generated@@68)) (= (type $generated@@423) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@420) $generated@@424))) (and ($generated@@263 ($generated@@85 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@263 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@78 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@425) $generated@@140) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@239 $generated@@426)) (= ($generated@@78 ($generated@@285 $generated@@425) $generated@@238 $generated@@426) ($generated@@78 $generated@@425 $generated@@238 $generated@@426)))
 :pattern ( ($generated@@78 ($generated@@285 $generated@@425) $generated@@238 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@140) ($generated@@136 $generated@@427 $generated@@238)) (or ($generated@@270 $generated@@427) ($generated@@260 $generated@@427)))
 :pattern ( ($generated@@260 $generated@@427) ($generated@@136 $generated@@427 $generated@@238))
 :pattern ( ($generated@@270 $generated@@427) ($generated@@136 $generated@@427 $generated@@238))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@80 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@322 (type $generated@@430))))
(let (($generated@@432 ($generated@@321 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@320 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@319 $generated@@432 $generated@@431)) (= ($generated@@318 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@318 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@363 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@363 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@322 (type $generated@@436))))
(let (($generated@@438 ($generated@@321 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@320 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@319 $generated@@438 $generated@@437)) (= ($generated@@391 $generated@@436) ($generated@@428 $generated@@149))))))
 :pattern ( ($generated@@391 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@304 (type $generated@@439))))
(let (($generated@@441 ($generated@@303 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@302 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@301 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@149) (= (type $generated@@443) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@439) ($generated@@289 ($generated@@230 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@383 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@322 (type $generated@@444))))
(let (($generated@@446 ($generated@@321 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@320 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@319 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@149) (= (type $generated@@448) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@391 $generated@@444) ($generated@@289 ($generated@@230 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@391 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@149) ($generated@@231 $generated@@449 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@449)) $generated@@449) ($generated@@136 ($generated@@339 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@149) ($generated@@231 $generated@@450 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@450)) $generated@@450) ($generated@@136 ($generated@@339 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@149) ($generated@@231 $generated@@451 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@451)) $generated@@451) ($generated@@136 ($generated@@339 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@451 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@452) 20))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@149) ($generated@@231 $generated@@453 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@452 $generated@@453)) $generated@@453) ($generated@@136 ($generated@@339 $generated@@452 $generated@@453) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@453 $generated@@45))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@68) (= ($generated@@231 ($generated@@289 $generated@@454) $generated@@455) ($generated@@136 $generated@@454 $generated@@455)))
 :pattern ( ($generated@@231 ($generated@@289 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@83 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@80 $generated@@457 $generated@@2)) (<= 0 ($generated@@294 $generated@@456))))
 :pattern ( ($generated@@294 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@279 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@278 $generated@@459)) (<= 0 ($generated@@277 $generated@@458))))
 :pattern ( ($generated@@277 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@68)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@460 ($generated@@409 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@409 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@409 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@409 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@76 ($generated@@409 $generated@@468 $generated@@469)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@417 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@417 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@417 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@417 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@76 ($generated@@417 $generated@@478 $generated@@479)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@149) (= (type $generated@@481) $generated@@149)) (= ($generated@@154 ($generated@@230 $generated@@480 $generated@@481)) $generated@@61))
 :pattern ( ($generated@@230 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@68) (= (type $generated@@485) $generated@@68)) (= ($generated@@482 ($generated@@139 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@139 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@139 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@139 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@149) (= (type $generated@@491) $generated@@149)) (= ($generated@@147 ($generated@@230 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@149) (= (type $generated@@493) $generated@@149)) (= ($generated@@148 ($generated@@230 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@230 $generated@@492 $generated@@493))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@496) 21) (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (! (= (type ($generated@@494 $generated@@498 $generated@@499)) $generated@@140)
 :pattern ( ($generated@@494 $generated@@498 $generated@@499))
))) (forall (($generated@@500 T@U) ) (! (= (type ($generated@@495 $generated@@500)) $generated@@496)
 :pattern ( ($generated@@495 $generated@@500))
))) (= (type $generated@@497) $generated@@496)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@496) (= (type $generated@@502) $generated@@140)) (= ($generated@@494 $generated@@501 $generated@@502) ($generated@@494 $generated@@497 $generated@@502)))
 :pattern ( ($generated@@494 ($generated@@495 $generated@@501) $generated@@502))
)))
(assert  (and (forall (($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@505))
)) (forall (($generated@@506 T@U) ($generated@@507 Int) ) (! (let (($generated@@508 ($generated@@279 (type $generated@@506))))
(= (type ($generated@@504 $generated@@506 $generated@@507)) $generated@@508))
 :pattern ( ($generated@@504 $generated@@506 $generated@@507))
))))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@278 $generated@@149)) (= (type $generated@@510) $generated@@68)) (= (type $generated@@511) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@509 ($generated@@503 $generated@@510) $generated@@511) (forall (($generated@@512 Int) ) (!  (=> (and (<= 0 $generated@@512) (< $generated@@512 ($generated@@277 $generated@@509))) ($generated@@263 ($generated@@504 $generated@@509 $generated@@512) $generated@@510 $generated@@511))
 :pattern ( ($generated@@504 $generated@@509 $generated@@512))
))))
 :pattern ( ($generated@@78 $generated@@509 ($generated@@503 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@514 Int) ) (! (= ($generated@@513 ($generated@@79 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@79 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@515 ($generated@@246 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@246 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@76 ($generated@@246 $generated@@518)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@519 ($generated@@251 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@251 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@76 ($generated@@251 $generated@@522)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@157 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@157 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@76 ($generated@@157 $generated@@526)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@527 ($generated@@503 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@503 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@76 ($generated@@503 $generated@@530)) $generated@@57))
 :pattern ( ($generated@@503 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@140) (= ($generated@@154 ($generated@@285 $generated@@531)) $generated@@63))
 :pattern ( ($generated@@285 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@140) (= ($generated@@344 ($generated@@285 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@285 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@339 $generated@@534 ($generated@@289 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@289 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@302 $generated@@149 $generated@@149)) (= (type $generated@@536) $generated@@68)) (= (type $generated@@537) $generated@@68)) (= ($generated@@136 $generated@@535 ($generated@@409 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@535) $generated@@538))) (and ($generated@@231 ($generated@@85 ($generated@@384 $generated@@535) $generated@@538) $generated@@537) ($generated@@231 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@85 ($generated@@384 $generated@@535) $generated@@538))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@136 $generated@@535 ($generated@@409 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@320 $generated@@149 $generated@@149)) (= (type $generated@@540) $generated@@68)) (= (type $generated@@541) $generated@@68)) (= ($generated@@136 $generated@@539 ($generated@@417 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@539) $generated@@542))) (and ($generated@@231 ($generated@@85 ($generated@@392 $generated@@539) $generated@@542) $generated@@541) ($generated@@231 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@539) $generated@@542))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@136 $generated@@539 ($generated@@417 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@149)) (< ($generated@@543 $generated@@545) ($generated@@544 ($generated@@230 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@230 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@149) (= (type $generated@@548) $generated@@149)) (< ($generated@@543 $generated@@548) ($generated@@544 ($generated@@230 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@230 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@496)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@496) (= (type $generated@@552) $generated@@140)) (= ($generated@@494 ($generated@@549 $generated@@551) $generated@@552) ($generated@@494 $generated@@551 $generated@@552)))
 :pattern ( ($generated@@494 ($generated@@549 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) $generated@@68)) ($generated@@231 $generated@@553 ($generated@@409 $generated@@554 $generated@@555))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@149 $generated@@149) $generated@@553)) $generated@@553) ($generated@@136 ($generated@@339 ($generated@@302 $generated@@149 $generated@@149) $generated@@553) ($generated@@409 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@231 $generated@@553 ($generated@@409 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@149) (= (type $generated@@557) $generated@@68)) (= (type $generated@@558) $generated@@68)) ($generated@@231 $generated@@556 ($generated@@417 $generated@@557 $generated@@558))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@149 $generated@@149) $generated@@556)) $generated@@556) ($generated@@136 ($generated@@339 ($generated@@320 $generated@@149 $generated@@149) $generated@@556) ($generated@@417 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@231 $generated@@556 ($generated@@417 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@68) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@149)) ($generated@@231 $generated@@561 ($generated@@139 $generated@@559 $generated@@560))) (and (= ($generated@@289 ($generated@@339 $generated@@140 $generated@@561)) $generated@@561) ($generated@@136 ($generated@@339 $generated@@140 $generated@@561) ($generated@@139 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@231 $generated@@561 ($generated@@139 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@140) (< ($generated@@544 $generated@@562) ($generated@@544 ($generated@@285 $generated@@562))))
 :pattern ( ($generated@@285 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
 (not ($generated@@0 ($generated@@85 ($generated@@428 $generated@@564) $generated@@563))))
 :pattern ( (let (($generated@@564 (type $generated@@563)))
($generated@@85 ($generated@@428 $generated@@564) $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@73)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@68) (= (type $generated@@568) $generated@@68)) (and (= ($generated@@76 ($generated@@139 $generated@@567 $generated@@568)) $generated@@62) (= ($generated@@565 ($generated@@139 $generated@@567 $generated@@568)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@140) (= ($generated@@543 ($generated@@289 $generated@@569)) ($generated@@544 $generated@@569)))
 :pattern ( ($generated@@543 ($generated@@289 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@149) ($generated@@231 $generated@@570 ($generated@@79 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@570)) $generated@@570) ($generated@@136 ($generated@@339 ($generated@@80 $generated@@149 $generated@@4) $generated@@570) ($generated@@79 0))))
 :pattern ( ($generated@@231 $generated@@570 ($generated@@79 0)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@149) (= (type $generated@@572) $generated@@68)) ($generated@@231 $generated@@571 ($generated@@246 $generated@@572))) (and (= ($generated@@289 ($generated@@339 ($generated@@80 $generated@@149 $generated@@4) $generated@@571)) $generated@@571) ($generated@@136 ($generated@@339 ($generated@@80 $generated@@149 $generated@@4) $generated@@571) ($generated@@246 $generated@@572))))
 :pattern ( ($generated@@231 $generated@@571 ($generated@@246 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@149) (= (type $generated@@574) $generated@@68)) ($generated@@231 $generated@@573 ($generated@@251 $generated@@574))) (and (= ($generated@@289 ($generated@@339 ($generated@@80 $generated@@149 $generated@@4) $generated@@573)) $generated@@573) ($generated@@136 ($generated@@339 ($generated@@80 $generated@@149 $generated@@4) $generated@@573) ($generated@@251 $generated@@574))))
 :pattern ( ($generated@@231 $generated@@573 ($generated@@251 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@68)) ($generated@@231 $generated@@575 ($generated@@157 $generated@@576))) (and (= ($generated@@289 ($generated@@339 ($generated@@80 $generated@@149 $generated@@2) $generated@@575)) $generated@@575) ($generated@@136 ($generated@@339 ($generated@@80 $generated@@149 $generated@@2) $generated@@575) ($generated@@157 $generated@@576))))
 :pattern ( ($generated@@231 $generated@@575 ($generated@@157 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@149) (= (type $generated@@578) $generated@@68)) ($generated@@231 $generated@@577 ($generated@@503 $generated@@578))) (and (= ($generated@@289 ($generated@@339 ($generated@@278 $generated@@149) $generated@@577)) $generated@@577) ($generated@@136 ($generated@@339 ($generated@@278 $generated@@149) $generated@@577) ($generated@@503 $generated@@578))))
 :pattern ( ($generated@@231 $generated@@577 ($generated@@503 $generated@@578)))
)))
(assert (= ($generated@@76 $generated@@238) $generated@@64))
(assert (= ($generated@@565 $generated@@238) $generated@@67))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@579 ($generated@@157 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@579 $generated@@582)))) ($generated@@263 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@85 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@78 $generated@@579 ($generated@@157 $generated@@580) $generated@@581))
)))
(assert (= $generated@@155 ($generated@@256 $generated@@155)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@140) (= (type $generated@@584) $generated@@68)) (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@239 $generated@@585) (and ($generated@@138 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@68) ($generated@@78 $generated@@583 ($generated@@139 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@78 $generated@@583 ($generated@@139 $generated@@584 $generated@@586) $generated@@585))
))))) ($generated@@263 ($generated@@147 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@263 ($generated@@147 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@140) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@239 $generated@@589) (and ($generated@@138 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@68) ($generated@@78 $generated@@587 ($generated@@139 $generated@@590 $generated@@588) $generated@@589))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@139 $generated@@590 $generated@@588) $generated@@589))
))))) ($generated@@263 ($generated@@148 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@263 ($generated@@148 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@140) (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@239 $generated@@592) (and ($generated@@270 $generated@@591) ($generated@@78 $generated@@591 $generated@@238 $generated@@592)))) ($generated@@78 ($generated@@344 $generated@@591) $generated@@238 $generated@@592))
 :pattern ( ($generated@@78 ($generated@@344 $generated@@591) $generated@@238 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@149) (= (type $generated@@594) $generated@@149)) (= ($generated@@230 ($generated@@256 $generated@@593) ($generated@@256 $generated@@594)) ($generated@@256 ($generated@@230 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@230 ($generated@@256 $generated@@593) ($generated@@256 $generated@@594)))
)))
(assert  (=> (<= 2 $generated@@595) (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@496) (= (type $generated@@598) $generated@@140)) (or ($generated@@596 $generated@@598) (and (not (= 2 $generated@@595)) ($generated@@136 $generated@@598 $generated@@238)))) ($generated@@136 ($generated@@494 $generated@@597 $generated@@598) $generated@@238))
 :pattern ( ($generated@@494 $generated@@597 $generated@@598))
))))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@140) (= ($generated@@285 ($generated@@256 $generated@@599)) ($generated@@256 ($generated@@285 $generated@@599))))
 :pattern ( ($generated@@285 ($generated@@256 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@289 ($generated@@256 $generated@@600)) ($generated@@256 ($generated@@289 $generated@@600)))
 :pattern ( ($generated@@289 ($generated@@256 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@279 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@278 $generated@@602)) (= ($generated@@277 $generated@@601) 0)) (= $generated@@601 ($generated@@276 $generated@@602))))
 :pattern ( ($generated@@277 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@80 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@294 ($generated@@86 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@294 $generated@@603) ($generated ($generated@@85 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@294 ($generated@@86 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@608) $generated@@2)) ($generated@@78 $generated@@608 $generated@@46 $generated@@607))
 :pattern ( ($generated@@78 $generated@@608 $generated@@46 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@610) $generated@@3)) ($generated@@78 $generated@@610 $generated@@47 $generated@@609))
 :pattern ( ($generated@@78 $generated@@610 $generated@@47 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@612) $generated@@4)) ($generated@@78 $generated@@612 $generated@@44 $generated@@611))
 :pattern ( ($generated@@78 $generated@@612 $generated@@44 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@452)) ($generated@@78 $generated@@614 $generated@@45 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@45 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@149)) ($generated@@78 $generated@@616 $generated@@48 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@48 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@278 $generated@@149)) (= (type $generated@@618) $generated@@68)) (= ($generated@@136 $generated@@617 ($generated@@503 $generated@@618)) (forall (($generated@@619 Int) ) (!  (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@277 $generated@@617))) ($generated@@231 ($generated@@504 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@504 $generated@@617 $generated@@619))
))))
 :pattern ( ($generated@@136 $generated@@617 ($generated@@503 $generated@@618)))
)))
(assert  (=> (<= 2 $generated@@595) (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@496) (= (type $generated@@621) $generated@@140)) (or ($generated@@596 ($generated@@256 $generated@@621)) (and (not (= 2 $generated@@595)) ($generated@@136 $generated@@621 $generated@@238)))) (and (=> ($generated@@0 ($generated@@256 ($generated@@11 ($generated@@270 ($generated@@256 $generated@@621))))) (let (($generated@@622 ($generated@@256 ($generated@@344 ($generated@@256 $generated@@621)))))
($generated@@596 $generated@@622))) (= ($generated@@494 ($generated@@549 $generated@@620) ($generated@@256 $generated@@621)) (ite ($generated@@270 ($generated@@256 $generated@@621)) (let (($generated@@623 ($generated@@256 ($generated@@344 ($generated@@256 $generated@@621)))))
($generated@@256 ($generated@@494 ($generated@@549 $generated@@620) $generated@@623))) $generated@@621))))
 :weight 3
 :pattern ( ($generated@@494 ($generated@@549 $generated@@620) ($generated@@256 $generated@@621)))
))))
(assert  (=> (<= 2 $generated@@595) (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@496) (= (type $generated@@625) $generated@@140)) (or ($generated@@596 $generated@@625) (and (not (= 2 $generated@@595)) ($generated@@136 $generated@@625 $generated@@238)))) (and (=> ($generated@@270 $generated@@625) (let (($generated@@626 ($generated@@344 $generated@@625)))
($generated@@596 $generated@@626))) (= ($generated@@494 ($generated@@549 $generated@@624) $generated@@625) (ite ($generated@@270 $generated@@625) (let (($generated@@627 ($generated@@344 $generated@@625)))
($generated@@494 $generated@@624 $generated@@627)) $generated@@625))))
 :pattern ( ($generated@@494 ($generated@@549 $generated@@624) $generated@@625))
))))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) ($generated@@278 $generated@@149)) (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@277 $generated@@629))) (< ($generated@@544 ($generated@@339 $generated@@140 ($generated@@504 $generated@@629 $generated@@630))) ($generated@@628 $generated@@629))))
 :pattern ( ($generated@@544 ($generated@@339 $generated@@140 ($generated@@504 $generated@@629 $generated@@630))))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@302 $generated@@149 $generated@@149)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@136 $generated@@631 ($generated@@409 $generated@@632 $generated@@633))) (and (and ($generated@@136 ($generated@@300 $generated@@631) ($generated@@246 $generated@@632)) ($generated@@136 ($generated@@352 $generated@@631) ($generated@@246 $generated@@633))) ($generated@@136 ($generated@@383 $generated@@631) ($generated@@246 ($generated@@139 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@136 $generated@@631 ($generated@@409 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@320 $generated@@149 $generated@@149)) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) $generated@@68)) ($generated@@136 $generated@@634 ($generated@@417 $generated@@635 $generated@@636))) (and (and ($generated@@136 ($generated@@318 $generated@@634) ($generated@@251 $generated@@635)) ($generated@@136 ($generated@@363 $generated@@634) ($generated@@251 $generated@@636))) ($generated@@136 ($generated@@391 $generated@@634) ($generated@@251 ($generated@@139 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@136 $generated@@634 ($generated@@417 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@2) ($generated@@136 $generated@@637 $generated@@46))
 :pattern ( ($generated@@136 $generated@@637 $generated@@46))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@3) ($generated@@136 $generated@@638 $generated@@47))
 :pattern ( ($generated@@136 $generated@@638 $generated@@47))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@4) ($generated@@136 $generated@@639 $generated@@44))
 :pattern ( ($generated@@136 $generated@@639 $generated@@44))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@452) ($generated@@136 $generated@@640 $generated@@45))
 :pattern ( ($generated@@136 $generated@@640 $generated@@45))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@149) ($generated@@136 $generated@@641 $generated@@48))
 :pattern ( ($generated@@136 $generated@@641 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@642) $generated@@140) (= (type $generated@@643) $generated@@140)) (= (type $generated@@644) $generated@@140)) (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@646) $generated@@140)) (= (type $generated@@647) ($generated@@164 $generated@@81 $generated@@4))) (= (type $generated@@648) $generated@@81)) (= (type $generated@@649) ($generated@@164 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@651 true))
(let (($generated@@652 true))
(let (($generated@@653  (=> (not (= $generated@@642 ($generated@@285 $generated@@643))) (and (=> (= (ControlFlow 0 6) 4) $generated@@652) (=> (= (ControlFlow 0 6) 5) $generated@@651)))))
(let (($generated@@654  (=> (and (= $generated@@642 ($generated@@285 $generated@@643)) ($generated@@136 $generated@@643 $generated@@238)) (=> (and (and (and ($generated@@136 $generated@@644 $generated@@238) ($generated@@78 $generated@@644 $generated@@238 $generated@@645)) (= $generated@@646 $generated@@643)) (and (and ($generated@@136 $generated@@646 $generated@@238) (= $generated@@644 $generated@@646)) (and ($generated@@78 $generated@@644 $generated@@238 $generated@@645) (= (ControlFlow 0 3) (- 0 2))))) (< ($generated@@544 $generated@@644) ($generated@@544 $generated@@642))))))
(let (($generated@@655  (=> (= $generated@@647 ($generated@@218 $generated@@648 $generated@@645 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 3) $generated@@654) (=> (= (ControlFlow 0 7) 6) $generated@@653)))))
(let (($generated@@656 true))
(let (($generated@@657  (=> (= $generated@@649 ($generated@@163 $generated@@648 $generated@@645 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@656) (=> (= (ControlFlow 0 8) 7) $generated@@655)))))
(let (($generated@@658  (=> (and (and (and ($generated@@239 $generated@@645) ($generated@@650 $generated@@645)) ($generated@@136 $generated@@642 $generated@@238)) (and (= 2 $generated@@595) (= (ControlFlow 0 9) 8))) $generated@@657)))
$generated@@658)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) Bool)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@373 (T@U) Bool)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@68) (= (type $generated@@148) $generated@@68)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@72)
 :pattern ( ($generated@@158 $generated@@160))
)) (= (type $generated@@159) $generated@@144)))
(assert (= ($generated@@158 $generated@@159) $generated@@65))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@68)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@165) $generated@@68)) ($generated@@140 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@140 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@81 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@71 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@81) (= (type $generated@@216) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@217) ($generated@@70 $generated@@4))) (= (type $generated@@219) $generated@@81)) (= (type $generated@@220) ($generated@@70 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= (type ($generated@@222 $generated@@224 $generated@@225)) $generated@@144)
 :pattern ( ($generated@@222 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (and (= (type $generated@@226) $generated@@68) (= (type $generated@@227) $generated@@68)) (= (type $generated@@228) $generated@@153)) (= (type $generated@@229) $generated@@153)) (= ($generated@@140 ($generated@@222 $generated@@228 $generated@@229) ($generated@@143 $generated@@226 $generated@@227))  (and ($generated@@223 $generated@@228 $generated@@226) ($generated@@223 $generated@@229 $generated@@227))))
 :pattern ( ($generated@@140 ($generated@@222 $generated@@228 $generated@@229) ($generated@@143 $generated@@226 $generated@@227)))
)))
(assert (= (type $generated@@230) $generated@@68))
(assert ($generated@@140 $generated@@159 $generated@@230))
(assert (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@231 $generated@@232)) ($generated@@78 $generated@@159 $generated@@230 $generated@@232))
 :pattern ( ($generated@@78 $generated@@159 $generated@@230 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@144) (= (type $generated@@234) $generated@@144)) (= ($generated@@150 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@150 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@144) (= (type $generated@@237) $generated@@144)) (= ($generated@@235 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@235 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@68)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@241) $generated@@68)) (= ($generated@@140 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@153) ($generated@@0 ($generated@@85 $generated@@240 $generated@@242))) ($generated@@223 $generated@@242 $generated@@241))
 :pattern ( ($generated@@85 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@140 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@68)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@246) $generated@@68)) (= ($generated@@140 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@153) ($generated@@0 ($generated@@85 $generated@@245 $generated@@247))) ($generated@@223 $generated@@247 $generated@@246))
 :pattern ( ($generated@@85 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@140 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (= (type $generated@@253) $generated@@144) (= (type $generated@@254) $generated@@144)) (and ($generated@@252 $generated@@253) ($generated@@252 $generated@@254))) (= ($generated@@235 $generated@@253 $generated@@254) true))
 :pattern ( ($generated@@235 $generated@@253 $generated@@254) ($generated@@252 $generated@@253))
 :pattern ( ($generated@@235 $generated@@253 $generated@@254) ($generated@@252 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@68) (= (type $generated@@257) $generated@@68)) (= (type $generated@@258) $generated@@153)) (= (type $generated@@259) $generated@@153)) (= (type $generated@@260) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@231 $generated@@260)) (= ($generated@@78 ($generated@@222 $generated@@258 $generated@@259) ($generated@@143 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@78 ($generated@@222 $generated@@258 $generated@@259) ($generated@@143 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@144) (= ($generated@@142 $generated@@261) (= ($generated@@158 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@144) (= ($generated@@262 $generated@@263) (= ($generated@@158 $generated@@263) $generated@@63)))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@144) (= ($generated@@252 $generated@@264) (= ($generated@@158 $generated@@264) $generated@@65)))
 :pattern ( ($generated@@252 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@144) ($generated@@142 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@153) (= (type $generated@@267) $generated@@153)) (= $generated@@265 ($generated@@222 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@142 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@144) ($generated@@252 $generated@@276)) (= $generated@@276 $generated@@159))
 :pattern ( ($generated@@252 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@144)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@144) ($generated@@262 $generated@@279)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@144) (= $generated@@279 ($generated@@277 $generated@@280)))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@262 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@153)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@68) (= (type $generated@@285) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@255 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@78 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@255 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@287) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@288) $generated@@153)) (= (type $generated@@289) $generated@@68)) ($generated@@136 $generated@@286 $generated@@287)) ($generated@@255 $generated@@288 $generated@@289 $generated@@286)) ($generated@@255 $generated@@288 $generated@@289 $generated@@287))
 :pattern ( ($generated@@136 $generated@@286 $generated@@287) ($generated@@255 $generated@@288 $generated@@289 $generated@@286))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@290) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@293) $generated@@68)) ($generated@@136 $generated@@290 $generated@@291)) ($generated@@78 $generated@@292 $generated@@293 $generated@@290)) ($generated@@78 $generated@@292 $generated@@293 $generated@@291))
 :pattern ( ($generated@@136 $generated@@290 $generated@@291) ($generated@@78 $generated@@292 $generated@@293 $generated@@290))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@80 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@83 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@80 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@85 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@85 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@85 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@80 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@85 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@85 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@83 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@80 $generated@@337 $generated@@2)) (= ($generated@@162 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@85 $generated@@336 $generated@@338))) (<= ($generated ($generated@@85 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@85 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@162 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@153) ($generated@@223 $generated@@342 $generated@@230)) (and (= ($generated@@281 ($generated@@339 $generated@@144 $generated@@342)) $generated@@342) ($generated@@140 ($generated@@339 $generated@@144 $generated@@342) $generated@@230)))
 :pattern ( ($generated@@223 $generated@@342 $generated@@230))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@144) (= ($generated@@140 ($generated@@277 $generated@@343) $generated@@230) ($generated@@140 $generated@@343 $generated@@230)))
 :pattern ( ($generated@@140 ($generated@@277 $generated@@343) $generated@@230))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@144)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@346) $generated@@144) (= (type $generated@@347) $generated@@144)) (and ($generated@@262 $generated@@346) ($generated@@262 $generated@@347))) (= ($generated@@235 $generated@@346 $generated@@347) ($generated@@235 ($generated@@344 $generated@@346) ($generated@@344 $generated@@347))))
 :pattern ( ($generated@@235 $generated@@346 $generated@@347) ($generated@@262 $generated@@346))
 :pattern ( ($generated@@235 $generated@@346 $generated@@347) ($generated@@262 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@80 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@80 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@371) $generated@@68)) (= ($generated@@140 $generated@@370 ($generated@@161 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@370 $generated@@372)))) ($generated@@223 $generated@@372 $generated@@371))
 :pattern ( ($generated@@85 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@140 $generated@@370 ($generated@@161 $generated@@371)))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@144) ($generated@@373 $generated@@374)) (or ($generated@@262 $generated@@374) ($generated@@252 $generated@@374)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@376) $generated@@68)) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@375 ($generated@@238 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@153) ($generated@@0 ($generated@@85 $generated@@375 $generated@@378))) ($generated@@255 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@85 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@78 $generated@@375 ($generated@@238 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@380) $generated@@68)) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@379 ($generated@@243 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@153) ($generated@@0 ($generated@@85 $generated@@379 $generated@@382))) ($generated@@255 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@85 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@78 $generated@@379 ($generated@@243 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@85 ($generated@@295 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@85 ($generated@@295 $generated@@384) $generated@@383)))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@304 (type $generated@@388))))
(let (($generated@@390 ($generated@@303 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@80 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@302 $generated@@153 $generated@@153)) (= (type $generated@@392) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@85 ($generated@@300 $generated@@391) ($generated@@151 ($generated@@339 $generated@@144 $generated@@392)))) (= ($generated@@85 ($generated@@386 $generated@@391) ($generated@@151 ($generated@@339 $generated@@144 $generated@@392))) ($generated@@152 ($generated@@339 $generated@@144 $generated@@392))))))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@322 (type $generated@@396))))
(let (($generated@@398 ($generated@@321 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@320 $generated@@153 $generated@@153)) (= (type $generated@@400) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@85 ($generated@@318 $generated@@399) ($generated@@151 ($generated@@339 $generated@@144 $generated@@400)))) (= ($generated@@85 ($generated@@394 $generated@@399) ($generated@@151 ($generated@@339 $generated@@144 $generated@@400))) ($generated@@152 ($generated@@339 $generated@@144 $generated@@400))))))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@303 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@302 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@85 ($generated@@352 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@85 ($generated@@300 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@85 ($generated@@386 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@401) $generated@@405))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@321 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@320 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@85 ($generated@@363 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@85 ($generated@@318 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@85 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@406) $generated@@410))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@68)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@302 $generated@@153 $generated@@153)) (= (type $generated@@415) $generated@@68)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@414) $generated@@418))) (and ($generated@@255 ($generated@@85 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@255 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@78 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@68)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@320 $generated@@153 $generated@@153)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@422) $generated@@426))) (and ($generated@@255 ($generated@@85 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@255 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@78 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@427) $generated@@144) (= (type $generated@@428) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@231 $generated@@428)) (= ($generated@@78 ($generated@@277 $generated@@427) $generated@@230 $generated@@428) ($generated@@78 $generated@@427 $generated@@230 $generated@@428)))
 :pattern ( ($generated@@78 ($generated@@277 $generated@@427) $generated@@230 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@144) ($generated@@140 $generated@@429 $generated@@230)) (or ($generated@@262 $generated@@429) ($generated@@252 $generated@@429)))
 :pattern ( ($generated@@252 $generated@@429) ($generated@@140 $generated@@429 $generated@@230))
 :pattern ( ($generated@@262 $generated@@429) ($generated@@140 $generated@@429 $generated@@230))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@430 $generated@@432))) (and ($generated@@136 $generated@@430 $generated@@431) ($generated@@136 $generated@@431 $generated@@432))) ($generated@@136 $generated@@430 $generated@@432))
 :pattern ( ($generated@@136 $generated@@430 $generated@@431) ($generated@@136 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@80 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@322 (type $generated@@435))))
(let (($generated@@437 ($generated@@321 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@320 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@319 $generated@@437 $generated@@436)) (= ($generated@@318 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@318 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@322 (type $generated@@438))))
(let (($generated@@440 ($generated@@321 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@320 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@319 $generated@@440 $generated@@439)) (= ($generated@@363 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@363 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@322 (type $generated@@441))))
(let (($generated@@443 ($generated@@321 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@320 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@319 $generated@@443 $generated@@442)) (= ($generated@@393 $generated@@441) ($generated@@433 $generated@@153))))))
 :pattern ( ($generated@@393 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@304 (type $generated@@444))))
(let (($generated@@446 ($generated@@303 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@302 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@301 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@153) (= (type $generated@@448) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@385 $generated@@444) ($generated@@281 ($generated@@222 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@385 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@322 (type $generated@@449))))
(let (($generated@@451 ($generated@@321 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@320 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@319 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@153) (= (type $generated@@453) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@449) ($generated@@281 ($generated@@222 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@393 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@153) ($generated@@223 $generated@@454 $generated@@46)) (and (= ($generated@@281 ($generated@@339 $generated@@2 $generated@@454)) $generated@@454) ($generated@@140 ($generated@@339 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@223 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@153) ($generated@@223 $generated@@455 $generated@@47)) (and (= ($generated@@281 ($generated@@339 $generated@@3 $generated@@455)) $generated@@455) ($generated@@140 ($generated@@339 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@223 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@153) ($generated@@223 $generated@@456 $generated@@44)) (and (= ($generated@@281 ($generated@@339 $generated@@4 $generated@@456)) $generated@@456) ($generated@@140 ($generated@@339 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@223 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@153) ($generated@@223 $generated@@458 $generated@@45)) (and (= ($generated@@281 ($generated@@339 $generated@@457 $generated@@458)) $generated@@458) ($generated@@140 ($generated@@339 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@223 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@68) (= ($generated@@223 ($generated@@281 $generated@@459) $generated@@460) ($generated@@140 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@223 ($generated@@281 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@83 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@80 $generated@@462 $generated@@2)) (<= 0 ($generated@@294 $generated@@461))))
 :pattern ( ($generated@@294 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@271 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@270 $generated@@464)) (<= 0 ($generated@@269 $generated@@463))))
 :pattern ( ($generated@@269 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@68)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@68) (= (type $generated@@468) $generated@@68)) (= ($generated@@465 ($generated@@411 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@68)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@68)) (= ($generated@@469 ($generated@@411 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@411 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@68)) (= ($generated@@76 ($generated@@411 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@68) (= (type $generated@@478) $generated@@68)) (= ($generated@@475 ($generated@@419 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@419 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@419 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@76 ($generated@@419 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@153) (= (type $generated@@486) $generated@@153)) (= ($generated@@158 ($generated@@222 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@222 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@143 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@143 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@491 ($generated@@143 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@143 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@153) (= (type $generated@@496) $generated@@153)) (= ($generated@@151 ($generated@@222 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@222 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@153) (= (type $generated@@498) $generated@@153)) (= ($generated@@152 ($generated@@222 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@222 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@271 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@270 $generated@@153)) (= (type $generated@@506) $generated@@68)) (= (type $generated@@507) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@269 $generated@@505))) ($generated@@255 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@78 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@79 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@79 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@511 ($generated@@238 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@238 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@76 ($generated@@238 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@515 ($generated@@243 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@243 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@76 ($generated@@243 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@519 ($generated@@161 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@161 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@76 ($generated@@161 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@76 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@144) (= ($generated@@158 ($generated@@277 $generated@@527)) $generated@@63))
 :pattern ( ($generated@@277 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@144) (= ($generated@@344 ($generated@@277 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@277 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
(= ($generated@@339 $generated@@530 ($generated@@281 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@281 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@302 $generated@@153 $generated@@153)) (= (type $generated@@532) $generated@@68)) (= (type $generated@@533) $generated@@68)) (= ($generated@@140 $generated@@531 ($generated@@411 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@531) $generated@@534))) (and ($generated@@223 ($generated@@85 ($generated@@386 $generated@@531) $generated@@534) $generated@@533) ($generated@@223 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@531) $generated@@534))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@140 $generated@@531 ($generated@@411 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@320 $generated@@153 $generated@@153)) (= (type $generated@@536) $generated@@68)) (= (type $generated@@537) $generated@@68)) (= ($generated@@140 $generated@@535 ($generated@@419 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@535) $generated@@538))) (and ($generated@@223 ($generated@@85 ($generated@@394 $generated@@535) $generated@@538) $generated@@537) ($generated@@223 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@535) $generated@@538))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@140 $generated@@535 ($generated@@419 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@153) (= (type $generated@@542) $generated@@153)) (< ($generated@@539 $generated@@541) ($generated@@540 ($generated@@222 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@222 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@153) (= (type $generated@@544) $generated@@153)) (< ($generated@@539 $generated@@544) ($generated@@540 ($generated@@222 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@222 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@153) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) $generated@@68)) ($generated@@223 $generated@@545 ($generated@@411 $generated@@546 $generated@@547))) (and (= ($generated@@281 ($generated@@339 ($generated@@302 $generated@@153 $generated@@153) $generated@@545)) $generated@@545) ($generated@@140 ($generated@@339 ($generated@@302 $generated@@153 $generated@@153) $generated@@545) ($generated@@411 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@223 $generated@@545 ($generated@@411 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@153) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) $generated@@68)) ($generated@@223 $generated@@548 ($generated@@419 $generated@@549 $generated@@550))) (and (= ($generated@@281 ($generated@@339 ($generated@@320 $generated@@153 $generated@@153) $generated@@548)) $generated@@548) ($generated@@140 ($generated@@339 ($generated@@320 $generated@@153 $generated@@153) $generated@@548) ($generated@@419 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@223 $generated@@548 ($generated@@419 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@68) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@153)) ($generated@@223 $generated@@553 ($generated@@143 $generated@@551 $generated@@552))) (and (= ($generated@@281 ($generated@@339 $generated@@144 $generated@@553)) $generated@@553) ($generated@@140 ($generated@@339 $generated@@144 $generated@@553) ($generated@@143 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@223 $generated@@553 ($generated@@143 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@144) (< ($generated@@540 $generated@@554) ($generated@@540 ($generated@@277 $generated@@554))))
 :pattern ( ($generated@@277 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@85 ($generated@@433 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@85 ($generated@@433 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@73)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@68) (= (type $generated@@560) $generated@@68)) (and (= ($generated@@76 ($generated@@143 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@143 $generated@@559 $generated@@560)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@144) (= ($generated@@539 ($generated@@281 $generated@@561)) ($generated@@540 $generated@@561)))
 :pattern ( ($generated@@539 ($generated@@281 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@153) ($generated@@223 $generated@@562 ($generated@@79 0))) (and (= ($generated@@281 ($generated@@339 $generated@@2 $generated@@562)) $generated@@562) ($generated@@140 ($generated@@339 ($generated@@80 $generated@@153 $generated@@4) $generated@@562) ($generated@@79 0))))
 :pattern ( ($generated@@223 $generated@@562 ($generated@@79 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@153) (= (type $generated@@564) $generated@@68)) ($generated@@223 $generated@@563 ($generated@@238 $generated@@564))) (and (= ($generated@@281 ($generated@@339 ($generated@@80 $generated@@153 $generated@@4) $generated@@563)) $generated@@563) ($generated@@140 ($generated@@339 ($generated@@80 $generated@@153 $generated@@4) $generated@@563) ($generated@@238 $generated@@564))))
 :pattern ( ($generated@@223 $generated@@563 ($generated@@238 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@153) (= (type $generated@@566) $generated@@68)) ($generated@@223 $generated@@565 ($generated@@243 $generated@@566))) (and (= ($generated@@281 ($generated@@339 ($generated@@80 $generated@@153 $generated@@4) $generated@@565)) $generated@@565) ($generated@@140 ($generated@@339 ($generated@@80 $generated@@153 $generated@@4) $generated@@565) ($generated@@243 $generated@@566))))
 :pattern ( ($generated@@223 $generated@@565 ($generated@@243 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@153) (= (type $generated@@568) $generated@@68)) ($generated@@223 $generated@@567 ($generated@@161 $generated@@568))) (and (= ($generated@@281 ($generated@@339 ($generated@@80 $generated@@153 $generated@@2) $generated@@567)) $generated@@567) ($generated@@140 ($generated@@339 ($generated@@80 $generated@@153 $generated@@2) $generated@@567) ($generated@@161 $generated@@568))))
 :pattern ( ($generated@@223 $generated@@567 ($generated@@161 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@153) (= (type $generated@@570) $generated@@68)) ($generated@@223 $generated@@569 ($generated@@499 $generated@@570))) (and (= ($generated@@281 ($generated@@339 ($generated@@270 $generated@@153) $generated@@569)) $generated@@569) ($generated@@140 ($generated@@339 ($generated@@270 $generated@@153) $generated@@569) ($generated@@499 $generated@@570))))
 :pattern ( ($generated@@223 $generated@@569 ($generated@@499 $generated@@570)))
)))
(assert (= ($generated@@76 $generated@@230) $generated@@64))
(assert (= ($generated@@557 $generated@@230) $generated@@67))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@571 ($generated@@161 $generated@@572) $generated@@573) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@571 $generated@@574)))) ($generated@@255 $generated@@574 $generated@@572 $generated@@573))
 :pattern ( ($generated@@85 $generated@@571 $generated@@574))
))))
 :pattern ( ($generated@@78 $generated@@571 ($generated@@161 $generated@@572) $generated@@573))
)))
(assert (= $generated@@159 ($generated@@248 $generated@@159)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@144) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@231 $generated@@577) (and ($generated@@142 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@68) ($generated@@78 $generated@@575 ($generated@@143 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@78 $generated@@575 ($generated@@143 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@255 ($generated@@151 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@255 ($generated@@151 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@144) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@231 $generated@@581) (and ($generated@@142 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@68) ($generated@@78 $generated@@579 ($generated@@143 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@78 $generated@@579 ($generated@@143 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@255 ($generated@@152 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@255 ($generated@@152 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@144) (= (type $generated@@584) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@231 $generated@@584) (and ($generated@@262 $generated@@583) ($generated@@78 $generated@@583 $generated@@230 $generated@@584)))) ($generated@@78 ($generated@@344 $generated@@583) $generated@@230 $generated@@584))
 :pattern ( ($generated@@78 ($generated@@344 $generated@@583) $generated@@230 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@153) (= (type $generated@@586) $generated@@153)) (= ($generated@@222 ($generated@@248 $generated@@585) ($generated@@248 $generated@@586)) ($generated@@248 ($generated@@222 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@222 ($generated@@248 $generated@@585) ($generated@@248 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@144) (= ($generated@@277 ($generated@@248 $generated@@587)) ($generated@@248 ($generated@@277 $generated@@587))))
 :pattern ( ($generated@@277 ($generated@@248 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@281 ($generated@@248 $generated@@588)) ($generated@@248 ($generated@@281 $generated@@588)))
 :pattern ( ($generated@@281 ($generated@@248 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@271 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@270 $generated@@590)) (= ($generated@@269 $generated@@589) 0)) (= $generated@@589 ($generated@@268 $generated@@590))))
 :pattern ( ($generated@@269 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@80 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@86 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@85 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@86 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@596) $generated@@2)) ($generated@@78 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@78 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@598) $generated@@3)) ($generated@@78 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@78 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@600) $generated@@4)) ($generated@@78 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@78 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@602) $generated@@457)) ($generated@@78 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@78 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@604) $generated@@153)) ($generated@@78 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@78 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@270 $generated@@153)) (= (type $generated@@606) $generated@@68)) (= ($generated@@140 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@269 $generated@@605))) ($generated@@223 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@140 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@270 $generated@@153)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@269 $generated@@609))) (< ($generated@@540 ($generated@@339 $generated@@144 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@540 ($generated@@339 $generated@@144 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@153 $generated@@153)) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) $generated@@68)) ($generated@@140 $generated@@611 ($generated@@411 $generated@@612 $generated@@613))) (and (and ($generated@@140 ($generated@@300 $generated@@611) ($generated@@238 $generated@@612)) ($generated@@140 ($generated@@352 $generated@@611) ($generated@@238 $generated@@613))) ($generated@@140 ($generated@@385 $generated@@611) ($generated@@238 ($generated@@143 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@140 $generated@@611 ($generated@@411 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@153 $generated@@153)) (= (type $generated@@615) $generated@@68)) (= (type $generated@@616) $generated@@68)) ($generated@@140 $generated@@614 ($generated@@419 $generated@@615 $generated@@616))) (and (and ($generated@@140 ($generated@@318 $generated@@614) ($generated@@243 $generated@@615)) ($generated@@140 ($generated@@363 $generated@@614) ($generated@@243 $generated@@616))) ($generated@@140 ($generated@@393 $generated@@614) ($generated@@243 ($generated@@143 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@140 $generated@@614 ($generated@@419 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@140 $generated@@617 $generated@@46))
 :pattern ( ($generated@@140 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@140 $generated@@618 $generated@@47))
 :pattern ( ($generated@@140 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@140 $generated@@619 $generated@@44))
 :pattern ( ($generated@@140 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@457) ($generated@@140 $generated@@620 $generated@@45))
 :pattern ( ($generated@@140 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@153) ($generated@@140 $generated@@621 $generated@@48))
 :pattern ( ($generated@@140 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 (T@U) Bool)
(declare-fun $generated@@629 () Int)
(assert  (and (and (and (= (type $generated@@624) $generated@@144) (= (type $generated@@625) ($generated@@168 $generated@@81 $generated@@4))) (= (type $generated@@626) $generated@@81)) (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@630 true))
(let (($generated@@631  (=> (and (> $generated@@622 0) (= $generated@@623 (- $generated@@622 1))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@622) (< ($generated@@540 $generated@@624) ($generated@@540 $generated@@624))) (= $generated@@623 $generated@@622))) (=> (or (or (<= 0 $generated@@622) (< ($generated@@540 $generated@@624) ($generated@@540 $generated@@624))) (= $generated@@623 $generated@@622)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (< ($generated@@540 $generated@@624) ($generated@@540 $generated@@624)) (and (= ($generated@@540 $generated@@624) ($generated@@540 $generated@@624)) (< $generated@@623 $generated@@622)))))))))
(let (($generated@@632  (=> (= $generated@@625 ($generated@@167 $generated@@626 $generated@@627 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@631) (=> (= (ControlFlow 0 5) 4) $generated@@630)))))
(let (($generated@@633  (=> (and ($generated@@231 $generated@@627) ($generated@@628 $generated@@627)) (=> (and (and (and ($generated@@140 $generated@@624 $generated@@230) ($generated@@78 $generated@@624 $generated@@230 $generated@@627)) ($generated@@373 $generated@@624)) (and (= 2 $generated@@629) (= (ControlFlow 0 6) 5))) $generated@@632))))
$generated@@633)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) Bool)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@373 (T@U) Bool)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@68) (= (type $generated@@148) $generated@@68)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@72)
 :pattern ( ($generated@@158 $generated@@160))
)) (= (type $generated@@159) $generated@@144)))
(assert (= ($generated@@158 $generated@@159) $generated@@65))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@68)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@165) $generated@@68)) ($generated@@140 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@140 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@81 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@71 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@81) (= (type $generated@@216) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@217) ($generated@@70 $generated@@4))) (= (type $generated@@219) $generated@@81)) (= (type $generated@@220) ($generated@@70 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= (type ($generated@@222 $generated@@224 $generated@@225)) $generated@@144)
 :pattern ( ($generated@@222 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (and (= (type $generated@@226) $generated@@68) (= (type $generated@@227) $generated@@68)) (= (type $generated@@228) $generated@@153)) (= (type $generated@@229) $generated@@153)) (= ($generated@@140 ($generated@@222 $generated@@228 $generated@@229) ($generated@@143 $generated@@226 $generated@@227))  (and ($generated@@223 $generated@@228 $generated@@226) ($generated@@223 $generated@@229 $generated@@227))))
 :pattern ( ($generated@@140 ($generated@@222 $generated@@228 $generated@@229) ($generated@@143 $generated@@226 $generated@@227)))
)))
(assert (= (type $generated@@230) $generated@@68))
(assert ($generated@@140 $generated@@159 $generated@@230))
(assert (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@231 $generated@@232)) ($generated@@78 $generated@@159 $generated@@230 $generated@@232))
 :pattern ( ($generated@@78 $generated@@159 $generated@@230 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@144) (= (type $generated@@234) $generated@@144)) (= ($generated@@150 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@150 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@144) (= (type $generated@@237) $generated@@144)) (= ($generated@@235 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@235 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@68)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@241) $generated@@68)) (= ($generated@@140 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@153) ($generated@@0 ($generated@@85 $generated@@240 $generated@@242))) ($generated@@223 $generated@@242 $generated@@241))
 :pattern ( ($generated@@85 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@140 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@68)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@246) $generated@@68)) (= ($generated@@140 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@153) ($generated@@0 ($generated@@85 $generated@@245 $generated@@247))) ($generated@@223 $generated@@247 $generated@@246))
 :pattern ( ($generated@@85 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@140 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (= (type $generated@@253) $generated@@144) (= (type $generated@@254) $generated@@144)) (and ($generated@@252 $generated@@253) ($generated@@252 $generated@@254))) (= ($generated@@235 $generated@@253 $generated@@254) true))
 :pattern ( ($generated@@235 $generated@@253 $generated@@254) ($generated@@252 $generated@@253))
 :pattern ( ($generated@@235 $generated@@253 $generated@@254) ($generated@@252 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@68) (= (type $generated@@257) $generated@@68)) (= (type $generated@@258) $generated@@153)) (= (type $generated@@259) $generated@@153)) (= (type $generated@@260) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@231 $generated@@260)) (= ($generated@@78 ($generated@@222 $generated@@258 $generated@@259) ($generated@@143 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@78 ($generated@@222 $generated@@258 $generated@@259) ($generated@@143 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@144) (= ($generated@@142 $generated@@261) (= ($generated@@158 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@144) (= ($generated@@262 $generated@@263) (= ($generated@@158 $generated@@263) $generated@@63)))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@144) (= ($generated@@252 $generated@@264) (= ($generated@@158 $generated@@264) $generated@@65)))
 :pattern ( ($generated@@252 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@144) ($generated@@142 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@153) (= (type $generated@@267) $generated@@153)) (= $generated@@265 ($generated@@222 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@142 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@144) ($generated@@252 $generated@@276)) (= $generated@@276 $generated@@159))
 :pattern ( ($generated@@252 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@144)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@144) ($generated@@262 $generated@@279)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@144) (= $generated@@279 ($generated@@277 $generated@@280)))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@262 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@153)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@68) (= (type $generated@@285) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@255 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@78 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@255 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@287) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@288) $generated@@153)) (= (type $generated@@289) $generated@@68)) ($generated@@136 $generated@@286 $generated@@287)) ($generated@@255 $generated@@288 $generated@@289 $generated@@286)) ($generated@@255 $generated@@288 $generated@@289 $generated@@287))
 :pattern ( ($generated@@136 $generated@@286 $generated@@287) ($generated@@255 $generated@@288 $generated@@289 $generated@@286))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@290) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@293) $generated@@68)) ($generated@@136 $generated@@290 $generated@@291)) ($generated@@78 $generated@@292 $generated@@293 $generated@@290)) ($generated@@78 $generated@@292 $generated@@293 $generated@@291))
 :pattern ( ($generated@@136 $generated@@290 $generated@@291) ($generated@@78 $generated@@292 $generated@@293 $generated@@290))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@80 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@83 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@80 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@85 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@85 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@85 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@80 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@85 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@85 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@83 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@80 $generated@@337 $generated@@2)) (= ($generated@@162 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@85 $generated@@336 $generated@@338))) (<= ($generated ($generated@@85 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@85 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@162 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@153) ($generated@@223 $generated@@342 $generated@@230)) (and (= ($generated@@281 ($generated@@339 $generated@@144 $generated@@342)) $generated@@342) ($generated@@140 ($generated@@339 $generated@@144 $generated@@342) $generated@@230)))
 :pattern ( ($generated@@223 $generated@@342 $generated@@230))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@144) (= ($generated@@140 ($generated@@277 $generated@@343) $generated@@230) ($generated@@140 $generated@@343 $generated@@230)))
 :pattern ( ($generated@@140 ($generated@@277 $generated@@343) $generated@@230))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@144)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@346) $generated@@144) (= (type $generated@@347) $generated@@144)) (and ($generated@@262 $generated@@346) ($generated@@262 $generated@@347))) (= ($generated@@235 $generated@@346 $generated@@347) ($generated@@235 ($generated@@344 $generated@@346) ($generated@@344 $generated@@347))))
 :pattern ( ($generated@@235 $generated@@346 $generated@@347) ($generated@@262 $generated@@346))
 :pattern ( ($generated@@235 $generated@@346 $generated@@347) ($generated@@262 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(let (($generated@@350 ($generated@@303 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@302 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@301 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@300 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@304 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@80 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@304 (type $generated@@355))))
(let (($generated@@357 ($generated@@303 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@302 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@301 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(let (($generated@@361 ($generated@@321 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@320 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@319 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@318 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@80 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@371) $generated@@68)) (= ($generated@@140 $generated@@370 ($generated@@161 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@370 $generated@@372)))) ($generated@@223 $generated@@372 $generated@@371))
 :pattern ( ($generated@@85 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@140 $generated@@370 ($generated@@161 $generated@@371)))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@144) ($generated@@373 $generated@@374)) (or ($generated@@262 $generated@@374) ($generated@@252 $generated@@374)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@376) $generated@@68)) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@375 ($generated@@238 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@153) ($generated@@0 ($generated@@85 $generated@@375 $generated@@378))) ($generated@@255 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@85 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@78 $generated@@375 ($generated@@238 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@380) $generated@@68)) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@379 ($generated@@243 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@153) ($generated@@0 ($generated@@85 $generated@@379 $generated@@382))) ($generated@@255 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@85 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@78 $generated@@379 ($generated@@243 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@85 ($generated@@295 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@85 ($generated@@295 $generated@@384) $generated@@383)))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@304 (type $generated@@388))))
(let (($generated@@390 ($generated@@303 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@80 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@302 $generated@@153 $generated@@153)) (= (type $generated@@392) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@85 ($generated@@300 $generated@@391) ($generated@@151 ($generated@@339 $generated@@144 $generated@@392)))) (= ($generated@@85 ($generated@@386 $generated@@391) ($generated@@151 ($generated@@339 $generated@@144 $generated@@392))) ($generated@@152 ($generated@@339 $generated@@144 $generated@@392))))))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@322 (type $generated@@396))))
(let (($generated@@398 ($generated@@321 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@320 $generated@@153 $generated@@153)) (= (type $generated@@400) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@85 ($generated@@318 $generated@@399) ($generated@@151 ($generated@@339 $generated@@144 $generated@@400)))) (= ($generated@@85 ($generated@@394 $generated@@399) ($generated@@151 ($generated@@339 $generated@@144 $generated@@400))) ($generated@@152 ($generated@@339 $generated@@144 $generated@@400))))))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@303 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@302 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@85 ($generated@@352 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@85 ($generated@@300 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@85 ($generated@@386 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@401) $generated@@405))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@321 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@320 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@85 ($generated@@363 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@85 ($generated@@318 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@85 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@406) $generated@@410))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@68)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@302 $generated@@153 $generated@@153)) (= (type $generated@@415) $generated@@68)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@414) $generated@@418))) (and ($generated@@255 ($generated@@85 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@255 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@78 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@68)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@320 $generated@@153 $generated@@153)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@422) $generated@@426))) (and ($generated@@255 ($generated@@85 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@255 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@78 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@427) $generated@@144) (= (type $generated@@428) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@231 $generated@@428)) (= ($generated@@78 ($generated@@277 $generated@@427) $generated@@230 $generated@@428) ($generated@@78 $generated@@427 $generated@@230 $generated@@428)))
 :pattern ( ($generated@@78 ($generated@@277 $generated@@427) $generated@@230 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@144) ($generated@@140 $generated@@429 $generated@@230)) (or ($generated@@262 $generated@@429) ($generated@@252 $generated@@429)))
 :pattern ( ($generated@@252 $generated@@429) ($generated@@140 $generated@@429 $generated@@230))
 :pattern ( ($generated@@262 $generated@@429) ($generated@@140 $generated@@429 $generated@@230))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@430 $generated@@432))) (and ($generated@@136 $generated@@430 $generated@@431) ($generated@@136 $generated@@431 $generated@@432))) ($generated@@136 $generated@@430 $generated@@432))
 :pattern ( ($generated@@136 $generated@@430 $generated@@431) ($generated@@136 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@80 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@322 (type $generated@@435))))
(let (($generated@@437 ($generated@@321 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@320 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@319 $generated@@437 $generated@@436)) (= ($generated@@318 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@318 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@322 (type $generated@@438))))
(let (($generated@@440 ($generated@@321 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@320 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@319 $generated@@440 $generated@@439)) (= ($generated@@363 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@363 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@322 (type $generated@@441))))
(let (($generated@@443 ($generated@@321 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@320 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@319 $generated@@443 $generated@@442)) (= ($generated@@393 $generated@@441) ($generated@@433 $generated@@153))))))
 :pattern ( ($generated@@393 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@304 (type $generated@@444))))
(let (($generated@@446 ($generated@@303 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@302 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@301 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@153) (= (type $generated@@448) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@385 $generated@@444) ($generated@@281 ($generated@@222 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@385 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@322 (type $generated@@449))))
(let (($generated@@451 ($generated@@321 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@320 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@319 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@153) (= (type $generated@@453) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@393 $generated@@449) ($generated@@281 ($generated@@222 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@393 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@153) ($generated@@223 $generated@@454 $generated@@46)) (and (= ($generated@@281 ($generated@@339 $generated@@2 $generated@@454)) $generated@@454) ($generated@@140 ($generated@@339 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@223 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@153) ($generated@@223 $generated@@455 $generated@@47)) (and (= ($generated@@281 ($generated@@339 $generated@@3 $generated@@455)) $generated@@455) ($generated@@140 ($generated@@339 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@223 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@153) ($generated@@223 $generated@@456 $generated@@44)) (and (= ($generated@@281 ($generated@@339 $generated@@4 $generated@@456)) $generated@@456) ($generated@@140 ($generated@@339 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@223 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@153) ($generated@@223 $generated@@458 $generated@@45)) (and (= ($generated@@281 ($generated@@339 $generated@@457 $generated@@458)) $generated@@458) ($generated@@140 ($generated@@339 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@223 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@68) (= ($generated@@223 ($generated@@281 $generated@@459) $generated@@460) ($generated@@140 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@223 ($generated@@281 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@83 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@80 $generated@@462 $generated@@2)) (<= 0 ($generated@@294 $generated@@461))))
 :pattern ( ($generated@@294 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@271 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@270 $generated@@464)) (<= 0 ($generated@@269 $generated@@463))))
 :pattern ( ($generated@@269 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@68)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@68) (= (type $generated@@468) $generated@@68)) (= ($generated@@465 ($generated@@411 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@411 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@68)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@68)) (= ($generated@@469 ($generated@@411 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@411 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@68)) (= ($generated@@76 ($generated@@411 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@68) (= (type $generated@@478) $generated@@68)) (= ($generated@@475 ($generated@@419 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@419 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@419 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@76 ($generated@@419 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@153) (= (type $generated@@486) $generated@@153)) (= ($generated@@158 ($generated@@222 $generated@@485 $generated@@486)) $generated@@61))
 :pattern ( ($generated@@222 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@143 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@143 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@491 ($generated@@143 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@143 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@153) (= (type $generated@@496) $generated@@153)) (= ($generated@@151 ($generated@@222 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@222 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@153) (= (type $generated@@498) $generated@@153)) (= ($generated@@152 ($generated@@222 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@222 $generated@@497 $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@271 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@270 $generated@@153)) (= (type $generated@@506) $generated@@68)) (= (type $generated@@507) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@269 $generated@@505))) ($generated@@255 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@78 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@79 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@79 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@511 ($generated@@238 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@238 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@76 ($generated@@238 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@515 ($generated@@243 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@243 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@76 ($generated@@243 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@519 ($generated@@161 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@161 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@76 ($generated@@161 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@499 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@499 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@76 ($generated@@499 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@144) (= ($generated@@158 ($generated@@277 $generated@@527)) $generated@@63))
 :pattern ( ($generated@@277 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@144) (= ($generated@@344 ($generated@@277 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@277 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
(= ($generated@@339 $generated@@530 ($generated@@281 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@281 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@302 $generated@@153 $generated@@153)) (= (type $generated@@532) $generated@@68)) (= (type $generated@@533) $generated@@68)) (= ($generated@@140 $generated@@531 ($generated@@411 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@531) $generated@@534))) (and ($generated@@223 ($generated@@85 ($generated@@386 $generated@@531) $generated@@534) $generated@@533) ($generated@@223 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@531) $generated@@534))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@140 $generated@@531 ($generated@@411 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@320 $generated@@153 $generated@@153)) (= (type $generated@@536) $generated@@68)) (= (type $generated@@537) $generated@@68)) (= ($generated@@140 $generated@@535 ($generated@@419 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@535) $generated@@538))) (and ($generated@@223 ($generated@@85 ($generated@@394 $generated@@535) $generated@@538) $generated@@537) ($generated@@223 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@535) $generated@@538))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@140 $generated@@535 ($generated@@419 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@153) (= (type $generated@@542) $generated@@153)) (< ($generated@@539 $generated@@541) ($generated@@540 ($generated@@222 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@222 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@153) (= (type $generated@@544) $generated@@153)) (< ($generated@@539 $generated@@544) ($generated@@540 ($generated@@222 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@222 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@153) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) $generated@@68)) ($generated@@223 $generated@@545 ($generated@@411 $generated@@546 $generated@@547))) (and (= ($generated@@281 ($generated@@339 ($generated@@302 $generated@@153 $generated@@153) $generated@@545)) $generated@@545) ($generated@@140 ($generated@@339 ($generated@@302 $generated@@153 $generated@@153) $generated@@545) ($generated@@411 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@223 $generated@@545 ($generated@@411 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@153) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) $generated@@68)) ($generated@@223 $generated@@548 ($generated@@419 $generated@@549 $generated@@550))) (and (= ($generated@@281 ($generated@@339 ($generated@@320 $generated@@153 $generated@@153) $generated@@548)) $generated@@548) ($generated@@140 ($generated@@339 ($generated@@320 $generated@@153 $generated@@153) $generated@@548) ($generated@@419 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@223 $generated@@548 ($generated@@419 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@68) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@153)) ($generated@@223 $generated@@553 ($generated@@143 $generated@@551 $generated@@552))) (and (= ($generated@@281 ($generated@@339 $generated@@144 $generated@@553)) $generated@@553) ($generated@@140 ($generated@@339 $generated@@144 $generated@@553) ($generated@@143 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@223 $generated@@553 ($generated@@143 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@144) (< ($generated@@540 $generated@@554) ($generated@@540 ($generated@@277 $generated@@554))))
 :pattern ( ($generated@@277 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@85 ($generated@@433 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@85 ($generated@@433 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@73)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@68) (= (type $generated@@560) $generated@@68)) (and (= ($generated@@76 ($generated@@143 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@143 $generated@@559 $generated@@560)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@144) (= ($generated@@539 ($generated@@281 $generated@@561)) ($generated@@540 $generated@@561)))
 :pattern ( ($generated@@539 ($generated@@281 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@153) ($generated@@223 $generated@@562 ($generated@@79 0))) (and (= ($generated@@281 ($generated@@339 $generated@@2 $generated@@562)) $generated@@562) ($generated@@140 ($generated@@339 ($generated@@80 $generated@@153 $generated@@4) $generated@@562) ($generated@@79 0))))
 :pattern ( ($generated@@223 $generated@@562 ($generated@@79 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@153) (= (type $generated@@564) $generated@@68)) ($generated@@223 $generated@@563 ($generated@@238 $generated@@564))) (and (= ($generated@@281 ($generated@@339 ($generated@@80 $generated@@153 $generated@@4) $generated@@563)) $generated@@563) ($generated@@140 ($generated@@339 ($generated@@80 $generated@@153 $generated@@4) $generated@@563) ($generated@@238 $generated@@564))))
 :pattern ( ($generated@@223 $generated@@563 ($generated@@238 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@153) (= (type $generated@@566) $generated@@68)) ($generated@@223 $generated@@565 ($generated@@243 $generated@@566))) (and (= ($generated@@281 ($generated@@339 ($generated@@80 $generated@@153 $generated@@4) $generated@@565)) $generated@@565) ($generated@@140 ($generated@@339 ($generated@@80 $generated@@153 $generated@@4) $generated@@565) ($generated@@243 $generated@@566))))
 :pattern ( ($generated@@223 $generated@@565 ($generated@@243 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@153) (= (type $generated@@568) $generated@@68)) ($generated@@223 $generated@@567 ($generated@@161 $generated@@568))) (and (= ($generated@@281 ($generated@@339 ($generated@@80 $generated@@153 $generated@@2) $generated@@567)) $generated@@567) ($generated@@140 ($generated@@339 ($generated@@80 $generated@@153 $generated@@2) $generated@@567) ($generated@@161 $generated@@568))))
 :pattern ( ($generated@@223 $generated@@567 ($generated@@161 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@153) (= (type $generated@@570) $generated@@68)) ($generated@@223 $generated@@569 ($generated@@499 $generated@@570))) (and (= ($generated@@281 ($generated@@339 ($generated@@270 $generated@@153) $generated@@569)) $generated@@569) ($generated@@140 ($generated@@339 ($generated@@270 $generated@@153) $generated@@569) ($generated@@499 $generated@@570))))
 :pattern ( ($generated@@223 $generated@@569 ($generated@@499 $generated@@570)))
)))
(assert (= ($generated@@76 $generated@@230) $generated@@64))
(assert (= ($generated@@557 $generated@@230) $generated@@67))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@571 ($generated@@161 $generated@@572) $generated@@573) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@571 $generated@@574)))) ($generated@@255 $generated@@574 $generated@@572 $generated@@573))
 :pattern ( ($generated@@85 $generated@@571 $generated@@574))
))))
 :pattern ( ($generated@@78 $generated@@571 ($generated@@161 $generated@@572) $generated@@573))
)))
(assert (= $generated@@159 ($generated@@248 $generated@@159)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@144) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@231 $generated@@577) (and ($generated@@142 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@68) ($generated@@78 $generated@@575 ($generated@@143 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@78 $generated@@575 ($generated@@143 $generated@@576 $generated@@578) $generated@@577))
))))) ($generated@@255 ($generated@@151 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@255 ($generated@@151 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@144) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@231 $generated@@581) (and ($generated@@142 $generated@@579) (exists (($generated@@582 T@U) ) (!  (and (= (type $generated@@582) $generated@@68) ($generated@@78 $generated@@579 ($generated@@143 $generated@@582 $generated@@580) $generated@@581))
 :pattern ( ($generated@@78 $generated@@579 ($generated@@143 $generated@@582 $generated@@580) $generated@@581))
))))) ($generated@@255 ($generated@@152 $generated@@579) $generated@@580 $generated@@581))
 :pattern ( ($generated@@255 ($generated@@152 $generated@@579) $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@144) (= (type $generated@@584) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@231 $generated@@584) (and ($generated@@262 $generated@@583) ($generated@@78 $generated@@583 $generated@@230 $generated@@584)))) ($generated@@78 ($generated@@344 $generated@@583) $generated@@230 $generated@@584))
 :pattern ( ($generated@@78 ($generated@@344 $generated@@583) $generated@@230 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@153) (= (type $generated@@586) $generated@@153)) (= ($generated@@222 ($generated@@248 $generated@@585) ($generated@@248 $generated@@586)) ($generated@@248 ($generated@@222 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@222 ($generated@@248 $generated@@585) ($generated@@248 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@144) (= ($generated@@277 ($generated@@248 $generated@@587)) ($generated@@248 ($generated@@277 $generated@@587))))
 :pattern ( ($generated@@277 ($generated@@248 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@281 ($generated@@248 $generated@@588)) ($generated@@248 ($generated@@281 $generated@@588)))
 :pattern ( ($generated@@281 ($generated@@248 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@271 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@270 $generated@@590)) (= ($generated@@269 $generated@@589) 0)) (= $generated@@589 ($generated@@268 $generated@@590))))
 :pattern ( ($generated@@269 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@80 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@294 ($generated@@86 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@294 $generated@@591) ($generated ($generated@@85 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@294 ($generated@@86 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@596) $generated@@2)) ($generated@@78 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@78 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@598) $generated@@3)) ($generated@@78 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@78 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@600) $generated@@4)) ($generated@@78 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@78 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@602) $generated@@457)) ($generated@@78 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@78 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@604) $generated@@153)) ($generated@@78 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@78 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@270 $generated@@153)) (= (type $generated@@606) $generated@@68)) (= ($generated@@140 $generated@@605 ($generated@@499 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@269 $generated@@605))) ($generated@@223 ($generated@@500 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@500 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@140 $generated@@605 ($generated@@499 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@270 $generated@@153)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@269 $generated@@609))) (< ($generated@@540 ($generated@@339 $generated@@144 ($generated@@500 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@540 ($generated@@339 $generated@@144 ($generated@@500 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@302 $generated@@153 $generated@@153)) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) $generated@@68)) ($generated@@140 $generated@@611 ($generated@@411 $generated@@612 $generated@@613))) (and (and ($generated@@140 ($generated@@300 $generated@@611) ($generated@@238 $generated@@612)) ($generated@@140 ($generated@@352 $generated@@611) ($generated@@238 $generated@@613))) ($generated@@140 ($generated@@385 $generated@@611) ($generated@@238 ($generated@@143 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@140 $generated@@611 ($generated@@411 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@320 $generated@@153 $generated@@153)) (= (type $generated@@615) $generated@@68)) (= (type $generated@@616) $generated@@68)) ($generated@@140 $generated@@614 ($generated@@419 $generated@@615 $generated@@616))) (and (and ($generated@@140 ($generated@@318 $generated@@614) ($generated@@243 $generated@@615)) ($generated@@140 ($generated@@363 $generated@@614) ($generated@@243 $generated@@616))) ($generated@@140 ($generated@@393 $generated@@614) ($generated@@243 ($generated@@143 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@140 $generated@@614 ($generated@@419 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@140 $generated@@617 $generated@@46))
 :pattern ( ($generated@@140 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@140 $generated@@618 $generated@@47))
 :pattern ( ($generated@@140 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@140 $generated@@619 $generated@@44))
 :pattern ( ($generated@@140 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@457) ($generated@@140 $generated@@620 $generated@@45))
 :pattern ( ($generated@@140 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@153) ($generated@@140 $generated@@621 $generated@@48))
 :pattern ( ($generated@@140 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 (T@U) Bool)
(declare-fun $generated@@630 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@622) $generated@@144) (= (type $generated@@623) $generated@@144)) (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@625) $generated@@144)) (= (type $generated@@626) $generated@@144)) (= (type $generated@@627) ($generated@@168 $generated@@81 $generated@@4))) (= (type $generated@@628) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@631 true))
(let (($generated@@632  (=> (and (= $generated@@622 $generated@@159) (= (ControlFlow 0 4) (- 0 3))) ($generated@@0 ($generated@@248 ($generated@@11 true))))))
(let (($generated@@633  (=> (not (= $generated@@622 ($generated@@277 $generated@@623))) (and (=> (= (ControlFlow 0 6) 4) $generated@@632) (=> (= (ControlFlow 0 6) 5) $generated@@631)))))
(let (($generated@@634  (=> (= $generated@@622 ($generated@@277 $generated@@623)) (=> (and (and (and ($generated@@140 $generated@@623 $generated@@230) ($generated@@78 $generated@@623 $generated@@230 $generated@@624)) (and ($generated@@140 $generated@@625 $generated@@230) ($generated@@78 $generated@@625 $generated@@230 $generated@@624))) (and (and (= $generated@@626 $generated@@623) ($generated@@140 $generated@@626 $generated@@230)) (and (= $generated@@625 $generated@@626) (= (ControlFlow 0 2) (- 0 1))))) (< ($generated@@540 $generated@@625) ($generated@@540 $generated@@622))))))
(let (($generated@@635  (=> (= $generated@@627 ($generated@@167 $generated@@628 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@634) (=> (= (ControlFlow 0 7) 6) $generated@@633)))))
(let (($generated@@636  (=> (and ($generated@@231 $generated@@624) ($generated@@629 $generated@@624)) (=> (and (and (and ($generated@@140 $generated@@622 $generated@@230) ($generated@@78 $generated@@622 $generated@@230 $generated@@624)) ($generated@@373 $generated@@622)) (and (= 2 $generated@@630) (= (ControlFlow 0 8) 7))) $generated@@635))))
$generated@@636)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
