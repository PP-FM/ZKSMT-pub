(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@340 (T@U Int) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@569 () T@U)
(declare-fun $generated@@605 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@68) (= (type $generated@@148) $generated@@68)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@68)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@68)) ($generated@@140 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@81 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@71 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@81) (= (type $generated@@213) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@214) ($generated@@70 $generated@@4))) (= (type $generated@@216) $generated@@81)) (= (type $generated@@217) ($generated@@70 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= (type ($generated@@219 $generated@@221 $generated@@222)) $generated@@144)
 :pattern ( ($generated@@219 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and (and (= (type $generated@@223) $generated@@68) (= (type $generated@@224) $generated@@68)) (= (type $generated@@225) $generated@@153)) (= (type $generated@@226) $generated@@153)) (= ($generated@@140 ($generated@@219 $generated@@225 $generated@@226) ($generated@@143 $generated@@223 $generated@@224))  (and ($generated@@220 $generated@@225 $generated@@223) ($generated@@220 $generated@@226 $generated@@224))))
 :pattern ( ($generated@@140 ($generated@@219 $generated@@225 $generated@@226) ($generated@@143 $generated@@223 $generated@@224)))
)))
(assert (= (type $generated@@229) $generated@@68))
(assert  (=> true (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@153) (or ($generated@@228 $generated@@230) ($generated@@220 $generated@@230 $generated@@229))) true)
 :pattern ( ($generated@@227 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@144) (= (type $generated@@232) $generated@@144)) (= ($generated@@150 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@150 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@68)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@236) $generated@@68)) (= ($generated@@140 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@153) ($generated@@0 ($generated@@85 $generated@@235 $generated@@237))) ($generated@@220 $generated@@237 $generated@@236))
 :pattern ( ($generated@@85 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@140 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@68)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@241) $generated@@68)) (= ($generated@@140 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@153) ($generated@@0 ($generated@@85 $generated@@240 $generated@@242))) ($generated@@220 $generated@@242 $generated@@241))
 :pattern ( ($generated@@85 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@140 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert  (and (and (and (forall (($generated@@253 T@T) ) (= ($generated@@1 ($generated@@251 $generated@@253)) 17)) (forall (($generated@@254 T@T) ) (! (= ($generated@@252 ($generated@@251 $generated@@254)) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
))) (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@249 $generated@@255 $generated@@256)) ($generated@@251 $generated@@257)))
 :pattern ( ($generated@@249 $generated@@255 $generated@@256))
))) (forall (($generated@@258 T@U) ) (! (= (type ($generated@@250 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@250 $generated@@258))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) ($generated@@251 $generated@@153)) (= (type $generated@@260) $generated@@153)) (= (type $generated@@261) $generated@@68)) (and ($generated@@140 $generated@@259 ($generated@@250 $generated@@261)) ($generated@@220 $generated@@260 $generated@@261))) ($generated@@140 ($generated@@249 $generated@@259 $generated@@260) ($generated@@250 $generated@@261)))
 :pattern ( ($generated@@140 ($generated@@249 $generated@@259 $generated@@260) ($generated@@250 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@68) (= (type $generated@@265) $generated@@68)) (= (type $generated@@266) $generated@@153)) (= (type $generated@@267) $generated@@153)) (= (type $generated@@268) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@262 $generated@@268)) (= ($generated@@78 ($generated@@219 $generated@@266 $generated@@267) ($generated@@143 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@78 ($generated@@219 $generated@@266 $generated@@267) ($generated@@143 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@72)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@144) (= ($generated@@142 $generated@@271) (= ($generated@@269 $generated@@271) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@144) ($generated@@142 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@153) (= (type $generated@@274) $generated@@153)) (= $generated@@272 ($generated@@219 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@142 $generated@@272))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@275 $generated@@277)) ($generated@@251 $generated@@277))
 :pattern ( ($generated@@275 $generated@@277))
)))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@278)) 0)
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
 (=> (= (type $generated@@279) ($generated@@251 $generated@@281)) (= ($generated@@276 ($generated@@249 $generated@@279 $generated@@280)) (+ 1 ($generated@@276 $generated@@279)))))
 :pattern ( ($generated@@249 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@153)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@263 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@78 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@263 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@288) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@289) $generated@@153)) (= (type $generated@@290) $generated@@68)) ($generated@@136 $generated@@287 $generated@@288)) ($generated@@263 $generated@@289 $generated@@290 $generated@@287)) ($generated@@263 $generated@@289 $generated@@290 $generated@@288))
 :pattern ( ($generated@@136 $generated@@287 $generated@@288) ($generated@@263 $generated@@289 $generated@@290 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@294) $generated@@68)) ($generated@@136 $generated@@291 $generated@@292)) ($generated@@78 $generated@@293 $generated@@294 $generated@@291)) ($generated@@78 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@136 $generated@@291 $generated@@292) ($generated@@78 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@80 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@83 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@80 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@85 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 18)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@80 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@85 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@85 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 19)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@80 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@85 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@85 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@83 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@80 $generated@@338 $generated@@2)) (= ($generated@@159 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@85 $generated@@337 $generated@@339))) (<= ($generated ($generated@@85 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@85 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@159 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 Int) ) (! (let (($generated@@343 ($generated@@252 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@343))
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 Int) ($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
 (=> (= (type $generated@@344) ($generated@@251 $generated@@347)) (and (=> (= $generated@@345 ($generated@@276 $generated@@344)) (= ($generated@@340 ($generated@@249 $generated@@344 $generated@@346) $generated@@345) $generated@@346)) (=> (not (= $generated@@345 ($generated@@276 $generated@@344))) (= ($generated@@340 ($generated@@249 $generated@@344 $generated@@346) $generated@@345) ($generated@@340 $generated@@344 $generated@@345))))))
 :pattern ( ($generated@@340 ($generated@@249 $generated@@344 $generated@@346) $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@305 (type $generated@@348))))
(let (($generated@@350 ($generated@@304 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@303 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@302 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@85 ($generated@@301 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@301 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@305 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@80 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@305 (type $generated@@355))))
(let (($generated@@357 ($generated@@304 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@303 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@302 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@323 (type $generated@@359))))
(let (($generated@@361 ($generated@@322 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@321 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@320 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@319 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@319 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@323 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@80 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@323 (type $generated@@366))))
(let (($generated@@368 ($generated@@322 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@321 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@320 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@371) $generated@@68)) (= ($generated@@140 $generated@@370 ($generated@@158 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@370 $generated@@372)))) ($generated@@220 $generated@@372 $generated@@371))
 :pattern ( ($generated@@85 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@140 $generated@@370 ($generated@@158 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@374) $generated@@68)) (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@373 ($generated@@233 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@153) ($generated@@0 ($generated@@85 $generated@@373 $generated@@376))) ($generated@@263 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@85 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@78 $generated@@373 ($generated@@233 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@378) $generated@@68)) (= (type $generated@@379) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@377 ($generated@@238 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@153) ($generated@@0 ($generated@@85 $generated@@377 $generated@@380))) ($generated@@263 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@85 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@78 $generated@@377 ($generated@@238 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@85 ($generated@@296 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@85 ($generated@@296 $generated@@382) $generated@@381)))
)))
(assert  (and (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@383 $generated@@386)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@383 $generated@@386))
)) (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@384 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@384 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@305 (type $generated@@389))))
(let (($generated@@391 ($generated@@304 (type $generated@@389))))
(= (type ($generated@@385 $generated@@389)) ($generated@@80 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@385 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@393) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@383 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@85 ($generated@@301 $generated@@392) ($generated@@151 ($generated@@384 $generated@@144 $generated@@393)))) (= ($generated@@85 ($generated@@385 $generated@@392) ($generated@@151 ($generated@@384 $generated@@144 $generated@@393))) ($generated@@152 ($generated@@384 $generated@@144 $generated@@393))))))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@323 (type $generated@@397))))
(let (($generated@@399 ($generated@@322 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@80 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@401) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@85 ($generated@@319 $generated@@400) ($generated@@151 ($generated@@384 $generated@@144 $generated@@401)))) (= ($generated@@85 ($generated@@395 $generated@@400) ($generated@@151 ($generated@@384 $generated@@144 $generated@@401))) ($generated@@152 ($generated@@384 $generated@@144 $generated@@401))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@304 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@303 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@85 ($generated@@352 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@85 ($generated@@301 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@85 ($generated@@385 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@85 ($generated@@301 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@322 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@321 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@363 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@319 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@319 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@301 $generated@@415) $generated@@419))) (and ($generated@@263 ($generated@@85 ($generated@@385 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@263 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@301 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@68)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@319 $generated@@423) $generated@@427))) (and ($generated@@263 ($generated@@85 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@263 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@319 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@428) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@430) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@428 $generated@@430))) (and ($generated@@136 $generated@@428 $generated@@429) ($generated@@136 $generated@@429 $generated@@430))) ($generated@@136 $generated@@428 $generated@@430))
 :pattern ( ($generated@@136 $generated@@428 $generated@@429) ($generated@@136 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@80 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@323 (type $generated@@433))))
(let (($generated@@435 ($generated@@322 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@321 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@320 $generated@@435 $generated@@434)) (= ($generated@@319 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@319 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@323 (type $generated@@436))))
(let (($generated@@438 ($generated@@322 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@321 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@320 $generated@@438 $generated@@437)) (= ($generated@@363 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@363 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@323 (type $generated@@439))))
(let (($generated@@441 ($generated@@322 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@321 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@320 $generated@@441 $generated@@440)) (= ($generated@@394 $generated@@439) ($generated@@431 $generated@@153))))))
 :pattern ( ($generated@@394 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@305 (type $generated@@442))))
(let (($generated@@444 ($generated@@304 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@303 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@302 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@153) (= (type $generated@@446) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@442) ($generated@@282 ($generated@@219 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@383 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@323 (type $generated@@447))))
(let (($generated@@449 ($generated@@322 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@321 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@320 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@153) (= (type $generated@@451) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@447) ($generated@@282 ($generated@@219 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@153) ($generated@@220 $generated@@452 $generated@@46)) (and (= ($generated@@282 ($generated@@384 $generated@@2 $generated@@452)) $generated@@452) ($generated@@140 ($generated@@384 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@220 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@153) ($generated@@220 $generated@@453 $generated@@47)) (and (= ($generated@@282 ($generated@@384 $generated@@3 $generated@@453)) $generated@@453) ($generated@@140 ($generated@@384 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@220 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@153) ($generated@@220 $generated@@454 $generated@@44)) (and (= ($generated@@282 ($generated@@384 $generated@@4 $generated@@454)) $generated@@454) ($generated@@140 ($generated@@384 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@220 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@153) ($generated@@220 $generated@@456 $generated@@45)) (and (= ($generated@@282 ($generated@@384 $generated@@455 $generated@@456)) $generated@@456) ($generated@@140 ($generated@@384 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@220 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@68) (= ($generated@@220 ($generated@@282 $generated@@457) $generated@@458) ($generated@@140 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@220 ($generated@@282 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@83 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@80 $generated@@460 $generated@@2)) (<= 0 ($generated@@295 $generated@@459))))
 :pattern ( ($generated@@295 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@252 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@251 $generated@@462)) (<= 0 ($generated@@276 $generated@@461))))
 :pattern ( ($generated@@276 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@68) (= (type $generated@@466) $generated@@68)) (= ($generated@@463 ($generated@@412 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@412 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@68) (= (type $generated@@470) $generated@@68)) (= ($generated@@467 ($generated@@412 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@412 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@68)) (= ($generated@@76 ($generated@@412 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@68)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@68)) (= ($generated@@473 ($generated@@420 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@420 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@68)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@68) (= (type $generated@@480) $generated@@68)) (= ($generated@@477 ($generated@@420 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@420 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@76 ($generated@@420 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@153) (= (type $generated@@484) $generated@@153)) (= ($generated@@269 ($generated@@219 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@219 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@143 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@143 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@143 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@143 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@153) (= (type $generated@@494) $generated@@153)) (= ($generated@@151 ($generated@@219 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@219 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@153) (= (type $generated@@496) $generated@@153)) (= ($generated@@152 ($generated@@219 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@219 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@251 $generated@@153)) (= (type $generated@@498) $generated@@68)) (= (type $generated@@499) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@497 ($generated@@250 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@276 $generated@@497))) ($generated@@263 ($generated@@340 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@340 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@78 $generated@@497 ($generated@@250 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@79 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@79 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@68) (= ($generated@@503 ($generated@@233 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@233 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@68) (= ($generated@@76 ($generated@@233 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@68) (= ($generated@@507 ($generated@@238 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@238 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@76 ($generated@@238 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@511 ($generated@@158 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@158 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@76 ($generated@@158 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@515 ($generated@@250 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@250 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@76 ($generated@@250 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@250 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@384 $generated@@520 ($generated@@282 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@282 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@522) $generated@@68)) (= (type $generated@@523) $generated@@68)) (= ($generated@@140 $generated@@521 ($generated@@412 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@301 $generated@@521) $generated@@524))) (and ($generated@@220 ($generated@@85 ($generated@@385 $generated@@521) $generated@@524) $generated@@523) ($generated@@220 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@521) $generated@@524))
 :pattern ( ($generated@@85 ($generated@@301 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@140 $generated@@521 ($generated@@412 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@526) $generated@@68)) (= (type $generated@@527) $generated@@68)) (= ($generated@@140 $generated@@525 ($generated@@420 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@319 $generated@@525) $generated@@528))) (and ($generated@@220 ($generated@@85 ($generated@@395 $generated@@525) $generated@@528) $generated@@527) ($generated@@220 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@525) $generated@@528))
 :pattern ( ($generated@@85 ($generated@@319 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@140 $generated@@525 ($generated@@420 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@153) (= (type $generated@@532) $generated@@153)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@219 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@219 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@153) (= (type $generated@@534) $generated@@153)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@219 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@219 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@153) (= (type $generated@@536) $generated@@68)) (= (type $generated@@537) $generated@@68)) ($generated@@220 $generated@@535 ($generated@@412 $generated@@536 $generated@@537))) (and (= ($generated@@282 ($generated@@384 ($generated@@303 $generated@@153 $generated@@153) $generated@@535)) $generated@@535) ($generated@@140 ($generated@@384 ($generated@@303 $generated@@153 $generated@@153) $generated@@535) ($generated@@412 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@220 $generated@@535 ($generated@@412 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@153) (= (type $generated@@539) $generated@@68)) (= (type $generated@@540) $generated@@68)) ($generated@@220 $generated@@538 ($generated@@420 $generated@@539 $generated@@540))) (and (= ($generated@@282 ($generated@@384 ($generated@@321 $generated@@153 $generated@@153) $generated@@538)) $generated@@538) ($generated@@140 ($generated@@384 ($generated@@321 $generated@@153 $generated@@153) $generated@@538) ($generated@@420 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@220 $generated@@538 ($generated@@420 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@68) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) $generated@@153)) ($generated@@220 $generated@@543 ($generated@@143 $generated@@541 $generated@@542))) (and (= ($generated@@282 ($generated@@384 $generated@@144 $generated@@543)) $generated@@543) ($generated@@140 ($generated@@384 $generated@@144 $generated@@543) ($generated@@143 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@220 $generated@@543 ($generated@@143 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@85 ($generated@@431 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@85 ($generated@@431 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@73)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@68) (= (type $generated@@549) $generated@@68)) (and (= ($generated@@76 ($generated@@143 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@546 ($generated@@143 $generated@@548 $generated@@549)) $generated@@65)))
 :pattern ( ($generated@@143 $generated@@548 $generated@@549))
)))
(assert  (and (forall (($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@252 (type $generated@@552))))
(= (type ($generated@@550 $generated@@552)) ($generated@@251 $generated@@553)))
 :pattern ( ($generated@@550 $generated@@552))
)) (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@252 (type $generated@@554))))
(= (type ($generated@@551 $generated@@554)) $generated@@555))
 :pattern ( ($generated@@551 $generated@@554))
))))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (=> (= (type $generated@@556) ($generated@@251 $generated@@558)) (and (= ($generated@@550 ($generated@@249 $generated@@556 $generated@@557)) $generated@@556) (= ($generated@@551 ($generated@@249 $generated@@556 $generated@@557)) $generated@@557))))
 :pattern ( ($generated@@249 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@144) (= ($generated@@529 ($generated@@282 $generated@@559)) ($generated@@530 $generated@@559)))
 :pattern ( ($generated@@529 ($generated@@282 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@153) ($generated@@220 $generated@@560 ($generated@@79 0))) (and (= ($generated@@282 ($generated@@384 $generated@@2 $generated@@560)) $generated@@560) ($generated@@140 ($generated@@384 ($generated@@80 $generated@@153 $generated@@4) $generated@@560) ($generated@@79 0))))
 :pattern ( ($generated@@220 $generated@@560 ($generated@@79 0)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@153) (= (type $generated@@562) $generated@@68)) ($generated@@220 $generated@@561 ($generated@@233 $generated@@562))) (and (= ($generated@@282 ($generated@@384 ($generated@@80 $generated@@153 $generated@@4) $generated@@561)) $generated@@561) ($generated@@140 ($generated@@384 ($generated@@80 $generated@@153 $generated@@4) $generated@@561) ($generated@@233 $generated@@562))))
 :pattern ( ($generated@@220 $generated@@561 ($generated@@233 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@153) (= (type $generated@@564) $generated@@68)) ($generated@@220 $generated@@563 ($generated@@238 $generated@@564))) (and (= ($generated@@282 ($generated@@384 ($generated@@80 $generated@@153 $generated@@4) $generated@@563)) $generated@@563) ($generated@@140 ($generated@@384 ($generated@@80 $generated@@153 $generated@@4) $generated@@563) ($generated@@238 $generated@@564))))
 :pattern ( ($generated@@220 $generated@@563 ($generated@@238 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@153) (= (type $generated@@566) $generated@@68)) ($generated@@220 $generated@@565 ($generated@@158 $generated@@566))) (and (= ($generated@@282 ($generated@@384 ($generated@@80 $generated@@153 $generated@@2) $generated@@565)) $generated@@565) ($generated@@140 ($generated@@384 ($generated@@80 $generated@@153 $generated@@2) $generated@@565) ($generated@@158 $generated@@566))))
 :pattern ( ($generated@@220 $generated@@565 ($generated@@158 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@153) (= (type $generated@@568) $generated@@68)) ($generated@@220 $generated@@567 ($generated@@250 $generated@@568))) (and (= ($generated@@282 ($generated@@384 ($generated@@251 $generated@@153) $generated@@567)) $generated@@567) ($generated@@140 ($generated@@384 ($generated@@251 $generated@@153) $generated@@567) ($generated@@250 $generated@@568))))
 :pattern ( ($generated@@220 $generated@@567 ($generated@@250 $generated@@568)))
)))
(assert (= ($generated@@76 $generated@@229) $generated@@63))
(assert (= ($generated@@546 $generated@@229) $generated@@66))
(assert (= (type $generated@@569) $generated@@68))
(assert (= ($generated@@76 $generated@@569) $generated@@64))
(assert (= ($generated@@546 $generated@@569) $generated@@67))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@571) $generated@@68)) (= (type $generated@@572) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@570 ($generated@@158 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@570 $generated@@573)))) ($generated@@263 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@85 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@78 $generated@@570 ($generated@@158 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@144) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@262 $generated@@576) (and ($generated@@142 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@68) ($generated@@78 $generated@@574 ($generated@@143 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@78 $generated@@574 ($generated@@143 $generated@@575 $generated@@577) $generated@@576))
))))) ($generated@@263 ($generated@@151 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@263 ($generated@@151 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@144) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@262 $generated@@580) (and ($generated@@142 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@68) ($generated@@78 $generated@@578 ($generated@@143 $generated@@581 $generated@@579) $generated@@580))
 :pattern ( ($generated@@78 $generated@@578 ($generated@@143 $generated@@581 $generated@@579) $generated@@580))
))))) ($generated@@263 ($generated@@152 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@263 ($generated@@152 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@153) (= (type $generated@@583) $generated@@153)) (= ($generated@@219 ($generated@@245 $generated@@582) ($generated@@245 $generated@@583)) ($generated@@245 ($generated@@219 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@219 ($generated@@245 $generated@@582) ($generated@@245 $generated@@583)))
)))
(assert (forall (($generated@@584 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@243 $generated@@584))) ($generated@@245 ($generated@@282 ($generated@@8 $generated@@584))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@243 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ) (! (= ($generated@@282 ($generated@@245 $generated@@585)) ($generated@@245 ($generated@@282 $generated@@585)))
 :pattern ( ($generated@@282 ($generated@@245 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@252 (type $generated@@586))))
 (=> (and (= (type $generated@@586) ($generated@@251 $generated@@587)) (= ($generated@@276 $generated@@586) 0)) (= $generated@@586 ($generated@@275 $generated@@587))))
 :pattern ( ($generated@@276 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@589)))
 (=> (and (and (= (type $generated@@588) ($generated@@80 $generated@@591 $generated@@2)) (= (type $generated@@590) $generated@@2)) (<= 0 ($generated $generated@@590))) (= ($generated@@295 ($generated@@86 $generated@@588 $generated@@589 $generated@@590)) (+ (- ($generated@@295 $generated@@588) ($generated ($generated@@85 $generated@@588 $generated@@589))) ($generated $generated@@590)))))
 :pattern ( ($generated@@295 ($generated@@86 $generated@@588 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@593) $generated@@2)) ($generated@@78 $generated@@593 $generated@@46 $generated@@592))
 :pattern ( ($generated@@78 $generated@@593 $generated@@46 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@595) $generated@@3)) ($generated@@78 $generated@@595 $generated@@47 $generated@@594))
 :pattern ( ($generated@@78 $generated@@595 $generated@@47 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@597) $generated@@4)) ($generated@@78 $generated@@597 $generated@@44 $generated@@596))
 :pattern ( ($generated@@78 $generated@@597 $generated@@44 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@599) $generated@@455)) ($generated@@78 $generated@@599 $generated@@45 $generated@@598))
 :pattern ( ($generated@@78 $generated@@599 $generated@@45 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@601) $generated@@153)) ($generated@@78 $generated@@601 $generated@@48 $generated@@600))
 :pattern ( ($generated@@78 $generated@@601 $generated@@48 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@251 $generated@@153)) (= (type $generated@@603) $generated@@68)) (= ($generated@@140 $generated@@602 ($generated@@250 $generated@@603)) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@276 $generated@@602))) ($generated@@220 ($generated@@340 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@340 $generated@@602 $generated@@604))
))))
 :pattern ( ($generated@@140 $generated@@602 ($generated@@250 $generated@@603)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ) (!  (=> (= (type $generated@@606) ($generated@@251 $generated@@153)) (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@276 $generated@@606))) (< ($generated@@530 ($generated@@384 $generated@@144 ($generated@@340 $generated@@606 $generated@@607))) ($generated@@605 $generated@@606))))
 :pattern ( ($generated@@530 ($generated@@384 $generated@@144 ($generated@@340 $generated@@606 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) $generated@@68)) ($generated@@140 $generated@@608 ($generated@@412 $generated@@609 $generated@@610))) (and (and ($generated@@140 ($generated@@301 $generated@@608) ($generated@@233 $generated@@609)) ($generated@@140 ($generated@@352 $generated@@608) ($generated@@233 $generated@@610))) ($generated@@140 ($generated@@383 $generated@@608) ($generated@@233 ($generated@@143 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@140 $generated@@608 ($generated@@412 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) $generated@@68)) ($generated@@140 $generated@@611 ($generated@@420 $generated@@612 $generated@@613))) (and (and ($generated@@140 ($generated@@319 $generated@@611) ($generated@@238 $generated@@612)) ($generated@@140 ($generated@@363 $generated@@611) ($generated@@238 $generated@@613))) ($generated@@140 ($generated@@394 $generated@@611) ($generated@@238 ($generated@@143 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@140 $generated@@611 ($generated@@420 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@2) ($generated@@140 $generated@@614 $generated@@46))
 :pattern ( ($generated@@140 $generated@@614 $generated@@46))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@3) ($generated@@140 $generated@@615 $generated@@47))
 :pattern ( ($generated@@140 $generated@@615 $generated@@47))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@4) ($generated@@140 $generated@@616 $generated@@44))
 :pattern ( ($generated@@140 $generated@@616 $generated@@44))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@455) ($generated@@140 $generated@@617 $generated@@45))
 :pattern ( ($generated@@140 $generated@@617 $generated@@45))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@153) ($generated@@140 $generated@@618 $generated@@48))
 :pattern ( ($generated@@140 $generated@@618 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Bool)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@619) ($generated@@251 $generated@@153)) (= (type $generated@@621) $generated@@153)) (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@623) ($generated@@165 $generated@@81 $generated@@4))) (= (type $generated@@624) $generated@@81)) (= (type $generated@@625) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@626) $generated@@153)) (= (type $generated@@628) $generated@@153)) (= (type $generated@@629) $generated@@153)) (= (type $generated@@630) ($generated@@251 $generated@@153))) (= (type $generated@@632) $generated@@153)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@634  (=> (and (forall (($generated@@635 Int) ) (!  (=> (and (<= ($generated@@243 0) $generated@@635) (< $generated@@635 ($generated@@276 $generated@@619))) ($generated@@228 ($generated@@340 $generated@@619 $generated@@635)))
 :pattern ( ($generated@@340 $generated@@619 $generated@@635))
)) (= (ControlFlow 0 3) (- 0 2))) (forall (($generated@@636 Int) ) (!  (=> true (=> (and (<= ($generated@@243 0) $generated@@636) (< $generated@@636 ($generated@@276 $generated@@619))) ($generated@@227 ($generated@@340 $generated@@619 $generated@@636))))
 :pattern ( ($generated@@340 $generated@@619 $generated@@636))
)))))
(let (($generated@@637  (=> (and (not (and (<= ($generated@@243 0) $generated@@620) (< $generated@@620 ($generated@@276 $generated@@619)))) (= (ControlFlow 0 6) 3)) $generated@@634)))
(let (($generated@@638  (=> (and (<= ($generated@@243 0) $generated@@620) (< $generated@@620 ($generated@@276 $generated@@619))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@276 $generated@@619)))) (=> (and (and (= $generated@@621 ($generated@@340 $generated@@619 $generated@@620)) ($generated@@263 $generated@@621 $generated@@229 $generated@@622)) (and ($generated@@228 ($generated@@340 $generated@@619 $generated@@620)) (= (ControlFlow 0 4) 3))) $generated@@634)))))
(let (($generated@@639  (=> (< $generated@@620 ($generated@@243 0)) (and (=> (= (ControlFlow 0 8) 4) $generated@@638) (=> (= (ControlFlow 0 8) 6) $generated@@637)))))
(let (($generated@@640  (=> (<= ($generated@@243 0) $generated@@620) (and (=> (= (ControlFlow 0 7) 4) $generated@@638) (=> (= (ControlFlow 0 7) 6) $generated@@637)))))
(let (($generated@@641  (and (=> (= (ControlFlow 0 9) 7) $generated@@640) (=> (= (ControlFlow 0 9) 8) $generated@@639))))
(let (($generated@@642 true))
(let (($generated@@643  (=> (= $generated@@623 ($generated@@164 $generated@@624 $generated@@625 $generated@@60 false)) (=> (and (and ($generated@@220 $generated@@626 $generated@@229) ($generated@@263 $generated@@626 $generated@@229 $generated@@625)) (and ($generated@@262 $generated@@622) ($generated@@627 $generated@@622))) (=> (and (and (and ($generated@@220 $generated@@628 $generated@@229) ($generated@@263 $generated@@628 $generated@@229 $generated@@622)) ($generated@@228 $generated@@628)) (and (and ($generated@@227 $generated@@628) (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@81) (=> (and (not (= $generated@@644 $generated@@624)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@625 $generated@@644) $generated@@60))) (= ($generated@@85 $generated@@622 $generated@@644) ($generated@@85 $generated@@625 $generated@@644))))
 :pattern ( ($generated@@85 $generated@@622 $generated@@644))
))) (and ($generated@@136 $generated@@625 $generated@@622) (= $generated@@619 ($generated@@249 ($generated@@249 ($generated@@275 $generated@@153) $generated@@628) $generated@@628))))) (and (=> (= (ControlFlow 0 10) 9) $generated@@641) (=> (= (ControlFlow 0 10) 1) $generated@@642)))))))
(let (($generated@@645  (=> (and ($generated@@262 $generated@@625) ($generated@@627 $generated@@625)) (=> (and (and ($generated@@220 $generated@@629 $generated@@229) ($generated@@263 $generated@@629 $generated@@229 $generated@@625)) true) (=> (and (and (and ($generated@@140 $generated@@630 ($generated@@250 $generated@@229)) ($generated@@78 $generated@@630 ($generated@@250 $generated@@229) $generated@@625)) true) (and (and (=> $generated@@631 (and ($generated@@220 $generated@@632 $generated@@569) ($generated@@263 $generated@@632 $generated@@569 $generated@@625))) true) (and (= 1 $generated@@633) (= (ControlFlow 0 11) 10)))) $generated@@643)))))
$generated@@645))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@T T@U) T@U)
(declare-fun $generated@@235 (T@U Int) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@237 (T@U) Int)
(declare-fun $generated@@238 (Bool) Bool)
(declare-fun $generated@@239 (Bool) Bool)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@140 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@140)) 14)) (forall (($generated@@141 T@T) ) (! (= ($generated@@139 ($generated@@134 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@134 $generated@@141))
))) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) ($generated@@134 $generated@@135)) (or ($generated@@136 $generated@@143) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@143 ($generated@@138 $generated@@44))))) true)
 :pattern ( ($generated@@133 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@137 $generated@@144 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@144 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 16) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@64)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@64) (= (type $generated@@151) $generated@@64)) (= (type $generated@@152) $generated@@147)) ($generated@@137 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@137 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@135)
 :pattern ( ($generated@@154 $generated@@156))
)) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@135)
 :pattern ( ($generated@@155 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@147) (= (type $generated@@159) $generated@@147)) true) (= ($generated@@153 $generated@@158 $generated@@159)  (and (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)) (= ($generated@@155 $generated@@158) ($generated@@155 $generated@@159)))))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@64)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@164) $generated@@64)) ($generated@@137 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@137 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 17)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@77 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@67 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@77) (= (type $generated@@215) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@216) ($generated@@66 $generated@@4))) (= (type $generated@@218) $generated@@77)) (= (type $generated@@219) ($generated@@66 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@77 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@67 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@77) (= (type $generated@@227) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@228) ($generated@@66 $generated@@4))) (= (type $generated@@230) $generated@@77)) (= (type $generated@@231) ($generated@@66 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert  (and (and (forall (($generated@@240 T@U) ) (! (let (($generated@@241 (type $generated@@240)))
(= (type ($generated@@233 $generated@@240)) $generated@@241))
 :pattern ( ($generated@@233 $generated@@240))
)) (forall (($generated@@242 T@T) ($generated@@243 T@U) ) (! (= (type ($generated@@234 $generated@@242 $generated@@243)) $generated@@242)
 :pattern ( ($generated@@234 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@U) ($generated@@245 Int) ) (! (let (($generated@@246 ($generated@@139 (type $generated@@244))))
(= (type ($generated@@235 $generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@235 $generated@@244 $generated@@245))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@134 $generated@@135)) (or ($generated@@136 ($generated@@233 $generated@@247)) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@247 ($generated@@138 $generated@@44))))) (and (forall (($generated@@248 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@248) (=> (< $generated@@248 ($generated@@237 ($generated@@233 $generated@@247))) ($generated@@238 ($generated@@0 ($generated@@234 $generated@@4 ($generated@@235 ($generated@@233 $generated@@247) $generated@@248))))))
 :pattern ( ($generated@@234 $generated@@4 ($generated@@235 $generated@@247 $generated@@248)))
)) (= ($generated@@133 ($generated@@233 $generated@@247)) (forall (($generated@@249 Int) ) (!  (=> true (=> (and (<= ($generated@@236 0) $generated@@249) (< $generated@@249 ($generated@@237 ($generated@@233 $generated@@247)))) ($generated@@239 ($generated@@0 ($generated@@234 $generated@@4 ($generated@@235 ($generated@@233 $generated@@247) $generated@@249))))))
 :pattern ( ($generated@@234 $generated@@4 ($generated@@235 $generated@@247 $generated@@249)))
)))))
 :weight 3
 :pattern ( ($generated@@133 ($generated@@233 $generated@@247)))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@147)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@64) (= (type $generated@@255) $generated@@64)) (= (type $generated@@256) $generated@@135)) (= (type $generated@@257) $generated@@135)) (= ($generated@@137 ($generated@@250 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@137 ($generated@@250 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@147) (= (type $generated@@259) $generated@@147)) (= ($generated@@153 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@153 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@64)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@263) $generated@@64)) (= ($generated@@137 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@135) ($generated@@0 ($generated@@81 $generated@@262 $generated@@264))) ($generated@@251 $generated@@264 $generated@@263))
 :pattern ( ($generated@@81 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@137 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@64)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@268) $generated@@64)) (= ($generated@@137 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@135) ($generated@@0 ($generated@@81 $generated@@267 $generated@@269))) ($generated@@251 $generated@@269 $generated@@268))
 :pattern ( ($generated@@81 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@137 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@236 $generated@@270) $generated@@270)
 :pattern ( ($generated@@236 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@233 $generated@@271) $generated@@271)
 :pattern ( ($generated@@233 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) $generated@@64)) (= (type $generated@@276) $generated@@135)) (= (type $generated@@277) $generated@@135)) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@272 $generated@@278)) (= ($generated@@74 ($generated@@250 $generated@@276 $generated@@277) ($generated@@146 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@74 ($generated@@250 $generated@@276 $generated@@277) ($generated@@146 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@68)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@147) (= ($generated@@145 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@147) ($generated@@145 $generated@@282)) (exists (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (and (= (type $generated@@283) $generated@@135) (= (type $generated@@284) $generated@@135)) (= $generated@@282 ($generated@@250 $generated@@283 $generated@@284)))
 :no-pattern (type $generated@@283)
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
)))
 :pattern ( ($generated@@145 $generated@@282))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@285 $generated@@286)) ($generated@@134 $generated@@286))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@237 ($generated@@285 $generated@@287)) 0)
 :pattern ( ($generated@@285 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@135)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@64) (= (type $generated@@292) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@273 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@74 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@273 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@76 $generated@@295 $generated@@2))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@79 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@76 $generated@@297 $generated@@2)) (and (= (= ($generated@@293 $generated@@296) 0) (= $generated@@296 ($generated@@294 $generated@@297))) (=> (not (= ($generated@@293 $generated@@296) 0)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) (< 0 ($generated ($generated@@81 $generated@@296 $generated@@298))))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 18)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 19)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@76 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@81 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@81 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@79 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@76 $generated@@336 $generated@@2)) (= ($generated@@161 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (and (<= 0 ($generated ($generated@@81 $generated@@335 $generated@@337))) (<= ($generated ($generated@@81 $generated@@335 $generated@@337)) ($generated@@293 $generated@@335))))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@161 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@299 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@303 (type $generated@@345))))
(let (($generated@@347 ($generated@@302 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@301 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@300 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@321 (type $generated@@349))))
(let (($generated@@351 ($generated@@320 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@319 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@318 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@317 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@321 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@76 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@321 (type $generated@@356))))
(let (($generated@@358 ($generated@@320 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@319 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@318 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@361) $generated@@64)) (= ($generated@@137 $generated@@360 ($generated@@160 $generated@@361)) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@360 $generated@@362)))) ($generated@@251 $generated@@362 $generated@@361))
 :pattern ( ($generated@@81 $generated@@360 $generated@@362))
))))
 :pattern ( ($generated@@137 $generated@@360 ($generated@@160 $generated@@361)))
)))
(assert  (=> true (forall (($generated@@363 Bool) ) (!  (=> true (= ($generated@@239 $generated@@363) $generated@@363))
 :pattern ( ($generated@@239 $generated@@363))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@260 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@135) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@273 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@260 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@265 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@135) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@273 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@265 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@294 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@294 $generated@@373) $generated@@372)))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@303 (type $generated@@377))))
(let (($generated@@379 ($generated@@302 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@301 $generated@@135 $generated@@135)) (= (type $generated@@381) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@380) ($generated@@154 ($generated@@234 $generated@@147 $generated@@381)))) (= ($generated@@81 ($generated@@375 $generated@@380) ($generated@@154 ($generated@@234 $generated@@147 $generated@@381))) ($generated@@155 ($generated@@234 $generated@@147 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@321 (type $generated@@385))))
(let (($generated@@387 ($generated@@320 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@76 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@319 $generated@@135 $generated@@135)) (= (type $generated@@389) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@81 ($generated@@317 $generated@@388) ($generated@@154 ($generated@@234 $generated@@147 $generated@@389)))) (= ($generated@@81 ($generated@@383 $generated@@388) ($generated@@154 ($generated@@234 $generated@@147 $generated@@389))) ($generated@@155 ($generated@@234 $generated@@147 $generated@@389))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@302 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@301 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@342 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@375 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@342 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@320 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@319 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@353 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@317 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@301 $generated@@135 $generated@@135)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@403) $generated@@407))) (and ($generated@@273 ($generated@@81 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@273 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@64)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@319 $generated@@135 $generated@@135)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@411) $generated@@415))) (and ($generated@@273 ($generated@@81 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@273 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@76 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@321 (type $generated@@418))))
(let (($generated@@420 ($generated@@320 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@319 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@318 $generated@@420 $generated@@419)) (= ($generated@@317 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@317 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@321 (type $generated@@421))))
(let (($generated@@423 ($generated@@320 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@319 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@318 $generated@@423 $generated@@422)) (= ($generated@@353 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@353 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@321 (type $generated@@424))))
(let (($generated@@426 ($generated@@320 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@319 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@318 $generated@@426 $generated@@425)) (= ($generated@@382 $generated@@424) ($generated@@416 $generated@@135))))))
 :pattern ( ($generated@@382 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@303 (type $generated@@427))))
(let (($generated@@429 ($generated@@302 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@301 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@300 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@135) (= (type $generated@@431) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@427) ($generated@@288 ($generated@@250 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@374 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@321 (type $generated@@432))))
(let (($generated@@434 ($generated@@320 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@319 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@318 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@135) (= (type $generated@@436) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@432) ($generated@@288 ($generated@@250 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@382 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@135) ($generated@@251 $generated@@437 $generated@@46)) (and (= ($generated@@288 ($generated@@234 $generated@@2 $generated@@437)) $generated@@437) ($generated@@137 ($generated@@234 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@135) ($generated@@251 $generated@@438 $generated@@47)) (and (= ($generated@@288 ($generated@@234 $generated@@3 $generated@@438)) $generated@@438) ($generated@@137 ($generated@@234 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@135) ($generated@@251 $generated@@439 $generated@@44)) (and (= ($generated@@288 ($generated@@234 $generated@@4 $generated@@439)) $generated@@439) ($generated@@137 ($generated@@234 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 20))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@135) ($generated@@251 $generated@@441 $generated@@45)) (and (= ($generated@@288 ($generated@@234 $generated@@440 $generated@@441)) $generated@@441) ($generated@@137 ($generated@@234 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@64) (= ($generated@@251 ($generated@@288 $generated@@442) $generated@@443) ($generated@@137 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@251 ($generated@@288 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@79 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@76 $generated@@445 $generated@@2)) (<= 0 ($generated@@293 $generated@@444))))
 :pattern ( ($generated@@293 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@139 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@134 $generated@@447)) (<= 0 ($generated@@237 $generated@@446))))
 :pattern ( ($generated@@237 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@400 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@400 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@400 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@400 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@456 $generated@@457)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@408 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@408 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@408 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@408 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@72 ($generated@@408 $generated@@466 $generated@@467)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@135) (= (type $generated@@469) $generated@@135)) (= ($generated@@279 ($generated@@250 $generated@@468 $generated@@469)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@146 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@146 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@146 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@146 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@135) (= (type $generated@@479) $generated@@135)) (= ($generated@@154 ($generated@@250 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@250 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@135) (= (type $generated@@481) $generated@@135)) (= ($generated@@155 ($generated@@250 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@250 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@134 $generated@@135)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@138 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@237 $generated@@482))) ($generated@@273 ($generated@@235 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@235 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@138 $generated@@483) $generated@@484))
)))
(assert  (=> true (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@4) true) (= ($generated@@239 ($generated@@0 ($generated@@233 $generated@@486))) ($generated@@0 ($generated@@233 $generated@@486))))
 :weight 3
 :pattern ( ($generated@@239 ($generated@@0 ($generated@@233 $generated@@486))))
))))
(assert (forall (($generated@@488 Int) ) (! (= ($generated@@487 ($generated@@75 $generated@@488)) $generated@@488)
 :pattern ( ($generated@@75 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@260 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@260 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@260 $generated@@492)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@265 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@265 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@265 $generated@@496)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@160 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@160 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@160 $generated@@500)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@138 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@138 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@504)) $generated@@57))
 :pattern ( ($generated@@138 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@234 $generated@@506 ($generated@@288 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@288 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@301 $generated@@135 $generated@@135)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@137 $generated@@507 ($generated@@400 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@507) $generated@@510))) (and ($generated@@251 ($generated@@81 ($generated@@375 $generated@@507) $generated@@510) $generated@@509) ($generated@@251 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@137 $generated@@507 ($generated@@400 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@319 $generated@@135 $generated@@135)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@137 $generated@@511 ($generated@@408 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@511) $generated@@514))) (and ($generated@@251 ($generated@@81 ($generated@@383 $generated@@511) $generated@@514) $generated@@513) ($generated@@251 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@137 $generated@@511 ($generated@@408 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@135) (= (type $generated@@518) $generated@@135)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@250 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@250 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@135) (= (type $generated@@520) $generated@@135)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@250 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@250 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@135) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@251 $generated@@521 ($generated@@400 $generated@@522 $generated@@523))) (and (= ($generated@@288 ($generated@@234 ($generated@@301 $generated@@135 $generated@@135) $generated@@521)) $generated@@521) ($generated@@137 ($generated@@234 ($generated@@301 $generated@@135 $generated@@135) $generated@@521) ($generated@@400 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@251 $generated@@521 ($generated@@400 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@135) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@251 $generated@@524 ($generated@@408 $generated@@525 $generated@@526))) (and (= ($generated@@288 ($generated@@234 ($generated@@319 $generated@@135 $generated@@135) $generated@@524)) $generated@@524) ($generated@@137 ($generated@@234 ($generated@@319 $generated@@135 $generated@@135) $generated@@524) ($generated@@408 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@251 $generated@@524 ($generated@@408 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@135)) ($generated@@251 $generated@@529 ($generated@@146 $generated@@527 $generated@@528))) (and (= ($generated@@288 ($generated@@234 $generated@@147 $generated@@529)) $generated@@529) ($generated@@137 ($generated@@234 $generated@@147 $generated@@529) ($generated@@146 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@251 $generated@@529 ($generated@@146 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@81 ($generated@@416 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@81 ($generated@@416 $generated@@531) $generated@@530)))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) ($generated@@134 $generated@@135)) (or ($generated@@136 $generated@@532) (and (not (= 2 $generated@@132)) ($generated@@137 $generated@@532 ($generated@@138 $generated@@44))))) (and (forall (($generated@@533 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@533) (=> (< $generated@@533 ($generated@@237 $generated@@532)) ($generated@@238 ($generated@@0 ($generated@@234 $generated@@4 ($generated@@235 $generated@@532 $generated@@533))))))
 :pattern ( ($generated@@234 $generated@@4 ($generated@@235 $generated@@532 $generated@@533)))
)) (= ($generated@@133 $generated@@532) (forall (($generated@@534 Int) ) (!  (=> true (=> (and (<= ($generated@@236 0) $generated@@534) (< $generated@@534 ($generated@@237 $generated@@532))) ($generated@@239 ($generated@@0 ($generated@@234 $generated@@4 ($generated@@235 $generated@@532 $generated@@534))))))
 :pattern ( ($generated@@234 $generated@@4 ($generated@@235 $generated@@532 $generated@@534)))
)))))
 :pattern ( ($generated@@133 $generated@@532))
))))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@69)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@64) (= (type $generated@@538) $generated@@64)) (and (= ($generated@@72 ($generated@@146 $generated@@537 $generated@@538)) $generated@@62) (= ($generated@@535 ($generated@@146 $generated@@537 $generated@@538)) $generated@@63)))
 :pattern ( ($generated@@146 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@147) (= ($generated@@515 ($generated@@288 $generated@@539)) ($generated@@516 $generated@@539)))
 :pattern ( ($generated@@515 ($generated@@288 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@135) ($generated@@251 $generated@@540 ($generated@@75 0))) (and (= ($generated@@288 ($generated@@234 $generated@@2 $generated@@540)) $generated@@540) ($generated@@137 ($generated@@234 ($generated@@76 $generated@@135 $generated@@4) $generated@@540) ($generated@@75 0))))
 :pattern ( ($generated@@251 $generated@@540 ($generated@@75 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@135) (= (type $generated@@542) $generated@@64)) ($generated@@251 $generated@@541 ($generated@@260 $generated@@542))) (and (= ($generated@@288 ($generated@@234 ($generated@@76 $generated@@135 $generated@@4) $generated@@541)) $generated@@541) ($generated@@137 ($generated@@234 ($generated@@76 $generated@@135 $generated@@4) $generated@@541) ($generated@@260 $generated@@542))))
 :pattern ( ($generated@@251 $generated@@541 ($generated@@260 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@135) (= (type $generated@@544) $generated@@64)) ($generated@@251 $generated@@543 ($generated@@265 $generated@@544))) (and (= ($generated@@288 ($generated@@234 ($generated@@76 $generated@@135 $generated@@4) $generated@@543)) $generated@@543) ($generated@@137 ($generated@@234 ($generated@@76 $generated@@135 $generated@@4) $generated@@543) ($generated@@265 $generated@@544))))
 :pattern ( ($generated@@251 $generated@@543 ($generated@@265 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@135) (= (type $generated@@546) $generated@@64)) ($generated@@251 $generated@@545 ($generated@@160 $generated@@546))) (and (= ($generated@@288 ($generated@@234 ($generated@@76 $generated@@135 $generated@@2) $generated@@545)) $generated@@545) ($generated@@137 ($generated@@234 ($generated@@76 $generated@@135 $generated@@2) $generated@@545) ($generated@@160 $generated@@546))))
 :pattern ( ($generated@@251 $generated@@545 ($generated@@160 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@135) (= (type $generated@@548) $generated@@64)) ($generated@@251 $generated@@547 ($generated@@138 $generated@@548))) (and (= ($generated@@288 ($generated@@234 ($generated@@134 $generated@@135) $generated@@547)) $generated@@547) ($generated@@137 ($generated@@234 ($generated@@134 $generated@@135) $generated@@547) ($generated@@138 $generated@@548))))
 :pattern ( ($generated@@251 $generated@@547 ($generated@@138 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@549 ($generated@@160 $generated@@550) $generated@@551) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@549 $generated@@552)))) ($generated@@273 $generated@@552 $generated@@550 $generated@@551))
 :pattern ( ($generated@@81 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@160 $generated@@550) $generated@@551))
)))
(assert  (=> true (forall (($generated@@553 Bool) ) (!  (=> true true)
 :pattern ( ($generated@@239 $generated@@553))
))))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@147) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@272 $generated@@556) (and ($generated@@145 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@146 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@146 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@273 ($generated@@154 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@273 ($generated@@154 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@147) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@272 $generated@@560) (and ($generated@@145 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@64) ($generated@@74 $generated@@558 ($generated@@146 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@74 $generated@@558 ($generated@@146 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@273 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@273 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@135) (= (type $generated@@563) $generated@@135)) (= ($generated@@250 ($generated@@233 $generated@@562) ($generated@@233 $generated@@563)) ($generated@@233 ($generated@@250 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@250 ($generated@@233 $generated@@562) ($generated@@233 $generated@@563)))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@288 ($generated@@8 ($generated@@236 $generated@@564))) ($generated@@233 ($generated@@288 ($generated@@8 $generated@@564))))
 :pattern ( ($generated@@288 ($generated@@8 ($generated@@236 $generated@@564))))
)))
(assert (forall (($generated@@565 T@U) ) (! (= ($generated@@288 ($generated@@233 $generated@@565)) ($generated@@233 ($generated@@288 $generated@@565)))
 :pattern ( ($generated@@288 ($generated@@233 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@139 (type $generated@@566))))
 (=> (and (= (type $generated@@566) ($generated@@134 $generated@@567)) (= ($generated@@237 $generated@@566) 0)) (= $generated@@566 ($generated@@285 $generated@@567))))
 :pattern ( ($generated@@237 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@569)))
 (=> (and (and (= (type $generated@@568) ($generated@@76 $generated@@571 $generated@@2)) (= (type $generated@@570) $generated@@2)) (<= 0 ($generated $generated@@570))) (= ($generated@@293 ($generated@@82 $generated@@568 $generated@@569 $generated@@570)) (+ (- ($generated@@293 $generated@@568) ($generated ($generated@@81 $generated@@568 $generated@@569))) ($generated $generated@@570)))))
 :pattern ( ($generated@@293 ($generated@@82 $generated@@568 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@2)) ($generated@@74 $generated@@573 $generated@@46 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@46 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@3)) ($generated@@74 $generated@@575 $generated@@47 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@47 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@4)) ($generated@@74 $generated@@577 $generated@@44 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@44 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@440)) ($generated@@74 $generated@@579 $generated@@45 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@45 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@135)) ($generated@@74 $generated@@581 $generated@@48 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@48 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@134 $generated@@135)) (= (type $generated@@583) $generated@@64)) (= ($generated@@137 $generated@@582 ($generated@@138 $generated@@583)) (forall (($generated@@584 Int) ) (!  (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@237 $generated@@582))) ($generated@@251 ($generated@@235 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@235 $generated@@582 $generated@@584))
))))
 :pattern ( ($generated@@137 $generated@@582 ($generated@@138 $generated@@583)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 Int) ) (!  (=> (= (type $generated@@586) ($generated@@134 $generated@@135)) (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@237 $generated@@586))) (< ($generated@@516 ($generated@@234 $generated@@147 ($generated@@235 $generated@@586 $generated@@587))) ($generated@@585 $generated@@586))))
 :pattern ( ($generated@@516 ($generated@@234 $generated@@147 ($generated@@235 $generated@@586 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@301 $generated@@135 $generated@@135)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) ($generated@@137 $generated@@588 ($generated@@400 $generated@@589 $generated@@590))) (and (and ($generated@@137 ($generated@@299 $generated@@588) ($generated@@260 $generated@@589)) ($generated@@137 ($generated@@342 $generated@@588) ($generated@@260 $generated@@590))) ($generated@@137 ($generated@@374 $generated@@588) ($generated@@260 ($generated@@146 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@137 $generated@@588 ($generated@@400 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@319 $generated@@135 $generated@@135)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) ($generated@@137 $generated@@591 ($generated@@408 $generated@@592 $generated@@593))) (and (and ($generated@@137 ($generated@@317 $generated@@591) ($generated@@265 $generated@@592)) ($generated@@137 ($generated@@353 $generated@@591) ($generated@@265 $generated@@593))) ($generated@@137 ($generated@@382 $generated@@591) ($generated@@265 ($generated@@146 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@137 $generated@@591 ($generated@@408 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@2) ($generated@@137 $generated@@594 $generated@@46))
 :pattern ( ($generated@@137 $generated@@594 $generated@@46))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@3) ($generated@@137 $generated@@595 $generated@@47))
 :pattern ( ($generated@@137 $generated@@595 $generated@@47))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@4) ($generated@@137 $generated@@596 $generated@@44))
 :pattern ( ($generated@@137 $generated@@596 $generated@@44))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@440) ($generated@@137 $generated@@597 $generated@@45))
 :pattern ( ($generated@@137 $generated@@597 $generated@@45))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@135) ($generated@@137 $generated@@598 $generated@@48))
 :pattern ( ($generated@@137 $generated@@598 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () Bool)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@600) ($generated@@134 $generated@@135)) (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@603) ($generated@@167 $generated@@77 $generated@@4))) (= (type $generated@@604) $generated@@77)) (= (type $generated@@605) ($generated@@167 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@607 true))
(let (($generated@@608  (=> (and (not (and (<= ($generated@@236 0) $generated@@599) (< $generated@@599 ($generated@@237 $generated@@600)))) (= (ControlFlow 0 6) 3)) $generated@@607)))
(let (($generated@@609  (=> (and (<= ($generated@@236 0) $generated@@599) (< $generated@@599 ($generated@@237 $generated@@600))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@237 $generated@@600)))) (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@237 $generated@@600))) (=> (and (and (= $generated@@601 ($generated@@0 ($generated@@234 $generated@@4 ($generated@@235 $generated@@600 $generated@@599)))) ($generated@@74 ($generated@@11 $generated@@601) $generated@@44 $generated@@602)) (and ($generated@@238 ($generated@@0 ($generated@@234 $generated@@4 ($generated@@235 $generated@@600 $generated@@599)))) (= (ControlFlow 0 4) 3))) $generated@@607))))))
(let (($generated@@610  (=> (< $generated@@599 ($generated@@236 0)) (and (=> (= (ControlFlow 0 8) 4) $generated@@609) (=> (= (ControlFlow 0 8) 6) $generated@@608)))))
(let (($generated@@611  (=> (<= ($generated@@236 0) $generated@@599) (and (=> (= (ControlFlow 0 7) 4) $generated@@609) (=> (= (ControlFlow 0 7) 6) $generated@@608)))))
(let (($generated@@612  (and (=> (= (ControlFlow 0 9) 7) $generated@@611) (=> (= (ControlFlow 0 9) 8) $generated@@610))))
(let (($generated@@613 true))
(let (($generated@@614  (=> (= $generated@@603 ($generated@@221 $generated@@604 $generated@@602 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@612) (=> (= (ControlFlow 0 10) 2) $generated@@613)))))
(let (($generated@@615 true))
(let (($generated@@616  (=> (= $generated@@605 ($generated@@166 $generated@@604 $generated@@602 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@615) (=> (= (ControlFlow 0 11) 10) $generated@@614)))))
(let (($generated@@617  (=> (and (and (and ($generated@@272 $generated@@602) ($generated@@606 $generated@@602)) ($generated@@137 $generated@@600 ($generated@@138 $generated@@44))) (and (= 2 $generated@@132) (= (ControlFlow 0 12) 11))) $generated@@616)))
$generated@@617))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (Bool) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (Bool) Bool)
(declare-fun $generated@@51 (T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 (T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@T T@U) T@U)
(declare-fun $generated@@168 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@48 T@U) ) (! (let (($generated@@49 (type $generated@@48)))
(= (type ($generated@@46 $generated@@48)) $generated@@49))
 :pattern ( ($generated@@46 $generated@@48))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@50 T@U) ) (!  (=> (and (= (type $generated@@50) $generated@@4) (or ($generated@@47 ($generated@@0 ($generated@@46 $generated@@50))) (not (= 1 $generated@@44)))) (= ($generated@@45 ($generated@@0 ($generated@@46 $generated@@50))) ($generated@@0 ($generated@@46 $generated@@50))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@0 ($generated@@46 $generated@@50))))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@1 ($generated@@55 $generated@@68 $generated@@69)) 6)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@60 ($generated@@55 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@55 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@61 ($generated@@55 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@55 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (let (($generated@@76 ($generated@@61 (type $generated@@74))))
(= (type ($generated@@59 $generated@@74 $generated@@75)) $generated@@76))
 :pattern ( ($generated@@59 $generated@@74 $generated@@75))
))) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (let (($generated@@80 (type $generated@@79)))
(let (($generated@@81 (type $generated@@78)))
(= (type ($generated@@62 $generated@@77 $generated@@78 $generated@@79)) ($generated@@55 $generated@@81 $generated@@80))))
 :pattern ( ($generated@@62 $generated@@77 $generated@@78 $generated@@79))
))) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (let (($generated@@85 ($generated@@61 (type $generated@@82))))
 (=> (= (type $generated@@84) $generated@@85) (= ($generated@@59 ($generated@@62 $generated@@82 $generated@@83 $generated@@84) $generated@@83) $generated@@84)))
 :weight 0
))) (and (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (or (= $generated@@88 $generated@@89) (= ($generated@@59 ($generated@@62 $generated@@87 $generated@@88 $generated@@86) $generated@@89) ($generated@@59 $generated@@87 $generated@@89)))
 :weight 0
)) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (or true (= ($generated@@59 ($generated@@62 $generated@@91 $generated@@92 $generated@@90) $generated@@93) ($generated@@59 $generated@@91 $generated@@93)))
 :weight 0
)))) (forall (($generated@@94 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@94)) 7))) (forall (($generated@@95 T@T) ) (! (= ($generated@@53 ($generated@@57 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@57 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@53 (type $generated@@97))))
(= (type ($generated@@58 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@58 $generated@@96 $generated@@97))
))) (= ($generated@@1 $generated@@56) 8)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= (type ($generated@@63 $generated@@99 $generated@@100 $generated@@101)) $generated@@56)
 :pattern ( ($generated@@63 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@53 (type $generated@@103))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@58 ($generated@@63 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@58 ($generated@@63 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@58 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@58 ($generated@@63 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@58 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@54) 9)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@64 $generated@@114 $generated@@115)) 10))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@65 ($generated@@64 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@64 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@66 ($generated@@64 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@64 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@66 (type $generated@@120))))
(= (type ($generated@@51 $generated@@120 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@51 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 (type $generated@@127)))
(let (($generated@@129 (type $generated@@125)))
(= (type ($generated@@67 $generated@@124 $generated@@125 $generated@@126 $generated@@127)) ($generated@@64 $generated@@129 $generated@@128))))
 :pattern ( ($generated@@67 $generated@@124 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@66 (type $generated@@130))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@51 ($generated@@67 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@131 $generated@@132) $generated@@133)))
 :weight 0
))) (and (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@51 ($generated@@67 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@51 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@51 ($generated@@67 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@51 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or true (= ($generated@@51 ($generated@@67 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@51 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Bool) ) (! (= (type ($generated@@52 $generated@@153 $generated@@154 $generated@@155 $generated@@156)) ($generated@@64 $generated@@54 $generated@@4))
 :pattern ( ($generated@@52 $generated@@153 $generated@@154 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 ($generated@@53 (type $generated@@162))))
 (=> (and (and (and (and (= (type $generated@@157) $generated@@54) (= (type $generated@@158) ($generated@@55 $generated@@54 $generated@@56))) (= (type $generated@@159) ($generated@@57 $generated@@4))) (= (type $generated@@161) $generated@@54)) (= (type $generated@@162) ($generated@@57 $generated@@163))) (= ($generated@@0 ($generated@@51 ($generated@@52 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (not (= $generated@@161 $generated@@157)) ($generated@@0 ($generated@@58 ($generated@@59 $generated@@158 $generated@@161) $generated@@159))) $generated@@160))))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@46 $generated@@164) $generated@@164)
 :pattern ( ($generated@@46 $generated@@164))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@165 Bool) ) (!  (=> (or ($generated@@47 $generated@@165) (not (= 1 $generated@@44))) true)
 :pattern ( ($generated@@45 $generated@@165))
))))
(assert  (and (and (= ($generated@@1 $generated@@168) 11) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@U) ) (! (= (type ($generated@@167 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ) (! (let (($generated@@173 (type $generated@@172)))
(= ($generated@@167 $generated@@173 ($generated@@166 $generated@@172)) $generated@@172))
 :pattern ( ($generated@@166 $generated@@172))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@174 Bool) ) (!  (=> (or ($generated@@47 $generated@@174) (not (= 1 $generated@@44))) (= ($generated@@45 $generated@@174) $generated@@174))
 :pattern ( ($generated@@45 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@166 ($generated@@46 $generated@@175)) ($generated@@46 ($generated@@166 $generated@@175)))
 :pattern ( ($generated@@166 ($generated@@46 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@176) ($generated@@64 $generated@@54 $generated@@4)) (= (type $generated@@177) $generated@@54)) (= (type $generated@@178) ($generated@@55 $generated@@54 $generated@@56))) (= (type $generated@@179) ($generated@@57 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@183  (=> (= $generated@@176 ($generated@@52 $generated@@177 $generated@@178 $generated@@179 false)) (=> (and (and (= $generated@@180 ($generated@@0 ($generated@@46 ($generated@@11 true)))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@47 $generated@@180)) (or ($generated@@45 $generated@@180) $generated@@180)))))
(let (($generated@@184  (=> (and (and ($generated@@181 $generated@@178) ($generated@@182 $generated@@178)) (and (= 2 $generated@@44) (= (ControlFlow 0 3) 2))) $generated@@183)))
$generated@@184)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
