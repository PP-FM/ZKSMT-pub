(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@62 (T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ) (= ($generated@@1 ($generated@@47 $generated@@51)) 6)) (forall (($generated@@52 T@T) ) (! (= ($generated@@48 ($generated@@47 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@47 $generated@@52))
))) (= (type $generated@@44) ($generated@@47 $generated@@4))) (= ($generated@@1 $generated@@49) 7)) (= (type $generated@@45) $generated@@49)) (= ($generated@@1 $generated@@50) 8)) (= (type $generated@@46) $generated@@50)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@1 ($generated@@56 $generated@@68 $generated@@69)) 9)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@60 ($generated@@56 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@56 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@61 ($generated@@56 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (let (($generated@@76 ($generated@@61 (type $generated@@74))))
(= (type ($generated@@59 $generated@@74 $generated@@75)) $generated@@76))
 :pattern ( ($generated@@59 $generated@@74 $generated@@75))
))) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (let (($generated@@80 (type $generated@@79)))
(let (($generated@@81 (type $generated@@78)))
(= (type ($generated@@62 $generated@@77 $generated@@78 $generated@@79)) ($generated@@56 $generated@@81 $generated@@80))))
 :pattern ( ($generated@@62 $generated@@77 $generated@@78 $generated@@79))
))) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (let (($generated@@85 ($generated@@61 (type $generated@@82))))
 (=> (= (type $generated@@84) $generated@@85) (= ($generated@@59 ($generated@@62 $generated@@82 $generated@@83 $generated@@84) $generated@@83) $generated@@84)))
 :weight 0
))) (and (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (or (= $generated@@88 $generated@@89) (= ($generated@@59 ($generated@@62 $generated@@87 $generated@@88 $generated@@86) $generated@@89) ($generated@@59 $generated@@87 $generated@@89)))
 :weight 0
)) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (or true (= ($generated@@59 ($generated@@62 $generated@@91 $generated@@92 $generated@@90) $generated@@93) ($generated@@59 $generated@@91 $generated@@93)))
 :weight 0
)))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@48 (type $generated@@95))))
(= (type ($generated@@58 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@58 $generated@@94 $generated@@95))
))) (= ($generated@@1 $generated@@57) 10)) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= (type ($generated@@63 $generated@@97 $generated@@98 $generated@@99)) $generated@@57)
 :pattern ( ($generated@@63 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@48 (type $generated@@101))))
 (=> (= (type $generated@@102) $generated@@103) (= ($generated@@58 ($generated@@63 $generated@@100 $generated@@101 $generated@@102) $generated@@101) $generated@@102)))
 :weight 0
))) (and (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@58 ($generated@@63 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@58 $generated@@105 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or true (= ($generated@@58 ($generated@@63 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@58 $generated@@109 $generated@@111)))
 :weight 0
)))) (= ($generated@@1 $generated@@55) 11)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@64 $generated@@112 $generated@@113)) 12))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@65 ($generated@@64 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@64 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@66 ($generated@@64 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@64 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@66 (type $generated@@118))))
(= (type ($generated@@53 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@53 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@67 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@64 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@67 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@66 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@53 ($generated@@67 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@53 ($generated@@67 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@53 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@53 ($generated@@67 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@53 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@53 ($generated@@67 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@53 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@54 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@64 $generated@@55 $generated@@4))
 :pattern ( ($generated@@54 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@48 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@55) (= (type $generated@@156) ($generated@@56 $generated@@55 $generated@@57))) (= (type $generated@@157) ($generated@@47 $generated@@4))) (= (type $generated@@159) $generated@@55)) (= (type $generated@@160) ($generated@@47 $generated@@161))) (= ($generated@@0 ($generated@@53 ($generated@@54 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@58 ($generated@@59 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@53 ($generated@@54 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@165) 13) (= (type $generated@@163) $generated@@165)) (= ($generated@@1 $generated@@166) 14)) (= (type $generated@@164) $generated@@166)))
(assert  (=> true (=> true ($generated@@162 $generated@@163 $generated@@164))))
(assert (= (type $generated@@167) $generated@@165))
(assert  (=> true (=> true ($generated@@162 $generated@@167 $generated@@164))))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@168 $generated@@169)) $generated@@49)
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (= ($generated@@168 $generated@@164) $generated@@45))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@50)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (= ($generated@@170 $generated@@164) $generated@@46))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U T@U) Bool)
(declare-fun $generated@@179 () Int)
(assert  (and (and (and (= (type $generated@@172) ($generated@@64 $generated@@55 $generated@@4)) (= (type $generated@@173) $generated@@55)) (= (type $generated@@174) ($generated@@56 $generated@@55 $generated@@57))) (= (type $generated@@175) $generated@@165)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@180  (=> (and (= $generated@@172 ($generated@@54 $generated@@173 $generated@@174 $generated@@44 false)) (= (ControlFlow 0 2) (- 0 1))) (or (= $generated@@175 $generated@@163) (= $generated@@175 $generated@@167)))))
(let (($generated@@181  (=> (and ($generated@@176 $generated@@174) ($generated@@177 $generated@@174)) (=> (and (and ($generated@@162 $generated@@175 $generated@@164) ($generated@@178 $generated@@175 $generated@@164 $generated@@174)) (and (= 1 $generated@@179) (= (ControlFlow 0 3) 2))) $generated@@180))))
$generated@@181)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) Bool)
(declare-fun $generated@@229 (T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@329 (T@T T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@T) T@U)
(declare-fun $generated@@435 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@U Int) T@U)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@68) (= (type $generated@@144) $generated@@68)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@72)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@140)))
(assert (= ($generated@@154 $generated@@155) $generated@@64))
(assert (= (type $generated@@157) $generated@@140))
(assert (= ($generated@@154 $generated@@157) $generated@@65))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@68)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@162) $generated@@68)) ($generated@@136 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@136 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@81 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@71 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@81) (= (type $generated@@213) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@214) ($generated@@70 $generated@@4))) (= (type $generated@@216) $generated@@81)) (= (type $generated@@217) ($generated@@70 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert  (and (= (type $generated@@219) $generated@@140) (= (type $generated@@220) $generated@@68)))
(assert  (=> true (=> true ($generated@@136 $generated@@219 $generated@@220))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@223 $generated@@224)) $generated@@140)
 :pattern ( ($generated@@221 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (and (= (type $generated@@225) $generated@@68) (= (type $generated@@226) $generated@@68)) (= (type $generated@@227) $generated@@149)) (= (type $generated@@228) $generated@@149)) (= ($generated@@136 ($generated@@221 $generated@@227 $generated@@228) ($generated@@139 $generated@@225 $generated@@226))  (and ($generated@@222 $generated@@227 $generated@@225) ($generated@@222 $generated@@228 $generated@@226))))
 :pattern ( ($generated@@136 ($generated@@221 $generated@@227 $generated@@228) ($generated@@139 $generated@@225 $generated@@226)))
)))
(assert ($generated@@136 $generated@@155 $generated@@220))
(assert ($generated@@136 $generated@@157 $generated@@220))
(assert (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@229 $generated@@230)) ($generated@@78 $generated@@155 $generated@@220 $generated@@230))
 :pattern ( ($generated@@78 $generated@@155 $generated@@220 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@229 $generated@@231)) ($generated@@78 $generated@@157 $generated@@220 $generated@@231))
 :pattern ( ($generated@@78 $generated@@157 $generated@@220 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@140) (= (type $generated@@233) $generated@@140)) (= ($generated@@146 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@146 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@140) (= (type $generated@@236) $generated@@140)) (= ($generated@@234 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@68)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@240) $generated@@68)) (= ($generated@@136 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@149) ($generated@@0 ($generated@@85 $generated@@239 $generated@@241))) ($generated@@222 $generated@@241 $generated@@240))
 :pattern ( ($generated@@85 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@136 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@245) $generated@@68)) (= ($generated@@136 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@149) ($generated@@0 ($generated@@85 $generated@@244 $generated@@246))) ($generated@@222 $generated@@246 $generated@@245))
 :pattern ( ($generated@@85 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@136 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@247 $generated@@250) $generated@@250)
 :pattern ( ($generated@@247 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) $generated@@140) (= (type $generated@@253) $generated@@140)) (and ($generated@@251 $generated@@252) ($generated@@251 $generated@@253))) (= ($generated@@234 $generated@@252 $generated@@253) true))
 :pattern ( ($generated@@234 $generated@@252 $generated@@253) ($generated@@251 $generated@@252))
 :pattern ( ($generated@@234 $generated@@252 $generated@@253) ($generated@@251 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@140) (= (type $generated@@256) $generated@@140)) (and ($generated@@254 $generated@@255) ($generated@@254 $generated@@256))) (= ($generated@@234 $generated@@255 $generated@@256) true))
 :pattern ( ($generated@@234 $generated@@255 $generated@@256) ($generated@@254 $generated@@255))
 :pattern ( ($generated@@234 $generated@@255 $generated@@256) ($generated@@254 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@68) (= (type $generated@@259) $generated@@68)) (= (type $generated@@260) $generated@@149)) (= (type $generated@@261) $generated@@149)) (= (type $generated@@262) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@229 $generated@@262)) (= ($generated@@78 ($generated@@221 $generated@@260 $generated@@261) ($generated@@139 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@78 ($generated@@221 $generated@@260 $generated@@261) ($generated@@139 $generated@@258 $generated@@259) $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@140) (= ($generated@@138 $generated@@263) (= ($generated@@154 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@140) (= ($generated@@251 $generated@@264) (= ($generated@@154 $generated@@264) $generated@@64)))
 :pattern ( ($generated@@251 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@140) (= ($generated@@254 $generated@@265) (= ($generated@@154 $generated@@265) $generated@@65)))
 :pattern ( ($generated@@254 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@140) ($generated@@138 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@149) (= (type $generated@@268) $generated@@149)) (= $generated@@266 ($generated@@221 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@138 $generated@@266))
)))
(assert  (and (and (forall (($generated@@273 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@273)) 17)) (forall (($generated@@274 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
))) (forall (($generated@@275 T@T) ) (! (= (type ($generated@@269 $generated@@275)) ($generated@@271 $generated@@275))
 :pattern ( ($generated@@269 $generated@@275))
))))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@276)) 0)
 :pattern ( ($generated@@269 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@140) ($generated@@251 $generated@@277)) (= $generated@@277 $generated@@155))
 :pattern ( ($generated@@251 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@140) ($generated@@254 $generated@@278)) (= $generated@@278 $generated@@157))
 :pattern ( ($generated@@254 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@149)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@68) (= (type $generated@@283) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@257 ($generated@@279 $generated@@281) $generated@@282 $generated@@283) ($generated@@78 $generated@@281 $generated@@282 $generated@@283)))
 :pattern ( ($generated@@257 ($generated@@279 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@285 $generated@@286)) ($generated@@80 $generated@@286 $generated@@2))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@83 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@80 $generated@@288 $generated@@2)) (and (= (= ($generated@@284 $generated@@287) 0) (= $generated@@287 ($generated@@285 $generated@@288))) (=> (not (= ($generated@@284 $generated@@287) 0)) (exists (($generated@@289 T@U) ) (!  (and (= (type $generated@@289) $generated@@288) (< 0 ($generated ($generated@@85 $generated@@287 $generated@@289))))
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
))))))
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 18)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@80 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@85 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@85 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 19)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@80 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@85 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@85 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@83 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@80 $generated@@327 $generated@@2)) (= ($generated@@159 $generated@@326) (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@327) (and (<= 0 ($generated ($generated@@85 $generated@@326 $generated@@328))) (<= ($generated ($generated@@85 $generated@@326 $generated@@328)) ($generated@@284 $generated@@326))))
 :pattern ( ($generated@@85 $generated@@326 $generated@@328))
)))))
 :pattern ( ($generated@@159 $generated@@326))
)))
(assert (forall (($generated@@330 T@T) ($generated@@331 T@U) ) (! (= (type ($generated@@329 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@329 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@149) ($generated@@222 $generated@@332 $generated@@220)) (and (= ($generated@@279 ($generated@@329 $generated@@140 $generated@@332)) $generated@@332) ($generated@@136 ($generated@@329 $generated@@140 $generated@@332) $generated@@220)))
 :pattern ( ($generated@@222 $generated@@332 $generated@@220))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@294 (type $generated@@333))))
(let (($generated@@335 ($generated@@293 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@292 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@291 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@85 ($generated@@290 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@290 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@294 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@80 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@294 (type $generated@@340))))
(let (($generated@@342 ($generated@@293 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@292 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@291 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@85 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@312 (type $generated@@344))))
(let (($generated@@346 ($generated@@311 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@310 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@309 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@85 ($generated@@308 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@308 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@312 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@80 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@312 (type $generated@@351))))
(let (($generated@@353 ($generated@@311 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@310 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@309 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@85 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@356) $generated@@68)) (= ($generated@@136 $generated@@355 ($generated@@158 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@355 $generated@@357)))) ($generated@@222 $generated@@357 $generated@@356))
 :pattern ( ($generated@@85 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@136 $generated@@355 ($generated@@158 $generated@@356)))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@359) $generated@@68)) (= (type $generated@@360) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@358 ($generated@@237 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@149) ($generated@@0 ($generated@@85 $generated@@358 $generated@@361))) ($generated@@257 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@85 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@78 $generated@@358 ($generated@@237 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@363) $generated@@68)) (= (type $generated@@364) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@362 ($generated@@242 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@149) ($generated@@0 ($generated@@85 $generated@@362 $generated@@365))) ($generated@@257 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@85 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@78 $generated@@362 ($generated@@242 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@85 ($generated@@285 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@85 ($generated@@285 $generated@@367) $generated@@366)))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@294 (type $generated@@371))))
(let (($generated@@373 ($generated@@293 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@80 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@292 $generated@@149 $generated@@149)) (= (type $generated@@375) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@85 ($generated@@290 $generated@@374) ($generated@@147 ($generated@@329 $generated@@140 $generated@@375)))) (= ($generated@@85 ($generated@@369 $generated@@374) ($generated@@147 ($generated@@329 $generated@@140 $generated@@375))) ($generated@@148 ($generated@@329 $generated@@140 $generated@@375))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@312 (type $generated@@379))))
(let (($generated@@381 ($generated@@311 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@80 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@310 $generated@@149 $generated@@149)) (= (type $generated@@383) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@85 ($generated@@308 $generated@@382) ($generated@@147 ($generated@@329 $generated@@140 $generated@@383)))) (= ($generated@@85 ($generated@@377 $generated@@382) ($generated@@147 ($generated@@329 $generated@@140 $generated@@383))) ($generated@@148 ($generated@@329 $generated@@140 $generated@@383))))))
 :pattern ( ($generated@@85 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@293 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@292 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@85 ($generated@@337 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@85 ($generated@@290 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@85 ($generated@@369 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@85 ($generated@@290 $generated@@384) $generated@@388))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@85 ($generated@@337 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@311 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@310 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@85 ($generated@@348 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@85 ($generated@@308 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@85 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@85 ($generated@@308 $generated@@389) $generated@@393))
 :pattern ( ($generated@@85 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@85 ($generated@@348 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@68)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@292 $generated@@149 $generated@@149)) (= (type $generated@@398) $generated@@68)) (= (type $generated@@399) $generated@@68)) (= (type $generated@@400) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@290 $generated@@397) $generated@@401))) (and ($generated@@257 ($generated@@85 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@257 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@85 ($generated@@290 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@78 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@68)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@310 $generated@@149 $generated@@149)) (= (type $generated@@406) $generated@@68)) (= (type $generated@@407) $generated@@68)) (= (type $generated@@408) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@308 $generated@@405) $generated@@409))) (and ($generated@@257 ($generated@@85 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@257 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@85 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@308 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@78 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@140) ($generated@@136 $generated@@410 $generated@@220)) (or ($generated@@251 $generated@@410) ($generated@@254 $generated@@410)))
 :pattern ( ($generated@@254 $generated@@410) ($generated@@136 $generated@@410 $generated@@220))
 :pattern ( ($generated@@251 $generated@@410) ($generated@@136 $generated@@410 $generated@@220))
)))
(assert (forall (($generated@@412 T@T) ) (! (= (type ($generated@@411 $generated@@412)) ($generated@@80 $generated@@412 $generated@@4))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@312 (type $generated@@413))))
(let (($generated@@415 ($generated@@311 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@310 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@309 $generated@@415 $generated@@414)) (= ($generated@@308 $generated@@413) ($generated@@411 $generated@@415))))))
 :pattern ( ($generated@@308 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@312 (type $generated@@416))))
(let (($generated@@418 ($generated@@311 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@310 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@309 $generated@@418 $generated@@417)) (= ($generated@@348 $generated@@416) ($generated@@411 $generated@@417))))))
 :pattern ( ($generated@@348 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@312 (type $generated@@419))))
(let (($generated@@421 ($generated@@311 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@310 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@309 $generated@@421 $generated@@420)) (= ($generated@@376 $generated@@419) ($generated@@411 $generated@@149))))))
 :pattern ( ($generated@@376 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@294 (type $generated@@422))))
(let (($generated@@424 ($generated@@293 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@292 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@291 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@149) (= (type $generated@@426) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@422) ($generated@@279 ($generated@@221 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@368 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@312 (type $generated@@427))))
(let (($generated@@429 ($generated@@311 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@310 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@309 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@149) (= (type $generated@@431) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@376 $generated@@427) ($generated@@279 ($generated@@221 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@376 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@149) ($generated@@222 $generated@@432 $generated@@46)) (and (= ($generated@@279 ($generated@@329 $generated@@2 $generated@@432)) $generated@@432) ($generated@@136 ($generated@@329 $generated@@2 $generated@@432) $generated@@46)))
 :pattern ( ($generated@@222 $generated@@432 $generated@@46))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@149) ($generated@@222 $generated@@433 $generated@@47)) (and (= ($generated@@279 ($generated@@329 $generated@@3 $generated@@433)) $generated@@433) ($generated@@136 ($generated@@329 $generated@@3 $generated@@433) $generated@@47)))
 :pattern ( ($generated@@222 $generated@@433 $generated@@47))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@149) ($generated@@222 $generated@@434 $generated@@44)) (and (= ($generated@@279 ($generated@@329 $generated@@4 $generated@@434)) $generated@@434) ($generated@@136 ($generated@@329 $generated@@4 $generated@@434) $generated@@44)))
 :pattern ( ($generated@@222 $generated@@434 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@435) 20))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@149) ($generated@@222 $generated@@436 $generated@@45)) (and (= ($generated@@279 ($generated@@329 $generated@@435 $generated@@436)) $generated@@436) ($generated@@136 ($generated@@329 $generated@@435 $generated@@436) $generated@@45)))
 :pattern ( ($generated@@222 $generated@@436 $generated@@45))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@68) (= ($generated@@222 ($generated@@279 $generated@@437) $generated@@438) ($generated@@136 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@222 ($generated@@279 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@83 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@80 $generated@@440 $generated@@2)) (<= 0 ($generated@@284 $generated@@439))))
 :pattern ( ($generated@@284 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@272 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@271 $generated@@442)) (<= 0 ($generated@@270 $generated@@441))))
 :pattern ( ($generated@@270 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@68)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@68) (= (type $generated@@446) $generated@@68)) (= ($generated@@443 ($generated@@394 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@394 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@68)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@68) (= (type $generated@@450) $generated@@68)) (= ($generated@@447 ($generated@@394 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@394 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@68) (= (type $generated@@452) $generated@@68)) (= ($generated@@76 ($generated@@394 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@68)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@68) (= (type $generated@@456) $generated@@68)) (= ($generated@@453 ($generated@@402 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@402 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@68)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@68) (= (type $generated@@460) $generated@@68)) (= ($generated@@457 ($generated@@402 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@402 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@68) (= (type $generated@@462) $generated@@68)) (= ($generated@@76 ($generated@@402 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@149) (= (type $generated@@464) $generated@@149)) (= ($generated@@154 ($generated@@221 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@221 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@68)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@68) (= (type $generated@@468) $generated@@68)) (= ($generated@@465 ($generated@@139 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@139 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@68)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@68)) (= ($generated@@469 ($generated@@139 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@139 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@149) (= (type $generated@@474) $generated@@149)) (= ($generated@@147 ($generated@@221 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@221 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@149) (= (type $generated@@476) $generated@@149)) (= ($generated@@148 ($generated@@221 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@221 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@477 $generated@@479))
)) (forall (($generated@@480 T@U) ($generated@@481 Int) ) (! (let (($generated@@482 ($generated@@272 (type $generated@@480))))
(= (type ($generated@@478 $generated@@480 $generated@@481)) $generated@@482))
 :pattern ( ($generated@@478 $generated@@480 $generated@@481))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@271 $generated@@149)) (= (type $generated@@484) $generated@@68)) (= (type $generated@@485) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@483 ($generated@@477 $generated@@484) $generated@@485) (forall (($generated@@486 Int) ) (!  (=> (and (<= 0 $generated@@486) (< $generated@@486 ($generated@@270 $generated@@483))) ($generated@@257 ($generated@@478 $generated@@483 $generated@@486) $generated@@484 $generated@@485))
 :pattern ( ($generated@@478 $generated@@483 $generated@@486))
))))
 :pattern ( ($generated@@78 $generated@@483 ($generated@@477 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ) (! (= ($generated@@487 ($generated@@79 $generated@@488)) $generated@@488)
 :pattern ( ($generated@@79 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@68) (= ($generated@@489 ($generated@@237 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@237 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@68) (= ($generated@@76 ($generated@@237 $generated@@492)) $generated@@54))
 :pattern ( ($generated@@237 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@68) (= ($generated@@493 ($generated@@242 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@242 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@76 ($generated@@242 $generated@@496)) $generated@@55))
 :pattern ( ($generated@@242 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@68) (= ($generated@@497 ($generated@@158 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@158 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@68) (= ($generated@@76 ($generated@@158 $generated@@500)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@68) (= ($generated@@501 ($generated@@477 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@477 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@68) (= ($generated@@76 ($generated@@477 $generated@@504)) $generated@@57))
 :pattern ( ($generated@@477 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@329 $generated@@506 ($generated@@279 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@279 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@292 $generated@@149 $generated@@149)) (= (type $generated@@508) $generated@@68)) (= (type $generated@@509) $generated@@68)) (= ($generated@@136 $generated@@507 ($generated@@394 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@290 $generated@@507) $generated@@510))) (and ($generated@@222 ($generated@@85 ($generated@@369 $generated@@507) $generated@@510) $generated@@509) ($generated@@222 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@85 ($generated@@369 $generated@@507) $generated@@510))
 :pattern ( ($generated@@85 ($generated@@290 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@136 $generated@@507 ($generated@@394 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@310 $generated@@149 $generated@@149)) (= (type $generated@@512) $generated@@68)) (= (type $generated@@513) $generated@@68)) (= ($generated@@136 $generated@@511 ($generated@@402 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@308 $generated@@511) $generated@@514))) (and ($generated@@222 ($generated@@85 ($generated@@377 $generated@@511) $generated@@514) $generated@@513) ($generated@@222 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@85 ($generated@@377 $generated@@511) $generated@@514))
 :pattern ( ($generated@@85 ($generated@@308 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@136 $generated@@511 ($generated@@402 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@149) (= (type $generated@@518) $generated@@149)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@221 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@221 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@149) (= (type $generated@@520) $generated@@149)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@221 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@221 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@149) (= (type $generated@@522) $generated@@68)) (= (type $generated@@523) $generated@@68)) ($generated@@222 $generated@@521 ($generated@@394 $generated@@522 $generated@@523))) (and (= ($generated@@279 ($generated@@329 ($generated@@292 $generated@@149 $generated@@149) $generated@@521)) $generated@@521) ($generated@@136 ($generated@@329 ($generated@@292 $generated@@149 $generated@@149) $generated@@521) ($generated@@394 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@222 $generated@@521 ($generated@@394 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@149) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) $generated@@68)) ($generated@@222 $generated@@524 ($generated@@402 $generated@@525 $generated@@526))) (and (= ($generated@@279 ($generated@@329 ($generated@@310 $generated@@149 $generated@@149) $generated@@524)) $generated@@524) ($generated@@136 ($generated@@329 ($generated@@310 $generated@@149 $generated@@149) $generated@@524) ($generated@@402 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@222 $generated@@524 ($generated@@402 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= (type $generated@@529) $generated@@149)) ($generated@@222 $generated@@529 ($generated@@139 $generated@@527 $generated@@528))) (and (= ($generated@@279 ($generated@@329 $generated@@140 $generated@@529)) $generated@@529) ($generated@@136 ($generated@@329 $generated@@140 $generated@@529) ($generated@@139 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@222 $generated@@529 ($generated@@139 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@85 ($generated@@411 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@85 ($generated@@411 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@73)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@68) (= (type $generated@@535) $generated@@68)) (and (= ($generated@@76 ($generated@@139 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@139 $generated@@534 $generated@@535)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@140) (= ($generated@@515 ($generated@@279 $generated@@536)) ($generated@@516 $generated@@536)))
 :pattern ( ($generated@@515 ($generated@@279 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@149) ($generated@@222 $generated@@537 ($generated@@79 0))) (and (= ($generated@@279 ($generated@@329 $generated@@2 $generated@@537)) $generated@@537) ($generated@@136 ($generated@@329 ($generated@@80 $generated@@149 $generated@@4) $generated@@537) ($generated@@79 0))))
 :pattern ( ($generated@@222 $generated@@537 ($generated@@79 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@149) (= (type $generated@@539) $generated@@68)) ($generated@@222 $generated@@538 ($generated@@237 $generated@@539))) (and (= ($generated@@279 ($generated@@329 ($generated@@80 $generated@@149 $generated@@4) $generated@@538)) $generated@@538) ($generated@@136 ($generated@@329 ($generated@@80 $generated@@149 $generated@@4) $generated@@538) ($generated@@237 $generated@@539))))
 :pattern ( ($generated@@222 $generated@@538 ($generated@@237 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@149) (= (type $generated@@541) $generated@@68)) ($generated@@222 $generated@@540 ($generated@@242 $generated@@541))) (and (= ($generated@@279 ($generated@@329 ($generated@@80 $generated@@149 $generated@@4) $generated@@540)) $generated@@540) ($generated@@136 ($generated@@329 ($generated@@80 $generated@@149 $generated@@4) $generated@@540) ($generated@@242 $generated@@541))))
 :pattern ( ($generated@@222 $generated@@540 ($generated@@242 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@149) (= (type $generated@@543) $generated@@68)) ($generated@@222 $generated@@542 ($generated@@158 $generated@@543))) (and (= ($generated@@279 ($generated@@329 ($generated@@80 $generated@@149 $generated@@2) $generated@@542)) $generated@@542) ($generated@@136 ($generated@@329 ($generated@@80 $generated@@149 $generated@@2) $generated@@542) ($generated@@158 $generated@@543))))
 :pattern ( ($generated@@222 $generated@@542 ($generated@@158 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@149) (= (type $generated@@545) $generated@@68)) ($generated@@222 $generated@@544 ($generated@@477 $generated@@545))) (and (= ($generated@@279 ($generated@@329 ($generated@@271 $generated@@149) $generated@@544)) $generated@@544) ($generated@@136 ($generated@@329 ($generated@@271 $generated@@149) $generated@@544) ($generated@@477 $generated@@545))))
 :pattern ( ($generated@@222 $generated@@544 ($generated@@477 $generated@@545)))
)))
(assert  (=> true (=> true (= $generated@@219 ($generated@@247 $generated@@155)))))
(assert  (=> true (=> true (= $generated@@219 ($generated@@247 $generated@@155)))))
(assert (= ($generated@@76 $generated@@220) $generated@@63))
(assert (= ($generated@@532 $generated@@220) $generated@@67))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@546 ($generated@@158 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@546 $generated@@549)))) ($generated@@257 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@85 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@78 $generated@@546 ($generated@@158 $generated@@547) $generated@@548))
)))
(assert (= $generated@@155 ($generated@@247 $generated@@155)))
(assert (= $generated@@157 ($generated@@247 $generated@@157)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@140) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@229 $generated@@552) (and ($generated@@138 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@68) ($generated@@78 $generated@@550 ($generated@@139 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@78 $generated@@550 ($generated@@139 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@257 ($generated@@147 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@257 ($generated@@147 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@140) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@229 $generated@@556) (and ($generated@@138 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@68) ($generated@@78 $generated@@554 ($generated@@139 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@78 $generated@@554 ($generated@@139 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@257 ($generated@@148 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@257 ($generated@@148 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@149) (= (type $generated@@559) $generated@@149)) (= ($generated@@221 ($generated@@247 $generated@@558) ($generated@@247 $generated@@559)) ($generated@@247 ($generated@@221 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@221 ($generated@@247 $generated@@558) ($generated@@247 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@279 ($generated@@247 $generated@@560)) ($generated@@247 ($generated@@279 $generated@@560)))
 :pattern ( ($generated@@279 ($generated@@247 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@272 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@271 $generated@@562)) (= ($generated@@270 $generated@@561) 0)) (= $generated@@561 ($generated@@269 $generated@@562))))
 :pattern ( ($generated@@270 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@80 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@284 ($generated@@86 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@284 $generated@@563) ($generated ($generated@@85 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@284 ($generated@@86 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@568) $generated@@2)) ($generated@@78 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@78 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@570) $generated@@3)) ($generated@@78 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@78 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@572) $generated@@4)) ($generated@@78 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@78 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@574) $generated@@435)) ($generated@@78 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@78 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@576) $generated@@149)) ($generated@@78 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@78 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@271 $generated@@149)) (= (type $generated@@578) $generated@@68)) (= ($generated@@136 $generated@@577 ($generated@@477 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@270 $generated@@577))) ($generated@@222 ($generated@@478 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@478 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@136 $generated@@577 ($generated@@477 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@271 $generated@@149)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@270 $generated@@581))) (< ($generated@@516 ($generated@@329 $generated@@140 ($generated@@478 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@516 ($generated@@329 $generated@@140 ($generated@@478 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@292 $generated@@149 $generated@@149)) (= (type $generated@@584) $generated@@68)) (= (type $generated@@585) $generated@@68)) ($generated@@136 $generated@@583 ($generated@@394 $generated@@584 $generated@@585))) (and (and ($generated@@136 ($generated@@290 $generated@@583) ($generated@@237 $generated@@584)) ($generated@@136 ($generated@@337 $generated@@583) ($generated@@237 $generated@@585))) ($generated@@136 ($generated@@368 $generated@@583) ($generated@@237 ($generated@@139 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@136 $generated@@583 ($generated@@394 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@310 $generated@@149 $generated@@149)) (= (type $generated@@587) $generated@@68)) (= (type $generated@@588) $generated@@68)) ($generated@@136 $generated@@586 ($generated@@402 $generated@@587 $generated@@588))) (and (and ($generated@@136 ($generated@@308 $generated@@586) ($generated@@242 $generated@@587)) ($generated@@136 ($generated@@348 $generated@@586) ($generated@@242 $generated@@588))) ($generated@@136 ($generated@@376 $generated@@586) ($generated@@242 ($generated@@139 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@136 $generated@@586 ($generated@@402 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@136 $generated@@589 $generated@@46))
 :pattern ( ($generated@@136 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@136 $generated@@590 $generated@@47))
 :pattern ( ($generated@@136 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@136 $generated@@591 $generated@@44))
 :pattern ( ($generated@@136 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@435) ($generated@@136 $generated@@592 $generated@@45))
 :pattern ( ($generated@@136 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@149) ($generated@@136 $generated@@593 $generated@@48))
 :pattern ( ($generated@@136 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(declare-fun $generated@@598 () Int)
(assert  (and (and (= (type $generated@@594) ($generated@@165 $generated@@81 $generated@@4)) (= (type $generated@@595) $generated@@81)) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@599  (=> (and (= $generated@@594 ($generated@@164 $generated@@595 $generated@@596 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@234 $generated@@155 $generated@@219))))
(let (($generated@@600  (=> (and (and ($generated@@229 $generated@@596) ($generated@@597 $generated@@596)) (and (= 0 $generated@@598) (= (ControlFlow 0 3) 2))) $generated@@599)))
$generated@@600)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and (= (type $generated@@138) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@137 $generated@@138 $generated@@139)) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@82) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@138 $generated@@140) $generated@@60))) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@88 ($generated@@86 $generated@@139 $generated@@140) $generated@@60))
)))
 :pattern ( ($generated@@137 $generated@@138 $generated@@139))
)))
(assert  (and (= (type $generated@@141) $generated@@69) (= (type $generated@@142) $generated@@82)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@82) (= (type $generated@@144) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@143 $generated@@141 $generated@@144)  (or (= $generated@@143 $generated@@142) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@143 $generated@@141 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@80 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 14) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@69)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@69) (= (type $generated@@153) $generated@@69)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@69)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@81 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@69)) ($generated@@145 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@145 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@168 $generated@@169)) $generated@@69)
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@82) (= ($generated@@145 $generated@@170 $generated@@141)  (or (= $generated@@170 $generated@@142) (= ($generated@@168 $generated@@170) $generated@@141))))
 :pattern ( ($generated@@145 $generated@@170 $generated@@141))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@82 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@72 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@82) (= (type $generated@@221) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@222) ($generated@@71 $generated@@4))) (= (type $generated@@224) $generated@@82)) (= (type $generated@@225) ($generated@@71 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert  (and (= (type $generated@@228) $generated@@158) (= (type $generated@@229) $generated@@69)))
(assert  (=> true (=> true ($generated@@227 $generated@@228 $generated@@229))))
(assert (= (type $generated@@230) $generated@@69))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@82) (= (type $generated@@232) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@231 $generated@@230 $generated@@232) ($generated@@79 $generated@@231 $generated@@141 $generated@@232)))
 :pattern ( ($generated@@79 $generated@@231 $generated@@230 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@233 $generated@@234 $generated@@235)) $generated@@149)
 :pattern ( ($generated@@233 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@69) (= (type $generated@@237) $generated@@69)) (= (type $generated@@238) $generated@@158)) (= (type $generated@@239) $generated@@158)) (= ($generated@@145 ($generated@@233 $generated@@238 $generated@@239) ($generated@@148 $generated@@236 $generated@@237))  (and ($generated@@227 $generated@@238 $generated@@236) ($generated@@227 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@145 ($generated@@233 $generated@@238 $generated@@239) ($generated@@148 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@149) (= (type $generated@@241) $generated@@149)) (= ($generated@@155 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@155 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@69)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@81 $generated@@158 $generated@@4)) (= (type $generated@@245) $generated@@69)) (= ($generated@@145 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@158) ($generated@@0 ($generated@@86 $generated@@244 $generated@@246))) ($generated@@227 $generated@@246 $generated@@245))
 :pattern ( ($generated@@86 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@145 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@69)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@81 $generated@@158 $generated@@4)) (= (type $generated@@250) $generated@@69)) (= ($generated@@145 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@158) ($generated@@0 ($generated@@86 $generated@@249 $generated@@251))) ($generated@@227 $generated@@251 $generated@@250))
 :pattern ( ($generated@@86 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@145 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@252 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= ($generated@@252 $generated@@255) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@69) (= (type $generated@@259) $generated@@69)) (= (type $generated@@260) $generated@@158)) (= (type $generated@@261) $generated@@158)) (= (type $generated@@262) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@256 $generated@@262)) (= ($generated@@79 ($generated@@233 $generated@@260 $generated@@261) ($generated@@148 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@79 ($generated@@233 $generated@@260 $generated@@261) ($generated@@148 $generated@@258 $generated@@259) $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@73)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@149) (= ($generated@@147 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@265))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@266 $generated@@268)) $generated@@158)
 :pattern ( ($generated@@266 $generated@@268))
)))
(assert  (=> true (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@82) (or ($generated@@267 $generated@@269) (and (not (= $generated@@269 $generated@@142)) ($generated@@145 $generated@@269 $generated@@230)))) ($generated@@227 ($generated@@266 $generated@@269) $generated@@229))
 :pattern ( ($generated@@266 $generated@@269))
))))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@149) ($generated@@147 $generated@@270)) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (and (and (= (type $generated@@271) $generated@@158) (= (type $generated@@272) $generated@@158)) (= $generated@@270 ($generated@@233 $generated@@271 $generated@@272)))
 :no-pattern (type $generated@@271)
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
)))
 :pattern ( ($generated@@147 $generated@@270))
)))
(assert  (and (and (forall (($generated@@277 T@T) ) (= ($generated@@1 ($generated@@275 $generated@@277)) 17)) (forall (($generated@@278 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@278)) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
))) (forall (($generated@@279 T@T) ) (! (= (type ($generated@@273 $generated@@279)) ($generated@@275 $generated@@279))
 :pattern ( ($generated@@273 $generated@@279))
))))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@280)) 0)
 :pattern ( ($generated@@273 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@158)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@69) (= (type $generated@@285) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@257 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@79 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@257 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@286) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@287) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@288) $generated@@158)) (= (type $generated@@289) $generated@@69)) ($generated@@137 $generated@@286 $generated@@287)) ($generated@@257 $generated@@288 $generated@@289 $generated@@286)) ($generated@@257 $generated@@288 $generated@@289 $generated@@287))
 :pattern ( ($generated@@137 $generated@@286 $generated@@287) ($generated@@257 $generated@@288 $generated@@289 $generated@@286))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@290) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@291) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@293) $generated@@69)) ($generated@@137 $generated@@290 $generated@@291)) ($generated@@79 $generated@@292 $generated@@293 $generated@@290)) ($generated@@79 $generated@@292 $generated@@293 $generated@@291))
 :pattern ( ($generated@@137 $generated@@290 $generated@@291) ($generated@@79 $generated@@292 $generated@@293 $generated@@290))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@81 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@84 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@81 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@86 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@81 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@86 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@86 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@81 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@86 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@86 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@84 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@81 $generated@@337 $generated@@2)) (= ($generated@@164 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@86 $generated@@336 $generated@@338))) (<= ($generated ($generated@@86 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@86 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@164 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@158) ($generated@@227 $generated@@342 $generated@@230)) (and (= ($generated@@281 ($generated@@339 $generated@@82 $generated@@342)) $generated@@342) ($generated@@145 ($generated@@339 $generated@@82 $generated@@342) $generated@@230)))
 :pattern ( ($generated@@227 $generated@@342 $generated@@230))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@158) ($generated@@227 $generated@@343 $generated@@141)) (and (= ($generated@@281 ($generated@@339 $generated@@82 $generated@@343)) $generated@@343) ($generated@@145 ($generated@@339 $generated@@82 $generated@@343) $generated@@141)))
 :pattern ( ($generated@@227 $generated@@343 $generated@@141))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@82) (= ($generated@@145 $generated@@344 $generated@@230)  (and ($generated@@145 $generated@@344 $generated@@141) (not (= $generated@@344 $generated@@142)))))
 :pattern ( ($generated@@145 $generated@@344 $generated@@230))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@304 (type $generated@@345))))
(let (($generated@@347 ($generated@@303 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@302 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@301 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@86 ($generated@@300 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@300 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@304 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@81 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@304 (type $generated@@352))))
(let (($generated@@354 ($generated@@303 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@302 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@301 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@86 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@322 (type $generated@@356))))
(let (($generated@@358 ($generated@@321 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@320 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@319 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@86 ($generated@@318 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@318 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@322 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@81 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@322 (type $generated@@363))))
(let (($generated@@365 ($generated@@321 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@320 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@319 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@86 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@81 $generated@@158 $generated@@2)) (= (type $generated@@368) $generated@@69)) (= ($generated@@145 $generated@@367 ($generated@@163 $generated@@368)) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@158) (< 0 ($generated ($generated@@86 $generated@@367 $generated@@369)))) ($generated@@227 $generated@@369 $generated@@368))
 :pattern ( ($generated@@86 $generated@@367 $generated@@369))
))))
 :pattern ( ($generated@@145 $generated@@367 ($generated@@163 $generated@@368)))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@81 $generated@@158 $generated@@4)) (= (type $generated@@371) $generated@@69)) (= (type $generated@@372) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@370 ($generated@@242 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@158) ($generated@@0 ($generated@@86 $generated@@370 $generated@@373))) ($generated@@257 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@86 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@79 $generated@@370 ($generated@@242 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@81 $generated@@158 $generated@@4)) (= (type $generated@@375) $generated@@69)) (= (type $generated@@376) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@374 ($generated@@247 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@158) ($generated@@0 ($generated@@86 $generated@@374 $generated@@377))) ($generated@@257 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@86 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@79 $generated@@374 ($generated@@247 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@86 ($generated@@295 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@86 ($generated@@295 $generated@@379) $generated@@378)))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@81 $generated@@158 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@304 (type $generated@@383))))
(let (($generated@@385 ($generated@@303 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@81 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@302 $generated@@158 $generated@@158)) (= (type $generated@@387) $generated@@158)) (= ($generated@@0 ($generated@@86 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@86 ($generated@@300 $generated@@386) ($generated@@156 ($generated@@339 $generated@@149 $generated@@387)))) (= ($generated@@86 ($generated@@381 $generated@@386) ($generated@@156 ($generated@@339 $generated@@149 $generated@@387))) ($generated@@157 ($generated@@339 $generated@@149 $generated@@387))))))
 :pattern ( ($generated@@86 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@81 $generated@@158 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@322 (type $generated@@391))))
(let (($generated@@393 ($generated@@321 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@81 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@320 $generated@@158 $generated@@158)) (= (type $generated@@395) $generated@@158)) (= ($generated@@0 ($generated@@86 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@86 ($generated@@318 $generated@@394) ($generated@@156 ($generated@@339 $generated@@149 $generated@@395)))) (= ($generated@@86 ($generated@@389 $generated@@394) ($generated@@156 ($generated@@339 $generated@@149 $generated@@395))) ($generated@@157 ($generated@@339 $generated@@149 $generated@@395))))))
 :pattern ( ($generated@@86 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@303 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@302 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@86 ($generated@@349 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@86 ($generated@@300 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@86 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@86 ($generated@@300 $generated@@396) $generated@@400))
 :pattern ( ($generated@@86 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@86 ($generated@@349 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@321 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@320 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@86 ($generated@@360 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@86 ($generated@@318 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@86 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@86 ($generated@@318 $generated@@401) $generated@@405))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@86 ($generated@@360 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@69)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@302 $generated@@158 $generated@@158)) (= (type $generated@@410) $generated@@69)) (= (type $generated@@411) $generated@@69)) (= (type $generated@@412) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@158) ($generated@@0 ($generated@@86 ($generated@@300 $generated@@409) $generated@@413))) (and ($generated@@257 ($generated@@86 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@257 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@86 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@86 ($generated@@300 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@79 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@69)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@320 $generated@@158 $generated@@158)) (= (type $generated@@418) $generated@@69)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@158) ($generated@@0 ($generated@@86 ($generated@@318 $generated@@417) $generated@@421))) (and ($generated@@257 ($generated@@86 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@257 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@86 ($generated@@318 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@79 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@422) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@423) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@424) ($generated@@81 $generated@@82 $generated@@83))) (not (= $generated@@422 $generated@@424))) (and ($generated@@137 $generated@@422 $generated@@423) ($generated@@137 $generated@@423 $generated@@424))) ($generated@@137 $generated@@422 $generated@@424))
 :pattern ( ($generated@@137 $generated@@422 $generated@@423) ($generated@@137 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@81 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@322 (type $generated@@427))))
(let (($generated@@429 ($generated@@321 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@320 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@319 $generated@@429 $generated@@428)) (= ($generated@@318 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@318 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@322 (type $generated@@430))))
(let (($generated@@432 ($generated@@321 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@320 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@319 $generated@@432 $generated@@431)) (= ($generated@@360 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@360 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@322 (type $generated@@433))))
(let (($generated@@435 ($generated@@321 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@320 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@319 $generated@@435 $generated@@434)) (= ($generated@@388 $generated@@433) ($generated@@425 $generated@@158))))))
 :pattern ( ($generated@@388 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@304 (type $generated@@436))))
(let (($generated@@438 ($generated@@303 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@302 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@301 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@158) (= (type $generated@@440) $generated@@158)) ($generated@@0 ($generated@@86 ($generated@@380 $generated@@436) ($generated@@281 ($generated@@233 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@380 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@322 (type $generated@@441))))
(let (($generated@@443 ($generated@@321 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@320 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@319 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@158) (= (type $generated@@445) $generated@@158)) ($generated@@0 ($generated@@86 ($generated@@388 $generated@@441) ($generated@@281 ($generated@@233 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@388 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@158) ($generated@@227 $generated@@446 $generated@@46)) (and (= ($generated@@281 ($generated@@339 $generated@@2 $generated@@446)) $generated@@446) ($generated@@145 ($generated@@339 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@227 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@158) ($generated@@227 $generated@@447 $generated@@47)) (and (= ($generated@@281 ($generated@@339 $generated@@3 $generated@@447)) $generated@@447) ($generated@@145 ($generated@@339 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@227 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@158) ($generated@@227 $generated@@448 $generated@@44)) (and (= ($generated@@281 ($generated@@339 $generated@@4 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@339 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@227 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@158) ($generated@@227 $generated@@450 $generated@@45)) (and (= ($generated@@281 ($generated@@339 $generated@@449 $generated@@450)) $generated@@450) ($generated@@145 ($generated@@339 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@227 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@69) (= ($generated@@227 ($generated@@281 $generated@@451) $generated@@452) ($generated@@145 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@227 ($generated@@281 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@84 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@81 $generated@@454 $generated@@2)) (<= 0 ($generated@@294 $generated@@453))))
 :pattern ( ($generated@@294 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@276 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@275 $generated@@456)) (<= 0 ($generated@@274 $generated@@455))))
 :pattern ( ($generated@@274 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@69)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@69) (= (type $generated@@460) $generated@@69)) (= ($generated@@457 ($generated@@406 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@406 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@69)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@461 ($generated@@406 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@406 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@69) (= (type $generated@@466) $generated@@69)) (= ($generated@@77 ($generated@@406 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@69)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@69) (= (type $generated@@470) $generated@@69)) (= ($generated@@467 ($generated@@414 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@69)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@69) (= (type $generated@@474) $generated@@69)) (= ($generated@@471 ($generated@@414 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@69) (= (type $generated@@476) $generated@@69)) (= ($generated@@77 ($generated@@414 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@158) (= (type $generated@@478) $generated@@158)) (= ($generated@@263 ($generated@@233 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@148 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@148 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@483 ($generated@@148 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@148 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@158) (= (type $generated@@488) $generated@@158)) (= ($generated@@156 ($generated@@233 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@233 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@158) (= (type $generated@@490) $generated@@158)) (= ($generated@@157 ($generated@@233 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@233 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@276 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@275 $generated@@158)) (= (type $generated@@498) $generated@@69)) (= (type $generated@@499) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@274 $generated@@497))) ($generated@@257 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@79 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@80 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@80 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@69)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@69) (= ($generated@@503 ($generated@@242 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@242 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@69) (= ($generated@@77 ($generated@@242 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@69) (= ($generated@@507 ($generated@@247 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@247 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@69) (= ($generated@@77 ($generated@@247 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@69) (= ($generated@@511 ($generated@@163 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@163 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@77 ($generated@@163 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@77 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@339 $generated@@520 ($generated@@281 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@281 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@302 $generated@@158 $generated@@158)) (= (type $generated@@522) $generated@@69)) (= (type $generated@@523) $generated@@69)) (= ($generated@@145 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@158) ($generated@@0 ($generated@@86 ($generated@@300 $generated@@521) $generated@@524))) (and ($generated@@227 ($generated@@86 ($generated@@381 $generated@@521) $generated@@524) $generated@@523) ($generated@@227 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@86 ($generated@@381 $generated@@521) $generated@@524))
 :pattern ( ($generated@@86 ($generated@@300 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@145 $generated@@521 ($generated@@406 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@320 $generated@@158 $generated@@158)) (= (type $generated@@526) $generated@@69)) (= (type $generated@@527) $generated@@69)) (= ($generated@@145 $generated@@525 ($generated@@414 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@158) ($generated@@0 ($generated@@86 ($generated@@318 $generated@@525) $generated@@528))) (and ($generated@@227 ($generated@@86 ($generated@@389 $generated@@525) $generated@@528) $generated@@527) ($generated@@227 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@525) $generated@@528))
 :pattern ( ($generated@@86 ($generated@@318 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@145 $generated@@525 ($generated@@414 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@158) (= (type $generated@@532) $generated@@158)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@233 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@233 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@158) (= (type $generated@@534) $generated@@158)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@233 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@233 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@158) (= (type $generated@@536) $generated@@69)) (= (type $generated@@537) $generated@@69)) ($generated@@227 $generated@@535 ($generated@@406 $generated@@536 $generated@@537))) (and (= ($generated@@281 ($generated@@339 ($generated@@302 $generated@@158 $generated@@158) $generated@@535)) $generated@@535) ($generated@@145 ($generated@@339 ($generated@@302 $generated@@158 $generated@@158) $generated@@535) ($generated@@406 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@227 $generated@@535 ($generated@@406 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@158) (= (type $generated@@539) $generated@@69)) (= (type $generated@@540) $generated@@69)) ($generated@@227 $generated@@538 ($generated@@414 $generated@@539 $generated@@540))) (and (= ($generated@@281 ($generated@@339 ($generated@@320 $generated@@158 $generated@@158) $generated@@538)) $generated@@538) ($generated@@145 ($generated@@339 ($generated@@320 $generated@@158 $generated@@158) $generated@@538) ($generated@@414 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@227 $generated@@538 ($generated@@414 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@69) (= (type $generated@@542) $generated@@69)) (= (type $generated@@543) $generated@@158)) ($generated@@227 $generated@@543 ($generated@@148 $generated@@541 $generated@@542))) (and (= ($generated@@281 ($generated@@339 $generated@@149 $generated@@543)) $generated@@543) ($generated@@145 ($generated@@339 $generated@@149 $generated@@543) ($generated@@148 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@227 $generated@@543 ($generated@@148 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@86 ($generated@@425 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@86 ($generated@@425 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@74)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@69) (= (type $generated@@549) $generated@@69)) (and (= ($generated@@77 ($generated@@148 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@546 ($generated@@148 $generated@@548 $generated@@549)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@149) (= ($generated@@529 ($generated@@281 $generated@@550)) ($generated@@530 $generated@@550)))
 :pattern ( ($generated@@529 ($generated@@281 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@158) ($generated@@227 $generated@@551 ($generated@@80 0))) (and (= ($generated@@281 ($generated@@339 $generated@@2 $generated@@551)) $generated@@551) ($generated@@145 ($generated@@339 ($generated@@81 $generated@@158 $generated@@4) $generated@@551) ($generated@@80 0))))
 :pattern ( ($generated@@227 $generated@@551 ($generated@@80 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@158) (= (type $generated@@553) $generated@@69)) ($generated@@227 $generated@@552 ($generated@@242 $generated@@553))) (and (= ($generated@@281 ($generated@@339 ($generated@@81 $generated@@158 $generated@@4) $generated@@552)) $generated@@552) ($generated@@145 ($generated@@339 ($generated@@81 $generated@@158 $generated@@4) $generated@@552) ($generated@@242 $generated@@553))))
 :pattern ( ($generated@@227 $generated@@552 ($generated@@242 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@158) (= (type $generated@@555) $generated@@69)) ($generated@@227 $generated@@554 ($generated@@247 $generated@@555))) (and (= ($generated@@281 ($generated@@339 ($generated@@81 $generated@@158 $generated@@4) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@339 ($generated@@81 $generated@@158 $generated@@4) $generated@@554) ($generated@@247 $generated@@555))))
 :pattern ( ($generated@@227 $generated@@554 ($generated@@247 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@158) (= (type $generated@@557) $generated@@69)) ($generated@@227 $generated@@556 ($generated@@163 $generated@@557))) (and (= ($generated@@281 ($generated@@339 ($generated@@81 $generated@@158 $generated@@2) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@339 ($generated@@81 $generated@@158 $generated@@2) $generated@@556) ($generated@@163 $generated@@557))))
 :pattern ( ($generated@@227 $generated@@556 ($generated@@163 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@158) (= (type $generated@@559) $generated@@69)) ($generated@@227 $generated@@558 ($generated@@491 $generated@@559))) (and (= ($generated@@281 ($generated@@339 ($generated@@275 $generated@@158) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@339 ($generated@@275 $generated@@158) $generated@@558) ($generated@@491 $generated@@559))))
 :pattern ( ($generated@@227 $generated@@558 ($generated@@491 $generated@@559)))
)))
(assert (= ($generated@@77 $generated@@229) $generated@@63))
(assert (= ($generated@@546 $generated@@229) $generated@@67))
(assert (= ($generated@@77 $generated@@230) $generated@@64))
(assert (= ($generated@@546 $generated@@230) $generated@@68))
(assert (= ($generated@@77 $generated@@141) $generated@@65))
(assert (= ($generated@@546 $generated@@141) $generated@@68))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@81 $generated@@158 $generated@@2)) (= (type $generated@@561) $generated@@69)) (= (type $generated@@562) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@560 ($generated@@163 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@158) (< 0 ($generated ($generated@@86 $generated@@560 $generated@@563)))) ($generated@@257 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@86 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@79 $generated@@560 ($generated@@163 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@149) (= (type $generated@@565) $generated@@69)) (= (type $generated@@566) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@256 $generated@@566) (and ($generated@@147 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@69) ($generated@@79 $generated@@564 ($generated@@148 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@79 $generated@@564 ($generated@@148 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@257 ($generated@@156 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@257 ($generated@@156 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@149) (= (type $generated@@569) $generated@@69)) (= (type $generated@@570) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@256 $generated@@570) (and ($generated@@147 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@69) ($generated@@79 $generated@@568 ($generated@@148 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@79 $generated@@568 ($generated@@148 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@257 ($generated@@157 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@257 ($generated@@157 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@158) (= (type $generated@@573) $generated@@158)) (= ($generated@@233 ($generated@@252 $generated@@572) ($generated@@252 $generated@@573)) ($generated@@252 ($generated@@233 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@233 ($generated@@252 $generated@@572) ($generated@@252 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@281 ($generated@@252 $generated@@574)) ($generated@@252 ($generated@@281 $generated@@574)))
 :pattern ( ($generated@@281 ($generated@@252 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@276 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@275 $generated@@576)) (= ($generated@@274 $generated@@575) 0)) (= $generated@@575 ($generated@@273 $generated@@576))))
 :pattern ( ($generated@@274 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@81 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@294 ($generated@@87 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@294 $generated@@577) ($generated ($generated@@86 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@294 ($generated@@87 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@582) $generated@@2)) ($generated@@79 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@79 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@584) $generated@@3)) ($generated@@79 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@79 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@586) $generated@@4)) ($generated@@79 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@79 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@588) $generated@@449)) ($generated@@79 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@79 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@590) $generated@@158)) ($generated@@79 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@79 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@275 $generated@@158)) (= (type $generated@@592) $generated@@69)) (= ($generated@@145 $generated@@591 ($generated@@491 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@274 $generated@@591))) ($generated@@227 ($generated@@492 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@492 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@145 $generated@@591 ($generated@@491 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@275 $generated@@158)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@274 $generated@@595))) (< ($generated@@530 ($generated@@339 $generated@@149 ($generated@@492 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@530 ($generated@@339 $generated@@149 ($generated@@492 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@302 $generated@@158 $generated@@158)) (= (type $generated@@598) $generated@@69)) (= (type $generated@@599) $generated@@69)) ($generated@@145 $generated@@597 ($generated@@406 $generated@@598 $generated@@599))) (and (and ($generated@@145 ($generated@@300 $generated@@597) ($generated@@242 $generated@@598)) ($generated@@145 ($generated@@349 $generated@@597) ($generated@@242 $generated@@599))) ($generated@@145 ($generated@@380 $generated@@597) ($generated@@242 ($generated@@148 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@145 $generated@@597 ($generated@@406 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@320 $generated@@158 $generated@@158)) (= (type $generated@@601) $generated@@69)) (= (type $generated@@602) $generated@@69)) ($generated@@145 $generated@@600 ($generated@@414 $generated@@601 $generated@@602))) (and (and ($generated@@145 ($generated@@318 $generated@@600) ($generated@@247 $generated@@601)) ($generated@@145 ($generated@@360 $generated@@600) ($generated@@247 $generated@@602))) ($generated@@145 ($generated@@388 $generated@@600) ($generated@@247 ($generated@@148 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@145 $generated@@600 ($generated@@414 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@145 $generated@@603 $generated@@46))
 :pattern ( ($generated@@145 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@145 $generated@@604 $generated@@47))
 :pattern ( ($generated@@145 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@145 $generated@@605 $generated@@44))
 :pattern ( ($generated@@145 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@449) ($generated@@145 $generated@@606 $generated@@45))
 :pattern ( ($generated@@145 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@158) ($generated@@145 $generated@@607 $generated@@48))
 :pattern ( ($generated@@145 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 (T@U) Bool)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () Bool)
(declare-fun $generated@@616 () Bool)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Bool)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@608) ($generated@@173 $generated@@82 $generated@@4)) (= (type $generated@@609) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@610) $generated@@82)) (= (type $generated@@611) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@613) $generated@@82)) (= (type $generated@@614) $generated@@158)) (= (type $generated@@617) $generated@@82)) (= (type $generated@@619) $generated@@158)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@621  (=> (= $generated@@608 ($generated@@172 $generated@@142 $generated@@609 $generated@@60 false)) (=> (and (and (not (= $generated@@610 $generated@@142)) (and ($generated@@145 $generated@@610 $generated@@230) ($generated@@79 $generated@@610 $generated@@230 $generated@@609))) (and ($generated@@256 $generated@@611) ($generated@@612 $generated@@611))) (=> (and (and (and (not (= $generated@@613 $generated@@142)) (and ($generated@@145 $generated@@613 $generated@@230) ($generated@@79 $generated@@613 $generated@@230 $generated@@611))) (not ($generated@@0 ($generated@@88 ($generated@@86 $generated@@609 $generated@@613) $generated@@60)))) (and (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@82) (=> (and (not (= $generated@@622 $generated@@142)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@609 $generated@@622) $generated@@60))) (= ($generated@@86 $generated@@611 $generated@@622) ($generated@@86 $generated@@609 $generated@@622))))
 :pattern ( ($generated@@86 $generated@@611 $generated@@622))
)) ($generated@@137 $generated@@609 $generated@@611))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@613 $generated@@142))) (=> (not (= $generated@@613 $generated@@142)) (=> (and (and ($generated@@79 $generated@@613 $generated@@141 $generated@@611) ($generated@@267 $generated@@613)) (and ($generated@@267 $generated@@613) (= $generated@@614 ($generated@@266 $generated@@613)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> $generated@@615 (=> (and $generated@@615 (= (ControlFlow 0 2) (- 0 1))) (= $generated@@614 $generated@@228)))))))))))))
(let (($generated@@623  (=> (and (and (and ($generated@@256 $generated@@609) ($generated@@612 $generated@@609)) (and (=> $generated@@616 (and ($generated@@145 $generated@@617 $generated@@230) ($generated@@79 $generated@@617 $generated@@230 $generated@@609))) true)) (and (and (=> $generated@@618 (and ($generated@@227 $generated@@619 $generated@@229) ($generated@@257 $generated@@619 $generated@@229 $generated@@609))) true) (and (= 0 $generated@@620) (= (ControlFlow 0 6) 2)))) $generated@@621)))
$generated@@623)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@330 (T@T T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@359 (T@U) Bool)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@481 (T@U Int) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@68) (= (type $generated@@144) $generated@@68)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@72)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@140)))
(assert (= ($generated@@154 $generated@@155) $generated@@64))
(assert (= (type $generated@@157) $generated@@140))
(assert (= ($generated@@154 $generated@@157) $generated@@65))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@68)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@162) $generated@@68)) ($generated@@136 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@136 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@81 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@71 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@81) (= (type $generated@@213) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@214) ($generated@@70 $generated@@4))) (= (type $generated@@216) $generated@@81)) (= (type $generated@@217) ($generated@@70 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert  (and (= (type $generated@@219) $generated@@140) (= (type $generated@@220) $generated@@68)))
(assert  (=> true (=> true ($generated@@136 $generated@@219 $generated@@220))))
(assert (= (type $generated@@221) $generated@@140))
(assert  (=> true (=> true ($generated@@136 $generated@@221 $generated@@220))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= (type ($generated@@222 $generated@@224 $generated@@225)) $generated@@140)
 :pattern ( ($generated@@222 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (and (= (type $generated@@226) $generated@@68) (= (type $generated@@227) $generated@@68)) (= (type $generated@@228) $generated@@149)) (= (type $generated@@229) $generated@@149)) (= ($generated@@136 ($generated@@222 $generated@@228 $generated@@229) ($generated@@139 $generated@@226 $generated@@227))  (and ($generated@@223 $generated@@228 $generated@@226) ($generated@@223 $generated@@229 $generated@@227))))
 :pattern ( ($generated@@136 ($generated@@222 $generated@@228 $generated@@229) ($generated@@139 $generated@@226 $generated@@227)))
)))
(assert ($generated@@136 $generated@@155 $generated@@220))
(assert ($generated@@136 $generated@@157 $generated@@220))
(assert (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@230 $generated@@231)) ($generated@@78 $generated@@155 $generated@@220 $generated@@231))
 :pattern ( ($generated@@78 $generated@@155 $generated@@220 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@230 $generated@@232)) ($generated@@78 $generated@@157 $generated@@220 $generated@@232))
 :pattern ( ($generated@@78 $generated@@157 $generated@@220 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@140) (= (type $generated@@234) $generated@@140)) (= ($generated@@146 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@146 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@140) (= (type $generated@@237) $generated@@140)) (= ($generated@@235 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@235 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@68)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@241) $generated@@68)) (= ($generated@@136 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@149) ($generated@@0 ($generated@@85 $generated@@240 $generated@@242))) ($generated@@223 $generated@@242 $generated@@241))
 :pattern ( ($generated@@85 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@136 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@68)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@246) $generated@@68)) (= ($generated@@136 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@149) ($generated@@0 ($generated@@85 $generated@@245 $generated@@247))) ($generated@@223 $generated@@247 $generated@@246))
 :pattern ( ($generated@@85 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@136 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (= (type $generated@@253) $generated@@140) (= (type $generated@@254) $generated@@140)) (and ($generated@@252 $generated@@253) ($generated@@252 $generated@@254))) (= ($generated@@235 $generated@@253 $generated@@254) true))
 :pattern ( ($generated@@235 $generated@@253 $generated@@254) ($generated@@252 $generated@@253))
 :pattern ( ($generated@@235 $generated@@253 $generated@@254) ($generated@@252 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) $generated@@140) (= (type $generated@@257) $generated@@140)) (and ($generated@@255 $generated@@256) ($generated@@255 $generated@@257))) (= ($generated@@235 $generated@@256 $generated@@257) true))
 :pattern ( ($generated@@235 $generated@@256 $generated@@257) ($generated@@255 $generated@@256))
 :pattern ( ($generated@@235 $generated@@256 $generated@@257) ($generated@@255 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@68) (= (type $generated@@260) $generated@@68)) (= (type $generated@@261) $generated@@149)) (= (type $generated@@262) $generated@@149)) (= (type $generated@@263) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@230 $generated@@263)) (= ($generated@@78 ($generated@@222 $generated@@261 $generated@@262) ($generated@@139 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@78 ($generated@@222 $generated@@261 $generated@@262) ($generated@@139 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@140) (= ($generated@@138 $generated@@264) (= ($generated@@154 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@140) (= ($generated@@252 $generated@@265) (= ($generated@@154 $generated@@265) $generated@@64)))
 :pattern ( ($generated@@252 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@140) (= ($generated@@255 $generated@@266) (= ($generated@@154 $generated@@266) $generated@@65)))
 :pattern ( ($generated@@255 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@140) ($generated@@138 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@149) (= (type $generated@@269) $generated@@149)) (= $generated@@267 ($generated@@222 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@138 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 17)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@140) ($generated@@252 $generated@@278)) (= $generated@@278 $generated@@155))
 :pattern ( ($generated@@252 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@140) ($generated@@255 $generated@@279)) (= $generated@@279 $generated@@157))
 :pattern ( ($generated@@255 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@149)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@68) (= (type $generated@@284) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@258 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@78 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@258 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@80 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@83 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@80 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@85 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@80 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@85 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@85 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@80 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@85 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@85 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@83 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@80 $generated@@328 $generated@@2)) (= ($generated@@159 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@85 $generated@@327 $generated@@329))) (<= ($generated ($generated@@85 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@85 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@159 $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@149) ($generated@@223 $generated@@333 $generated@@220)) (and (= ($generated@@280 ($generated@@330 $generated@@140 $generated@@333)) $generated@@333) ($generated@@136 ($generated@@330 $generated@@140 $generated@@333) $generated@@220)))
 :pattern ( ($generated@@223 $generated@@333 $generated@@220))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@295 (type $generated@@334))))
(let (($generated@@336 ($generated@@294 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@293 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@292 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@85 ($generated@@291 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@291 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@295 (type $generated@@341))))
(let (($generated@@343 ($generated@@294 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@293 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@292 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@85 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@313 (type $generated@@345))))
(let (($generated@@347 ($generated@@312 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@311 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@310 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@85 ($generated@@309 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@309 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@80 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@313 (type $generated@@352))))
(let (($generated@@354 ($generated@@312 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@311 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@310 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@357) $generated@@68)) (= ($generated@@136 $generated@@356 ($generated@@158 $generated@@357)) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@356 $generated@@358)))) ($generated@@223 $generated@@358 $generated@@357))
 :pattern ( ($generated@@85 $generated@@356 $generated@@358))
))))
 :pattern ( ($generated@@136 $generated@@356 ($generated@@158 $generated@@357)))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@140) ($generated@@359 $generated@@360)) (or ($generated@@252 $generated@@360) ($generated@@255 $generated@@360)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@362) $generated@@68)) (= (type $generated@@363) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@361 ($generated@@238 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@149) ($generated@@0 ($generated@@85 $generated@@361 $generated@@364))) ($generated@@258 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@85 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@78 $generated@@361 ($generated@@238 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@366) $generated@@68)) (= (type $generated@@367) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@365 ($generated@@243 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@149) ($generated@@0 ($generated@@85 $generated@@365 $generated@@368))) ($generated@@258 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@85 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@78 $generated@@365 ($generated@@243 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@85 ($generated@@286 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@85 ($generated@@286 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@295 (type $generated@@374))))
(let (($generated@@376 ($generated@@294 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@80 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@293 $generated@@149 $generated@@149)) (= (type $generated@@378) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@85 ($generated@@291 $generated@@377) ($generated@@147 ($generated@@330 $generated@@140 $generated@@378)))) (= ($generated@@85 ($generated@@372 $generated@@377) ($generated@@147 ($generated@@330 $generated@@140 $generated@@378))) ($generated@@148 ($generated@@330 $generated@@140 $generated@@378))))))
 :pattern ( ($generated@@85 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@313 (type $generated@@382))))
(let (($generated@@384 ($generated@@312 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@80 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@311 $generated@@149 $generated@@149)) (= (type $generated@@386) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@85 ($generated@@309 $generated@@385) ($generated@@147 ($generated@@330 $generated@@140 $generated@@386)))) (= ($generated@@85 ($generated@@380 $generated@@385) ($generated@@147 ($generated@@330 $generated@@140 $generated@@386))) ($generated@@148 ($generated@@330 $generated@@140 $generated@@386))))))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@294 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@293 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@85 ($generated@@338 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@85 ($generated@@291 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@85 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@85 ($generated@@291 $generated@@387) $generated@@391))
 :pattern ( ($generated@@85 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@85 ($generated@@338 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@312 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@311 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@85 ($generated@@349 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@85 ($generated@@309 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@85 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@85 ($generated@@309 $generated@@392) $generated@@396))
 :pattern ( ($generated@@85 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@85 ($generated@@349 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@68)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@293 $generated@@149 $generated@@149)) (= (type $generated@@401) $generated@@68)) (= (type $generated@@402) $generated@@68)) (= (type $generated@@403) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@291 $generated@@400) $generated@@404))) (and ($generated@@258 ($generated@@85 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@258 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@85 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@85 ($generated@@291 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@78 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@68)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@311 $generated@@149 $generated@@149)) (= (type $generated@@409) $generated@@68)) (= (type $generated@@410) $generated@@68)) (= (type $generated@@411) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@309 $generated@@408) $generated@@412))) (and ($generated@@258 ($generated@@85 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@258 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@85 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@85 ($generated@@309 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@78 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@140) ($generated@@136 $generated@@413 $generated@@220)) (or ($generated@@252 $generated@@413) ($generated@@255 $generated@@413)))
 :pattern ( ($generated@@255 $generated@@413) ($generated@@136 $generated@@413 $generated@@220))
 :pattern ( ($generated@@252 $generated@@413) ($generated@@136 $generated@@413 $generated@@220))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@80 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@313 (type $generated@@416))))
(let (($generated@@418 ($generated@@312 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@311 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@310 $generated@@418 $generated@@417)) (= ($generated@@309 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@309 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@313 (type $generated@@419))))
(let (($generated@@421 ($generated@@312 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@311 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@310 $generated@@421 $generated@@420)) (= ($generated@@349 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@349 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@313 (type $generated@@422))))
(let (($generated@@424 ($generated@@312 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@311 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@310 $generated@@424 $generated@@423)) (= ($generated@@379 $generated@@422) ($generated@@414 $generated@@149))))))
 :pattern ( ($generated@@379 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@295 (type $generated@@425))))
(let (($generated@@427 ($generated@@294 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@293 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@292 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@149) (= (type $generated@@429) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@371 $generated@@425) ($generated@@280 ($generated@@222 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@371 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@313 (type $generated@@430))))
(let (($generated@@432 ($generated@@312 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@311 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@310 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@149) (= (type $generated@@434) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@430) ($generated@@280 ($generated@@222 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@379 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@149) ($generated@@223 $generated@@435 $generated@@46)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@435)) $generated@@435) ($generated@@136 ($generated@@330 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@223 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@149) ($generated@@223 $generated@@436 $generated@@47)) (and (= ($generated@@280 ($generated@@330 $generated@@3 $generated@@436)) $generated@@436) ($generated@@136 ($generated@@330 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@223 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@149) ($generated@@223 $generated@@437 $generated@@44)) (and (= ($generated@@280 ($generated@@330 $generated@@4 $generated@@437)) $generated@@437) ($generated@@136 ($generated@@330 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@223 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 20))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@149) ($generated@@223 $generated@@439 $generated@@45)) (and (= ($generated@@280 ($generated@@330 $generated@@438 $generated@@439)) $generated@@439) ($generated@@136 ($generated@@330 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@223 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@68) (= ($generated@@223 ($generated@@280 $generated@@440) $generated@@441) ($generated@@136 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@223 ($generated@@280 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@83 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@80 $generated@@443 $generated@@2)) (<= 0 ($generated@@285 $generated@@442))))
 :pattern ( ($generated@@285 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@273 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@272 $generated@@445)) (<= 0 ($generated@@271 $generated@@444))))
 :pattern ( ($generated@@271 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@68)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@68) (= (type $generated@@449) $generated@@68)) (= ($generated@@446 ($generated@@397 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@397 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@68)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@68) (= (type $generated@@453) $generated@@68)) (= ($generated@@450 ($generated@@397 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@397 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@68) (= (type $generated@@455) $generated@@68)) (= ($generated@@76 ($generated@@397 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@68)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@68) (= (type $generated@@459) $generated@@68)) (= ($generated@@456 ($generated@@405 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@405 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@68)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@460 ($generated@@405 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@405 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@76 ($generated@@405 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@149) (= (type $generated@@467) $generated@@149)) (= ($generated@@154 ($generated@@222 $generated@@466 $generated@@467)) $generated@@61))
 :pattern ( ($generated@@222 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@468 ($generated@@139 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@139 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@68)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@68) (= (type $generated@@475) $generated@@68)) (= ($generated@@472 ($generated@@139 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@139 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@149) (= (type $generated@@477) $generated@@149)) (= ($generated@@147 ($generated@@222 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@222 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@149) (= (type $generated@@479) $generated@@149)) (= ($generated@@148 ($generated@@222 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@222 $generated@@478 $generated@@479))
)))
(assert  (and (forall (($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@482))
)) (forall (($generated@@483 T@U) ($generated@@484 Int) ) (! (let (($generated@@485 ($generated@@273 (type $generated@@483))))
(= (type ($generated@@481 $generated@@483 $generated@@484)) $generated@@485))
 :pattern ( ($generated@@481 $generated@@483 $generated@@484))
))))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@272 $generated@@149)) (= (type $generated@@487) $generated@@68)) (= (type $generated@@488) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@486 ($generated@@480 $generated@@487) $generated@@488) (forall (($generated@@489 Int) ) (!  (=> (and (<= 0 $generated@@489) (< $generated@@489 ($generated@@271 $generated@@486))) ($generated@@258 ($generated@@481 $generated@@486 $generated@@489) $generated@@487 $generated@@488))
 :pattern ( ($generated@@481 $generated@@486 $generated@@489))
))))
 :pattern ( ($generated@@78 $generated@@486 ($generated@@480 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@491 Int) ) (! (= ($generated@@490 ($generated@@79 $generated@@491)) $generated@@491)
 :pattern ( ($generated@@79 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@68) (= ($generated@@492 ($generated@@238 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@238 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@68) (= ($generated@@76 ($generated@@238 $generated@@495)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@68) (= ($generated@@496 ($generated@@243 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@243 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@68) (= ($generated@@76 ($generated@@243 $generated@@499)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@68) (= ($generated@@500 ($generated@@158 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@158 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@68) (= ($generated@@76 ($generated@@158 $generated@@503)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@68) (= ($generated@@504 ($generated@@480 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@480 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@68) (= ($generated@@76 ($generated@@480 $generated@@507)) $generated@@57))
 :pattern ( ($generated@@480 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(= ($generated@@330 $generated@@509 ($generated@@280 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@280 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@293 $generated@@149 $generated@@149)) (= (type $generated@@511) $generated@@68)) (= (type $generated@@512) $generated@@68)) (= ($generated@@136 $generated@@510 ($generated@@397 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@291 $generated@@510) $generated@@513))) (and ($generated@@223 ($generated@@85 ($generated@@372 $generated@@510) $generated@@513) $generated@@512) ($generated@@223 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@85 ($generated@@372 $generated@@510) $generated@@513))
 :pattern ( ($generated@@85 ($generated@@291 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@136 $generated@@510 ($generated@@397 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@311 $generated@@149 $generated@@149)) (= (type $generated@@515) $generated@@68)) (= (type $generated@@516) $generated@@68)) (= ($generated@@136 $generated@@514 ($generated@@405 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@309 $generated@@514) $generated@@517))) (and ($generated@@223 ($generated@@85 ($generated@@380 $generated@@514) $generated@@517) $generated@@516) ($generated@@223 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@85 ($generated@@380 $generated@@514) $generated@@517))
 :pattern ( ($generated@@85 ($generated@@309 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@136 $generated@@514 ($generated@@405 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@149) (= (type $generated@@521) $generated@@149)) (< ($generated@@518 $generated@@520) ($generated@@519 ($generated@@222 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@222 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@149) (= (type $generated@@523) $generated@@149)) (< ($generated@@518 $generated@@523) ($generated@@519 ($generated@@222 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@222 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@149) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) $generated@@68)) ($generated@@223 $generated@@524 ($generated@@397 $generated@@525 $generated@@526))) (and (= ($generated@@280 ($generated@@330 ($generated@@293 $generated@@149 $generated@@149) $generated@@524)) $generated@@524) ($generated@@136 ($generated@@330 ($generated@@293 $generated@@149 $generated@@149) $generated@@524) ($generated@@397 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@223 $generated@@524 ($generated@@397 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@149) (= (type $generated@@528) $generated@@68)) (= (type $generated@@529) $generated@@68)) ($generated@@223 $generated@@527 ($generated@@405 $generated@@528 $generated@@529))) (and (= ($generated@@280 ($generated@@330 ($generated@@311 $generated@@149 $generated@@149) $generated@@527)) $generated@@527) ($generated@@136 ($generated@@330 ($generated@@311 $generated@@149 $generated@@149) $generated@@527) ($generated@@405 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@223 $generated@@527 ($generated@@405 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= (type $generated@@532) $generated@@149)) ($generated@@223 $generated@@532 ($generated@@139 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@330 $generated@@140 $generated@@532)) $generated@@532) ($generated@@136 ($generated@@330 $generated@@140 $generated@@532) ($generated@@139 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@223 $generated@@532 ($generated@@139 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
 (not ($generated@@0 ($generated@@85 ($generated@@414 $generated@@534) $generated@@533))))
 :pattern ( (let (($generated@@534 (type $generated@@533)))
($generated@@85 ($generated@@414 $generated@@534) $generated@@533)))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@73)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@68) (= (type $generated@@538) $generated@@68)) (and (= ($generated@@76 ($generated@@139 $generated@@537 $generated@@538)) $generated@@62) (= ($generated@@535 ($generated@@139 $generated@@537 $generated@@538)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@140) (= ($generated@@518 ($generated@@280 $generated@@539)) ($generated@@519 $generated@@539)))
 :pattern ( ($generated@@518 ($generated@@280 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@149) ($generated@@223 $generated@@540 ($generated@@79 0))) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@540)) $generated@@540) ($generated@@136 ($generated@@330 ($generated@@80 $generated@@149 $generated@@4) $generated@@540) ($generated@@79 0))))
 :pattern ( ($generated@@223 $generated@@540 ($generated@@79 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@149) (= (type $generated@@542) $generated@@68)) ($generated@@223 $generated@@541 ($generated@@238 $generated@@542))) (and (= ($generated@@280 ($generated@@330 ($generated@@80 $generated@@149 $generated@@4) $generated@@541)) $generated@@541) ($generated@@136 ($generated@@330 ($generated@@80 $generated@@149 $generated@@4) $generated@@541) ($generated@@238 $generated@@542))))
 :pattern ( ($generated@@223 $generated@@541 ($generated@@238 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@149) (= (type $generated@@544) $generated@@68)) ($generated@@223 $generated@@543 ($generated@@243 $generated@@544))) (and (= ($generated@@280 ($generated@@330 ($generated@@80 $generated@@149 $generated@@4) $generated@@543)) $generated@@543) ($generated@@136 ($generated@@330 ($generated@@80 $generated@@149 $generated@@4) $generated@@543) ($generated@@243 $generated@@544))))
 :pattern ( ($generated@@223 $generated@@543 ($generated@@243 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@68)) ($generated@@223 $generated@@545 ($generated@@158 $generated@@546))) (and (= ($generated@@280 ($generated@@330 ($generated@@80 $generated@@149 $generated@@2) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@330 ($generated@@80 $generated@@149 $generated@@2) $generated@@545) ($generated@@158 $generated@@546))))
 :pattern ( ($generated@@223 $generated@@545 ($generated@@158 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@149) (= (type $generated@@548) $generated@@68)) ($generated@@223 $generated@@547 ($generated@@480 $generated@@548))) (and (= ($generated@@280 ($generated@@330 ($generated@@272 $generated@@149) $generated@@547)) $generated@@547) ($generated@@136 ($generated@@330 ($generated@@272 $generated@@149) $generated@@547) ($generated@@480 $generated@@548))))
 :pattern ( ($generated@@223 $generated@@547 ($generated@@480 $generated@@548)))
)))
(assert  (=> true (=> true (= $generated@@219 ($generated@@248 $generated@@155)))))
(assert  (=> true (=> true (= $generated@@219 ($generated@@248 $generated@@155)))))
(assert  (=> true (=> true (= $generated@@221 ($generated@@248 $generated@@157)))))
(assert  (=> true (=> true (= $generated@@221 ($generated@@248 $generated@@157)))))
(assert (= ($generated@@76 $generated@@220) $generated@@63))
(assert (= ($generated@@535 $generated@@220) $generated@@67))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@549 ($generated@@158 $generated@@550) $generated@@551) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@549 $generated@@552)))) ($generated@@258 $generated@@552 $generated@@550 $generated@@551))
 :pattern ( ($generated@@85 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@78 $generated@@549 ($generated@@158 $generated@@550) $generated@@551))
)))
(assert (= $generated@@155 ($generated@@248 $generated@@155)))
(assert (= $generated@@157 ($generated@@248 $generated@@157)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@140) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@230 $generated@@555) (and ($generated@@138 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@68) ($generated@@78 $generated@@553 ($generated@@139 $generated@@554 $generated@@556) $generated@@555))
 :pattern ( ($generated@@78 $generated@@553 ($generated@@139 $generated@@554 $generated@@556) $generated@@555))
))))) ($generated@@258 ($generated@@147 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@258 ($generated@@147 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@140) (= (type $generated@@558) $generated@@68)) (= (type $generated@@559) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@230 $generated@@559) (and ($generated@@138 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@68) ($generated@@78 $generated@@557 ($generated@@139 $generated@@560 $generated@@558) $generated@@559))
 :pattern ( ($generated@@78 $generated@@557 ($generated@@139 $generated@@560 $generated@@558) $generated@@559))
))))) ($generated@@258 ($generated@@148 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@258 ($generated@@148 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@149)) (= ($generated@@222 ($generated@@248 $generated@@561) ($generated@@248 $generated@@562)) ($generated@@248 ($generated@@222 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@222 ($generated@@248 $generated@@561) ($generated@@248 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (! (= ($generated@@280 ($generated@@248 $generated@@563)) ($generated@@248 ($generated@@280 $generated@@563)))
 :pattern ( ($generated@@280 ($generated@@248 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@273 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@272 $generated@@565)) (= ($generated@@271 $generated@@564) 0)) (= $generated@@564 ($generated@@270 $generated@@565))))
 :pattern ( ($generated@@271 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@567)))
 (=> (and (and (= (type $generated@@566) ($generated@@80 $generated@@569 $generated@@2)) (= (type $generated@@568) $generated@@2)) (<= 0 ($generated $generated@@568))) (= ($generated@@285 ($generated@@86 $generated@@566 $generated@@567 $generated@@568)) (+ (- ($generated@@285 $generated@@566) ($generated ($generated@@85 $generated@@566 $generated@@567))) ($generated $generated@@568)))))
 :pattern ( ($generated@@285 ($generated@@86 $generated@@566 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@571) $generated@@2)) ($generated@@78 $generated@@571 $generated@@46 $generated@@570))
 :pattern ( ($generated@@78 $generated@@571 $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@573) $generated@@3)) ($generated@@78 $generated@@573 $generated@@47 $generated@@572))
 :pattern ( ($generated@@78 $generated@@573 $generated@@47 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@575) $generated@@4)) ($generated@@78 $generated@@575 $generated@@44 $generated@@574))
 :pattern ( ($generated@@78 $generated@@575 $generated@@44 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@577) $generated@@438)) ($generated@@78 $generated@@577 $generated@@45 $generated@@576))
 :pattern ( ($generated@@78 $generated@@577 $generated@@45 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@579) $generated@@149)) ($generated@@78 $generated@@579 $generated@@48 $generated@@578))
 :pattern ( ($generated@@78 $generated@@579 $generated@@48 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@272 $generated@@149)) (= (type $generated@@581) $generated@@68)) (= ($generated@@136 $generated@@580 ($generated@@480 $generated@@581)) (forall (($generated@@582 Int) ) (!  (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@271 $generated@@580))) ($generated@@223 ($generated@@481 $generated@@580 $generated@@582) $generated@@581))
 :pattern ( ($generated@@481 $generated@@580 $generated@@582))
))))
 :pattern ( ($generated@@136 $generated@@580 ($generated@@480 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 Int) ) (!  (=> (= (type $generated@@584) ($generated@@272 $generated@@149)) (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@271 $generated@@584))) (< ($generated@@519 ($generated@@330 $generated@@140 ($generated@@481 $generated@@584 $generated@@585))) ($generated@@583 $generated@@584))))
 :pattern ( ($generated@@519 ($generated@@330 $generated@@140 ($generated@@481 $generated@@584 $generated@@585))))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@293 $generated@@149 $generated@@149)) (= (type $generated@@587) $generated@@68)) (= (type $generated@@588) $generated@@68)) ($generated@@136 $generated@@586 ($generated@@397 $generated@@587 $generated@@588))) (and (and ($generated@@136 ($generated@@291 $generated@@586) ($generated@@238 $generated@@587)) ($generated@@136 ($generated@@338 $generated@@586) ($generated@@238 $generated@@588))) ($generated@@136 ($generated@@371 $generated@@586) ($generated@@238 ($generated@@139 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@136 $generated@@586 ($generated@@397 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@311 $generated@@149 $generated@@149)) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) $generated@@68)) ($generated@@136 $generated@@589 ($generated@@405 $generated@@590 $generated@@591))) (and (and ($generated@@136 ($generated@@309 $generated@@589) ($generated@@243 $generated@@590)) ($generated@@136 ($generated@@349 $generated@@589) ($generated@@243 $generated@@591))) ($generated@@136 ($generated@@379 $generated@@589) ($generated@@243 ($generated@@139 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@136 $generated@@589 ($generated@@405 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@2) ($generated@@136 $generated@@592 $generated@@46))
 :pattern ( ($generated@@136 $generated@@592 $generated@@46))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@3) ($generated@@136 $generated@@593 $generated@@47))
 :pattern ( ($generated@@136 $generated@@593 $generated@@47))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@4) ($generated@@136 $generated@@594 $generated@@44))
 :pattern ( ($generated@@136 $generated@@594 $generated@@44))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@438) ($generated@@136 $generated@@595 $generated@@45))
 :pattern ( ($generated@@136 $generated@@595 $generated@@45))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@149) ($generated@@136 $generated@@596 $generated@@48))
 :pattern ( ($generated@@136 $generated@@596 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 (T@U) Bool)
(declare-fun $generated@@602 () Int)
(assert  (and (and (and (= (type $generated@@597) ($generated@@165 $generated@@81 $generated@@4)) (= (type $generated@@598) $generated@@81)) (= (type $generated@@599) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@600) $generated@@140)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@603  (=> (and (= $generated@@597 ($generated@@164 $generated@@598 $generated@@599 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (or ($generated@@235 $generated@@600 $generated@@219) ($generated@@235 $generated@@600 $generated@@221)))))
(let (($generated@@604  (=> (and ($generated@@230 $generated@@599) ($generated@@601 $generated@@599)) (=> (and (and (and ($generated@@136 $generated@@600 $generated@@220) ($generated@@78 $generated@@600 $generated@@220 $generated@@599)) ($generated@@359 $generated@@600)) (and (= 1 $generated@@602) (= (ControlFlow 0 3) 2))) $generated@@603))))
$generated@@604)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@95 (Int) T@U)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@187 (T@T T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@392 (T@U) Bool)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@T) T@U)
(declare-fun $generated@@474 () T@T)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@517 (T@U Int) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@619 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@77 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@77)) 8))) (forall (($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@78))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@75)) (= (type $generated@@67) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@72)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 11) (= ($generated@@1 $generated@@89) 12)) (forall (($generated@@90 T@U) ) (! (= (type ($generated@@81 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@81 $generated@@90))
))) (= (type $generated@@84) $generated@@82)) (= (type $generated@@86) $generated@@71)) (forall (($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(= (type ($generated@@87 $generated@@91)) $generated@@92))
 :pattern ( ($generated@@87 $generated@@91))
))) (= (type $generated@@88) $generated@@89)))
(assert  (=> true (forall (($generated@@93 T@U) ) (!  (=> (and (= (type $generated@@93) $generated@@82) (or ($generated@@83 $generated@@93) (and (not (= $generated@@93 $generated@@84)) ($generated@@85 $generated@@93 $generated@@86)))) (= ($generated@@81 $generated@@93) ($generated@@87 $generated@@88)))
 :pattern ( ($generated@@81 $generated@@93))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@1 ($generated@@96 $generated@@104 $generated@@105)) 13)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@98 ($generated@@96 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@96 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@96 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@99 (type $generated@@110))))
(= (type ($generated@@100 $generated@@110 $generated@@111)) $generated@@112))
 :pattern ( ($generated@@100 $generated@@110 $generated@@111))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 (type $generated@@115)))
(let (($generated@@117 (type $generated@@114)))
(= (type ($generated@@101 $generated@@113 $generated@@114 $generated@@115)) ($generated@@96 $generated@@117 $generated@@116))))
 :pattern ( ($generated@@101 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@99 (type $generated@@118))))
 (=> (= (type $generated@@120) $generated@@121) (= ($generated@@100 ($generated@@101 $generated@@118 $generated@@119 $generated@@120) $generated@@119) $generated@@120)))
 :weight 0
))) (and (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@100 ($generated@@101 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@100 $generated@@123 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or true (= ($generated@@100 ($generated@@101 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@100 $generated@@127 $generated@@129)))
 :weight 0
)))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@74 (type $generated@@131))))
(= (type ($generated@@102 $generated@@130 $generated@@131)) $generated@@132))
 :pattern ( ($generated@@102 $generated@@130 $generated@@131))
))) (= ($generated@@1 $generated@@97) 14)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= (type ($generated@@103 $generated@@133 $generated@@134 $generated@@135)) $generated@@97)
 :pattern ( ($generated@@103 $generated@@133 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@74 (type $generated@@137))))
 (=> (= (type $generated@@138) $generated@@139) (= ($generated@@102 ($generated@@103 $generated@@136 $generated@@137 $generated@@138) $generated@@137) $generated@@138)))
 :weight 0
))) (and (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@102 ($generated@@103 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@102 $generated@@141 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@102 $generated@@145 $generated@@147)))
 :weight 0
)))) (forall (($generated@@148 Int) ) (! (= (type ($generated@@95 $generated@@148)) $generated@@71)
 :pattern ( ($generated@@95 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@2) (= (type $generated@@150) ($generated@@96 $generated@@82 $generated@@97))) ($generated@@94 $generated@@149 ($generated@@95 0) $generated@@150))
 :pattern ( ($generated@@94 $generated@@149 ($generated@@95 0) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) ($generated@@96 $generated@@82 $generated@@97)) (= (type $generated@@153) ($generated@@96 $generated@@82 $generated@@97))) ($generated@@151 $generated@@152 $generated@@153)) (forall (($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@82) ($generated@@0 ($generated@@102 ($generated@@100 $generated@@152 $generated@@154) $generated@@60))) ($generated@@0 ($generated@@102 ($generated@@100 $generated@@153 $generated@@154) $generated@@60)))
 :pattern ( ($generated@@102 ($generated@@100 $generated@@153 $generated@@154) $generated@@60))
)))
 :pattern ( ($generated@@151 $generated@@152 $generated@@153))
)))
(assert (= (type $generated@@155) $generated@@71))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@82) (= (type $generated@@157) ($generated@@96 $generated@@82 $generated@@97))) (= ($generated@@94 $generated@@156 $generated@@155 $generated@@157)  (or (= $generated@@156 $generated@@84) ($generated@@0 ($generated@@102 ($generated@@100 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@94 $generated@@156 $generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@85 $generated@@158 ($generated@@95 0)))
 :pattern ( ($generated@@85 $generated@@158 ($generated@@95 0)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@161 $generated@@162)) $generated@@71)
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@71) (= (type $generated@@164) $generated@@71)) (= (type $generated@@165) $generated@@89)) ($generated@@85 $generated@@165 ($generated@@160 $generated@@163 $generated@@164))) ($generated@@159 $generated@@165))
 :pattern ( ($generated@@159 $generated@@165) ($generated@@85 $generated@@165 ($generated@@160 $generated@@163 $generated@@164)))
)))
(assert  (and (and (= ($generated@@1 $generated@@169) 15) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@167 $generated@@170))
))) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@169)
 :pattern ( ($generated@@168 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@89) (= (type $generated@@173) $generated@@89)) true) (= ($generated@@166 $generated@@172 $generated@@173)  (and (= ($generated@@167 $generated@@172) ($generated@@167 $generated@@173)) (= ($generated@@168 $generated@@172) ($generated@@168 $generated@@173)))))
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@174 $generated@@175)) $generated@@75)
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (= ($generated@@174 $generated@@88) $generated@@66))
(assert (= (type $generated@@176) $generated@@89))
(assert (= ($generated@@174 $generated@@176) $generated@@67))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@71)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@96 $generated@@169 $generated@@2)) (= (type $generated@@181) $generated@@71)) ($generated@@85 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@85 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@182 $generated@@183)) $generated@@71)
 :pattern ( ($generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= (type $generated@@184) $generated@@82) (= ($generated@@85 $generated@@184 $generated@@155)  (or (= $generated@@184 $generated@@84) (= ($generated@@182 $generated@@184) $generated@@155))))
 :pattern ( ($generated@@85 $generated@@184 $generated@@155))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (= ($generated@@1 ($generated@@187 $generated@@191 $generated@@192)) 16)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@188 ($generated@@187 $generated@@193 $generated@@194)) $generated@@193)
 :pattern ( ($generated@@187 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@189 ($generated@@187 $generated@@195 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@187 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@189 (type $generated@@197))))
(= (type ($generated@@185 $generated@@197 $generated@@198 $generated@@199)) $generated@@200))
 :pattern ( ($generated@@185 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 (type $generated@@204)))
(let (($generated@@206 (type $generated@@202)))
(= (type ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204)) ($generated@@187 $generated@@206 $generated@@205))))
 :pattern ( ($generated@@190 $generated@@201 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@189 (type $generated@@207))))
 (=> (= (type $generated@@210) $generated@@211) (= ($generated@@185 ($generated@@190 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@208 $generated@@209) $generated@@210)))
 :weight 0
))) (and (and (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@185 ($generated@@190 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@185 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@185 ($generated@@190 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@185 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or true (= ($generated@@185 ($generated@@190 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@185 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
)))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@187 $generated@@82 $generated@@4))
 :pattern ( ($generated@@186 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@74 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@82) (= (type $generated@@235) ($generated@@96 $generated@@82 $generated@@97))) (= (type $generated@@236) ($generated@@73 $generated@@4))) (= (type $generated@@238) $generated@@82)) (= (type $generated@@239) ($generated@@73 $generated@@240))) (= ($generated@@0 ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@102 ($generated@@100 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@185 ($generated@@186 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert  (and (= (type $generated@@241) $generated@@89) (= (type $generated@@242) $generated@@71)))
(assert  (=> true (=> true ($generated@@85 $generated@@241 $generated@@242))))
(assert  (=> true (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@82) (or ($generated@@83 ($generated@@87 $generated@@243)) (and (not (= $generated@@243 $generated@@84)) ($generated@@85 $generated@@243 $generated@@86)))) (= ($generated@@81 ($generated@@87 $generated@@243)) ($generated@@87 $generated@@88)))
 :weight 3
 :pattern ( ($generated@@81 ($generated@@87 $generated@@243)))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@82) (= (type $generated@@245) ($generated@@96 $generated@@82 $generated@@97))) (= ($generated@@94 $generated@@244 $generated@@86 $generated@@245) ($generated@@94 $generated@@244 $generated@@155 $generated@@245)))
 :pattern ( ($generated@@94 $generated@@244 $generated@@86 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@89)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@71) (= (type $generated@@251) $generated@@71)) (= (type $generated@@252) $generated@@169)) (= (type $generated@@253) $generated@@169)) (= ($generated@@85 ($generated@@246 $generated@@252 $generated@@253) ($generated@@160 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@85 ($generated@@246 $generated@@252 $generated@@253) ($generated@@160 $generated@@250 $generated@@251)))
)))
(assert ($generated@@85 $generated@@88 $generated@@242))
(assert ($generated@@85 $generated@@176 $generated@@242))
(assert (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@96 $generated@@82 $generated@@97)) ($generated@@254 $generated@@255)) ($generated@@94 $generated@@88 $generated@@242 $generated@@255))
 :pattern ( ($generated@@94 $generated@@88 $generated@@242 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@96 $generated@@82 $generated@@97)) ($generated@@254 $generated@@256)) ($generated@@94 $generated@@176 $generated@@242 $generated@@256))
 :pattern ( ($generated@@94 $generated@@176 $generated@@242 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@89) (= (type $generated@@258) $generated@@89)) (= ($generated@@166 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@166 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@89) (= (type $generated@@261) $generated@@89)) (= ($generated@@259 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@259 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@71)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@96 $generated@@169 $generated@@4)) (= (type $generated@@265) $generated@@71)) (= ($generated@@85 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@169) ($generated@@0 ($generated@@100 $generated@@264 $generated@@266))) ($generated@@247 $generated@@266 $generated@@265))
 :pattern ( ($generated@@100 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@85 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@71)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@96 $generated@@169 $generated@@4)) (= (type $generated@@270) $generated@@71)) (= ($generated@@85 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@169) ($generated@@0 ($generated@@100 $generated@@269 $generated@@271))) ($generated@@247 $generated@@271 $generated@@270))
 :pattern ( ($generated@@100 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@85 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@87 $generated@@272) $generated@@272)
 :pattern ( ($generated@@87 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@89) (= (type $generated@@275) $generated@@89)) (and ($generated@@273 $generated@@274) ($generated@@273 $generated@@275))) (= ($generated@@259 $generated@@274 $generated@@275) true))
 :pattern ( ($generated@@259 $generated@@274 $generated@@275) ($generated@@273 $generated@@274))
 :pattern ( ($generated@@259 $generated@@274 $generated@@275) ($generated@@273 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@89) (= (type $generated@@278) $generated@@89)) (and ($generated@@276 $generated@@277) ($generated@@276 $generated@@278))) (= ($generated@@259 $generated@@277 $generated@@278) true))
 :pattern ( ($generated@@259 $generated@@277 $generated@@278) ($generated@@276 $generated@@277))
 :pattern ( ($generated@@259 $generated@@277 $generated@@278) ($generated@@276 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@71) (= (type $generated@@281) $generated@@71)) (= (type $generated@@282) $generated@@169)) (= (type $generated@@283) $generated@@169)) (= (type $generated@@284) ($generated@@96 $generated@@82 $generated@@97))) ($generated@@254 $generated@@284)) (= ($generated@@94 ($generated@@246 $generated@@282 $generated@@283) ($generated@@160 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@94 ($generated@@246 $generated@@282 $generated@@283) ($generated@@160 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@89) (= ($generated@@159 $generated@@285) (= ($generated@@174 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@159 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@89) (= ($generated@@273 $generated@@286) (= ($generated@@174 $generated@@286) $generated@@66)))
 :pattern ( ($generated@@273 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@89) (= ($generated@@276 $generated@@287) (= ($generated@@174 $generated@@287) $generated@@67)))
 :pattern ( ($generated@@276 $generated@@287))
)))
(assert  (=> true (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@82) (or ($generated@@83 $generated@@288) (and (not (= $generated@@288 $generated@@84)) ($generated@@85 $generated@@288 $generated@@86)))) ($generated@@85 ($generated@@81 $generated@@288) $generated@@242))
 :pattern ( ($generated@@81 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@89) ($generated@@159 $generated@@289)) (exists (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (and (and (= (type $generated@@290) $generated@@169) (= (type $generated@@291) $generated@@169)) (= $generated@@289 ($generated@@246 $generated@@290 $generated@@291)))
 :no-pattern (type $generated@@290)
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
)))
 :pattern ( ($generated@@159 $generated@@289))
)))
(assert  (and (and (forall (($generated@@296 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@296)) 17)) (forall (($generated@@297 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@294 $generated@@297))
))) (forall (($generated@@298 T@T) ) (! (= (type ($generated@@292 $generated@@298)) ($generated@@294 $generated@@298))
 :pattern ( ($generated@@292 $generated@@298))
))))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@299)) 0)
 :pattern ( ($generated@@292 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@89) ($generated@@273 $generated@@300)) (= $generated@@300 $generated@@88))
 :pattern ( ($generated@@273 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@89) ($generated@@276 $generated@@301)) (= $generated@@301 $generated@@176))
 :pattern ( ($generated@@276 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@169)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@71) (= (type $generated@@306) ($generated@@96 $generated@@82 $generated@@97))) (= ($generated@@279 ($generated@@302 $generated@@304) $generated@@305 $generated@@306) ($generated@@94 $generated@@304 $generated@@305 $generated@@306)))
 :pattern ( ($generated@@279 ($generated@@302 $generated@@304) $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@307) ($generated@@96 $generated@@82 $generated@@97)) (= (type $generated@@308) ($generated@@96 $generated@@82 $generated@@97))) (= (type $generated@@309) $generated@@169)) (= (type $generated@@310) $generated@@71)) ($generated@@151 $generated@@307 $generated@@308)) ($generated@@279 $generated@@309 $generated@@310 $generated@@307)) ($generated@@279 $generated@@309 $generated@@310 $generated@@308))
 :pattern ( ($generated@@151 $generated@@307 $generated@@308) ($generated@@279 $generated@@309 $generated@@310 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@311) ($generated@@96 $generated@@82 $generated@@97)) (= (type $generated@@312) ($generated@@96 $generated@@82 $generated@@97))) (= (type $generated@@314) $generated@@71)) ($generated@@151 $generated@@311 $generated@@312)) ($generated@@94 $generated@@313 $generated@@314 $generated@@311)) ($generated@@94 $generated@@313 $generated@@314 $generated@@312))
 :pattern ( ($generated@@151 $generated@@311 $generated@@312) ($generated@@94 $generated@@313 $generated@@314 $generated@@311))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@96 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@98 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@96 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@100 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 18)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@96 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@100 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@100 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 19)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@96 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@100 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@100 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@98 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@96 $generated@@358 $generated@@2)) (= ($generated@@178 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@100 $generated@@357 $generated@@359))) (<= ($generated ($generated@@100 $generated@@357 $generated@@359)) ($generated@@315 $generated@@357))))
 :pattern ( ($generated@@100 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@178 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@169) ($generated@@247 $generated@@363 $generated@@242)) (and (= ($generated@@302 ($generated@@360 $generated@@89 $generated@@363)) $generated@@363) ($generated@@85 ($generated@@360 $generated@@89 $generated@@363) $generated@@242)))
 :pattern ( ($generated@@247 $generated@@363 $generated@@242))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@169) ($generated@@247 $generated@@364 $generated@@86)) (and (= ($generated@@302 ($generated@@360 $generated@@82 $generated@@364)) $generated@@364) ($generated@@85 ($generated@@360 $generated@@82 $generated@@364) $generated@@86)))
 :pattern ( ($generated@@247 $generated@@364 $generated@@86))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@169) ($generated@@247 $generated@@365 $generated@@155)) (and (= ($generated@@302 ($generated@@360 $generated@@82 $generated@@365)) $generated@@365) ($generated@@85 ($generated@@360 $generated@@82 $generated@@365) $generated@@155)))
 :pattern ( ($generated@@247 $generated@@365 $generated@@155))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@82) (= ($generated@@85 $generated@@366 $generated@@86)  (and ($generated@@85 $generated@@366 $generated@@155) (not (= $generated@@366 $generated@@84)))))
 :pattern ( ($generated@@85 $generated@@366 $generated@@86))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@325 (type $generated@@367))))
(let (($generated@@369 ($generated@@324 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@323 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@322 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@100 ($generated@@321 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@321 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@325 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@96 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@325 (type $generated@@374))))
(let (($generated@@376 ($generated@@324 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@323 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@322 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@100 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@343 (type $generated@@378))))
(let (($generated@@380 ($generated@@342 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@341 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@340 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@100 ($generated@@339 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@339 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@343 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@96 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@343 (type $generated@@385))))
(let (($generated@@387 ($generated@@342 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@341 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@340 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@100 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@96 $generated@@169 $generated@@2)) (= (type $generated@@390) $generated@@71)) (= ($generated@@85 $generated@@389 ($generated@@177 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@169) (< 0 ($generated ($generated@@100 $generated@@389 $generated@@391)))) ($generated@@247 $generated@@391 $generated@@390))
 :pattern ( ($generated@@100 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@85 $generated@@389 ($generated@@177 $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@89) ($generated@@392 $generated@@393)) (or ($generated@@273 $generated@@393) ($generated@@276 $generated@@393)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@96 $generated@@169 $generated@@4)) (= (type $generated@@395) $generated@@71)) (= (type $generated@@396) ($generated@@96 $generated@@82 $generated@@97))) (= ($generated@@94 $generated@@394 ($generated@@262 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@169) ($generated@@0 ($generated@@100 $generated@@394 $generated@@397))) ($generated@@279 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@100 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@94 $generated@@394 ($generated@@262 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@96 $generated@@169 $generated@@4)) (= (type $generated@@399) $generated@@71)) (= (type $generated@@400) ($generated@@96 $generated@@82 $generated@@97))) (= ($generated@@94 $generated@@398 ($generated@@267 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@169) ($generated@@0 ($generated@@100 $generated@@398 $generated@@401))) ($generated@@279 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@100 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@94 $generated@@398 ($generated@@267 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@100 ($generated@@316 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@100 ($generated@@316 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@96 $generated@@169 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@325 (type $generated@@407))))
(let (($generated@@409 ($generated@@324 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@96 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@323 $generated@@169 $generated@@169)) (= (type $generated@@411) $generated@@169)) (= ($generated@@0 ($generated@@100 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@100 ($generated@@321 $generated@@410) ($generated@@167 ($generated@@360 $generated@@89 $generated@@411)))) (= ($generated@@100 ($generated@@405 $generated@@410) ($generated@@167 ($generated@@360 $generated@@89 $generated@@411))) ($generated@@168 ($generated@@360 $generated@@89 $generated@@411))))))
 :pattern ( ($generated@@100 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@96 $generated@@169 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@343 (type $generated@@415))))
(let (($generated@@417 ($generated@@342 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@96 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@341 $generated@@169 $generated@@169)) (= (type $generated@@419) $generated@@169)) (= ($generated@@0 ($generated@@100 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@100 ($generated@@339 $generated@@418) ($generated@@167 ($generated@@360 $generated@@89 $generated@@419)))) (= ($generated@@100 ($generated@@413 $generated@@418) ($generated@@167 ($generated@@360 $generated@@89 $generated@@419))) ($generated@@168 ($generated@@360 $generated@@89 $generated@@419))))))
 :pattern ( ($generated@@100 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@324 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@323 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@100 ($generated@@371 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@100 ($generated@@321 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@100 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@100 ($generated@@321 $generated@@420) $generated@@424))
 :pattern ( ($generated@@100 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@100 ($generated@@371 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@342 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@341 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@100 ($generated@@382 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@100 ($generated@@339 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@100 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@100 ($generated@@339 $generated@@425) $generated@@429))
 :pattern ( ($generated@@100 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@100 ($generated@@382 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@71)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@323 $generated@@169 $generated@@169)) (= (type $generated@@434) $generated@@71)) (= (type $generated@@435) $generated@@71)) (= (type $generated@@436) ($generated@@96 $generated@@82 $generated@@97))) (= ($generated@@94 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@169) ($generated@@0 ($generated@@100 ($generated@@321 $generated@@433) $generated@@437))) (and ($generated@@279 ($generated@@100 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@279 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@100 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@100 ($generated@@321 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@94 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@71)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@341 $generated@@169 $generated@@169)) (= (type $generated@@442) $generated@@71)) (= (type $generated@@443) $generated@@71)) (= (type $generated@@444) ($generated@@96 $generated@@82 $generated@@97))) (= ($generated@@94 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@169) ($generated@@0 ($generated@@100 ($generated@@339 $generated@@441) $generated@@445))) (and ($generated@@279 ($generated@@100 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@279 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@100 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@100 ($generated@@339 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@94 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@89) ($generated@@85 $generated@@446 $generated@@242)) (or ($generated@@273 $generated@@446) ($generated@@276 $generated@@446)))
 :pattern ( ($generated@@276 $generated@@446) ($generated@@85 $generated@@446 $generated@@242))
 :pattern ( ($generated@@273 $generated@@446) ($generated@@85 $generated@@446 $generated@@242))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@447) ($generated@@96 $generated@@82 $generated@@97)) (= (type $generated@@448) ($generated@@96 $generated@@82 $generated@@97))) (= (type $generated@@449) ($generated@@96 $generated@@82 $generated@@97))) (not (= $generated@@447 $generated@@449))) (and ($generated@@151 $generated@@447 $generated@@448) ($generated@@151 $generated@@448 $generated@@449))) ($generated@@151 $generated@@447 $generated@@449))
 :pattern ( ($generated@@151 $generated@@447 $generated@@448) ($generated@@151 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@T) ) (! (= (type ($generated@@450 $generated@@451)) ($generated@@96 $generated@@451 $generated@@4))
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@343 (type $generated@@452))))
(let (($generated@@454 ($generated@@342 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@341 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@340 $generated@@454 $generated@@453)) (= ($generated@@339 $generated@@452) ($generated@@450 $generated@@454))))))
 :pattern ( ($generated@@339 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@343 (type $generated@@455))))
(let (($generated@@457 ($generated@@342 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@341 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@340 $generated@@457 $generated@@456)) (= ($generated@@382 $generated@@455) ($generated@@450 $generated@@456))))))
 :pattern ( ($generated@@382 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@343 (type $generated@@458))))
(let (($generated@@460 ($generated@@342 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@341 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@340 $generated@@460 $generated@@459)) (= ($generated@@412 $generated@@458) ($generated@@450 $generated@@169))))))
 :pattern ( ($generated@@412 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@325 (type $generated@@461))))
(let (($generated@@463 ($generated@@324 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@323 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@322 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@169) (= (type $generated@@465) $generated@@169)) ($generated@@0 ($generated@@100 ($generated@@404 $generated@@461) ($generated@@302 ($generated@@246 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@404 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@343 (type $generated@@466))))
(let (($generated@@468 ($generated@@342 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@341 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@340 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (and (and (= (type $generated@@469) $generated@@169) (= (type $generated@@470) $generated@@169)) ($generated@@0 ($generated@@100 ($generated@@412 $generated@@466) ($generated@@302 ($generated@@246 $generated@@469 $generated@@470)))))
 :no-pattern (type $generated@@469)
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
))))))
 :pattern ( ($generated@@412 $generated@@466))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@169) ($generated@@247 $generated@@471 $generated@@46)) (and (= ($generated@@302 ($generated@@360 $generated@@2 $generated@@471)) $generated@@471) ($generated@@85 ($generated@@360 $generated@@2 $generated@@471) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@471 $generated@@46))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@169) ($generated@@247 $generated@@472 $generated@@47)) (and (= ($generated@@302 ($generated@@360 $generated@@3 $generated@@472)) $generated@@472) ($generated@@85 ($generated@@360 $generated@@3 $generated@@472) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@472 $generated@@47))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@169) ($generated@@247 $generated@@473 $generated@@44)) (and (= ($generated@@302 ($generated@@360 $generated@@4 $generated@@473)) $generated@@473) ($generated@@85 ($generated@@360 $generated@@4 $generated@@473) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@473 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@474) 20))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@169) ($generated@@247 $generated@@475 $generated@@45)) (and (= ($generated@@302 ($generated@@360 $generated@@474 $generated@@475)) $generated@@475) ($generated@@85 ($generated@@360 $generated@@474 $generated@@475) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@475 $generated@@45))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@71) (= ($generated@@247 ($generated@@302 $generated@@476) $generated@@477) ($generated@@85 $generated@@476 $generated@@477)))
 :pattern ( ($generated@@247 ($generated@@302 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@98 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@96 $generated@@479 $generated@@2)) (<= 0 ($generated@@315 $generated@@478))))
 :pattern ( ($generated@@315 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@295 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@294 $generated@@481)) (<= 0 ($generated@@293 $generated@@480))))
 :pattern ( ($generated@@293 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@71)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@71) (= (type $generated@@485) $generated@@71)) (= ($generated@@482 ($generated@@430 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@430 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@71)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@71) (= (type $generated@@489) $generated@@71)) (= ($generated@@486 ($generated@@430 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@430 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@71) (= (type $generated@@491) $generated@@71)) (= ($generated@@79 ($generated@@430 $generated@@490 $generated@@491)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@71)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@71) (= (type $generated@@495) $generated@@71)) (= ($generated@@492 ($generated@@438 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@438 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@71)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@71) (= (type $generated@@499) $generated@@71)) (= ($generated@@496 ($generated@@438 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@438 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@71) (= (type $generated@@501) $generated@@71)) (= ($generated@@79 ($generated@@438 $generated@@500 $generated@@501)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@169) (= (type $generated@@503) $generated@@169)) (= ($generated@@174 ($generated@@246 $generated@@502 $generated@@503)) $generated@@61))
 :pattern ( ($generated@@246 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@71)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@71) (= (type $generated@@507) $generated@@71)) (= ($generated@@504 ($generated@@160 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@160 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@71)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@71) (= (type $generated@@511) $generated@@71)) (= ($generated@@508 ($generated@@160 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@160 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@169) (= (type $generated@@513) $generated@@169)) (= ($generated@@167 ($generated@@246 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@246 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@169) (= (type $generated@@515) $generated@@169)) (= ($generated@@168 ($generated@@246 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@246 $generated@@514 $generated@@515))
)))
(assert  (and (forall (($generated@@518 T@U) ) (! (= (type ($generated@@516 $generated@@518)) $generated@@71)
 :pattern ( ($generated@@516 $generated@@518))
)) (forall (($generated@@519 T@U) ($generated@@520 Int) ) (! (let (($generated@@521 ($generated@@295 (type $generated@@519))))
(= (type ($generated@@517 $generated@@519 $generated@@520)) $generated@@521))
 :pattern ( ($generated@@517 $generated@@519 $generated@@520))
))))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@294 $generated@@169)) (= (type $generated@@523) $generated@@71)) (= (type $generated@@524) ($generated@@96 $generated@@82 $generated@@97))) (= ($generated@@94 $generated@@522 ($generated@@516 $generated@@523) $generated@@524) (forall (($generated@@525 Int) ) (!  (=> (and (<= 0 $generated@@525) (< $generated@@525 ($generated@@293 $generated@@522))) ($generated@@279 ($generated@@517 $generated@@522 $generated@@525) $generated@@523 $generated@@524))
 :pattern ( ($generated@@517 $generated@@522 $generated@@525))
))))
 :pattern ( ($generated@@94 $generated@@522 ($generated@@516 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@526 ($generated@@95 $generated@@527)) $generated@@527)
 :pattern ( ($generated@@95 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@71)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@71) (= ($generated@@528 ($generated@@262 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@262 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@71) (= ($generated@@79 ($generated@@262 $generated@@531)) $generated@@54))
 :pattern ( ($generated@@262 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@71)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@71) (= ($generated@@532 ($generated@@267 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@267 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@71) (= ($generated@@79 ($generated@@267 $generated@@535)) $generated@@55))
 :pattern ( ($generated@@267 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@71) (= ($generated@@536 ($generated@@177 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@177 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@71) (= ($generated@@79 ($generated@@177 $generated@@539)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@71)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@71) (= ($generated@@540 ($generated@@516 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@516 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@71) (= ($generated@@79 ($generated@@516 $generated@@543)) $generated@@57))
 :pattern ( ($generated@@516 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@360 $generated@@545 ($generated@@302 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@302 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@323 $generated@@169 $generated@@169)) (= (type $generated@@547) $generated@@71)) (= (type $generated@@548) $generated@@71)) (= ($generated@@85 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@169) ($generated@@0 ($generated@@100 ($generated@@321 $generated@@546) $generated@@549))) (and ($generated@@247 ($generated@@100 ($generated@@405 $generated@@546) $generated@@549) $generated@@548) ($generated@@247 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@100 ($generated@@405 $generated@@546) $generated@@549))
 :pattern ( ($generated@@100 ($generated@@321 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@85 $generated@@546 ($generated@@430 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@341 $generated@@169 $generated@@169)) (= (type $generated@@551) $generated@@71)) (= (type $generated@@552) $generated@@71)) (= ($generated@@85 $generated@@550 ($generated@@438 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@169) ($generated@@0 ($generated@@100 ($generated@@339 $generated@@550) $generated@@553))) (and ($generated@@247 ($generated@@100 ($generated@@413 $generated@@550) $generated@@553) $generated@@552) ($generated@@247 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@100 ($generated@@413 $generated@@550) $generated@@553))
 :pattern ( ($generated@@100 ($generated@@339 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@85 $generated@@550 ($generated@@438 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@169) (= (type $generated@@557) $generated@@169)) (< ($generated@@554 $generated@@556) ($generated@@555 ($generated@@246 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@246 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@169) (= (type $generated@@559) $generated@@169)) (< ($generated@@554 $generated@@559) ($generated@@555 ($generated@@246 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@246 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@169) (= (type $generated@@561) $generated@@71)) (= (type $generated@@562) $generated@@71)) ($generated@@247 $generated@@560 ($generated@@430 $generated@@561 $generated@@562))) (and (= ($generated@@302 ($generated@@360 ($generated@@323 $generated@@169 $generated@@169) $generated@@560)) $generated@@560) ($generated@@85 ($generated@@360 ($generated@@323 $generated@@169 $generated@@169) $generated@@560) ($generated@@430 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@247 $generated@@560 ($generated@@430 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@169) (= (type $generated@@564) $generated@@71)) (= (type $generated@@565) $generated@@71)) ($generated@@247 $generated@@563 ($generated@@438 $generated@@564 $generated@@565))) (and (= ($generated@@302 ($generated@@360 ($generated@@341 $generated@@169 $generated@@169) $generated@@563)) $generated@@563) ($generated@@85 ($generated@@360 ($generated@@341 $generated@@169 $generated@@169) $generated@@563) ($generated@@438 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@247 $generated@@563 ($generated@@438 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@71) (= (type $generated@@567) $generated@@71)) (= (type $generated@@568) $generated@@169)) ($generated@@247 $generated@@568 ($generated@@160 $generated@@566 $generated@@567))) (and (= ($generated@@302 ($generated@@360 $generated@@89 $generated@@568)) $generated@@568) ($generated@@85 ($generated@@360 $generated@@89 $generated@@568) ($generated@@160 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@247 $generated@@568 ($generated@@160 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
 (not ($generated@@0 ($generated@@100 ($generated@@450 $generated@@570) $generated@@569))))
 :pattern ( (let (($generated@@570 (type $generated@@569)))
($generated@@100 ($generated@@450 $generated@@570) $generated@@569)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@76)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@71) (= (type $generated@@574) $generated@@71)) (and (= ($generated@@79 ($generated@@160 $generated@@573 $generated@@574)) $generated@@62) (= ($generated@@571 ($generated@@160 $generated@@573 $generated@@574)) $generated@@68)))
 :pattern ( ($generated@@160 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@89) (= ($generated@@554 ($generated@@302 $generated@@575)) ($generated@@555 $generated@@575)))
 :pattern ( ($generated@@554 ($generated@@302 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@169) ($generated@@247 $generated@@576 ($generated@@95 0))) (and (= ($generated@@302 ($generated@@360 $generated@@2 $generated@@576)) $generated@@576) ($generated@@85 ($generated@@360 ($generated@@96 $generated@@169 $generated@@4) $generated@@576) ($generated@@95 0))))
 :pattern ( ($generated@@247 $generated@@576 ($generated@@95 0)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@169) (= (type $generated@@578) $generated@@71)) ($generated@@247 $generated@@577 ($generated@@262 $generated@@578))) (and (= ($generated@@302 ($generated@@360 ($generated@@96 $generated@@169 $generated@@4) $generated@@577)) $generated@@577) ($generated@@85 ($generated@@360 ($generated@@96 $generated@@169 $generated@@4) $generated@@577) ($generated@@262 $generated@@578))))
 :pattern ( ($generated@@247 $generated@@577 ($generated@@262 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@169) (= (type $generated@@580) $generated@@71)) ($generated@@247 $generated@@579 ($generated@@267 $generated@@580))) (and (= ($generated@@302 ($generated@@360 ($generated@@96 $generated@@169 $generated@@4) $generated@@579)) $generated@@579) ($generated@@85 ($generated@@360 ($generated@@96 $generated@@169 $generated@@4) $generated@@579) ($generated@@267 $generated@@580))))
 :pattern ( ($generated@@247 $generated@@579 ($generated@@267 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@169) (= (type $generated@@582) $generated@@71)) ($generated@@247 $generated@@581 ($generated@@177 $generated@@582))) (and (= ($generated@@302 ($generated@@360 ($generated@@96 $generated@@169 $generated@@2) $generated@@581)) $generated@@581) ($generated@@85 ($generated@@360 ($generated@@96 $generated@@169 $generated@@2) $generated@@581) ($generated@@177 $generated@@582))))
 :pattern ( ($generated@@247 $generated@@581 ($generated@@177 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@169) (= (type $generated@@584) $generated@@71)) ($generated@@247 $generated@@583 ($generated@@516 $generated@@584))) (and (= ($generated@@302 ($generated@@360 ($generated@@294 $generated@@169) $generated@@583)) $generated@@583) ($generated@@85 ($generated@@360 ($generated@@294 $generated@@169) $generated@@583) ($generated@@516 $generated@@584))))
 :pattern ( ($generated@@247 $generated@@583 ($generated@@516 $generated@@584)))
)))
(assert  (=> true (=> true (= $generated@@241 ($generated@@87 $generated@@88)))))
(assert  (=> true (=> true (= $generated@@241 ($generated@@87 $generated@@88)))))
(assert (= ($generated@@79 $generated@@242) $generated@@63))
(assert (= ($generated@@571 $generated@@242) $generated@@69))
(assert (= ($generated@@79 $generated@@86) $generated@@64))
(assert (= ($generated@@571 $generated@@86) $generated@@70))
(assert (= ($generated@@79 $generated@@155) $generated@@65))
(assert (= ($generated@@571 $generated@@155) $generated@@70))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@96 $generated@@169 $generated@@2)) (= (type $generated@@586) $generated@@71)) (= (type $generated@@587) ($generated@@96 $generated@@82 $generated@@97))) (= ($generated@@94 $generated@@585 ($generated@@177 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@169) (< 0 ($generated ($generated@@100 $generated@@585 $generated@@588)))) ($generated@@279 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@100 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@94 $generated@@585 ($generated@@177 $generated@@586) $generated@@587))
)))
(assert (= $generated@@88 ($generated@@87 $generated@@88)))
(assert (= $generated@@176 ($generated@@87 $generated@@176)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@89) (= (type $generated@@590) $generated@@71)) (= (type $generated@@591) ($generated@@96 $generated@@82 $generated@@97))) (and ($generated@@254 $generated@@591) (and ($generated@@159 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@71) ($generated@@94 $generated@@589 ($generated@@160 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@94 $generated@@589 ($generated@@160 $generated@@590 $generated@@592) $generated@@591))
))))) ($generated@@279 ($generated@@167 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@279 ($generated@@167 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@89) (= (type $generated@@594) $generated@@71)) (= (type $generated@@595) ($generated@@96 $generated@@82 $generated@@97))) (and ($generated@@254 $generated@@595) (and ($generated@@159 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@71) ($generated@@94 $generated@@593 ($generated@@160 $generated@@596 $generated@@594) $generated@@595))
 :pattern ( ($generated@@94 $generated@@593 ($generated@@160 $generated@@596 $generated@@594) $generated@@595))
))))) ($generated@@279 ($generated@@168 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@279 ($generated@@168 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@169) (= (type $generated@@598) $generated@@169)) (= ($generated@@246 ($generated@@87 $generated@@597) ($generated@@87 $generated@@598)) ($generated@@87 ($generated@@246 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@246 ($generated@@87 $generated@@597) ($generated@@87 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (= ($generated@@302 ($generated@@87 $generated@@599)) ($generated@@87 ($generated@@302 $generated@@599)))
 :pattern ( ($generated@@302 ($generated@@87 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@295 (type $generated@@600))))
 (=> (and (= (type $generated@@600) ($generated@@294 $generated@@601)) (= ($generated@@293 $generated@@600) 0)) (= $generated@@600 ($generated@@292 $generated@@601))))
 :pattern ( ($generated@@293 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@603)))
 (=> (and (and (= (type $generated@@602) ($generated@@96 $generated@@605 $generated@@2)) (= (type $generated@@604) $generated@@2)) (<= 0 ($generated $generated@@604))) (= ($generated@@315 ($generated@@101 $generated@@602 $generated@@603 $generated@@604)) (+ (- ($generated@@315 $generated@@602) ($generated ($generated@@100 $generated@@602 $generated@@603))) ($generated $generated@@604)))))
 :pattern ( ($generated@@315 ($generated@@101 $generated@@602 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@96 $generated@@82 $generated@@97)) (= (type $generated@@607) $generated@@2)) ($generated@@94 $generated@@607 $generated@@46 $generated@@606))
 :pattern ( ($generated@@94 $generated@@607 $generated@@46 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@96 $generated@@82 $generated@@97)) (= (type $generated@@609) $generated@@3)) ($generated@@94 $generated@@609 $generated@@47 $generated@@608))
 :pattern ( ($generated@@94 $generated@@609 $generated@@47 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@96 $generated@@82 $generated@@97)) (= (type $generated@@611) $generated@@4)) ($generated@@94 $generated@@611 $generated@@44 $generated@@610))
 :pattern ( ($generated@@94 $generated@@611 $generated@@44 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@96 $generated@@82 $generated@@97)) (= (type $generated@@613) $generated@@474)) ($generated@@94 $generated@@613 $generated@@45 $generated@@612))
 :pattern ( ($generated@@94 $generated@@613 $generated@@45 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@96 $generated@@82 $generated@@97)) (= (type $generated@@615) $generated@@169)) ($generated@@94 $generated@@615 $generated@@48 $generated@@614))
 :pattern ( ($generated@@94 $generated@@615 $generated@@48 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@294 $generated@@169)) (= (type $generated@@617) $generated@@71)) (= ($generated@@85 $generated@@616 ($generated@@516 $generated@@617)) (forall (($generated@@618 Int) ) (!  (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@293 $generated@@616))) ($generated@@247 ($generated@@517 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@517 $generated@@616 $generated@@618))
))))
 :pattern ( ($generated@@85 $generated@@616 ($generated@@516 $generated@@617)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 Int) ) (!  (=> (= (type $generated@@620) ($generated@@294 $generated@@169)) (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@293 $generated@@620))) (< ($generated@@555 ($generated@@360 $generated@@89 ($generated@@517 $generated@@620 $generated@@621))) ($generated@@619 $generated@@620))))
 :pattern ( ($generated@@555 ($generated@@360 $generated@@89 ($generated@@517 $generated@@620 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@323 $generated@@169 $generated@@169)) (= (type $generated@@623) $generated@@71)) (= (type $generated@@624) $generated@@71)) ($generated@@85 $generated@@622 ($generated@@430 $generated@@623 $generated@@624))) (and (and ($generated@@85 ($generated@@321 $generated@@622) ($generated@@262 $generated@@623)) ($generated@@85 ($generated@@371 $generated@@622) ($generated@@262 $generated@@624))) ($generated@@85 ($generated@@404 $generated@@622) ($generated@@262 ($generated@@160 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@85 $generated@@622 ($generated@@430 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@341 $generated@@169 $generated@@169)) (= (type $generated@@626) $generated@@71)) (= (type $generated@@627) $generated@@71)) ($generated@@85 $generated@@625 ($generated@@438 $generated@@626 $generated@@627))) (and (and ($generated@@85 ($generated@@339 $generated@@625) ($generated@@267 $generated@@626)) ($generated@@85 ($generated@@382 $generated@@625) ($generated@@267 $generated@@627))) ($generated@@85 ($generated@@412 $generated@@625) ($generated@@267 ($generated@@160 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@85 $generated@@625 ($generated@@438 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@2) ($generated@@85 $generated@@628 $generated@@46))
 :pattern ( ($generated@@85 $generated@@628 $generated@@46))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@3) ($generated@@85 $generated@@629 $generated@@47))
 :pattern ( ($generated@@85 $generated@@629 $generated@@47))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@4) ($generated@@85 $generated@@630 $generated@@44))
 :pattern ( ($generated@@85 $generated@@630 $generated@@44))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@474) ($generated@@85 $generated@@631 $generated@@45))
 :pattern ( ($generated@@85 $generated@@631 $generated@@45))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@169) ($generated@@85 $generated@@632 $generated@@48))
 :pattern ( ($generated@@85 $generated@@632 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Bool)
(declare-fun $generated@@641 () Bool)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@633) ($generated@@187 $generated@@82 $generated@@4)) (= (type $generated@@634) ($generated@@96 $generated@@82 $generated@@97))) (= (type $generated@@635) $generated@@82)) (= (type $generated@@636) ($generated@@96 $generated@@82 $generated@@97))) (= (type $generated@@638) $generated@@82)) (= (type $generated@@639) $generated@@89)) (= (type $generated@@642) $generated@@82)) (= (type $generated@@643) $generated@@89)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@645  (=> (= $generated@@633 ($generated@@186 $generated@@84 $generated@@634 $generated@@60 false)) (=> (and (and (not (= $generated@@635 $generated@@84)) (and ($generated@@85 $generated@@635 $generated@@86) ($generated@@94 $generated@@635 $generated@@86 $generated@@634))) (and ($generated@@254 $generated@@636) ($generated@@637 $generated@@636))) (=> (and (and (and (not (= $generated@@638 $generated@@84)) (and ($generated@@85 $generated@@638 $generated@@86) ($generated@@94 $generated@@638 $generated@@86 $generated@@636))) (not ($generated@@0 ($generated@@102 ($generated@@100 $generated@@634 $generated@@638) $generated@@60)))) (and (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@82) (=> (and (not (= $generated@@646 $generated@@84)) ($generated@@0 ($generated@@102 ($generated@@100 $generated@@634 $generated@@646) $generated@@60))) (= ($generated@@100 $generated@@636 $generated@@646) ($generated@@100 $generated@@634 $generated@@646))))
 :pattern ( ($generated@@100 $generated@@636 $generated@@646))
)) ($generated@@151 $generated@@634 $generated@@636))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@638 $generated@@84))) (=> (not (= $generated@@638 $generated@@84)) (=> ($generated@@94 $generated@@638 $generated@@155 $generated@@636) (=> (and (and ($generated@@83 $generated@@638) ($generated@@83 $generated@@638)) (and (= $generated@@639 ($generated@@81 $generated@@638)) $generated@@640)) (=> (and (and (and ($generated@@392 $generated@@639) ($generated@@392 ($generated@@87 $generated@@241))) $generated@@640) (= (ControlFlow 0 2) (- 0 1))) ($generated@@259 $generated@@639 $generated@@241))))))))))))
(let (($generated@@647  (=> (and (and ($generated@@254 $generated@@634) ($generated@@637 $generated@@634)) (and (=> $generated@@641 (and ($generated@@85 $generated@@642 $generated@@86) ($generated@@94 $generated@@642 $generated@@86 $generated@@634))) true)) (=> (and (and (and ($generated@@85 $generated@@643 $generated@@242) ($generated@@94 $generated@@643 $generated@@242 $generated@@634)) true) (and (= 0 $generated@@644) (= (ControlFlow 0 5) 2))) $generated@@645))))
$generated@@647)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
