(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 Int) ) (! (= ($generated@@179 $generated@@180 $generated@@181) (* $generated@@180 $generated@@181))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@182))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@183)) ($generated@@164 ($generated@@171 $generated@@183)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@183)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 (T@U) Bool)
(declare-fun $generated@@205 () Int)
(assert  (and (and (= (type $generated@@198) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@199) $generated@@46)) (= (type $generated@@200) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 49) (let (($generated@@206 true))
(let (($generated@@207  (=> (and (<= 111 $generated@@184) (= (ControlFlow 0 20) 18)) $generated@@206)))
(let (($generated@@208  (=> (and (< $generated@@184 111) (= (ControlFlow 0 19) 18)) $generated@@206)))
(let (($generated@@209  (=> (or (and (<= $generated@@185 ($generated@@162 111)) (>= $generated@@186 ($generated@@162 1))) (and (= $generated@@185 $generated@@184) (= $generated@@186 ($generated@@162 1)))) (and (=> (= (ControlFlow 0 21) 19) $generated@@208) (=> (= (ControlFlow 0 21) 20) $generated@@207)))))
(let (($generated@@210  (=> (and (not (= $generated@@185 $generated@@184)) (= (ControlFlow 0 24) 21)) $generated@@209)))
(let (($generated@@211  (=> (and (= $generated@@185 $generated@@184) (= (ControlFlow 0 23) 21)) $generated@@209)))
(let (($generated@@212  (=> (not (and (<= $generated@@185 ($generated@@162 111)) (>= $generated@@186 ($generated@@162 1)))) (and (=> (= (ControlFlow 0 25) 23) $generated@@211) (=> (= (ControlFlow 0 25) 24) $generated@@210)))))
(let (($generated@@213  (=> (and (and (<= $generated@@185 ($generated@@162 111)) (>= $generated@@186 ($generated@@162 1))) (= (ControlFlow 0 22) 21)) $generated@@209)))
(let (($generated@@214  (=> (< ($generated@@162 111) $generated@@185) (and (=> (= (ControlFlow 0 27) 25) $generated@@212) (=> (= (ControlFlow 0 27) 22) $generated@@213)))))
(let (($generated@@215  (=> (<= $generated@@185 ($generated@@162 111)) (and (=> (= (ControlFlow 0 26) 25) $generated@@212) (=> (= (ControlFlow 0 26) 22) $generated@@213)))))
(let (($generated@@216  (=> (=> $generated@@187 (=> (and (and (<= $generated@@184 ($generated@@162 100)) (< 100 $generated@@185)) (= $generated@@186 ($generated@@162 1))) (= $generated@@185 ($generated@@162 101)))) (and (=> (= (ControlFlow 0 28) 26) $generated@@215) (=> (= (ControlFlow 0 28) 27) $generated@@214)))))
(let (($generated@@217  (=> (and (not (and (and (<= $generated@@184 ($generated@@162 100)) (< 100 $generated@@185)) (= $generated@@186 ($generated@@162 1)))) (= (ControlFlow 0 31) 28)) $generated@@216)))
(let (($generated@@218  (=> (and (and (and (<= $generated@@184 ($generated@@162 100)) (< 100 $generated@@185)) (= $generated@@186 ($generated@@162 1))) (= (ControlFlow 0 30) 28)) $generated@@216)))
(let (($generated@@219  (=> (not (and (<= $generated@@184 ($generated@@162 100)) (< 100 $generated@@185))) (and (=> (= (ControlFlow 0 33) 30) $generated@@218) (=> (= (ControlFlow 0 33) 31) $generated@@217)))))
(let (($generated@@220  (=> (and (<= $generated@@184 ($generated@@162 100)) (< 100 $generated@@185)) (and (=> (= (ControlFlow 0 32) 30) $generated@@218) (=> (= (ControlFlow 0 32) 31) $generated@@217)))))
(let (($generated@@221  (=> (< ($generated@@162 100) $generated@@184) (and (=> (= (ControlFlow 0 35) 32) $generated@@220) (=> (= (ControlFlow 0 35) 33) $generated@@219)))))
(let (($generated@@222  (=> (<= $generated@@184 ($generated@@162 100)) (and (=> (= (ControlFlow 0 34) 32) $generated@@220) (=> (= (ControlFlow 0 34) 33) $generated@@219)))))
(let (($generated@@223  (=> $generated@@187 (and (=> (= (ControlFlow 0 36) 34) $generated@@222) (=> (= (ControlFlow 0 36) 35) $generated@@221)))))
(let (($generated@@224  (=> (and (not $generated@@187) (= (ControlFlow 0 29) 28)) $generated@@216)))
(let (($generated@@225  (=> (=> $generated@@187 (=> (< 100 $generated@@184) (= $generated@@185 $generated@@184))) (and (=> (= (ControlFlow 0 37) 36) $generated@@223) (=> (= (ControlFlow 0 37) 29) $generated@@224)))))
(let (($generated@@226  (=> (and (<= $generated@@184 100) (= (ControlFlow 0 40) 37)) $generated@@225)))
(let (($generated@@227  (=> (and (< 100 $generated@@184) (= (ControlFlow 0 39) 37)) $generated@@225)))
(let (($generated@@228  (=> $generated@@187 (and (=> (= (ControlFlow 0 41) 39) $generated@@227) (=> (= (ControlFlow 0 41) 40) $generated@@226)))))
(let (($generated@@229  (=> (and (not $generated@@187) (= (ControlFlow 0 38) 37)) $generated@@225)))
(let (($generated@@230  (=> (not $generated@@188) (and (=> (= (ControlFlow 0 42) 41) $generated@@228) (=> (= (ControlFlow 0 42) 38) $generated@@229)))))
(let (($generated@@231  (=> (= (ControlFlow 0 11) (- 0 10)) (=> $generated@@187 (= $generated@@189 (ite (> $generated@@184 101) (- $generated@@184 10) 91))))))
(let (($generated@@232  (=> (= $generated@@190 (- $generated@@185 10)) (=> (and (= $generated@@189 $generated@@190) (= (ControlFlow 0 12) 11)) $generated@@231))))
(let (($generated@@233  (=> (and (= $generated@@186 ($generated@@162 1)) (= (ControlFlow 0 14) 12)) $generated@@232)))
(let (($generated@@234  (=> (and (not ($generated@@0 ($generated@@164 ($generated@@11 true)))) (= (ControlFlow 0 13) 12)) $generated@@232)))
(let (($generated@@235  (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (<= 0 $generated@@191) (= (+ (+ ($generated@@179 ($generated@@162 (- 0 2)) $generated@@192) ($generated@@179 ($generated@@162 21) $generated@@193)) ($generated@@179 ($generated@@162 2) (ite (< $generated@@184 111) 111 $generated@@184))) $generated@@191))) (=> (or (<= 0 $generated@@191) (= (+ (+ ($generated@@179 ($generated@@162 (- 0 2)) $generated@@192) ($generated@@179 ($generated@@162 21) $generated@@193)) ($generated@@179 ($generated@@162 2) (ite (< $generated@@184 111) 111 $generated@@184))) $generated@@191)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (< (+ (+ ($generated@@179 ($generated@@162 (- 0 2)) $generated@@192) ($generated@@179 ($generated@@162 21) $generated@@193)) ($generated@@179 ($generated@@162 2) (ite (< $generated@@184 111) 111 $generated@@184))) $generated@@191)) (=> (< (+ (+ ($generated@@179 ($generated@@162 (- 0 2)) $generated@@192) ($generated@@179 ($generated@@162 21) $generated@@193)) ($generated@@179 ($generated@@162 2) (ite (< $generated@@184 111) 111 $generated@@184))) $generated@@191) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> $generated@@188 (=> $generated@@187 (=> (< 100 $generated@@184) (= $generated@@192 $generated@@184))))) (=> (=> $generated@@188 (=> $generated@@187 (=> (< 100 $generated@@184) (= $generated@@192 $generated@@184)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@188 (=> $generated@@187 (=> (and (and (<= $generated@@184 ($generated@@162 100)) (< 100 $generated@@192)) (= $generated@@193 ($generated@@162 1))) (= $generated@@192 ($generated@@162 101)))))) (=> (=> $generated@@188 (=> $generated@@187 (=> (and (and (<= $generated@@184 ($generated@@162 100)) (< 100 $generated@@192)) (= $generated@@193 ($generated@@162 1))) (= $generated@@192 ($generated@@162 101))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@188 (or (and (<= $generated@@192 ($generated@@162 111)) (>= $generated@@193 ($generated@@162 1))) (and (= $generated@@192 $generated@@184) (= $generated@@193 ($generated@@162 1))))))))))))))))
(let (($generated@@236  (=> (and (not (= $generated@@186 ($generated@@162 1))) (= $generated@@194 (- $generated@@185 10))) (=> (and (and (= $generated@@195 (- $generated@@186 1)) (= $generated@@192 $generated@@194)) (and (= $generated@@193 $generated@@195) (= (ControlFlow 0 9) 3))) $generated@@235))))
(let (($generated@@237  (=> (> $generated@@185 100) (and (=> (= (ControlFlow 0 15) 14) $generated@@233) (=> (= (ControlFlow 0 15) 9) $generated@@236)))))
(let (($generated@@238  (=> (and (>= 100 $generated@@185) (= $generated@@196 (+ $generated@@185 11))) (=> (and (and (= $generated@@197 (+ $generated@@186 1)) (= $generated@@192 $generated@@196)) (and (= $generated@@193 $generated@@197) (= (ControlFlow 0 8) 3))) $generated@@235))))
(let (($generated@@239  (=> (and ($generated@@0 ($generated@@164 ($generated@@11 true))) (= $generated@@191 (+ (+ ($generated@@179 ($generated@@162 (- 0 2)) $generated@@185) ($generated@@179 ($generated@@162 21) $generated@@186)) ($generated@@179 ($generated@@162 2) (ite (< $generated@@184 111) 111 $generated@@184))))) (and (=> (= (ControlFlow 0 16) 15) $generated@@237) (=> (= (ControlFlow 0 16) 8) $generated@@238)))))
(let (($generated@@240  (=> $generated@@188 (and (=> (= (ControlFlow 0 17) 13) $generated@@234) (=> (= (ControlFlow 0 17) 16) $generated@@239)))))
(let (($generated@@241  (and (=> (= (ControlFlow 0 43) 42) $generated@@230) (=> (= (ControlFlow 0 43) 17) $generated@@240))))
(let (($generated@@242 true))
(let (($generated@@243  (=> (and (and (and (and (not false) (<= 1 $generated@@186)) (=> $generated@@188 true)) (and (=> $generated@@188 (=> $generated@@187 (=> (< 100 $generated@@184) (= $generated@@185 $generated@@184)))) (=> $generated@@188 true))) (and (and (and (=> $generated@@188 (=> $generated@@187 (=> (and (and (<= $generated@@184 ($generated@@162 100)) (< 100 $generated@@185)) (= $generated@@186 ($generated@@162 1))) (= $generated@@185 ($generated@@162 101))))) (=> $generated@@188 true)) (and (=> $generated@@188 (or (and (<= $generated@@185 ($generated@@162 111)) (>= $generated@@186 ($generated@@162 1))) (and (= $generated@@185 $generated@@184) (= $generated@@186 ($generated@@162 1))))) (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@46) (=> (and (not (= $generated@@244 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@244) $generated@@50))) (= ($generated@@49 $generated@@198 $generated@@244) ($generated@@49 $generated@@198 $generated@@244))))
 :pattern ( ($generated@@49 $generated@@198 $generated@@244))
)))) (and (and ($generated@@44 $generated@@198 $generated@@198) (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@55 (type $generated@@246))))
 (=> (and (and (= (type $generated@@245) $generated@@46) (= (type $generated@@246) ($generated@@54 $generated@@247))) (and (not (= $generated@@245 $generated@@199)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@198 $generated@@245) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@198 $generated@@245) $generated@@246) ($generated@@48 ($generated@@49 $generated@@198 $generated@@245) $generated@@246)) ($generated@@0 ($generated@@106 $generated@@200 $generated@@245 $generated@@246)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@198 $generated@@245) $generated@@246))
))) (and (<= (+ (+ ($generated@@179 ($generated@@162 (- 0 2)) $generated@@185) ($generated@@179 ($generated@@162 21) $generated@@186)) ($generated@@179 ($generated@@162 2) (ite (< $generated@@184 111) 111 $generated@@184))) $generated@@201) (=> (= (+ (+ ($generated@@179 ($generated@@162 (- 0 2)) $generated@@185) ($generated@@179 ($generated@@162 21) $generated@@186)) ($generated@@179 ($generated@@162 2) (ite (< $generated@@184 111) 111 $generated@@184))) $generated@@201) true))))) (and (=> (= (ControlFlow 0 44) 1) $generated@@242) (=> (= (ControlFlow 0 44) 43) $generated@@241)))))
(let (($generated@@248  (=> (= $generated@@200 ($generated@@107 $generated@@199 $generated@@198 $generated@@50 false)) (=> (and (= $generated@@202 ($generated@@162 1)) (= $generated@@201 (+ (+ ($generated@@179 ($generated@@162 (- 0 2)) $generated@@184) ($generated@@179 ($generated@@162 21) $generated@@202)) ($generated@@179 ($generated@@162 2) (ite (< $generated@@184 111) 111 $generated@@184))))) (and (=> (= (ControlFlow 0 45) (- 0 48)) (=> $generated@@188 (=> $generated@@187 (=> (< 100 $generated@@184) (= $generated@@184 $generated@@184))))) (=> (=> $generated@@188 (=> $generated@@187 (=> (< 100 $generated@@184) (= $generated@@184 $generated@@184)))) (and (=> (= (ControlFlow 0 45) (- 0 47)) (=> $generated@@188 (=> $generated@@187 (=> (and (and (<= $generated@@184 ($generated@@162 100)) (< 100 $generated@@184)) (= $generated@@202 ($generated@@162 1))) (= $generated@@184 ($generated@@162 101)))))) (=> (=> $generated@@188 (=> $generated@@187 (=> (and (and (<= $generated@@184 ($generated@@162 100)) (< 100 $generated@@184)) (= $generated@@202 ($generated@@162 1))) (= $generated@@184 ($generated@@162 101))))) (and (=> (= (ControlFlow 0 45) (- 0 46)) (=> $generated@@188 (or (and (<= $generated@@184 ($generated@@162 111)) (>= $generated@@202 ($generated@@162 1))) (and (= $generated@@184 $generated@@184) (= $generated@@202 ($generated@@162 1)))))) (=> (=> $generated@@188 (or (and (<= $generated@@184 ($generated@@162 111)) (>= $generated@@202 ($generated@@162 1))) (and (= $generated@@184 $generated@@184) (= $generated@@202 ($generated@@162 1))))) (=> (= (ControlFlow 0 45) 44) $generated@@243)))))))))))
(let (($generated@@249  (=> (and (and ($generated@@203 $generated@@198) ($generated@@204 $generated@@198)) (and (= 0 $generated@@205) (= (ControlFlow 0 49) 45))) $generated@@248)))
$generated@@249)))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@T T@U) T@U)
(declare-fun $generated@@173 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@162 $generated@@163) $generated@@163)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 (type $generated@@165)))
(= (type ($generated@@164 $generated@@165)) $generated@@166))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@164 $generated@@167) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@168) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@169) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@170) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@168 $generated@@170))) (and ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))) ($generated@@44 $generated@@168 $generated@@170))
 :pattern ( ($generated@@44 $generated@@168 $generated@@169) ($generated@@44 $generated@@169 $generated@@170))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 11) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@U) ) (! (= (type ($generated@@172 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@172 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(= ($generated@@172 $generated@@178 ($generated@@171 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@171 $generated@@177))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))) ($generated@@164 ($generated@@171 ($generated@@8 $generated@@179))))
 :pattern ( ($generated@@171 ($generated@@8 ($generated@@162 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@171 ($generated@@164 $generated@@180)) ($generated@@164 ($generated@@171 $generated@@180)))
 :pattern ( ($generated@@171 ($generated@@164 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Bool)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () Bool)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 () Int)
(assert  (and (and (= (type $generated@@191) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@192) $generated@@46)) (= (type $generated@@193) ($generated@@108 $generated@@46 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 50) (let (($generated@@204 true))
(let (($generated@@205  (=> (and (< $generated@@181 ($generated@@162 1)) (= (ControlFlow 0 43) 41)) $generated@@204)))
(let (($generated@@206  (=> (and (<= ($generated@@162 1) $generated@@181) (= (ControlFlow 0 42) 41)) $generated@@204)))
(let (($generated@@207  (=> (not $generated@@182) (and (=> (= (ControlFlow 0 44) 42) $generated@@206) (=> (= (ControlFlow 0 44) 43) $generated@@205)))))
(let (($generated@@208 true))
(let (($generated@@209  (=> (and (< $generated@@183 ($generated@@162 1)) (= (ControlFlow 0 33) 31)) $generated@@208)))
(let (($generated@@210  (=> (and (<= ($generated@@162 1) $generated@@183) (= (ControlFlow 0 32) 31)) $generated@@208)))
(let (($generated@@211  (=> (not $generated@@184) (and (=> (= (ControlFlow 0 34) 32) $generated@@210) (=> (= (ControlFlow 0 34) 33) $generated@@209)))))
(let (($generated@@212 true))
(let (($generated@@213  (=> (and (< $generated@@183 ($generated@@162 1)) (= (ControlFlow 0 23) 21)) $generated@@212)))
(let (($generated@@214  (=> (and (<= ($generated@@162 1) $generated@@183) (= (ControlFlow 0 22) 21)) $generated@@212)))
(let (($generated@@215  (=> (not $generated@@185) (and (=> (= (ControlFlow 0 24) 22) $generated@@214) (=> (= (ControlFlow 0 24) 23) $generated@@213)))))
(let (($generated@@216  (=> (> $generated@@186 $generated@@183) (=> (and (= $generated@@187 (- $generated@@186 $generated@@183)) (= $generated@@188 (- $generated@@186 $generated@@183))) (and (=> (= (ControlFlow 0 16) (- 0 19)) (or (<= 0 $generated@@187) (= (- $generated@@188 $generated@@183) $generated@@187))) (=> (or (<= 0 $generated@@187) (= (- $generated@@188 $generated@@183) $generated@@187)) (and (=> (= (ControlFlow 0 16) (- 0 18)) (< (- $generated@@188 $generated@@183) $generated@@187)) (=> (< (- $generated@@188 $generated@@183) $generated@@187) (and (=> (= (ControlFlow 0 16) (- 0 17)) (=> $generated@@185 (<= ($generated@@162 1) $generated@@183))) (=> (=> $generated@@185 (<= ($generated@@162 1) $generated@@183)) (=> (= (ControlFlow 0 16) (- 0 15)) (=> $generated@@185 (<= ($generated@@162 1) $generated@@188)))))))))))))
(let (($generated@@217  (=> (>= $generated@@183 $generated@@186) (and (=> (= (ControlFlow 0 11) (- 0 14)) (or (<= 0 $generated@@189) (= (+ $generated@@183 $generated@@186) $generated@@189))) (=> (or (<= 0 $generated@@189) (= (+ $generated@@183 $generated@@186) $generated@@189)) (and (=> (= (ControlFlow 0 11) (- 0 13)) (< (+ $generated@@183 $generated@@186) $generated@@189)) (=> (< (+ $generated@@183 $generated@@186) $generated@@189) (and (=> (= (ControlFlow 0 11) (- 0 12)) (=> $generated@@182 (<= ($generated@@162 1) $generated@@183))) (=> (=> $generated@@182 (<= ($generated@@162 1) $generated@@183)) (=> (= (ControlFlow 0 11) (- 0 10)) (=> $generated@@182 (<= ($generated@@162 1) $generated@@186))))))))))))
(let (($generated@@218  (=> $generated@@185 (and (=> (= (ControlFlow 0 20) 11) $generated@@217) (=> (= (ControlFlow 0 20) 16) $generated@@216)))))
(let (($generated@@219  (and (=> (= (ControlFlow 0 25) 24) $generated@@215) (=> (= (ControlFlow 0 25) 20) $generated@@218))))
(let (($generated@@220 true))
(let (($generated@@221  (=> (and (and (and (and (not false) (<= 2 $generated@@190)) $generated@@182) $generated@@184) (and (and (and (=> $generated@@185 true) (=> $generated@@185 (<= ($generated@@162 1) $generated@@183))) (and (=> $generated@@185 (<= ($generated@@162 1) $generated@@186)) (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@46) (=> (and (not (= $generated@@222 $generated@@192)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@191 $generated@@222) $generated@@50))) (= ($generated@@49 $generated@@191 $generated@@222) ($generated@@49 $generated@@191 $generated@@222))))
 :pattern ( ($generated@@49 $generated@@191 $generated@@222))
)))) (and (and ($generated@@44 $generated@@191 $generated@@191) (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@55 (type $generated@@224))))
 (=> (and (and (= (type $generated@@223) $generated@@46) (= (type $generated@@224) ($generated@@54 $generated@@225))) (and (not (= $generated@@223 $generated@@192)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@191 $generated@@223) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@191 $generated@@223) $generated@@224) ($generated@@48 ($generated@@49 $generated@@191 $generated@@223) $generated@@224)) ($generated@@0 ($generated@@106 $generated@@193 $generated@@223 $generated@@224)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@191 $generated@@223) $generated@@224))
))) (and (<= (- $generated@@186 $generated@@183) $generated@@194) (=> (= (- $generated@@186 $generated@@183) $generated@@194) true))))) (and (=> (= (ControlFlow 0 26) 9) $generated@@220) (=> (= (ControlFlow 0 26) 25) $generated@@219)))))
(let (($generated@@226  (=> (and (>= $generated@@195 $generated@@183) (= $generated@@194 (- $generated@@195 $generated@@183))) (and (=> (= (ControlFlow 0 27) (- 0 29)) (=> $generated@@185 (<= ($generated@@162 1) $generated@@183))) (=> (=> $generated@@185 (<= ($generated@@162 1) $generated@@183)) (and (=> (= (ControlFlow 0 27) (- 0 28)) (=> $generated@@185 (<= ($generated@@162 1) $generated@@195))) (=> (=> $generated@@185 (<= ($generated@@162 1) $generated@@195)) (=> (= (ControlFlow 0 27) 26) $generated@@221))))))))
(let (($generated@@227  (=> (> $generated@@183 $generated@@195) (=> (and (= $generated@@196 (- $generated@@183 $generated@@195)) (= $generated@@197 (- $generated@@183 $generated@@195))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (<= 0 $generated@@196) (= (- $generated@@197 $generated@@195) $generated@@196))) (=> (or (<= 0 $generated@@196) (= (- $generated@@197 $generated@@195) $generated@@196)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (< (- $generated@@197 $generated@@195) $generated@@196)) (=> (< (- $generated@@197 $generated@@195) $generated@@196) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@184 (<= ($generated@@162 1) $generated@@197))) (=> (=> $generated@@184 (<= ($generated@@162 1) $generated@@197)) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@184 (<= ($generated@@162 1) $generated@@195)))))))))))))
(let (($generated@@228  (=> $generated@@184 (and (=> (= (ControlFlow 0 30) 27) $generated@@226) (=> (= (ControlFlow 0 30) 5) $generated@@227)))))
(let (($generated@@229  (and (=> (= (ControlFlow 0 35) 34) $generated@@211) (=> (= (ControlFlow 0 35) 30) $generated@@228))))
(let (($generated@@230 true))
(let (($generated@@231  (=> (and (and (not false) (<= 2 $generated@@190)) $generated@@182) (=> (and (and (and (=> $generated@@184 true) (=> $generated@@184 (<= ($generated@@162 1) $generated@@183))) (and (=> $generated@@184 (<= ($generated@@162 1) $generated@@195)) (forall (($generated@@232 T@U) ) (!  (=> (= (type $generated@@232) $generated@@46) (=> (and (not (= $generated@@232 $generated@@192)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@191 $generated@@232) $generated@@50))) (= ($generated@@49 $generated@@191 $generated@@232) ($generated@@49 $generated@@191 $generated@@232))))
 :pattern ( ($generated@@49 $generated@@191 $generated@@232))
)))) (and (and ($generated@@44 $generated@@191 $generated@@191) (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@55 (type $generated@@234))))
 (=> (and (and (= (type $generated@@233) $generated@@46) (= (type $generated@@234) ($generated@@54 $generated@@235))) (and (not (= $generated@@233 $generated@@192)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@191 $generated@@233) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@191 $generated@@233) $generated@@234) ($generated@@48 ($generated@@49 $generated@@191 $generated@@233) $generated@@234)) ($generated@@0 ($generated@@106 $generated@@193 $generated@@233 $generated@@234)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@191 $generated@@233) $generated@@234))
))) (and (<= (- $generated@@183 $generated@@195) $generated@@198) (=> (= (- $generated@@183 $generated@@195) $generated@@198) true)))) (and (=> (= (ControlFlow 0 36) 3) $generated@@230) (=> (= (ControlFlow 0 36) 35) $generated@@229))))))
(let (($generated@@236  (=> (not (= $generated@@181 $generated@@195)) (=> (and (= $generated@@189 (+ $generated@@181 $generated@@195)) (= $generated@@198 (- $generated@@181 $generated@@195))) (and (=> (= (ControlFlow 0 37) (- 0 39)) (=> $generated@@184 (<= ($generated@@162 1) $generated@@181))) (=> (=> $generated@@184 (<= ($generated@@162 1) $generated@@181)) (and (=> (= (ControlFlow 0 37) (- 0 38)) (=> $generated@@184 (<= ($generated@@162 1) $generated@@195))) (=> (=> $generated@@184 (<= ($generated@@162 1) $generated@@195)) (=> (= (ControlFlow 0 37) 36) $generated@@231)))))))))
(let (($generated@@237 true))
(let (($generated@@238  (=> $generated@@182 (and (=> (= (ControlFlow 0 40) 2) $generated@@237) (=> (= (ControlFlow 0 40) 37) $generated@@236)))))
(let (($generated@@239  (and (=> (= (ControlFlow 0 45) 44) $generated@@207) (=> (= (ControlFlow 0 45) 40) $generated@@238))))
(let (($generated@@240 true))
(let (($generated@@241  (=> (and (not false) (<= 2 $generated@@190)) (=> (and (and (and (=> $generated@@182 true) (=> $generated@@182 (<= ($generated@@162 1) $generated@@181))) (and (=> $generated@@182 (<= ($generated@@162 1) $generated@@195)) (forall (($generated@@242 T@U) ) (!  (=> (= (type $generated@@242) $generated@@46) (=> (and (not (= $generated@@242 $generated@@192)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@191 $generated@@242) $generated@@50))) (= ($generated@@49 $generated@@191 $generated@@242) ($generated@@49 $generated@@191 $generated@@242))))
 :pattern ( ($generated@@49 $generated@@191 $generated@@242))
)))) (and (and ($generated@@44 $generated@@191 $generated@@191) (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@55 (type $generated@@244))))
 (=> (and (and (= (type $generated@@243) $generated@@46) (= (type $generated@@244) ($generated@@54 $generated@@245))) (and (not (= $generated@@243 $generated@@192)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@191 $generated@@243) $generated@@50)))) (or (= ($generated@@48 ($generated@@49 $generated@@191 $generated@@243) $generated@@244) ($generated@@48 ($generated@@49 $generated@@191 $generated@@243) $generated@@244)) ($generated@@0 ($generated@@106 $generated@@193 $generated@@243 $generated@@244)))))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@191 $generated@@243) $generated@@244))
))) (and (<= (+ $generated@@181 $generated@@195) $generated@@190) (=> (= (+ $generated@@181 $generated@@195) $generated@@190) true)))) (and (=> (= (ControlFlow 0 46) 1) $generated@@240) (=> (= (ControlFlow 0 46) 45) $generated@@239))))))
(let (($generated@@246  (=> (and (= $generated@@193 ($generated@@107 $generated@@192 $generated@@191 $generated@@50 false)) (= $generated@@190 (+ $generated@@199 $generated@@200))) (and (=> (= (ControlFlow 0 47) (- 0 49)) (=> $generated@@182 (<= ($generated@@162 1) $generated@@199))) (=> (=> $generated@@182 (<= ($generated@@162 1) $generated@@199)) (and (=> (= (ControlFlow 0 47) (- 0 48)) (=> $generated@@182 (<= ($generated@@162 1) $generated@@200))) (=> (=> $generated@@182 (<= ($generated@@162 1) $generated@@200)) (=> (= (ControlFlow 0 47) 46) $generated@@241))))))))
(let (($generated@@247  (=> (and ($generated@@201 $generated@@191) ($generated@@202 $generated@@191)) (=> (and (and (= 0 $generated@@203) (<= ($generated@@162 1) $generated@@199)) (and (<= ($generated@@162 1) $generated@@200) (= (ControlFlow 0 50) 47))) $generated@@246))))
$generated@@247)))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@208 (Int) Int)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@214 (T@U T@U T@U) Bool)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@226 (T@T) T@U)
(declare-fun $generated@@227 (T@U) Int)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@260 (T@T T@T) T@U)
(declare-fun $generated@@261 (T@T T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T T@T) T@U)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@364 (T@U T@U) T@U)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@383 (T@T) T@U)
(declare-fun $generated@@407 () T@T)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U Int) T@U)
(declare-fun $generated@@461 (T@U) Int)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@512 (T@U T@U T@U) T@U)
(declare-fun $generated@@513 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@514 (T@T T@T) T@T)
(declare-fun $generated@@515 (T@T) T@T)
(declare-fun $generated@@516 (T@T) T@T)
(declare-fun $generated@@517 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@619 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@80)) (and (not (= $generated@@146 $generated@@137)) (= ($generated@@138 $generated@@146) ($generated@@136 $generated@@145)))) ($generated@@139 ($generated@@8 ($generated@@144 $generated@@146)) $generated@@46))
 :pattern ( ($generated@@144 $generated@@146) ($generated@@136 $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@149) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@67) (= (type $generated@@152) $generated@@80)) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@152 ($generated@@136 $generated@@151) $generated@@153)  (or (= $generated@@152 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@152 ($generated@@136 $generated@@151) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@67) (= (type $generated@@156) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@157) $generated@@80)) (and (and ($generated@@154 $generated@@156) (and (not (= $generated@@157 $generated@@137)) (= ($generated@@138 $generated@@157) ($generated@@136 $generated@@155)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@156 $generated@@157) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@157)) $generated@@46 $generated@@156))
 :pattern ( ($generated@@135 $generated@@157) ($generated@@86 ($generated@@84 $generated@@156 $generated@@157) $generated@@60) ($generated@@136 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@160) $generated@@80)) (and (and ($generated@@154 $generated@@159) (and (not (= $generated@@160 $generated@@137)) (= ($generated@@138 $generated@@160) ($generated@@136 $generated@@158)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@159 $generated@@160) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@144 $generated@@160)) $generated@@46 $generated@@159))
 :pattern ( ($generated@@144 $generated@@160) ($generated@@86 ($generated@@84 $generated@@159 $generated@@160) $generated@@60) ($generated@@136 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@139 $generated@@161 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@161 ($generated@@78 0)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@164) $generated@@67) (= (type $generated@@165) $generated@@80)) (= (type $generated@@166) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@165 ($generated@@162 $generated@@164) $generated@@166) ($generated@@77 $generated@@165 ($generated@@136 $generated@@164) $generated@@166)))
 :pattern ( ($generated@@77 $generated@@165 ($generated@@162 $generated@@164) $generated@@166))
)))
(assert  (and (= ($generated@@1 $generated@@169) 14) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@170 $generated@@171)) $generated@@67)
 :pattern ( ($generated@@168 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@67) (= (type $generated@@173) $generated@@67)) (= (type $generated@@174) $generated@@169)) ($generated@@139 $generated@@174 ($generated@@168 $generated@@172 $generated@@173))) ($generated@@167 $generated@@174))
 :pattern ( ($generated@@167 $generated@@174) ($generated@@139 $generated@@174 ($generated@@168 $generated@@172 $generated@@173)))
)))
(assert  (and (and (= ($generated@@1 $generated@@178) 15) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@176 $generated@@179))
))) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@178)
 :pattern ( ($generated@@177 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@169) (= (type $generated@@182) $generated@@169)) true) (= ($generated@@175 $generated@@181 $generated@@182)  (and (= ($generated@@176 $generated@@181) ($generated@@176 $generated@@182)) (= ($generated@@177 $generated@@181) ($generated@@177 $generated@@182)))))
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@67)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@79 $generated@@178 $generated@@2)) (= (type $generated@@187) $generated@@67)) ($generated@@139 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@139 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= (type ($generated@@188 $generated@@190 $generated@@191)) $generated@@169)
 :pattern ( ($generated@@188 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (and (= (type $generated@@192) $generated@@67) (= (type $generated@@193) $generated@@67)) (= (type $generated@@194) $generated@@178)) (= (type $generated@@195) $generated@@178)) (= ($generated@@139 ($generated@@188 $generated@@194 $generated@@195) ($generated@@168 $generated@@192 $generated@@193))  (and ($generated@@189 $generated@@194 $generated@@192) ($generated@@189 $generated@@195 $generated@@193))))
 :pattern ( ($generated@@139 ($generated@@188 $generated@@194 $generated@@195) ($generated@@168 $generated@@192 $generated@@193)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (= (type $generated@@196) $generated@@169) (= (type $generated@@197) $generated@@169)) (= ($generated@@175 $generated@@196 $generated@@197) (= $generated@@196 $generated@@197)))
 :pattern ( ($generated@@175 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@198 $generated@@199)) $generated@@67)
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (= (type $generated@@200) ($generated@@79 $generated@@178 $generated@@4)) (= (type $generated@@201) $generated@@67)) (= ($generated@@139 $generated@@200 ($generated@@198 $generated@@201)) (forall (($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@178) ($generated@@0 ($generated@@84 $generated@@200 $generated@@202))) ($generated@@189 $generated@@202 $generated@@201))
 :pattern ( ($generated@@84 $generated@@200 $generated@@202))
))))
 :pattern ( ($generated@@139 $generated@@200 ($generated@@198 $generated@@201)))
)))
(assert (forall (($generated@@204 T@U) ) (! (= (type ($generated@@203 $generated@@204)) $generated@@67)
 :pattern ( ($generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (= (type $generated@@205) ($generated@@79 $generated@@178 $generated@@4)) (= (type $generated@@206) $generated@@67)) (= ($generated@@139 $generated@@205 ($generated@@203 $generated@@206)) (forall (($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@207) $generated@@178) ($generated@@0 ($generated@@84 $generated@@205 $generated@@207))) ($generated@@189 $generated@@207 $generated@@206))
 :pattern ( ($generated@@84 $generated@@205 $generated@@207))
))))
 :pattern ( ($generated@@139 $generated@@205 ($generated@@203 $generated@@206)))
)))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@208 $generated@@209) $generated@@209)
 :pattern ( ($generated@@208 $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ) (! (let (($generated@@212 (type $generated@@211)))
(= (type ($generated@@210 $generated@@211)) $generated@@212))
 :pattern ( ($generated@@210 $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ) (! (= ($generated@@210 $generated@@213) $generated@@213)
 :pattern ( ($generated@@210 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@215) $generated@@67) (= (type $generated@@216) $generated@@67)) (= (type $generated@@217) $generated@@178)) (= (type $generated@@218) $generated@@178)) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@154 $generated@@219)) (= ($generated@@77 ($generated@@188 $generated@@217 $generated@@218) ($generated@@168 $generated@@215 $generated@@216) $generated@@219)  (and ($generated@@214 $generated@@217 $generated@@215 $generated@@219) ($generated@@214 $generated@@218 $generated@@216 $generated@@219))))
 :pattern ( ($generated@@77 ($generated@@188 $generated@@217 $generated@@218) ($generated@@168 $generated@@215 $generated@@216) $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (! (= (type ($generated@@220 $generated@@221)) $generated@@71)
 :pattern ( ($generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@169) (= ($generated@@167 $generated@@222) (= ($generated@@220 $generated@@222) $generated@@63)))
 :pattern ( ($generated@@167 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@169) ($generated@@167 $generated@@223)) (exists (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (and (and (= (type $generated@@224) $generated@@178) (= (type $generated@@225) $generated@@178)) (= $generated@@223 ($generated@@188 $generated@@224 $generated@@225)))
 :no-pattern (type $generated@@224)
 :no-pattern (type $generated@@225)
 :no-pattern ($generated $generated@@224)
 :no-pattern ($generated@@0 $generated@@224)
 :no-pattern ($generated $generated@@225)
 :no-pattern ($generated@@0 $generated@@225)
)))
 :pattern ( ($generated@@167 $generated@@223))
)))
(assert  (and (and (forall (($generated@@230 T@T) ) (= ($generated@@1 ($generated@@228 $generated@@230)) 16)) (forall (($generated@@231 T@T) ) (! (= ($generated@@229 ($generated@@228 $generated@@231)) $generated@@231)
 :pattern ( ($generated@@228 $generated@@231))
))) (forall (($generated@@232 T@T) ) (! (= (type ($generated@@226 $generated@@232)) ($generated@@228 $generated@@232))
 :pattern ( ($generated@@226 $generated@@232))
))))
(assert (forall (($generated@@233 T@T) ) (! (= ($generated@@227 ($generated@@226 $generated@@233)) 0)
 :pattern ( ($generated@@226 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@67) (= (type $generated@@235) $generated@@80)) (= ($generated@@139 $generated@@235 ($generated@@162 $generated@@234))  (and ($generated@@139 $generated@@235 ($generated@@136 $generated@@234)) (not (= $generated@@235 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@235 ($generated@@162 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@178)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@67) (= (type $generated@@240) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@214 ($generated@@236 $generated@@238) $generated@@239 $generated@@240) ($generated@@77 $generated@@238 $generated@@239 $generated@@240)))
 :pattern ( ($generated@@214 ($generated@@236 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@241) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@242) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@243) $generated@@178)) (= (type $generated@@244) $generated@@67)) ($generated@@147 $generated@@241 $generated@@242)) ($generated@@214 $generated@@243 $generated@@244 $generated@@241)) ($generated@@214 $generated@@243 $generated@@244 $generated@@242))
 :pattern ( ($generated@@147 $generated@@241 $generated@@242) ($generated@@214 $generated@@243 $generated@@244 $generated@@241))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@245) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@246) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@248) $generated@@67)) ($generated@@147 $generated@@245 $generated@@246)) ($generated@@77 $generated@@247 $generated@@248 $generated@@245)) ($generated@@77 $generated@@247 $generated@@248 $generated@@246))
 :pattern ( ($generated@@147 $generated@@245 $generated@@246) ($generated@@77 $generated@@247 $generated@@248 $generated@@245))
)))
(assert (forall (($generated@@251 T@T) ) (! (= (type ($generated@@250 $generated@@251)) ($generated@@79 $generated@@251 $generated@@2))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@82 (type $generated@@252))))
 (=> (= (type $generated@@252) ($generated@@79 $generated@@253 $generated@@2)) (and (= (= ($generated@@249 $generated@@252) 0) (= $generated@@252 ($generated@@250 $generated@@253))) (=> (not (= ($generated@@249 $generated@@252) 0)) (exists (($generated@@254 T@U) ) (!  (and (= (type $generated@@254) $generated@@253) (< 0 ($generated ($generated@@84 $generated@@252 $generated@@254))))
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
))))))
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@72)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@257)) $generated@@61) (= ($generated@@255 ($generated@@136 $generated@@257)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@67) (and (= ($generated@@75 ($generated@@162 $generated@@258)) $generated@@62) (= ($generated@@255 ($generated@@162 $generated@@258)) $generated@@65)))
 :pattern ( ($generated@@162 $generated@@258))
)))
(assert  (and (and (and (and (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@264 $generated@@265)) 17)) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@261 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@261 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@261 $generated@@268 $generated@@269))
))) (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@262 (type $generated@@270))))
(= (type ($generated@@259 $generated@@270)) ($generated@@79 $generated@@271 $generated@@4)))
 :pattern ( ($generated@@259 $generated@@270))
))) (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (! (= (type ($generated@@260 $generated@@272 $generated@@273)) ($generated@@261 $generated@@272 $generated@@273))
 :pattern ( ($generated@@260 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@T) ) (! (let (($generated@@276 (type $generated@@274)))
 (not ($generated@@0 ($generated@@84 ($generated@@259 ($generated@@260 $generated@@276 $generated@@275)) $generated@@274))))
 :pattern ( (let (($generated@@276 (type $generated@@274)))
($generated@@84 ($generated@@259 ($generated@@260 $generated@@276 $generated@@275)) $generated@@274)))
)))
(assert  (and (and (and (and (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@282 $generated@@283)) 18)) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@279 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@286 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@280 (type $generated@@288))))
(= (type ($generated@@277 $generated@@288)) ($generated@@79 $generated@@289 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@288))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= (type ($generated@@278 $generated@@290 $generated@@291)) ($generated@@279 $generated@@290 $generated@@291))
 :pattern ( ($generated@@278 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@T) ) (! (let (($generated@@294 (type $generated@@292)))
 (not ($generated@@0 ($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292))))
 :pattern ( (let (($generated@@294 (type $generated@@292)))
($generated@@84 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@82 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@79 $generated@@296 $generated@@2)) (= ($generated@@184 $generated@@295) (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@296) (and (<= 0 ($generated ($generated@@84 $generated@@295 $generated@@297))) (<= ($generated ($generated@@84 $generated@@295 $generated@@297)) ($generated@@249 $generated@@295))))
 :pattern ( ($generated@@84 $generated@@295 $generated@@297))
)))))
 :pattern ( ($generated@@184 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@67) (= (type $generated@@299) $generated@@80)) (= ($generated@@139 $generated@@299 ($generated@@136 $generated@@298))  (or (= $generated@@299 $generated@@137) (= ($generated@@138 $generated@@299) ($generated@@136 $generated@@298)))))
 :pattern ( ($generated@@139 $generated@@299 ($generated@@136 $generated@@298)))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@263 (type $generated@@300))))
(let (($generated@@302 ($generated@@262 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@261 $generated@@302 $generated@@301)) (or (= $generated@@300 ($generated@@260 $generated@@302 $generated@@301)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) ($generated@@0 ($generated@@84 ($generated@@259 $generated@@300) $generated@@303)))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@259 $generated@@300))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@263 (type $generated@@305))))
(= (type ($generated@@304 $generated@@305)) ($generated@@79 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@263 (type $generated@@307))))
(let (($generated@@309 ($generated@@262 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@261 $generated@@309 $generated@@308)) (or (= $generated@@307 ($generated@@260 $generated@@309 $generated@@308)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@308) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@307) $generated@@310)))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@281 (type $generated@@311))))
(let (($generated@@313 ($generated@@280 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@279 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@278 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@277 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@281 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@79 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@281 (type $generated@@318))))
(let (($generated@@320 ($generated@@280 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@279 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@278 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@84 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@79 $generated@@178 $generated@@2)) (= (type $generated@@323) $generated@@67)) (= ($generated@@139 $generated@@322 ($generated@@183 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@178) (< 0 ($generated ($generated@@84 $generated@@322 $generated@@324)))) ($generated@@189 $generated@@324 $generated@@323))
 :pattern ( ($generated@@84 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@139 $generated@@322 ($generated@@183 $generated@@323)))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (= (type $generated@@325) ($generated@@79 $generated@@178 $generated@@4)) (= (type $generated@@326) $generated@@67)) (= (type $generated@@327) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@325 ($generated@@198 $generated@@326) $generated@@327) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@178) ($generated@@0 ($generated@@84 $generated@@325 $generated@@328))) ($generated@@214 $generated@@328 $generated@@326 $generated@@327))
 :pattern ( ($generated@@84 $generated@@325 $generated@@328))
))))
 :pattern ( ($generated@@77 $generated@@325 ($generated@@198 $generated@@326) $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (= (type $generated@@329) ($generated@@79 $generated@@178 $generated@@4)) (= (type $generated@@330) $generated@@67)) (= (type $generated@@331) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@329 ($generated@@203 $generated@@330) $generated@@331) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@178) ($generated@@0 ($generated@@84 $generated@@329 $generated@@332))) ($generated@@214 $generated@@332 $generated@@330 $generated@@331))
 :pattern ( ($generated@@84 $generated@@329 $generated@@332))
))))
 :pattern ( ($generated@@77 $generated@@329 ($generated@@203 $generated@@330) $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= ($generated ($generated@@84 ($generated@@250 $generated@@334) $generated@@333)) 0))
 :pattern ( (let (($generated@@334 (type $generated@@333)))
($generated@@84 ($generated@@250 $generated@@334) $generated@@333)))
)))
(assert  (and (and (forall (($generated@@338 T@U) ) (! (= (type ($generated@@335 $generated@@338)) ($generated@@79 $generated@@178 $generated@@4))
 :pattern ( ($generated@@335 $generated@@338))
)) (forall (($generated@@339 T@T) ($generated@@340 T@U) ) (! (= (type ($generated@@336 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@263 (type $generated@@341))))
(let (($generated@@343 ($generated@@262 (type $generated@@341))))
(= (type ($generated@@337 $generated@@341)) ($generated@@79 $generated@@343 $generated@@342))))
 :pattern ( ($generated@@337 $generated@@341))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@261 $generated@@178 $generated@@178)) (= (type $generated@@345) $generated@@178)) (= ($generated@@0 ($generated@@84 ($generated@@335 $generated@@344) $generated@@345))  (and ($generated@@0 ($generated@@84 ($generated@@259 $generated@@344) ($generated@@176 ($generated@@336 $generated@@169 $generated@@345)))) (= ($generated@@84 ($generated@@337 $generated@@344) ($generated@@176 ($generated@@336 $generated@@169 $generated@@345))) ($generated@@177 ($generated@@336 $generated@@169 $generated@@345))))))
 :pattern ( ($generated@@84 ($generated@@335 $generated@@344) $generated@@345))
)))
(assert  (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@348)) ($generated@@79 $generated@@178 $generated@@4))
 :pattern ( ($generated@@346 $generated@@348))
)) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@281 (type $generated@@349))))
(let (($generated@@351 ($generated@@280 (type $generated@@349))))
(= (type ($generated@@347 $generated@@349)) ($generated@@79 $generated@@351 $generated@@350))))
 :pattern ( ($generated@@347 $generated@@349))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@279 $generated@@178 $generated@@178)) (= (type $generated@@353) $generated@@178)) (= ($generated@@0 ($generated@@84 ($generated@@346 $generated@@352) $generated@@353))  (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@352) ($generated@@176 ($generated@@336 $generated@@169 $generated@@353)))) (= ($generated@@84 ($generated@@347 $generated@@352) ($generated@@176 ($generated@@336 $generated@@169 $generated@@353))) ($generated@@177 ($generated@@336 $generated@@169 $generated@@353))))))
 :pattern ( ($generated@@84 ($generated@@346 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 (type $generated@@355)))
(let (($generated@@357 ($generated@@262 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@261 $generated@@357 $generated@@356)) (= ($generated@@0 ($generated@@84 ($generated@@304 $generated@@354) $generated@@355)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) (and ($generated@@0 ($generated@@84 ($generated@@259 $generated@@354) $generated@@358)) (= $generated@@355 ($generated@@84 ($generated@@337 $generated@@354) $generated@@358))))
 :pattern ( ($generated@@84 ($generated@@259 $generated@@354) $generated@@358))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@354) $generated@@358))
))))))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(let (($generated@@362 ($generated@@280 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@279 $generated@@362 $generated@@361)) (= ($generated@@0 ($generated@@84 ($generated@@315 $generated@@359) $generated@@360)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) (and ($generated@@0 ($generated@@84 ($generated@@277 $generated@@359) $generated@@363)) (= $generated@@360 ($generated@@84 ($generated@@347 $generated@@359) $generated@@363))))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@359) $generated@@363))
 :pattern ( ($generated@@84 ($generated@@347 $generated@@359) $generated@@363))
))))))
 :pattern ( ($generated@@84 ($generated@@315 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@67)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (and (= (type $generated@@367) ($generated@@261 $generated@@178 $generated@@178)) (= (type $generated@@368) $generated@@67)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@178) ($generated@@0 ($generated@@84 ($generated@@259 $generated@@367) $generated@@371))) (and ($generated@@214 ($generated@@84 ($generated@@337 $generated@@367) $generated@@371) $generated@@369 $generated@@370) ($generated@@214 $generated@@371 $generated@@368 $generated@@370)))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@367) $generated@@371))
 :pattern ( ($generated@@84 ($generated@@259 $generated@@367) $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@367 ($generated@@364 $generated@@368 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@67)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (and (= (type $generated@@375) ($generated@@279 $generated@@178 $generated@@178)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@178) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@375) $generated@@379))) (and ($generated@@214 ($generated@@84 ($generated@@347 $generated@@375) $generated@@379) $generated@@377 $generated@@378) ($generated@@214 $generated@@379 $generated@@376 $generated@@378)))
 :pattern ( ($generated@@84 ($generated@@347 $generated@@375) $generated@@379))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@375) $generated@@379))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@372 $generated@@376 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@380) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@382) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@380 $generated@@382))) (and ($generated@@147 $generated@@380 $generated@@381) ($generated@@147 $generated@@381 $generated@@382))) ($generated@@147 $generated@@380 $generated@@382))
 :pattern ( ($generated@@147 $generated@@380 $generated@@381) ($generated@@147 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@T) ) (! (= (type ($generated@@383 $generated@@384)) ($generated@@79 $generated@@384 $generated@@4))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@281 (type $generated@@385))))
(let (($generated@@387 ($generated@@280 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@279 $generated@@387 $generated@@386)) (= (= $generated@@385 ($generated@@278 $generated@@387 $generated@@386)) (= ($generated@@277 $generated@@385) ($generated@@383 $generated@@387))))))
 :pattern ( ($generated@@277 $generated@@385))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@281 (type $generated@@388))))
(let (($generated@@390 ($generated@@280 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@279 $generated@@390 $generated@@389)) (= (= $generated@@388 ($generated@@278 $generated@@390 $generated@@389)) (= ($generated@@315 $generated@@388) ($generated@@383 $generated@@389))))))
 :pattern ( ($generated@@315 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@281 (type $generated@@391))))
(let (($generated@@393 ($generated@@280 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@279 $generated@@393 $generated@@392)) (= (= $generated@@391 ($generated@@278 $generated@@393 $generated@@392)) (= ($generated@@346 $generated@@391) ($generated@@383 $generated@@178))))))
 :pattern ( ($generated@@346 $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@263 (type $generated@@394))))
(let (($generated@@396 ($generated@@262 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@261 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@260 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (and (and (= (type $generated@@397) $generated@@178) (= (type $generated@@398) $generated@@178)) ($generated@@0 ($generated@@84 ($generated@@335 $generated@@394) ($generated@@236 ($generated@@188 $generated@@397 $generated@@398)))))
 :no-pattern (type $generated@@397)
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@335 $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@281 (type $generated@@399))))
(let (($generated@@401 ($generated@@280 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@279 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@278 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (and (and (= (type $generated@@402) $generated@@178) (= (type $generated@@403) $generated@@178)) ($generated@@0 ($generated@@84 ($generated@@346 $generated@@399) ($generated@@236 ($generated@@188 $generated@@402 $generated@@403)))))
 :no-pattern (type $generated@@402)
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@346 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@178) ($generated@@189 $generated@@404 $generated@@46)) (and (= ($generated@@236 ($generated@@336 $generated@@2 $generated@@404)) $generated@@404) ($generated@@139 ($generated@@336 $generated@@2 $generated@@404) $generated@@46)))
 :pattern ( ($generated@@189 $generated@@404 $generated@@46))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@178) ($generated@@189 $generated@@405 $generated@@47)) (and (= ($generated@@236 ($generated@@336 $generated@@3 $generated@@405)) $generated@@405) ($generated@@139 ($generated@@336 $generated@@3 $generated@@405) $generated@@47)))
 :pattern ( ($generated@@189 $generated@@405 $generated@@47))
)))
(assert (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@178) ($generated@@189 $generated@@406 $generated@@44)) (and (= ($generated@@236 ($generated@@336 $generated@@4 $generated@@406)) $generated@@406) ($generated@@139 ($generated@@336 $generated@@4 $generated@@406) $generated@@44)))
 :pattern ( ($generated@@189 $generated@@406 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@407) 19))
(assert (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@178) ($generated@@189 $generated@@408 $generated@@45)) (and (= ($generated@@236 ($generated@@336 $generated@@407 $generated@@408)) $generated@@408) ($generated@@139 ($generated@@336 $generated@@407 $generated@@408) $generated@@45)))
 :pattern ( ($generated@@189 $generated@@408 $generated@@45))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (= (type $generated@@410) $generated@@67) (= ($generated@@189 ($generated@@236 $generated@@409) $generated@@410) ($generated@@139 $generated@@409 $generated@@410)))
 :pattern ( ($generated@@189 ($generated@@236 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (= (type $generated@@411) $generated@@80) (<= 0 ($generated@@135 $generated@@411)))
 :pattern ( ($generated@@135 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@80) (<= 0 ($generated@@144 $generated@@412)))
 :pattern ( ($generated@@144 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@82 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@79 $generated@@414 $generated@@2)) (<= 0 ($generated@@249 $generated@@413))))
 :pattern ( ($generated@@249 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@229 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@228 $generated@@416)) (<= 0 ($generated@@227 $generated@@415))))
 :pattern ( ($generated@@227 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@67) (= (type $generated@@420) $generated@@67)) (= ($generated@@417 ($generated@@364 $generated@@419 $generated@@420)) $generated@@419))
 :pattern ( ($generated@@364 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (= (type ($generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@67) (= (type $generated@@424) $generated@@67)) (= ($generated@@421 ($generated@@364 $generated@@423 $generated@@424)) $generated@@424))
 :pattern ( ($generated@@364 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@67) (= (type $generated@@426) $generated@@67)) (= ($generated@@75 ($generated@@364 $generated@@425 $generated@@426)) $generated@@58))
 :pattern ( ($generated@@364 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@67) (= (type $generated@@430) $generated@@67)) (= ($generated@@427 ($generated@@372 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@372 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@67)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@67) (= (type $generated@@434) $generated@@67)) (= ($generated@@431 ($generated@@372 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@372 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@75 ($generated@@372 $generated@@435 $generated@@436)) $generated@@59))
 :pattern ( ($generated@@372 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@178) (= (type $generated@@438) $generated@@178)) (= ($generated@@220 ($generated@@188 $generated@@437 $generated@@438)) $generated@@63))
 :pattern ( ($generated@@188 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@67)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@439 ($generated@@168 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@168 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@168 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@168 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@178) (= (type $generated@@448) $generated@@178)) (= ($generated@@176 ($generated@@188 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@188 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@178) (= (type $generated@@450) $generated@@178)) (= ($generated@@177 ($generated@@188 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@188 $generated@@449 $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ($generated@@455 Int) ) (! (let (($generated@@456 ($generated@@229 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454 $generated@@455)) $generated@@456))
 :pattern ( ($generated@@452 $generated@@454 $generated@@455))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@228 $generated@@178)) (= (type $generated@@458) $generated@@67)) (= (type $generated@@459) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@457 ($generated@@451 $generated@@458) $generated@@459) (forall (($generated@@460 Int) ) (!  (=> (and (<= 0 $generated@@460) (< $generated@@460 ($generated@@227 $generated@@457))) ($generated@@214 ($generated@@452 $generated@@457 $generated@@460) $generated@@458 $generated@@459))
 :pattern ( ($generated@@452 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@77 $generated@@457 ($generated@@451 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@462 Int) ) (! (= ($generated@@461 ($generated@@78 $generated@@462)) $generated@@462)
 :pattern ( ($generated@@78 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@67) (= ($generated@@463 ($generated@@198 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@198 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@67) (= ($generated@@75 ($generated@@198 $generated@@466)) $generated@@54))
 :pattern ( ($generated@@198 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@467 ($generated@@203 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@203 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@67) (= ($generated@@75 ($generated@@203 $generated@@470)) $generated@@55))
 :pattern ( ($generated@@203 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@67) (= ($generated@@471 ($generated@@183 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@183 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@75 ($generated@@183 $generated@@474)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@67) (= ($generated@@475 ($generated@@451 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@451 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@67) (= ($generated@@75 ($generated@@451 $generated@@478)) $generated@@57))
 :pattern ( ($generated@@451 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@67) (= ($generated@@479 ($generated@@136 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@136 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@67) (= ($generated@@482 ($generated@@162 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@162 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
(= ($generated@@336 $generated@@486 ($generated@@236 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@236 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@261 $generated@@178 $generated@@178)) (= (type $generated@@488) $generated@@67)) (= (type $generated@@489) $generated@@67)) (= ($generated@@139 $generated@@487 ($generated@@364 $generated@@488 $generated@@489)) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@178) ($generated@@0 ($generated@@84 ($generated@@259 $generated@@487) $generated@@490))) (and ($generated@@189 ($generated@@84 ($generated@@337 $generated@@487) $generated@@490) $generated@@489) ($generated@@189 $generated@@490 $generated@@488)))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@487) $generated@@490))
 :pattern ( ($generated@@84 ($generated@@259 $generated@@487) $generated@@490))
))))
 :pattern ( ($generated@@139 $generated@@487 ($generated@@364 $generated@@488 $generated@@489)))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@279 $generated@@178 $generated@@178)) (= (type $generated@@492) $generated@@67)) (= (type $generated@@493) $generated@@67)) (= ($generated@@139 $generated@@491 ($generated@@372 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@178) ($generated@@0 ($generated@@84 ($generated@@277 $generated@@491) $generated@@494))) (and ($generated@@189 ($generated@@84 ($generated@@347 $generated@@491) $generated@@494) $generated@@493) ($generated@@189 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@84 ($generated@@347 $generated@@491) $generated@@494))
 :pattern ( ($generated@@84 ($generated@@277 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@139 $generated@@491 ($generated@@372 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@178) (= (type $generated@@498) $generated@@178)) (< ($generated@@495 $generated@@497) ($generated@@496 ($generated@@188 $generated@@497 $generated@@498))))
 :pattern ( ($generated@@188 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@178) (= (type $generated@@500) $generated@@178)) (< ($generated@@495 $generated@@500) ($generated@@496 ($generated@@188 $generated@@499 $generated@@500))))
 :pattern ( ($generated@@188 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@501) $generated@@178) (= (type $generated@@502) $generated@@67)) (= (type $generated@@503) $generated@@67)) ($generated@@189 $generated@@501 ($generated@@364 $generated@@502 $generated@@503))) (and (= ($generated@@236 ($generated@@336 ($generated@@261 $generated@@178 $generated@@178) $generated@@501)) $generated@@501) ($generated@@139 ($generated@@336 ($generated@@261 $generated@@178 $generated@@178) $generated@@501) ($generated@@364 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@189 $generated@@501 ($generated@@364 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@504) $generated@@178) (= (type $generated@@505) $generated@@67)) (= (type $generated@@506) $generated@@67)) ($generated@@189 $generated@@504 ($generated@@372 $generated@@505 $generated@@506))) (and (= ($generated@@236 ($generated@@336 ($generated@@279 $generated@@178 $generated@@178) $generated@@504)) $generated@@504) ($generated@@139 ($generated@@336 ($generated@@279 $generated@@178 $generated@@178) $generated@@504) ($generated@@372 $generated@@505 $generated@@506))))
 :pattern ( ($generated@@189 $generated@@504 ($generated@@372 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@507) $generated@@67) (= (type $generated@@508) $generated@@67)) (= (type $generated@@509) $generated@@178)) ($generated@@189 $generated@@509 ($generated@@168 $generated@@507 $generated@@508))) (and (= ($generated@@236 ($generated@@336 $generated@@169 $generated@@509)) $generated@@509) ($generated@@139 ($generated@@336 $generated@@169 $generated@@509) ($generated@@168 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@189 $generated@@509 ($generated@@168 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
 (not ($generated@@0 ($generated@@84 ($generated@@383 $generated@@511) $generated@@510))))
 :pattern ( (let (($generated@@511 (type $generated@@510)))
($generated@@84 ($generated@@383 $generated@@511) $generated@@510)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@518 T@T) ($generated@@519 T@T) ) (= ($generated@@1 ($generated@@514 $generated@@518 $generated@@519)) 20)) (forall (($generated@@520 T@T) ($generated@@521 T@T) ) (! (= ($generated@@515 ($generated@@514 $generated@@520 $generated@@521)) $generated@@520)
 :pattern ( ($generated@@514 $generated@@520 $generated@@521))
))) (forall (($generated@@522 T@T) ($generated@@523 T@T) ) (! (= ($generated@@516 ($generated@@514 $generated@@522 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@514 $generated@@522 $generated@@523))
))) (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@516 (type $generated@@524))))
(= (type ($generated@@512 $generated@@524 $generated@@525 $generated@@526)) $generated@@527))
 :pattern ( ($generated@@512 $generated@@524 $generated@@525 $generated@@526))
))) (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(let (($generated@@533 (type $generated@@529)))
(= (type ($generated@@517 $generated@@528 $generated@@529 $generated@@530 $generated@@531)) ($generated@@514 $generated@@533 $generated@@532))))
 :pattern ( ($generated@@517 $generated@@528 $generated@@529 $generated@@530 $generated@@531))
))) (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@516 (type $generated@@534))))
 (=> (= (type $generated@@537) $generated@@538) (= ($generated@@512 ($generated@@517 $generated@@534 $generated@@535 $generated@@536 $generated@@537) $generated@@535 $generated@@536) $generated@@537)))
 :weight 0
))) (and (and (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (or (= $generated@@541 $generated@@543) (= ($generated@@512 ($generated@@517 $generated@@540 $generated@@541 $generated@@542 $generated@@539) $generated@@543 $generated@@544) ($generated@@512 $generated@@540 $generated@@543 $generated@@544)))
 :weight 0
)) (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (or (= $generated@@548 $generated@@550) (= ($generated@@512 ($generated@@517 $generated@@546 $generated@@547 $generated@@548 $generated@@545) $generated@@549 $generated@@550) ($generated@@512 $generated@@546 $generated@@549 $generated@@550)))
 :weight 0
))) (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (or true (= ($generated@@512 ($generated@@517 $generated@@552 $generated@@553 $generated@@554 $generated@@551) $generated@@555 $generated@@556) ($generated@@512 $generated@@552 $generated@@555 $generated@@556)))
 :weight 0
)))) (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (= (type ($generated@@513 $generated@@557 $generated@@558 $generated@@559 $generated@@560)) ($generated@@514 $generated@@80 $generated@@4))
 :pattern ( ($generated@@513 $generated@@557 $generated@@558 $generated@@559 $generated@@560))
))))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@70 (type $generated@@566))))
 (=> (and (and (and (and (and (= (type $generated@@561) $generated@@80) (= (type $generated@@562) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@563) ($generated@@69 $generated@@4))) (= (type $generated@@564) $generated@@80)) (= (type $generated@@565) $generated@@80)) (= (type $generated@@566) ($generated@@69 $generated@@567))) (= ($generated@@0 ($generated@@512 ($generated@@513 $generated@@561 $generated@@562 $generated@@563 $generated@@564) $generated@@565 $generated@@566))  (=> (and (not (= $generated@@565 $generated@@561)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@562 $generated@@565) $generated@@563))) (= $generated@@565 $generated@@564)))))
 :pattern ( ($generated@@512 ($generated@@513 $generated@@561 $generated@@562 $generated@@563 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@67) (= (type $generated@@569) $generated@@67)) (and (= ($generated@@75 ($generated@@168 $generated@@568 $generated@@569)) $generated@@64) (= ($generated@@255 ($generated@@168 $generated@@568 $generated@@569)) $generated@@66)))
 :pattern ( ($generated@@168 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@169) (= ($generated@@495 ($generated@@236 $generated@@570)) ($generated@@496 $generated@@570)))
 :pattern ( ($generated@@495 ($generated@@236 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@178) ($generated@@189 $generated@@571 ($generated@@78 0))) (and (= ($generated@@236 ($generated@@336 $generated@@2 $generated@@571)) $generated@@571) ($generated@@139 ($generated@@336 ($generated@@79 $generated@@178 $generated@@4) $generated@@571) ($generated@@78 0))))
 :pattern ( ($generated@@189 $generated@@571 ($generated@@78 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@178) (= (type $generated@@573) $generated@@67)) ($generated@@189 $generated@@572 ($generated@@198 $generated@@573))) (and (= ($generated@@236 ($generated@@336 ($generated@@79 $generated@@178 $generated@@4) $generated@@572)) $generated@@572) ($generated@@139 ($generated@@336 ($generated@@79 $generated@@178 $generated@@4) $generated@@572) ($generated@@198 $generated@@573))))
 :pattern ( ($generated@@189 $generated@@572 ($generated@@198 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@178) (= (type $generated@@575) $generated@@67)) ($generated@@189 $generated@@574 ($generated@@203 $generated@@575))) (and (= ($generated@@236 ($generated@@336 ($generated@@79 $generated@@178 $generated@@4) $generated@@574)) $generated@@574) ($generated@@139 ($generated@@336 ($generated@@79 $generated@@178 $generated@@4) $generated@@574) ($generated@@203 $generated@@575))))
 :pattern ( ($generated@@189 $generated@@574 ($generated@@203 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@178) (= (type $generated@@577) $generated@@67)) ($generated@@189 $generated@@576 ($generated@@183 $generated@@577))) (and (= ($generated@@236 ($generated@@336 ($generated@@79 $generated@@178 $generated@@2) $generated@@576)) $generated@@576) ($generated@@139 ($generated@@336 ($generated@@79 $generated@@178 $generated@@2) $generated@@576) ($generated@@183 $generated@@577))))
 :pattern ( ($generated@@189 $generated@@576 ($generated@@183 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@178) (= (type $generated@@579) $generated@@67)) ($generated@@189 $generated@@578 ($generated@@451 $generated@@579))) (and (= ($generated@@236 ($generated@@336 ($generated@@228 $generated@@178) $generated@@578)) $generated@@578) ($generated@@139 ($generated@@336 ($generated@@228 $generated@@178) $generated@@578) ($generated@@451 $generated@@579))))
 :pattern ( ($generated@@189 $generated@@578 ($generated@@451 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@67) (= (type $generated@@581) $generated@@178)) ($generated@@189 $generated@@581 ($generated@@136 $generated@@580))) (and (= ($generated@@236 ($generated@@336 $generated@@80 $generated@@581)) $generated@@581) ($generated@@139 ($generated@@336 $generated@@80 $generated@@581) ($generated@@136 $generated@@580))))
 :pattern ( ($generated@@189 $generated@@581 ($generated@@136 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@67) (= (type $generated@@583) $generated@@178)) ($generated@@189 $generated@@583 ($generated@@162 $generated@@582))) (and (= ($generated@@236 ($generated@@336 $generated@@80 $generated@@583)) $generated@@583) ($generated@@139 ($generated@@336 $generated@@80 $generated@@583) ($generated@@162 $generated@@582))))
 :pattern ( ($generated@@189 $generated@@583 ($generated@@162 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@79 $generated@@178 $generated@@2)) (= (type $generated@@585) $generated@@67)) (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@584 ($generated@@183 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@178) (< 0 ($generated ($generated@@84 $generated@@584 $generated@@587)))) ($generated@@214 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@84 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@77 $generated@@584 ($generated@@183 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@169) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@154 $generated@@590) (and ($generated@@167 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@67) ($generated@@77 $generated@@588 ($generated@@168 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@77 $generated@@588 ($generated@@168 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@214 ($generated@@176 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@214 ($generated@@176 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@169) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@154 $generated@@594) (and ($generated@@167 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@67) ($generated@@77 $generated@@592 ($generated@@168 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@77 $generated@@592 ($generated@@168 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@214 ($generated@@177 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@214 ($generated@@177 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@178) (= (type $generated@@597) $generated@@178)) (= ($generated@@188 ($generated@@210 $generated@@596) ($generated@@210 $generated@@597)) ($generated@@210 ($generated@@188 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@188 ($generated@@210 $generated@@596) ($generated@@210 $generated@@597)))
)))
(assert (forall (($generated@@598 Int) ) (! (= ($generated@@236 ($generated@@8 ($generated@@208 $generated@@598))) ($generated@@210 ($generated@@236 ($generated@@8 $generated@@598))))
 :pattern ( ($generated@@236 ($generated@@8 ($generated@@208 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ) (! (= ($generated@@236 ($generated@@210 $generated@@599)) ($generated@@210 ($generated@@236 $generated@@599)))
 :pattern ( ($generated@@236 ($generated@@210 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@229 (type $generated@@600))))
 (=> (and (= (type $generated@@600) ($generated@@228 $generated@@601)) (= ($generated@@227 $generated@@600) 0)) (= $generated@@600 ($generated@@226 $generated@@601))))
 :pattern ( ($generated@@227 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@603)))
 (=> (and (and (= (type $generated@@602) ($generated@@79 $generated@@605 $generated@@2)) (= (type $generated@@604) $generated@@2)) (<= 0 ($generated $generated@@604))) (= ($generated@@249 ($generated@@85 $generated@@602 $generated@@603 $generated@@604)) (+ (- ($generated@@249 $generated@@602) ($generated ($generated@@84 $generated@@602 $generated@@603))) ($generated $generated@@604)))))
 :pattern ( ($generated@@249 ($generated@@85 $generated@@602 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@607) $generated@@2)) ($generated@@77 $generated@@607 $generated@@46 $generated@@606))
 :pattern ( ($generated@@77 $generated@@607 $generated@@46 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@609) $generated@@3)) ($generated@@77 $generated@@609 $generated@@47 $generated@@608))
 :pattern ( ($generated@@77 $generated@@609 $generated@@47 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@611) $generated@@4)) ($generated@@77 $generated@@611 $generated@@44 $generated@@610))
 :pattern ( ($generated@@77 $generated@@611 $generated@@44 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@613) $generated@@407)) ($generated@@77 $generated@@613 $generated@@45 $generated@@612))
 :pattern ( ($generated@@77 $generated@@613 $generated@@45 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@615) $generated@@178)) ($generated@@77 $generated@@615 $generated@@48 $generated@@614))
 :pattern ( ($generated@@77 $generated@@615 $generated@@48 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@228 $generated@@178)) (= (type $generated@@617) $generated@@67)) (= ($generated@@139 $generated@@616 ($generated@@451 $generated@@617)) (forall (($generated@@618 Int) ) (!  (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@227 $generated@@616))) ($generated@@189 ($generated@@452 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@452 $generated@@616 $generated@@618))
))))
 :pattern ( ($generated@@139 $generated@@616 ($generated@@451 $generated@@617)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 Int) ) (!  (=> (= (type $generated@@620) ($generated@@228 $generated@@178)) (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@227 $generated@@620))) (< ($generated@@496 ($generated@@336 $generated@@169 ($generated@@452 $generated@@620 $generated@@621))) ($generated@@619 $generated@@620))))
 :pattern ( ($generated@@496 ($generated@@336 $generated@@169 ($generated@@452 $generated@@620 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@261 $generated@@178 $generated@@178)) (= (type $generated@@623) $generated@@67)) (= (type $generated@@624) $generated@@67)) ($generated@@139 $generated@@622 ($generated@@364 $generated@@623 $generated@@624))) (and (and ($generated@@139 ($generated@@259 $generated@@622) ($generated@@198 $generated@@623)) ($generated@@139 ($generated@@304 $generated@@622) ($generated@@198 $generated@@624))) ($generated@@139 ($generated@@335 $generated@@622) ($generated@@198 ($generated@@168 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@139 $generated@@622 ($generated@@364 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@279 $generated@@178 $generated@@178)) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) $generated@@67)) ($generated@@139 $generated@@625 ($generated@@372 $generated@@626 $generated@@627))) (and (and ($generated@@139 ($generated@@277 $generated@@625) ($generated@@203 $generated@@626)) ($generated@@139 ($generated@@315 $generated@@625) ($generated@@203 $generated@@627))) ($generated@@139 ($generated@@346 $generated@@625) ($generated@@203 ($generated@@168 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@139 $generated@@625 ($generated@@372 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@2) ($generated@@139 $generated@@628 $generated@@46))
 :pattern ( ($generated@@139 $generated@@628 $generated@@46))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@3) ($generated@@139 $generated@@629 $generated@@47))
 :pattern ( ($generated@@139 $generated@@629 $generated@@47))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@4) ($generated@@139 $generated@@630 $generated@@44))
 :pattern ( ($generated@@139 $generated@@630 $generated@@44))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@407) ($generated@@139 $generated@@631 $generated@@45))
 :pattern ( ($generated@@139 $generated@@631 $generated@@45))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@178) ($generated@@139 $generated@@632 $generated@@48))
 :pattern ( ($generated@@139 $generated@@632 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () Int)
(assert  (and (and (= (type $generated@@633) ($generated@@514 $generated@@80 $generated@@4)) (= (type $generated@@634) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@635) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@639  (=> (and (= $generated@@633 ($generated@@513 $generated@@137 $generated@@634 $generated@@60 $generated@@635)) (<= ($generated@@208 1) $generated@@636)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@635 $generated@@137))) (=> (not (= $generated@@635 $generated@@137)) (=> (and (= $generated@@636 ($generated@@135 $generated@@635)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@635 $generated@@137))))))))
(let (($generated@@640  (=> (and ($generated@@154 $generated@@634) ($generated@@637 $generated@@634)) (=> (and (and ($generated@@139 $generated@@635 ($generated@@162 $generated@@46)) ($generated@@77 $generated@@635 ($generated@@162 $generated@@46) $generated@@634)) (and (= 1 $generated@@638) (= (ControlFlow 0 4) 2))) $generated@@639))))
$generated@@640)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@209 (Int) Int)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@215 (T@U T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@227 (T@T) T@U)
(declare-fun $generated@@228 (T@U) Int)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(declare-fun $generated@@235 (T@U Int) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 (T@T T@T) T@U)
(declare-fun $generated@@267 (T@T T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@T T@T) T@U)
(declare-fun $generated@@285 (T@T T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@370 (T@U T@U) T@U)
(declare-fun $generated@@378 (T@U T@U) T@U)
(declare-fun $generated@@386 (Int Int) Int)
(declare-fun $generated@@392 (Int) T@U)
(declare-fun $generated@@399 (T@T) T@U)
(declare-fun $generated@@423 () T@T)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@U Int) T@U)
(declare-fun $generated@@477 (T@U) Int)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@536 (T@U T@U T@U) T@U)
(declare-fun $generated@@537 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@538 (T@T T@T) T@T)
(declare-fun $generated@@539 (T@T) T@T)
(declare-fun $generated@@540 (T@T) T@T)
(declare-fun $generated@@541 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@600 (Int Int) Int)
(declare-fun $generated@@657 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@81)) (and (not (= $generated@@147 $generated@@138)) (= ($generated@@139 $generated@@147) ($generated@@137 $generated@@146)))) ($generated@@140 ($generated@@8 ($generated@@145 $generated@@147)) $generated@@46))
 :pattern ( ($generated@@145 $generated@@147) ($generated@@137 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@150) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@148 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@149 $generated@@151) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@150 $generated@@151) $generated@@60))
)))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) $generated@@81)) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@153 ($generated@@137 $generated@@152) $generated@@154)  (or (= $generated@@153 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@153 ($generated@@137 $generated@@152) $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@67) (= (type $generated@@157) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@158) $generated@@81)) (and (and ($generated@@155 $generated@@157) (and (not (= $generated@@158 $generated@@138)) (= ($generated@@139 $generated@@158) ($generated@@137 $generated@@156)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@157 $generated@@158) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@158)) $generated@@46 $generated@@157))
 :pattern ( ($generated@@136 $generated@@158) ($generated@@87 ($generated@@85 $generated@@157 $generated@@158) $generated@@60) ($generated@@137 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@161) $generated@@81)) (and (and ($generated@@155 $generated@@160) (and (not (= $generated@@161 $generated@@138)) (= ($generated@@139 $generated@@161) ($generated@@137 $generated@@159)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@160 $generated@@161) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@145 $generated@@161)) $generated@@46 $generated@@160))
 :pattern ( ($generated@@145 $generated@@161) ($generated@@87 ($generated@@85 $generated@@160 $generated@@161) $generated@@60) ($generated@@137 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@140 $generated@@162 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@162 ($generated@@79 0)))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@67) (= (type $generated@@166) $generated@@81)) (= (type $generated@@167) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@166 ($generated@@163 $generated@@165) $generated@@167) ($generated@@78 $generated@@166 ($generated@@137 $generated@@165) $generated@@167)))
 :pattern ( ($generated@@78 $generated@@166 ($generated@@163 $generated@@165) $generated@@167))
)))
(assert  (and (= ($generated@@1 $generated@@170) 14) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@67)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@67) (= (type $generated@@174) $generated@@67)) (= (type $generated@@175) $generated@@170)) ($generated@@140 $generated@@175 ($generated@@169 $generated@@173 $generated@@174))) ($generated@@168 $generated@@175))
 :pattern ( ($generated@@168 $generated@@175) ($generated@@140 $generated@@175 ($generated@@169 $generated@@173 $generated@@174)))
)))
(assert  (and (and (= ($generated@@1 $generated@@179) 15) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@179)
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@170) (= (type $generated@@183) $generated@@170)) true) (= ($generated@@176 $generated@@182 $generated@@183)  (and (= ($generated@@177 $generated@@182) ($generated@@177 $generated@@183)) (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)))))
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@67)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@80 $generated@@179 $generated@@2)) (= (type $generated@@188) $generated@@67)) ($generated@@140 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@140 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= (type ($generated@@189 $generated@@191 $generated@@192)) $generated@@170)
 :pattern ( ($generated@@189 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (and (= (type $generated@@193) $generated@@67) (= (type $generated@@194) $generated@@67)) (= (type $generated@@195) $generated@@179)) (= (type $generated@@196) $generated@@179)) (= ($generated@@140 ($generated@@189 $generated@@195 $generated@@196) ($generated@@169 $generated@@193 $generated@@194))  (and ($generated@@190 $generated@@195 $generated@@193) ($generated@@190 $generated@@196 $generated@@194))))
 :pattern ( ($generated@@140 ($generated@@189 $generated@@195 $generated@@196) ($generated@@169 $generated@@193 $generated@@194)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (= (type $generated@@197) $generated@@170) (= (type $generated@@198) $generated@@170)) (= ($generated@@176 $generated@@197 $generated@@198) (= $generated@@197 $generated@@198)))
 :pattern ( ($generated@@176 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@67)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) ($generated@@80 $generated@@179 $generated@@4)) (= (type $generated@@202) $generated@@67)) (= ($generated@@140 $generated@@201 ($generated@@199 $generated@@202)) (forall (($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@203) $generated@@179) ($generated@@0 ($generated@@85 $generated@@201 $generated@@203))) ($generated@@190 $generated@@203 $generated@@202))
 :pattern ( ($generated@@85 $generated@@201 $generated@@203))
))))
 :pattern ( ($generated@@140 $generated@@201 ($generated@@199 $generated@@202)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@204 $generated@@205)) $generated@@67)
 :pattern ( ($generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) ($generated@@80 $generated@@179 $generated@@4)) (= (type $generated@@207) $generated@@67)) (= ($generated@@140 $generated@@206 ($generated@@204 $generated@@207)) (forall (($generated@@208 T@U) ) (!  (=> (and (= (type $generated@@208) $generated@@179) ($generated@@0 ($generated@@85 $generated@@206 $generated@@208))) ($generated@@190 $generated@@208 $generated@@207))
 :pattern ( ($generated@@85 $generated@@206 $generated@@208))
))))
 :pattern ( ($generated@@140 $generated@@206 ($generated@@204 $generated@@207)))
)))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@209 $generated@@210) $generated@@210)
 :pattern ( ($generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(= (type ($generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! (= ($generated@@211 $generated@@214) $generated@@214)
 :pattern ( ($generated@@211 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@216) $generated@@67) (= (type $generated@@217) $generated@@67)) (= (type $generated@@218) $generated@@179)) (= (type $generated@@219) $generated@@179)) (= (type $generated@@220) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@155 $generated@@220)) (= ($generated@@78 ($generated@@189 $generated@@218 $generated@@219) ($generated@@169 $generated@@216 $generated@@217) $generated@@220)  (and ($generated@@215 $generated@@218 $generated@@216 $generated@@220) ($generated@@215 $generated@@219 $generated@@217 $generated@@220))))
 :pattern ( ($generated@@78 ($generated@@189 $generated@@218 $generated@@219) ($generated@@169 $generated@@216 $generated@@217) $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@71)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ) (!  (=> (= (type $generated@@223) $generated@@170) (= ($generated@@168 $generated@@223) (= ($generated@@221 $generated@@223) $generated@@63)))
 :pattern ( ($generated@@168 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@170) ($generated@@168 $generated@@224)) (exists (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (and (and (= (type $generated@@225) $generated@@179) (= (type $generated@@226) $generated@@179)) (= $generated@@224 ($generated@@189 $generated@@225 $generated@@226)))
 :no-pattern (type $generated@@225)
 :no-pattern (type $generated@@226)
 :no-pattern ($generated $generated@@225)
 :no-pattern ($generated@@0 $generated@@225)
 :no-pattern ($generated $generated@@226)
 :no-pattern ($generated@@0 $generated@@226)
)))
 :pattern ( ($generated@@168 $generated@@224))
)))
(assert  (and (and (forall (($generated@@231 T@T) ) (= ($generated@@1 ($generated@@229 $generated@@231)) 16)) (forall (($generated@@232 T@T) ) (! (= ($generated@@230 ($generated@@229 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@229 $generated@@232))
))) (forall (($generated@@233 T@T) ) (! (= (type ($generated@@227 $generated@@233)) ($generated@@229 $generated@@233))
 :pattern ( ($generated@@227 $generated@@233))
))))
(assert (forall (($generated@@234 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@234)) 0)
 :pattern ( ($generated@@227 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 Int) ) (! (= (type ($generated@@235 $generated@@236 $generated@@237)) ($generated@@69 $generated@@179))
 :pattern ( ($generated@@235 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 Int) ) (!  (=> (= (type $generated@@238) ($generated@@69 $generated@@179)) (= ($generated@@75 ($generated@@235 $generated@@238 $generated@@239)) (+ ($generated@@75 $generated@@238) 1)))
 :pattern ( ($generated@@235 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@67) (= (type $generated@@241) $generated@@81)) (= ($generated@@140 $generated@@241 ($generated@@163 $generated@@240))  (and ($generated@@140 $generated@@241 ($generated@@137 $generated@@240)) (not (= $generated@@241 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@241 ($generated@@163 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@179)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@67) (= (type $generated@@246) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@215 ($generated@@242 $generated@@244) $generated@@245 $generated@@246) ($generated@@78 $generated@@244 $generated@@245 $generated@@246)))
 :pattern ( ($generated@@215 ($generated@@242 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@247) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@248) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@249) $generated@@179)) (= (type $generated@@250) $generated@@67)) ($generated@@148 $generated@@247 $generated@@248)) ($generated@@215 $generated@@249 $generated@@250 $generated@@247)) ($generated@@215 $generated@@249 $generated@@250 $generated@@248))
 :pattern ( ($generated@@148 $generated@@247 $generated@@248) ($generated@@215 $generated@@249 $generated@@250 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@251) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@252) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@254) $generated@@67)) ($generated@@148 $generated@@251 $generated@@252)) ($generated@@78 $generated@@253 $generated@@254 $generated@@251)) ($generated@@78 $generated@@253 $generated@@254 $generated@@252))
 :pattern ( ($generated@@148 $generated@@251 $generated@@252) ($generated@@78 $generated@@253 $generated@@254 $generated@@251))
)))
(assert (forall (($generated@@257 T@T) ) (! (= (type ($generated@@256 $generated@@257)) ($generated@@80 $generated@@257 $generated@@2))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@83 (type $generated@@258))))
 (=> (= (type $generated@@258) ($generated@@80 $generated@@259 $generated@@2)) (and (= (= ($generated@@255 $generated@@258) 0) (= $generated@@258 ($generated@@256 $generated@@259))) (=> (not (= ($generated@@255 $generated@@258) 0)) (exists (($generated@@260 T@U) ) (!  (and (= (type $generated@@260) $generated@@259) (< 0 ($generated ($generated@@85 $generated@@258 $generated@@260))))
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
))))))
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@72)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@263)) $generated@@61) (= ($generated@@261 ($generated@@137 $generated@@263)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@67) (and (= ($generated@@76 ($generated@@163 $generated@@264)) $generated@@62) (= ($generated@@261 ($generated@@163 $generated@@264)) $generated@@65)))
 :pattern ( ($generated@@163 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@270 T@T) ($generated@@271 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@270 $generated@@271)) 17)) (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@272 $generated@@273)) $generated@@272)
 :pattern ( ($generated@@267 $generated@@272 $generated@@273))
))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@267 $generated@@274 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@267 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@268 (type $generated@@276))))
(= (type ($generated@@265 $generated@@276)) ($generated@@80 $generated@@277 $generated@@4)))
 :pattern ( ($generated@@265 $generated@@276))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= (type ($generated@@266 $generated@@278 $generated@@279)) ($generated@@267 $generated@@278 $generated@@279))
 :pattern ( ($generated@@266 $generated@@278 $generated@@279))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@T) ) (! (let (($generated@@282 (type $generated@@280)))
 (not ($generated@@0 ($generated@@85 ($generated@@265 ($generated@@266 $generated@@282 $generated@@281)) $generated@@280))))
 :pattern ( (let (($generated@@282 (type $generated@@280)))
($generated@@85 ($generated@@265 ($generated@@266 $generated@@282 $generated@@281)) $generated@@280)))
)))
(assert  (and (and (and (and (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@288 $generated@@289)) 18)) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@290 $generated@@291)) $generated@@290)
 :pattern ( ($generated@@285 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@285 $generated@@292 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@285 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@286 (type $generated@@294))))
(= (type ($generated@@283 $generated@@294)) ($generated@@80 $generated@@295 $generated@@4)))
 :pattern ( ($generated@@283 $generated@@294))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= (type ($generated@@284 $generated@@296 $generated@@297)) ($generated@@285 $generated@@296 $generated@@297))
 :pattern ( ($generated@@284 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@T) ) (! (let (($generated@@300 (type $generated@@298)))
 (not ($generated@@0 ($generated@@85 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298))))
 :pattern ( (let (($generated@@300 (type $generated@@298)))
($generated@@85 ($generated@@283 ($generated@@284 $generated@@300 $generated@@299)) $generated@@298)))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@83 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@80 $generated@@302 $generated@@2)) (= ($generated@@185 $generated@@301) (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@302) (and (<= 0 ($generated ($generated@@85 $generated@@301 $generated@@303))) (<= ($generated ($generated@@85 $generated@@301 $generated@@303)) ($generated@@255 $generated@@301))))
 :pattern ( ($generated@@85 $generated@@301 $generated@@303))
)))))
 :pattern ( ($generated@@185 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@67) (= (type $generated@@305) $generated@@81)) (= ($generated@@140 $generated@@305 ($generated@@137 $generated@@304))  (or (= $generated@@305 $generated@@138) (= ($generated@@139 $generated@@305) ($generated@@137 $generated@@304)))))
 :pattern ( ($generated@@140 $generated@@305 ($generated@@137 $generated@@304)))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@269 (type $generated@@306))))
(let (($generated@@308 ($generated@@268 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@267 $generated@@308 $generated@@307)) (or (= $generated@@306 ($generated@@266 $generated@@308 $generated@@307)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) ($generated@@0 ($generated@@85 ($generated@@265 $generated@@306) $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@265 $generated@@306))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@269 (type $generated@@311))))
(= (type ($generated@@310 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@269 (type $generated@@313))))
(let (($generated@@315 ($generated@@268 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@267 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@266 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@314) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@287 (type $generated@@317))))
(let (($generated@@319 ($generated@@286 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@285 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@284 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) ($generated@@0 ($generated@@85 ($generated@@283 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@283 $generated@@317))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@287 (type $generated@@322))))
(= (type ($generated@@321 $generated@@322)) ($generated@@80 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@287 (type $generated@@324))))
(let (($generated@@326 ($generated@@286 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@285 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@284 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@325) ($generated@@0 ($generated@@85 ($generated@@321 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@328) ($generated@@80 $generated@@179 $generated@@2)) (= (type $generated@@329) $generated@@67)) (= ($generated@@140 $generated@@328 ($generated@@184 $generated@@329)) (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@179) (< 0 ($generated ($generated@@85 $generated@@328 $generated@@330)))) ($generated@@190 $generated@@330 $generated@@329))
 :pattern ( ($generated@@85 $generated@@328 $generated@@330))
))))
 :pattern ( ($generated@@140 $generated@@328 ($generated@@184 $generated@@329)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) ($generated@@80 $generated@@179 $generated@@4)) (= (type $generated@@332) $generated@@67)) (= (type $generated@@333) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@331 ($generated@@199 $generated@@332) $generated@@333) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@179) ($generated@@0 ($generated@@85 $generated@@331 $generated@@334))) ($generated@@215 $generated@@334 $generated@@332 $generated@@333))
 :pattern ( ($generated@@85 $generated@@331 $generated@@334))
))))
 :pattern ( ($generated@@78 $generated@@331 ($generated@@199 $generated@@332) $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@80 $generated@@179 $generated@@4)) (= (type $generated@@336) $generated@@67)) (= (type $generated@@337) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@335 ($generated@@204 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@179) ($generated@@0 ($generated@@85 $generated@@335 $generated@@338))) ($generated@@215 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@85 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@78 $generated@@335 ($generated@@204 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 (type $generated@@339)))
(= ($generated ($generated@@85 ($generated@@256 $generated@@340) $generated@@339)) 0))
 :pattern ( (let (($generated@@340 (type $generated@@339)))
($generated@@85 ($generated@@256 $generated@@340) $generated@@339)))
)))
(assert  (and (and (forall (($generated@@344 T@U) ) (! (= (type ($generated@@341 $generated@@344)) ($generated@@80 $generated@@179 $generated@@4))
 :pattern ( ($generated@@341 $generated@@344))
)) (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@342 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@342 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@269 (type $generated@@347))))
(let (($generated@@349 ($generated@@268 (type $generated@@347))))
(= (type ($generated@@343 $generated@@347)) ($generated@@80 $generated@@349 $generated@@348))))
 :pattern ( ($generated@@343 $generated@@347))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@267 $generated@@179 $generated@@179)) (= (type $generated@@351) $generated@@179)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@350) $generated@@351))  (and ($generated@@0 ($generated@@85 ($generated@@265 $generated@@350) ($generated@@177 ($generated@@342 $generated@@170 $generated@@351)))) (= ($generated@@85 ($generated@@343 $generated@@350) ($generated@@177 ($generated@@342 $generated@@170 $generated@@351))) ($generated@@178 ($generated@@342 $generated@@170 $generated@@351))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@350) $generated@@351))
)))
(assert  (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@354)) ($generated@@80 $generated@@179 $generated@@4))
 :pattern ( ($generated@@352 $generated@@354))
)) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@287 (type $generated@@355))))
(let (($generated@@357 ($generated@@286 (type $generated@@355))))
(= (type ($generated@@353 $generated@@355)) ($generated@@80 $generated@@357 $generated@@356))))
 :pattern ( ($generated@@353 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@285 $generated@@179 $generated@@179)) (= (type $generated@@359) $generated@@179)) (= ($generated@@0 ($generated@@85 ($generated@@352 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@85 ($generated@@283 $generated@@358) ($generated@@177 ($generated@@342 $generated@@170 $generated@@359)))) (= ($generated@@85 ($generated@@353 $generated@@358) ($generated@@177 ($generated@@342 $generated@@170 $generated@@359))) ($generated@@178 ($generated@@342 $generated@@170 $generated@@359))))))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(let (($generated@@363 ($generated@@268 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@267 $generated@@363 $generated@@362)) (= ($generated@@0 ($generated@@85 ($generated@@310 $generated@@360) $generated@@361)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) (and ($generated@@0 ($generated@@85 ($generated@@265 $generated@@360) $generated@@364)) (= $generated@@361 ($generated@@85 ($generated@@343 $generated@@360) $generated@@364))))
 :pattern ( ($generated@@85 ($generated@@265 $generated@@360) $generated@@364))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@360) $generated@@364))
))))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(let (($generated@@368 ($generated@@286 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@285 $generated@@368 $generated@@367)) (= ($generated@@0 ($generated@@85 ($generated@@321 $generated@@365) $generated@@366)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) (and ($generated@@0 ($generated@@85 ($generated@@283 $generated@@365) $generated@@369)) (= $generated@@366 ($generated@@85 ($generated@@353 $generated@@365) $generated@@369))))
 :pattern ( ($generated@@85 ($generated@@283 $generated@@365) $generated@@369))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@365) $generated@@369))
))))))
 :pattern ( ($generated@@85 ($generated@@321 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@371 $generated@@372)) $generated@@67)
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@373) ($generated@@267 $generated@@179 $generated@@179)) (= (type $generated@@374) $generated@@67)) (= (type $generated@@375) $generated@@67)) (= (type $generated@@376) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@179) ($generated@@0 ($generated@@85 ($generated@@265 $generated@@373) $generated@@377))) (and ($generated@@215 ($generated@@85 ($generated@@343 $generated@@373) $generated@@377) $generated@@375 $generated@@376) ($generated@@215 $generated@@377 $generated@@374 $generated@@376)))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@373) $generated@@377))
 :pattern ( ($generated@@85 ($generated@@265 $generated@@373) $generated@@377))
))))
 :pattern ( ($generated@@78 $generated@@373 ($generated@@370 $generated@@374 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@379 $generated@@380)) $generated@@67)
 :pattern ( ($generated@@378 $generated@@379 $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (and (= (type $generated@@381) ($generated@@285 $generated@@179 $generated@@179)) (= (type $generated@@382) $generated@@67)) (= (type $generated@@383) $generated@@67)) (= (type $generated@@384) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@179) ($generated@@0 ($generated@@85 ($generated@@283 $generated@@381) $generated@@385))) (and ($generated@@215 ($generated@@85 ($generated@@353 $generated@@381) $generated@@385) $generated@@383 $generated@@384) ($generated@@215 $generated@@385 $generated@@382 $generated@@384)))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@381) $generated@@385))
 :pattern ( ($generated@@85 ($generated@@283 $generated@@381) $generated@@385))
))))
 :pattern ( ($generated@@78 $generated@@381 ($generated@@378 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@387 Int) ($generated@@388 Int) ) (! (= ($generated@@386 $generated@@387 $generated@@388) (div $generated@@387 $generated@@388))
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@389) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@390) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@391) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@389 $generated@@391))) (and ($generated@@148 $generated@@389 $generated@@390) ($generated@@148 $generated@@390 $generated@@391))) ($generated@@148 $generated@@389 $generated@@391))
 :pattern ( ($generated@@148 $generated@@389 $generated@@390) ($generated@@148 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 Int) ) (! (= (type ($generated@@392 $generated@@393)) ($generated@@69 $generated@@179))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 Int) ($generated@@398 Int) ) (!  (=> (and (and (and (= (type $generated@@394) $generated@@67) (= (type $generated@@395) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@396) $generated@@81)) (and (and ($generated@@155 $generated@@395) (and (not (= $generated@@396 $generated@@138)) (= ($generated@@139 $generated@@396) ($generated@@137 $generated@@394)))) (and (and (<= 0 $generated@@397) (< $generated@@397 ($generated@@136 $generated@@396))) (and (<= 0 $generated@@398) (< $generated@@398 ($generated@@145 $generated@@396)))))) ($generated@@190 ($generated@@87 ($generated@@85 $generated@@395 $generated@@396) ($generated@@235 ($generated@@392 $generated@@397) $generated@@398)) $generated@@394))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@395 $generated@@396) ($generated@@235 ($generated@@392 $generated@@397) $generated@@398)) ($generated@@137 $generated@@394))
)))
(assert (forall (($generated@@400 T@T) ) (! (= (type ($generated@@399 $generated@@400)) ($generated@@80 $generated@@400 $generated@@4))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@287 (type $generated@@401))))
(let (($generated@@403 ($generated@@286 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@285 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@284 $generated@@403 $generated@@402)) (= ($generated@@283 $generated@@401) ($generated@@399 $generated@@403))))))
 :pattern ( ($generated@@283 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@287 (type $generated@@404))))
(let (($generated@@406 ($generated@@286 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@285 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@284 $generated@@406 $generated@@405)) (= ($generated@@321 $generated@@404) ($generated@@399 $generated@@405))))))
 :pattern ( ($generated@@321 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@287 (type $generated@@407))))
(let (($generated@@409 ($generated@@286 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@285 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@284 $generated@@409 $generated@@408)) (= ($generated@@352 $generated@@407) ($generated@@399 $generated@@179))))))
 :pattern ( ($generated@@352 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@269 (type $generated@@410))))
(let (($generated@@412 ($generated@@268 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@267 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@266 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@179) (= (type $generated@@414) $generated@@179)) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@410) ($generated@@242 ($generated@@189 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@341 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@287 (type $generated@@415))))
(let (($generated@@417 ($generated@@286 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@285 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@284 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@179) (= (type $generated@@419) $generated@@179)) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@415) ($generated@@242 ($generated@@189 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@352 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@179) ($generated@@190 $generated@@420 $generated@@46)) (and (= ($generated@@242 ($generated@@342 $generated@@2 $generated@@420)) $generated@@420) ($generated@@140 ($generated@@342 $generated@@2 $generated@@420) $generated@@46)))
 :pattern ( ($generated@@190 $generated@@420 $generated@@46))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@179) ($generated@@190 $generated@@421 $generated@@47)) (and (= ($generated@@242 ($generated@@342 $generated@@3 $generated@@421)) $generated@@421) ($generated@@140 ($generated@@342 $generated@@3 $generated@@421) $generated@@47)))
 :pattern ( ($generated@@190 $generated@@421 $generated@@47))
)))
(assert (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@179) ($generated@@190 $generated@@422 $generated@@44)) (and (= ($generated@@242 ($generated@@342 $generated@@4 $generated@@422)) $generated@@422) ($generated@@140 ($generated@@342 $generated@@4 $generated@@422) $generated@@44)))
 :pattern ( ($generated@@190 $generated@@422 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@423) 19))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@179) ($generated@@190 $generated@@424 $generated@@45)) (and (= ($generated@@242 ($generated@@342 $generated@@423 $generated@@424)) $generated@@424) ($generated@@140 ($generated@@342 $generated@@423 $generated@@424) $generated@@45)))
 :pattern ( ($generated@@190 $generated@@424 $generated@@45))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (= (type $generated@@426) $generated@@67) (= ($generated@@190 ($generated@@242 $generated@@425) $generated@@426) ($generated@@140 $generated@@425 $generated@@426)))
 :pattern ( ($generated@@190 ($generated@@242 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (= (type $generated@@427) $generated@@81) (<= 0 ($generated@@136 $generated@@427)))
 :pattern ( ($generated@@136 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (= (type $generated@@428) $generated@@81) (<= 0 ($generated@@145 $generated@@428)))
 :pattern ( ($generated@@145 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@83 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@80 $generated@@430 $generated@@2)) (<= 0 ($generated@@255 $generated@@429))))
 :pattern ( ($generated@@255 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@230 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@229 $generated@@432)) (<= 0 ($generated@@228 $generated@@431))))
 :pattern ( ($generated@@228 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (= (type ($generated@@433 $generated@@434)) $generated@@67)
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@67) (= (type $generated@@436) $generated@@67)) (= ($generated@@433 ($generated@@370 $generated@@435 $generated@@436)) $generated@@435))
 :pattern ( ($generated@@370 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@67)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@67) (= (type $generated@@440) $generated@@67)) (= ($generated@@437 ($generated@@370 $generated@@439 $generated@@440)) $generated@@440))
 :pattern ( ($generated@@370 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@67) (= (type $generated@@442) $generated@@67)) (= ($generated@@76 ($generated@@370 $generated@@441 $generated@@442)) $generated@@58))
 :pattern ( ($generated@@370 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@67)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@67) (= (type $generated@@446) $generated@@67)) (= ($generated@@443 ($generated@@378 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@378 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@67)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@67) (= (type $generated@@450) $generated@@67)) (= ($generated@@447 ($generated@@378 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@378 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@76 ($generated@@378 $generated@@451 $generated@@452)) $generated@@59))
 :pattern ( ($generated@@378 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@179) (= (type $generated@@454) $generated@@179)) (= ($generated@@221 ($generated@@189 $generated@@453 $generated@@454)) $generated@@63))
 :pattern ( ($generated@@189 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@169 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@169 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@169 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@169 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@179) (= (type $generated@@464) $generated@@179)) (= ($generated@@177 ($generated@@189 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@189 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@179) (= (type $generated@@466) $generated@@179)) (= ($generated@@178 ($generated@@189 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@189 $generated@@465 $generated@@466))
)))
(assert  (and (forall (($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@469))
)) (forall (($generated@@470 T@U) ($generated@@471 Int) ) (! (let (($generated@@472 ($generated@@230 (type $generated@@470))))
(= (type ($generated@@468 $generated@@470 $generated@@471)) $generated@@472))
 :pattern ( ($generated@@468 $generated@@470 $generated@@471))
))))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@473) ($generated@@229 $generated@@179)) (= (type $generated@@474) $generated@@67)) (= (type $generated@@475) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@473 ($generated@@467 $generated@@474) $generated@@475) (forall (($generated@@476 Int) ) (!  (=> (and (<= 0 $generated@@476) (< $generated@@476 ($generated@@228 $generated@@473))) ($generated@@215 ($generated@@468 $generated@@473 $generated@@476) $generated@@474 $generated@@475))
 :pattern ( ($generated@@468 $generated@@473 $generated@@476))
))))
 :pattern ( ($generated@@78 $generated@@473 ($generated@@467 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@478 Int) ) (! (= ($generated@@477 ($generated@@79 $generated@@478)) $generated@@478)
 :pattern ( ($generated@@79 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@67) (= ($generated@@479 ($generated@@199 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@199 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@67) (= ($generated@@76 ($generated@@199 $generated@@482)) $generated@@54))
 :pattern ( ($generated@@199 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@67) (= ($generated@@483 ($generated@@204 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@204 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@67) (= ($generated@@76 ($generated@@204 $generated@@486)) $generated@@55))
 :pattern ( ($generated@@204 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@487 ($generated@@184 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@184 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@76 ($generated@@184 $generated@@490)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@491 ($generated@@467 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@467 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@76 ($generated@@467 $generated@@494)) $generated@@57))
 :pattern ( ($generated@@467 $generated@@494))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@75 ($generated@@392 $generated@@495)) 1)
 :pattern ( ($generated@@392 $generated@@495))
)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@496 ($generated@@392 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@392 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@137 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@137 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@163 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@163 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@342 $generated@@505 ($generated@@242 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@242 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@267 $generated@@179 $generated@@179)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) $generated@@67)) (= ($generated@@140 $generated@@506 ($generated@@370 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@179) ($generated@@0 ($generated@@85 ($generated@@265 $generated@@506) $generated@@509))) (and ($generated@@190 ($generated@@85 ($generated@@343 $generated@@506) $generated@@509) $generated@@508) ($generated@@190 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@506) $generated@@509))
 :pattern ( ($generated@@85 ($generated@@265 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@140 $generated@@506 ($generated@@370 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@285 $generated@@179 $generated@@179)) (= (type $generated@@511) $generated@@67)) (= (type $generated@@512) $generated@@67)) (= ($generated@@140 $generated@@510 ($generated@@378 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@179) ($generated@@0 ($generated@@85 ($generated@@283 $generated@@510) $generated@@513))) (and ($generated@@190 ($generated@@85 ($generated@@353 $generated@@510) $generated@@513) $generated@@512) ($generated@@190 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@510) $generated@@513))
 :pattern ( ($generated@@85 ($generated@@283 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@140 $generated@@510 ($generated@@378 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@179) (= (type $generated@@517) $generated@@179)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@189 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@189 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@179) (= (type $generated@@519) $generated@@179)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@189 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@189 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 Int) ($generated@@524 Int) ) (!  (=> (and (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@522) $generated@@81)) (=> (and (and (and ($generated@@155 $generated@@521) (and (not (= $generated@@522 $generated@@138)) (= ($generated@@139 $generated@@522) ($generated@@137 $generated@@520)))) (and (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@136 $generated@@522))) (and (<= 0 $generated@@524) (< $generated@@524 ($generated@@145 $generated@@522))))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@521 $generated@@522) $generated@@60))) ($generated@@215 ($generated@@87 ($generated@@85 $generated@@521 $generated@@522) ($generated@@235 ($generated@@392 $generated@@523) $generated@@524)) $generated@@520 $generated@@521)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@521 $generated@@522) ($generated@@235 ($generated@@392 $generated@@523) $generated@@524)) ($generated@@137 $generated@@520))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@179) (= (type $generated@@526) $generated@@67)) (= (type $generated@@527) $generated@@67)) ($generated@@190 $generated@@525 ($generated@@370 $generated@@526 $generated@@527))) (and (= ($generated@@242 ($generated@@342 ($generated@@267 $generated@@179 $generated@@179) $generated@@525)) $generated@@525) ($generated@@140 ($generated@@342 ($generated@@267 $generated@@179 $generated@@179) $generated@@525) ($generated@@370 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@190 $generated@@525 ($generated@@370 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@179) (= (type $generated@@529) $generated@@67)) (= (type $generated@@530) $generated@@67)) ($generated@@190 $generated@@528 ($generated@@378 $generated@@529 $generated@@530))) (and (= ($generated@@242 ($generated@@342 ($generated@@285 $generated@@179 $generated@@179) $generated@@528)) $generated@@528) ($generated@@140 ($generated@@342 ($generated@@285 $generated@@179 $generated@@179) $generated@@528) ($generated@@378 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@190 $generated@@528 ($generated@@378 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@67) (= (type $generated@@532) $generated@@67)) (= (type $generated@@533) $generated@@179)) ($generated@@190 $generated@@533 ($generated@@169 $generated@@531 $generated@@532))) (and (= ($generated@@242 ($generated@@342 $generated@@170 $generated@@533)) $generated@@533) ($generated@@140 ($generated@@342 $generated@@170 $generated@@533) ($generated@@169 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@190 $generated@@533 ($generated@@169 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@85 ($generated@@399 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@85 ($generated@@399 $generated@@535) $generated@@534)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@542 T@T) ($generated@@543 T@T) ) (= ($generated@@1 ($generated@@538 $generated@@542 $generated@@543)) 20)) (forall (($generated@@544 T@T) ($generated@@545 T@T) ) (! (= ($generated@@539 ($generated@@538 $generated@@544 $generated@@545)) $generated@@544)
 :pattern ( ($generated@@538 $generated@@544 $generated@@545))
))) (forall (($generated@@546 T@T) ($generated@@547 T@T) ) (! (= ($generated@@540 ($generated@@538 $generated@@546 $generated@@547)) $generated@@547)
 :pattern ( ($generated@@538 $generated@@546 $generated@@547))
))) (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@540 (type $generated@@548))))
(= (type ($generated@@536 $generated@@548 $generated@@549 $generated@@550)) $generated@@551))
 :pattern ( ($generated@@536 $generated@@548 $generated@@549 $generated@@550))
))) (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
(let (($generated@@557 (type $generated@@553)))
(= (type ($generated@@541 $generated@@552 $generated@@553 $generated@@554 $generated@@555)) ($generated@@538 $generated@@557 $generated@@556))))
 :pattern ( ($generated@@541 $generated@@552 $generated@@553 $generated@@554 $generated@@555))
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@540 (type $generated@@558))))
 (=> (= (type $generated@@561) $generated@@562) (= ($generated@@536 ($generated@@541 $generated@@558 $generated@@559 $generated@@560 $generated@@561) $generated@@559 $generated@@560) $generated@@561)))
 :weight 0
))) (and (and (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (or (= $generated@@565 $generated@@567) (= ($generated@@536 ($generated@@541 $generated@@564 $generated@@565 $generated@@566 $generated@@563) $generated@@567 $generated@@568) ($generated@@536 $generated@@564 $generated@@567 $generated@@568)))
 :weight 0
)) (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (or (= $generated@@572 $generated@@574) (= ($generated@@536 ($generated@@541 $generated@@570 $generated@@571 $generated@@572 $generated@@569) $generated@@573 $generated@@574) ($generated@@536 $generated@@570 $generated@@573 $generated@@574)))
 :weight 0
))) (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (or true (= ($generated@@536 ($generated@@541 $generated@@576 $generated@@577 $generated@@578 $generated@@575) $generated@@579 $generated@@580) ($generated@@536 $generated@@576 $generated@@579 $generated@@580)))
 :weight 0
)))) (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (= (type ($generated@@537 $generated@@581 $generated@@582 $generated@@583 $generated@@584)) ($generated@@538 $generated@@81 $generated@@4))
 :pattern ( ($generated@@537 $generated@@581 $generated@@582 $generated@@583 $generated@@584))
))))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@70 (type $generated@@590))))
 (=> (and (and (and (and (and (= (type $generated@@585) $generated@@81) (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@587) ($generated@@69 $generated@@4))) (= (type $generated@@588) $generated@@81)) (= (type $generated@@589) $generated@@81)) (= (type $generated@@590) ($generated@@69 $generated@@591))) (= ($generated@@0 ($generated@@536 ($generated@@537 $generated@@585 $generated@@586 $generated@@587 $generated@@588) $generated@@589 $generated@@590))  (=> (and (not (= $generated@@589 $generated@@585)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@586 $generated@@589) $generated@@587))) (= $generated@@589 $generated@@588)))))
 :pattern ( ($generated@@536 ($generated@@537 $generated@@585 $generated@@586 $generated@@587 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@70 (type $generated@@594))))
(= (type ($generated@@592 $generated@@594)) ($generated@@69 $generated@@595)))
 :pattern ( ($generated@@592 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@69 $generated@@179)) (and (= ($generated@@592 ($generated@@235 $generated@@596 $generated@@597)) $generated@@596) (= ($generated@@593 ($generated@@235 $generated@@596 $generated@@597)) $generated@@597)))
 :pattern ( ($generated@@235 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@67) (= (type $generated@@599) $generated@@67)) (and (= ($generated@@76 ($generated@@169 $generated@@598 $generated@@599)) $generated@@64) (= ($generated@@261 ($generated@@169 $generated@@598 $generated@@599)) $generated@@66)))
 :pattern ( ($generated@@169 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 Int) ($generated@@602 Int) ) (! (= ($generated@@600 $generated@@601 $generated@@602) (* $generated@@601 $generated@@602))
 :pattern ( ($generated@@600 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@170) (= ($generated@@514 ($generated@@242 $generated@@603)) ($generated@@515 $generated@@603)))
 :pattern ( ($generated@@514 ($generated@@242 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@179) ($generated@@190 $generated@@604 ($generated@@79 0))) (and (= ($generated@@242 ($generated@@342 $generated@@2 $generated@@604)) $generated@@604) ($generated@@140 ($generated@@342 ($generated@@80 $generated@@179 $generated@@4) $generated@@604) ($generated@@79 0))))
 :pattern ( ($generated@@190 $generated@@604 ($generated@@79 0)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@179) (= (type $generated@@606) $generated@@67)) ($generated@@190 $generated@@605 ($generated@@199 $generated@@606))) (and (= ($generated@@242 ($generated@@342 ($generated@@80 $generated@@179 $generated@@4) $generated@@605)) $generated@@605) ($generated@@140 ($generated@@342 ($generated@@80 $generated@@179 $generated@@4) $generated@@605) ($generated@@199 $generated@@606))))
 :pattern ( ($generated@@190 $generated@@605 ($generated@@199 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@179) (= (type $generated@@608) $generated@@67)) ($generated@@190 $generated@@607 ($generated@@204 $generated@@608))) (and (= ($generated@@242 ($generated@@342 ($generated@@80 $generated@@179 $generated@@4) $generated@@607)) $generated@@607) ($generated@@140 ($generated@@342 ($generated@@80 $generated@@179 $generated@@4) $generated@@607) ($generated@@204 $generated@@608))))
 :pattern ( ($generated@@190 $generated@@607 ($generated@@204 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@179) (= (type $generated@@610) $generated@@67)) ($generated@@190 $generated@@609 ($generated@@184 $generated@@610))) (and (= ($generated@@242 ($generated@@342 ($generated@@80 $generated@@179 $generated@@2) $generated@@609)) $generated@@609) ($generated@@140 ($generated@@342 ($generated@@80 $generated@@179 $generated@@2) $generated@@609) ($generated@@184 $generated@@610))))
 :pattern ( ($generated@@190 $generated@@609 ($generated@@184 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@179) (= (type $generated@@612) $generated@@67)) ($generated@@190 $generated@@611 ($generated@@467 $generated@@612))) (and (= ($generated@@242 ($generated@@342 ($generated@@229 $generated@@179) $generated@@611)) $generated@@611) ($generated@@140 ($generated@@342 ($generated@@229 $generated@@179) $generated@@611) ($generated@@467 $generated@@612))))
 :pattern ( ($generated@@190 $generated@@611 ($generated@@467 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@67) (= (type $generated@@614) $generated@@179)) ($generated@@190 $generated@@614 ($generated@@137 $generated@@613))) (and (= ($generated@@242 ($generated@@342 $generated@@81 $generated@@614)) $generated@@614) ($generated@@140 ($generated@@342 $generated@@81 $generated@@614) ($generated@@137 $generated@@613))))
 :pattern ( ($generated@@190 $generated@@614 ($generated@@137 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@67) (= (type $generated@@616) $generated@@179)) ($generated@@190 $generated@@616 ($generated@@163 $generated@@615))) (and (= ($generated@@242 ($generated@@342 $generated@@81 $generated@@616)) $generated@@616) ($generated@@140 ($generated@@342 $generated@@81 $generated@@616) ($generated@@163 $generated@@615))))
 :pattern ( ($generated@@190 $generated@@616 ($generated@@163 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@620)))
 (=> (and (and (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@81)) (= (type $generated@@619) ($generated@@69 $generated@@621))) ($generated@@155 ($generated@@86 $generated@@617 $generated@@618 ($generated@@88 ($generated@@85 $generated@@617 $generated@@618) $generated@@619 $generated@@620)))) ($generated@@148 $generated@@617 ($generated@@86 $generated@@617 $generated@@618 ($generated@@88 ($generated@@85 $generated@@617 $generated@@618) $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@86 $generated@@617 $generated@@618 ($generated@@88 ($generated@@85 $generated@@617 $generated@@618) $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@622) ($generated@@80 $generated@@179 $generated@@2)) (= (type $generated@@623) $generated@@67)) (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@622 ($generated@@184 $generated@@623) $generated@@624) (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@179) (< 0 ($generated ($generated@@85 $generated@@622 $generated@@625)))) ($generated@@215 $generated@@625 $generated@@623 $generated@@624))
 :pattern ( ($generated@@85 $generated@@622 $generated@@625))
))))
 :pattern ( ($generated@@78 $generated@@622 ($generated@@184 $generated@@623) $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@170) (= (type $generated@@627) $generated@@67)) (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@155 $generated@@628) (and ($generated@@168 $generated@@626) (exists (($generated@@629 T@U) ) (!  (and (= (type $generated@@629) $generated@@67) ($generated@@78 $generated@@626 ($generated@@169 $generated@@627 $generated@@629) $generated@@628))
 :pattern ( ($generated@@78 $generated@@626 ($generated@@169 $generated@@627 $generated@@629) $generated@@628))
))))) ($generated@@215 ($generated@@177 $generated@@626) $generated@@627 $generated@@628))
 :pattern ( ($generated@@215 ($generated@@177 $generated@@626) $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@170) (= (type $generated@@631) $generated@@67)) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@155 $generated@@632) (and ($generated@@168 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@67) ($generated@@78 $generated@@630 ($generated@@169 $generated@@633 $generated@@631) $generated@@632))
 :pattern ( ($generated@@78 $generated@@630 ($generated@@169 $generated@@633 $generated@@631) $generated@@632))
))))) ($generated@@215 ($generated@@178 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@215 ($generated@@178 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@179) (= (type $generated@@635) $generated@@179)) (= ($generated@@189 ($generated@@211 $generated@@634) ($generated@@211 $generated@@635)) ($generated@@211 ($generated@@189 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@189 ($generated@@211 $generated@@634) ($generated@@211 $generated@@635)))
)))
(assert (forall (($generated@@636 Int) ) (! (= ($generated@@242 ($generated@@8 ($generated@@209 $generated@@636))) ($generated@@211 ($generated@@242 ($generated@@8 $generated@@636))))
 :pattern ( ($generated@@242 ($generated@@8 ($generated@@209 $generated@@636))))
)))
(assert (forall (($generated@@637 T@U) ) (! (= ($generated@@242 ($generated@@211 $generated@@637)) ($generated@@211 ($generated@@242 $generated@@637)))
 :pattern ( ($generated@@242 ($generated@@211 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (! (let (($generated@@639 ($generated@@230 (type $generated@@638))))
 (=> (and (= (type $generated@@638) ($generated@@229 $generated@@639)) (= ($generated@@228 $generated@@638) 0)) (= $generated@@638 ($generated@@227 $generated@@639))))
 :pattern ( ($generated@@228 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (! (let (($generated@@643 (type $generated@@641)))
 (=> (and (and (= (type $generated@@640) ($generated@@80 $generated@@643 $generated@@2)) (= (type $generated@@642) $generated@@2)) (<= 0 ($generated $generated@@642))) (= ($generated@@255 ($generated@@86 $generated@@640 $generated@@641 $generated@@642)) (+ (- ($generated@@255 $generated@@640) ($generated ($generated@@85 $generated@@640 $generated@@641))) ($generated $generated@@642)))))
 :pattern ( ($generated@@255 ($generated@@86 $generated@@640 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@645) $generated@@2)) ($generated@@78 $generated@@645 $generated@@46 $generated@@644))
 :pattern ( ($generated@@78 $generated@@645 $generated@@46 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@647) $generated@@3)) ($generated@@78 $generated@@647 $generated@@47 $generated@@646))
 :pattern ( ($generated@@78 $generated@@647 $generated@@47 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@649) $generated@@4)) ($generated@@78 $generated@@649 $generated@@44 $generated@@648))
 :pattern ( ($generated@@78 $generated@@649 $generated@@44 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@651) $generated@@423)) ($generated@@78 $generated@@651 $generated@@45 $generated@@650))
 :pattern ( ($generated@@78 $generated@@651 $generated@@45 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@653) $generated@@179)) ($generated@@78 $generated@@653 $generated@@48 $generated@@652))
 :pattern ( ($generated@@78 $generated@@653 $generated@@48 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@229 $generated@@179)) (= (type $generated@@655) $generated@@67)) (= ($generated@@140 $generated@@654 ($generated@@467 $generated@@655)) (forall (($generated@@656 Int) ) (!  (=> (and (<= 0 $generated@@656) (< $generated@@656 ($generated@@228 $generated@@654))) ($generated@@190 ($generated@@468 $generated@@654 $generated@@656) $generated@@655))
 :pattern ( ($generated@@468 $generated@@654 $generated@@656))
))))
 :pattern ( ($generated@@140 $generated@@654 ($generated@@467 $generated@@655)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 Int) ) (!  (=> (= (type $generated@@658) ($generated@@229 $generated@@179)) (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@228 $generated@@658))) (< ($generated@@515 ($generated@@342 $generated@@170 ($generated@@468 $generated@@658 $generated@@659))) ($generated@@657 $generated@@658))))
 :pattern ( ($generated@@515 ($generated@@342 $generated@@170 ($generated@@468 $generated@@658 $generated@@659))))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@267 $generated@@179 $generated@@179)) (= (type $generated@@661) $generated@@67)) (= (type $generated@@662) $generated@@67)) ($generated@@140 $generated@@660 ($generated@@370 $generated@@661 $generated@@662))) (and (and ($generated@@140 ($generated@@265 $generated@@660) ($generated@@199 $generated@@661)) ($generated@@140 ($generated@@310 $generated@@660) ($generated@@199 $generated@@662))) ($generated@@140 ($generated@@341 $generated@@660) ($generated@@199 ($generated@@169 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@140 $generated@@660 ($generated@@370 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@285 $generated@@179 $generated@@179)) (= (type $generated@@664) $generated@@67)) (= (type $generated@@665) $generated@@67)) ($generated@@140 $generated@@663 ($generated@@378 $generated@@664 $generated@@665))) (and (and ($generated@@140 ($generated@@283 $generated@@663) ($generated@@204 $generated@@664)) ($generated@@140 ($generated@@321 $generated@@663) ($generated@@204 $generated@@665))) ($generated@@140 ($generated@@352 $generated@@663) ($generated@@204 ($generated@@169 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@140 $generated@@663 ($generated@@378 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@2) ($generated@@140 $generated@@666 $generated@@46))
 :pattern ( ($generated@@140 $generated@@666 $generated@@46))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@3) ($generated@@140 $generated@@667 $generated@@47))
 :pattern ( ($generated@@140 $generated@@667 $generated@@47))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@4) ($generated@@140 $generated@@668 $generated@@44))
 :pattern ( ($generated@@140 $generated@@668 $generated@@44))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@423) ($generated@@140 $generated@@669 $generated@@45))
 :pattern ( ($generated@@140 $generated@@669 $generated@@45))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@179) ($generated@@140 $generated@@670 $generated@@48))
 :pattern ( ($generated@@140 $generated@@670 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () Bool)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () Bool)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Bool)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 (T@U) Bool)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@679) $generated@@81) (= (type $generated@@690) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@680) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@681) ($generated@@538 $generated@@81 $generated@@4))) (= (type $generated@@683) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@689) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@696) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 85) (let (($generated@@702 true))
(let (($generated@@703  (=> (and (< $generated@@671 $generated@@672) (= (ControlFlow 0 72) 70)) $generated@@702)))
(let (($generated@@704  (=> (and (<= $generated@@672 $generated@@671) (= (ControlFlow 0 71) 70)) $generated@@702)))
(let (($generated@@705  (=> (and (<= ($generated@@209 1) $generated@@672) (<= $generated@@672 $generated@@671)) (and (=> (= (ControlFlow 0 73) 71) $generated@@704) (=> (= (ControlFlow 0 73) 72) $generated@@703)))))
(let (($generated@@706  (=> (and (< $generated@@672 ($generated@@209 1)) (= (ControlFlow 0 75) 73)) $generated@@705)))
(let (($generated@@707  (=> (and (<= ($generated@@209 1) $generated@@672) (= (ControlFlow 0 74) 73)) $generated@@705)))
(let (($generated@@708  (=> (not $generated@@673) (and (=> (= (ControlFlow 0 76) 74) $generated@@707) (=> (= (ControlFlow 0 76) 75) $generated@@706)))))
(let (($generated@@709 true))
(let (($generated@@710  (=> (and (< (+ $generated@@671 1) $generated@@674) (= (ControlFlow 0 59) 57)) $generated@@709)))
(let (($generated@@711  (=> (and (<= $generated@@674 (+ $generated@@671 1)) (= (ControlFlow 0 58) 57)) $generated@@709)))
(let (($generated@@712  (=> (and (<= (+ $generated@@672 1) $generated@@674) (<= $generated@@674 (+ $generated@@671 1))) (and (=> (= (ControlFlow 0 60) 58) $generated@@711) (=> (= (ControlFlow 0 60) 59) $generated@@710)))))
(let (($generated@@713  (=> (and (< $generated@@674 (+ $generated@@672 1)) (= (ControlFlow 0 62) 60)) $generated@@712)))
(let (($generated@@714  (=> (and (<= (+ $generated@@672 1) $generated@@674) (= (ControlFlow 0 61) 60)) $generated@@712)))
(let (($generated@@715  (=> (not $generated@@675) (and (=> (= (ControlFlow 0 63) 61) $generated@@714) (=> (= (ControlFlow 0 63) 62) $generated@@713)))))
(let (($generated@@716 true))
(let (($generated@@717  (=> (and (< $generated@@672 $generated@@676) (= (ControlFlow 0 46) 44)) $generated@@716)))
(let (($generated@@718  (=> (and (<= $generated@@676 $generated@@672) (= (ControlFlow 0 45) 44)) $generated@@716)))
(let (($generated@@719  (=> (and (<= $generated@@672 $generated@@676) (<= $generated@@676 $generated@@671)) (and (=> (= (ControlFlow 0 47) 45) $generated@@718) (=> (= (ControlFlow 0 47) 46) $generated@@717)))))
(let (($generated@@720  (=> (and (< $generated@@676 $generated@@672) (= (ControlFlow 0 49) 47)) $generated@@719)))
(let (($generated@@721  (=> (and (<= $generated@@672 $generated@@676) (= (ControlFlow 0 48) 47)) $generated@@719)))
(let (($generated@@722  (=> (not $generated@@677) (and (=> (= (ControlFlow 0 50) 48) $generated@@721) (=> (= (ControlFlow 0 50) 49) $generated@@720)))))
(let (($generated@@723  (=> (and (not (= $generated@@676 $generated@@672)) (= $generated@@678 (ite (<= $generated@@676 $generated@@672) (- $generated@@672 $generated@@676) (- $generated@@676 $generated@@672)))) (and (=> (= (ControlFlow 0 19) (- 0 42)) (not (= $generated@@679 $generated@@138))) (=> (not (= $generated@@679 $generated@@138)) (and (=> (= (ControlFlow 0 19) (- 0 41)) (and (<= 0 (- $generated@@672 1)) (< (- $generated@@672 1) ($generated@@136 $generated@@679)))) (and (=> (= (ControlFlow 0 19) (- 0 40)) (and (<= 0 (- $generated@@672 1)) (< (- $generated@@672 1) ($generated@@145 $generated@@679)))) (=> (not (= ($generated ($generated@@342 $generated@@2 ($generated@@87 ($generated@@85 $generated@@680 $generated@@679) ($generated@@235 ($generated@@392 (- $generated@@672 1)) (- $generated@@672 1))))) 0)) (and (=> (= (ControlFlow 0 19) (- 0 39)) (not (= $generated@@679 $generated@@138))) (=> (not (= $generated@@679 $generated@@138)) (and (=> (= (ControlFlow 0 19) (- 0 38)) (and (<= 0 (- $generated@@674 1)) (< (- $generated@@674 1) ($generated@@136 $generated@@679)))) (=> (and (<= 0 (- $generated@@674 1)) (< (- $generated@@674 1) ($generated@@136 $generated@@679))) (and (=> (= (ControlFlow 0 19) (- 0 37)) (and (<= 0 (- $generated@@676 1)) (< (- $generated@@676 1) ($generated@@145 $generated@@679)))) (=> (and (<= 0 (- $generated@@676 1)) (< (- $generated@@676 1) ($generated@@145 $generated@@679))) (and (=> (= (ControlFlow 0 19) (- 0 36)) ($generated@@0 ($generated@@536 $generated@@681 $generated@@679 ($generated@@235 ($generated@@392 (- $generated@@674 1)) (- $generated@@676 1))))) (=> ($generated@@0 ($generated@@536 $generated@@681 $generated@@679 ($generated@@235 ($generated@@392 (- $generated@@674 1)) (- $generated@@676 1)))) (and (=> (= (ControlFlow 0 19) (- 0 35)) (not (= $generated@@679 $generated@@138))) (=> (not (= $generated@@679 $generated@@138)) (and (=> (= (ControlFlow 0 19) (- 0 34)) (and (<= 0 (- $generated@@674 1)) (< (- $generated@@674 1) ($generated@@136 $generated@@679)))) (=> (and (<= 0 (- $generated@@674 1)) (< (- $generated@@674 1) ($generated@@136 $generated@@679))) (and (=> (= (ControlFlow 0 19) (- 0 33)) (and (<= 0 (- $generated@@676 1)) (< (- $generated@@676 1) ($generated@@145 $generated@@679)))) (=> (and (<= 0 (- $generated@@676 1)) (< (- $generated@@676 1) ($generated@@145 $generated@@679))) (and (=> (= (ControlFlow 0 19) (- 0 32)) (not (= $generated@@679 $generated@@138))) (=> (not (= $generated@@679 $generated@@138)) (and (=> (= (ControlFlow 0 19) (- 0 31)) (and (<= 0 (- $generated@@674 1)) (< (- $generated@@674 1) ($generated@@136 $generated@@679)))) (=> (and (<= 0 (- $generated@@674 1)) (< (- $generated@@674 1) ($generated@@136 $generated@@679))) (and (=> (= (ControlFlow 0 19) (- 0 30)) (and (<= 0 (- $generated@@672 1)) (< (- $generated@@672 1) ($generated@@145 $generated@@679)))) (=> (and (<= 0 (- $generated@@672 1)) (< (- $generated@@672 1) ($generated@@145 $generated@@679))) (and (=> (= (ControlFlow 0 19) (- 0 29)) (not (= $generated@@679 $generated@@138))) (=> (not (= $generated@@679 $generated@@138)) (and (=> (= (ControlFlow 0 19) (- 0 28)) (and (<= 0 (- $generated@@672 1)) (< (- $generated@@672 1) ($generated@@136 $generated@@679)))) (=> (and (<= 0 (- $generated@@672 1)) (< (- $generated@@672 1) ($generated@@136 $generated@@679))) (and (=> (= (ControlFlow 0 19) (- 0 27)) (and (<= 0 (- $generated@@672 1)) (< (- $generated@@672 1) ($generated@@145 $generated@@679)))) (=> (and (<= 0 (- $generated@@672 1)) (< (- $generated@@672 1) ($generated@@145 $generated@@679))) (and (=> (= (ControlFlow 0 19) (- 0 26)) (not (= ($generated ($generated@@342 $generated@@2 ($generated@@87 ($generated@@85 $generated@@680 $generated@@679) ($generated@@235 ($generated@@392 (- $generated@@672 1)) (- $generated@@672 1))))) 0))) (=> (not (= ($generated ($generated@@342 $generated@@2 ($generated@@87 ($generated@@85 $generated@@680 $generated@@679) ($generated@@235 ($generated@@392 (- $generated@@672 1)) (- $generated@@672 1))))) 0)) (and (=> (= (ControlFlow 0 19) (- 0 25)) (not (= $generated@@679 $generated@@138))) (=> (not (= $generated@@679 $generated@@138)) (and (=> (= (ControlFlow 0 19) (- 0 24)) (and (<= 0 (- $generated@@672 1)) (< (- $generated@@672 1) ($generated@@136 $generated@@679)))) (=> (and (<= 0 (- $generated@@672 1)) (< (- $generated@@672 1) ($generated@@136 $generated@@679))) (and (=> (= (ControlFlow 0 19) (- 0 23)) (and (<= 0 (- $generated@@676 1)) (< (- $generated@@676 1) ($generated@@145 $generated@@679)))) (=> (and (<= 0 (- $generated@@676 1)) (< (- $generated@@676 1) ($generated@@145 $generated@@679))) (=> (and (and (= $generated@@682 (- ($generated ($generated@@342 $generated@@2 ($generated@@87 ($generated@@85 $generated@@680 $generated@@679) ($generated@@235 ($generated@@392 (- $generated@@674 1)) (- $generated@@676 1))))) ($generated@@600 ($generated@@386 ($generated ($generated@@342 $generated@@2 ($generated@@87 ($generated@@85 $generated@@680 $generated@@679) ($generated@@235 ($generated@@392 (- $generated@@674 1)) (- $generated@@672 1))))) ($generated ($generated@@342 $generated@@2 ($generated@@87 ($generated@@85 $generated@@680 $generated@@679) ($generated@@235 ($generated@@392 (- $generated@@672 1)) (- $generated@@672 1)))))) ($generated ($generated@@342 $generated@@2 ($generated@@87 ($generated@@85 $generated@@680 $generated@@679) ($generated@@235 ($generated@@392 (- $generated@@672 1)) (- $generated@@676 1)))))))) (= $generated@@683 ($generated@@86 $generated@@680 $generated@@679 ($generated@@88 ($generated@@85 $generated@@680 $generated@@679) ($generated@@235 ($generated@@392 (- $generated@@674 1)) (- $generated@@676 1)) ($generated@@242 ($generated@@8 $generated@@682)))))) (and ($generated@@155 $generated@@683) (= $generated@@684 (- $generated@@676 1)))) (and (=> (= (ControlFlow 0 19) (- 0 22)) (or (<= 0 $generated@@678) (= (ite (<= $generated@@684 $generated@@672) (- $generated@@672 $generated@@684) (- $generated@@684 $generated@@672)) $generated@@678))) (=> (or (<= 0 $generated@@678) (= (ite (<= $generated@@684 $generated@@672) (- $generated@@672 $generated@@684) (- $generated@@684 $generated@@672)) $generated@@678)) (and (=> (= (ControlFlow 0 19) (- 0 21)) (< (ite (<= $generated@@684 $generated@@672) (- $generated@@672 $generated@@684) (- $generated@@684 $generated@@672)) $generated@@678)) (=> (< (ite (<= $generated@@684 $generated@@672) (- $generated@@672 $generated@@684) (- $generated@@684 $generated@@672)) $generated@@678) (and (=> (= (ControlFlow 0 19) (- 0 20)) (=> $generated@@677 (<= $generated@@672 $generated@@684))) (=> (=> $generated@@677 (<= $generated@@672 $generated@@684)) (=> (= (ControlFlow 0 19) (- 0 18)) (=> $generated@@677 (<= $generated@@684 $generated@@671))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@724  (=> (and (= $generated@@676 $generated@@672) (= $generated@@685 (+ $generated@@674 1))) (and (=> (= (ControlFlow 0 14) (- 0 17)) (or (<= 0 $generated@@686) (= (ite (<= $generated@@685 (+ $generated@@671 1)) (- (+ $generated@@671 1) $generated@@685) (- $generated@@685 (+ $generated@@671 1))) $generated@@686))) (=> (or (<= 0 $generated@@686) (= (ite (<= $generated@@685 (+ $generated@@671 1)) (- (+ $generated@@671 1) $generated@@685) (- $generated@@685 (+ $generated@@671 1))) $generated@@686)) (and (=> (= (ControlFlow 0 14) (- 0 16)) (< (ite (<= $generated@@685 (+ $generated@@671 1)) (- (+ $generated@@671 1) $generated@@685) (- $generated@@685 (+ $generated@@671 1))) $generated@@686)) (=> (< (ite (<= $generated@@685 (+ $generated@@671 1)) (- (+ $generated@@671 1) $generated@@685) (- $generated@@685 (+ $generated@@671 1))) $generated@@686) (and (=> (= (ControlFlow 0 14) (- 0 15)) (=> $generated@@675 (<= (+ $generated@@672 1) $generated@@685))) (=> (=> $generated@@675 (<= (+ $generated@@672 1) $generated@@685)) (=> (= (ControlFlow 0 14) (- 0 13)) (=> $generated@@675 (<= $generated@@685 (+ $generated@@671 1)))))))))))))
(let (($generated@@725  (=> $generated@@677 (and (=> (= (ControlFlow 0 43) 14) $generated@@724) (=> (= (ControlFlow 0 43) 19) $generated@@723)))))
(let (($generated@@726  (and (=> (= (ControlFlow 0 51) 50) $generated@@722) (=> (= (ControlFlow 0 51) 43) $generated@@725))))
(let (($generated@@727 true))
(let (($generated@@728  (=> (and ($generated@@155 $generated@@680) ($generated@@687 $generated@@680)) (=> (and (and (and (and (and (and (not false) (<= 1 $generated@@672)) (<= 0 $generated@@688)) $generated@@673) (<= 2 $generated@@674)) $generated@@675) (and (and (and (=> $generated@@677 true) (=> $generated@@677 (<= $generated@@672 $generated@@676))) (and (=> $generated@@677 (<= $generated@@676 $generated@@671)) (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) $generated@@81) (=> (and (not (= $generated@@729 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@689 $generated@@729) $generated@@60))) (or (= ($generated@@85 $generated@@680 $generated@@729) ($generated@@85 $generated@@690 $generated@@729)) (= $generated@@729 $generated@@679))))
 :pattern ( ($generated@@85 $generated@@680 $generated@@729))
)))) (and (and ($generated@@148 $generated@@690 $generated@@680) (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (! (let (($generated@@732 ($generated@@70 (type $generated@@731))))
 (=> (and (and (= (type $generated@@730) $generated@@81) (= (type $generated@@731) ($generated@@69 $generated@@732))) (and (not (= $generated@@730 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@690 $generated@@730) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@680 $generated@@730) $generated@@731) ($generated@@87 ($generated@@85 $generated@@690 $generated@@730) $generated@@731)) ($generated@@0 ($generated@@536 $generated@@681 $generated@@730 $generated@@731)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@680 $generated@@730) $generated@@731))
))) (and (<= (ite (<= $generated@@676 $generated@@672) (- $generated@@672 $generated@@676) (- $generated@@676 $generated@@672)) $generated@@691) (=> (= (ite (<= $generated@@676 $generated@@672) (- $generated@@672 $generated@@676) (- $generated@@676 $generated@@672)) $generated@@691) true))))) (and (=> (= (ControlFlow 0 52) 12) $generated@@727) (=> (= (ControlFlow 0 52) 51) $generated@@726))))))
(let (($generated@@733  (=> (not (= $generated@@674 (+ $generated@@671 1))) (=> (and (= $generated@@686 (ite (<= $generated@@674 (+ $generated@@671 1)) (- (+ $generated@@671 1) $generated@@674) (- $generated@@674 (+ $generated@@671 1)))) (= $generated@@691 (ite (<= $generated@@671 $generated@@672) (- $generated@@672 $generated@@671) (- $generated@@671 $generated@@672)))) (and (=> (= (ControlFlow 0 53) (- 0 55)) (=> $generated@@677 (<= $generated@@672 $generated@@671))) (=> (=> $generated@@677 (<= $generated@@672 $generated@@671)) (and (=> (= (ControlFlow 0 53) (- 0 54)) (=> $generated@@677 (<= $generated@@671 $generated@@671))) (=> (=> $generated@@677 (<= $generated@@671 $generated@@671)) (=> (= (ControlFlow 0 53) 52) $generated@@728)))))))))
(let (($generated@@734  (=> (and (= $generated@@674 (+ $generated@@671 1)) (= $generated@@692 (+ $generated@@672 1))) (and (=> (= (ControlFlow 0 5) (- 0 11)) (not (= $generated@@679 $generated@@138))) (=> (not (= $generated@@679 $generated@@138)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (and (<= 0 (- $generated@@692 1)) (< (- $generated@@692 1) ($generated@@136 $generated@@679)))) (=> (and (<= 0 (- $generated@@692 1)) (< (- $generated@@692 1) ($generated@@136 $generated@@679))) (and (=> (= (ControlFlow 0 5) (- 0 9)) (and (<= 0 (- $generated@@692 1)) (< (- $generated@@692 1) ($generated@@145 $generated@@679)))) (=> (and (<= 0 (- $generated@@692 1)) (< (- $generated@@692 1) ($generated@@145 $generated@@679))) (=> (= $generated@@693 ($generated@@600 $generated@@694 ($generated ($generated@@342 $generated@@2 ($generated@@87 ($generated@@85 $generated@@690 $generated@@679) ($generated@@235 ($generated@@392 (- $generated@@692 1)) (- $generated@@692 1))))))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (<= 0 $generated@@695) (= (ite (<= $generated@@692 $generated@@671) (- $generated@@671 $generated@@692) (- $generated@@692 $generated@@671)) $generated@@695))) (=> (or (<= 0 $generated@@695) (= (ite (<= $generated@@692 $generated@@671) (- $generated@@671 $generated@@692) (- $generated@@692 $generated@@671)) $generated@@695)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (< (ite (<= $generated@@692 $generated@@671) (- $generated@@671 $generated@@692) (- $generated@@692 $generated@@671)) $generated@@695)) (=> (< (ite (<= $generated@@692 $generated@@671) (- $generated@@671 $generated@@692) (- $generated@@692 $generated@@671)) $generated@@695) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@673 (<= ($generated@@209 1) $generated@@692))) (=> (=> $generated@@673 (<= ($generated@@209 1) $generated@@692)) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@673 (<= $generated@@692 $generated@@671)))))))))))))))))))
(let (($generated@@735  (=> $generated@@675 (and (=> (= (ControlFlow 0 56) 5) $generated@@734) (=> (= (ControlFlow 0 56) 53) $generated@@733)))))
(let (($generated@@736  (and (=> (= (ControlFlow 0 64) 63) $generated@@715) (=> (= (ControlFlow 0 64) 56) $generated@@735))))
(let (($generated@@737 true))
(let (($generated@@738  (=> (and ($generated@@155 $generated@@690) ($generated@@687 $generated@@690)) (=> (and (and (and (and (and (not false) (<= 1 $generated@@672)) (<= 0 $generated@@688)) $generated@@673) (<= 2 $generated@@674)) (and (and (and (=> $generated@@675 true) (=> $generated@@675 (<= (+ $generated@@672 1) $generated@@674))) (and (=> $generated@@675 (<= $generated@@674 (+ $generated@@671 1))) (forall (($generated@@739 T@U) ) (!  (=> (= (type $generated@@739) $generated@@81) (=> (and (not (= $generated@@739 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@689 $generated@@739) $generated@@60))) (or (= ($generated@@85 $generated@@690 $generated@@739) ($generated@@85 $generated@@696 $generated@@739)) (= $generated@@739 $generated@@679))))
 :pattern ( ($generated@@85 $generated@@690 $generated@@739))
)))) (and (and ($generated@@148 $generated@@696 $generated@@690) (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (! (let (($generated@@742 ($generated@@70 (type $generated@@741))))
 (=> (and (and (= (type $generated@@740) $generated@@81) (= (type $generated@@741) ($generated@@69 $generated@@742))) (and (not (= $generated@@740 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@696 $generated@@740) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@690 $generated@@740) $generated@@741) ($generated@@87 ($generated@@85 $generated@@696 $generated@@740) $generated@@741)) ($generated@@0 ($generated@@536 $generated@@681 $generated@@740 $generated@@741)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@690 $generated@@740) $generated@@741))
))) (and (<= (ite (<= $generated@@674 (+ $generated@@671 1)) (- (+ $generated@@671 1) $generated@@674) (- $generated@@674 (+ $generated@@671 1))) $generated@@697) (=> (= (ite (<= $generated@@674 (+ $generated@@671 1)) (- (+ $generated@@671 1) $generated@@674) (- $generated@@674 (+ $generated@@671 1))) $generated@@697) true))))) (and (=> (= (ControlFlow 0 65) 3) $generated@@737) (=> (= (ControlFlow 0 65) 64) $generated@@736))))))
(let (($generated@@743  (=> (and (and (not (= $generated@@672 $generated@@671)) (= $generated@@695 (ite (<= $generated@@672 $generated@@671) (- $generated@@671 $generated@@672) (- $generated@@672 $generated@@671)))) (and (= $generated@@698 (+ $generated@@672 1)) (= $generated@@697 (ite (<= $generated@@698 (+ $generated@@671 1)) (- (+ $generated@@671 1) $generated@@698) (- $generated@@698 (+ $generated@@671 1)))))) (and (=> (= (ControlFlow 0 66) (- 0 68)) (=> $generated@@675 (<= (+ $generated@@672 1) $generated@@698))) (=> (=> $generated@@675 (<= (+ $generated@@672 1) $generated@@698)) (and (=> (= (ControlFlow 0 66) (- 0 67)) (=> $generated@@675 (<= $generated@@698 (+ $generated@@671 1)))) (=> (=> $generated@@675 (<= $generated@@698 (+ $generated@@671 1))) (=> (= (ControlFlow 0 66) 65) $generated@@738))))))))
(let (($generated@@744 true))
(let (($generated@@745  (=> $generated@@673 (and (=> (= (ControlFlow 0 69) 2) $generated@@744) (=> (= (ControlFlow 0 69) 66) $generated@@743)))))
(let (($generated@@746  (and (=> (= (ControlFlow 0 77) 76) $generated@@708) (=> (= (ControlFlow 0 77) 69) $generated@@745))))
(let (($generated@@747 true))
(let (($generated@@748  (=> (and ($generated@@155 $generated@@696) ($generated@@687 $generated@@696)) (=> (and (and (not false) (<= 1 $generated@@672)) (<= 0 $generated@@688)) (=> (and (and (and (=> $generated@@673 true) (=> $generated@@673 (<= ($generated@@209 1) $generated@@672))) (and (=> $generated@@673 (<= $generated@@672 $generated@@671)) (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) $generated@@81) (=> (and (not (= $generated@@749 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@689 $generated@@749) $generated@@60))) (or (= ($generated@@85 $generated@@696 $generated@@749) ($generated@@85 $generated@@689 $generated@@749)) (= $generated@@749 $generated@@679))))
 :pattern ( ($generated@@85 $generated@@696 $generated@@749))
)))) (and (and ($generated@@148 $generated@@689 $generated@@696) (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (! (let (($generated@@752 ($generated@@70 (type $generated@@751))))
 (=> (and (and (= (type $generated@@750) $generated@@81) (= (type $generated@@751) ($generated@@69 $generated@@752))) (and (not (= $generated@@750 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@689 $generated@@750) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@696 $generated@@750) $generated@@751) ($generated@@87 ($generated@@85 $generated@@689 $generated@@750) $generated@@751)) ($generated@@0 ($generated@@536 $generated@@681 $generated@@750 $generated@@751)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@696 $generated@@750) $generated@@751))
))) (and (<= (ite (<= $generated@@672 $generated@@671) (- $generated@@671 $generated@@672) (- $generated@@672 $generated@@671)) $generated@@688) (=> (= (ite (<= $generated@@672 $generated@@671) (- $generated@@671 $generated@@672) (- $generated@@672 $generated@@671)) $generated@@688) true)))) (and (=> (= (ControlFlow 0 78) 1) $generated@@747) (=> (= (ControlFlow 0 78) 77) $generated@@746)))))))
(let (($generated@@753  (=> (= $generated@@681 ($generated@@537 $generated@@138 $generated@@689 $generated@@60 $generated@@679)) (and (=> (= (ControlFlow 0 79) (- 0 84)) (not (= $generated@@679 $generated@@138))) (=> (not (= $generated@@679 $generated@@138)) (and (=> (= (ControlFlow 0 79) (- 0 83)) (and (<= 0 ($generated@@209 (- 1 1))) (< ($generated@@209 (- 1 1)) ($generated@@136 $generated@@679)))) (=> (and (<= 0 ($generated@@209 (- 1 1))) (< ($generated@@209 (- 1 1)) ($generated@@136 $generated@@679))) (and (=> (= (ControlFlow 0 79) (- 0 82)) (and (<= 0 ($generated@@209 (- 1 1))) (< ($generated@@209 (- 1 1)) ($generated@@145 $generated@@679)))) (=> (and (<= 0 ($generated@@209 (- 1 1))) (< ($generated@@209 (- 1 1)) ($generated@@145 $generated@@679))) (=> (= $generated@@699 ($generated ($generated@@342 $generated@@2 ($generated@@87 ($generated@@85 $generated@@689 $generated@@679) ($generated@@235 ($generated@@392 ($generated@@209 (- 1 1))) ($generated@@209 (- 1 1))))))) (=> (and (= $generated@@700 ($generated@@209 1)) (= $generated@@688 (ite (<= $generated@@700 $generated@@671) (- $generated@@671 $generated@@700) (- $generated@@700 $generated@@671)))) (and (=> (= (ControlFlow 0 79) (- 0 81)) (=> $generated@@673 (<= ($generated@@209 1) $generated@@700))) (=> (=> $generated@@673 (<= ($generated@@209 1) $generated@@700)) (and (=> (= (ControlFlow 0 79) (- 0 80)) (=> $generated@@673 (<= $generated@@700 $generated@@671))) (=> (=> $generated@@673 (<= $generated@@700 $generated@@671)) (=> (= (ControlFlow 0 79) 78) $generated@@748))))))))))))))))
(let (($generated@@754  (=> (and ($generated@@155 $generated@@689) ($generated@@687 $generated@@689)) (=> (and (and (and ($generated@@140 $generated@@679 ($generated@@163 $generated@@46)) ($generated@@78 $generated@@679 ($generated@@163 $generated@@46) $generated@@689)) (= 1 $generated@@701)) (and (and (<= ($generated@@209 1) $generated@@671) (= $generated@@671 ($generated@@136 $generated@@679))) (and (= $generated@@671 ($generated@@145 $generated@@679)) (= (ControlFlow 0 85) 79)))) $generated@@753))))
$generated@@754))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
